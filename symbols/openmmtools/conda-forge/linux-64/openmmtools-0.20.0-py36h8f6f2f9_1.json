{
 "*": {
  "data": {
   "imports": [
    "openeye.oechem",
    "openeye.oeomega",
    "openeye.oequacpac"
   ]
  },
  "type": "star-import"
 },
 "openmmtools": {
  "data": {
   "symbols_in_volume": [
    "get_versions",
    "openmmtools.versions"
   ]
  },
  "type": "module"
 },
 "openmmtools.__git_revision__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "openmmtools.__version__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "openmmtools._version": {
  "data": {},
  "type": "module"
 },
 "openmmtools._version.get_versions": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "openmmtools._version.json",
    "openmmtools._version.version_json"
   ]
  },
  "type": "function"
 },
 "openmmtools._version.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "openmmtools._version.version_json": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "openmmtools.alchemy": {
  "data": {
   "shadows": "openmmtools.alchemy"
  },
  "type": "import"
 },
 "openmmtools.alchemy.AbsoluteAlchemicalFactory": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.alchemy.AbsoluteAlchemicalFactory.__init__": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "simtk.unit.angstroms"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AbsoluteAlchemicalFactory._add_alchemical_forces": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "min",
    "range",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AbsoluteAlchemicalFactory._alchemically_modify_AmoebaMultipoleForce": {
  "data": {
   "lineno": 2034,
   "symbols_in_volume": [
    "Exception",
    "NotImplementedError",
    "len"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AbsoluteAlchemicalFactory._alchemically_modify_AmoebaVdwForce": {
  "data": {
   "lineno": 2041,
   "symbols_in_volume": [
    "NotImplementedError",
    "len",
    "range",
    "simtk.openmm.CustomNonbondedForce",
    "simtk.openmm.CustomNonbondedForce.CutoffPeriodic"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AbsoluteAlchemicalFactory._alchemically_modify_CustomGBForce": {
  "data": {
   "lineno": 2186,
   "symbols_in_volume": [
    "NotImplementedError",
    "len",
    "list",
    "openmmtools.alchemy.copy",
    "range",
    "simtk.openmm.CustomGBForce",
    "simtk.openmm.CustomGBForce.SingleParticle"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AbsoluteAlchemicalFactory._alchemically_modify_GBSAOBCForce": {
  "data": {
   "lineno": 2106,
   "symbols_in_volume": [
    "NotImplementedError",
    "len",
    "range",
    "simtk.openmm.CustomGBForce",
    "simtk.openmm.CustomGBForce.ParticlePairNoExclusions",
    "simtk.openmm.CustomGBForce.SingleParticle",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AbsoluteAlchemicalFactory._alchemically_modify_HarmonicAngleForce": {
  "data": {
   "lineno": 1192,
   "symbols_in_volume": [
    "classmethod",
    "len",
    "openmmtools.alchemy.copy",
    "range",
    "set",
    "simtk.openmm.CustomAngleForce",
    "simtk.openmm.HarmonicAngleForce",
    "sorted"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AbsoluteAlchemicalFactory._alchemically_modify_HarmonicBondForce": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": [
    "classmethod",
    "len",
    "openmmtools.alchemy.copy",
    "range",
    "set",
    "simtk.openmm.CustomBondForce",
    "simtk.openmm.HarmonicBondForce",
    "sorted"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AbsoluteAlchemicalFactory._alchemically_modify_NonbondedForce": {
  "data": {
   "lineno": 1533,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "add_global_parameters",
    "create_force",
    "len",
    "openmmtools.alchemy.copy",
    "openmmtools.alchemy.itertools",
    "openmmtools.alchemy.logger",
    "range",
    "set",
    "simtk.openmm.CustomBondForce",
    "simtk.openmm.CustomNonbondedForce",
    "simtk.openmm.CustomNonbondedForce.CutoffPeriodic",
    "simtk.openmm.NonbondedForce.CutoffNonPeriodic",
    "simtk.openmm.NonbondedForce.CutoffPeriodic",
    "simtk.openmm.NonbondedForce.Ewald",
    "simtk.openmm.NonbondedForce.PME",
    "simtk.unit.angstrom",
    "simtk.unit.md_unit_system",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AbsoluteAlchemicalFactory._alchemically_modify_NonbondedForce.add_global_parameters": {
  "data": {
   "lineno": 2003
  },
  "type": "function"
 },
 "openmmtools.alchemy.AbsoluteAlchemicalFactory._alchemically_modify_NonbondedForce.create_force": {
  "data": {
   "lineno": 1746,
   "symbols_in_volume": [
    "force_cls"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AbsoluteAlchemicalFactory._alchemically_modify_PeriodicTorsionForce": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "classmethod",
    "len",
    "openmmtools.alchemy.copy",
    "range",
    "set",
    "simtk.openmm.CustomTorsionForce",
    "simtk.openmm.PeriodicTorsionForce",
    "sorted"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AbsoluteAlchemicalFactory._are_straddling_noninteracting_regions": {
  "data": {
   "lineno": 1079,
   "symbols_in_volume": [
    "enumerate",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AbsoluteAlchemicalFactory._build_alchemical_angle_list": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "list",
    "range",
    "set",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AbsoluteAlchemicalFactory._build_alchemical_bond_list": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "list",
    "range",
    "set",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AbsoluteAlchemicalFactory._build_alchemical_torsion_list": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "classmethod",
    "is_proper_torsion",
    "list",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AbsoluteAlchemicalFactory._build_alchemical_torsion_list.is_bonded": {
  "data": {
   "lineno": 963
  },
  "type": "function"
 },
 "openmmtools.alchemy.AbsoluteAlchemicalFactory._build_alchemical_torsion_list.is_proper_torsion": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": [
    "is_bonded"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AbsoluteAlchemicalFactory._find_force_components": {
  "data": {
   "lineno": 2309,
   "symbols_in_volume": [
    "add_label",
    "check_energy_expression",
    "check_parameter",
    "enumerate",
    "isinstance",
    "len",
    "simtk.openmm.CustomAngleForce",
    "simtk.openmm.CustomBondForce",
    "simtk.openmm.CustomGBForce",
    "simtk.openmm.CustomNonbondedForce",
    "simtk.openmm.CustomTorsionForce",
    "sorted",
    "staticmethod",
    "zip"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AbsoluteAlchemicalFactory._find_force_components.add_label": {
  "data": {
   "lineno": 2312
  },
  "type": "function"
 },
 "openmmtools.alchemy.AbsoluteAlchemicalFactory._find_force_components.check_energy_expression": {
  "data": {
   "lineno": 2324,
   "symbols_in_volume": [
    "AttributeError",
    "openmmtools.alchemy.re",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AbsoluteAlchemicalFactory._find_force_components.check_parameter": {
  "data": {
   "lineno": 2316,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AbsoluteAlchemicalFactory._get_electrostatics_energy_expressions": {
  "data": {
   "lineno": 1386,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "openmmtools.constants.ONE_4PI_EPS0",
    "simtk.openmm.NonbondedForce.CutoffNonPeriodic",
    "simtk.openmm.NonbondedForce.CutoffPeriodic",
    "simtk.openmm.NonbondedForce.Ewald",
    "simtk.openmm.NonbondedForce.NoCutoff",
    "simtk.openmm.NonbondedForce.PME"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AbsoluteAlchemicalFactory._get_pme_direct_space_unique_expression": {
  "data": {
   "lineno": 1504,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.sqrt",
    "simtk.unit.md_unit_system"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AbsoluteAlchemicalFactory._get_reaction_field_unique_expression": {
  "data": {
   "lineno": 1467,
   "symbols_in_volume": [
    "ValueError",
    "simtk.unit.md_unit_system",
    "simtk.unit.nanometers"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AbsoluteAlchemicalFactory._get_sterics_energy_expressions": {
  "data": {
   "lineno": 1350,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AbsoluteAlchemicalFactory._resolve_alchemical_region": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "ValueError",
    "builder_function",
    "classmethod",
    "frozenset",
    "getattr",
    "isinstance",
    "len",
    "numpy.ndarray",
    "openmmtools.alchemy.AlchemicalRegion",
    "openmmtools.alchemy.collections",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AbsoluteAlchemicalFactory._tabulate_bonds": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "range",
    "set",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AbsoluteAlchemicalFactory.create_alchemical_system": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "NotImplementedError",
    "ValueError",
    "alchemical_force_creator_func",
    "enumerate",
    "frozenset",
    "getattr",
    "isinstance",
    "len",
    "openmmtools.alchemy.AlchemicalRegion",
    "openmmtools.alchemy.copy",
    "openmmtools.alchemy.logger",
    "openmmtools.forcefactories.replace_reaction_field",
    "openmmtools.utils.Timer",
    "reversed",
    "set"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AbsoluteAlchemicalFactory.get_energy_components": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "classmethod",
    "enumerate",
    "len",
    "openmmtools.alchemy.collections",
    "openmmtools.alchemy.copy",
    "simtk.openmm.Context",
    "simtk.openmm.VerletIntegrator",
    "simtk.unit.femtoseconds"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AlchemicalFunction": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "openmmtools.states.GlobalParameterFunction"
   ]
  },
  "type": "class"
 },
 "openmmtools.alchemy.AlchemicalRegion": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "openmmtools.alchemy._ALCHEMICAL_REGION_ARGS",
    "openmmtools.alchemy.collections"
   ]
  },
  "type": "class"
 },
 "openmmtools.alchemy.AlchemicalState": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "_LambdaParameter",
    "openmmtools.alchemy.AlchemicalStateError",
    "openmmtools.states.GlobalParameterState"
   ]
  },
  "type": "class"
 },
 "openmmtools.alchemy.AlchemicalState._LambdaParameter": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "openmmtools.states.GlobalParameterState.GlobalParameter"
   ]
  },
  "type": "class"
 },
 "openmmtools.alchemy.AlchemicalState._LambdaParameter.__init__": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AlchemicalState._LambdaParameter.lambda_validator": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AlchemicalState.apply_to_context": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AlchemicalState.apply_to_system": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AlchemicalState.check_system_consistency": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AlchemicalState.from_system": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "classmethod",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AlchemicalState.get_alchemical_variable": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "openmmtools.alchemy.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AlchemicalState.get_function_variable": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AlchemicalState.set_alchemical_parameters": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AlchemicalState.set_alchemical_variable": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "openmmtools.alchemy.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AlchemicalState.set_function_variable": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.alchemy.AlchemicalStateError": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "openmmtools.states.GlobalParameterError"
   ]
  },
  "type": "class"
 },
 "openmmtools.alchemy.ONE_4PI_EPS0": {
  "data": {
   "shadows": "openmmtools.constants.ONE_4PI_EPS0"
  },
  "type": "import"
 },
 "openmmtools.alchemy._ALCHEMICAL_REGION_ARGS": {
  "data": {
   "lineno": 412
  },
  "type": "constant"
 },
 "openmmtools.alchemy.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "openmmtools.alchemy.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "openmmtools.alchemy.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "openmmtools.alchemy.forcefactories": {
  "data": {
   "shadows": "openmmtools.forcefactories"
  },
  "type": "import"
 },
 "openmmtools.alchemy.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "openmmtools.alchemy.logger": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "openmmtools.alchemy.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "openmmtools.alchemy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "openmmtools.alchemy.openmm": {
  "data": {
   "shadows": "simtk.openmm"
  },
  "type": "import"
 },
 "openmmtools.alchemy.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "openmmtools.alchemy.states": {
  "data": {
   "shadows": "openmmtools.states"
  },
  "type": "import"
 },
 "openmmtools.alchemy.unit": {
  "data": {
   "shadows": "simtk.unit"
  },
  "type": "import"
 },
 "openmmtools.alchemy.utils": {
  "data": {
   "shadows": "openmmtools.utils"
  },
  "type": "import"
 },
 "openmmtools.alchemy.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "openmmtools.cache": {
  "data": {
   "shadows": "openmmtools.cache"
  },
  "type": "import"
 },
 "openmmtools.cache.ContextCache": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.cache.ContextCache.__getstate__": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "openmmtools.cache.ContextCache.__init__": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "openmmtools.cache.LRUCache"
   ]
  },
  "type": "function"
 },
 "openmmtools.cache.ContextCache.__len__": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "openmmtools.cache.ContextCache.__setstate__": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "openmmtools.cache.LRUCache",
    "simtk.openmm.Platform.getPlatformByName"
   ]
  },
  "type": "function"
 },
 "openmmtools.cache.ContextCache._check_integrator_compatibility_configuration": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "RuntimeError",
    "classmethod",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "openmmtools.cache.ContextCache._copy_integrator_state": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "AttributeError",
    "classmethod",
    "getattr",
    "openmmtools.integrators.ThermostatedIntegrator.restore_interface"
   ]
  },
  "type": "function"
 },
 "openmmtools.cache.ContextCache._default_integrator_id": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "classmethod",
    "simtk.unit.kelvin"
   ]
  },
  "type": "function"
 },
 "openmmtools.cache.ContextCache._generate_context_id": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.cache.ContextCache._generate_integrator_id": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "StopIteration",
    "classmethod",
    "isinstance",
    "next",
    "openmmtools.cache.re",
    "simtk.openmm.CustomIntegrator",
    "simtk.openmm.XmlSerializer.serialize"
   ]
  },
  "type": "function"
 },
 "openmmtools.cache.ContextCache._generate_state_id": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.cache.ContextCache._get_default_integrator": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "openmmtools.integrators.GeodesicBAOABIntegrator",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.cache.ContextCache._set_integrator_compatible_variables": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "AttributeError",
    "classmethod",
    "isinstance",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.cache.ContextCache._standardize_integrator": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "classmethod",
    "getattr",
    "openmmtools.cache.copy",
    "openmmtools.integrators.ThermostatedIntegrator.restore_interface"
   ]
  },
  "type": "function"
 },
 "openmmtools.cache.ContextCache._validate_platform_properties": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "dict",
    "isinstance",
    "simtk.openmm.Context",
    "simtk.openmm.System",
    "simtk.openmm.VerletIntegrator",
    "simtk.unit.femtoseconds",
    "staticmethod",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.cache.ContextCache.capacity": {
  "data": {
   "lineno": 353
  },
  "type": "function"
 },
 "openmmtools.cache.ContextCache.empty": {
  "data": {
   "lineno": 370
  },
  "type": "function"
 },
 "openmmtools.cache.ContextCache.get_context": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "reversed"
   ]
  },
  "type": "function"
 },
 "openmmtools.cache.ContextCache.platform": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "RuntimeError",
    "len"
   ]
  },
  "type": "function"
 },
 "openmmtools.cache.ContextCache.set_platform": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "RuntimeError",
    "len"
   ]
  },
  "type": "function"
 },
 "openmmtools.cache.ContextCache.time_to_live": {
  "data": {
   "lineno": 366
  },
  "type": "function"
 },
 "openmmtools.cache.DummyContextCache": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.cache.DummyContextCache.__getstate__": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "openmmtools.cache.DummyContextCache.__init__": {
  "data": {
   "lineno": 722
  },
  "type": "function"
 },
 "openmmtools.cache.DummyContextCache.__setstate__": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "simtk.openmm.Platform.getPlatformByName"
   ]
  },
  "type": "function"
 },
 "openmmtools.cache.DummyContextCache.get_context": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "openmmtools.integrators.LangevinIntegrator",
    "simtk.unit.femtoseconds"
   ]
  },
  "type": "function"
 },
 "openmmtools.cache.LRUCache": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.cache.LRUCache.__contains__": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "openmmtools.cache.LRUCache.__getitem__": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "openmmtools.cache.LRUCache.__init__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "openmmtools.cache.collections"
   ]
  },
  "type": "function"
 },
 "openmmtools.cache.LRUCache.__iter__": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "openmmtools.cache.LRUCache.__len__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "openmmtools.cache.LRUCache.__setitem__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "openmmtools.cache._CacheEntry"
   ]
  },
  "type": "function"
 },
 "openmmtools.cache.LRUCache._remove_expired": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "openmmtools.cache.LRUCache.capacity": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "openmmtools.cache.LRUCache.empty": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "openmmtools.cache.collections"
   ]
  },
  "type": "function"
 },
 "openmmtools.cache.LRUCache.time_to_live": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "openmmtools.cache._CacheEntry": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.cache._CacheEntry.__init__": {
  "data": {
   "lineno": 784
  },
  "type": "function"
 },
 "openmmtools.cache.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "openmmtools.cache.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "openmmtools.cache.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "openmmtools.cache.global_context_cache": {
  "data": {
   "lineno": 775
  },
  "type": "constant"
 },
 "openmmtools.cache.integrators": {
  "data": {
   "shadows": "openmmtools.integrators"
  },
  "type": "import"
 },
 "openmmtools.cache.openmm": {
  "data": {
   "shadows": "simtk.openmm"
  },
  "type": "import"
 },
 "openmmtools.cache.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "openmmtools.cache.unit": {
  "data": {
   "shadows": "simtk.unit"
  },
  "type": "import"
 },
 "openmmtools.constants": {
  "data": {
   "shadows": "openmmtools.constants"
  },
  "type": "import"
 },
 "openmmtools.constants.LITER": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "openmmtools.constants.ONE_4PI_EPS0": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "openmmtools.constants.STANDARD_STATE_VOLUME": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "openmmtools.constants.kB": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "openmmtools.constants.u": {
  "data": {
   "shadows": "simtk.unit"
  },
  "type": "import"
 },
 "openmmtools.data.alanine-dipeptide-explicit.generate-pdb": {
  "data": {
   "symbols_in_volume": [
    "open",
    "openmmtools.data.alanine-dipeptide-explicit.generate-pdb.crd_filename",
    "openmmtools.data.alanine-dipeptide-explicit.generate-pdb.inpcrd",
    "openmmtools.data.alanine-dipeptide-explicit.generate-pdb.outfile",
    "openmmtools.data.alanine-dipeptide-explicit.generate-pdb.pdb_filename",
    "openmmtools.data.alanine-dipeptide-explicit.generate-pdb.prmtop",
    "openmmtools.data.alanine-dipeptide-explicit.generate-pdb.prmtop_filename",
    "simtk.openmm.app.AmberInpcrdFile",
    "simtk.openmm.app.AmberPrmtopFile",
    "simtk.openmm.app.PDBFile.writeFile"
   ]
  },
  "type": "module"
 },
 "openmmtools.data.alanine-dipeptide-explicit.generate-pdb.app": {
  "data": {
   "shadows": "simtk.openmm.app"
  },
  "type": "import"
 },
 "openmmtools.data.alanine-dipeptide-explicit.generate-pdb.crd_filename": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "openmmtools.data.alanine-dipeptide-explicit.generate-pdb.inpcrd": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "openmmtools.data.alanine-dipeptide-explicit.generate-pdb.openmm": {
  "data": {
   "shadows": "simtk.openmm"
  },
  "type": "import"
 },
 "openmmtools.data.alanine-dipeptide-explicit.generate-pdb.outfile": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "openmmtools.data.alanine-dipeptide-explicit.generate-pdb.pdb_filename": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "openmmtools.data.alanine-dipeptide-explicit.generate-pdb.prmtop": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "openmmtools.data.alanine-dipeptide-explicit.generate-pdb.prmtop_filename": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "openmmtools.data.alanine-dipeptide-explicit.generate-pdb.unit": {
  "data": {
   "shadows": "simtk.unit"
  },
  "type": "import"
 },
 "openmmtools.data.benzene-toluene-implicit.generate-molecules": {
  "data": {
   "symbols_in_volume": [
    "open",
    "openeye.oechem.OEAddExplicitHydrogens",
    "openeye.oechem.OEAroModelOpenEye",
    "openeye.oechem.OEAssignAromaticFlags",
    "openeye.oechem.OEMol",
    "openeye.oechem.OETriposAtomNames",
    "openeye.oechem.OEWriteMolecule",
    "openeye.oechem.oemolostream",
    "openeye.oeiupac.OEParseIUPACName",
    "openeye.oeomega.OEOmega",
    "openeye.oequacpac.OEAssignPartialCharges",
    "openeye.oequacpac.OECharges_AM1BCCSym",
    "openmmtools.data.benzene-toluene-implicit.generate-molecules.filename",
    "openmmtools.data.benzene-toluene-implicit.generate-molecules.infile",
    "openmmtools.data.benzene-toluene-implicit.generate-molecules.lines",
    "openmmtools.data.benzene-toluene-implicit.generate-molecules.molecule",
    "openmmtools.data.benzene-toluene-implicit.generate-molecules.molecules",
    "openmmtools.data.benzene-toluene-implicit.generate-molecules.name",
    "openmmtools.data.benzene-toluene-implicit.generate-molecules.newlines",
    "openmmtools.data.benzene-toluene-implicit.generate-molecules.ofs",
    "openmmtools.data.benzene-toluene-implicit.generate-molecules.omega",
    "openmmtools.data.benzene-toluene-implicit.generate-molecules.outfile",
    "print"
   ]
  },
  "type": "module"
 },
 "openmmtools.data.benzene-toluene-implicit.generate-molecules.filename": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "openmmtools.data.benzene-toluene-implicit.generate-molecules.infile": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "openmmtools.data.benzene-toluene-implicit.generate-molecules.lines": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "openmmtools.data.benzene-toluene-implicit.generate-molecules.molecule": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "openmmtools.data.benzene-toluene-implicit.generate-molecules.molecules": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "openmmtools.data.benzene-toluene-implicit.generate-molecules.name": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "openmmtools.data.benzene-toluene-implicit.generate-molecules.newlines": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "openmmtools.data.benzene-toluene-implicit.generate-molecules.oechem": {
  "data": {
   "shadows": "openeye.oechem"
  },
  "type": "import"
 },
 "openmmtools.data.benzene-toluene-implicit.generate-molecules.oeiupac": {
  "data": {
   "shadows": "openeye.oeiupac"
  },
  "type": "import"
 },
 "openmmtools.data.benzene-toluene-implicit.generate-molecules.oeomega": {
  "data": {
   "shadows": "openeye.oeomega"
  },
  "type": "import"
 },
 "openmmtools.data.benzene-toluene-implicit.generate-molecules.oequacpac": {
  "data": {
   "shadows": "openeye.oequacpac"
  },
  "type": "import"
 },
 "openmmtools.data.benzene-toluene-implicit.generate-molecules.ofs": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "openmmtools.data.benzene-toluene-implicit.generate-molecules.omega": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "openmmtools.data.benzene-toluene-implicit.generate-molecules.outfile": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "openmmtools.data.cb7-viologen.molecules.create-viologen": {
  "data": {
   "symbols_in_volume": [
    "OEAddExplicitHydrogens",
    "OEAssignAromaticFlags",
    "OEMol",
    "OEOmega",
    "OESmilesToMol",
    "openmmtools.data.cb7-viologen.molecules.create-viologen.assign_am1bcc_charges",
    "openmmtools.data.cb7-viologen.molecules.create-viologen.charged_mol",
    "openmmtools.data.cb7-viologen.molecules.create-viologen.mol",
    "openmmtools.data.cb7-viologen.molecules.create-viologen.ofs",
    "openmmtools.data.cb7-viologen.molecules.create-viologen.omega",
    "openmmtools.data.cb7-viologen.molecules.create-viologen.output_filename",
    "openmmtools.data.cb7-viologen.molecules.create-viologen.smiles",
    "print"
   ]
  },
  "type": "module"
 },
 "openmmtools.data.cb7-viologen.molecules.create-viologen.assign_am1bcc_charges": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "OEAssignPartialCharges",
    "OEHasConfIdx",
    "OEOmega",
    "abs",
    "openmmtools.data.cb7-viologen.molecules.create-viologen.omega"
   ]
  },
  "type": "function"
 },
 "openmmtools.data.cb7-viologen.molecules.create-viologen.charged_mol": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "openmmtools.data.cb7-viologen.molecules.create-viologen.mol": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "openmmtools.data.cb7-viologen.molecules.create-viologen.ofs": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "openmmtools.data.cb7-viologen.molecules.create-viologen.omega": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "openmmtools.data.cb7-viologen.molecules.create-viologen.output_filename": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "openmmtools.data.cb7-viologen.molecules.create-viologen.smiles": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "openmmtools.data.dna_dodecamer_explicit.minimize": {
  "data": {
   "symbols_in_volume": [
    "open",
    "openmmtools.data.dna_dodecamer_explicit.minimize.box_vectors",
    "openmmtools.data.dna_dodecamer_explicit.minimize.collision_rate",
    "openmmtools.data.dna_dodecamer_explicit.minimize.context",
    "openmmtools.data.dna_dodecamer_explicit.minimize.equil_steps",
    "openmmtools.data.dna_dodecamer_explicit.minimize.inpcrd",
    "openmmtools.data.dna_dodecamer_explicit.minimize.integrator",
    "openmmtools.data.dna_dodecamer_explicit.minimize.pdbfile",
    "openmmtools.data.dna_dodecamer_explicit.minimize.positions",
    "openmmtools.data.dna_dodecamer_explicit.minimize.pressure",
    "openmmtools.data.dna_dodecamer_explicit.minimize.prmtop",
    "openmmtools.data.dna_dodecamer_explicit.minimize.system",
    "openmmtools.data.dna_dodecamer_explicit.minimize.temperature",
    "openmmtools.data.dna_dodecamer_explicit.minimize.timestep",
    "simtk.openmm.Context",
    "simtk.openmm.LangevinIntegrator",
    "simtk.openmm.LocalEnergyMinimizer.minimize",
    "simtk.openmm.MonteCarloBarostat",
    "simtk.openmm.app.AmberInpcrdFile",
    "simtk.openmm.app.AmberPrmtopFile",
    "simtk.openmm.app.CutoffPeriodic",
    "simtk.openmm.app.HBonds",
    "simtk.openmm.app.PDBFile.writeHeader",
    "simtk.openmm.app.PDBFile.writeModel",
    "simtk.unit.atmospheres",
    "simtk.unit.femtoseconds",
    "simtk.unit.kelvin",
    "simtk.unit.nanometer",
    "simtk.unit.picoseconds"
   ]
  },
  "type": "module"
 },
 "openmmtools.data.dna_dodecamer_explicit.minimize.app": {
  "data": {
   "shadows": "simtk.openmm.app"
  },
  "type": "import"
 },
 "openmmtools.data.dna_dodecamer_explicit.minimize.box_vectors": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "openmmtools.data.dna_dodecamer_explicit.minimize.collision_rate": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "openmmtools.data.dna_dodecamer_explicit.minimize.context": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "openmmtools.data.dna_dodecamer_explicit.minimize.equil_steps": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "openmmtools.data.dna_dodecamer_explicit.minimize.inpcrd": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "openmmtools.data.dna_dodecamer_explicit.minimize.integrator": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "openmmtools.data.dna_dodecamer_explicit.minimize.openmm": {
  "data": {
   "shadows": "simtk.openmm"
  },
  "type": "import"
 },
 "openmmtools.data.dna_dodecamer_explicit.minimize.pdbfile": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "openmmtools.data.dna_dodecamer_explicit.minimize.positions": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "openmmtools.data.dna_dodecamer_explicit.minimize.pressure": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "openmmtools.data.dna_dodecamer_explicit.minimize.prmtop": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "openmmtools.data.dna_dodecamer_explicit.minimize.system": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "openmmtools.data.dna_dodecamer_explicit.minimize.temperature": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "openmmtools.data.dna_dodecamer_explicit.minimize.timestep": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "openmmtools.data.dna_dodecamer_explicit.minimize.unit": {
  "data": {
   "shadows": "simtk.unit"
  },
  "type": "import"
 },
 "openmmtools.data.src-explicit.prepare_pdb": {
  "data": {
   "symbols_in_volume": [
    "list",
    "open",
    "openmmtools.data.src-explicit.prepare_pdb.chain_id_list",
    "openmmtools.data.src-explicit.prepare_pdb.chain_ids_to_keep",
    "openmmtools.data.src-explicit.prepare_pdb.chain_ids_to_remove",
    "openmmtools.data.src-explicit.prepare_pdb.constraints",
    "openmmtools.data.src-explicit.prepare_pdb.context",
    "openmmtools.data.src-explicit.prepare_pdb.fixer",
    "openmmtools.data.src-explicit.prepare_pdb.forcefield",
    "openmmtools.data.src-explicit.prepare_pdb.forcefields_to_use",
    "openmmtools.data.src-explicit.prepare_pdb.integrator",
    "openmmtools.data.src-explicit.prepare_pdb.integrator_filename",
    "openmmtools.data.src-explicit.prepare_pdb.keepWater",
    "openmmtools.data.src-explicit.prepare_pdb.nonbondedMethod",
    "openmmtools.data.src-explicit.prepare_pdb.output_filename",
    "openmmtools.data.src-explicit.prepare_pdb.pH",
    "openmmtools.data.src-explicit.prepare_pdb.padding",
    "openmmtools.data.src-explicit.prepare_pdb.pdbid",
    "openmmtools.data.src-explicit.prepare_pdb.state",
    "openmmtools.data.src-explicit.prepare_pdb.state_filename",
    "openmmtools.data.src-explicit.prepare_pdb.system",
    "openmmtools.data.src-explicit.prepare_pdb.system_filename",
    "openmmtools.data.src-explicit.prepare_pdb.write_file",
    "pdbfixer.PDBFixer",
    "print",
    "set",
    "simtk.openmm.Context",
    "simtk.openmm.LocalEnergyMinimizer.minimize",
    "simtk.openmm.VerletIntegrator",
    "simtk.openmm.XmlSerializer.serialize",
    "simtk.openmm.app.CutoffPeriodic",
    "simtk.openmm.app.Ewald",
    "simtk.openmm.app.ForceField",
    "simtk.openmm.app.HBonds",
    "simtk.openmm.app.PDBFile.writeFile",
    "simtk.openmm.app.PME",
    "simtk.unit.angstroms",
    "simtk.unit.femtosecond"
   ]
  },
  "type": "module"
 },
 "openmmtools.data.src-explicit.prepare_pdb.PDBFixer": {
  "data": {
   "shadows": "pdbfixer.PDBFixer"
  },
  "type": "import"
 },
 "openmmtools.data.src-explicit.prepare_pdb.all_chains": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "openmmtools.data.src-explicit.prepare_pdb.app": {
  "data": {
   "shadows": "simtk.openmm.app"
  },
  "type": "import"
 },
 "openmmtools.data.src-explicit.prepare_pdb.chain_id_list": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "openmmtools.data.src-explicit.prepare_pdb.chain_ids_to_keep": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "openmmtools.data.src-explicit.prepare_pdb.chain_ids_to_remove": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "openmmtools.data.src-explicit.prepare_pdb.constraints": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "openmmtools.data.src-explicit.prepare_pdb.context": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "openmmtools.data.src-explicit.prepare_pdb.fixer": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "openmmtools.data.src-explicit.prepare_pdb.forcefield": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "openmmtools.data.src-explicit.prepare_pdb.forcefields_to_use": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "openmmtools.data.src-explicit.prepare_pdb.integrator": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "openmmtools.data.src-explicit.prepare_pdb.integrator_filename": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "openmmtools.data.src-explicit.prepare_pdb.keepWater": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "openmmtools.data.src-explicit.prepare_pdb.nonbondedMethod": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "openmmtools.data.src-explicit.prepare_pdb.openmm": {
  "data": {
   "shadows": "simtk.openmm"
  },
  "type": "import"
 },
 "openmmtools.data.src-explicit.prepare_pdb.output_filename": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "openmmtools.data.src-explicit.prepare_pdb.pH": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "openmmtools.data.src-explicit.prepare_pdb.padding": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "openmmtools.data.src-explicit.prepare_pdb.pdbid": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "openmmtools.data.src-explicit.prepare_pdb.state": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "openmmtools.data.src-explicit.prepare_pdb.state_filename": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "openmmtools.data.src-explicit.prepare_pdb.system": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "openmmtools.data.src-explicit.prepare_pdb.system_filename": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "openmmtools.data.src-explicit.prepare_pdb.unit": {
  "data": {
   "shadows": "simtk.unit"
  },
  "type": "import"
 },
 "openmmtools.data.src-explicit.prepare_pdb.write_file": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "openmmtools.data.src-implicit.prepare_pdb": {
  "data": {
   "symbols_in_volume": [
    "list",
    "open",
    "openmmtools.data.src-implicit.prepare_pdb.chain_id_list",
    "openmmtools.data.src-implicit.prepare_pdb.chain_ids_to_keep",
    "openmmtools.data.src-implicit.prepare_pdb.chain_ids_to_remove",
    "openmmtools.data.src-implicit.prepare_pdb.constraints",
    "openmmtools.data.src-implicit.prepare_pdb.context",
    "openmmtools.data.src-implicit.prepare_pdb.fixer",
    "openmmtools.data.src-implicit.prepare_pdb.forcefield",
    "openmmtools.data.src-implicit.prepare_pdb.forcefields_to_use",
    "openmmtools.data.src-implicit.prepare_pdb.integrator",
    "openmmtools.data.src-implicit.prepare_pdb.integrator_filename",
    "openmmtools.data.src-implicit.prepare_pdb.keepWater",
    "openmmtools.data.src-implicit.prepare_pdb.nonbondedMethod",
    "openmmtools.data.src-implicit.prepare_pdb.output_filename",
    "openmmtools.data.src-implicit.prepare_pdb.pH",
    "openmmtools.data.src-implicit.prepare_pdb.padding",
    "openmmtools.data.src-implicit.prepare_pdb.pdbid",
    "openmmtools.data.src-implicit.prepare_pdb.state",
    "openmmtools.data.src-implicit.prepare_pdb.state_filename",
    "openmmtools.data.src-implicit.prepare_pdb.system",
    "openmmtools.data.src-implicit.prepare_pdb.system_filename",
    "openmmtools.data.src-implicit.prepare_pdb.write_file",
    "pdbfixer.PDBFixer",
    "print",
    "set",
    "simtk.openmm.Context",
    "simtk.openmm.LocalEnergyMinimizer.minimize",
    "simtk.openmm.VerletIntegrator",
    "simtk.openmm.XmlSerializer.serialize",
    "simtk.openmm.app.CutoffPeriodic",
    "simtk.openmm.app.Ewald",
    "simtk.openmm.app.ForceField",
    "simtk.openmm.app.HBonds",
    "simtk.openmm.app.NoCutoff",
    "simtk.openmm.app.PDBFile.writeFile",
    "simtk.openmm.app.PME",
    "simtk.unit.femtosecond"
   ]
  },
  "type": "module"
 },
 "openmmtools.data.src-implicit.prepare_pdb.PDBFixer": {
  "data": {
   "shadows": "pdbfixer.PDBFixer"
  },
  "type": "import"
 },
 "openmmtools.data.src-implicit.prepare_pdb.all_chains": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "openmmtools.data.src-implicit.prepare_pdb.app": {
  "data": {
   "shadows": "simtk.openmm.app"
  },
  "type": "import"
 },
 "openmmtools.data.src-implicit.prepare_pdb.chain_id_list": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "openmmtools.data.src-implicit.prepare_pdb.chain_ids_to_keep": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "openmmtools.data.src-implicit.prepare_pdb.chain_ids_to_remove": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "openmmtools.data.src-implicit.prepare_pdb.constraints": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "openmmtools.data.src-implicit.prepare_pdb.context": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "openmmtools.data.src-implicit.prepare_pdb.fixer": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "openmmtools.data.src-implicit.prepare_pdb.forcefield": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "openmmtools.data.src-implicit.prepare_pdb.forcefields_to_use": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "openmmtools.data.src-implicit.prepare_pdb.integrator": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "openmmtools.data.src-implicit.prepare_pdb.integrator_filename": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "openmmtools.data.src-implicit.prepare_pdb.keepWater": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "openmmtools.data.src-implicit.prepare_pdb.nonbondedMethod": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "openmmtools.data.src-implicit.prepare_pdb.openmm": {
  "data": {
   "shadows": "simtk.openmm"
  },
  "type": "import"
 },
 "openmmtools.data.src-implicit.prepare_pdb.output_filename": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "openmmtools.data.src-implicit.prepare_pdb.pH": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "openmmtools.data.src-implicit.prepare_pdb.padding": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "openmmtools.data.src-implicit.prepare_pdb.pdbid": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "openmmtools.data.src-implicit.prepare_pdb.state": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "openmmtools.data.src-implicit.prepare_pdb.state_filename": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "openmmtools.data.src-implicit.prepare_pdb.system": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "openmmtools.data.src-implicit.prepare_pdb.system_filename": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "openmmtools.data.src-implicit.prepare_pdb.unit": {
  "data": {
   "shadows": "simtk.unit"
  },
  "type": "import"
 },
 "openmmtools.data.src-implicit.prepare_pdb.write_file": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "openmmtools.forcefactories": {
  "data": {
   "shadows": "openmmtools.forcefactories"
  },
  "type": "import"
 },
 "openmmtools.forcefactories.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "openmmtools.forcefactories.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "openmmtools.forcefactories.forces": {
  "data": {
   "shadows": "openmmtools.forces"
  },
  "type": "import"
 },
 "openmmtools.forcefactories.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "openmmtools.forcefactories.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "openmmtools.forcefactories.openmm": {
  "data": {
   "shadows": "simtk.openmm"
  },
  "type": "import"
 },
 "openmmtools.forcefactories.replace_reaction_field": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "abs",
    "getattr",
    "openmmtools.forcefactories.copy",
    "openmmtools.forces",
    "openmmtools.forces.find_forces",
    "range",
    "simtk.openmm.NonbondedForce",
    "simtk.openmm.NonbondedForce.CutoffPeriodic",
    "simtk.unit.angstrom"
   ]
  },
  "type": "function"
 },
 "openmmtools.forcefactories.restrain_atoms": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "numpy.mean",
    "set",
    "simtk.openmm.Context",
    "simtk.openmm.CustomExternalForce",
    "simtk.openmm.Platform.getPlatformByName",
    "simtk.openmm.VerletIntegrator",
    "simtk.unit.angstroms",
    "simtk.unit.femtosecond",
    "simtk.unit.md_unit_system"
   ]
  },
  "type": "function"
 },
 "openmmtools.forcefactories.restrain_atoms_by_dsl": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "isinstance",
    "openmmtools.forcefactories.mdtraj",
    "openmmtools.forcefactories.restrain_atoms"
   ]
  },
  "type": "function"
 },
 "openmmtools.forcefactories.unit": {
  "data": {
   "shadows": "simtk.unit"
  },
  "type": "import"
 },
 "openmmtools.forces": {
  "data": {
   "shadows": "openmmtools.forces"
  },
  "type": "import"
 },
 "openmmtools.forces.FlatBottomRestraintBondForce": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "openmmtools.forces.FlatBottomRestraintForceMixIn",
    "openmmtools.forces.RadiallySymmetricBondRestraintForce"
   ]
  },
  "type": "class"
 },
 "openmmtools.forces.FlatBottomRestraintForce": {
  "data": {
   "lineno": 1009,
   "symbols_in_volume": [
    "openmmtools.forces.FlatBottomRestraintForceMixIn",
    "openmmtools.forces.RadiallySymmetricCentroidRestraintForce"
   ]
  },
  "type": "class"
 },
 "openmmtools.forces.FlatBottomRestraintForceMixIn": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.forces.FlatBottomRestraintForceMixIn.__init__": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "openmmtools.forces.FlatBottomRestraintForceMixIn",
    "openmmtools.forces.collections",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.FlatBottomRestraintForceMixIn._compute_restraint_volume": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "openmmtools.forces._compute_sphere_volume"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.FlatBottomRestraintForceMixIn._determine_integral_limits": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "min",
    "openmmtools.forces._compute_harmonic_radius",
    "openmmtools.forces._compute_sphere_volume"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.FlatBottomRestraintForceMixIn.distance_at_energy": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "ValueError",
    "openmmtools.forces._compute_harmonic_radius",
    "simtk.unit.kilojoules_per_mole"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.FlatBottomRestraintForceMixIn.spring_constant": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "property",
    "simtk.unit.kilojoule_per_mole",
    "simtk.unit.nanometers"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.FlatBottomRestraintForceMixIn.well_radius": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "property",
    "simtk.unit.nanometers"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.HarmonicRestraintBondForce": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "openmmtools.forces.HarmonicRestraintForceMixIn",
    "openmmtools.forces.RadiallySymmetricBondRestraintForce"
   ]
  },
  "type": "class"
 },
 "openmmtools.forces.HarmonicRestraintForce": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "openmmtools.forces.HarmonicRestraintForceMixIn",
    "openmmtools.forces.RadiallySymmetricCentroidRestraintForce"
   ]
  },
  "type": "class"
 },
 "openmmtools.forces.HarmonicRestraintForceMixIn": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.forces.HarmonicRestraintForceMixIn.__init__": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "openmmtools.forces.HarmonicRestraintForceMixIn",
    "openmmtools.forces.collections",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.HarmonicRestraintForceMixIn._compute_restraint_volume": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "min",
    "openmmtools.forces._compute_harmonic_volume",
    "openmmtools.forces._compute_sphere_volume"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.HarmonicRestraintForceMixIn.distance_at_energy": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "openmmtools.forces._compute_harmonic_radius"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.HarmonicRestraintForceMixIn.spring_constant": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "property",
    "simtk.unit.kilojoule_per_mole",
    "simtk.unit.nanometers"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.MultipleForcesError": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "openmmtools.forces.NoForceFoundError": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "openmmtools.forces.ONE_4PI_EPS0": {
  "data": {
   "shadows": "openmmtools.constants.ONE_4PI_EPS0"
  },
  "type": "import"
 },
 "openmmtools.forces.RadiallySymmetricBondRestraintForce": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "openmmtools.forces.RadiallySymmetricRestraintForce",
    "simtk.openmm.CustomBondForce"
   ]
  },
  "type": "class"
 },
 "openmmtools.forces.RadiallySymmetricBondRestraintForce.__init__": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "openmmtools.forces.RadiallySymmetricBondRestraintForce",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.RadiallySymmetricBondRestraintForce._create_bond": {
  "data": {
   "lineno": 793
  },
  "type": "function"
 },
 "openmmtools.forces.RadiallySymmetricBondRestraintForce.restrained_atom_indices1": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.RadiallySymmetricBondRestraintForce.restrained_atom_indices2": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.RadiallySymmetricCentroidRestraintForce": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "openmmtools.forces.RadiallySymmetricRestraintForce",
    "simtk.openmm.CustomCentroidBondForce"
   ]
  },
  "type": "class"
 },
 "openmmtools.forces.RadiallySymmetricCentroidRestraintForce.__init__": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "openmmtools.forces.RadiallySymmetricCentroidRestraintForce",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.RadiallySymmetricCentroidRestraintForce._create_bond": {
  "data": {
   "lineno": 737
  },
  "type": "function"
 },
 "openmmtools.forces.RadiallySymmetricCentroidRestraintForce.restrained_atom_indices1": {
  "data": {
   "lineno": 723
  },
  "type": "function"
 },
 "openmmtools.forces.RadiallySymmetricCentroidRestraintForce.restrained_atom_indices2": {
  "data": {
   "lineno": 733
  },
  "type": "function"
 },
 "openmmtools.forces.RadiallySymmetricRestraintForce": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "openmmtools.utils.RestorableOpenMMObject"
   ]
  },
  "type": "class"
 },
 "openmmtools.forces.RadiallySymmetricRestraintForce.__init__": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "openmmtools.forces.RadiallySymmetricRestraintForce",
    "openmmtools.forces.collections",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.RadiallySymmetricRestraintForce._compute_restraint_volume": {
  "data": {
   "lineno": 457
  },
  "type": "function"
 },
 "openmmtools.forces.RadiallySymmetricRestraintForce._create_bond": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "openmmtools.forces.abc"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.RadiallySymmetricRestraintForce._determine_integral_limits": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "NotImplementedError",
    "float",
    "min",
    "numpy.max",
    "potential_energy_func",
    "simtk.unit.Quantity",
    "simtk.unit.nanometers"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.RadiallySymmetricRestraintForce._integrate_restraint_volume": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "integrand",
    "numpy.zeros",
    "openmmtools.forces.copy",
    "openmmtools.forces.logger",
    "openmmtools.forces.scipy",
    "restraint_potential_func",
    "simtk.openmm.Context",
    "simtk.openmm.Platform.getPlatformByName",
    "simtk.openmm.System",
    "simtk.openmm.VerletIntegrator",
    "simtk.unit.Quantity",
    "simtk.unit.amu",
    "simtk.unit.femtoseconds",
    "simtk.unit.nanometer"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.RadiallySymmetricRestraintForce._integrate_restraint_volume.integrand": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "openmmtools.forces.math",
    "restraint_potential_func"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.RadiallySymmetricRestraintForce._integrate_restraint_volume.restraint_potential_func": {
  "data": {
   "lineno": 546
  },
  "type": "function"
 },
 "openmmtools.forces.RadiallySymmetricRestraintForce.compute_standard_state_correction": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "TypeError",
    "openmmtools.constants.STANDARD_STATE_VOLUME",
    "openmmtools.forces._compute_sphere_volume",
    "openmmtools.forces.logger",
    "openmmtools.forces.math",
    "simtk.unit.nanometers"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.RadiallySymmetricRestraintForce.controlling_parameter_name": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.RadiallySymmetricRestraintForce.distance_at_energy": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.RadiallySymmetricRestraintForce.restrained_atom_indices1": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "openmmtools.forces.abc"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.RadiallySymmetricRestraintForce.restrained_atom_indices2": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "openmmtools.forces.abc"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.RadiallySymmetricRestraintForce.restraint_parameters": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "enumerate",
    "openmmtools.forces.collections",
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.STANDARD_STATE_VOLUME": {
  "data": {
   "shadows": "openmmtools.constants.STANDARD_STATE_VOLUME"
  },
  "type": "import"
 },
 "openmmtools.forces.SwitchedReactionFieldForce": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "simtk.openmm.CustomNonbondedForce"
   ]
  },
  "type": "class"
 },
 "openmmtools.forces.SwitchedReactionFieldForce.__init__": {
  "data": {
   "lineno": 1241,
   "symbols_in_volume": [
    "openmmtools.constants.ONE_4PI_EPS0",
    "openmmtools.forces.SwitchedReactionFieldForce",
    "simtk.openmm.CustomNonbondedForce.CutoffPeriodic",
    "simtk.unit.angstrom",
    "simtk.unit.angstroms",
    "simtk.unit.md_unit_system",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.SwitchedReactionFieldForce.from_nonbonded_force": {
  "data": {
   "lineno": 1269,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "range",
    "simtk.unit.angstrom"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.SwitchedReactionFieldForce.from_system": {
  "data": {
   "lineno": 1313,
   "symbols_in_volume": [
    "classmethod",
    "cls.from_nonbonded_force",
    "openmmtools.forces.find_forces",
    "simtk.openmm.NonbondedForce",
    "simtk.unit.angstrom"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.UnshiftedReactionFieldForce": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": [
    "simtk.openmm.CustomNonbondedForce"
   ]
  },
  "type": "class"
 },
 "openmmtools.forces.UnshiftedReactionFieldForce.__init__": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "openmmtools.constants.ONE_4PI_EPS0",
    "openmmtools.forces.UnshiftedReactionFieldForce",
    "simtk.openmm.CustomNonbondedForce.CutoffPeriodic",
    "simtk.unit.angstrom",
    "simtk.unit.angstroms",
    "simtk.unit.md_unit_system",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.UnshiftedReactionFieldForce.from_nonbonded_force": {
  "data": {
   "lineno": 1150,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "range",
    "simtk.unit.angstrom"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.UnshiftedReactionFieldForce.from_system": {
  "data": {
   "lineno": 1194,
   "symbols_in_volume": [
    "classmethod",
    "cls.from_nonbonded_force",
    "openmmtools.forces.find_forces",
    "simtk.openmm.NonbondedForce",
    "simtk.unit.angstrom"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces._compute_harmonic_radius": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "openmmtools.forces.math",
    "simtk.unit.nanometers"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces._compute_harmonic_volume": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "openmmtools.forces.math",
    "simtk.unit.kilojoules_per_mole",
    "simtk.unit.nanometers"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces._compute_sphere_volume": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "openmmtools.forces.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "openmmtools.forces.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "openmmtools.forces.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "openmmtools.forces.find_forces": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "openmmtools.forces.MultipleForcesError",
    "openmmtools.forces.NoForceFoundError",
    "openmmtools.forces.collections",
    "openmmtools.forces.inspect",
    "openmmtools.forces.iterate_forces",
    "openmmtools.forces.re",
    "sorted",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "openmmtools.forces.iterate_forces": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "openmmtools.utils.RestorableOpenMMObject.restore_interface"
   ]
  },
  "type": "function"
 },
 "openmmtools.forces.logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "openmmtools.forces.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "openmmtools.forces.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "openmmtools.forces.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "openmmtools.forces.openmm": {
  "data": {
   "shadows": "simtk.openmm"
  },
  "type": "import"
 },
 "openmmtools.forces.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "openmmtools.forces.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "openmmtools.forces.unit": {
  "data": {
   "shadows": "simtk.unit"
  },
  "type": "import"
 },
 "openmmtools.forces.utils": {
  "data": {
   "shadows": "openmmtools.utils"
  },
  "type": "import"
 },
 "openmmtools.integrators": {
  "data": {
   "shadows": "openmmtools.integrators"
  },
  "type": "import"
 },
 "openmmtools.integrators.AlchemicalNonequilibriumLangevinIntegrator": {
  "data": {
   "lineno": 1649,
   "symbols_in_volume": [
    "openmmtools.integrators.NonequilibriumLangevinIntegrator"
   ]
  },
  "type": "class"
 },
 "openmmtools.integrators.AlchemicalNonequilibriumLangevinIntegrator.__init__": {
  "data": {
   "lineno": 1722,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "dict",
    "hasattr",
    "int",
    "openmmtools.integrators.AlchemicalNonequilibriumLangevinIntegrator",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.AlchemicalNonequilibriumLangevinIntegrator._add_alchemical_perturbation_step": {
  "data": {
   "lineno": 1839
  },
  "type": "function"
 },
 "openmmtools.integrators.AlchemicalNonequilibriumLangevinIntegrator._add_alchemical_reset_step": {
  "data": {
   "lineno": 1897
  },
  "type": "function"
 },
 "openmmtools.integrators.AlchemicalNonequilibriumLangevinIntegrator._add_global_variables": {
  "data": {
   "lineno": 1805,
   "symbols_in_volume": [
    "openmmtools.integrators.AlchemicalNonequilibriumLangevinIntegrator",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.AlchemicalNonequilibriumLangevinIntegrator._add_integrator_steps": {
  "data": {
   "lineno": 1863,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.AlchemicalNonequilibriumLangevinIntegrator._add_update_alchemical_parameters_step": {
  "data": {
   "lineno": 1831
  },
  "type": "function"
 },
 "openmmtools.integrators.AlchemicalNonequilibriumLangevinIntegrator._step_dispatch_table": {
  "data": {
   "lineno": 1788,
   "symbols_in_volume": [
    "openmmtools.integrators.AlchemicalNonequilibriumLangevinIntegrator",
    "property",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.AlchemicalNonequilibriumLangevinIntegrator.reset": {
  "data": {
   "lineno": 1796,
   "symbols_in_volume": [
    "openmmtools.integrators.AlchemicalNonequilibriumLangevinIntegrator",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.AndersenVelocityVerletIntegrator": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "openmmtools.integrators.ThermostatedIntegrator"
   ]
  },
  "type": "class"
 },
 "openmmtools.integrators.AndersenVelocityVerletIntegrator.__init__": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "openmmtools.integrators.AndersenVelocityVerletIntegrator",
    "simtk.unit.femtoseconds",
    "simtk.unit.kelvin",
    "simtk.unit.picoseconds",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.BAOABIntegrator": {
  "data": {
   "lineno": 2144,
   "symbols_in_volume": [
    "openmmtools.integrators.LangevinIntegrator"
   ]
  },
  "type": "class"
 },
 "openmmtools.integrators.BAOABIntegrator.__init__": {
  "data": {
   "lineno": 2146,
   "symbols_in_volume": [
    "openmmtools.integrators.BAOABIntegrator",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.DummyIntegrator": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "simtk.openmm.CustomIntegrator"
   ]
  },
  "type": "class"
 },
 "openmmtools.integrators.DummyIntegrator.__init__": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "openmmtools.integrators.DummyIntegrator",
    "simtk.unit.femtoseconds",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.ExternalPerturbationLangevinIntegrator": {
  "data": {
   "lineno": 2051,
   "symbols_in_volume": [
    "openmmtools.integrators.NonequilibriumLangevinIntegrator"
   ]
  },
  "type": "class"
 },
 "openmmtools.integrators.ExternalPerturbationLangevinIntegrator.__init__": {
  "data": {
   "lineno": 2083,
   "symbols_in_volume": [
    "openmmtools.integrators.ExternalPerturbationLangevinIntegrator",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.ExternalPerturbationLangevinIntegrator._add_global_variables": {
  "data": {
   "lineno": 2093,
   "symbols_in_volume": [
    "openmmtools.integrators.ExternalPerturbationLangevinIntegrator",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.ExternalPerturbationLangevinIntegrator._add_integrator_steps": {
  "data": {
   "lineno": 2099,
   "symbols_in_volume": [
    "openmmtools.integrators.ExternalPerturbationLangevinIntegrator",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.ExternalPerturbationLangevinIntegrator.reset": {
  "data": {
   "lineno": 2086,
   "symbols_in_volume": [
    "openmmtools.integrators.ExternalPerturbationLangevinIntegrator",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.FIREMinimizationIntegrator": {
  "data": {
   "lineno": 2282,
   "symbols_in_volume": [
    "simtk.openmm.CustomIntegrator"
   ]
  },
  "type": "class"
 },
 "openmmtools.integrators.FIREMinimizationIntegrator.__init__": {
  "data": {
   "lineno": 2310,
   "symbols_in_volume": [
    "Exception",
    "openmmtools.integrators.FIREMinimizationIntegrator",
    "simtk.unit.femtoseconds",
    "simtk.unit.kilojoules_per_mole",
    "simtk.unit.md_unit_system",
    "simtk.unit.nanometers",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.GHMCIntegrator": {
  "data": {
   "lineno": 2234,
   "symbols_in_volume": [
    "openmmtools.integrators.LangevinIntegrator"
   ]
  },
  "type": "class"
 },
 "openmmtools.integrators.GHMCIntegrator.__init__": {
  "data": {
   "lineno": 2237,
   "symbols_in_volume": [
    "openmmtools.integrators.GHMCIntegrator",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.GeodesicBAOABIntegrator": {
  "data": {
   "lineno": 2186,
   "symbols_in_volume": [
    "openmmtools.integrators.LangevinIntegrator"
   ]
  },
  "type": "class"
 },
 "openmmtools.integrators.GeodesicBAOABIntegrator.__init__": {
  "data": {
   "lineno": 2189,
   "symbols_in_volume": [
    "openmmtools.integrators.GeodesicBAOABIntegrator",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.GradientDescentMinimizationIntegrator": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "simtk.openmm.CustomIntegrator"
   ]
  },
  "type": "class"
 },
 "openmmtools.integrators.GradientDescentMinimizationIntegrator.__init__": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "openmmtools.integrators.GradientDescentMinimizationIntegrator",
    "simtk.unit.angstroms",
    "simtk.unit.femtoseconds",
    "simtk.unit.nanometers",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.HMCIntegrator": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "openmmtools.integrators.ThermostatedIntegrator"
   ]
  },
  "type": "class"
 },
 "openmmtools.integrators.HMCIntegrator.__init__": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "openmmtools.integrators.HMCIntegrator",
    "range",
    "simtk.unit.femtoseconds",
    "simtk.unit.kelvin",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.HMCIntegrator.acceptance_rate": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.HMCIntegrator.n_accept": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.HMCIntegrator.n_trials": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.LangevinIntegrator": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "openmmtools.integrators.ThermostatedIntegrator"
   ]
  },
  "type": "class"
 },
 "openmmtools.integrators.LangevinIntegrator.__init__": {
  "data": {
   "lineno": 1066,
   "symbols_in_volume": [
    "max",
    "numpy.exp",
    "numpy.sqrt",
    "openmmtools.integrators.LangevinIntegrator",
    "simtk.unit.femtoseconds",
    "simtk.unit.kelvin",
    "simtk.unit.picoseconds",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.LangevinIntegrator._add_O_step": {
  "data": {
   "lineno": 1443
  },
  "type": "function"
 },
 "openmmtools.integrators.LangevinIntegrator._add_R_step": {
  "data": {
   "lineno": 1399
  },
  "type": "function"
 },
 "openmmtools.integrators.LangevinIntegrator._add_V_step": {
  "data": {
   "lineno": 1420
  },
  "type": "function"
 },
 "openmmtools.integrators.LangevinIntegrator._add_global_variables": {
  "data": {
   "lineno": 1168
  },
  "type": "function"
 },
 "openmmtools.integrators.LangevinIntegrator._add_integrator_steps": {
  "data": {
   "lineno": 1304,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.LangevinIntegrator._add_metropolize_finish": {
  "data": {
   "lineno": 1539
  },
  "type": "function"
 },
 "openmmtools.integrators.LangevinIntegrator._add_metropolize_start": {
  "data": {
   "lineno": 1534
  },
  "type": "function"
 },
 "openmmtools.integrators.LangevinIntegrator._get_energy_with_units": {
  "data": {
   "lineno": 1215,
   "symbols_in_volume": [
    "openmmtools.integrators._OPENMM_ENERGY_UNIT"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.LangevinIntegrator._parse_splitting_string": {
  "data": {
   "lineno": 1469,
   "symbols_in_volume": [
    "dict",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.LangevinIntegrator._sanity_check": {
  "data": {
   "lineno": 1314,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.LangevinIntegrator._step_dispatch_table": {
  "data": {
   "lineno": 1155,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.LangevinIntegrator._substep_function": {
  "data": {
   "lineno": 1457,
   "symbols_in_volume": [
    "function"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.LangevinIntegrator._verify_metropolization": {
  "data": {
   "lineno": 1360,
   "symbols_in_volume": [
    "ValueError",
    "openmmtools.integrators.re"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.LangevinIntegrator.acceptance_rate": {
  "data": {
   "lineno": 1294,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.LangevinIntegrator.get_acceptance_rate": {
  "data": {
   "lineno": 1281,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.LangevinIntegrator.get_heat": {
  "data": {
   "lineno": 1259,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.LangevinIntegrator.get_shadow_work": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.LangevinIntegrator.heat": {
  "data": {
   "lineno": 1277,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.LangevinIntegrator.is_metropolized": {
  "data": {
   "lineno": 1299,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.LangevinIntegrator.reset": {
  "data": {
   "lineno": 1208
  },
  "type": "function"
 },
 "openmmtools.integrators.LangevinIntegrator.reset_ghmc_statistics": {
  "data": {
   "lineno": 1201
  },
  "type": "function"
 },
 "openmmtools.integrators.LangevinIntegrator.reset_heat": {
  "data": {
   "lineno": 1191
  },
  "type": "function"
 },
 "openmmtools.integrators.LangevinIntegrator.reset_shadow_work": {
  "data": {
   "lineno": 1196
  },
  "type": "function"
 },
 "openmmtools.integrators.LangevinIntegrator.shadow_work": {
  "data": {
   "lineno": 1255,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.MTSIntegrator": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "openmmtools.respa.MTSIntegrator"
   ]
  },
  "type": "class"
 },
 "openmmtools.integrators.MTSIntegrator.__init__": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "openmmtools.integrators.MTSIntegrator",
    "simtk.unit.femtoseconds",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.MetropolisMonteCarloIntegrator": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "openmmtools.integrators.ThermostatedIntegrator"
   ]
  },
  "type": "class"
 },
 "openmmtools.integrators.MetropolisMonteCarloIntegrator.__init__": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "openmmtools.integrators.MetropolisMonteCarloIntegrator",
    "simtk.unit.angstroms",
    "simtk.unit.femtoseconds",
    "simtk.unit.kelvin",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.NonequilibriumLangevinIntegrator": {
  "data": {
   "lineno": 1554,
   "symbols_in_volume": [
    "openmmtools.integrators.LangevinIntegrator"
   ]
  },
  "type": "class"
 },
 "openmmtools.integrators.NonequilibriumLangevinIntegrator.__init__": {
  "data": {
   "lineno": 1577,
   "symbols_in_volume": [
    "openmmtools.integrators.NonequilibriumLangevinIntegrator",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.NonequilibriumLangevinIntegrator._add_global_variables": {
  "data": {
   "lineno": 1580,
   "symbols_in_volume": [
    "openmmtools.integrators.NonequilibriumLangevinIntegrator",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.NonequilibriumLangevinIntegrator._add_reset_protocol_work_step": {
  "data": {
   "lineno": 1584
  },
  "type": "function"
 },
 "openmmtools.integrators.NonequilibriumLangevinIntegrator.get_protocol_work": {
  "data": {
   "lineno": 1596
  },
  "type": "function"
 },
 "openmmtools.integrators.NonequilibriumLangevinIntegrator.get_total_work": {
  "data": {
   "lineno": 1618
  },
  "type": "function"
 },
 "openmmtools.integrators.NonequilibriumLangevinIntegrator.protocol_work": {
  "data": {
   "lineno": 1612,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.NonequilibriumLangevinIntegrator.reset": {
  "data": {
   "lineno": 1642,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.NonequilibriumLangevinIntegrator.reset_protocol_work": {
  "data": {
   "lineno": 1590
  },
  "type": "function"
 },
 "openmmtools.integrators.NonequilibriumLangevinIntegrator.total_work": {
  "data": {
   "lineno": 1636,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.NoseHooverChainVelocityVerletIntegrator": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "openmmtools.integrators.ThermostatedIntegrator"
   ]
  },
  "type": "class"
 },
 "openmmtools.integrators.NoseHooverChainVelocityVerletIntegrator.__init__": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "any",
    "map",
    "openmmtools.integrators.NoseHooverChainVelocityVerletIntegrator",
    "openmmtools.integrators.logger",
    "range",
    "simtk.openmm.CMMotionRemover",
    "simtk.unit.dalton",
    "simtk.unit.kelvin",
    "simtk.unit.picoseconds",
    "str",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.NoseHooverChainVelocityVerletIntegrator.computeEnergies": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.NoseHooverChainVelocityVerletIntegrator.propagateNHC": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.PeriodicNonequilibriumIntegrator": {
  "data": {
   "lineno": 1908,
   "symbols_in_volume": [
    "openmmtools.integrators.AlchemicalNonequilibriumLangevinIntegrator"
   ]
  },
  "type": "class"
 },
 "openmmtools.integrators.PeriodicNonequilibriumIntegrator.__init__": {
  "data": {
   "lineno": 1952,
   "symbols_in_volume": [
    "ValueError",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.PeriodicNonequilibriumIntegrator._add_alchemical_perturbation_step": {
  "data": {
   "lineno": 2020
  },
  "type": "function"
 },
 "openmmtools.integrators.PeriodicNonequilibriumIntegrator._add_global_variables": {
  "data": {
   "lineno": 1982,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.PeriodicNonequilibriumIntegrator._add_integrator_steps": {
  "data": {
   "lineno": 1990,
   "symbols_in_volume": [
    "openmmtools.integrators.NonequilibriumLangevinIntegrator"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.PrettyPrintableIntegrator": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.integrators.PrettyPrintableIntegrator.pretty_format": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "Exception",
    "hasattr",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.PrettyPrintableIntegrator.pretty_print": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.ThermostatedIntegrator": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "openmmtools.integrators.PrettyPrintableIntegrator",
    "openmmtools.utils.RestorableOpenMMObject",
    "simtk.openmm.CustomIntegrator"
   ]
  },
  "type": "class"
 },
 "openmmtools.integrators.ThermostatedIntegrator.__init__": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "openmmtools.constants.kB",
    "openmmtools.integrators.ThermostatedIntegrator",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.ThermostatedIntegrator.addComputeTemperatureDependentConstants": {
  "data": {
   "lineno": 230
  },
  "type": "function"
 },
 "openmmtools.integrators.ThermostatedIntegrator.getTemperature": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "openmmtools.constants.kB",
    "openmmtools.integrators._OPENMM_ENERGY_UNIT"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.ThermostatedIntegrator.global_variable_names": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "property",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.ThermostatedIntegrator.is_thermostated": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "classmethod",
    "openmmtools.integrators.ThermostatedIntegrator",
    "range",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.ThermostatedIntegrator.kT": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "openmmtools.integrators._OPENMM_ENERGY_UNIT",
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.ThermostatedIntegrator.restore_interface": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "classmethod",
    "hasattr",
    "openmmtools.integrators.ThermostatedIntegrator",
    "openmmtools.integrators.logger",
    "range",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.ThermostatedIntegrator.setTemperature": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "openmmtools.constants.kB"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.VVVRIntegrator": {
  "data": {
   "lineno": 2117,
   "symbols_in_volume": [
    "openmmtools.integrators.LangevinIntegrator"
   ]
  },
  "type": "class"
 },
 "openmmtools.integrators.VVVRIntegrator.__init__": {
  "data": {
   "lineno": 2119,
   "symbols_in_volume": [
    "openmmtools.integrators.VVVRIntegrator",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators.VelocityVerletIntegrator": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "simtk.openmm.CustomIntegrator"
   ]
  },
  "type": "class"
 },
 "openmmtools.integrators.VelocityVerletIntegrator.__init__": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "openmmtools.integrators.VelocityVerletIntegrator",
    "simtk.unit.femtoseconds",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.integrators._OPENMM_ENERGY_UNIT": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "openmmtools.integrators.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "openmmtools.integrators.kB": {
  "data": {
   "shadows": "openmmtools.constants.kB"
  },
  "type": "import"
 },
 "openmmtools.integrators.logger": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "openmmtools.integrators.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "openmmtools.integrators.mm": {
  "data": {
   "shadows": "simtk.openmm"
  },
  "type": "import"
 },
 "openmmtools.integrators.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "openmmtools.integrators.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "openmmtools.integrators.respa": {
  "data": {
   "shadows": "openmmtools.respa"
  },
  "type": "import"
 },
 "openmmtools.integrators.unit": {
  "data": {
   "shadows": "simtk.unit"
  },
  "type": "import"
 },
 "openmmtools.integrators.utils": {
  "data": {
   "shadows": "openmmtools.utils"
  },
  "type": "import"
 },
 "openmmtools.mcmc": {
  "data": {
   "shadows": "openmmtools.mcmc"
  },
  "type": "import"
 },
 "openmmtools.mcmc.BaseIntegratorMove": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "openmmtools.mcmc.MCMCMove"
   ]
  },
  "type": "class"
 },
 "openmmtools.mcmc.BaseIntegratorMove.__getstate__": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "dict",
    "openmmtools.utils.serialize"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.BaseIntegratorMove.__init__": {
  "data": {
   "lineno": 616
  },
  "type": "function"
 },
 "openmmtools.mcmc.BaseIntegratorMove.__setstate__": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "openmmtools.utils.deserialize"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.BaseIntegratorMove._after_integration": {
  "data": {
   "lineno": 739
  },
  "type": "function"
 },
 "openmmtools.mcmc.BaseIntegratorMove._before_integration": {
  "data": {
   "lineno": 735
  },
  "type": "function"
 },
 "openmmtools.mcmc.BaseIntegratorMove._get_integrator": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "openmmtools.mcmc.abc"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.BaseIntegratorMove.apply": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "Exception",
    "numpy.isnan",
    "openmmtools.cache.global_context_cache",
    "openmmtools.mcmc.IntegratorMoveError",
    "openmmtools.mcmc.logger",
    "openmmtools.utils.Timer",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.GHMCMove": {
  "data": {
   "lineno": 1287,
   "symbols_in_volume": [
    "openmmtools.mcmc.BaseIntegratorMove"
   ]
  },
  "type": "class"
 },
 "openmmtools.mcmc.GHMCMove.__getstate__": {
  "data": {
   "lineno": 1424,
   "symbols_in_volume": [
    "openmmtools.mcmc.GHMCMove",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.GHMCMove.__init__": {
  "data": {
   "lineno": 1372,
   "symbols_in_volume": [
    "openmmtools.mcmc.GHMCMove",
    "simtk.unit.femtosecond",
    "simtk.unit.picoseconds",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.GHMCMove.__setstate__": {
  "data": {
   "lineno": 1431,
   "symbols_in_volume": [
    "openmmtools.mcmc.GHMCMove",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.GHMCMove._after_integration": {
  "data": {
   "lineno": 1444,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.GHMCMove._get_integrator": {
  "data": {
   "lineno": 1437,
   "symbols_in_volume": [
    "openmmtools.integrators.GHMCIntegrator"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.GHMCMove.apply": {
  "data": {
   "lineno": 1407,
   "symbols_in_volume": [
    "openmmtools.mcmc.GHMCMove",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.GHMCMove.fraction_accepted": {
  "data": {
   "lineno": 1380,
   "symbols_in_volume": [
    "float",
    "numpy.NaN",
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.GHMCMove.reset_statistics": {
  "data": {
   "lineno": 1402
  },
  "type": "function"
 },
 "openmmtools.mcmc.GHMCMove.statistics": {
  "data": {
   "lineno": 1397
  },
  "type": "function"
 },
 "openmmtools.mcmc.HMCMove": {
  "data": {
   "lineno": 1461,
   "symbols_in_volume": [
    "openmmtools.mcmc.BaseIntegratorMove"
   ]
  },
  "type": "class"
 },
 "openmmtools.mcmc.HMCMove.__getstate__": {
  "data": {
   "lineno": 1550,
   "symbols_in_volume": [
    "openmmtools.mcmc.HMCMove",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.HMCMove.__init__": {
  "data": {
   "lineno": 1530,
   "symbols_in_volume": [
    "openmmtools.mcmc.HMCMove",
    "simtk.unit.femtosecond",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.HMCMove.__setstate__": {
  "data": {
   "lineno": 1555,
   "symbols_in_volume": [
    "openmmtools.mcmc.HMCMove",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.HMCMove._get_integrator": {
  "data": {
   "lineno": 1559,
   "symbols_in_volume": [
    "openmmtools.integrators.HMCIntegrator"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.HMCMove.apply": {
  "data": {
   "lineno": 1534,
   "symbols_in_volume": [
    "openmmtools.mcmc.HMCMove",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.IntegratorMove": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "openmmtools.mcmc.BaseIntegratorMove"
   ]
  },
  "type": "class"
 },
 "openmmtools.mcmc.IntegratorMove.__getstate__": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "openmmtools.mcmc.IntegratorMove",
    "simtk.openmm.XmlSerializer.serialize",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.IntegratorMove.__init__": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "openmmtools.mcmc.IntegratorMove",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.IntegratorMove.__setstate__": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "openmmtools.mcmc.IntegratorMove",
    "simtk.openmm.XmlSerializer.deserialize",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.IntegratorMove._get_integrator": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "openmmtools.integrators.ThermostatedIntegrator.restore_interface",
    "openmmtools.mcmc.copy"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.IntegratorMoveError": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "openmmtools.mcmc.IntegratorMoveError.__init__": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "openmmtools.mcmc.IntegratorMoveError",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.IntegratorMoveError.serialize_error": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "open",
    "openmmtools.mcmc.json",
    "openmmtools.mcmc.os",
    "openmmtools.utils.serialize",
    "simtk.openmm.XmlSerializer.serialize",
    "zip"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.IntegratorMoveError.serialize_error.quantity_encoder": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "openmmtools.mcmc.json"
   ]
  },
  "type": "class"
 },
 "openmmtools.mcmc.IntegratorMoveError.serialize_error.quantity_encoder.default": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "simtk.unit.quantity.Quantity",
    "simtk.unit.unit.Unit",
    "str",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.LangevinDynamicsMove": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "openmmtools.mcmc.BaseIntegratorMove"
   ]
  },
  "type": "class"
 },
 "openmmtools.mcmc.LangevinDynamicsMove.__getstate__": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "openmmtools.mcmc.LangevinDynamicsMove",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.LangevinDynamicsMove.__init__": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": [
    "openmmtools.mcmc.LangevinDynamicsMove",
    "simtk.unit.femtosecond",
    "simtk.unit.picoseconds",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.LangevinDynamicsMove.__setstate__": {
  "data": {
   "lineno": 1122,
   "symbols_in_volume": [
    "openmmtools.mcmc.LangevinDynamicsMove",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.LangevinDynamicsMove._get_integrator": {
  "data": {
   "lineno": 1127,
   "symbols_in_volume": [
    "simtk.openmm.LangevinIntegrator"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.LangevinDynamicsMove.apply": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": [
    "openmmtools.mcmc.LangevinDynamicsMove",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.LangevinSplittingDynamicsMove": {
  "data": {
   "lineno": 1133,
   "symbols_in_volume": [
    "openmmtools.mcmc.LangevinDynamicsMove"
   ]
  },
  "type": "class"
 },
 "openmmtools.mcmc.LangevinSplittingDynamicsMove.__getstate__": {
  "data": {
   "lineno": 1257,
   "symbols_in_volume": [
    "openmmtools.mcmc.LangevinSplittingDynamicsMove",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.LangevinSplittingDynamicsMove.__init__": {
  "data": {
   "lineno": 1244,
   "symbols_in_volume": [
    "openmmtools.mcmc.LangevinSplittingDynamicsMove",
    "simtk.unit.femtosecond",
    "simtk.unit.picoseconds",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.LangevinSplittingDynamicsMove.__setstate__": {
  "data": {
   "lineno": 1265,
   "symbols_in_volume": [
    "openmmtools.mcmc.LangevinSplittingDynamicsMove",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.LangevinSplittingDynamicsMove._get_integrator": {
  "data": {
   "lineno": 1272,
   "symbols_in_volume": [
    "openmmtools.integrators.LangevinIntegrator"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.MCDisplacementMove": {
  "data": {
   "lineno": 1680,
   "symbols_in_volume": [
    "openmmtools.mcmc.MetropolizedMove"
   ]
  },
  "type": "class"
 },
 "openmmtools.mcmc.MCDisplacementMove.__getstate__": {
  "data": {
   "lineno": 1739,
   "symbols_in_volume": [
    "openmmtools.mcmc.MCDisplacementMove",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.MCDisplacementMove.__init__": {
  "data": {
   "lineno": 1711,
   "symbols_in_volume": [
    "openmmtools.mcmc.MCDisplacementMove",
    "simtk.unit.nanometer",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.MCDisplacementMove.__setstate__": {
  "data": {
   "lineno": 1744,
   "symbols_in_volume": [
    "openmmtools.mcmc.MCDisplacementMove",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.MCDisplacementMove._propose_positions": {
  "data": {
   "lineno": 1748
  },
  "type": "function"
 },
 "openmmtools.mcmc.MCDisplacementMove.displace_positions": {
  "data": {
   "lineno": 1715,
   "symbols_in_volume": [
    "numpy.random.randn",
    "simtk.unit.Quantity",
    "simtk.unit.nanometer",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.MCMCMove": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "openmmtools.utils.SubhookedABCMeta"
   ]
  },
  "type": "class"
 },
 "openmmtools.mcmc.MCMCMove.apply": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "openmmtools.mcmc.abc"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.MCMCSampler": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.mcmc.MCMCSampler.__init__": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "openmmtools.mcmc.copy"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.MCMCSampler.minimize": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "openmmtools.cache.global_context_cache",
    "openmmtools.mcmc.logger",
    "openmmtools.utils.Timer",
    "simtk.openmm.LocalEnergyMinimizer.minimize",
    "simtk.openmm.VerletIntegrator",
    "simtk.unit.angstroms",
    "simtk.unit.femtosecond",
    "simtk.unit.kilocalories_per_mole"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.MCMCSampler.run": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.MCRotationMove": {
  "data": {
   "lineno": 1757,
   "symbols_in_volume": [
    "openmmtools.mcmc.MetropolizedMove"
   ]
  },
  "type": "class"
 },
 "openmmtools.mcmc.MCRotationMove.__init__": {
  "data": {
   "lineno": 1784,
   "symbols_in_volume": [
    "openmmtools.mcmc.MCRotationMove",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.MCRotationMove._generate_uniform_quaternion": {
  "data": {
   "lineno": 1871,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cos",
    "numpy.pi",
    "numpy.random.rand",
    "numpy.sin",
    "numpy.sqrt",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.MCRotationMove._propose_positions": {
  "data": {
   "lineno": 1893
  },
  "type": "function"
 },
 "openmmtools.mcmc.MCRotationMove._rotation_matrix_from_quaternion": {
  "data": {
   "lineno": 1828,
   "symbols_in_volume": [
    "numpy.matrix",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.MCRotationMove.generate_random_rotation_matrix": {
  "data": {
   "lineno": 1815,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.MCRotationMove.rotate_positions": {
  "data": {
   "lineno": 1787,
   "symbols_in_volume": [
    "classmethod",
    "numpy.matrix",
    "simtk.unit.Quantity"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.MetropolizedMove": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "openmmtools.mcmc.MCMCMove"
   ]
  },
  "type": "class"
 },
 "openmmtools.mcmc.MetropolizedMove.__getstate__": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "dict",
    "openmmtools.utils.serialize"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.MetropolizedMove.__init__": {
  "data": {
   "lineno": 820
  },
  "type": "function"
 },
 "openmmtools.mcmc.MetropolizedMove.__setstate__": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": [
    "openmmtools.utils.deserialize"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.MetropolizedMove._propose_positions": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "openmmtools.mcmc.abc"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.MetropolizedMove.apply": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.exp",
    "numpy.isnan",
    "numpy.random.rand",
    "openmmtools.cache.global_context_cache",
    "openmmtools.mcmc.copy",
    "openmmtools.utils.Timer",
    "slice"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.MetropolizedMove.statistics": {
  "data": {
   "lineno": 831
  },
  "type": "function"
 },
 "openmmtools.mcmc.MonteCarloBarostatMove": {
  "data": {
   "lineno": 1569,
   "symbols_in_volume": [
    "openmmtools.mcmc.BaseIntegratorMove"
   ]
  },
  "type": "class"
 },
 "openmmtools.mcmc.MonteCarloBarostatMove.__init__": {
  "data": {
   "lineno": 1623,
   "symbols_in_volume": [
    "openmmtools.mcmc.MonteCarloBarostatMove",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.MonteCarloBarostatMove._get_integrator": {
  "data": {
   "lineno": 1671,
   "symbols_in_volume": [
    "openmmtools.integrators.DummyIntegrator"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.MonteCarloBarostatMove.apply": {
  "data": {
   "lineno": 1635,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "openmmtools.mcmc.MonteCarloBarostatMove",
    "simtk.openmm.MonteCarloBarostat",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.MonteCarloBarostatMove.n_attempts": {
  "data": {
   "lineno": 1631
  },
  "type": "function"
 },
 "openmmtools.mcmc.SequenceMove": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "openmmtools.mcmc.MCMCMove"
   ]
  },
  "type": "class"
 },
 "openmmtools.mcmc.SequenceMove.__getstate__": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "dict",
    "openmmtools.utils.serialize"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.SequenceMove.__init__": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.SequenceMove.__iter__": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.SequenceMove.__setstate__": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "openmmtools.utils.deserialize"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.SequenceMove.__str__": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.SequenceMove.apply": {
  "data": {
   "lineno": 359
  },
  "type": "function"
 },
 "openmmtools.mcmc.SequenceMove.statistics": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "enumerate",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.SubhookedABCMeta": {
  "data": {
   "shadows": "openmmtools.utils.SubhookedABCMeta"
  },
  "type": "import"
 },
 "openmmtools.mcmc.Timer": {
  "data": {
   "shadows": "openmmtools.utils.Timer"
  },
  "type": "import"
 },
 "openmmtools.mcmc.WeightedMove": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "openmmtools.mcmc.MCMCMove"
   ]
  },
  "type": "class"
 },
 "openmmtools.mcmc.WeightedMove.__getstate__": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "dict",
    "openmmtools.utils.serialize"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.WeightedMove.__init__": {
  "data": {
   "lineno": 426
  },
  "type": "function"
 },
 "openmmtools.mcmc.WeightedMove.__iter__": {
  "data": {
   "lineno": 480
  },
  "type": "function"
 },
 "openmmtools.mcmc.WeightedMove.__setstate__": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "openmmtools.utils.deserialize",
    "zip"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.WeightedMove.__str__": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.WeightedMove.apply": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "numpy.random.choice",
    "zip"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc.WeightedMove.statistics": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "enumerate",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "openmmtools.mcmc._RANDOM_SEED_MAX": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "openmmtools.mcmc.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "openmmtools.mcmc.cache": {
  "data": {
   "shadows": "openmmtools.cache"
  },
  "type": "import"
 },
 "openmmtools.mcmc.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "openmmtools.mcmc.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "openmmtools.mcmc.integrators": {
  "data": {
   "shadows": "openmmtools.integrators"
  },
  "type": "import"
 },
 "openmmtools.mcmc.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "openmmtools.mcmc.logger": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "openmmtools.mcmc.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "openmmtools.mcmc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "openmmtools.mcmc.openmm": {
  "data": {
   "shadows": "simtk.openmm"
  },
  "type": "import"
 },
 "openmmtools.mcmc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "openmmtools.mcmc.unit": {
  "data": {
   "shadows": "simtk.unit"
  },
  "type": "import"
 },
 "openmmtools.mcmc.utils": {
  "data": {
   "shadows": "openmmtools.utils"
  },
  "type": "import"
 },
 "openmmtools.multistate": {
  "data": {},
  "type": "module"
 },
 "openmmtools.multistate.MultiStateReporter": {
  "data": {
   "shadows": "openmmtools.multistate.multistatereporter.MultiStateReporter"
  },
  "type": "import"
 },
 "openmmtools.multistate.MultiStateSampler": {
  "data": {
   "shadows": "openmmtools.multistate.multistatesampler.MultiStateSampler"
  },
  "type": "import"
 },
 "openmmtools.multistate.ParallelTemperingAnalyzer": {
  "data": {
   "shadows": "openmmtools.multistate.paralleltempering.ParallelTemperingAnalyzer"
  },
  "type": "import"
 },
 "openmmtools.multistate.ParallelTemperingSampler": {
  "data": {
   "shadows": "openmmtools.multistate.paralleltempering.ParallelTemperingSampler"
  },
  "type": "import"
 },
 "openmmtools.multistate.ReplicaExchangeAnalyzer": {
  "data": {
   "shadows": "openmmtools.multistate.replicaexchange.ReplicaExchangeAnalyzer"
  },
  "type": "import"
 },
 "openmmtools.multistate.ReplicaExchangeSampler": {
  "data": {
   "shadows": "openmmtools.multistate.replicaexchange.ReplicaExchangeSampler"
  },
  "type": "import"
 },
 "openmmtools.multistate.SAMSAnalyzer": {
  "data": {
   "shadows": "openmmtools.multistate.sams.SAMSAnalyzer"
  },
  "type": "import"
 },
 "openmmtools.multistate.SAMSSampler": {
  "data": {
   "shadows": "openmmtools.multistate.sams.SAMSSampler"
  },
  "type": "import"
 },
 "openmmtools.multistate.mixing": {
  "data": {},
  "type": "module"
 },
 "openmmtools.multistate.mixing._mix_replicas_old": {
  "data": {},
  "type": "module"
 },
 "openmmtools.multistate.mixing._mix_replicas_old._mix_all_replicas_weave": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "print",
    "scipy.weave.inline"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.mixing._mix_replicas_old.weave": {
  "data": {
   "shadows": "scipy.weave"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistateanalyzer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "openmmtools.multistate.multistateanalyzer.ObservablesRegistry",
    "openmmtools.multistate.multistateanalyzer.abc",
    "openmmtools.multistate.multistateanalyzer.default_observables_registry",
    "openmmtools.multistate.multistateanalyzer.logging",
    "simtk.unit.AVOGADRO_CONSTANT_NA",
    "simtk.unit.BOLTZMANN_CONSTANT_kB",
    "simtk.unit.kilojoules_per_mole",
    "simtk.unit.nanometers"
   ]
  },
  "type": "module"
 },
 "openmmtools.multistate.multistateanalyzer.ABC": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "openmmtools.multistate.multistateanalyzer.CachedProperty": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.multistate.multistateanalyzer.CachedProperty.__get__": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.CachedProperty.__init__": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.CachedProperty.__set__": {
  "data": {
   "lineno": 410
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.CachedProperty._get_default": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "AttributeError",
    "callable"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.CachedProperty.default": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.CachedProperty.validator": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.InsufficientData": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "openmmtools.multistate.multistateanalyzer.MBAR": {
  "data": {
   "shadows": "pymbar.MBAR"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistateanalyzer.MultiPhaseAnalyzer": {
  "data": {
   "lineno": 2160,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.multistate.multistateanalyzer.MultiPhaseAnalyzer.__add__": {
  "data": {
   "lineno": 2375
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiPhaseAnalyzer.__init__": {
  "data": {
   "lineno": 2232,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "len",
    "setattr",
    "tuple"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiPhaseAnalyzer.__neg__": {
  "data": {
   "lineno": 2381,
   "symbols_in_volume": [
    "openmmtools.multistate.multistateanalyzer.copy"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiPhaseAnalyzer.__repr__": {
  "data": {
   "lineno": 2410,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiPhaseAnalyzer.__str__": {
  "data": {
   "lineno": 2397,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiPhaseAnalyzer.__sub__": {
  "data": {
   "lineno": 2378
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiPhaseAnalyzer._combine_phases": {
  "data": {
   "lineno": 2312,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "openmmtools.multistate.multistateanalyzer.MultiPhaseAnalyzer",
    "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer",
    "openmmtools.multistate.utils.generate_phase_name",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiPhaseAnalyzer._compute_observable": {
  "data": {
   "lineno": 2423,
   "symbols_in_volume": [
    "modify_final_output",
    "prepare_phase_observable",
    "zip"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiPhaseAnalyzer._compute_observable.modify_final_output": {
  "data": {
   "lineno": 2478
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiPhaseAnalyzer._compute_observable.prepare_phase_observable": {
  "data": {
   "lineno": 2438,
   "symbols_in_volume": [
    "RuntimeError",
    "dict",
    "getattr",
    "isinstance",
    "openmmtools.multistate.multistateanalyzer.MultiPhaseAnalyzer"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiPhaseAnalyzer._spool_function": {
  "data": {
   "lineno": 2266
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiPhaseAnalyzer.clear": {
  "data": {
   "lineno": 2305
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiPhaseAnalyzer.names": {
  "data": {
   "lineno": 2287,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiPhaseAnalyzer.observables": {
  "data": {
   "lineno": 2277,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiPhaseAnalyzer.phases": {
  "data": {
   "lineno": 2282,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiPhaseAnalyzer.signs": {
  "data": {
   "lineno": 2298,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer": {
  "data": {
   "lineno": 1122,
   "symbols_in_volume": [
    "numpy.ndarray",
    "openmmtools.multistate.multistateanalyzer.CachedProperty",
    "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer.__init__": {
  "data": {
   "lineno": 1171,
   "symbols_in_volume": [
    "openmmtools.multistate.multistateanalyzer.logger",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer._compute_enthalpy_and_entropy": {
  "data": {
   "lineno": 1936
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer._compute_free_energy": {
  "data": {
   "lineno": 1881,
   "symbols_in_volume": [
    "ValueError",
    "openmmtools.multistate.multistateanalyzer.logger",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer._compute_mbar_decorrelated_energies": {
  "data": {
   "lineno": 1441,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "list",
    "numpy.unique",
    "numpy.zeros",
    "openmmtools.multistate.multistateanalyzer.copy",
    "openmmtools.multistate.multistateanalyzer.logger",
    "openmmtools.multistate.utils.remove_unequilibrated_data",
    "openmmtools.multistate.utils.subsample_data_along_axis"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer._compute_mbar_unbiased_energies": {
  "data": {
   "lineno": 1518,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "enumerate",
    "int",
    "len",
    "numpy.mean",
    "numpy.std",
    "numpy.zeros",
    "openmmtools.forces.NoForceFoundError",
    "openmmtools.multistate.multistateanalyzer.copy",
    "openmmtools.multistate.multistateanalyzer.logger",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer._compute_restraint_energies": {
  "data": {
   "lineno": 1630,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "enumerate",
    "extract_decorrelated",
    "len",
    "list",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.zeros",
    "openmmtools.multistate.multistateanalyzer._MDTRAJ_DISTANCE_UNIT",
    "openmmtools.multistate.multistateanalyzer._OPENMM_ENERGY_UNIT",
    "openmmtools.multistate.multistateanalyzer.compute_centroid_distance",
    "openmmtools.multistate.multistateanalyzer.copy",
    "openmmtools.multistate.multistateanalyzer.logger",
    "openmmtools.multistate.multistateanalyzer.mdtraj",
    "openmmtools.utils.deserialize",
    "range",
    "set",
    "simtk.openmm.Context",
    "simtk.openmm.Platform.getPlatformByName",
    "simtk.openmm.System",
    "simtk.openmm.VerletIntegrator",
    "simtk.unit.femtosecond"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer._compute_restraint_energies.extract_decorrelated": {
  "data": {
   "lineno": 1667,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.zeros",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer._decorrelated_N_l": {
  "data": {
   "lineno": 2098
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer._decorrelated_iterations": {
  "data": {
   "lineno": 2147,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.array",
    "property",
    "pymbar.timeseries.subsampleCorrelatedData",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer._decorrelated_state_indices_ln": {
  "data": {
   "lineno": 2063,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.int32",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer._decorrelated_u_ln": {
  "data": {
   "lineno": 2089
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer._determine_automatic_restraint_cutoff": {
  "data": {
   "lineno": 1827,
   "symbols_in_volume": [
    "len",
    "numpy.percentile",
    "openmmtools.multistate.multistateanalyzer.InsufficientData",
    "openmmtools.multistate.multistateanalyzer._MDTRAJ_DISTANCE_UNIT"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer._equilibration_data": {
  "data": {
   "lineno": 2054
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer._get_equilibration_data": {
  "data": {
   "lineno": 1982,
   "symbols_in_volume": [
    "Exception",
    "int",
    "len",
    "max",
    "openmmtools.multistate.multistateanalyzer.logger",
    "openmmtools.multistate.utils.get_equilibration_data_per_sample",
    "tuple"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer._get_radially_symmetric_restraint_data": {
  "data": {
   "lineno": 1317,
   "symbols_in_volume": [
    "TypeError",
    "openmmtools.forces.RadiallySymmetricRestraintForce",
    "openmmtools.forces.find_forces",
    "openmmtools.multistate.multistateanalyzer.copy",
    "openmmtools.multistate.multistateanalyzer.logger"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer._get_restraint_cutoffs": {
  "data": {
   "lineno": 1856,
   "symbols_in_volume": [
    "openmmtools.multistate.multistateanalyzer.logger"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer._get_restraint_energies_distances_at_state": {
  "data": {
   "lineno": 1800,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.where",
    "openmmtools.multistate.multistateanalyzer._MDTRAJ_DISTANCE_UNIT",
    "openmmtools.multistate.multistateanalyzer._OPENMM_ENERGY_UNIT"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer._get_use_restraint_cutoff": {
  "data": {
   "lineno": 1789,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "simtk.unit.Quantity"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer._unbiased_decorrelated_N_l": {
  "data": {
   "lineno": 2118
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer._unbiased_decorrelated_u_ln": {
  "data": {
   "lineno": 2108
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer.clear": {
  "data": {
   "lineno": 1192,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer.generate_mixing_statistics": {
  "data": {
   "lineno": 1205,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.float64",
    "numpy.int64",
    "numpy.linalg.eigvals",
    "numpy.sort",
    "numpy.transpose",
    "numpy.zeros",
    "pymbar.timeseries.statisticalInefficiencyMultiple",
    "range",
    "typing.NamedTuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer.get_effective_energy_timeseries": {
  "data": {
   "lineno": 1376,
   "symbols_in_volume": [
    "ValueError",
    "numpy.float64",
    "numpy.sum",
    "numpy.zeros",
    "openmmtools.multistate.multistateanalyzer.logger",
    "range",
    "scipy.special.logsumexp"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer.get_enthalpy": {
  "data": {
   "lineno": 1944
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer.get_entropy": {
  "data": {
   "lineno": 1963
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer.get_free_energy": {
  "data": {
   "lineno": 1918
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer.mbar": {
  "data": {
   "lineno": 2128
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer.n_equilibration_iterations": {
  "data": {
   "lineno": 2137,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer.show_mixing_statistics": {
  "data": {
   "lineno": 1267,
   "symbols_in_volume": [
    "openmmtools.multistate.multistateanalyzer.logger",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer.statistical_inefficiency": {
  "data": {
   "lineno": 2142,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistateanalyzer.ObservablesRegistry": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.multistate.multistateanalyzer.ObservablesRegistry.__init__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.ObservablesRegistry._cast_observable_name": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "openmmtools.multistate.multistateanalyzer.re",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.ObservablesRegistry._check_obs_class": {
  "data": {
   "lineno": 328
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.ObservablesRegistry._check_obs_error_class": {
  "data": {
   "lineno": 331
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.ObservablesRegistry._get_errors": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.ObservablesRegistry._get_observables": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.ObservablesRegistry._register_observable": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.ObservablesRegistry.observables": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "property",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.ObservablesRegistry.observables_defined_by_phase": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.ObservablesRegistry.observables_defined_by_single_state": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.ObservablesRegistry.observables_defined_by_two_states": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.ObservablesRegistry.observables_with_error": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "property",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.ObservablesRegistry.observables_with_error_adding_linear": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.ObservablesRegistry.observables_with_error_adding_quadrature": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.ObservablesRegistry.observables_without_error": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.ObservablesRegistry.register_one_state_observable": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.ObservablesRegistry.register_phase_observable": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.ObservablesRegistry.register_two_state_observable": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "openmmtools.multistate.multistateanalyzer.ABC",
    "openmmtools.multistate.multistateanalyzer.CachedProperty"
   ]
  },
  "type": "class"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer.__add__": {
  "data": {
   "lineno": 1107
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer.__del__": {
  "data": {
   "lineno": 575
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer.__init__": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "openmmtools.multistate.MultiStateReporter",
    "openmmtools.multistate.multistateanalyzer.ObservablesRegistry",
    "openmmtools.multistate.multistateanalyzer.default_observables_registry",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer.__neg__": {
  "data": {
   "lineno": 1113
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer.__sub__": {
  "data": {
   "lineno": 1110
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer._check_equal": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.testing.assert_equal",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer._combine_phases": {
  "data": {
   "lineno": 1059,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "openmmtools.multistate.multistateanalyzer.MultiPhaseAnalyzer",
    "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer",
    "openmmtools.multistate.utils.generate_phase_name",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer._create_mbar": {
  "data": {
   "lineno": 1023,
   "symbols_in_volume": [
    "openmmtools.multistate.multistateanalyzer.logger",
    "pymbar.MBAR"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer._get_cache_dependency_graph": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "KeyError",
    "classmethod",
    "isinstance",
    "openmmtools.multistate.multistateanalyzer.CachedProperty",
    "openmmtools.multistate.multistateanalyzer.inspect"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer._get_end_thermodynamic_states": {
  "data": {
   "lineno": 651
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer._invalidate_cache_values": {
  "data": {
   "lineno": 759
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer._read_energies": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "Exception",
    "enumerate",
    "list",
    "numpy.any",
    "numpy.moveaxis",
    "openmmtools.multistate.multistateanalyzer.logger"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer._read_online_data_if_present": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer._update_cache": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer.clear": {
  "data": {
   "lineno": 581
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer.get_effective_energy_timeseries": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer.has_log_weights": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "ValueError",
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer.kT": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer.max_n_iterations": {
  "data": {
   "lineno": 795
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer.n_iterations": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer.n_replicas": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer.n_states": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer.name": {
  "data": {
   "lineno": 600
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer.observables": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "hasattr",
    "property",
    "tuple"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer.read_energies": {
  "data": {
   "lineno": 816
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer.read_logZ": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.moveaxis",
    "slice"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer.read_log_weights": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.moveaxis",
    "slice"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer.reference_states": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer.reformat_energies_for_mbar": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": [
    "numpy.int32",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.zeros",
    "range",
    "staticmethod",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer.reporter": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer.use_full_trajectory": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.PhaseAnalyzer.use_online_data": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistateanalyzer._MDTRAJ_DISTANCE_UNIT": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "openmmtools.multistate.multistateanalyzer._OPENMM_ENERGY_UNIT": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "openmmtools.multistate.multistateanalyzer.__all__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "openmmtools.multistate.multistateanalyzer.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistateanalyzer.compute_centroid_distance": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "len",
    "numpy.average",
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistateanalyzer.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistateanalyzer.default_observables_registry": {
  "data": {
   "lineno": 337
  },
  "type": "constant"
 },
 "openmmtools.multistate.multistateanalyzer.forces": {
  "data": {
   "shadows": "openmmtools.forces"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistateanalyzer.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistateanalyzer.kB": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "openmmtools.multistate.multistateanalyzer.logger": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "openmmtools.multistate.multistateanalyzer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistateanalyzer.logsumexp": {
  "data": {
   "shadows": "scipy.special.logsumexp"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistateanalyzer.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistateanalyzer.multistate": {
  "data": {
   "shadows": "openmmtools.multistate"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistateanalyzer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistateanalyzer.openmm": {
  "data": {
   "shadows": "simtk.openmm"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistateanalyzer.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistateanalyzer.timeseries": {
  "data": {
   "shadows": "pymbar.timeseries"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistateanalyzer.units": {
  "data": {
   "shadows": "simtk.unit"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistateanalyzer.utils": {
  "data": {
   "shadows": "openmmtools.utils"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatereporter": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "openmmtools.multistate.multistatereporter.logging"
   ]
  },
  "type": "module"
 },
 "openmmtools.multistate.multistatereporter.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.__del__": {
  "data": {
   "lineno": 431
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.__init__": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "openmmtools.multistate.multistatereporter.logger",
    "openmmtools.multistate.multistatereporter.os",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter._are_subfiles_open": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter._calculate_checkpoint_iteration": {
  "data": {
   "lineno": 1427,
   "symbols_in_volume": [
    "divmod",
    "int"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter._determine_netcdf_variable_parameters": {
  "data": {
   "lineno": 1359,
   "symbols_in_volume": [
    "AttributeError",
    "len",
    "numpy.isscalar",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter._ensure_dimension_exists": {
  "data": {
   "lineno": 1466,
   "symbols_in_volume": [
    "ValueError",
    "int"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter._ensure_group_exists_and_get": {
  "data": {
   "lineno": 1499
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter._find_alternate_variable": {
  "data": {
   "lineno": 1329,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter._initialize_sampler_variables_on_file": {
  "data": {
   "lineno": 1519,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter._initialize_storage_file": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "int",
    "openmmtools.__version__"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter._map_iteration_to_good": {
  "data": {
   "lineno": 1440,
   "symbols_in_volume": [
    "int",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter._open_dataset_robustly": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "IOError",
    "netCDF4.Dataset",
    "openmmtools.multistate.multistatereporter.logger",
    "openmmtools.multistate.multistatereporter.os",
    "openmmtools.multistate.multistatereporter.time",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter._read_1d_online_data": {
  "data": {
   "lineno": 1339,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter._read_sampler_states_from_given_file": {
  "data": {
   "lineno": 1625,
   "symbols_in_volume": [
    "list",
    "numpy.float64",
    "openmmtools.states.SamplerState",
    "range",
    "simtk.unit.Quantity",
    "simtk.unit.nanometers"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter._resolve_iteration_args": {
  "data": {
   "lineno": 1391,
   "symbols_in_volume": [
    "ValueError",
    "numpy.integer",
    "numpy.issubdtype",
    "staticmethod",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter._resolve_kwargs_exist": {
  "data": {
   "lineno": 1401,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter._resolve_nc_path": {
  "data": {
   "lineno": 1409,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter._storage": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter._storage_dict": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter._storage_paths": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter._write_1d_online_data": {
  "data": {
   "lineno": 1308,
   "symbols_in_volume": [
    "openmmtools.multistate.multistatereporter.logger"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter._write_dict": {
  "data": {
   "lineno": 1679,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.empty",
    "openmmtools.multistate.multistatereporter.yaml",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter._write_sampler_states_to_given_file": {
  "data": {
   "lineno": 1568,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "len",
    "list",
    "numpy.zeros",
    "openmmtools.multistate.multistatereporter.logger",
    "simtk.unit.nanometers"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.analysis_particle_indices": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.checkpoint_interval": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.close": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.filepath": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.is_open": {
  "data": {
   "lineno": 224
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.is_periodic": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.n_replicas": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.n_states": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.open": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "AssertionError",
    "AttributeError",
    "IOError",
    "int",
    "len",
    "openmmtools.multistate.multistatereporter.logger",
    "openmmtools.multistate.multistatereporter.os",
    "openmmtools.multistate.multistatereporter.uuid",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.read_checkpoint_iterations": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.read_dict": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "KeyError",
    "dict",
    "isinstance",
    "netCDF4.Group",
    "openmmtools.multistate.multistatereporter.yaml",
    "str",
    "typing.Any",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.read_end_thermodynamic_states": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "dict",
    "extract_serialized_state",
    "len",
    "list",
    "openmmtools.utils.deserialize"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.read_end_thermodynamic_states.extract_serialized_state": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "KeyError",
    "extract_serialized_state",
    "isolate_thermodynamic_state"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.read_end_thermodynamic_states.extract_serialized_state.isolate_thermodynamic_state": {
  "data": {
   "lineno": 466
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.read_energies": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "KeyError",
    "numpy.array",
    "numpy.float64",
    "numpy.ones",
    "numpy.zeros",
    "slice"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.read_last_iteration": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": [
    "RuntimeError",
    "int",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.read_logZ": {
  "data": {
   "lineno": 1154
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.read_mcmc_moves": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "len",
    "list",
    "openmmtools.utils.deserialize",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.read_mixing_statistics": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "numpy.int64",
    "slice"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.read_online_analysis_data": {
  "data": {
   "lineno": 1187,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "RuntimeWarning",
    "ValueError",
    "openmmtools.multistate.multistatereporter.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.read_replica_thermodynamic_states": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "numpy.int64",
    "openmmtools.multistate.multistatereporter.logger",
    "slice"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.read_sampler_states": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.read_thermodynamic_states": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "KeyError",
    "dict",
    "len",
    "list",
    "openmmtools.multistate.multistatereporter.collections",
    "openmmtools.states",
    "openmmtools.states.append",
    "openmmtools.states.items",
    "openmmtools.utils.deserialize",
    "openmmtools.utils.with_timer",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.read_timestamp": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "slice"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.storage_exists": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "openmmtools.multistate.multistatereporter.os"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.sync": {
  "data": {
   "lineno": 425
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.write_dict": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "dict",
    "openmmtools.multistate.multistatereporter.copy",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.write_energies": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.write_last_iteration": {
  "data": {
   "lineno": 1135
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.write_logZ": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": [
    "int",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.write_mcmc_moves": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "enumerate",
    "openmmtools.utils.serialize"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.write_mixing_statistics": {
  "data": {
   "lineno": 908
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.write_online_analysis_data": {
  "data": {
   "lineno": 1256,
   "symbols_in_volume": [
    "int",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.write_online_data_dynamic_and_static": {
  "data": {
   "lineno": 1292,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.write_replica_thermodynamic_states": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.write_sampler_states": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "int",
    "len",
    "list",
    "openmmtools.states.SamplerState",
    "openmmtools.utils.with_timer"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.write_thermodynamic_states": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "len",
    "openmmtools.multistate.multistatereporter.logger",
    "openmmtools.states",
    "openmmtools.utils.serialize",
    "openmmtools.utils.with_timer",
    "unnest_thermodynamic_state"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.write_thermodynamic_states.unnest_thermodynamic_state": {
  "data": {
   "lineno": 585
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.MultiStateReporter.write_timestamp": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "int",
    "openmmtools.multistate.multistatereporter.time",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatereporter._DictYamlDumper": {
  "data": {
   "lineno": 1780,
   "symbols_in_volume": [
    "openmmtools.multistate.multistatereporter.yaml"
   ]
  },
  "type": "class"
 },
 "openmmtools.multistate.multistatereporter._DictYamlDumper.__init__": {
  "data": {
   "lineno": 1783,
   "symbols_in_volume": [
    "numpy.ndarray",
    "openmmtools.multistate.multistatereporter._DictYamlDumper",
    "simtk.unit.Quantity",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter._DictYamlDumper.ndarray_representer": {
  "data": {
   "lineno": 1795,
   "symbols_in_volume": [
    "dict",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter._DictYamlDumper.quantity_representer": {
  "data": {
   "lineno": 1788,
   "symbols_in_volume": [
    "dict",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter._DictYamlLoader": {
  "data": {
   "lineno": 1754,
   "symbols_in_volume": [
    "openmmtools.multistate.multistatereporter.yaml"
   ]
  },
  "type": "class"
 },
 "openmmtools.multistate.multistatereporter._DictYamlLoader.__init__": {
  "data": {
   "lineno": 1756,
   "symbols_in_volume": [
    "openmmtools.multistate.multistatereporter._DictYamlLoader",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter._DictYamlLoader.ndarray_constructor": {
  "data": {
   "lineno": 1768,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.ndarray",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter._DictYamlLoader.quantity_constructor": {
  "data": {
   "lineno": 1761,
   "symbols_in_volume": [
    "openmmtools.utils.quantity_from_string",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatereporter.__version__": {
  "data": {
   "shadows": "openmmtools.__version__"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatereporter.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatereporter.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatereporter.deserialize": {
  "data": {
   "shadows": "openmmtools.utils.deserialize"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatereporter.logger": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "openmmtools.multistate.multistatereporter.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatereporter.netcdf": {
  "data": {
   "shadows": "netCDF4"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatereporter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatereporter.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatereporter.quantity_from_string": {
  "data": {
   "shadows": "openmmtools.utils.quantity_from_string"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatereporter.serialize": {
  "data": {
   "shadows": "openmmtools.utils.serialize"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatereporter.states": {
  "data": {
   "shadows": "openmmtools.states"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatereporter.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatereporter.unit": {
  "data": {
   "shadows": "simtk.unit"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatereporter.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatereporter.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatereporter.with_timer": {
  "data": {
   "shadows": "openmmtools.utils.with_timer"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatereporter.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatesampler": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "openmmtools.multistate.multistatesampler.doctest",
    "openmmtools.multistate.multistatesampler.logging"
   ]
  },
  "type": "module"
 },
 "openmmtools.multistate.multistatesampler.FIREMinimizationIntegrator": {
  "data": {
   "shadows": "openmmtools.integrators.FIREMinimizationIntegrator"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "_StoredProperty",
    "_StoredProperty._locality_validator",
    "_StoredProperty._number_of_iterations_validator",
    "_StoredProperty._oa_interval_validator",
    "_StoredProperty._oa_min_iter_validator",
    "_StoredProperty._oa_target_error_validator",
    "bool",
    "float",
    "int",
    "object",
    "openmmtools.multistate.multistatesampler.typing"
   ]
  },
  "type": "class"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._StoredProperty": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._StoredProperty.__get__": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._StoredProperty.__init__": {
  "data": {
   "lineno": 387
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._StoredProperty.__set__": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "openmmtools.multistate.multistatesampler.mpiplus",
    "setattr"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._StoredProperty._locality_validator": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "staticmethod",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._StoredProperty._number_of_iterations_validator": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._StoredProperty._oa_interval_validator": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "staticmethod",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._StoredProperty._oa_min_iter_validator": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "staticmethod",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._StoredProperty._oa_target_error_validator": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "ValueError",
    "openmmtools.multistate.multistatesampler.logger",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler.__del__": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "hasattr",
    "openmmtools.multistate.multistatesampler.mpiplus"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler.__init__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.inf",
    "openmmtools.mcmc.LangevinDynamicsMove",
    "openmmtools.multistate.multistatesampler.copy",
    "openmmtools.multistate.multistatesampler.logger",
    "simtk.unit.femtosecond",
    "simtk.unit.picosecond"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler.__repr__": {
  "data": {
   "lineno": 730
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._check_nan_energy": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.any",
    "numpy.isnan",
    "openmmtools.multistate.multistatesampler.logger",
    "openmmtools.multistate.utils.SimulationNaNError",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._compute_energies": {
  "data": {
   "lineno": 1306,
   "symbols_in_volume": [
    "enumerate",
    "openmmtools.multistate.multistatesampler.mpiplus",
    "openmmtools.utils.with_timer",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._compute_replica_energies": {
  "data": {
   "lineno": 1328,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.zeros",
    "openmmtools.cache.global_context_cache.get_context",
    "openmmtools.states.ThermodynamicState.reduced_potential_at_states",
    "openmmtools.states.group_by_compatibility",
    "zip"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._default_initial_thermodynamic_states": {
  "data": {
   "lineno": 1017,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "len",
    "numpy.arange",
    "numpy.linspace",
    "numpy.tile",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._display_citations": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "openmmtools.multistate.multistatesampler.mpiplus",
    "print"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._does_file_exist": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "openmmtools.multistate.multistatesampler.os",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._get_replica_move_statistics": {
  "data": {
   "lineno": 1239,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._initialize_reporter": {
  "data": {
   "lineno": 1069,
   "symbols_in_volume": [
    "openmmtools.multistate.multistatesampler.mpiplus"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._instantiate_sampler_from_reporter": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._is_completed": {
  "data": {
   "lineno": 1583
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._is_completed_static": {
  "data": {
   "lineno": 1591,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._minimize_replica": {
  "data": {
   "lineno": 1251,
   "symbols_in_volume": [
    "Exception",
    "openmmtools.integrators.FIREMinimizationIntegrator",
    "openmmtools.multistate.multistatesampler.logger",
    "simtk.openmm.LocalEnergyMinimizer.minimize",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._mix_replicas": {
  "data": {
   "lineno": 1370,
   "symbols_in_volume": [
    "openmmtools.multistate.multistatesampler.logger",
    "openmmtools.multistate.multistatesampler.mpiplus"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._neighborhood": {
  "data": {
   "lineno": 1163,
   "symbols_in_volume": [
    "list",
    "max",
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._offline_analysis": {
  "data": {
   "lineno": 1392,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "len",
    "numpy.inf",
    "numpy.isnan",
    "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer",
    "openmmtools.multistate.multistatesampler.logger",
    "openmmtools.multistate.multistatesampler.mpiplus",
    "openmmtools.utils.Timer",
    "openmmtools.utils.with_timer",
    "pymbar.utils.ParameterError",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._online_analysis": {
  "data": {
   "lineno": 1470,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "numpy.Inf",
    "numpy.exp",
    "numpy.float64",
    "numpy.zeros",
    "openmmtools.multistate.multistatesampler.logger",
    "openmmtools.multistate.multistatesampler.mpiplus",
    "openmmtools.utils.Timer",
    "openmmtools.utils.with_timer",
    "scipy.special.logsumexp"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._pre_write_create": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "ValueError",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.float64",
    "numpy.int64",
    "numpy.zeros",
    "openmmtools.mcmc.MCMCMove",
    "openmmtools.multistate.multistatesampler.copy",
    "openmmtools.multistate.multistatesampler.time",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._propagate_replica": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": [
    "openmmtools.mcmc.IntegratorMoveError",
    "openmmtools.multistate.multistatesampler.logger",
    "openmmtools.multistate.multistatesampler.os",
    "openmmtools.multistate.utils.SimulationNaNError"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._propagate_replicas": {
  "data": {
   "lineno": 1187,
   "symbols_in_volume": [
    "len",
    "openmmtools.multistate.multistatesampler.logger",
    "openmmtools.multistate.multistatesampler.mpiplus",
    "openmmtools.utils.with_timer",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._read_last_free_energy": {
  "data": {
   "lineno": 1557,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "ValueError",
    "numpy.all",
    "numpy.ma.is_masked",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._report_iteration": {
  "data": {
   "lineno": 1089,
   "symbols_in_volume": [
    "openmmtools.multistate.multistatesampler.mpiplus",
    "openmmtools.utils.with_timer"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._report_iteration_items": {
  "data": {
   "lineno": 1109,
   "symbols_in_volume": [
    "openmmtools.multistate.multistatesampler.mpiplus"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._reporter_from_storage": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": [
    "FileNotFoundError",
    "isinstance",
    "openmmtools.multistate.MultiStateReporter",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._restore_sampler_from_reporter": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "StopIteration",
    "_read_options",
    "int",
    "iter",
    "next",
    "openmmtools.multistate.multistatesampler.logger"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._restore_sampler_from_reporter._read_options": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._store_options": {
  "data": {
   "lineno": 1154,
   "symbols_in_volume": [
    "openmmtools.multistate.multistatesampler.logger"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._throw_restoration_error": {
  "data": {
   "lineno": 1602,
   "symbols_in_volume": [
    "RestorationError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._throw_restoration_error.RestorationError": {
  "data": {
   "lineno": 1605,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._throw_restoration_error.RestorationError.__init__": {
  "data": {
   "lineno": 1607,
   "symbols_in_volume": [
    "openmmtools.multistate.multistatesampler.logger",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler._update_analysis": {
  "data": {
   "lineno": 1525,
   "symbols_in_volume": [
    "openmmtools.multistate.multistatesampler.logger"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler.create": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "list",
    "openmmtools.multistate.multistatesampler.mpiplus",
    "openmmtools.states.SamplerState"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler.default_options": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "dict",
    "enumerate",
    "len",
    "openmmtools.multistate.multistatesampler.inspect"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler.equilibrate": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "len",
    "openmmtools.mcmc.MCMCMove",
    "openmmtools.multistate.multistatesampler.copy",
    "openmmtools.multistate.multistatesampler.logger",
    "openmmtools.multistate.multistatesampler.mpiplus",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler.extend": {
  "data": {
   "lineno": 713
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler.from_storage": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "classmethod",
    "openmmtools.multistate.multistatesampler.mpiplus"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler.is_completed": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler.is_periodic": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler.iteration": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler.mcmc_moves": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "RuntimeError",
    "openmmtools.multistate.multistatesampler.copy"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler.metadata": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "openmmtools.multistate.multistatesampler.copy",
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler.minimize": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "RuntimeError",
    "openmmtools.multistate.multistatesampler.logger",
    "openmmtools.multistate.multistatesampler.mpiplus",
    "openmmtools.utils.with_timer",
    "range",
    "simtk.unit.kilojoules_per_mole",
    "simtk.unit.nanometers",
    "zip"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler.n_replicas": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler.n_states": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler.options": {
  "data": {
   "lineno": 1139,
   "symbols_in_volume": [
    "cls",
    "cls.__init__",
    "dict",
    "getattr",
    "len",
    "openmmtools.multistate.multistatesampler.inspect",
    "property",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler.read_status": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "TypeError",
    "classmethod",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler.run": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "Exception",
    "float",
    "min",
    "openmmtools.multistate.multistatesampler.datetime",
    "openmmtools.multistate.multistatesampler.logger",
    "openmmtools.multistate.multistatesampler.logging",
    "openmmtools.multistate.multistatesampler.mpiplus",
    "openmmtools.multistate.multistatesampler.time",
    "openmmtools.multistate.utils.SimulationNaNError",
    "openmmtools.utils.Timer",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSampler.sampler_states": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "len",
    "openmmtools.multistate.multistatesampler.copy",
    "openmmtools.multistate.multistatesampler.mpiplus"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.multistatesampler.MultiStateSamplerAnalyzer": {
  "data": {
   "shadows": "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatesampler.ParameterError": {
  "data": {
   "shadows": "pymbar.utils.ParameterError"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatesampler.SimulationNaNError": {
  "data": {
   "shadows": "openmmtools.multistate.utils.SimulationNaNError"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatesampler.cache": {
  "data": {
   "shadows": "openmmtools.cache"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatesampler.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatesampler.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatesampler.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatesampler.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatesampler.logger": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "openmmtools.multistate.multistatesampler.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatesampler.logsumexp": {
  "data": {
   "shadows": "scipy.special.logsumexp"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatesampler.mcmc": {
  "data": {
   "shadows": "openmmtools.mcmc"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatesampler.mpiplus": {
  "data": {
   "shadows": "mpiplus"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatesampler.multistate": {
  "data": {
   "shadows": "openmmtools.multistate"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatesampler.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatesampler.openmm": {
  "data": {
   "shadows": "simtk.openmm"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatesampler.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatesampler.states": {
  "data": {
   "shadows": "openmmtools.states"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatesampler.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatesampler.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatesampler.unit": {
  "data": {
   "shadows": "simtk.unit"
  },
  "type": "import"
 },
 "openmmtools.multistate.multistatesampler.utils": {
  "data": {
   "shadows": "openmmtools.utils"
  },
  "type": "import"
 },
 "openmmtools.multistate.paralleltempering": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "openmmtools.multistate.paralleltempering.doctest",
    "openmmtools.multistate.paralleltempering.logging"
   ]
  },
  "type": "module"
 },
 "openmmtools.multistate.paralleltempering.MultiStateReporter": {
  "data": {
   "shadows": "openmmtools.multistate.MultiStateReporter"
  },
  "type": "import"
 },
 "openmmtools.multistate.paralleltempering.ParallelTemperingAnalyzer": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "openmmtools.multistate.ReplicaExchangeAnalyzer"
   ]
  },
  "type": "class"
 },
 "openmmtools.multistate.paralleltempering.ParallelTemperingSampler": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "openmmtools.multistate.ReplicaExchangeSampler"
   ]
  },
  "type": "class"
 },
 "openmmtools.multistate.paralleltempering.ParallelTemperingSampler._compute_replica_energies": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.zeros",
    "openmmtools.cache.global_context_cache.get_context",
    "openmmtools.constants.kB"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.paralleltempering.ParallelTemperingSampler.create": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "openmmtools.multistate.paralleltempering.ParallelTemperingSampler",
    "openmmtools.multistate.paralleltempering.copy",
    "openmmtools.multistate.paralleltempering.logger",
    "openmmtools.multistate.paralleltempering.math",
    "openmmtools.states.ThermodynamicState",
    "range",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.paralleltempering.ReplicaExchangeAnalyzer": {
  "data": {
   "shadows": "openmmtools.multistate.ReplicaExchangeAnalyzer"
  },
  "type": "import"
 },
 "openmmtools.multistate.paralleltempering.ReplicaExchangeSampler": {
  "data": {
   "shadows": "openmmtools.multistate.ReplicaExchangeSampler"
  },
  "type": "import"
 },
 "openmmtools.multistate.paralleltempering.cache": {
  "data": {
   "shadows": "openmmtools.cache"
  },
  "type": "import"
 },
 "openmmtools.multistate.paralleltempering.constants": {
  "data": {
   "shadows": "openmmtools.constants"
  },
  "type": "import"
 },
 "openmmtools.multistate.paralleltempering.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "openmmtools.multistate.paralleltempering.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "openmmtools.multistate.paralleltempering.logger": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "openmmtools.multistate.paralleltempering.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "openmmtools.multistate.paralleltempering.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "openmmtools.multistate.paralleltempering.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "openmmtools.multistate.paralleltempering.states": {
  "data": {
   "shadows": "openmmtools.states"
  },
  "type": "import"
 },
 "openmmtools.multistate.replicaexchange": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "openmmtools.multistate.replicaexchange.doctest",
    "openmmtools.multistate.replicaexchange.logging"
   ]
  },
  "type": "module"
 },
 "openmmtools.multistate.replicaexchange.MultiStateSamplerAnalyzer": {
  "data": {
   "shadows": "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer"
  },
  "type": "import"
 },
 "openmmtools.multistate.replicaexchange.ReplicaExchangeAnalyzer": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer"
   ]
  },
  "type": "class"
 },
 "openmmtools.multistate.replicaexchange.ReplicaExchangeSampler": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "_StoredProperty",
    "_StoredProperty._repex_mixing_scheme_validator",
    "openmmtools.multistate.MultiStateSampler"
   ]
  },
  "type": "class"
 },
 "openmmtools.multistate.replicaexchange.ReplicaExchangeSampler._StoredProperty": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "openmmtools.multistate.MultiStateSampler._StoredProperty"
   ]
  },
  "type": "class"
 },
 "openmmtools.multistate.replicaexchange.ReplicaExchangeSampler._StoredProperty._repex_mixing_scheme_validator": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "ValueError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.replicaexchange.ReplicaExchangeSampler.__init__": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "openmmtools.multistate.replicaexchange.ReplicaExchangeSampler",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.replicaexchange.ReplicaExchangeSampler._attempt_swap": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "numpy.random.rand",
    "openmmtools.multistate.replicaexchange.math"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.replicaexchange.ReplicaExchangeSampler._display_citations": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "openmmtools.multistate.replicaexchange.mpiplus",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.replicaexchange.ReplicaExchangeSampler._mix_all_replicas": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "numpy.random.randint",
    "openmmtools.multistate.replicaexchange.logger",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.replicaexchange.ReplicaExchangeSampler._mix_all_replicas_cython": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "mdtraj.utils.ensure_type",
    "numpy.float64",
    "numpy.int64",
    "openmmtools.multistate.mixing._mix_replicas._mix_replicas_cython"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.replicaexchange.ReplicaExchangeSampler._mix_neighboring_replicas": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.where",
    "openmmtools.multistate.replicaexchange.logger",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.replicaexchange.ReplicaExchangeSampler._mix_replicas": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "float",
    "openmmtools.multistate.replicaexchange.logger",
    "openmmtools.multistate.replicaexchange.mpiplus",
    "openmmtools.utils.time_it",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.replicaexchange.ReplicaExchangeSampler._pre_write_create": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.replicaexchange._mix_replicas_cython": {
  "data": {
   "shadows": "openmmtools.multistate.mixing._mix_replicas._mix_replicas_cython"
  },
  "type": "import"
 },
 "openmmtools.multistate.replicaexchange.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "openmmtools.multistate.replicaexchange.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "openmmtools.multistate.replicaexchange.logger": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "openmmtools.multistate.replicaexchange.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "openmmtools.multistate.replicaexchange.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "openmmtools.multistate.replicaexchange.md": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "openmmtools.multistate.replicaexchange.mpiplus": {
  "data": {
   "shadows": "mpiplus"
  },
  "type": "import"
 },
 "openmmtools.multistate.replicaexchange.multistate": {
  "data": {
   "shadows": "openmmtools.multistate"
  },
  "type": "import"
 },
 "openmmtools.multistate.replicaexchange.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "openmmtools.multistate.replicaexchange.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "openmmtools.multistate.replicaexchange.utils": {
  "data": {
   "shadows": "openmmtools.utils"
  },
  "type": "import"
 },
 "openmmtools.multistate.sams": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "openmmtools.multistate.sams.doctest",
    "openmmtools.multistate.sams.logging"
   ]
  },
  "type": "module"
 },
 "openmmtools.multistate.sams.MultiStateSamplerAnalyzer": {
  "data": {
   "shadows": "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer"
  },
  "type": "import"
 },
 "openmmtools.multistate.sams.SAMSAnalyzer": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "openmmtools.multistate.multistateanalyzer.MultiStateSamplerAnalyzer"
   ]
  },
  "type": "class"
 },
 "openmmtools.multistate.sams.SAMSSampler": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "_StoredProperty",
    "_StoredProperty._adapt_target_probabilities_validator",
    "_StoredProperty._flatness_criteria_validator",
    "_StoredProperty._state_update_scheme_validator",
    "_StoredProperty._update_stages_validator",
    "_StoredProperty._weight_update_method_validator",
    "openmmtools.multistate.MultiStateSampler"
   ]
  },
  "type": "class"
 },
 "openmmtools.multistate.sams.SAMSSampler._StoredProperty": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "openmmtools.multistate.MultiStateSampler._StoredProperty"
   ]
  },
  "type": "class"
 },
 "openmmtools.multistate.sams.SAMSSampler._StoredProperty._adapt_target_probabilities_validator": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "ValueError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.sams.SAMSSampler._StoredProperty._flatness_criteria_validator": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "ValueError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.sams.SAMSSampler._StoredProperty._state_update_scheme_validator": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "ValueError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.sams.SAMSSampler._StoredProperty._update_stages_validator": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "ValueError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.sams.SAMSSampler._StoredProperty._weight_update_method_validator": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "ValueError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.sams.SAMSSampler.__init__": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "openmmtools.multistate.sams.SAMSSampler",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.sams.SAMSSampler._compute_state_histogram": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.histogram",
    "openmmtools.multistate.sams.logger"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.sams.SAMSSampler._global_jump": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "enumerate",
    "numpy.exp",
    "numpy.float64",
    "numpy.random.choice",
    "numpy.zeros",
    "scipy.special.logsumexp"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.sams.SAMSSampler._initialize_stage": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "openmmtools.multistate.sams.SAMSSampler._local_jump": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "len",
    "min",
    "numpy.exp",
    "numpy.float64",
    "numpy.log",
    "numpy.ones",
    "numpy.random.choice",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.sams.SAMSSampler._mix_replicas": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "Exception",
    "float",
    "numpy.float64",
    "numpy.zeros",
    "openmmtools.multistate.sams.logger",
    "openmmtools.multistate.sams.mpiplus",
    "openmmtools.utils.time_it"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.sams.SAMSSampler._pre_write_create": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "Exception",
    "len",
    "list",
    "numpy.array",
    "numpy.float64",
    "numpy.log",
    "numpy.zeros",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.sams.SAMSSampler._report_iteration_items": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "int",
    "numpy.unique",
    "numpy.zeros",
    "openmmtools.multistate.sams.SAMSSampler",
    "openmmtools.multistate.sams.mpiplus",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.sams.SAMSSampler._restore_sampler_from_reporter": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "int",
    "openmmtools.multistate.sams.logger",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.sams.SAMSSampler._restricted_range_jump": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "enumerate",
    "numpy.exp",
    "numpy.float64",
    "numpy.random.choice",
    "numpy.random.rand",
    "numpy.zeros",
    "openmmtools.multistate.sams.logger",
    "scipy.special.logsumexp",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.sams.SAMSSampler._state_histogram": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.sams.SAMSSampler._update_logZ_estimates": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "Exception",
    "enumerate",
    "float",
    "min",
    "numpy.exp",
    "numpy.where",
    "openmmtools.multistate.sams.logger"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.sams.SAMSSampler._update_log_weights": {
  "data": {
   "lineno": 679
  },
  "type": "function"
 },
 "openmmtools.multistate.sams.SAMSSampler._update_stage": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "numpy.abs",
    "numpy.all",
    "numpy.array",
    "numpy.exp",
    "numpy.sum",
    "openmmtools.multistate.sams.logger",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.sams.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "openmmtools.multistate.sams.logger": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "openmmtools.multistate.sams.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "openmmtools.multistate.sams.logsumexp": {
  "data": {
   "shadows": "scipy.special.logsumexp"
  },
  "type": "import"
 },
 "openmmtools.multistate.sams.mmtools": {
  "data": {
   "shadows": "openmmtools"
  },
  "type": "import"
 },
 "openmmtools.multistate.sams.mpiplus": {
  "data": {
   "shadows": "mpiplus"
  },
  "type": "import"
 },
 "openmmtools.multistate.sams.multistate": {
  "data": {
   "shadows": "openmmtools.multistate"
  },
  "type": "import"
 },
 "openmmtools.multistate.sams.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "openmmtools.multistate.sams.utils": {
  "data": {
   "shadows": "openmmtools.utils"
  },
  "type": "import"
 },
 "openmmtools.multistate.utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "openmmtools.multistate.utils.logging"
   ]
  },
  "type": "module"
 },
 "openmmtools.multistate.utils.SimulationNaNError": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "openmmtools.multistate.utils.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "openmmtools.multistate.utils.generate_phase_name": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.utils.get_decorrelation_time": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "pymbar.timeseries.statisticalInefficiency"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.utils.get_equilibration_data": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "openmmtools.multistate.utils.get_equilibration_data_per_sample",
    "openmmtools.multistate.utils.warnings"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.utils.get_equilibration_data_per_sample": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "numpy.arange",
    "numpy.array",
    "numpy.float32",
    "numpy.floor",
    "numpy.ones",
    "pymbar.timeseries.statisticalInefficiency"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.utils.logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "openmmtools.multistate.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "openmmtools.multistate.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "openmmtools.multistate.utils.remove_unequilibrated_data": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.utils.subsample_data_along_axis": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.take",
    "numpy.zeros",
    "pymbar.timeseries.subsampleCorrelatedData"
   ]
  },
  "type": "function"
 },
 "openmmtools.multistate.utils.timeseries": {
  "data": {
   "shadows": "pymbar.timeseries"
  },
  "type": "import"
 },
 "openmmtools.multistate.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "openmmtools.respa": {
  "data": {},
  "type": "module"
 },
 "openmmtools.respa.CustomIntegrator": {
  "data": {
   "shadows": "simtk.openmm.CustomIntegrator"
  },
  "type": "import"
 },
 "openmmtools.respa.MTSIntegrator": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "simtk.openmm.CustomIntegrator"
   ]
  },
  "type": "class"
 },
 "openmmtools.respa.MTSIntegrator.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "simtk.openmm.CustomIntegrator.__init__",
    "sorted"
   ]
  },
  "type": "function"
 },
 "openmmtools.respa.MTSIntegrator._createSubsteps": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.respa.__author__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "openmmtools.respa.__version__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "openmmtools.scripts": {
  "data": {},
  "type": "module"
 },
 "openmmtools.scripts.test_openmm_platforms": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "openmmtools.scripts.test_openmm_platforms.logging",
    "openmmtools.scripts.test_openmm_platforms.main",
    "simtk.unit.angstrom",
    "simtk.unit.kilocalories_per_mole"
   ]
  },
  "type": "module"
 },
 "openmmtools.scripts.test_openmm_platforms.ENERGY_TOLERANCE": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "openmmtools.scripts.test_openmm_platforms.FORCE_RMSE_TOLERANCE": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "openmmtools.scripts.test_openmm_platforms.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "openmmtools.scripts.test_openmm_platforms.assert_approximately_equal": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "Exception",
    "abs",
    "openmmtools.scripts.test_openmm_platforms.ENERGY_TOLERANCE"
   ]
  },
  "type": "function"
 },
 "openmmtools.scripts.test_openmm_platforms.compute_potential_and_force": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "simtk.openmm.Context",
    "simtk.openmm.LangevinIntegrator",
    "simtk.unit.BOLTZMANN_CONSTANT_kB",
    "simtk.unit.femtosecond",
    "simtk.unit.kelvin",
    "simtk.unit.picosecond"
   ]
  },
  "type": "function"
 },
 "openmmtools.scripts.test_openmm_platforms.compute_potential_and_force_by_force_group": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "range",
    "simtk.openmm.Context",
    "simtk.openmm.LangevinIntegrator",
    "simtk.unit.BOLTZMANN_CONSTANT_kB",
    "simtk.unit.femtosecond",
    "simtk.unit.kelvin",
    "simtk.unit.picosecond"
   ]
  },
  "type": "function"
 },
 "openmmtools.scripts.test_openmm_platforms.compute_potential_and_force_by_force_index": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "range",
    "simtk.openmm.Context",
    "simtk.openmm.LangevinIntegrator",
    "simtk.unit.BOLTZMANN_CONSTANT_kB",
    "simtk.unit.femtosecond",
    "simtk.unit.kelvin",
    "simtk.unit.picosecond"
   ]
  },
  "type": "function"
 },
 "openmmtools.scripts.test_openmm_platforms.config_root_logger": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "TerminalFormatter",
    "len",
    "openmmtools.scripts.test_openmm_platforms.logging",
    "xrange"
   ]
  },
  "type": "function"
 },
 "openmmtools.scripts.test_openmm_platforms.config_root_logger.TerminalFormatter": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "openmmtools.scripts.test_openmm_platforms.logging"
   ]
  },
  "type": "class"
 },
 "openmmtools.scripts.test_openmm_platforms.config_root_logger.TerminalFormatter.format": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "openmmtools.scripts.test_openmm_platforms.logging"
   ]
  },
  "type": "function"
 },
 "openmmtools.scripts.test_openmm_platforms.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "openmmtools.scripts.test_openmm_platforms.get_all_subclasses": {
  "data": {
   "lineno": 306
  },
  "type": "function"
 },
 "openmmtools.scripts.test_openmm_platforms.logger": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "openmmtools.scripts.test_openmm_platforms.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "openmmtools.scripts.test_openmm_platforms.main": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "abs",
    "dict",
    "len",
    "open",
    "openmmtools.scripts.test_openmm_platforms.ENERGY_TOLERANCE",
    "openmmtools.scripts.test_openmm_platforms.FORCE_RMSE_TOLERANCE",
    "openmmtools.scripts.test_openmm_platforms.argparse",
    "openmmtools.scripts.test_openmm_platforms.compute_potential_and_force",
    "openmmtools.scripts.test_openmm_platforms.compute_potential_and_force_by_force_group",
    "openmmtools.scripts.test_openmm_platforms.config_root_logger",
    "openmmtools.scripts.test_openmm_platforms.doctest",
    "openmmtools.scripts.test_openmm_platforms.get_all_subclasses",
    "openmmtools.scripts.test_openmm_platforms.logger",
    "openmmtools.scripts.test_openmm_platforms.sys",
    "openmmtools.testsystems.TestSystem",
    "print",
    "range",
    "simtk.openmm.Platform.getNumPlatforms",
    "simtk.openmm.Platform.getPlatform",
    "simtk.openmm.Platform.getPlatformByName",
    "simtk.openmm.version.version",
    "simtk.unit.kilocalories_per_mole",
    "simtk.unit.nanometers",
    "simtk.unit.sqrt",
    "str",
    "testsystem_class"
   ]
  },
  "type": "function"
 },
 "openmmtools.scripts.test_openmm_platforms.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "openmmtools.scripts.test_openmm_platforms.openmm": {
  "data": {
   "shadows": "simtk.openmm"
  },
  "type": "import"
 },
 "openmmtools.scripts.test_openmm_platforms.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "openmmtools.scripts.test_openmm_platforms.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "openmmtools.scripts.test_openmm_platforms.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "openmmtools.scripts.test_openmm_platforms.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "openmmtools.scripts.test_openmm_platforms.testsystems": {
  "data": {
   "shadows": "openmmtools.testsystems"
  },
  "type": "import"
 },
 "openmmtools.scripts.test_openmm_platforms.units": {
  "data": {
   "shadows": "simtk.unit"
  },
  "type": "import"
 },
 "openmmtools.sobol": {
  "data": {},
  "type": "module"
 },
 "openmmtools.sobol.i4_bit_hi1": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "openmmtools.sobol.math"
   ]
  },
  "type": "function"
 },
 "openmmtools.sobol.i4_bit_lo0": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "openmmtools.sobol.math"
   ]
  },
  "type": "function"
 },
 "openmmtools.sobol.i4_sobol": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "bitwise_xor",
    "hasattr",
    "int",
    "openmmtools.sobol.i4_bit_hi1",
    "openmmtools.sobol.i4_bit_lo0",
    "openmmtools.sobol.math",
    "print",
    "six.moves.xrange",
    "transpose",
    "zeros"
   ]
  },
  "type": "function"
 },
 "openmmtools.sobol.i4_sobol_generate": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "openmmtools.sobol.i4_sobol",
    "six.moves.xrange",
    "zeros"
   ]
  },
  "type": "function"
 },
 "openmmtools.sobol.i4_uniform": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "int",
    "max",
    "min",
    "mod",
    "openmmtools.sobol.math",
    "print",
    "round"
   ]
  },
  "type": "function"
 },
 "openmmtools.sobol.isprime": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "openmmtools.sobol.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "openmmtools.sobol.prime_ge": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "max",
    "openmmtools.sobol.isprime",
    "openmmtools.sobol.math"
   ]
  },
  "type": "function"
 },
 "openmmtools.sobol.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "openmmtools.states": {
  "data": {
   "shadows": "openmmtools.states"
  },
  "type": "import"
 },
 "openmmtools.storage": {
  "data": {},
  "type": "module"
 },
 "openmmtools.storage.iodrivers": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "object",
    "openmmtools.storage.iodrivers.abc"
   ]
  },
  "type": "module"
 },
 "openmmtools.storage.iodrivers.ABC": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "openmmtools.storage.iodrivers.Codec": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "openmmtools.storage.iodrivers.ABC"
   ]
  },
  "type": "class"
 },
 "openmmtools.storage.iodrivers.Codec.__init__": {
  "data": {
   "lineno": 549
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.Codec.append": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "NotImplementedError",
    "openmmtools.storage.iodrivers.abc"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.Codec.read": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "NotImplementedError",
    "openmmtools.storage.iodrivers.abc"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.Codec.write": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "NotImplementedError",
    "openmmtools.storage.iodrivers.abc"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.Dumper": {
  "data": {
   "shadows": "yaml.Dumper"
  },
  "type": "import"
 },
 "openmmtools.storage.iodrivers.Loader": {
  "data": {
   "shadows": "yaml.Loader"
  },
  "type": "import"
 },
 "openmmtools.storage.iodrivers.NCArray": {
  "data": {
   "lineno": 1252,
   "symbols_in_volume": [
    "openmmtools.storage.iodrivers.NCVariableCodec"
   ]
  },
  "type": "class"
 },
 "openmmtools.storage.iodrivers.NCArray._bind_append": {
  "data": {
   "lineno": 1289,
   "symbols_in_volume": [
    "KeyError",
    "openmmtools.storage.iodrivers.determine_appendable_chunk_size",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCArray._bind_write": {
  "data": {
   "lineno": 1273,
   "symbols_in_volume": [
    "KeyError",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCArray._check_data_shape_matching": {
  "data": {
   "lineno": 1307,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCArray._decoder": {
  "data": {
   "lineno": 1261,
   "symbols_in_volume": [
    "openmmtools.storage.iodrivers.nc_numpy_array_decoder",
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCArray._determine_data_information": {
  "data": {
   "lineno": 1313,
   "symbols_in_volume": [
    "staticmethod",
    "type",
    "typename"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCArray._encoder": {
  "data": {
   "lineno": 1257,
   "symbols_in_volume": [
    "openmmtools.storage.iodrivers.simple_encoder",
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCArray.dtype": {
  "data": {
   "lineno": 1265,
   "symbols_in_volume": [
    "numpy.ndarray",
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCArray.dtype_string": {
  "data": {
   "lineno": 1269,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCArray.storage_type": {
  "data": {
   "lineno": 1321,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCDict": {
  "data": {
   "lineno": 1573,
   "symbols_in_volume": [
    "openmmtools.storage.iodrivers.NCScalar"
   ]
  },
  "type": "class"
 },
 "openmmtools.storage.iodrivers.NCDict._decoder": {
  "data": {
   "lineno": 1602,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCDict._encoder": {
  "data": {
   "lineno": 1598,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCDict._nc_dict_decoder": {
  "data": {
   "lineno": 1578,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "dict",
    "numpy.empty",
    "openmmtools.storage.iodrivers._DictYamlLoader",
    "openmmtools.storage.iodrivers.nc_string_decoder",
    "openmmtools.storage.iodrivers.yaml",
    "range",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCDict._nc_dict_encoder": {
  "data": {
   "lineno": 1591,
   "symbols_in_volume": [
    "openmmtools.storage.iodrivers._DictYamlDumper",
    "openmmtools.storage.iodrivers.nc_string_encoder",
    "openmmtools.storage.iodrivers.yaml",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCDict._on_disk_dtype": {
  "data": {
   "lineno": 1614,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCDict.dtype": {
  "data": {
   "lineno": 1606,
   "symbols_in_volume": [
    "dict",
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCDict.dtype_string": {
  "data": {
   "lineno": 1610,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCFloat": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": [
    "openmmtools.storage.iodrivers.NCScalar"
   ]
  },
  "type": "class"
 },
 "openmmtools.storage.iodrivers.NCFloat._decoder": {
  "data": {
   "lineno": 1215,
   "symbols_in_volume": [
    "float",
    "openmmtools.storage.iodrivers.scalar_decoder_generator",
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCFloat._encoder": {
  "data": {
   "lineno": 1211,
   "symbols_in_volume": [
    "openmmtools.storage.iodrivers.simple_encoder",
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCFloat.dtype": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCFloat.dtype_string": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCInt": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": [
    "openmmtools.storage.iodrivers.NCScalar"
   ]
  },
  "type": "class"
 },
 "openmmtools.storage.iodrivers.NCInt._decoder": {
  "data": {
   "lineno": 1193,
   "symbols_in_volume": [
    "int",
    "openmmtools.storage.iodrivers.scalar_decoder_generator",
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCInt._encoder": {
  "data": {
   "lineno": 1189,
   "symbols_in_volume": [
    "openmmtools.storage.iodrivers.simple_encoder",
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCInt.dtype": {
  "data": {
   "lineno": 1197,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCInt.dtype_string": {
  "data": {
   "lineno": 1201,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCIterable": {
  "data": {
   "lineno": 1326,
   "symbols_in_volume": [
    "openmmtools.storage.iodrivers.NCVariableCodec"
   ]
  },
  "type": "class"
 },
 "openmmtools.storage.iodrivers.NCIterable._bind_append": {
  "data": {
   "lineno": 1360,
   "symbols_in_volume": [
    "KeyError",
    "openmmtools.storage.iodrivers.determine_appendable_chunk_size"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCIterable._bind_write": {
  "data": {
   "lineno": 1346,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCIterable._check_data_shape_matching": {
  "data": {
   "lineno": 1377,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCIterable._decoder": {
  "data": {
   "lineno": 1342,
   "symbols_in_volume": [
    "openmmtools.storage.iodrivers.nc_iterable_decoder",
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCIterable._determine_data_information": {
  "data": {
   "lineno": 1384,
   "symbols_in_volume": [
    "len",
    "staticmethod",
    "type",
    "typename"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCIterable._encoder": {
  "data": {
   "lineno": 1338,
   "symbols_in_volume": [
    "openmmtools.storage.iodrivers.simple_encoder",
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCIterable.dtype": {
  "data": {
   "lineno": 1330,
   "symbols_in_volume": [
    "openmmtools.storage.iodrivers.collections",
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCIterable.dtype_string": {
  "data": {
   "lineno": 1334,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCIterable.storage_type": {
  "data": {
   "lineno": 1392,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCQuantity": {
  "data": {
   "lineno": 1397,
   "symbols_in_volume": [
    "openmmtools.storage.iodrivers.NCVariableCodec"
   ]
  },
  "type": "class"
 },
 "openmmtools.storage.iodrivers.NCQuantity._bind_append": {
  "data": {
   "lineno": 1440,
   "symbols_in_volume": [
    "KeyError",
    "openmmtools.storage.iodrivers.determine_appendable_chunk_size",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCQuantity._bind_read": {
  "data": {
   "lineno": 1409,
   "symbols_in_volume": [
    "openmmtools.storage.iodrivers.NCQuantity",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCQuantity._bind_write": {
  "data": {
   "lineno": 1415,
   "symbols_in_volume": [
    "KeyError",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCQuantity._check_data_shape_matching": {
  "data": {
   "lineno": 1466,
   "symbols_in_volume": [
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCQuantity._decoder": {
  "data": {
   "lineno": 1516,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCQuantity._determine_data_information": {
  "data": {
   "lineno": 1475,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "len",
    "type",
    "typename"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCQuantity._encoder": {
  "data": {
   "lineno": 1512,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCQuantity._quantity_decoder": {
  "data": {
   "lineno": 1526,
   "symbols_in_volume": [
    "isinstance",
    "quantity_from_string",
    "simtk.unit.Quantity"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCQuantity._quantity_encoder": {
  "data": {
   "lineno": 1520
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCQuantity._set_codifiers": {
  "data": {
   "lineno": 1495,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "int",
    "openmmtools.storage.iodrivers.nc_iterable_decoder",
    "openmmtools.storage.iodrivers.nc_numpy_array_decoder",
    "openmmtools.storage.iodrivers.scalar_decoder_generator",
    "openmmtools.storage.iodrivers.simple_encoder"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCQuantity.dtype": {
  "data": {
   "lineno": 1401,
   "symbols_in_volume": [
    "property",
    "simtk.unit.Quantity"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCQuantity.dtype_string": {
  "data": {
   "lineno": 1405,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCQuantity.storage_type": {
  "data": {
   "lineno": 1534,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCScalar": {
  "data": {
   "lineno": 1133,
   "symbols_in_volume": [
    "openmmtools.storage.iodrivers.ABC",
    "openmmtools.storage.iodrivers.NCVariableCodec"
   ]
  },
  "type": "class"
 },
 "openmmtools.storage.iodrivers.NCScalar._bind_append": {
  "data": {
   "lineno": 1154,
   "symbols_in_volume": [
    "KeyError",
    "openmmtools.storage.iodrivers.determine_appendable_chunk_size",
    "typename"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCScalar._bind_write": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "KeyError",
    "typename"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCScalar._check_data_shape_matching": {
  "data": {
   "lineno": 1168
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCScalar._on_disk_dtype": {
  "data": {
   "lineno": 1175,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCScalar.storage_type": {
  "data": {
   "lineno": 1171,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCString": {
  "data": {
   "lineno": 1228,
   "symbols_in_volume": [
    "openmmtools.storage.iodrivers.NCScalar"
   ]
  },
  "type": "class"
 },
 "openmmtools.storage.iodrivers.NCString._decoder": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": [
    "openmmtools.storage.iodrivers.nc_string_decoder",
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCString._encoder": {
  "data": {
   "lineno": 1233,
   "symbols_in_volume": [
    "openmmtools.storage.iodrivers.nc_string_encoder",
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCString.dtype": {
  "data": {
   "lineno": 1241,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCString.dtype_string": {
  "data": {
   "lineno": 1245,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCVariableCodec": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "openmmtools.storage.iodrivers.Codec"
   ]
  },
  "type": "class"
 },
 "openmmtools.storage.iodrivers.NCVariableCodec.__init__": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "openmmtools.storage.iodrivers.NCVariableCodec",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCVariableCodec._attempt_storage_read": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "AttributeError",
    "RuntimeWarning",
    "TypeError",
    "getattr",
    "openmmtools.storage.iodrivers.warnings"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCVariableCodec._bind_append": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "NotImplementedError",
    "openmmtools.storage.iodrivers.abc"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCVariableCodec._bind_read": {
  "data": {
   "lineno": 683
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCVariableCodec._bind_write": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "NotImplementedError",
    "openmmtools.storage.iodrivers.abc"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCVariableCodec._check_data_shape_matching": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "NotImplementedError",
    "openmmtools.storage.iodrivers.abc"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCVariableCodec._check_storage_mode": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCVariableCodec._common_bind_output_actions": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCVariableCodec._convert_netcdf_store_type": {
  "data": {
   "lineno": 906,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "getattr",
    "openmmtools.storage.iodrivers.importlib",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCVariableCodec._decoder": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "NotImplementedError",
    "openmmtools.storage.iodrivers.abc"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCVariableCodec._dump_metadata_buffer": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "UnboundLocalError"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCVariableCodec._encoder": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "NotImplementedError",
    "openmmtools.storage.iodrivers.abc"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCVariableCodec._output_mode": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCVariableCodec._write_to_append_at_index": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": [
    "IOError",
    "KeyError",
    "ValueError",
    "abs",
    "int",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCVariableCodec.add_metadata": {
  "data": {
   "lineno": 880
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCVariableCodec.append": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "TypeError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCVariableCodec.dtype": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "NotImplementedError",
    "openmmtools.storage.iodrivers.abc"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCVariableCodec.dtype_string": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "NotImplementedError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCVariableCodec.read": {
  "data": {
   "lineno": 744
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCVariableCodec.storage_type": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "NotImplementedError",
    "openmmtools.storage.iodrivers.abc"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NCVariableCodec.write": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "TypeError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NetCDFIODriver": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "openmmtools.storage.iodrivers.StorageIODriver"
   ]
  },
  "type": "class"
 },
 "openmmtools.storage.iodrivers.NetCDFIODriver.__init__": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "dict",
    "float",
    "int",
    "list",
    "numpy.ndarray",
    "openmmtools.storage.iodrivers.NetCDFIODriver",
    "simtk.unit.Quantity",
    "str",
    "super",
    "super_codec",
    "tuple"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NetCDFIODriver._bind_group": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "openmmtools.storage.iodrivers.normalize_path"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NetCDFIODriver._check_bind_to_file": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "netCDF4.Dataset",
    "openmmtools.storage.iodrivers.os"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NetCDFIODriver._update_IOMetaDataReaders": {
  "data": {
   "lineno": 501
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NetCDFIODriver.add_metadata": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "openmmtools.storage.iodrivers.decompose_path",
    "openmmtools.storage.iodrivers.normalize_path"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NetCDFIODriver.check_infinite_dimension": {
  "data": {
   "lineno": 372
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NetCDFIODriver.check_iterable_dimension": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NetCDFIODriver.check_scalar_dimension": {
  "data": {
   "lineno": 363
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NetCDFIODriver.close": {
  "data": {
   "lineno": 480
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NetCDFIODriver.create_storage_variable": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "KeyError",
    "codec",
    "openmmtools.storage.iodrivers.decompose_path",
    "openmmtools.storage.iodrivers.normalize_path"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NetCDFIODriver.generate_infinite_dimension": {
  "data": {
   "lineno": 404
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NetCDFIODriver.get_directory": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "KeyError",
    "enumerate",
    "openmmtools.storage.iodrivers.decompose_path",
    "openmmtools.storage.iodrivers.normalize_path"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NetCDFIODriver.get_storage_variable": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "openmmtools.storage.iodrivers.decompose_path",
    "openmmtools.storage.iodrivers.normalize_path",
    "uninstanced_codec"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NetCDFIODriver.set_codec": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "codec",
    "openmmtools.storage.iodrivers.NetCDFIODriver",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.NetCDFIODriver.sync": {
  "data": {
   "lineno": 476
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.StorageIODriver": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "openmmtools.storage.iodrivers.ABC"
   ]
  },
  "type": "class"
 },
 "openmmtools.storage.iodrivers.StorageIODriver.__init__": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.StorageIODriver.access_mode": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.StorageIODriver.add_metadata": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "NotImplementedError",
    "openmmtools.storage.iodrivers.abc"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.StorageIODriver.close": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "NotImplementedError",
    "openmmtools.storage.iodrivers.abc"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.StorageIODriver.create_storage_variable": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "NotImplementedError",
    "openmmtools.storage.iodrivers.abc"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.StorageIODriver.file_name": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.StorageIODriver.get_directory": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "NotImplementedError",
    "openmmtools.storage.iodrivers.abc"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.StorageIODriver.get_storage_variable": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "NotImplementedError",
    "openmmtools.storage.iodrivers.abc"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.StorageIODriver.set_codec": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers._DictYamlDumper": {
  "data": {
   "lineno": 1557,
   "symbols_in_volume": [
    "yaml.Dumper"
   ]
  },
  "type": "class"
 },
 "openmmtools.storage.iodrivers._DictYamlDumper.__init__": {
  "data": {
   "lineno": 1559,
   "symbols_in_volume": [
    "openmmtools.storage.iodrivers._DictYamlDumper",
    "simtk.unit.Quantity",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers._DictYamlDumper.quantity_representer": {
  "data": {
   "lineno": 1563,
   "symbols_in_volume": [
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers._DictYamlLoader": {
  "data": {
   "lineno": 1543,
   "symbols_in_volume": [
    "yaml.Loader"
   ]
  },
  "type": "class"
 },
 "openmmtools.storage.iodrivers._DictYamlLoader.__init__": {
  "data": {
   "lineno": 1545,
   "symbols_in_volume": [
    "openmmtools.storage.iodrivers._DictYamlLoader",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers._DictYamlLoader.quantity_constructor": {
  "data": {
   "lineno": 1549,
   "symbols_in_volume": [
    "quantity_from_string",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "openmmtools.storage.iodrivers.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "openmmtools.storage.iodrivers.decompose_path": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.determine_appendable_chunk_size": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "numpy.ceil",
    "sys.getsizeof"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.getsizeof": {
  "data": {
   "shadows": "sys.getsizeof"
  },
  "type": "import"
 },
 "openmmtools.storage.iodrivers.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "openmmtools.storage.iodrivers.nc": {
  "data": {
   "shadows": "netCDF4"
  },
  "type": "import"
 },
 "openmmtools.storage.iodrivers.nc_iterable_decoder": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "len",
    "numpy.empty",
    "openmmtools.storage.iodrivers.NCVariableCodec",
    "output_type",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.nc_numpy_array_decoder": {
  "data": {
   "lineno": 1054
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.nc_string_decoder": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.nc_string_encoder": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.normalize_path": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "openmmtools.storage.iodrivers.decompose_path"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "openmmtools.storage.iodrivers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "openmmtools.storage.iodrivers.scalar_decoder_generator": {
  "data": {
   "lineno": 1079
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.scalar_decoder_generator._scalar_decoder": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "casting_type"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.simple_encoder": {
  "data": {
   "lineno": 1074
  },
  "type": "function"
 },
 "openmmtools.storage.iodrivers.unit": {
  "data": {
   "shadows": "simtk.unit"
  },
  "type": "import"
 },
 "openmmtools.storage.iodrivers.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "openmmtools.storage.iodrivers.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "openmmtools.storage.storageinterface": {
  "data": {
   "symbols_in_volume": [
    "object",
    "openmmtools.storage.storageinterface.abc"
   ]
  },
  "type": "module"
 },
 "openmmtools.storage.storageinterface.ABC": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "openmmtools.storage.storageinterface.StorageInterface": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.storage.storageinterface.StorageInterface.__getattr__": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "getattr",
    "openmmtools.storage.storageinterface.StorageInterfaceDirVar",
    "setattr"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.storageinterface.StorageInterface.__init__": {
  "data": {
   "lineno": 421
  },
  "type": "function"
 },
 "openmmtools.storage.storageinterface.StorageInterface.add_metadata": {
  "data": {
   "lineno": 436
  },
  "type": "function"
 },
 "openmmtools.storage.storageinterface.StorageInterface.file_name": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.storageinterface.StorageInterface.storage_driver": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.storageinterface.StorageInterfaceDirVar": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.storage.storageinterface.StorageInterfaceDirVar.__getattr__": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "openmmtools.storage.storageinterface.StorageInterfaceDirVar",
    "setattr"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.storageinterface.StorageInterfaceDirVar.__init__": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "openmmtools.storage.storageinterface.StorageInterfaceDirVar._bind_to_variable_with_read": {
  "data": {
   "lineno": 342
  },
  "type": "function"
 },
 "openmmtools.storage.storageinterface.StorageInterfaceDirVar._bind_to_variable_with_write_or_append": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "openmmtools.storage.storageinterface.StorageInterfaceDirVar._check_directory": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.storageinterface.StorageInterfaceDirVar._check_read_file": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "NameError",
    "openmmtools.storage.storageinterface.os"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.storageinterface.StorageInterfaceDirVar._check_variable": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.storageinterface.StorageInterfaceDirVar._dump_metadata_buffer": {
  "data": {
   "lineno": 348
  },
  "type": "function"
 },
 "openmmtools.storage.storageinterface.StorageInterfaceDirVar._set_predecessor_as_directory": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.storageinterface.StorageInterfaceDirVar.add_metadata": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "openmmtools.storage.storageinterface.StorageInterfaceDirVar.append": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "KeyError",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.storageinterface.StorageInterfaceDirVar.bound_target": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.storageinterface.StorageInterfaceDirVar.directory": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.storageinterface.StorageInterfaceDirVar.name": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.storageinterface.StorageInterfaceDirVar.path": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.storageinterface.StorageInterfaceDirVar.predecessor": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.storageinterface.StorageInterfaceDirVar.read": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.storageinterface.StorageInterfaceDirVar.variable": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.storageinterface.StorageInterfaceDirVar.write": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "KeyError",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.storage.storageinterface.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "openmmtools.storage.storageinterface.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "openmmtools.tests.test_alchemy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "openmmtools.constants.kB",
    "openmmtools.tests.test_alchemy.temperature"
   ]
  },
  "type": "module"
 },
 "openmmtools.tests.test_alchemy.EXP": {
  "data": {
   "shadows": "pymbar.EXP"
  },
  "type": "import"
 },
 "openmmtools.tests.test_alchemy.GLOBAL_ALCHEMY_PLATFORM": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "openmmtools.tests.test_alchemy.GLOBAL_ENERGY_UNIT": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "openmmtools.tests.test_alchemy.MAX_DELTA": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "openmmtools.tests.test_alchemy.PdfPages": {
  "data": {
   "shadows": "matplotlib.backends.backend_pdf.PdfPages"
  },
  "type": "import"
 },
 "openmmtools.tests.test_alchemy.TestAbsoluteAlchemicalFactory": {
  "data": {
   "lineno": 1314,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.tests.test_alchemy.TestAbsoluteAlchemicalFactory.define_regions": {
  "data": {
   "lineno": 1354,
   "symbols_in_volume": [
    "AlchemicalRegion",
    "classmethod",
    "dict",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestAbsoluteAlchemicalFactory.define_systems": {
  "data": {
   "lineno": 1324,
   "symbols_in_volume": [
    "classmethod",
    "dict",
    "openmmtools.testsystems.AlanineDipeptideImplicit",
    "openmmtools.testsystems.AlanineDipeptideVacuum",
    "openmmtools.testsystems.HostGuestExplicit",
    "openmmtools.testsystems.LennardJonesCluster",
    "openmmtools.testsystems.LennardJonesFluid",
    "openmmtools.testsystems.TolueneImplicitGBn",
    "openmmtools.testsystems.TolueneImplicitOBC2",
    "openmmtools.testsystems.WaterBox"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestAbsoluteAlchemicalFactory.filter_cases": {
  "data": {
   "lineno": 1443,
   "symbols_in_volume": [
    "condition_func",
    "len"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestAbsoluteAlchemicalFactory.generate_cases": {
  "data": {
   "lineno": 1371,
   "symbols_in_volume": [
    "AbsoluteAlchemicalFactory",
    "classmethod",
    "dict",
    "openmmtools.forces.find_forces",
    "openmmtools.tests.test_alchemy.itertools"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestAbsoluteAlchemicalFactory.setup_class": {
  "data": {
   "lineno": 1317,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestAbsoluteAlchemicalFactory.test_fully_interacting_energy": {
  "data": {
   "lineno": 1467,
   "symbols_in_volume": [
    "functools.partial",
    "openmmtools.tests.test_alchemy.compare_system_energies"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestAbsoluteAlchemicalFactory.test_fully_interacting_energy_components": {
  "data": {
   "lineno": 1483,
   "symbols_in_volume": [
    "functools.partial",
    "nose.plugins.attrib.attr",
    "openmmtools.tests.test_alchemy.check_interacting_energy_components"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestAbsoluteAlchemicalFactory.test_noninteracting_energy_components": {
  "data": {
   "lineno": 1475,
   "symbols_in_volume": [
    "functools.partial",
    "openmmtools.tests.test_alchemy.check_noninteracting_energy_components"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestAbsoluteAlchemicalFactory.test_overlap": {
  "data": {
   "lineno": 1525,
   "symbols_in_volume": [
    "functools.partial",
    "nose.plugins.attrib.attr",
    "openmmtools.tests.test_alchemy.overlap_check"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestAbsoluteAlchemicalFactory.test_platforms": {
  "data": {
   "lineno": 1495,
   "symbols_in_volume": [
    "functools.partial",
    "nose.plugins.attrib.attr",
    "openmmtools.tests.test_alchemy.GLOBAL_ALCHEMY_PLATFORM",
    "openmmtools.tests.test_alchemy.check_noninteracting_energy_components",
    "openmmtools.tests.test_alchemy.compare_system_energies"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestAbsoluteAlchemicalFactory.test_split_force_groups": {
  "data": {
   "lineno": 1456,
   "symbols_in_volume": [
    "functools.partial",
    "openmmtools.tests.test_alchemy.check_split_force_groups"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestAbsoluteAlchemicalFactorySlow": {
  "data": {
   "lineno": 1812,
   "symbols_in_volume": [
    "nose.plugins.attrib.attr",
    "openmmtools.tests.test_alchemy.TestAbsoluteAlchemicalFactory"
   ]
  },
  "type": "class"
 },
 "openmmtools.tests.test_alchemy.TestAbsoluteAlchemicalFactorySlow.define_regions": {
  "data": {
   "lineno": 1842,
   "symbols_in_volume": [
    "AlchemicalRegion",
    "classmethod",
    "openmmtools.tests.test_alchemy.TestAbsoluteAlchemicalFactorySlow",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestAbsoluteAlchemicalFactorySlow.define_systems": {
  "data": {
   "lineno": 1816,
   "symbols_in_volume": [
    "classmethod",
    "dict",
    "openmmtools.testsystems.DHFRExplicit",
    "openmmtools.testsystems.DischargedWaterBox",
    "openmmtools.testsystems.LennardJonesFluid",
    "openmmtools.testsystems.LysozymeImplicit",
    "openmmtools.testsystems.SrcExplicit",
    "openmmtools.testsystems.SrcImplicit",
    "openmmtools.testsystems.WaterBox"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestAlchemicalState": {
  "data": {
   "lineno": 1855,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.tests.test_alchemy.TestAlchemicalState._check_compatibility": {
  "data": {
   "lineno": 2232,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestAlchemicalState.setup_class": {
  "data": {
   "lineno": 1858,
   "symbols_in_volume": [
    "AbsoluteAlchemicalFactory",
    "AlchemicalRegion",
    "classmethod",
    "list",
    "openmmtools.testsystems.AlanineDipeptideExplicit",
    "openmmtools.testsystems.AlanineDipeptideVacuum",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestAlchemicalState.test_alchemical_functions": {
  "data": {
   "lineno": 2091,
   "symbols_in_volume": [
    "AlchemicalFunction",
    "AlchemicalState.from_system",
    "openmmtools.tests.test_alchemy.nose"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestAlchemicalState.test_apply_to_context": {
  "data": {
   "lineno": 2005,
   "symbols_in_volume": [
    "AlchemicalState.from_system",
    "openmmtools.tests.test_alchemy.nose"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestAlchemicalState.test_apply_to_system": {
  "data": {
   "lineno": 1945,
   "symbols_in_volume": [
    "AlchemicalState",
    "AlchemicalState.from_system",
    "dict.fromkeys",
    "openmmtools.tests.test_alchemy.nose",
    "set"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestAlchemicalState.test_check_system_consistency": {
  "data": {
   "lineno": 1985,
   "symbols_in_volume": [
    "AlchemicalState.from_system",
    "openmmtools.tests.test_alchemy.nose"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestAlchemicalState.test_constructor": {
  "data": {
   "lineno": 1898,
   "symbols_in_volume": [
    "AlchemicalState",
    "AlchemicalState._get_controlled_parameters",
    "getattr",
    "openmmtools.tests.test_alchemy.nose",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestAlchemicalState.test_constructor_compound_state": {
  "data": {
   "lineno": 2120,
   "symbols_in_volume": [
    "AlchemicalState",
    "AlchemicalState.from_system",
    "dict.fromkeys"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestAlchemicalState.test_equality_operator": {
  "data": {
   "lineno": 1934,
   "symbols_in_volume": [
    "AlchemicalState",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestAlchemicalState.test_find_force_groups_to_update": {
  "data": {
   "lineno": 2056,
   "symbols_in_volume": [
    "AlchemicalState._get_controlled_parameters",
    "AlchemicalState._get_system_controlled_parameters",
    "AlchemicalState.from_system",
    "getattr",
    "openmmtools.tests.test_alchemy.create_context",
    "set",
    "setattr"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestAlchemicalState.test_from_system_constructor": {
  "data": {
   "lineno": 1917,
   "symbols_in_volume": [
    "AlchemicalState._get_controlled_parameters",
    "AlchemicalState.from_system",
    "getattr",
    "openmmtools.tests.test_alchemy.nose",
    "openmmtools.testsystems.AlanineDipeptideVacuum"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestAlchemicalState.test_lambda_properties_compound_state": {
  "data": {
   "lineno": 2138,
   "symbols_in_volume": [
    "AlchemicalFunction",
    "AlchemicalState.from_system",
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestAlchemicalState.test_method_compatibility_compound_state": {
  "data": {
   "lineno": 2197,
   "symbols_in_volume": [
    "AlchemicalState.from_system"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestAlchemicalState.test_method_reduced_potential_compound_state": {
  "data": {
   "lineno": 2245,
   "symbols_in_volume": [
    "AlchemicalState",
    "len"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestAlchemicalState.test_serialization": {
  "data": {
   "lineno": 2297,
   "symbols_in_volume": [
    "AlchemicalFunction",
    "AlchemicalState",
    "openmmtools.tests.test_alchemy.pickle",
    "openmmtools.tests.test_alchemy.zlib"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestAlchemicalState.test_set_system_compound_state": {
  "data": {
   "lineno": 2173,
   "symbols_in_volume": [
    "AlchemicalState.from_system",
    "openmmtools.tests.test_alchemy.nose"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestAlchemicalState.test_standardize_system": {
  "data": {
   "lineno": 2034,
   "symbols_in_volume": [
    "AlchemicalState.from_system",
    "getattr"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestDispersionlessAlchemicalFactory": {
  "data": {
   "lineno": 1740,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.tests.test_alchemy.TestDispersionlessAlchemicalFactory.define_regions": {
  "data": {
   "lineno": 1759,
   "symbols_in_volume": [
    "AlchemicalRegion",
    "classmethod",
    "dict",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestDispersionlessAlchemicalFactory.define_systems": {
  "data": {
   "lineno": 1752,
   "symbols_in_volume": [
    "classmethod",
    "dict",
    "openmmtools.testsystems.LennardJonesFluid"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestDispersionlessAlchemicalFactory.generate_cases": {
  "data": {
   "lineno": 1765,
   "symbols_in_volume": [
    "AbsoluteAlchemicalFactory",
    "classmethod",
    "dict",
    "openmmtools.tests.test_alchemy.itertools"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestDispersionlessAlchemicalFactory.setup_class": {
  "data": {
   "lineno": 1745,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestDispersionlessAlchemicalFactory.test_overlap": {
  "data": {
   "lineno": 1800,
   "symbols_in_volume": [
    "functools.partial",
    "openmmtools.tests.test_alchemy.overlap_check"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestMultiRegionAbsoluteAlchemicalFactory": {
  "data": {
   "lineno": 1537,
   "symbols_in_volume": [
    "openmmtools.tests.test_alchemy.TestAbsoluteAlchemicalFactory"
   ]
  },
  "type": "class"
 },
 "openmmtools.tests.test_alchemy.TestMultiRegionAbsoluteAlchemicalFactory.define_regions": {
  "data": {
   "lineno": 1558,
   "symbols_in_volume": [
    "AlchemicalRegion",
    "classmethod",
    "dict",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestMultiRegionAbsoluteAlchemicalFactory.define_systems": {
  "data": {
   "lineno": 1540,
   "symbols_in_volume": [
    "classmethod",
    "dict",
    "openmmtools.testsystems.HostGuestExplicit",
    "openmmtools.testsystems.LennardJonesCluster",
    "openmmtools.testsystems.LennardJonesFluid",
    "openmmtools.testsystems.WaterBox"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestMultiRegionAbsoluteAlchemicalFactory.generate_cases": {
  "data": {
   "lineno": 1579,
   "symbols_in_volume": [
    "AbsoluteAlchemicalFactory",
    "classmethod",
    "dict",
    "enumerate",
    "openmmtools.forces.find_forces",
    "openmmtools.tests.test_alchemy.itertools"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestMultiRegionAbsoluteAlchemicalFactory.test_fully_interacting_energy_components": {
  "data": {
   "lineno": 1727,
   "symbols_in_volume": [
    "functools.partial",
    "nose.plugins.attrib.attr",
    "openmmtools.tests.test_alchemy.check_multi_interacting_energy_components"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestMultiRegionAbsoluteAlchemicalFactory.test_noninteracting_energy_components": {
  "data": {
   "lineno": 1689,
   "symbols_in_volume": [
    "functools.partial",
    "openmmtools.tests.test_alchemy.check_multi_noninteracting_energy_components"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestMultiRegionAbsoluteAlchemicalFactory.test_platforms": {
  "data": {
   "lineno": 1697,
   "symbols_in_volume": [
    "functools.partial",
    "nose.plugins.attrib.attr",
    "openmmtools.tests.test_alchemy.GLOBAL_ALCHEMY_PLATFORM",
    "openmmtools.tests.test_alchemy.check_multi_noninteracting_energy_components",
    "openmmtools.tests.test_alchemy.compare_system_energies"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.TestMultiRegionAbsoluteAlchemicalFactory.test_split_force_groups": {
  "data": {
   "lineno": 1675,
   "symbols_in_volume": [
    "functools.partial",
    "openmmtools.tests.test_alchemy.check_split_force_groups"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.app": {
  "data": {
   "shadows": "simtk.openmm.app"
  },
  "type": "import"
 },
 "openmmtools.tests.test_alchemy.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "openmmtools.tests.test_alchemy.assert_almost_equal": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "abs",
    "openmmtools.tests.test_alchemy.MAX_DELTA"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.attr": {
  "data": {
   "shadows": "nose.plugins.attrib.attr"
  },
  "type": "import"
 },
 "openmmtools.tests.test_alchemy.benchmark": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "AbsoluteAlchemicalFactory",
    "openmmtools.tests.test_alchemy.GLOBAL_ALCHEMY_PLATFORM",
    "print"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.benchmark_alchemy_from_pdb": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "AlchemicalRegion",
    "int",
    "len",
    "openmmtools.tests.test_alchemy.argparse",
    "openmmtools.tests.test_alchemy.benchmark",
    "openmmtools.tests.test_alchemy.mdtraj",
    "openmmtools.tests.test_alchemy.minimize",
    "print",
    "simtk.openmm.app.ForceField",
    "simtk.openmm.app.Modeller",
    "simtk.openmm.app.PDBFile",
    "simtk.openmm.app.PME",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.check_interacting_energy_components": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "openmmtools.forces.find_forces",
    "openmmtools.tests.test_alchemy.GLOBAL_ALCHEMY_PLATFORM",
    "openmmtools.tests.test_alchemy.assert_almost_equal",
    "openmmtools.tests.test_alchemy.compute_direct_space_correction",
    "openmmtools.tests.test_alchemy.compute_force_energy",
    "openmmtools.tests.test_alchemy.dissect_nonbonded_energy",
    "openmmtools.tests.test_alchemy.is_alchemical_pme_treatment_exact",
    "print",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.check_multi_interacting_energy_components": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "openmmtools.tests.test_alchemy.check_interacting_energy_components",
    "set"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.check_multi_noninteracting_energy_components": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "openmmtools.tests.test_alchemy.check_noninteracting_energy_components"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.check_noninteracting_energy_components": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "KeyError",
    "NotImplementedError",
    "assert_zero_energy",
    "enumerate",
    "isinstance",
    "len",
    "openmmtools.tests.test_alchemy.GLOBAL_ALCHEMY_PLATFORM",
    "openmmtools.tests.test_alchemy.assert_almost_equal",
    "openmmtools.tests.test_alchemy.compute_force_energy",
    "openmmtools.tests.test_alchemy.is_alchemical_pme_treatment_exact",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.check_noninteracting_energy_components.assert_zero_energy": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "abs",
    "openmmtools.tests.test_alchemy.GLOBAL_ENERGY_UNIT",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.check_split_force_groups": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "KeyError",
    "getattr",
    "len",
    "openmmtools.forces.find_forces",
    "openmmtools.tests.test_alchemy.is_alchemical_pme_treatment_exact",
    "set"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.compare_system_energies": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "Exception",
    "abs",
    "isinstance",
    "list",
    "openmmtools.forces.find_forces",
    "openmmtools.tests.test_alchemy.GLOBAL_ENERGY_UNIT",
    "openmmtools.tests.test_alchemy.MAX_DELTA",
    "openmmtools.tests.test_alchemy.compute_direct_space_correction",
    "openmmtools.tests.test_alchemy.compute_energy",
    "openmmtools.tests.test_alchemy.is_alchemical_pme_treatment_exact",
    "print",
    "zip"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.compute_direct_space_correction": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "isinstance",
    "openmmtools.tests.test_alchemy.scipy",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.compute_energy": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "openmmtools.tests.test_alchemy.create_context"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.compute_force_energy": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "openmmtools.tests.test_alchemy.compute_energy"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.create_context": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "openmmtools.tests.test_alchemy.GLOBAL_ALCHEMY_PLATFORM"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.dissect_nonbonded_energy": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "list",
    "openmmtools.tests.test_alchemy.assert_almost_equal",
    "openmmtools.tests.test_alchemy.compute_energy",
    "openmmtools.tests.test_alchemy.turn_off_nonbonded",
    "range",
    "reversed",
    "set"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.forces": {
  "data": {
   "shadows": "openmmtools.forces"
  },
  "type": "import"
 },
 "openmmtools.tests.test_alchemy.generate_trace": {
  "data": {
   "lineno": 1263,
   "symbols_in_volume": [
    "openmmtools.tests.test_alchemy.lambda_trace"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.is_alchemical_pme_treatment_exact": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "openmmtools.forces.find_forces",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "openmmtools.tests.test_alchemy.kB": {
  "data": {
   "shadows": "openmmtools.constants.kB"
  },
  "type": "import"
 },
 "openmmtools.tests.test_alchemy.lambda_trace": {
  "data": {
   "lineno": 1217,
   "symbols_in_volume": [
    "AbsoluteAlchemicalFactory",
    "matplotlib.backends.backend_pdf.PdfPages",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.plot",
    "matplotlib.pyplot.title",
    "matplotlib.pyplot.xlabel",
    "matplotlib.pyplot.ylabel",
    "openmmtools.tests.test_alchemy.GLOBAL_ENERGY_UNIT",
    "openmmtools.tests.test_alchemy.compute_energy",
    "openmmtools.tests.test_alchemy.logger",
    "openmmtools.tests.test_alchemy.rstyle",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.logger": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "openmmtools.tests.test_alchemy.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "openmmtools.tests.test_alchemy.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "openmmtools.tests.test_alchemy.minimize": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "openmmtools.tests.test_alchemy.create_context"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "openmmtools.tests.test_alchemy.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "openmmtools.tests.test_alchemy.overlap_check": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "Exception",
    "FileNotFoundError",
    "dict",
    "len",
    "open",
    "openmmtools.constants.kB",
    "openmmtools.tests.test_alchemy.create_context",
    "openmmtools.tests.test_alchemy.minimize",
    "openmmtools.tests.test_alchemy.os",
    "openmmtools.tests.test_alchemy.pickle",
    "openmmtools.tests.test_alchemy.sys",
    "openmmtools.tests.test_alchemy.temperature",
    "print",
    "pymbar.EXP",
    "pymbar.timeseries.detectEquilibration",
    "pymbar.timeseries.subsampleCorrelatedData",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "openmmtools.tests.test_alchemy.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "openmmtools.tests.test_alchemy.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "openmmtools.tests.test_alchemy.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "openmmtools.tests.test_alchemy.pylab": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "openmmtools.tests.test_alchemy.rstyle": {
  "data": {
   "lineno": 1170,
   "symbols_in_volume": [
    "isinstance",
    "matplotlib.pyplot.rcParams",
    "matplotlib.pyplot.xticks",
    "matplotlib.pyplot.yticks",
    "openmmtools.tests.test_alchemy.matplotlib",
    "openmmtools.tests.test_alchemy.pylab"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "openmmtools.tests.test_alchemy.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "openmmtools.tests.test_alchemy.temperature": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "openmmtools.tests.test_alchemy.test_resolve_alchemical_region": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": [
    "AbsoluteAlchemicalFactory._resolve_alchemical_region",
    "AlchemicalRegion",
    "ValueError",
    "enumerate",
    "frozenset",
    "getattr",
    "isinstance",
    "len",
    "openmmtools.tests.test_alchemy.nose",
    "openmmtools.testsystems.AlanineDipeptideVacuum",
    "openmmtools.testsystems.LennardJonesCluster",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.testsystems": {
  "data": {
   "shadows": "openmmtools.testsystems"
  },
  "type": "import"
 },
 "openmmtools.tests.test_alchemy.timeseries": {
  "data": {
   "shadows": "pymbar.timeseries"
  },
  "type": "import"
 },
 "openmmtools.tests.test_alchemy.turn_off_nonbonded": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "TypeError",
    "frozenset",
    "isinstance",
    "len",
    "list",
    "openmmtools.forces.find_forces",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_alchemy.zlib": {
  "data": {
   "shadows": "zlib"
  },
  "type": "import"
 },
 "openmmtools.tests.test_cache": {
  "data": {},
  "type": "module"
 },
 "openmmtools.tests.test_cache.TestContextCache": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.tests.test_cache.TestContextCache.cache_incompatible_contexts": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "classmethod",
    "id",
    "len",
    "openmmtools.tests.test_cache.itertools",
    "set"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_cache.TestContextCache.setup_class": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "classmethod",
    "openmmtools.states.ThermodynamicState",
    "openmmtools.testsystems.WaterBox",
    "simtk.unit.atmosphere",
    "simtk.unit.femtosecond",
    "simtk.unit.kelvin",
    "simtk.unit.nanometer",
    "simtk.unit.picosecond"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_cache.TestContextCache.test_cache_capacity_ttl": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "ContextCache",
    "len"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_cache.TestContextCache.test_copy_integrator_state": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "read_attribute",
    "simtk.unit.femtosecond",
    "simtk.unit.kelvin",
    "simtk.unit.picosecond",
    "simtk.unit.picoseconds"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_cache.TestContextCache.test_copy_integrator_state.read_attribute": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_cache.TestContextCache.test_generate_compatible_context_key": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "len",
    "openmmtools.tests.test_cache.itertools",
    "set"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_cache.TestContextCache.test_generate_incompatible_context_key": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "len",
    "openmmtools.tests.test_cache.itertools",
    "set"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_cache.TestContextCache.test_get_compatible_context": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "ContextCache",
    "id",
    "len",
    "openmmtools.tests.test_cache.itertools",
    "set"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_cache.TestContextCache.test_get_context_any_integrator": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "ContextCache",
    "isinstance",
    "len",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_cache.TestContextCache.test_get_incompatible_context": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "ContextCache",
    "len"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_cache.TestContextCache.test_integrator_global_variable_standardization": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "ContextCache",
    "len",
    "simtk.unit.kelvin"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_cache.TestContextCache.test_platform_properties": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "ContextCache",
    "ValueError",
    "openmmtools.tests.test_cache.nose",
    "simtk.unit.kelvin",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_cache.TestContextCache.test_platform_property": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "ContextCache",
    "RuntimeError",
    "openmmtools.tests.test_cache.nose"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_cache.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "openmmtools.tests.test_cache.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "openmmtools.tests.test_cache.states": {
  "data": {
   "shadows": "openmmtools.states"
  },
  "type": "import"
 },
 "openmmtools.tests.test_cache.test_lru_cache_access_to_live": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "LRUCache",
    "almost_expire_first"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_cache.test_lru_cache_access_to_live.almost_expire_first": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_cache.test_lru_cache_cache_entry_unpacking": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "LRUCache",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_cache.test_lru_cache_capacity_property": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "LRUCache",
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_cache.test_lru_cache_eliminate_least_recently_used": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "LRUCache",
    "len"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_cache.test_lru_cache_maximum_capacity": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "LRUCache",
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_cache.test_lru_cache_time_to_live_property": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "LRUCache",
    "add_4_elements",
    "len"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_cache.test_lru_cache_time_to_live_property.add_4_elements": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_cache.testsystems": {
  "data": {
   "shadows": "openmmtools.testsystems"
  },
  "type": "import"
 },
 "openmmtools.tests.test_cache.unit": {
  "data": {
   "shadows": "simtk.unit"
  },
  "type": "import"
 },
 "openmmtools.tests.test_forcefactories": {
  "data": {},
  "type": "module"
 },
 "openmmtools.tests.test_forcefactories.GLOBAL_FORCES_PLATFORM": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "openmmtools.tests.test_forcefactories.GLOBAL_FORCE_UNIT": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "openmmtools.tests.test_forcefactories.MAX_FORCE_RELATIVE_ERROR": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "openmmtools.tests.test_forcefactories.compare_system_forces": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "Exception",
    "magnitude",
    "openmmtools.tests.test_forcefactories.GLOBAL_FORCE_UNIT",
    "openmmtools.tests.test_forcefactories.MAX_FORCE_RELATIVE_ERROR",
    "openmmtools.tests.test_forcefactories.compute_forces"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_forcefactories.compare_system_forces.magnitude": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "openmmtools.tests.test_forcefactories.compute_forces": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "openmmtools.tests.test_forcefactories.create_context"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_forcefactories.create_context": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "openmmtools.tests.test_forcefactories.GLOBAL_FORCES_PLATFORM"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_forcefactories.generate_new_positions": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "openmmtools.tests.test_forcefactories.create_context"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_forcefactories.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "openmmtools.tests.test_forcefactories.states": {
  "data": {
   "shadows": "openmmtools.states"
  },
  "type": "import"
 },
 "openmmtools.tests.test_forcefactories.test_replace_reaction_field": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "functools.partial",
    "openmmtools.tests.test_forcefactories.compare_system_forces",
    "openmmtools.tests.test_forcefactories.generate_new_positions",
    "openmmtools.testsystems.AlanineDipeptideExplicit",
    "openmmtools.testsystems.HostGuestExplicit",
    "replace_reaction_field"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_forcefactories.test_restrain_atoms": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "openmmtools.states.SamplerState",
    "openmmtools.states.ThermodynamicState",
    "openmmtools.testsystems.HostGuestExplicit",
    "restrain_atoms"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_forcefactories.testsystems": {
  "data": {
   "shadows": "openmmtools.testsystems"
  },
  "type": "import"
 },
 "openmmtools.tests.test_forces": {
  "data": {},
  "type": "module"
 },
 "openmmtools.tests.test_forces.TestRadiallySymmetricRestraints": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.tests.test_forces.TestRadiallySymmetricRestraints.setup_class": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "FlatBottomRestraintBondForce",
    "FlatBottomRestraintForce",
    "HarmonicRestraintBondForce",
    "HarmonicRestraintForce",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_forces.TestRadiallySymmetricRestraints.test_compute_restraint_volume": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "openmmtools.states.ThermodynamicState",
    "openmmtools.testsystems.TolueneVacuum",
    "reversed",
    "zip"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_forces.TestRadiallySymmetricRestraints.test_compute_restraint_volume.assert_integrated_analytical_equal": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_forces.TestRadiallySymmetricRestraints.test_compute_standard_state_correction": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "TypeError",
    "assert_equal_ssc",
    "isinstance",
    "openmmtools.forces._compute_harmonic_radius",
    "openmmtools.forces._compute_sphere_volume",
    "openmmtools.states.ThermodynamicState",
    "openmmtools.testsystems.AlanineDipeptideExplicit",
    "openmmtools.testsystems.TolueneVacuum"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_forces.TestRadiallySymmetricRestraints.test_compute_standard_state_correction.assert_equal_ssc": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "openmmtools.tests.test_forces.TestRadiallySymmetricRestraints.test_controlling_parameter_name": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "openmmtools.tests.test_forces.TestRadiallySymmetricRestraints.test_restorable_forces": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "openmmtools.tests.test_forces.assert_pickles_equal"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_forces.TestRadiallySymmetricRestraints.test_restraint_properties": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "isinstance",
    "openmmtools.tests.test_forces.assert_equal",
    "openmmtools.tests.test_forces.assert_quantity_almost_equal"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_forces._compute_harmonic_radius": {
  "data": {
   "shadows": "openmmtools.forces._compute_harmonic_radius"
  },
  "type": "import"
 },
 "openmmtools.tests.test_forces._compute_sphere_volume": {
  "data": {
   "shadows": "openmmtools.forces._compute_sphere_volume"
  },
  "type": "import"
 },
 "openmmtools.tests.test_forces.assert_equal": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "openmmtools.tests.test_forces.assert_pickles_equal": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "openmmtools.tests.test_forces.pickle"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_forces.assert_quantity_almost_equal": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "openmmtools.tests.test_forces.nose.tools": {
  "data": {
   "shadows": "nose.tools"
  },
  "type": "import"
 },
 "openmmtools.tests.test_forces.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "openmmtools.tests.test_forces.states": {
  "data": {
   "shadows": "openmmtools.states"
  },
  "type": "import"
 },
 "openmmtools.tests.test_forces.test_find_forces": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "HarmonicRestraintBondForce",
    "find_forces",
    "openmmtools.testsystems.TolueneVacuum"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_forces.test_find_forces.assert_forces_equal": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "list",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_forces.testsystems": {
  "data": {
   "shadows": "openmmtools.testsystems"
  },
  "type": "import"
 },
 "openmmtools.tests.test_integrators": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "openmmtools.tests.test_integrators.test_alchemical_langevin_integrator",
    "simtk.unit.AVOGADRO_CONSTANT_NA",
    "simtk.unit.BOLTZMANN_CONSTANT_kB"
   ]
  },
  "type": "module"
 },
 "openmmtools.tests.test_integrators.AlchemicalNonequilibriumLangevinIntegrator": {
  "data": {
   "shadows": "openmmtools.integrators.AlchemicalNonequilibriumLangevinIntegrator"
  },
  "type": "import"
 },
 "openmmtools.tests.test_integrators.GHMCIntegrator": {
  "data": {
   "shadows": "openmmtools.integrators.GHMCIntegrator"
  },
  "type": "import"
 },
 "openmmtools.tests.test_integrators.NoseHooverChainVelocityVerletIntegrator": {
  "data": {
   "shadows": "openmmtools.integrators.NoseHooverChainVelocityVerletIntegrator"
  },
  "type": "import"
 },
 "openmmtools.tests.test_integrators.PDBFile": {
  "data": {
   "shadows": "simtk.openmm.app.PDBFile"
  },
  "type": "import"
 },
 "openmmtools.tests.test_integrators.PeriodicNonequilibriumIntegrator": {
  "data": {
   "shadows": "openmmtools.integrators.PeriodicNonequilibriumIntegrator"
  },
  "type": "import"
 },
 "openmmtools.tests.test_integrators.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "openmmtools.tests.test_integrators.TestExternalPerturbationLangevinIntegrator": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "openmmtools.tests.test_integrators.TestExternalPerturbationLangevinIntegrator.compare_external_protocol_work_accumulation": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "float",
    "openmmtools.constants.kB",
    "range",
    "simtk.unit.kelvin"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_integrators.TestExternalPerturbationLangevinIntegrator.create_system": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "Exception",
    "openmmtools.integrators.ExternalPerturbationLangevinIntegrator",
    "print",
    "simtk.openmm.Context",
    "simtk.openmm.Platform.getPlatformByName",
    "simtk.openmm.version.short_version",
    "simtk.unit.kelvin"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_integrators.TestExternalPerturbationLangevinIntegrator.run_ncmc": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "float",
    "openmmtools.tests.test_integrators.kB",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_integrators.TestExternalPerturbationLangevinIntegrator.test_initial_protocol_work": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "getattr",
    "numpy.allclose",
    "openmmtools.testsystems.AlchemicalWaterBox",
    "simtk.openmm.MonteCarloBarostat",
    "simtk.openmm.app",
    "simtk.unit.atmospheres",
    "simtk.unit.kelvin"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_integrators.TestExternalPerturbationLangevinIntegrator.test_ncmc_update_parameters_in_context": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "abs",
    "float",
    "getattr",
    "openmmtools.constants.kB",
    "openmmtools.integrators.ExternalPerturbationLangevinIntegrator",
    "openmmtools.testsystems.WaterBox",
    "range",
    "simtk.openmm.Context",
    "simtk.openmm.Platform.getPlatformByName",
    "simtk.openmm.app",
    "simtk.unit.angstrom",
    "simtk.unit.femtoseconds",
    "simtk.unit.kelvin",
    "simtk.unit.picoseconds",
    "switchoff",
    "switchon"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_integrators.TestExternalPerturbationLangevinIntegrator.test_ncmc_update_parameters_in_context.switchoff": {
  "data": {
   "lineno": 496
  },
  "type": "function"
 },
 "openmmtools.tests.test_integrators.TestExternalPerturbationLangevinIntegrator.test_ncmc_update_parameters_in_context.switchon": {
  "data": {
   "lineno": 502
  },
  "type": "function"
 },
 "openmmtools.tests.test_integrators.TestExternalPerturbationLangevinIntegrator.test_protocol_work_accumulation_harmonic_oscillator": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "openmmtools.testsystems.HarmonicOscillator",
    "simtk.unit.angstroms"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_integrators.TestExternalPerturbationLangevinIntegrator.test_protocol_work_accumulation_waterbox": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "getattr",
    "openmmtools.testsystems.AlchemicalWaterBox",
    "range",
    "simtk.openmm.Platform.getNumPlatforms",
    "simtk.openmm.Platform.getPlatform",
    "simtk.openmm.app",
    "simtk.unit.angstroms"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_integrators.TestExternalPerturbationLangevinIntegrator.test_protocol_work_accumulation_waterbox_barostat": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "getattr",
    "openmmtools.testsystems.AlchemicalWaterBox",
    "range",
    "simtk.openmm.MonteCarloBarostat",
    "simtk.openmm.Platform.getNumPlatforms",
    "simtk.openmm.Platform.getPlatform",
    "simtk.openmm.app",
    "simtk.unit.angstroms",
    "simtk.unit.atmospheres",
    "simtk.unit.kelvin"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_integrators.TestExternalPerturbationLangevinIntegrator.test_reset_protocol_work": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "abs",
    "getattr",
    "openmmtools.testsystems.AlchemicalAlanineDipeptide",
    "range",
    "simtk.openmm.app",
    "simtk.unit.kelvin"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_integrators.ThermostatedIntegrator": {
  "data": {
   "shadows": "openmmtools.integrators.ThermostatedIntegrator"
  },
  "type": "import"
 },
 "openmmtools.tests.test_integrators.app": {
  "data": {
   "shadows": "simtk.openmm.app"
  },
  "type": "import"
 },
 "openmmtools.tests.test_integrators.check_integrator_temperature": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "numpy.isclose",
    "openmmtools.integrators.kB",
    "simtk.unit.kelvin",
    "simtk.unit.md_unit_system"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_integrators.check_integrator_temperature_getter_setter": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "openmmtools.tests.test_integrators.check_integrator_temperature",
    "simtk.unit.kelvin"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_integrators.check_stability": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "Exception",
    "hasattr",
    "numpy.isnan",
    "openmmtools.tests.test_integrators.kB",
    "simtk.openmm.Context",
    "simtk.unit.kelvin"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_integrators.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "openmmtools.tests.test_integrators.get_all_custom_integrators": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "issubclass",
    "old_predicate",
    "openmmtools.integrators",
    "openmmtools.integrators.ThermostatedIntegrator",
    "openmmtools.tests.test_integrators.inspect",
    "simtk.openmm.CustomIntegrator"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_integrators.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "openmmtools.tests.test_integrators.integrators": {
  "data": {
   "shadows": "openmmtools.integrators"
  },
  "type": "import"
 },
 "openmmtools.tests.test_integrators.kB": {
  "data": {
   "shadows": "openmmtools.constants.kB"
  },
  "type": "import"
 },
 "openmmtools.tests.test_integrators.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "openmmtools.tests.test_integrators.openmm": {
  "data": {
   "shadows": "simtk.openmm"
  },
  "type": "import"
 },
 "openmmtools.tests.test_integrators.pymbar": {
  "data": {
   "shadows": "pymbar"
  },
  "type": "import"
 },
 "openmmtools.tests.test_integrators.run_alchemical_langevin_integrator": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "int",
    "max",
    "numpy.abs",
    "numpy.float64",
    "numpy.zeros",
    "openmmtools.constants.kB",
    "openmmtools.integrators.AlchemicalNonequilibriumLangevinIntegrator",
    "openmmtools.integrators.GHMCIntegrator",
    "openmmtools.tests.test_integrators.pymbar",
    "openmmtools.testsystems.HarmonicOscillator",
    "print",
    "range",
    "simtk.openmm.CompoundIntegrator",
    "simtk.openmm.Context",
    "simtk.openmm.Platform.getPlatformByName",
    "simtk.unit.amu",
    "simtk.unit.angstrom",
    "simtk.unit.kelvin",
    "simtk.unit.md_unit_system",
    "simtk.unit.sqrt"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_integrators.test_alchemical_langevin_integrator": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "openmmtools.tests.test_integrators.run_alchemical_langevin_integrator"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_integrators.test_baoab_heat_accumulation": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "openmmtools.integrators.BAOABIntegrator",
    "openmmtools.integrators.VVVRIntegrator",
    "openmmtools.testsystems.HarmonicOscillator",
    "simtk.openmm.Context",
    "simtk.unit.kelvin",
    "simtk.unit.kilojoules_per_mole"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_integrators.test_external_protocol_work_accumulation": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "openmmtools.integrators.ExternalPerturbationLangevinIntegrator",
    "openmmtools.integrators.VVVRIntegrator",
    "openmmtools.testsystems.HarmonicOscillator",
    "simtk.openmm.Context",
    "simtk.unit.angstroms",
    "simtk.unit.kelvin",
    "simtk.unit.kilocalories_per_mole",
    "simtk.unit.kilojoules_per_mole"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_integrators.test_integrator_decorators": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "openmmtools.integrators.HMCIntegrator",
    "openmmtools.testsystems.IdealGas",
    "simtk.openmm.Context",
    "simtk.unit.femtoseconds",
    "simtk.unit.kelvin"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_integrators.test_nose_hoover_integrator": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "abs",
    "numpy.abs",
    "numpy.amax",
    "numpy.mean",
    "openmmtools.integrators.NoseHooverChainVelocityVerletIntegrator",
    "openmmtools.testsystems.WaterBox",
    "range",
    "simtk.openmm.Context",
    "simtk.unit.MOLAR_GAS_CONSTANT_R.value_in_unit",
    "simtk.unit.kelvin",
    "simtk.unit.kilojoules_per_mole"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_integrators.test_periodic_langevin_integrator": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "list",
    "numpy.abs",
    "numpy.array",
    "numpy.isclose",
    "open",
    "openmmtools.constants.kB",
    "openmmtools.integrators.PeriodicNonequilibriumIntegrator",
    "openmmtools.tests.test_integrators.copy",
    "openmmtools.tests.test_integrators.pymbar",
    "openmmtools.testsystems.HarmonicOscillator",
    "print",
    "range",
    "simtk.openmm.Context",
    "simtk.openmm.Platform.getPlatformByName",
    "simtk.openmm.app.PDBFile.writeModel",
    "simtk.unit.amu",
    "simtk.unit.angstrom",
    "simtk.unit.kelvin",
    "simtk.unit.md_unit_system",
    "simtk.unit.sqrt"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_integrators.test_pretty_formatting": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "hasattr",
    "integrator_class",
    "len",
    "openmmtools.tests.test_integrators.get_all_custom_integrators"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_integrators.test_restorable_integrator_copy": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "integrator_class",
    "isinstance",
    "openmmtools.tests.test_integrators.copy",
    "openmmtools.tests.test_integrators.get_all_custom_integrators",
    "set"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_integrators.test_stabilities": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "integrator_class",
    "openmmtools.tests.test_integrators.check_stability",
    "openmmtools.tests.test_integrators.get_all_custom_integrators",
    "openmmtools.testsystems"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_integrators.test_temperature_getter_setter": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "dict",
    "hasattr",
    "integrator_class",
    "isinstance",
    "openmmtools.integrators.ThermostatedIntegrator.is_thermostated",
    "openmmtools.integrators.ThermostatedIntegrator.restore_interface",
    "openmmtools.tests.test_integrators.check_integrator_temperature",
    "openmmtools.tests.test_integrators.check_integrator_temperature_getter_setter",
    "openmmtools.tests.test_integrators.get_all_custom_integrators",
    "openmmtools.testsystems.HarmonicOscillator",
    "simtk.openmm.Context",
    "simtk.unit.kelvin"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_integrators.test_update_context_state_calls": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "hasattr",
    "integrator_class",
    "openmmtools.tests.test_integrators.get_all_custom_integrators",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_integrators.test_vvvr_shadow_work_accumulation": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "openmmtools.integrators.VVVRIntegrator",
    "openmmtools.testsystems.HarmonicOscillator",
    "simtk.openmm.Context",
    "simtk.unit.kelvin",
    "simtk.unit.kilojoules_per_mole"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_integrators.testsystems": {
  "data": {
   "shadows": "openmmtools.testsystems"
  },
  "type": "import"
 },
 "openmmtools.tests.test_integrators.unit": {
  "data": {
   "shadows": "simtk.unit"
  },
  "type": "import"
 },
 "openmmtools.tests.test_integrators_and_testsystems": {
  "data": {
   "symbols_in_volume": [
    "simtk.unit.AVOGADRO_CONSTANT_NA",
    "simtk.unit.BOLTZMANN_CONSTANT_kB"
   ]
  },
  "type": "module"
 },
 "openmmtools.tests.test_integrators_and_testsystems.check_combination": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "simtk.openmm.Context"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_integrators_and_testsystems.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "openmmtools.tests.test_integrators_and_testsystems.integrators": {
  "data": {
   "shadows": "openmmtools.integrators"
  },
  "type": "import"
 },
 "openmmtools.tests.test_integrators_and_testsystems.kB": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "openmmtools.tests.test_integrators_and_testsystems.openmm": {
  "data": {
   "shadows": "simtk.openmm"
  },
  "type": "import"
 },
 "openmmtools.tests.test_integrators_and_testsystems.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "openmmtools.tests.test_integrators_and_testsystems.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "openmmtools.tests.test_integrators_and_testsystems.test_integrators_and_testsystems": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ImportError",
    "all_subclasses",
    "functools.partial",
    "getattr",
    "integrator_class",
    "issubclass",
    "openmmtools.integrators",
    "openmmtools.integrators.ThermostatedIntegrator",
    "openmmtools.tests.test_integrators_and_testsystems.check_combination",
    "openmmtools.tests.test_integrators_and_testsystems.inspect",
    "openmmtools.testsystems",
    "openmmtools.testsystems.TestSystem",
    "print",
    "simtk.openmm.CustomIntegrator",
    "simtk.openmm.Platform.getPlatformByName"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_integrators_and_testsystems.test_integrators_and_testsystems.all_subclasses": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "openmmtools.tests.test_integrators_and_testsystems.testsystems": {
  "data": {
   "shadows": "openmmtools.testsystems"
  },
  "type": "import"
 },
 "openmmtools.tests.test_integrators_and_testsystems.unit": {
  "data": {
   "shadows": "simtk.unit"
  },
  "type": "import"
 },
 "openmmtools.tests.test_mcmc": {
  "data": {
   "symbols_in_volume": [
    "GHMCMove",
    "HMCMove",
    "LangevinDynamicsMove",
    "MonteCarloBarostatMove",
    "SequenceMove",
    "WeightedMove",
    "__name__",
    "openmmtools.tests.test_mcmc.test_minimizer_all_testsystems",
    "openmmtools.testsystems.HarmonicOscillator",
    "openmmtools.testsystems.HarmonicOscillatorArray",
    "openmmtools.testsystems.IdealGas"
   ]
  },
  "type": "module"
 },
 "openmmtools.tests.test_mcmc.NSIGMA_CUTOFF": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "openmmtools.tests.test_mcmc.SamplerState": {
  "data": {
   "shadows": "openmmtools.states.SamplerState"
  },
  "type": "import"
 },
 "openmmtools.tests.test_mcmc.ThermodynamicState": {
  "data": {
   "shadows": "openmmtools.states.ThermodynamicState"
  },
  "type": "import"
 },
 "openmmtools.tests.test_mcmc.analytical_testsystems": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "openmmtools.tests.test_mcmc.debug": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "openmmtools.tests.test_mcmc.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "openmmtools.tests.test_mcmc.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "openmmtools.tests.test_mcmc.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "openmmtools.tests.test_mcmc.subtest_mcmc_expectation": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "MCMCSampler",
    "abs",
    "hasattr",
    "openmmtools.states.SamplerState",
    "openmmtools.states.ThermodynamicState",
    "openmmtools.tests.test_mcmc.NSIGMA_CUTOFF",
    "openmmtools.tests.test_mcmc.debug",
    "print",
    "pymbar.timeseries.detectEquilibration",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_mcmc.test_barostat_move_frequency": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "MonteCarloBarostatMove",
    "openmmtools.states.SamplerState",
    "openmmtools.states.ThermodynamicState",
    "openmmtools.tests.test_mcmc.analytical_testsystems"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_mcmc.test_context_cache": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "GHMCMove",
    "LangevinDynamicsMove",
    "SequenceMove",
    "len",
    "openmmtools.states.SamplerState",
    "openmmtools.states.ThermodynamicState",
    "openmmtools.testsystems.AlanineDipeptideImplicit"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_mcmc.test_langevin_splitting_move": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "LangevinSplittingDynamicsMove",
    "MCMCSampler",
    "openmmtools.states.SamplerState",
    "openmmtools.states.ThermodynamicState",
    "openmmtools.testsystems.AlanineDipeptideVacuum"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_mcmc.test_mcmc_expectations": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "functools.partial",
    "openmmtools.tests.test_mcmc.analytical_testsystems"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_mcmc.test_metropolized_moves": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "len",
    "move_class",
    "move_class.__name__",
    "openmmtools.states.SamplerState",
    "openmmtools.states.ThermodynamicState",
    "openmmtools.testsystems.AlanineDipeptideVacuum",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_mcmc.test_minimizer_all_testsystems": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "MCMCSampler",
    "openmmtools.states.SamplerState",
    "openmmtools.states.ThermodynamicState",
    "openmmtools.testsystems.AlanineDipeptideVacuum",
    "testsystem_class"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_mcmc.test_move_restart": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "MyMove",
    "isinstance",
    "openmmtools.states.SamplerState",
    "openmmtools.states.ThermodynamicState",
    "openmmtools.tests.test_mcmc.nose",
    "openmmtools.testsystems.AlanineDipeptideVacuum"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_mcmc.test_move_restart.MyMove": {
  "data": {
   "lineno": 284
  },
  "type": "class"
 },
 "openmmtools.tests.test_mcmc.test_move_restart.MyMove.__init__": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_mcmc.test_move_restart.MyMove._before_integration": {
  "data": {
   "lineno": 292
  },
  "type": "function"
 },
 "openmmtools.tests.test_mcmc.test_move_restart.MyMove._get_integrator": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "openmmtools.tests.test_mcmc.test_moves_serialization": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "GHMCMove",
    "HMCMove",
    "IntegratorMove",
    "LangevinDynamicsMove",
    "LangevinSplittingDynamicsMove",
    "MonteCarloBarostatMove",
    "SequenceMove",
    "WeightedMove",
    "openmmtools.tests.test_mcmc.pickle"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_mcmc.testsystems": {
  "data": {
   "shadows": "openmmtools.testsystems"
  },
  "type": "import"
 },
 "openmmtools.tests.test_mcmc.timeseries": {
  "data": {
   "shadows": "pymbar.timeseries"
  },
  "type": "import"
 },
 "openmmtools.tests.test_mixing": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "openmmtools.tests.test_mixing.test_even_mixing"
   ]
  },
  "type": "module"
 },
 "openmmtools.tests.test_mixing.calculate_state_counts": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_mixing.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "openmmtools.tests.test_mixing.mix_replicas": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.int64",
    "numpy.zeros",
    "openmmtools.multistate.mixing._mix_replicas._mix_replicas_cython",
    "openmmtools.tests.test_mixing.copy",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_mixing.mixing": {
  "data": {
   "shadows": "openmmtools.multistate.mixing._mix_replicas"
  },
  "type": "import"
 },
 "openmmtools.tests.test_mixing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "openmmtools.tests.test_mixing.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "openmmtools.tests.test_mixing.test_even_mixing": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "Exception",
    "openmmtools.tests.test_mixing.calculate_state_counts",
    "openmmtools.tests.test_mixing.mix_replicas",
    "print",
    "range",
    "scipy.stats.chisquare"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_platforms": {
  "data": {},
  "type": "module"
 },
 "openmmtools.tests.test_platforms.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "openmmtools.tests.test_platforms.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "openmmtools.tests.test_platforms.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "openmmtools.tests.test_platforms.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "openmmtools.tests.test_platforms.test_openmm_platforms": {
  "data": {
   "shadows": "openmmtools.scripts.test_openmm_platforms"
  },
  "type": "import"
 },
 "openmmtools.tests.test_sampling": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "openmmtools.multistate.MultiStateSampler._global_citation_silence",
    "quit",
    "simtk.unit.AVOGADRO_CONSTANT_NA",
    "simtk.unit.BOLTZMANN_CONSTANT_kB"
   ]
  },
  "type": "module"
 },
 "openmmtools.tests.test_sampling.MultiStateReporter": {
  "data": {
   "shadows": "openmmtools.multistate.MultiStateReporter"
  },
  "type": "import"
 },
 "openmmtools.tests.test_sampling.MultiStateSampler": {
  "data": {
   "shadows": "openmmtools.multistate.MultiStateSampler"
  },
  "type": "import"
 },
 "openmmtools.tests.test_sampling.MultiStateSamplerAnalyzer": {
  "data": {
   "shadows": "openmmtools.multistate.MultiStateSamplerAnalyzer"
  },
  "type": "import"
 },
 "openmmtools.tests.test_sampling.ParallelTemperingAnalyzer": {
  "data": {
   "shadows": "openmmtools.multistate.ParallelTemperingAnalyzer"
  },
  "type": "import"
 },
 "openmmtools.tests.test_sampling.ParallelTemperingSampler": {
  "data": {
   "shadows": "openmmtools.multistate.ParallelTemperingSampler"
  },
  "type": "import"
 },
 "openmmtools.tests.test_sampling.ReplicaExchangeAnalyzer": {
  "data": {
   "shadows": "openmmtools.multistate.ReplicaExchangeAnalyzer"
  },
  "type": "import"
 },
 "openmmtools.tests.test_sampling.ReplicaExchangeSampler": {
  "data": {
   "shadows": "openmmtools.multistate.ReplicaExchangeSampler"
  },
  "type": "import"
 },
 "openmmtools.tests.test_sampling.SAMSAnalyzer": {
  "data": {
   "shadows": "openmmtools.multistate.SAMSAnalyzer"
  },
  "type": "import"
 },
 "openmmtools.tests.test_sampling.SAMSSampler": {
  "data": {
   "shadows": "openmmtools.multistate.SAMSSampler"
  },
  "type": "import"
 },
 "openmmtools.tests.test_sampling.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "openmmtools.tests.test_sampling.TestExtraSamplersMultiStateSampler": {
  "data": {
   "lineno": 1443,
   "symbols_in_volume": [
    "openmmtools.multistate.MultiStateReporter",
    "openmmtools.multistate.MultiStateSampler",
    "openmmtools.tests.test_sampling.TestMultiStateSampler"
   ]
  },
  "type": "class"
 },
 "openmmtools.tests.test_sampling.TestHarmonicOscillatorsMultiStateSampler": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "object",
    "openmmtools.multistate.MultiStateSampler",
    "openmmtools.multistate.MultiStateSamplerAnalyzer"
   ]
  },
  "type": "class"
 },
 "openmmtools.tests.test_sampling.TestHarmonicOscillatorsMultiStateSampler.run": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "Exception",
    "numpy.abs",
    "numpy.any",
    "numpy.float32",
    "numpy.set_printoptions",
    "numpy.where",
    "numpy.zeros",
    "openmmtools.mcmc.MCDisplacementMove",
    "openmmtools.multistate.MultiStateReporter",
    "openmmtools.tests.test_sampling.logging",
    "openmmtools.tests.test_sampling.os",
    "openmmtools.utils.temporary_directory",
    "print",
    "simtk.unit.angstroms"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestHarmonicOscillatorsMultiStateSampler.setup_class": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "classmethod",
    "list",
    "numpy.log",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.zeros",
    "openmmtools.cache.ContextCache",
    "openmmtools.cache.global_context_cache",
    "openmmtools.states.SamplerState",
    "openmmtools.states.ThermodynamicState",
    "openmmtools.tests.test_sampling.kB",
    "openmmtools.testsystems.HarmonicOscillator",
    "range",
    "simtk.openmm.Platform.getPlatformByName",
    "simtk.unit.Quantity",
    "simtk.unit.amu",
    "simtk.unit.angstroms",
    "simtk.unit.kelvin"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestHarmonicOscillatorsMultiStateSampler.teardown_class": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "classmethod",
    "openmmtools.cache.global_context_cache"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestHarmonicOscillatorsMultiStateSampler.test_with_unsampled_states": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestHarmonicOscillatorsMultiStateSampler.test_without_unsampled_states": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestHarmonicOscillatorsReplicaExchangeSampler": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "openmmtools.multistate.ReplicaExchangeAnalyzer",
    "openmmtools.multistate.ReplicaExchangeSampler",
    "openmmtools.tests.test_sampling.TestHarmonicOscillatorsMultiStateSampler"
   ]
  },
  "type": "class"
 },
 "openmmtools.tests.test_sampling.TestHarmonicOscillatorsSAMSSampler": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "openmmtools.multistate.SAMSAnalyzer",
    "openmmtools.multistate.SAMSSampler",
    "openmmtools.tests.test_sampling.TestHarmonicOscillatorsMultiStateSampler"
   ]
  },
  "type": "class"
 },
 "openmmtools.tests.test_sampling.TestMultiStateSampler": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "object",
    "openmmtools.multistate.MultiStateReporter",
    "openmmtools.multistate.MultiStateSampler"
   ]
  },
  "type": "class"
 },
 "openmmtools.tests.test_sampling.TestMultiStateSampler._compute_energies_independently": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "classmethod",
    "enumerate",
    "len",
    "numpy.zeros",
    "openmmtools.cache.global_context_cache.get_context"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestMultiStateSampler.actual_stored_properties_check": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "float",
    "numpy.allclose",
    "numpy.ones",
    "openmmtools.tests.test_sampling.copy",
    "openmmtools.tests.test_sampling.mpiplus",
    "setattr",
    "simtk.unit.angstroms"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestMultiStateSampler.call_sampler_create": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestMultiStateSampler.captured_output": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "io.StringIO",
    "openmmtools.tests.test_sampling.contextlib",
    "openmmtools.tests.test_sampling.sys",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestMultiStateSampler.get_node_replica_ids": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "openmmtools.tests.test_sampling.mpiplus",
    "range",
    "set",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestMultiStateSampler.property_creator": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestMultiStateSampler.setup_class": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "classmethod",
    "enumerate",
    "float",
    "len",
    "list",
    "openmmtools.alchemy.AbsoluteAlchemicalFactory",
    "openmmtools.alchemy.AlchemicalRegion",
    "openmmtools.alchemy.AlchemicalState.from_system",
    "openmmtools.states.CompoundThermodynamicState",
    "openmmtools.states.SamplerState",
    "openmmtools.states.ThermodynamicState",
    "openmmtools.tests.test_sampling.copy",
    "openmmtools.testsystems.AlanineDipeptideVacuum",
    "openmmtools.testsystems.HostGuestVacuum",
    "print",
    "range",
    "simtk.unit.kelvin",
    "simtk.unit.nanometers"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestMultiStateSampler.temporary_storage_path": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "openmmtools.tests.test_sampling.contextlib",
    "openmmtools.tests.test_sampling.mpiplus",
    "openmmtools.tests.test_sampling.os",
    "openmmtools.utils.temporary_directory",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestMultiStateSampler.test_analysis_opens_without_checkpoint": {
  "data": {
   "lineno": 1334
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestMultiStateSampler.test_checkpoint_uuid_matching": {
  "data": {
   "lineno": 1312
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestMultiStateSampler.test_checkpointing": {
  "data": {
   "lineno": 1232,
   "symbols_in_volume": [
    "numpy.ndarray",
    "openmmtools.mcmc.IntegratorMove",
    "openmmtools.tests.test_sampling.copy",
    "openmmtools.utils.TrackedQuantity",
    "range",
    "simtk.openmm.VerletIntegrator",
    "simtk.unit.femtosecond",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestMultiStateSampler.test_citations": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "openmmtools.tests.test_sampling.copy"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestMultiStateSampler.test_compute_energies": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.allclose",
    "numpy.zeros",
    "openmmtools.cache.global_context_cache.get_context",
    "openmmtools.tests.test_sampling.copy",
    "openmmtools.tests.test_sampling.mpiplus",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestMultiStateSampler.test_create": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "hasattr",
    "isinstance",
    "len",
    "numpy.all",
    "numpy.allclose",
    "numpy.isscalar",
    "openmmtools.mcmc.LangevinDynamicsMove",
    "openmmtools.tests.test_sampling.copy",
    "openmmtools.tests.test_sampling.inspect",
    "openmmtools.tests.test_sampling.mpiplus",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestMultiStateSampler.test_equilibrate": {
  "data": {
   "lineno": 1142,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.allclose",
    "openmmtools.mcmc.GHMCMove",
    "openmmtools.mcmc.LangevinDynamicsMove",
    "openmmtools.tests.test_sampling.copy",
    "zip"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestMultiStateSampler.test_from_storage": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "enumerate",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "nose.plugins.attrib.attr",
    "numpy.all",
    "numpy.allclose",
    "numpy.ndarray",
    "openmmtools.mcmc.LangevinDynamicsMove",
    "openmmtools.tests.test_sampling.check_thermodynamic_states_equality",
    "openmmtools.tests.test_sampling.copy",
    "openmmtools.tests.test_sampling.mpiplus",
    "openmmtools.tests.test_sampling.pickle",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestMultiStateSampler.test_last_iteration_functions": {
  "data": {
   "lineno": 1260,
   "symbols_in_volume": [
    "IndexError",
    "nose.tools.assert_raises",
    "numpy.all",
    "openmmtools.mcmc.IntegratorMove",
    "openmmtools.tests.test_sampling.copy",
    "simtk.openmm.VerletIntegrator",
    "simtk.unit.femtosecond",
    "slice"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestMultiStateSampler.test_minimize": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.allclose",
    "numpy.average",
    "openmmtools.tests.test_sampling.copy",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestMultiStateSampler.test_online_analysis_stops": {
  "data": {
   "lineno": 1421,
   "symbols_in_volume": [
    "numpy.inf",
    "openmmtools.mcmc.IntegratorMove",
    "openmmtools.tests.test_sampling.copy",
    "simtk.openmm.VerletIntegrator",
    "simtk.unit.femtosecond"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestMultiStateSampler.test_online_analysis_works": {
  "data": {
   "lineno": 1363,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.unique",
    "openmmtools.mcmc.IntegratorMove",
    "openmmtools.tests.test_sampling.copy",
    "simtk.openmm.VerletIntegrator",
    "simtk.unit.femtosecond",
    "validate_this_test"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestMultiStateSampler.test_online_analysis_works.validate_this_test": {
  "data": {
   "lineno": 1379,
   "symbols_in_volume": [
    "len",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestMultiStateSampler.test_propagate_replicas": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "len",
    "numpy.allclose",
    "numpy.average",
    "openmmtools.mcmc.IntegratorMove",
    "openmmtools.tests.test_sampling.copy",
    "range",
    "simtk.openmm.VerletIntegrator",
    "simtk.unit.femtosecond"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestMultiStateSampler.test_run_extend": {
  "data": {
   "lineno": 1181,
   "symbols_in_volume": [
    "enumerate",
    "list",
    "openmmtools.mcmc.GHMCMove",
    "openmmtools.mcmc.LangevinDynamicsMove",
    "openmmtools.mcmc.MCRotationMove",
    "openmmtools.mcmc.SequenceMove",
    "openmmtools.tests.test_sampling.copy",
    "openmmtools.tests.test_sampling.mpiplus"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestMultiStateSampler.test_separate_checkpoint_file": {
  "data": {
   "lineno": 1301,
   "symbols_in_volume": [
    "openmmtools.tests.test_sampling.os"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestMultiStateSampler.test_storage_reporter_and_string": {
  "data": {
   "lineno": 1344,
   "symbols_in_volume": [
    "numpy.all",
    "openmmtools.mcmc.IntegratorMove",
    "openmmtools.tests.test_sampling.copy",
    "simtk.openmm.VerletIntegrator",
    "simtk.unit.femtosecond"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestMultiStateSampler.test_stored_properties": {
  "data": {
   "lineno": 572
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestMultiStateSampler.test_uuid_mismatch_errors": {
  "data": {
   "lineno": 1319,
   "symbols_in_volume": [
    "IOError",
    "nose.tools.assert_raises",
    "openmmtools.tests.test_sampling.os"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestMultipleReplicaSAMS": {
  "data": {
   "lineno": 1640,
   "symbols_in_volume": [
    "openmmtools.tests.test_sampling.TestSingleReplicaSAMS"
   ]
  },
  "type": "class"
 },
 "openmmtools.tests.test_sampling.TestMultipleReplicaSAMS.test_stored_properties": {
  "data": {
   "lineno": 1653
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestParallelTempering": {
  "data": {
   "lineno": 1670,
   "symbols_in_volume": [
    "openmmtools.multistate.MultiStateReporter",
    "openmmtools.multistate.ParallelTemperingSampler",
    "openmmtools.tests.test_sampling.TestMultiStateSampler",
    "simtk.unit.kelvin"
   ]
  },
  "type": "class"
 },
 "openmmtools.tests.test_sampling.TestParallelTempering._compute_energies_independently": {
  "data": {
   "lineno": 1706,
   "symbols_in_volume": [
    "classmethod",
    "enumerate",
    "len",
    "numpy.zeros",
    "openmmtools.cache.global_context_cache.get_context",
    "openmmtools.tests.test_sampling.copy",
    "openmmtools.tests.test_sampling.math",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestParallelTempering.call_sampler_create": {
  "data": {
   "lineno": 1687,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestReplicaExchange": {
  "data": {
   "lineno": 1456,
   "symbols_in_volume": [
    "openmmtools.multistate.MultiStateReporter",
    "openmmtools.multistate.ReplicaExchangeSampler",
    "openmmtools.tests.test_sampling.TestMultiStateSampler"
   ]
  },
  "type": "class"
 },
 "openmmtools.tests.test_sampling.TestReplicaExchange.test_stored_properties": {
  "data": {
   "lineno": 1472
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestReplicaExchange.test_uniform_mixing": {
  "data": {
   "lineno": 1478,
   "symbols_in_volume": [
    "are_overlapping",
    "enumerate",
    "len",
    "list",
    "nose.plugins.attrib.attr",
    "numpy.empty",
    "numpy.mean",
    "numpy.sqrt",
    "numpy.std",
    "openmmtools.constants.kB",
    "openmmtools.mcmc.LangevinDynamicsMove",
    "openmmtools.states.SamplerState",
    "openmmtools.states.ThermodynamicState",
    "openmmtools.tests.test_sampling.copy",
    "openmmtools.tests.test_sampling.mpiplus",
    "openmmtools.testsystems.HarmonicOscillator",
    "print",
    "range",
    "set",
    "simtk.unit.angstrom",
    "simtk.unit.femtosecond",
    "simtk.unit.kelvin",
    "simtk.unit.md_unit_system",
    "zip"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestReplicaExchange.test_uniform_mixing.are_overlapping": {
  "data": {
   "lineno": 1578,
   "symbols_in_volume": [
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestReporter": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.tests.test_sampling.TestReporter.temporary_reporter": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "openmmtools.multistate.MultiStateReporter",
    "openmmtools.tests.test_sampling.contextlib",
    "openmmtools.tests.test_sampling.os",
    "openmmtools.utils.temporary_directory",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestReporter.test_analysis_particle_mismatch": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "openmmtools.multistate.MultiStateReporter",
    "openmmtools.tests.test_sampling.os",
    "openmmtools.utils.temporary_directory"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestReporter.test_ensure_dimension_exists": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestReporter.test_store_dict": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "compare_dicts",
    "numpy.array",
    "simtk.unit.Quantity",
    "simtk.unit.angstrom",
    "simtk.unit.femtosecond"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestReporter.test_store_dict.compare_dicts": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "openmmtools.tests.test_sampling.pickle",
    "sorted_dict"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestReporter.test_store_dict.sorted_dict": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "openmmtools.tests.test_sampling.copy",
    "sorted",
    "sorted_dict"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestReporter.test_store_energies": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestReporter.test_store_mcmc_moves": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "openmmtools.cache.ContextCache",
    "openmmtools.mcmc.GHMCMove",
    "openmmtools.mcmc.IntegratorMove",
    "openmmtools.mcmc.LangevinDynamicsMove",
    "openmmtools.mcmc.SequenceMove",
    "openmmtools.tests.test_sampling.pickle",
    "simtk.openmm.VerletIntegrator",
    "simtk.unit.femtosecond"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestReporter.test_store_mixing_statistics": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestReporter.test_store_replica_thermodynamic_states": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "enumerate",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestReporter.test_store_thermodynamic_states": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "decompact_state_variable",
    "len",
    "openmmtools.alchemy.AbsoluteAlchemicalFactory",
    "openmmtools.alchemy.AlchemicalRegion",
    "openmmtools.alchemy.AlchemicalState.from_system",
    "openmmtools.multistate.multistatereporter._DictYamlLoader",
    "openmmtools.states.CompoundThermodynamicState",
    "openmmtools.states.ThermodynamicState",
    "openmmtools.tests.test_sampling.check_thermodynamic_states_equality",
    "openmmtools.tests.test_sampling.copy",
    "openmmtools.tests.test_sampling.yaml",
    "openmmtools.testsystems.AlanineDipeptideExplicit",
    "openmmtools.testsystems.AlanineDipeptideImplicit",
    "openmmtools.testsystems.TolueneVacuum",
    "range",
    "simtk.unit.atmosphere",
    "simtk.unit.kelvin",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestReporter.test_store_thermodynamic_states.decompact_state_variable": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestReporter.test_write_sampler_states": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.allclose",
    "openmmtools.states.SamplerState",
    "openmmtools.testsystems.AlanineDipeptideVacuum",
    "range",
    "simtk.unit.nanometer",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestSingleReplicaSAMS": {
  "data": {
   "lineno": 1586,
   "symbols_in_volume": [
    "openmmtools.multistate.MultiStateReporter",
    "openmmtools.multistate.SAMSSampler",
    "openmmtools.tests.test_sampling.TestMultiStateSampler"
   ]
  },
  "type": "class"
 },
 "openmmtools.tests.test_sampling.TestSingleReplicaSAMS.test_state_histogram": {
  "data": {
   "lineno": 1616,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.arange",
    "numpy.histogram",
    "openmmtools.mcmc.IntegratorMove",
    "openmmtools.tests.test_sampling.copy",
    "simtk.openmm.VerletIntegrator",
    "simtk.unit.femtosecond"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.TestSingleReplicaSAMS.test_stored_properties": {
  "data": {
   "lineno": 1602
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling._DictYamlLoader": {
  "data": {
   "shadows": "openmmtools.multistate.multistatereporter._DictYamlLoader"
  },
  "type": "import"
 },
 "openmmtools.tests.test_sampling.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "openmmtools.tests.test_sampling.attr": {
  "data": {
   "shadows": "nose.plugins.attrib.attr"
  },
  "type": "import"
 },
 "openmmtools.tests.test_sampling.cache": {
  "data": {
   "shadows": "openmmtools.cache"
  },
  "type": "import"
 },
 "openmmtools.tests.test_sampling.check_thermodynamic_states_equality": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "openmmtools.states.CompoundThermodynamicState",
    "zip"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_sampling.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "openmmtools.tests.test_sampling.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "openmmtools.tests.test_sampling.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "openmmtools.tests.test_sampling.kB": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "openmmtools.tests.test_sampling.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "openmmtools.tests.test_sampling.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "openmmtools.tests.test_sampling.mmtools": {
  "data": {
   "shadows": "openmmtools"
  },
  "type": "import"
 },
 "openmmtools.tests.test_sampling.mpiplus": {
  "data": {
   "shadows": "mpiplus"
  },
  "type": "import"
 },
 "openmmtools.tests.test_sampling.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "openmmtools.tests.test_sampling.openmm": {
  "data": {
   "shadows": "simtk.openmm"
  },
  "type": "import"
 },
 "openmmtools.tests.test_sampling.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "openmmtools.tests.test_sampling.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "openmmtools.tests.test_sampling.scipy.integrate": {
  "data": {
   "shadows": "scipy.integrate"
  },
  "type": "import"
 },
 "openmmtools.tests.test_sampling.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "openmmtools.tests.test_sampling.testsystems": {
  "data": {
   "shadows": "openmmtools.testsystems"
  },
  "type": "import"
 },
 "openmmtools.tests.test_sampling.unit": {
  "data": {
   "shadows": "simtk.unit"
  },
  "type": "import"
 },
 "openmmtools.tests.test_sampling.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "openmmtools.tests.test_states": {
  "data": {
   "symbols_in_volume": [
    "openmmtools.tests.test_states.DEFAULT_PLATFORM"
   ]
  },
  "type": "module"
 },
 "openmmtools.tests.test_states.AlchemicalState": {
  "data": {
   "shadows": "openmmtools.alchemy.AlchemicalState"
  },
  "type": "import"
 },
 "openmmtools.tests.test_states.ContextCache": {
  "data": {
   "shadows": "openmmtools.cache.ContextCache"
  },
  "type": "import"
 },
 "openmmtools.tests.test_states.DEFAULT_PLATFORM": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "openmmtools.tests.test_states.ParameterStateExample": {
  "data": {
   "lineno": 1525,
   "symbols_in_volume": [
    "openmmtools.tests.test_states._GLOBAL_PARAMETER_STANDARD_VALUE"
   ]
  },
  "type": "class"
 },
 "openmmtools.tests.test_states.ParameterStateExample.set_defined_parameters": {
  "data": {
   "lineno": 1530
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestCompoundThermodynamicState": {
  "data": {
   "lineno": 1216,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.tests.test_states.TestCompoundThermodynamicState.DummyState": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.tests.test_states.TestCompoundThermodynamicState.DummyState.__init__": {
  "data": {
   "lineno": 1224
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestCompoundThermodynamicState.DummyState._find_dummy_force": {
  "data": {
   "lineno": 1278,
   "symbols_in_volume": [
    "isinstance",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestCompoundThermodynamicState.DummyState._find_force_groups_to_update": {
  "data": {
   "lineno": 1263
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestCompoundThermodynamicState.DummyState._find_max_force_group": {
  "data": {
   "lineno": 1292,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestCompoundThermodynamicState.DummyState._on_setattr": {
  "data": {
   "lineno": 1260
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestCompoundThermodynamicState.DummyState._standardize_system": {
  "data": {
   "lineno": 1235,
   "symbols_in_volume": [
    "ComposableStateError",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestCompoundThermodynamicState.DummyState.add_dummy_parameter": {
  "data": {
   "lineno": 1269,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestCompoundThermodynamicState.DummyState.apply_to_context": {
  "data": {
   "lineno": 1257
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestCompoundThermodynamicState.DummyState.apply_to_system": {
  "data": {
   "lineno": 1241
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestCompoundThermodynamicState.DummyState.check_system_consistency": {
  "data": {
   "lineno": 1244,
   "symbols_in_volume": [
    "ComposableStateError",
    "openmmtools.tests.test_states.TestCompoundThermodynamicState"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestCompoundThermodynamicState.DummyState.dummy_parameter": {
  "data": {
   "lineno": 1231
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestCompoundThermodynamicState.DummyState.is_context_compatible": {
  "data": {
   "lineno": 1249,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestCompoundThermodynamicState.DummyState.set_dummy_parameter": {
  "data": {
   "lineno": 1287,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestCompoundThermodynamicState.get_dummy_parameter": {
  "data": {
   "lineno": 1300,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestCompoundThermodynamicState.setup_class": {
  "data": {
   "lineno": 1305,
   "symbols_in_volume": [
    "ThermodynamicState._STANDARD_PRESSURE",
    "ThermodynamicState._STANDARD_TEMPERATURE",
    "classmethod",
    "openmmtools.testsystems.AlanineDipeptideExplicit"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestCompoundThermodynamicState.test_constructor_set_state": {
  "data": {
   "lineno": 1340,
   "symbols_in_volume": [
    "CompoundThermodynamicState",
    "ThermodynamicState"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestCompoundThermodynamicState.test_dynamic_inheritance": {
  "data": {
   "lineno": 1318,
   "symbols_in_volume": [
    "CompoundThermodynamicState",
    "ThermodynamicState",
    "hasattr",
    "isinstance",
    "openmmtools.tests.test_states.get_barostat_temperature"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestCompoundThermodynamicState.test_method_apply_to_context": {
  "data": {
   "lineno": 1423,
   "symbols_in_volume": [
    "CompoundThermodynamicState",
    "ThermodynamicState",
    "ThermodynamicState._find_barostat",
    "openmmtools.tests.test_states.create_default_context"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestCompoundThermodynamicState.test_method_find_force_groups_to_update": {
  "data": {
   "lineno": 1443,
   "symbols_in_volume": [
    "CompoundThermodynamicState",
    "ThermodynamicState",
    "openmmtools.tests.test_states.create_default_context",
    "set"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestCompoundThermodynamicState.test_method_standardize_system": {
  "data": {
   "lineno": 1393,
   "symbols_in_volume": [
    "CompoundThermodynamicState",
    "ThermodynamicState",
    "ThermodynamicState._find_barostat",
    "openmmtools.tests.test_states.create_default_context",
    "openmmtools.testsystems.AlanineDipeptideExplicit"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestCompoundThermodynamicState.test_property_forwarding": {
  "data": {
   "lineno": 1348,
   "symbols_in_volume": [
    "AttributeError",
    "CompoundThermodynamicState",
    "RuntimeError",
    "ThermodynamicState",
    "openmmtools.tests.test_states.nose"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestCompoundThermodynamicState.test_set_system": {
  "data": {
   "lineno": 1375,
   "symbols_in_volume": [
    "ComposableStateError",
    "CompoundThermodynamicState",
    "ThermodynamicState",
    "openmmtools.tests.test_states.nose"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestGlobalParameterState": {
  "data": {
   "lineno": 1536,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.tests.test_states.TestGlobalParameterState.read_system_state": {
  "data": {
   "lineno": 1609,
   "symbols_in_volume": [
    "openmmtools.tests.test_states.ParameterStateExample"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestGlobalParameterState.setup_class": {
  "data": {
   "lineno": 1543,
   "symbols_in_volume": [
    "SamplerState",
    "ThermodynamicState",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestGlobalParameterState.test_apply_to_context": {
  "data": {
   "lineno": 1816,
   "symbols_in_volume": [
    "check_not_applicable",
    "openmmtools.tests.test_states.create_default_context"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestGlobalParameterState.test_apply_to_context.check_not_applicable": {
  "data": {
   "lineno": 1822,
   "symbols_in_volume": [
    "openmmtools.tests.test_states.nose"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestGlobalParameterState.test_apply_to_system": {
  "data": {
   "lineno": 1744,
   "symbols_in_volume": [
    "check_system_values",
    "openmmtools.tests.test_states.ParameterStateExample",
    "openmmtools.tests.test_states.nose"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestGlobalParameterState.test_apply_to_system.check_system_values": {
  "data": {
   "lineno": 1752,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestGlobalParameterState.test_check_system_consistency": {
  "data": {
   "lineno": 1785,
   "symbols_in_volume": [
    "check_not_consistency"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestGlobalParameterState.test_check_system_consistency.check_not_consistency": {
  "data": {
   "lineno": 1789,
   "symbols_in_volume": [
    "openmmtools.tests.test_states.nose"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestGlobalParameterState.test_compatibility_compound_state": {
  "data": {
   "lineno": 2045,
   "symbols_in_volume": [
    "AttributeError",
    "CompoundThermodynamicState",
    "ThermodynamicState",
    "enumerate",
    "getattr",
    "len",
    "openmmtools.tests.test_states.create_default_context",
    "print",
    "range",
    "setattr",
    "zip"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestGlobalParameterState.test_constructor_compound_state": {
  "data": {
   "lineno": 1944,
   "symbols_in_volume": [
    "CompoundThermodynamicState",
    "openmmtools.tests.test_states.nose",
    "zip"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestGlobalParameterState.test_constructor_parameters": {
  "data": {
   "lineno": 1618,
   "symbols_in_volume": [
    "AttributeError",
    "MyState",
    "MyState._get_controlled_parameters",
    "getattr",
    "openmmtools.tests.test_states.nose",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestGlobalParameterState.test_constructor_parameters.MyState": {
  "data": {
   "lineno": 1621
  },
  "type": "class"
 },
 "openmmtools.tests.test_states.TestGlobalParameterState.test_equality_operator": {
  "data": {
   "lineno": 1714,
   "symbols_in_volume": [
    "GlobalParameterFunction",
    "MyState",
    "openmmtools.tests.test_states.ParameterStateExample"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestGlobalParameterState.test_equality_operator.MyState": {
  "data": {
   "lineno": 1731,
   "symbols_in_volume": [
    "openmmtools.tests.test_states.ParameterStateExample"
   ]
  },
  "type": "class"
 },
 "openmmtools.tests.test_states.TestGlobalParameterState.test_find_force_groups_to_update": {
  "data": {
   "lineno": 1879,
   "symbols_in_volume": [
    "enumerate",
    "getattr",
    "set",
    "setattr",
    "zip"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestGlobalParameterState.test_from_system_constructor": {
  "data": {
   "lineno": 1661,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "openmmtools.tests.test_states.ParameterStateExample",
    "openmmtools.tests.test_states.nose"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestGlobalParameterState.test_global_parameters_compound_state": {
  "data": {
   "lineno": 1965,
   "symbols_in_volume": [
    "CompoundThermodynamicState",
    "GlobalParameterFunction",
    "getattr",
    "openmmtools.tests.test_states.nose",
    "setattr"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestGlobalParameterState.test_global_parameters_functions": {
  "data": {
   "lineno": 1915,
   "symbols_in_volume": [
    "GlobalParameterFunction",
    "openmmtools.tests.test_states.ParameterStateExample",
    "openmmtools.tests.test_states.nose"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestGlobalParameterState.test_parameter_validator": {
  "data": {
   "lineno": 1684,
   "symbols_in_volume": [
    "MyState",
    "MyState.from_system",
    "ValueError",
    "openmmtools.tests.test_states.nose",
    "setattr"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestGlobalParameterState.test_parameter_validator.MyState": {
  "data": {
   "lineno": 1687
  },
  "type": "class"
 },
 "openmmtools.tests.test_states.TestGlobalParameterState.test_parameter_validator.MyState.lambda_bonds": {
  "data": {
   "lineno": 1690,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestGlobalParameterState.test_reduced_potential_compound_state": {
  "data": {
   "lineno": 2088,
   "symbols_in_volume": [
    "CompoundThermodynamicState",
    "ThermodynamicState.reduced_potential_at_states",
    "dict",
    "enumerate",
    "group_by_compatibility",
    "len",
    "openmmtools.tests.test_states.create_default_context",
    "setattr"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestGlobalParameterState.test_serialization": {
  "data": {
   "lineno": 2142,
   "symbols_in_volume": [
    "CompoundThermodynamicState",
    "GlobalParameterFunction",
    "openmmtools.tests.test_states.are_pickle_equal"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestGlobalParameterState.test_set_system_compound_state": {
  "data": {
   "lineno": 2009,
   "symbols_in_volume": [
    "CompoundThermodynamicState",
    "getattr",
    "openmmtools.tests.test_states.nose",
    "setattr",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestGlobalParameterState.test_standardize_system": {
  "data": {
   "lineno": 1855,
   "symbols_in_volume": [
    "check_is_standard",
    "openmmtools.tests.test_states._GLOBAL_PARAMETER_STANDARD_VALUE"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestGlobalParameterState.test_standardize_system.check_is_standard": {
  "data": {
   "lineno": 1860,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestSamplerState": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.tests.test_states.TestSamplerState.create_context": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "openmmtools.tests.test_states.DEFAULT_PLATFORM",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestSamplerState.is_sampler_state_equal_context": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestSamplerState.setup_class": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "ThermodynamicState",
    "classmethod",
    "openmmtools.testsystems.AlanineDipeptideExplicit",
    "openmmtools.testsystems.AlanineDipeptideVacuum"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestSamplerState.test_collective_variable": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "SamplerState.from_context",
    "ThermodynamicState",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestSamplerState.test_constructor_from_context": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "SamplerState.from_context"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestSamplerState.test_dict_representation": {
  "data": {
   "lineno": 1147,
   "symbols_in_volume": [
    "SamplerState.from_context"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestSamplerState.test_inconsistent_n_particles": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "SamplerState",
    "len",
    "openmmtools.tests.test_states.nose",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestSamplerState.test_method_apply_to_context": {
  "data": {
   "lineno": 1093,
   "symbols_in_volume": [
    "SamplerState.from_context"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestSamplerState.test_method_is_context_compatible": {
  "data": {
   "lineno": 1059,
   "symbols_in_volume": [
    "SamplerState"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestSamplerState.test_method_update_from_context": {
  "data": {
   "lineno": 1074,
   "symbols_in_volume": [
    "SamplerState.from_context",
    "openmmtools.tests.test_states.nose"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestSamplerState.test_operator_getitem": {
  "data": {
   "lineno": 1104,
   "symbols_in_volume": [
    "SamplerState.from_context",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestSamplerState.test_unitless_cache": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "SamplerState",
    "SamplerState.from_context",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestThermodynamicState": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.tests.test_states.TestThermodynamicState.get_integrators": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestThermodynamicState.setup_class": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "classmethod",
    "openmmtools.testsystems.AlanineDipeptideExplicit",
    "openmmtools.testsystems.TolueneImplicit",
    "openmmtools.testsystems.TolueneVacuum"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestThermodynamicState.test_constructor_barostat": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "ThermodynamicState",
    "ThermodynamicState._find_barostat"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestThermodynamicState.test_constructor_thermostat": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "ThermodynamicState",
    "ThermodynamicState._find_thermostat",
    "openmmtools.tests.test_states.get_barostat_temperature",
    "openmmtools.tests.test_states.nose"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestThermodynamicState.test_constructor_unsupported_barostat": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "ThermodynamicState",
    "enumerate",
    "openmmtools.tests.test_states.nose"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestThermodynamicState.test_deepcopy": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "ThermodynamicState"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestThermodynamicState.test_method_apply_to_context": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "AttributeError",
    "ThermodynamicState",
    "openmmtools.tests.test_states.create_default_context",
    "openmmtools.tests.test_states.get_barostat_temperature",
    "openmmtools.tests.test_states.nose"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestThermodynamicState.test_method_create_context": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "AttributeError",
    "ThermodynamicState",
    "ThermodynamicState._loop_over_integrators",
    "ValueError",
    "isinstance",
    "len",
    "openmmtools.tests.test_states.nose",
    "range",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestThermodynamicState.test_method_find_barostat": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "ThermodynamicState._find_barostat",
    "isinstance",
    "openmmtools.tests.test_states.nose"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestThermodynamicState.test_method_find_thermostat": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ThermodynamicState._find_thermostat",
    "openmmtools.tests.test_states.nose"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestThermodynamicState.test_method_get_system": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "ThermodynamicState",
    "openmmtools.tests.test_states.get_barostat_temperature"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestThermodynamicState.test_method_is_barostat_consistent": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "ThermodynamicState"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestThermodynamicState.test_method_is_compatible": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "ThermodynamicState",
    "check_compatibility"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestThermodynamicState.test_method_is_compatible.check_compatibility": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "openmmtools.tests.test_states.create_default_context"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestThermodynamicState.test_method_is_integrator_thermostated": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "AttributeError",
    "ThermodynamicState",
    "ThermodynamicState._loop_over_integrators",
    "openmmtools.tests.test_states.nose"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestThermodynamicState.test_method_reduced_potential": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "ThermodynamicState",
    "openmmtools.tests.test_states.create_default_context",
    "openmmtools.tests.test_states.nose"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestThermodynamicState.test_method_reduced_potential_at_states": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "SamplerState",
    "ThermodynamicState",
    "ThermodynamicState.reduced_potential_at_states",
    "group_by_compatibility",
    "len",
    "openmmtools.cache.ContextCache",
    "openmmtools.tests.test_states.create_default_context",
    "reduced_potential_at_states"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestThermodynamicState.test_method_set_integrator_temperature": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "AttributeError",
    "ThermodynamicState",
    "ThermodynamicState._loop_over_integrators"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestThermodynamicState.test_method_set_system": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "ThermodynamicState",
    "openmmtools.tests.test_states.get_barostat_temperature",
    "openmmtools.tests.test_states.nose"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestThermodynamicState.test_method_set_system_pressure": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "ThermodynamicState"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestThermodynamicState.test_method_set_system_temperature": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "ThermodynamicState._find_thermostat",
    "ThermodynamicState._set_system_temperature"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestThermodynamicState.test_method_standardize_system": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "ThermodynamicState",
    "check_barostat_thermostat",
    "openmmtools.tests.test_states.operator"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestThermodynamicState.test_method_standardize_system.check_barostat_thermostat": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "ThermodynamicState._find_barostat",
    "ThermodynamicState._find_thermostat",
    "cmp_op",
    "openmmtools.tests.test_states.get_barostat_temperature"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestThermodynamicState.test_property_pressure_barostat": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "ThermodynamicState",
    "ThermodynamicState._set_barostat_temperature",
    "openmmtools.tests.test_states.get_barostat_temperature",
    "openmmtools.tests.test_states.nose",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestThermodynamicState.test_property_system": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "ThermodynamicState",
    "enumerate",
    "openmmtools.tests.test_states.nose"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestThermodynamicState.test_property_temperature": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "ThermodynamicState",
    "openmmtools.tests.test_states.get_barostat_temperature",
    "openmmtools.tests.test_states.nose"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestThermodynamicState.test_property_volume": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "ThermodynamicState"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestThermodynamicState.test_single_instance_standard_system": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "ThermodynamicState"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.TestThermodynamicState.test_surface_tension": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "ThermodynamicState",
    "openmmtools.tests.test_states.nose"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states._GLOBAL_PARAMETER_STANDARD_VALUE": {
  "data": {
   "lineno": 1522
  },
  "type": "constant"
 },
 "openmmtools.tests.test_states.are_pickle_equal": {
  "data": {
   "lineno": 1464,
   "symbols_in_volume": [
    "openmmtools.tests.test_states.pickle"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.create_default_context": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "openmmtools.tests.test_states.DEFAULT_PLATFORM"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.get_barostat_temperature": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "openmmtools.tests.test_states.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "openmmtools.tests.test_states.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "openmmtools.tests.test_states.test_create_thermodynamic_state_protocol": {
  "data": {
   "lineno": 2163,
   "symbols_in_volume": [
    "ThermodynamicState",
    "ValueError",
    "create_thermodynamic_state_protocol",
    "len",
    "openmmtools.alchemy.AlchemicalState.from_system",
    "openmmtools.tests.test_states.nose",
    "openmmtools.testsystems.AlchemicalAlanineDipeptide",
    "zip"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.test_states_serialization": {
  "data": {
   "lineno": 1471,
   "symbols_in_volume": [
    "SamplerState",
    "ThermodynamicState",
    "ThermodynamicState._standard_system_cache",
    "openmmtools.tests.test_states.are_pickle_equal",
    "openmmtools.testsystems.AlanineDipeptideImplicit"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.test_uncompressed_thermodynamic_state_serialization": {
  "data": {
   "lineno": 1492,
   "symbols_in_volume": [
    "ThermodynamicState",
    "ThermodynamicState._standard_system_cache",
    "openmmtools.tests.test_states.are_pickle_equal",
    "openmmtools.testsystems.AlanineDipeptideImplicit"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_states.testsystems": {
  "data": {
   "shadows": "openmmtools.testsystems"
  },
  "type": "import"
 },
 "openmmtools.tests.test_storage_interface": {
  "data": {},
  "type": "module"
 },
 "openmmtools.tests.test_storage_interface.NetCDFIODriver": {
  "data": {
   "shadows": "openmmtools.storage.NetCDFIODriver"
  },
  "type": "import"
 },
 "openmmtools.tests.test_storage_interface.StorageInterface": {
  "data": {
   "shadows": "openmmtools.storage.StorageInterface"
  },
  "type": "import"
 },
 "openmmtools.tests.test_storage_interface.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "openmmtools.tests.test_storage_interface.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "openmmtools.tests.test_storage_interface.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "openmmtools.tests.test_storage_interface.spawn_driver": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "openmmtools.storage.NetCDFIODriver"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_storage_interface.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "openmmtools.tests.test_storage_interface.temporary_directory": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "openmmtools.tests.test_storage_interface.contextlib",
    "openmmtools.tests.test_storage_interface.shutil",
    "openmmtools.tests.test_storage_interface.tempfile"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_storage_interface.test_at_index_write": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.all",
    "openmmtools.storage.StorageInterface",
    "openmmtools.tests.test_storage_interface.spawn_driver",
    "openmmtools.tests.test_storage_interface.temporary_directory",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_storage_interface.test_directory_creation": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "getattr",
    "openmmtools.storage.StorageInterface",
    "openmmtools.tests.test_storage_interface.spawn_driver",
    "openmmtools.tests.test_storage_interface.temporary_directory",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_storage_interface.test_metadata_creation": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "openmmtools.storage.StorageInterface",
    "openmmtools.tests.test_storage_interface.spawn_driver",
    "openmmtools.tests.test_storage_interface.temporary_directory"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_storage_interface.test_multi_variable_creation": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "openmmtools.storage.StorageInterface",
    "openmmtools.tests.test_storage_interface.spawn_driver",
    "openmmtools.tests.test_storage_interface.temporary_directory"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_storage_interface.test_read_trap": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "Exception",
    "nose.tools.raises",
    "openmmtools.storage.StorageInterface",
    "openmmtools.tests.test_storage_interface.spawn_driver",
    "openmmtools.tests.test_storage_interface.temporary_directory"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_storage_interface.test_storage_interface_creation": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "openmmtools.storage.StorageInterface",
    "openmmtools.tests.test_storage_interface.spawn_driver",
    "openmmtools.tests.test_storage_interface.temporary_directory"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_storage_interface.test_unbound_read": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "openmmtools.storage.StorageInterface",
    "openmmtools.tests.test_storage_interface.spawn_driver",
    "openmmtools.tests.test_storage_interface.temporary_directory",
    "simtk.unit.kelvin"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_storage_interface.test_variable_append_read": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.eye",
    "openmmtools.storage.StorageInterface",
    "openmmtools.tests.test_storage_interface.spawn_driver",
    "openmmtools.tests.test_storage_interface.temporary_directory"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_storage_interface.test_variable_write_read": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "openmmtools.storage.StorageInterface",
    "openmmtools.tests.test_storage_interface.spawn_driver",
    "openmmtools.tests.test_storage_interface.temporary_directory"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_storage_interface.tools": {
  "data": {
   "shadows": "nose.tools"
  },
  "type": "import"
 },
 "openmmtools.tests.test_storage_interface.unit": {
  "data": {
   "shadows": "simtk.unit"
  },
  "type": "import"
 },
 "openmmtools.tests.test_storage_iodrivers": {
  "data": {},
  "type": "module"
 },
 "openmmtools.tests.test_storage_iodrivers.NetCDFIODriver": {
  "data": {
   "shadows": "openmmtools.storage.NetCDFIODriver"
  },
  "type": "import"
 },
 "openmmtools.tests.test_storage_iodrivers.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "openmmtools.tests.test_storage_iodrivers.generic_append_to_check": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.all",
    "openmmtools.storage.NetCDFIODriver",
    "openmmtools.tests.test_storage_iodrivers.temporary_directory",
    "range",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_storage_iodrivers.generic_type_codec_check": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.all",
    "openmmtools.storage.NetCDFIODriver",
    "openmmtools.tests.test_storage_iodrivers.temporary_directory",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_storage_iodrivers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "openmmtools.tests.test_storage_iodrivers.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "openmmtools.tests.test_storage_iodrivers.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "openmmtools.tests.test_storage_iodrivers.temporary_directory": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "openmmtools.tests.test_storage_iodrivers.contextlib",
    "openmmtools.tests.test_storage_iodrivers.shutil",
    "openmmtools.tests.test_storage_iodrivers.tempfile"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_storage_iodrivers.test_netcdf_array_type_codec": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "numpy.array",
    "openmmtools.tests.test_storage_iodrivers.generic_append_to_check",
    "openmmtools.tests.test_storage_iodrivers.generic_type_codec_check"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_storage_iodrivers.test_netcdf_dictionary_type_codec": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "numpy.eye",
    "openmmtools.tests.test_storage_iodrivers.generic_append_to_check",
    "openmmtools.tests.test_storage_iodrivers.generic_type_codec_check",
    "simtk.unit.kelvin",
    "simtk.unit.nanometer"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_storage_iodrivers.test_netcdf_driver_dimension_manipulation": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "openmmtools.storage.NetCDFIODriver",
    "openmmtools.storage.NetCDFIODriver.check_infinite_dimension",
    "openmmtools.storage.NetCDFIODriver.check_iterable_dimension",
    "openmmtools.storage.NetCDFIODriver.check_scalar_dimension",
    "openmmtools.tests.test_storage_iodrivers.temporary_directory"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_storage_iodrivers.test_netcdf_driver_group_manipulation": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "openmmtools.storage.NetCDFIODriver",
    "openmmtools.tests.test_storage_iodrivers.temporary_directory"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_storage_iodrivers.test_netcdf_driver_metadata_creation": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "openmmtools.storage.NetCDFIODriver",
    "openmmtools.tests.test_storage_iodrivers.temporary_directory"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_storage_iodrivers.test_netcdf_float_type_codec": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "openmmtools.tests.test_storage_iodrivers.generic_append_to_check",
    "openmmtools.tests.test_storage_iodrivers.generic_type_codec_check"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_storage_iodrivers.test_netcdf_int_type_codec": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "openmmtools.tests.test_storage_iodrivers.generic_append_to_check",
    "openmmtools.tests.test_storage_iodrivers.generic_type_codec_check"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_storage_iodrivers.test_netcdf_list_type_codec": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "openmmtools.tests.test_storage_iodrivers.generic_append_to_check",
    "openmmtools.tests.test_storage_iodrivers.generic_type_codec_check"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_storage_iodrivers.test_netcdf_quantity_type_codec": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "numpy.array",
    "openmmtools.tests.test_storage_iodrivers.generic_append_to_check",
    "openmmtools.tests.test_storage_iodrivers.generic_type_codec_check",
    "simtk.unit.kelvin",
    "simtk.unit.kilojoules_per_mole",
    "simtk.unit.nanosecond"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_storage_iodrivers.test_netcdf_string_type_codec": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "openmmtools.tests.test_storage_iodrivers.generic_append_to_check",
    "openmmtools.tests.test_storage_iodrivers.generic_type_codec_check"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_storage_iodrivers.test_netcdf_tuple_type_codec": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "openmmtools.tests.test_storage_iodrivers.generic_append_to_check",
    "openmmtools.tests.test_storage_iodrivers.generic_type_codec_check"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_storage_iodrivers.test_write_at_index_is_bound": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "Exception",
    "nose.tools.raises",
    "openmmtools.storage.NetCDFIODriver",
    "openmmtools.tests.test_storage_iodrivers.temporary_directory",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_storage_iodrivers.test_write_at_index_must_exist": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "Exception",
    "nose.tools.raises",
    "openmmtools.storage.NetCDFIODriver",
    "openmmtools.tests.test_storage_iodrivers.temporary_directory",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_storage_iodrivers.tools": {
  "data": {
   "shadows": "nose.tools"
  },
  "type": "import"
 },
 "openmmtools.tests.test_storage_iodrivers.unit": {
  "data": {
   "shadows": "simtk.unit"
  },
  "type": "import"
 },
 "openmmtools.tests.test_testsystems": {
  "data": {},
  "type": "module"
 },
 "openmmtools.tests.test_testsystems._equiv_topology": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_testsystems.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "openmmtools.tests.test_testsystems.check_potential_energy": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "Exception",
    "numpy.isnan",
    "simtk.openmm.Context",
    "simtk.openmm.VerletIntegrator",
    "simtk.unit.femtoseconds",
    "simtk.unit.kilocalories_per_mole"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_testsystems.check_properties": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "getattr",
    "len",
    "method",
    "openmmtools.tests.test_testsystems.logging",
    "openmmtools.testsystems.ThermodynamicState",
    "simtk.unit.atmosphere",
    "simtk.unit.kelvin",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_testsystems.check_topology": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "openmmtools.tests.test_testsystems.fast_testsystems": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "openmmtools.tests.test_testsystems.get_all_subclasses": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "openmmtools.tests.test_testsystems.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "openmmtools.tests.test_testsystems.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "openmmtools.tests.test_testsystems.openmm": {
  "data": {
   "shadows": "simtk.openmm"
  },
  "type": "import"
 },
 "openmmtools.tests.test_testsystems.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "openmmtools.tests.test_testsystems.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "openmmtools.tests.test_testsystems.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "openmmtools.tests.test_testsystems.sobol": {
  "data": {
   "shadows": "openmmtools.sobol"
  },
  "type": "import"
 },
 "openmmtools.tests.test_testsystems.test_double_well_chain_errors": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_raises",
    "openmmtools.testsystems.DoubleWellChain_WCAFluid"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_testsystems.test_double_well_dimer_errors": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "ValueError",
    "nose.tools.assert_raises",
    "openmmtools.testsystems.DoubleWellDimer_WCAFluid"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_testsystems.test_dw_systems_1_dimer": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "openmmtools.tests.test_testsystems._equiv_topology",
    "openmmtools.testsystems.DoubleWellChain_WCAFluid",
    "openmmtools.testsystems.DoubleWellDimer_WCAFluid"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_testsystems.test_dw_systems_as_wca": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "openmmtools.tests.test_testsystems._equiv_topology",
    "openmmtools.testsystems.DoubleWellChain_WCAFluid",
    "openmmtools.testsystems.DoubleWellDimer_WCAFluid",
    "openmmtools.testsystems.WCAFluid"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_testsystems.test_energy_all_testsystems": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "ImportError",
    "functools.partial",
    "openmmtools.tests.test_testsystems.check_potential_energy",
    "openmmtools.tests.test_testsystems.fast_testsystems",
    "openmmtools.tests.test_testsystems.get_all_subclasses",
    "openmmtools.tests.test_testsystems.logging",
    "openmmtools.testsystems.TestSystem",
    "print",
    "testsystem_class",
    "testsystem_class.__name__"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_testsystems.test_get_data_filename": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "Exception",
    "openmmtools.tests.test_testsystems.os",
    "openmmtools.testsystems.get_data_filename"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_testsystems.test_properties_all_testsystems": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ImportError",
    "functools.partial",
    "openmmtools.tests.test_testsystems.check_properties",
    "openmmtools.tests.test_testsystems.get_all_subclasses",
    "openmmtools.tests.test_testsystems.logging",
    "openmmtools.testsystems.TestSystem",
    "print",
    "testsystem_class"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_testsystems.test_subrandom_particle_positions": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "openmmtools.sobol.i4_sobol_generate",
    "openmmtools.testsystems.halton_sequence",
    "openmmtools.testsystems.subrandom_particle_positions",
    "simtk.openmm.System"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_testsystems.test_topology_all_testsystems": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "ImportError",
    "functools.partial",
    "openmmtools.tests.test_testsystems.check_topology",
    "openmmtools.tests.test_testsystems.get_all_subclasses",
    "openmmtools.testsystems.TestSystem",
    "print",
    "testsystem_class",
    "testsystem_class.__name__"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_testsystems.testsystems": {
  "data": {
   "shadows": "openmmtools.testsystems"
  },
  "type": "import"
 },
 "openmmtools.tests.test_testsystems.unit": {
  "data": {
   "shadows": "simtk.unit"
  },
  "type": "import"
 },
 "openmmtools.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "openmmtools.tests.test_utils.MyClass": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.tests.test_utils.MyClass.__getstate__": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_utils.MyClass.__init__": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "openmmtools.tests.test_utils.MyClass.__setstate__": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "openmmtools.tests.test_utils.MyClass.add": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "openmmtools.tests.test_utils.TestRestorableOpenMMObject": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.tests.test_utils.TestRestorableOpenMMObject.setup_class": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "DummierRestorableCustomForce",
    "DummyRestorableCustomForce",
    "DummyRestorableCustomIntegrator",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_utils.TestRestorableOpenMMObject.setup_class.DummierRestorableCustomForce": {
  "data": {
   "lineno": 299
  },
  "type": "class"
 },
 "openmmtools.tests.test_utils.TestRestorableOpenMMObject.setup_class.DummierRestorableCustomForce.__init__": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_utils.TestRestorableOpenMMObject.setup_class.DummyRestorableCustomForce": {
  "data": {
   "lineno": 295
  },
  "type": "class"
 },
 "openmmtools.tests.test_utils.TestRestorableOpenMMObject.setup_class.DummyRestorableCustomForce.__init__": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_utils.TestRestorableOpenMMObject.setup_class.DummyRestorableCustomIntegrator": {
  "data": {
   "lineno": 303
  },
  "type": "class"
 },
 "openmmtools.tests.test_utils.TestRestorableOpenMMObject.setup_class.DummyRestorableCustomIntegrator.__init__": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_utils.TestRestorableOpenMMObject.test_multiple_object_context_creation": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "isinstance",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_utils.TestRestorableOpenMMObject.test_restorable_openmm_object": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "hasattr",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_utils.TestRestorableOpenMMObject.test_restorable_openmm_object_failure": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "openmmtools.tests.test_utils.nose"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_utils.TestRestorableOpenMMObject.test_restorable_openmm_object_hash_collisions": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "find_all_subclasses",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_utils._RESERVED_WORDS_PATTERNS": {
  "data": {
   "shadows": "openmmtools.utils._RESERVED_WORDS_PATTERNS"
  },
  "type": "import"
 },
 "openmmtools.tests.test_utils.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "openmmtools.tests.test_utils.test_find_all_subclasses": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "find_all_subclasses"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_utils.test_find_all_subclasses.A": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.tests.test_utils.test_find_all_subclasses.B": {
  "data": {
   "lineno": 262
  },
  "type": "class"
 },
 "openmmtools.tests.test_utils.test_find_all_subclasses.C": {
  "data": {
   "lineno": 265
  },
  "type": "class"
 },
 "openmmtools.tests.test_utils.test_find_all_subclasses.C.m": {
  "data": {
   "lineno": 266
  },
  "type": "function"
 },
 "openmmtools.tests.test_utils.test_find_all_subclasses.D": {
  "data": {
   "lineno": 270
  },
  "type": "class"
 },
 "openmmtools.tests.test_utils.test_find_all_subclasses.D.m": {
  "data": {
   "lineno": 271
  },
  "type": "function"
 },
 "openmmtools.tests.test_utils.test_find_all_subclasses.E": {
  "data": {
   "lineno": 275
  },
  "type": "class"
 },
 "openmmtools.tests.test_utils.test_find_all_subclasses.E.m": {
  "data": {
   "lineno": 276
  },
  "type": "function"
 },
 "openmmtools.tests.test_utils.test_is_quantity_close": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "TypeError",
    "is_quantity_close",
    "openmmtools.tests.test_utils.nose"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_utils.test_math_eval": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "math_eval"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_utils.test_quantity_from_string": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "quantity_from_string"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_utils.test_sanitize_expression": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "openmmtools.utils._RESERVED_WORDS_PATTERNS",
    "sanitize_expression"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_utils.test_serialize_deserialize": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "deserialize",
    "isinstance",
    "openmmtools.tests.test_utils.MyClass",
    "serialize"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_utils.test_subhooked_abcmeta": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "InterfaceImplementation",
    "WrongInterfaceImplementation",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_utils.test_subhooked_abcmeta.IInterface": {
  "data": {
   "lineno": 222
  },
  "type": "class"
 },
 "openmmtools.tests.test_utils.test_subhooked_abcmeta.IInterface.my_method": {
  "data": {
   "lineno": 223
  },
  "type": "function"
 },
 "openmmtools.tests.test_utils.test_subhooked_abcmeta.IInterface.my_property": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "openmmtools.tests.test_utils.test_subhooked_abcmeta.IInterface.my_static_method": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_utils.test_subhooked_abcmeta.InterfaceImplementation": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.tests.test_utils.test_subhooked_abcmeta.InterfaceImplementation.my_method": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "openmmtools.tests.test_utils.test_subhooked_abcmeta.InterfaceImplementation.my_property": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "openmmtools.tests.test_utils.test_subhooked_abcmeta.InterfaceImplementation.my_static_method": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_utils.test_subhooked_abcmeta.WrongInterfaceImplementation": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.tests.test_utils.test_subhooked_abcmeta.WrongInterfaceImplementation.my_method": {
  "data": {
   "lineno": 247
  },
  "type": "function"
 },
 "openmmtools.tests.test_utils.test_tracked_quantity": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "TrackedQuantity",
    "isinstance",
    "len",
    "list",
    "reset"
   ]
  },
  "type": "function"
 },
 "openmmtools.tests.test_utils.test_tracked_quantity.reset": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "openmmtools.testsystems": {
  "data": {
   "shadows": "openmmtools.testsystems"
  },
  "type": "import"
 },
 "openmmtools.testsystems.AMOEBAIonBox": {
  "data": {
   "lineno": 4394,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.AMOEBAIonBox.__init__": {
  "data": {
   "lineno": 4403,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem",
    "openmmtools.testsystems.get_data_filename",
    "simtk.openmm.app.ForceField",
    "simtk.openmm.app.HBonds",
    "simtk.openmm.app.PDBFile",
    "simtk.openmm.app.PME",
    "simtk.unit.angstroms"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.AMOEBAProteinBox": {
  "data": {
   "lineno": 4418,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.AMOEBAProteinBox.__init__": {
  "data": {
   "lineno": 4427,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem",
    "openmmtools.testsystems.get_data_filename",
    "simtk.openmm.app.ForceField",
    "simtk.openmm.app.HBonds",
    "simtk.openmm.app.PDBFile",
    "simtk.openmm.app.PME"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.AbsoluteAlchemicalFactory": {
  "data": {
   "shadows": "openmmtools.alchemy.AbsoluteAlchemicalFactory"
  },
  "type": "import"
 },
 "openmmtools.testsystems.AlanineDipeptideExplicit": {
  "data": {
   "lineno": 3453,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.AlanineDipeptideExplicit.__init__": {
  "data": {
   "lineno": 3484,
   "symbols_in_volume": [
    "openmmtools.testsystems.DEFAULT_CUTOFF_DISTANCE",
    "openmmtools.testsystems.DEFAULT_EWALD_ERROR_TOLERANCE",
    "openmmtools.testsystems.DEFAULT_SWITCH_WIDTH",
    "openmmtools.testsystems.TestSystem",
    "openmmtools.testsystems.get_data_filename",
    "range",
    "simtk.openmm.app.AmberInpcrdFile",
    "simtk.openmm.app.AmberPrmtopFile",
    "simtk.openmm.app.HBonds",
    "simtk.openmm.app.PME"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.AlanineDipeptideImplicit": {
  "data": {
   "lineno": 3410,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.AlanineDipeptideImplicit.__init__": {
  "data": {
   "lineno": 3429,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem",
    "openmmtools.testsystems.get_data_filename",
    "simtk.openmm.app.AmberInpcrdFile",
    "simtk.openmm.app.AmberPrmtopFile",
    "simtk.openmm.app.HBonds",
    "simtk.openmm.app.OBC1"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.AlanineDipeptideVacuum": {
  "data": {
   "lineno": 3340,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.AlanineDipeptideVacuum.__init__": {
  "data": {
   "lineno": 3359,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem",
    "openmmtools.testsystems.get_data_filename",
    "simtk.openmm.app.AmberInpcrdFile",
    "simtk.openmm.app.AmberPrmtopFile",
    "simtk.openmm.app.HBonds"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.AlchemicalAlanineDipeptide": {
  "data": {
   "lineno": 3378,
   "symbols_in_volume": [
    "openmmtools.testsystems.AlanineDipeptideVacuum"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.AlchemicalAlanineDipeptide.__init__": {
  "data": {
   "lineno": 3381,
   "symbols_in_volume": [
    "openmmtools.alchemy.AbsoluteAlchemicalFactory",
    "openmmtools.alchemy.AlchemicalRegion",
    "openmmtools.testsystems.AlchemicalAlanineDipeptide",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.AlchemicalRegion": {
  "data": {
   "shadows": "openmmtools.alchemy.AlchemicalRegion"
  },
  "type": "import"
 },
 "openmmtools.testsystems.AlchemicalWaterBox": {
  "data": {
   "lineno": 3298,
   "symbols_in_volume": [
    "openmmtools.testsystems.WaterBox"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.AlchemicalWaterBox.__init__": {
  "data": {
   "lineno": 3305,
   "symbols_in_volume": [
    "openmmtools.alchemy.AbsoluteAlchemicalFactory",
    "openmmtools.alchemy.AlchemicalRegion",
    "openmmtools.testsystems.AlchemicalWaterBox",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.AmberParm": {
  "data": {
   "shadows": "parmed.amber.AmberParm"
  },
  "type": "import"
 },
 "openmmtools.testsystems.ConstrainedDiatomicFluid": {
  "data": {
   "lineno": 1265,
   "symbols_in_volume": [
    "openmmtools.testsystems.DiatomicFluid"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.ConstrainedDiatomicFluid.__init__": {
  "data": {
   "lineno": 1278,
   "symbols_in_volume": [
    "openmmtools.testsystems.ConstrainedDiatomicFluid",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.ConstrainedDipolarFluid": {
  "data": {
   "lineno": 1316,
   "symbols_in_volume": [
    "openmmtools.testsystems.DipolarFluid"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.ConstrainedDipolarFluid.__init__": {
  "data": {
   "lineno": 1329,
   "symbols_in_volume": [
    "openmmtools.testsystems.ConstrainedDipolarFluid",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.ConstraintCoupledHarmonicOscillator": {
  "data": {
   "lineno": 1337,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.ConstraintCoupledHarmonicOscillator.__init__": {
  "data": {
   "lineno": 1374,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.zeros",
    "openmmtools.testsystems.TestSystem",
    "simtk.openmm.CustomExternalForce",
    "simtk.openmm.HarmonicBondForce",
    "simtk.openmm.System",
    "simtk.openmm.app.Element.getBySymbol",
    "simtk.openmm.app.Topology",
    "simtk.unit.Quantity",
    "simtk.unit.amu",
    "simtk.unit.angstrom",
    "simtk.unit.angstroms",
    "simtk.unit.kilocalories_per_mole",
    "simtk.unit.kilojoules_per_mole",
    "simtk.unit.nanometer",
    "simtk.unit.nanometers"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.CustomExternalForcesTestSystem": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.CustomExternalForcesTestSystem.__init__": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "enumerate",
    "numpy.float32",
    "numpy.zeros",
    "openmmtools.testsystems.TestSystem",
    "range",
    "simtk.openmm.CustomExternalForce",
    "simtk.openmm.System",
    "simtk.openmm.app.Element.getBySymbol",
    "simtk.openmm.app.Topology",
    "simtk.unit.Quantity",
    "simtk.unit.amu",
    "simtk.unit.angstroms"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.CustomGBForceSystem": {
  "data": {
   "lineno": 4271,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.CustomGBForceSystem.__init__": {
  "data": {
   "lineno": 4287,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem",
    "openmmtools.testsystems.subrandom_particle_positions",
    "range",
    "simtk.openmm.CustomGBForce",
    "simtk.openmm.CustomGBForce.CutoffPeriodic",
    "simtk.openmm.CustomGBForce.ParticlePairNoExclusions",
    "simtk.openmm.CustomGBForce.SingleParticle",
    "simtk.openmm.NonbondedForce",
    "simtk.openmm.NonbondedForce.CutoffPeriodic",
    "simtk.openmm.System",
    "simtk.openmm.Vec3",
    "simtk.openmm.app.Element.getBySymbol",
    "simtk.openmm.app.Topology",
    "simtk.unit.amu",
    "simtk.unit.angstrom",
    "simtk.unit.elementary_charge",
    "simtk.unit.kilojoule_per_mole",
    "simtk.unit.nanometers"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.CustomLennardJonesFluidMixture": {
  "data": {
   "lineno": 2157,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.CustomLennardJonesFluidMixture.__init__": {
  "data": {
   "lineno": 2206,
   "symbols_in_volume": [
    "int",
    "openmmtools.testsystems.TestSystem",
    "openmmtools.testsystems.in_openmm_units",
    "openmmtools.testsystems.subrandom_particle_positions",
    "range",
    "simtk.openmm.CustomNonbondedForce",
    "simtk.openmm.CustomNonbondedForce.CutoffPeriodic",
    "simtk.openmm.NonbondedForce",
    "simtk.openmm.NonbondedForce.CutoffPeriodic",
    "simtk.openmm.System",
    "simtk.openmm.app.Element.getBySymbol",
    "simtk.openmm.app.Topology",
    "simtk.unit.Quantity",
    "simtk.unit.amu",
    "simtk.unit.angstrom",
    "simtk.unit.elementary_charge",
    "simtk.unit.kilocalories_per_mole"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.DEFAULT_CUTOFF_DISTANCE": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "openmmtools.testsystems.DEFAULT_EWALD_ERROR_TOLERANCE": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "openmmtools.testsystems.DEFAULT_SWITCH_WIDTH": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "openmmtools.testsystems.DHFRExplicit": {
  "data": {
   "lineno": 3851,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.DHFRExplicit.__init__": {
  "data": {
   "lineno": 3880,
   "symbols_in_volume": [
    "ImportError",
    "openmmtools.testsystems.DEFAULT_CUTOFF_DISTANCE",
    "openmmtools.testsystems.DEFAULT_EWALD_ERROR_TOLERANCE",
    "openmmtools.testsystems.DEFAULT_SWITCH_WIDTH",
    "openmmtools.testsystems.TestSystem",
    "openmmtools.testsystems.get_data_filename",
    "parmed.amber.AmberParm",
    "print",
    "range",
    "simtk.openmm.app.HBonds",
    "simtk.openmm.app.PME"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.DNADodecamerExplicit": {
  "data": {
   "lineno": 3921,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.DNADodecamerExplicit.__init__": {
  "data": {
   "lineno": 3951,
   "symbols_in_volume": [
    "openmmtools.testsystems.DEFAULT_CUTOFF_DISTANCE",
    "openmmtools.testsystems.DEFAULT_EWALD_ERROR_TOLERANCE",
    "openmmtools.testsystems.DEFAULT_SWITCH_WIDTH",
    "openmmtools.testsystems.TestSystem",
    "openmmtools.testsystems.get_data_filename",
    "range",
    "simtk.openmm.app.AmberPrmtopFile",
    "simtk.openmm.app.HBonds",
    "simtk.openmm.app.PDBFile",
    "simtk.openmm.app.PME"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.Diatom": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.Diatom.__init__": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.zeros",
    "openmmtools.testsystems.TestSystem",
    "simtk.openmm.CustomExternalForce",
    "simtk.openmm.HarmonicBondForce",
    "simtk.openmm.System",
    "simtk.openmm.app.Element.getBySymbol",
    "simtk.openmm.app.Topology",
    "simtk.unit.Quantity",
    "simtk.unit.amu",
    "simtk.unit.angstrom",
    "simtk.unit.angstroms",
    "simtk.unit.kilocalories_per_mole",
    "simtk.unit.nanometer"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.Diatom.get_potential_expectation": {
  "data": {
   "lineno": 1032
  },
  "type": "function"
 },
 "openmmtools.testsystems.DiatomicFluid": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.DiatomicFluid.__init__": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.zeros",
    "openmmtools.testsystems.TestSystem",
    "openmmtools.testsystems.subrandom_particle_positions",
    "range",
    "simtk.openmm.HarmonicBondForce",
    "simtk.openmm.NonbondedForce",
    "simtk.openmm.NonbondedForce.CutoffPeriodic",
    "simtk.openmm.System",
    "simtk.openmm.app.Element.getBySymbol",
    "simtk.openmm.app.Topology",
    "simtk.unit.Quantity",
    "simtk.unit.amu",
    "simtk.unit.angstrom",
    "simtk.unit.angstroms",
    "simtk.unit.elementary_charge",
    "simtk.unit.kilocalories_per_mole",
    "simtk.unit.norm"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.DiatomicFluid.get_potential_expectation": {
  "data": {
   "lineno": 1230
  },
  "type": "function"
 },
 "openmmtools.testsystems.DipolarFluid": {
  "data": {
   "lineno": 1282,
   "symbols_in_volume": [
    "openmmtools.testsystems.DiatomicFluid"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.DipolarFluid.__init__": {
  "data": {
   "lineno": 1295,
   "symbols_in_volume": [
    "openmmtools.testsystems.DipolarFluid",
    "simtk.unit.elementary_charge",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.DischargedWaterBox": {
  "data": {
   "lineno": 3144,
   "symbols_in_volume": [
    "openmmtools.testsystems.WaterBox"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.DischargedWaterBox.__init__": {
  "data": {
   "lineno": 3151,
   "symbols_in_volume": [
    "openmmtools.testsystems.DischargedWaterBox",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.DischargedWaterBoxHsites": {
  "data": {
   "lineno": 3250,
   "symbols_in_volume": [
    "openmmtools.testsystems.WaterBox"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.DischargedWaterBoxHsites.__init__": {
  "data": {
   "lineno": 3257,
   "symbols_in_volume": [
    "openmmtools.testsystems.DischargedWaterBoxHsites",
    "range",
    "simtk.unit.angstroms",
    "simtk.unit.kilojoules_per_mole",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.DoubleWellChain_WCAFluid": {
  "data": {
   "lineno": 2528,
   "symbols_in_volume": [
    "openmmtools.testsystems.DoubleWellDimer_WCAFluid"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.DoubleWellChain_WCAFluid.__init__": {
  "data": {
   "lineno": 2529,
   "symbols_in_volume": [
    "openmmtools.testsystems.DoubleWellChain_WCAFluid",
    "simtk.unit.amu",
    "simtk.unit.angstrom",
    "simtk.unit.kelvin",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.DoubleWellChain_WCAFluid._bond_pairs": {
  "data": {
   "lineno": 2609,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.DoubleWellChain_WCAFluid._max_bonds": {
  "data": {
   "lineno": 2605,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.DoubleWellDimer_WCAFluid": {
  "data": {
   "lineno": 2381,
   "symbols_in_volume": [
    "openmmtools.testsystems.WCAFluid"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.DoubleWellDimer_WCAFluid.__init__": {
  "data": {
   "lineno": 2383,
   "symbols_in_volume": [
    "ValueError",
    "openmmtools.testsystems.DoubleWellDimer_WCAFluid",
    "simtk.unit.amu",
    "simtk.unit.angstrom",
    "simtk.unit.kelvin",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.DoubleWellDimer_WCAFluid._add_double_wells": {
  "data": {
   "lineno": 2505,
   "symbols_in_volume": [
    "list",
    "simtk.openmm.app.topology.Single"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.DoubleWellDimer_WCAFluid._bond_pairs": {
  "data": {
   "lineno": 2519,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.DoubleWellDimer_WCAFluid._create_dw_dimer_force": {
  "data": {
   "lineno": 2465,
   "symbols_in_volume": [
    "simtk.openmm.CustomBondForce"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.DoubleWellDimer_WCAFluid._max_bonds": {
  "data": {
   "lineno": 2515,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.DoubleWellDimer_WCAFluid._reorder_positions": {
  "data": {
   "lineno": 2473,
   "symbols_in_volume": [
    "nearest_unused_particle",
    "openmmtools.testsystems.copy"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.DoubleWellDimer_WCAFluid._reorder_positions.nearest_unused_particle": {
  "data": {
   "lineno": 2475,
   "symbols_in_volume": [
    "list",
    "mdtraj.Topology.from_openmm",
    "mdtraj.Trajectory",
    "mdtraj.compute_distances",
    "openmmtools.testsystems.itertools",
    "range",
    "simtk.unit.nanometer"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.FiveSiteWaterBox": {
  "data": {
   "lineno": 3116,
   "symbols_in_volume": [
    "openmmtools.testsystems.WaterBox"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.FiveSiteWaterBox.__init__": {
  "data": {
   "lineno": 3123,
   "symbols_in_volume": [
    "openmmtools.testsystems.FiveSiteWaterBox",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.FlexibleDischargedWaterBox": {
  "data": {
   "lineno": 3185,
   "symbols_in_volume": [
    "openmmtools.testsystems.FlexibleWaterBox"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.FlexibleDischargedWaterBox.__init__": {
  "data": {
   "lineno": 3192,
   "symbols_in_volume": [
    "openmmtools.testsystems.FlexibleDischargedWaterBox",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.FlexiblePMEWaterBox": {
  "data": {
   "lineno": 3015,
   "symbols_in_volume": [
    "openmmtools.testsystems.WaterBox"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.FlexiblePMEWaterBox.__init__": {
  "data": {
   "lineno": 3022,
   "symbols_in_volume": [
    "openmmtools.testsystems.FlexiblePMEWaterBox",
    "simtk.openmm.app.PME",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.FlexibleReactionFieldWaterBox": {
  "data": {
   "lineno": 2991,
   "symbols_in_volume": [
    "openmmtools.testsystems.WaterBox"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.FlexibleReactionFieldWaterBox.__init__": {
  "data": {
   "lineno": 2998,
   "symbols_in_volume": [
    "openmmtools.testsystems.FlexibleReactionFieldWaterBox",
    "simtk.openmm.app.CutoffPeriodic",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.FlexibleWaterBox": {
  "data": {
   "lineno": 2967,
   "symbols_in_volume": [
    "openmmtools.testsystems.WaterBox"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.FlexibleWaterBox.__init__": {
  "data": {
   "lineno": 2974,
   "symbols_in_volume": [
    "openmmtools.testsystems.FlexibleWaterBox",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.FourSiteWaterBox": {
  "data": {
   "lineno": 3087,
   "symbols_in_volume": [
    "openmmtools.testsystems.WaterBox"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.FourSiteWaterBox.__init__": {
  "data": {
   "lineno": 3094,
   "symbols_in_volume": [
    "openmmtools.testsystems.FourSiteWaterBox",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.GiantFlexibleDischargedWaterBox": {
  "data": {
   "lineno": 3226,
   "symbols_in_volume": [
    "openmmtools.testsystems.FlexibleDischargedWaterBox"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.GiantFlexibleDischargedWaterBox.__init__": {
  "data": {
   "lineno": 3233,
   "symbols_in_volume": [
    "openmmtools.testsystems.GiantFlexibleDischargedWaterBox",
    "simtk.unit.angstroms",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.GiantFlexibleWaterBox": {
  "data": {
   "lineno": 3063,
   "symbols_in_volume": [
    "openmmtools.testsystems.WaterBox"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.GiantFlexibleWaterBox.__init__": {
  "data": {
   "lineno": 3070,
   "symbols_in_volume": [
    "openmmtools.testsystems.GiantFlexibleWaterBox",
    "simtk.unit.angstroms",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.HarmonicOscillator": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.HarmonicOscillator.__init__": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.zeros",
    "openmmtools.testsystems.TestSystem",
    "simtk.openmm.CustomExternalForce",
    "simtk.openmm.System",
    "simtk.openmm.app.Element.getBySymbol",
    "simtk.openmm.app.Topology",
    "simtk.unit.Quantity",
    "simtk.unit.amu",
    "simtk.unit.angstroms",
    "simtk.unit.kilocalories_per_mole",
    "simtk.unit.kilojoules_per_mole",
    "simtk.unit.md_unit_system",
    "simtk.unit.nanometers"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.HarmonicOscillator.get_potential_expectation": {
  "data": {
   "lineno": 792
  },
  "type": "function"
 },
 "openmmtools.testsystems.HarmonicOscillator.get_potential_standard_deviation": {
  "data": {
   "lineno": 811
  },
  "type": "function"
 },
 "openmmtools.testsystems.HarmonicOscillatorArray": {
  "data": {
   "lineno": 1428,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.HarmonicOscillatorArray.__init__": {
  "data": {
   "lineno": 1467,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.zeros",
    "openmmtools.testsystems.TestSystem",
    "range",
    "simtk.openmm.CustomExternalForce",
    "simtk.openmm.System",
    "simtk.openmm.app.Element.getBySymbol",
    "simtk.openmm.app.Topology",
    "simtk.unit.Quantity",
    "simtk.unit.amu",
    "simtk.unit.angstroms",
    "simtk.unit.kilocalories_per_mole",
    "simtk.unit.nanometer",
    "simtk.unit.nanometers"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.HarmonicOscillatorArray.get_potential_expectation": {
  "data": {
   "lineno": 1510
  },
  "type": "function"
 },
 "openmmtools.testsystems.HarmonicOscillatorArray.get_potential_standard_deviation": {
  "data": {
   "lineno": 1527
  },
  "type": "function"
 },
 "openmmtools.testsystems.HostGuestExplicit": {
  "data": {
   "lineno": 3777,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem",
    "openmmtools.testsystems._HostGuestBase"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.HostGuestExplicit.__init__": {
  "data": {
   "lineno": 3806,
   "symbols_in_volume": [
    "openmmtools.testsystems.DEFAULT_CUTOFF_DISTANCE",
    "openmmtools.testsystems.DEFAULT_EWALD_ERROR_TOLERANCE",
    "openmmtools.testsystems.DEFAULT_SWITCH_WIDTH",
    "openmmtools.testsystems.TestSystem",
    "openmmtools.testsystems.get_data_filename",
    "openmmtools.testsystems.handle_kwargs",
    "range",
    "simtk.openmm.app.AmberInpcrdFile",
    "simtk.openmm.app.AmberPrmtopFile",
    "simtk.openmm.app.HBonds",
    "simtk.openmm.app.PME"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.HostGuestImplicit": {
  "data": {
   "lineno": 3705,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem",
    "openmmtools.testsystems._HostGuestBase"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.HostGuestImplicit.__init__": {
  "data": {
   "lineno": 3727,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem",
    "openmmtools.testsystems.get_data_filename",
    "openmmtools.testsystems.handle_kwargs",
    "simtk.openmm.app.AmberInpcrdFile",
    "simtk.openmm.app.AmberPrmtopFile",
    "simtk.openmm.app.HBonds",
    "simtk.openmm.app.NoCutoff",
    "simtk.openmm.app.OBC1"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.HostGuestImplicitGBn": {
  "data": {
   "lineno": 3765,
   "symbols_in_volume": [
    "openmmtools.testsystems.HostGuestImplicit"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.HostGuestImplicitGBn.__init__": {
  "data": {
   "lineno": 3766,
   "symbols_in_volume": [
    "openmmtools.testsystems.HostGuestImplicit",
    "simtk.openmm.app.GBn"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.HostGuestImplicitGBn2": {
  "data": {
   "lineno": 3769,
   "symbols_in_volume": [
    "openmmtools.testsystems.HostGuestImplicit"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.HostGuestImplicitGBn2.__init__": {
  "data": {
   "lineno": 3770,
   "symbols_in_volume": [
    "openmmtools.testsystems.HostGuestImplicit",
    "simtk.openmm.app.GBn2"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.HostGuestImplicitHCT": {
  "data": {
   "lineno": 3753,
   "symbols_in_volume": [
    "openmmtools.testsystems.HostGuestImplicit"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.HostGuestImplicitHCT.__init__": {
  "data": {
   "lineno": 3754,
   "symbols_in_volume": [
    "openmmtools.testsystems.HostGuestImplicit",
    "simtk.openmm.app.HCT"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.HostGuestImplicitOBC1": {
  "data": {
   "lineno": 3757,
   "symbols_in_volume": [
    "openmmtools.testsystems.HostGuestImplicit"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.HostGuestImplicitOBC1.__init__": {
  "data": {
   "lineno": 3758,
   "symbols_in_volume": [
    "openmmtools.testsystems.HostGuestImplicit",
    "simtk.openmm.app.OBC1"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.HostGuestImplicitOBC2": {
  "data": {
   "lineno": 3761,
   "symbols_in_volume": [
    "openmmtools.testsystems.HostGuestImplicit"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.HostGuestImplicitOBC2.__init__": {
  "data": {
   "lineno": 3762,
   "symbols_in_volume": [
    "openmmtools.testsystems.HostGuestImplicit",
    "simtk.openmm.app.OBC2"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.HostGuestVacuum": {
  "data": {
   "lineno": 3657,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem",
    "openmmtools.testsystems._HostGuestBase"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.HostGuestVacuum.__init__": {
  "data": {
   "lineno": 3676,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem",
    "openmmtools.testsystems.get_data_filename",
    "openmmtools.testsystems.handle_kwargs",
    "simtk.openmm.app.AmberInpcrdFile",
    "simtk.openmm.app.AmberPrmtopFile",
    "simtk.openmm.app.HBonds",
    "simtk.openmm.app.NoCutoff"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.IdealGas": {
  "data": {
   "lineno": 2619,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.IdealGas.__init__": {
  "data": {
   "lineno": 2648,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem",
    "openmmtools.testsystems.subrandom_particle_positions",
    "range",
    "simtk.openmm.NonbondedForce",
    "simtk.openmm.NonbondedForce.CutoffPeriodic",
    "simtk.openmm.System",
    "simtk.openmm.app.Element.getBySymbol",
    "simtk.openmm.app.Topology",
    "simtk.unit.BOLTZMANN_CONSTANT_kB.in_units_of",
    "simtk.unit.Quantity",
    "simtk.unit.amu",
    "simtk.unit.atmosphere",
    "simtk.unit.kelvin",
    "simtk.unit.nanometer",
    "simtk.unit.nanometers"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.IdealGas.get_kinetic_expectation": {
  "data": {
   "lineno": 2725
  },
  "type": "function"
 },
 "openmmtools.testsystems.IdealGas.get_kinetic_standard_deviation": {
  "data": {
   "lineno": 2742
  },
  "type": "function"
 },
 "openmmtools.testsystems.IdealGas.get_potential_expectation": {
  "data": {
   "lineno": 2691,
   "symbols_in_volume": [
    "simtk.unit.kilojoules_per_mole"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.IdealGas.get_potential_standard_deviation": {
  "data": {
   "lineno": 2708,
   "symbols_in_volume": [
    "simtk.unit.kilojoules_per_mole"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.IdealGas.get_volume_expectation": {
  "data": {
   "lineno": 2759,
   "symbols_in_volume": [
    "simtk.unit.BOLTZMANN_CONSTANT_kB.in_units_of",
    "simtk.unit.nanometers"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.IdealGas.get_volume_standard_deviation": {
  "data": {
   "lineno": 2786,
   "symbols_in_volume": [
    "numpy.sqrt",
    "simtk.unit.BOLTZMANN_CONSTANT_kB.in_units_of",
    "simtk.unit.nanometers"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.LennardJonesCluster": {
  "data": {
   "lineno": 1664,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.LennardJonesCluster.__init__": {
  "data": {
   "lineno": 1699,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.zeros",
    "openmmtools.testsystems.TestSystem",
    "openmmtools.testsystems.construct_restraining_potential",
    "range",
    "simtk.openmm.NonbondedForce",
    "simtk.openmm.NonbondedForce.CutoffNonPeriodic",
    "simtk.openmm.NonbondedForce.NoCutoff",
    "simtk.openmm.System",
    "simtk.openmm.app.Element.getBySymbol",
    "simtk.openmm.app.Topology",
    "simtk.unit.Quantity",
    "simtk.unit.amu",
    "simtk.unit.angstrom",
    "simtk.unit.elementary_charge",
    "simtk.unit.kilojoule_per_mole",
    "simtk.unit.kilojoules_per_mole",
    "simtk.unit.nanometer"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.LennardJonesFluid": {
  "data": {
   "lineno": 1860,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.LennardJonesFluid.__init__": {
  "data": {
   "lineno": 1927,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem",
    "openmmtools.testsystems.build_lattice",
    "openmmtools.testsystems.generate_dummy_trajectory",
    "openmmtools.testsystems.in_openmm_units",
    "openmmtools.testsystems.subrandom_particle_positions",
    "range",
    "simtk.openmm.CustomNonbondedForce",
    "simtk.openmm.CustomNonbondedForce.CutoffPeriodic",
    "simtk.openmm.NonbondedForce",
    "simtk.openmm.NonbondedForce.CutoffPeriodic",
    "simtk.openmm.NonbondedForce.PME",
    "simtk.openmm.System",
    "simtk.openmm.app.Element.getBySymbol",
    "simtk.openmm.app.Topology",
    "simtk.unit.Quantity",
    "simtk.unit.amu",
    "simtk.unit.angstrom",
    "simtk.unit.elementary_charge",
    "simtk.unit.kilocalories_per_mole",
    "simtk.unit.nanometers"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.LennardJonesFluidSwitched": {
  "data": {
   "lineno": 2044,
   "symbols_in_volume": [
    "openmmtools.testsystems.LennardJonesFluid"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.LennardJonesFluidSwitched.__init__": {
  "data": {
   "lineno": 2051,
   "symbols_in_volume": [
    "openmmtools.testsystems.LennardJonesFluidSwitched",
    "simtk.unit.angstrom",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.LennardJonesFluidTruncated": {
  "data": {
   "lineno": 2021,
   "symbols_in_volume": [
    "openmmtools.testsystems.LennardJonesFluid"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.LennardJonesFluidTruncated.__init__": {
  "data": {
   "lineno": 2028,
   "symbols_in_volume": [
    "openmmtools.testsystems.LennardJonesFluidTruncated",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.LennardJonesGrid": {
  "data": {
   "lineno": 2071,
   "symbols_in_volume": [
    "openmmtools.testsystems.LennardJonesFluid"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.LennardJonesGrid.__init__": {
  "data": {
   "lineno": 2111,
   "symbols_in_volume": [
    "float",
    "openmmtools.testsystems.LennardJonesGrid",
    "range",
    "simtk.openmm.Vec3",
    "simtk.openmm.app.Element.getBySymbol",
    "simtk.openmm.app.Topology",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.LennardJonesPair": {
  "data": {
   "lineno": 4448,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.LennardJonesPair.__init__": {
  "data": {
   "lineno": 4487,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.zeros",
    "openmmtools.testsystems.TestSystem",
    "simtk.openmm.NonbondedForce",
    "simtk.openmm.NonbondedForce.NoCutoff",
    "simtk.openmm.System",
    "simtk.openmm.app.Element.getBySymbol",
    "simtk.openmm.app.Topology",
    "simtk.unit.Quantity",
    "simtk.unit.amu",
    "simtk.unit.angstrom",
    "simtk.unit.elementary_charge",
    "simtk.unit.kilocalories_per_mole"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.LennardJonesPair.get_binding_free_energy": {
  "data": {
   "lineno": 4539,
   "symbols_in_volume": [
    "numpy.log",
    "openmmtools.testsystems.pi",
    "scipy.integrate.quadrature",
    "simtk.openmm.Context",
    "simtk.openmm.Platform.getPlatformByName",
    "simtk.openmm.VerletIntegrator",
    "simtk.unit.AVOGADRO_CONSTANT_NA.in_units_of",
    "simtk.unit.angstrom",
    "simtk.unit.femtoseconds",
    "simtk.unit.liter.in_units_of",
    "simtk.unit.mole.in_units_of"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.LennardJonesPair.get_binding_free_energy.integrand_numpy": {
  "data": {
   "lineno": 4576,
   "symbols_in_volume": [
    "numpy.exp",
    "openmmtools.testsystems.pi"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.LennardJonesPair.get_binding_free_energy.integrand_openmm": {
  "data": {
   "lineno": 4561,
   "symbols_in_volume": [
    "enumerate",
    "numpy.exp",
    "numpy.float32",
    "numpy.zeros",
    "openmmtools.testsystems.pi",
    "simtk.unit.Quantity",
    "simtk.unit.angstrom"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.LysozymeImplicit": {
  "data": {
   "lineno": 3990,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.LysozymeImplicit.__init__": {
  "data": {
   "lineno": 4011,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem",
    "openmmtools.testsystems.get_data_filename",
    "openmmtools.testsystems.handle_kwargs",
    "simtk.openmm.app.AmberInpcrdFile",
    "simtk.openmm.app.AmberPrmtopFile",
    "simtk.openmm.app.HBonds",
    "simtk.openmm.app.NoCutoff",
    "simtk.openmm.app.OBC1"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.MethanolBox": {
  "data": {
   "lineno": 4138,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.MethanolBox.__init__": {
  "data": {
   "lineno": 4156,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem",
    "openmmtools.testsystems.get_data_filename",
    "simtk.openmm.app.AmberInpcrdFile",
    "simtk.openmm.app.AmberPrmtopFile",
    "simtk.openmm.app.CutoffPeriodic",
    "simtk.openmm.app.HBonds",
    "simtk.unit.angstroms",
    "simtk.unit.nanometer"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.MolecularIdealGas": {
  "data": {
   "lineno": 4183,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.MolecularIdealGas.__init__": {
  "data": {
   "lineno": 4201,
   "symbols_in_volume": [
    "isinstance",
    "openmmtools.testsystems.TestSystem",
    "openmmtools.testsystems.get_data_filename",
    "range",
    "simtk.openmm.HarmonicAngleForce",
    "simtk.openmm.HarmonicBondForce",
    "simtk.openmm.PeriodicTorsionForce",
    "simtk.openmm.System",
    "simtk.openmm.app.AmberInpcrdFile",
    "simtk.openmm.app.AmberPrmtopFile",
    "simtk.openmm.app.CutoffPeriodic",
    "simtk.openmm.app.HBonds",
    "simtk.unit.angstroms",
    "simtk.unit.nanometer"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.PMEWaterBox": {
  "data": {
   "lineno": 3039,
   "symbols_in_volume": [
    "openmmtools.testsystems.WaterBox"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.PMEWaterBox.__init__": {
  "data": {
   "lineno": 3046,
   "symbols_in_volume": [
    "openmmtools.testsystems.PMEWaterBox",
    "simtk.openmm.app.PME",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.PowerOscillator": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.PowerOscillator.__init__": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.zeros",
    "openmmtools.testsystems.TestSystem",
    "simtk.openmm.CustomExternalForce",
    "simtk.openmm.System",
    "simtk.openmm.app.Element.getBySymbol",
    "simtk.openmm.app.Topology",
    "simtk.unit.Quantity",
    "simtk.unit.amu",
    "simtk.unit.angstroms",
    "simtk.unit.kilocalories_per_mole"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.PowerOscillator._get_power_expectation": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "gamma",
    "openmmtools.testsystems.scipy"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.PowerOscillator.get_potential_expectation": {
  "data": {
   "lineno": 899
  },
  "type": "function"
 },
 "openmmtools.testsystems.PowerOscillator.reduced_potential": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "classmethod",
    "gamma",
    "openmmtools.testsystems.scipy"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.SodiumChlorideCrystal": {
  "data": {
   "lineno": 1549,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.SodiumChlorideCrystal.__init__": {
  "data": {
   "lineno": 1579,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.zeros",
    "openmmtools.testsystems.TestSystem",
    "simtk.openmm.NonbondedForce",
    "simtk.openmm.NonbondedForce.Ewald",
    "simtk.openmm.System",
    "simtk.openmm.app.Element.getBySymbol",
    "simtk.openmm.app.Topology",
    "simtk.unit.Quantity",
    "simtk.unit.amu",
    "simtk.unit.angstrom",
    "simtk.unit.angstroms",
    "simtk.unit.elementary_charge",
    "simtk.unit.kilocalorie_per_mole",
    "simtk.unit.nanometers"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.SrcExplicit": {
  "data": {
   "lineno": 4069,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.SrcExplicit.__init__": {
  "data": {
   "lineno": 4085,
   "symbols_in_volume": [
    "openmmtools.testsystems.DEFAULT_CUTOFF_DISTANCE",
    "openmmtools.testsystems.DEFAULT_EWALD_ERROR_TOLERANCE",
    "openmmtools.testsystems.DEFAULT_SWITCH_WIDTH",
    "openmmtools.testsystems.TestSystem",
    "openmmtools.testsystems.get_data_filename",
    "range",
    "simtk.openmm.app.ForceField",
    "simtk.openmm.app.HBonds",
    "simtk.openmm.app.PDBFile",
    "simtk.openmm.app.PME"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.SrcExplicitReactionField": {
  "data": {
   "lineno": 4112,
   "symbols_in_volume": [
    "openmmtools.testsystems.SrcExplicit"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.SrcExplicitReactionField.__init__": {
  "data": {
   "lineno": 4119,
   "symbols_in_volume": [
    "openmmtools.testsystems.SrcExplicitReactionField",
    "simtk.openmm.app.CutoffPeriodic",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.SrcImplicit": {
  "data": {
   "lineno": 4037,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.SrcImplicit.__init__": {
  "data": {
   "lineno": 4047,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem",
    "openmmtools.testsystems.get_data_filename",
    "simtk.openmm.app.ForceField",
    "simtk.openmm.app.HBonds",
    "simtk.openmm.app.NoCutoff",
    "simtk.openmm.app.PDBFile"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.TestSystem": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.TestSystem.__init__": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "numpy.float",
    "numpy.zeros",
    "simtk.openmm.System",
    "simtk.openmm.app.Topology",
    "simtk.unit.Quantity",
    "simtk.unit.nanometers"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.TestSystem.analytical_properties": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "dir",
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.TestSystem.mdtraj_topology": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "mdtraj.Topology.from_openmm",
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.TestSystem.name": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.TestSystem.positions": {
  "data": {
   "lineno": 527
  },
  "type": "function"
 },
 "openmmtools.testsystems.TestSystem.reduced_potential_expectation": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.TestSystem.serialize": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "simtk.openmm.Context",
    "simtk.openmm.Platform.getPlatformByName",
    "simtk.openmm.VerletIntegrator",
    "simtk.openmm.XmlSerializer.serialize",
    "simtk.unit.femtoseconds"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.TestSystem.system": {
  "data": {
   "lineno": 514
  },
  "type": "function"
 },
 "openmmtools.testsystems.TestSystem.topology": {
  "data": {
   "lineno": 541
  },
  "type": "function"
 },
 "openmmtools.testsystems.ThermodynamicState": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.ThermodynamicState.__init__": {
  "data": {
   "lineno": 411
  },
  "type": "function"
 },
 "openmmtools.testsystems.TolueneImplicit": {
  "data": {
   "lineno": 3563,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.TolueneImplicit.__init__": {
  "data": {
   "lineno": 3589,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem",
    "openmmtools.testsystems.get_data_filename",
    "openmmtools.testsystems.handle_kwargs",
    "simtk.openmm.app.AmberInpcrdFile",
    "simtk.openmm.app.AmberPrmtopFile",
    "simtk.openmm.app.HBonds",
    "simtk.openmm.app.NoCutoff",
    "simtk.openmm.app.OBC1"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.TolueneImplicitGBn": {
  "data": {
   "lineno": 3626,
   "symbols_in_volume": [
    "openmmtools.testsystems.TolueneImplicit"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.TolueneImplicitGBn.__init__": {
  "data": {
   "lineno": 3627,
   "symbols_in_volume": [
    "openmmtools.testsystems.TolueneImplicit",
    "simtk.openmm.app.GBn"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.TolueneImplicitGBn2": {
  "data": {
   "lineno": 3630,
   "symbols_in_volume": [
    "openmmtools.testsystems.TolueneImplicit"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.TolueneImplicitGBn2.__init__": {
  "data": {
   "lineno": 3631,
   "symbols_in_volume": [
    "openmmtools.testsystems.TolueneImplicit",
    "simtk.openmm.app.GBn2"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.TolueneImplicitHCT": {
  "data": {
   "lineno": 3614,
   "symbols_in_volume": [
    "openmmtools.testsystems.TolueneImplicit"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.TolueneImplicitHCT.__init__": {
  "data": {
   "lineno": 3615,
   "symbols_in_volume": [
    "openmmtools.testsystems.TolueneImplicit",
    "simtk.openmm.app.HCT"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.TolueneImplicitOBC1": {
  "data": {
   "lineno": 3618,
   "symbols_in_volume": [
    "openmmtools.testsystems.TolueneImplicit"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.TolueneImplicitOBC1.__init__": {
  "data": {
   "lineno": 3619,
   "symbols_in_volume": [
    "openmmtools.testsystems.TolueneImplicit",
    "simtk.openmm.app.OBC1"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.TolueneImplicitOBC2": {
  "data": {
   "lineno": 3622,
   "symbols_in_volume": [
    "openmmtools.testsystems.TolueneImplicit"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.TolueneImplicitOBC2.__init__": {
  "data": {
   "lineno": 3623,
   "symbols_in_volume": [
    "openmmtools.testsystems.TolueneImplicit",
    "simtk.openmm.app.OBC2"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.TolueneVacuum": {
  "data": {
   "lineno": 3521,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.TolueneVacuum.__init__": {
  "data": {
   "lineno": 3540,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem",
    "openmmtools.testsystems.get_data_filename",
    "simtk.openmm.app.AmberInpcrdFile",
    "simtk.openmm.app.AmberPrmtopFile",
    "simtk.openmm.app.HBonds"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.UnconstrainedDiatomicFluid": {
  "data": {
   "lineno": 1248,
   "symbols_in_volume": [
    "openmmtools.testsystems.DiatomicFluid"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.UnconstrainedDiatomicFluid.__init__": {
  "data": {
   "lineno": 1261,
   "symbols_in_volume": [
    "openmmtools.testsystems.UnconstrainedDiatomicFluid",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.UnconstrainedDipolarFluid": {
  "data": {
   "lineno": 1299,
   "symbols_in_volume": [
    "openmmtools.testsystems.DipolarFluid"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.UnconstrainedDipolarFluid.__init__": {
  "data": {
   "lineno": 1312,
   "symbols_in_volume": [
    "openmmtools.testsystems.UnconstrainedDipolarFluid",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.WCAFluid": {
  "data": {
   "lineno": 2300,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.WCAFluid.__init__": {
  "data": {
   "lineno": 2302,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "openmmtools.testsystems.TestSystem",
    "openmmtools.testsystems.in_openmm_units",
    "openmmtools.testsystems.subrandom_particle_positions",
    "range",
    "simtk.openmm.CustomNonbondedForce",
    "simtk.openmm.CustomNonbondedForce.CutoffPeriodic",
    "simtk.openmm.System",
    "simtk.openmm.app.Element.getBySymbol",
    "simtk.openmm.app.Topology",
    "simtk.unit.Quantity",
    "simtk.unit.amu",
    "simtk.unit.angstrom",
    "simtk.unit.kelvin",
    "simtk.unit.nanometer"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.WaterBox": {
  "data": {
   "lineno": 2816,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.WaterBox.__init__": {
  "data": {
   "lineno": 2842,
   "symbols_in_volume": [
    "Exception",
    "numpy.array",
    "numpy.ones",
    "openmmtools.testsystems.DEFAULT_CUTOFF_DISTANCE",
    "openmmtools.testsystems.DEFAULT_EWALD_ERROR_TOLERANCE",
    "openmmtools.testsystems.DEFAULT_SWITCH_WIDTH",
    "openmmtools.testsystems.TestSystem",
    "range",
    "simtk.openmm.app.ForceField",
    "simtk.openmm.app.Modeller",
    "simtk.openmm.app.PME",
    "simtk.openmm.app.Topology",
    "simtk.unit.Quantity",
    "simtk.unit.angstroms",
    "simtk.unit.molar",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.WaterCluster": {
  "data": {
   "lineno": 1768,
   "symbols_in_volume": [
    "openmmtools.testsystems.TestSystem"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems.WaterCluster.__init__": {
  "data": {
   "lineno": 1771,
   "symbols_in_volume": [
    "Exception",
    "int",
    "len",
    "list",
    "numpy.array",
    "openmmtools.testsystems.TestSystem",
    "openmmtools.testsystems.construct_restraining_potential",
    "range",
    "simtk.openmm.NonbondedForce.NoCutoff",
    "simtk.openmm.app.ForceField",
    "simtk.openmm.app.Modeller",
    "simtk.openmm.app.Topology",
    "simtk.unit.Quantity",
    "simtk.unit.angstroms",
    "simtk.unit.kilojoules_per_mole",
    "simtk.unit.nanometer",
    "str"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.XmlSerializer": {
  "data": {
   "shadows": "simtk.openmm.XmlSerializer"
  },
  "type": "import"
 },
 "openmmtools.testsystems._HostGuestBase": {
  "data": {
   "lineno": 3638,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.testsystems._HostGuestBase.guest_oemol": {
  "data": {
   "lineno": 3652,
   "symbols_in_volume": [
    "openmmtools.testsystems._read_oemol",
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems._HostGuestBase.host_oemol": {
  "data": {
   "lineno": 3647,
   "symbols_in_volume": [
    "openmmtools.testsystems._read_oemol",
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems._HostGuestBase.oemols": {
  "data": {
   "lineno": 3642,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems._read_oemol": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "openeye.oechem.OEGraphMol",
    "openeye.oechem.OEReadMolecule",
    "openeye.oechem.oemolistream",
    "openmmtools.testsystems.get_data_filename",
    "openmmtools.testsystems.os"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.app": {
  "data": {
   "shadows": "simtk.openmm.app"
  },
  "type": "import"
 },
 "openmmtools.testsystems.build_lattice": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "int",
    "numpy.abs",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.eye",
    "numpy.round",
    "openmmtools.testsystems.build_lattice_cell",
    "openmmtools.testsystems.itertools"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.build_lattice_cell": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.construct_restraining_potential": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "simtk.openmm.CustomExternalForce",
    "simtk.unit.kilojoules_per_mole",
    "simtk.unit.nanometers"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "openmmtools.testsystems.generate_dummy_trajectory": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "ImportError",
    "dict",
    "len",
    "mdtraj.Topology.from_dataframe",
    "mdtraj.Trajectory",
    "numpy.ones",
    "numpy.zeros",
    "pandas.DataFrame",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.get_data_filename": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ValueError",
    "openmmtools.testsystems.os",
    "pkg_resources.resource_filename"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.halton_sequence": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.ceil",
    "numpy.double",
    "numpy.empty",
    "numpy.finfo",
    "numpy.log",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.handle_kwargs": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "openmmtools.testsystems.inspect",
    "openmmtools.testsystems.unwrap_py2"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.in_openmm_units": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "simtk.unit.md_unit_system"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "openmmtools.testsystems.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "openmmtools.testsystems.md": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "openmmtools.testsystems.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "openmmtools.testsystems.numpy.random": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "openmmtools.testsystems.oechem": {
  "data": {
   "shadows": "openeye.oechem"
  },
  "type": "import"
 },
 "openmmtools.testsystems.openmm": {
  "data": {
   "shadows": "simtk.openmm"
  },
  "type": "import"
 },
 "openmmtools.testsystems.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "openmmtools.testsystems.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "openmmtools.testsystems.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "openmmtools.testsystems.pi": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "openmmtools.testsystems.quadrature": {
  "data": {
   "shadows": "scipy.integrate.quadrature"
  },
  "type": "import"
 },
 "openmmtools.testsystems.resource_filename": {
  "data": {
   "shadows": "pkg_resources.resource_filename"
  },
  "type": "import"
 },
 "openmmtools.testsystems.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "openmmtools.testsystems.scipy.integrate": {
  "data": {
   "shadows": "scipy.integrate"
  },
  "type": "import"
 },
 "openmmtools.testsystems.scipy.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "openmmtools.testsystems.sobol": {
  "data": {
   "shadows": "openmmtools.sobol"
  },
  "type": "import"
 },
 "openmmtools.testsystems.subrandom_particle_positions": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "Exception",
    "numpy.array",
    "numpy.float32",
    "numpy.zeros",
    "openmmtools.sobol.i4_sobol_generate",
    "openmmtools.testsystems.halton_sequence",
    "range",
    "simtk.unit.Quantity",
    "simtk.unit.nanometers"
   ]
  },
  "type": "function"
 },
 "openmmtools.testsystems.unit": {
  "data": {
   "shadows": "simtk.unit"
  },
  "type": "import"
 },
 "openmmtools.testsystems.unwrap_py2": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils": {
  "data": {
   "shadows": "openmmtools.utils"
  },
  "type": "import"
 },
 "openmmtools.utils.RestorableOpenMMObject": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.utils.RestorableOpenMMObject.__copy__": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "openmmtools.utils.RestorableOpenMMObject",
    "openmmtools.utils.copy",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.RestorableOpenMMObject.__deepcopy__": {
  "data": {
   "lineno": 916
  },
  "type": "function"
 },
 "openmmtools.utils.RestorableOpenMMObject.__init__": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "openmmtools.utils.RestorableOpenMMObject",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.RestorableOpenMMObject._add_global_parameter": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.RestorableOpenMMObject._compute_class_hash": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "float",
    "openmmtools.utils.zlib",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.RestorableOpenMMObject._get_force_parameter_by_name": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "KeyError",
    "classmethod",
    "range"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.RestorableOpenMMObject._get_global_parameter": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.RestorableOpenMMObject._get_hash_parameter_name": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.RestorableOpenMMObject._hash_parameter_name": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.RestorableOpenMMObject._is_force": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "simtk.openmm.CustomIntegrator",
    "simtk.openmm.Force",
    "staticmethod",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.RestorableOpenMMObject.deserialize_xml": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "classmethod",
    "simtk.openmm.XmlSerializer.deserialize"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.RestorableOpenMMObject.is_restorable": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "Exception",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.RestorableOpenMMObject.restore_interface": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "classmethod",
    "openmmtools.utils.RestorableOpenMMObjectError",
    "openmmtools.utils.find_all_subclasses"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.RestorableOpenMMObjectError": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "openmmtools.utils.SubhookedABCMeta": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "openmmtools.utils.abc",
    "openmmtools.utils.with_metaclass"
   ]
  },
  "type": "class"
 },
 "openmmtools.utils.SubhookedABCMeta.__subclasshook__": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "any",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.Timer": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openmmtools.utils.Timer.__init__": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "openmmtools.utils.Timer.partial": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "KeyError",
    "openmmtools.utils.logger",
    "openmmtools.utils.time"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.Timer.report_timing": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "openmmtools.utils.logger"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.Timer.reset_timing_statistics": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "openmmtools.utils.Timer.start": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "openmmtools.utils.time"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.Timer.stop": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "KeyError",
    "openmmtools.utils.logger",
    "openmmtools.utils.time"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.TrackedQuantity": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "openmmtools.utils._changes_state",
    "simtk.unit.Quantity",
    "simtk.unit.Quantity.__delitem__",
    "simtk.unit.Quantity.__setitem__",
    "simtk.unit.Quantity.append",
    "simtk.unit.Quantity.extend",
    "simtk.unit.Quantity.insert",
    "simtk.unit.Quantity.pop",
    "simtk.unit.Quantity.remove"
   ]
  },
  "type": "class"
 },
 "openmmtools.utils.TrackedQuantity.__getitem__": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "openmmtools.utils.TrackedQuantity",
    "openmmtools.utils.TrackedQuantityView",
    "slice",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.TrackedQuantity.__init__": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "openmmtools.utils.TrackedQuantity",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.TrackedQuantityView": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "simtk.unit.Quantity"
   ]
  },
  "type": "class"
 },
 "openmmtools.utils.TrackedQuantityView.__getitem__": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "isinstance",
    "openmmtools.utils.TrackedQuantityView",
    "slice",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.TrackedQuantityView.__init__": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "openmmtools.utils.TrackedQuantityView",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.TrackedQuantityView.__setitem__": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "openmmtools.utils.TrackedQuantityView",
    "super"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils._RESERVED_WORDS_PATTERNS": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "openmmtools.utils._SERIALIZED_MANGLED_PREFIX": {
  "data": {
   "lineno": 536
  },
  "type": "constant"
 },
 "openmmtools.utils._VALID_UNITS": {
  "data": {
   "lineno": 386
  },
  "type": "constant"
 },
 "openmmtools.utils._VALID_UNIT_FUNCTIONS": {
  "data": {
   "lineno": 388
  },
  "type": "constant"
 },
 "openmmtools.utils._changes_state": {
  "data": {
   "lineno": 332
  },
  "type": "function"
 },
 "openmmtools.utils._changes_state.wrapper": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "func",
    "openmmtools.utils.functools"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "openmmtools.utils.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "openmmtools.utils.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "openmmtools.utils.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "openmmtools.utils.deserialize": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "ValueError",
    "getattr",
    "openmmtools.utils._SERIALIZED_MANGLED_PREFIX",
    "openmmtools.utils.importlib"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "openmmtools.utils.find_all_subclasses": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "openmmtools.utils.inspect",
    "set"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.find_subclass": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "openmmtools.utils.find_all_subclasses"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "openmmtools.utils.get_available_platforms": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "range",
    "simtk.openmm.Platform.getNumPlatforms",
    "simtk.openmm.Platform.getPlatform"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.get_fastest_platform": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "max",
    "openmmtools.utils.get_available_platforms"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "openmmtools.utils.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "openmmtools.utils.is_quantity_close": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "TypeError",
    "abs",
    "numpy.isclose",
    "simtk.unit.md_unit_system"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.logger": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "openmmtools.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "openmmtools.utils.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "openmmtools.utils.math_eval": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "_math_eval",
    "numpy.sign",
    "openmmtools.utils.ast",
    "openmmtools.utils.operator",
    "openmmtools.utils.sanitize_expression"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.math_eval._math_eval": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "TypeError",
    "ValueError",
    "_math_eval",
    "getattr",
    "isinstance",
    "len",
    "openmmtools.utils.ast",
    "openmmtools.utils.copy",
    "openmmtools.utils.math",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "openmmtools.utils.openmm": {
  "data": {
   "shadows": "simtk.openmm"
  },
  "type": "import"
 },
 "openmmtools.utils.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "openmmtools.utils.quantity_from_string": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "openmmtools.utils._VALID_UNITS",
    "openmmtools.utils._VALID_UNIT_FUNCTIONS",
    "openmmtools.utils.math_eval"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "openmmtools.utils.sanitize_expression": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "openmmtools.utils._RESERVED_WORDS_PATTERNS",
    "openmmtools.utils.copy"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.serialize": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "openmmtools.utils._SERIALIZED_MANGLED_PREFIX"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "openmmtools.utils.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "openmmtools.utils.temporary_directory": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "openmmtools.utils.contextlib",
    "openmmtools.utils.shutil",
    "openmmtools.utils.tempfile"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "openmmtools.utils.time_it": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "openmmtools.utils.Timer",
    "openmmtools.utils.contextlib"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.typename": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.unit": {
  "data": {
   "shadows": "simtk.unit"
  },
  "type": "import"
 },
 "openmmtools.utils.with_metaclass": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "type.__new__"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.with_metaclass.Metaclass": {
  "data": {
   "lineno": 628
  },
  "type": "class"
 },
 "openmmtools.utils.with_metaclass.Metaclass.__new__": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "metaclass"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.with_timer": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "openmmtools.utils.with_timer._with_timer": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "openmmtools.utils.with_timer._with_timer._wrapper": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "func",
    "openmmtools.utils.functools",
    "openmmtools.utils.time_it"
   ]
  },
  "type": "function"
 },
 "openmmtools.utils.zlib": {
  "data": {
   "shadows": "zlib"
  },
  "type": "import"
 },
 "openmmtools.versions": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 }
}