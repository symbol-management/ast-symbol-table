{
 "pytest_executable": {
  "data": {
   "symbols_in_volume": [
    "get_versions"
   ]
  },
  "type": "module"
 },
 "pytest_executable.__version__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pytest_executable._version": {
  "data": {},
  "type": "module"
 },
 "pytest_executable._version.get_versions": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pytest_executable._version.json",
    "pytest_executable._version.version_json"
   ]
  },
  "type": "function"
 },
 "pytest_executable._version.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pytest_executable._version.version_json": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pytest_executable.file_tools": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pytest_executable.file_tools.logging"
   ]
  },
  "type": "module"
 },
 "pytest_executable.file_tools.FilePath": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "pathlib.Path"
   ]
  },
  "type": "class"
 },
 "pytest_executable.file_tools.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "pytest_executable.file_tools.LOG": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pytest_executable.file_tools.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pytest_executable.file_tools.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pytest_executable.file_tools._shallow_dir_copy": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "pathlib.Path",
    "str",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "pytest_executable.file_tools.create_output_directory": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "FileExistsError",
    "bool",
    "pathlib.Path",
    "pytest_executable.file_tools.LOG",
    "pytest_executable.file_tools._shallow_dir_copy",
    "pytest_executable.file_tools.shutil",
    "str",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "pytest_executable.file_tools.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "pytest_executable.file_tools.find_references": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pathlib.Path",
    "pytest_executable.file_tools.FilePath",
    "str",
    "typing.Iterable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pytest_executable.file_tools.get_mirror_path": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "pathlib.Path",
    "pathlib.Path.cwd",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "pytest_executable.file_tools.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pytest_executable.file_tools.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pytest_executable.plugin": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pathlib.Path",
    "pytest_executable.plugin.logging",
    "str",
    "typing.Dict",
    "typing.Set"
   ]
  },
  "type": "module"
 },
 "pytest_executable.plugin.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pytest_executable.plugin.LOGGER": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pytest_executable.plugin.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pytest_executable.plugin.OUTPUT_IGNORED_FILES": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pytest_executable.plugin.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pytest_executable.plugin.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pytest_executable.plugin.SETTINGS_PATH": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pytest_executable.plugin.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "pytest_executable.plugin.TEST_MODULE_PATH": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pytest_executable.plugin.TestExecutableModule": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "pytest_executable.plugin.pytest"
   ]
  },
  "type": "class"
 },
 "pytest_executable.plugin.TestExecutableModule._getobj": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "KeyError",
    "pathlib.Path",
    "pytest_executable.plugin._get_settings",
    "pytest_executable.plugin.py",
    "pytest_executable.plugin.sys"
   ]
  },
  "type": "function"
 },
 "pytest_executable.plugin._get_parent_path": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "pathlib.Path",
    "pytest_executable.plugin.py"
   ]
  },
  "type": "function"
 },
 "pytest_executable.plugin._get_regression_path": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "get_mirror_path",
    "pathlib.Path",
    "pytest_executable.plugin._get_parent_path",
    "pytest_executable.plugin._pytest",
    "pytest_executable.plugin.py",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pytest_executable.plugin._get_settings": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "pathlib.Path",
    "pytest_executable.plugin.SETTINGS_PATH",
    "pytest_executable.plugin._get_parent_path",
    "pytest_executable.plugin._pytest",
    "pytest_executable.plugin.py"
   ]
  },
  "type": "function"
 },
 "pytest_executable.plugin._pytest": {
  "data": {
   "shadows": "_pytest"
  },
  "type": "import"
 },
 "pytest_executable.plugin._set_marks": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "pathlib.Path",
    "pytest_executable.plugin._pytest",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pytest_executable.plugin._sort_parent_last": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "int",
    "pathlib.Path",
    "pytest_executable.plugin._pytest"
   ]
  },
  "type": "function"
 },
 "pytest_executable.plugin._sort_yaml_first": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "int",
    "pathlib.Path",
    "pytest_executable.plugin._pytest"
   ]
  },
  "type": "function"
 },
 "pytest_executable.plugin.cmp_to_key": {
  "data": {
   "shadows": "functools.cmp_to_key"
  },
  "type": "import"
 },
 "pytest_executable.plugin.create_output_tree": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "FileExistsError",
    "create_output_directory",
    "get_mirror_path",
    "pytest_executable.plugin.OUTPUT_IGNORED_FILES",
    "pytest_executable.plugin._get_parent_path",
    "pytest_executable.plugin.pytest"
   ]
  },
  "type": "function"
 },
 "pytest_executable.plugin.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pytest_executable.plugin.output_path": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "get_mirror_path",
    "pytest_executable.plugin._get_parent_path",
    "pytest_executable.plugin.pytest"
   ]
  },
  "type": "function"
 },
 "pytest_executable.plugin.py": {
  "data": {
   "shadows": "py"
  },
  "type": "import"
 },
 "pytest_executable.plugin.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pytest_executable.plugin.pytest_addoption": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "next",
    "pytest_executable.plugin.SETTINGS_PATH",
    "pytest_executable.plugin.TEST_MODULE_PATH"
   ]
  },
  "type": "function"
 },
 "pytest_executable.plugin.pytest_collect_file": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "hasattr",
    "pytest_executable.plugin.SETTINGS_PATH",
    "pytest_executable.plugin.TestExecutableModule"
   ]
  },
  "type": "function"
 },
 "pytest_executable.plugin.pytest_collection_modifyitems": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "functools.cmp_to_key",
    "pytest_executable.plugin._pytest",
    "pytest_executable.plugin._set_marks",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pytest_executable.plugin.pytest_configure": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "pytest_executable.plugin._pytest"
   ]
  },
  "type": "function"
 },
 "pytest_executable.plugin.pytest_exception_interact": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pytest_executable.plugin.pytest_generate_tests": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "find_references",
    "list",
    "map",
    "pytest_executable.plugin._get_regression_path",
    "pytest_executable.plugin._get_settings",
    "pytest_executable.plugin.regression_path",
    "str"
   ]
  },
  "type": "function"
 },
 "pytest_executable.plugin.pytest_sessionstart": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "FileNotFoundError",
    "TypeError",
    "getattr",
    "pathlib.Path",
    "pytest_executable.plugin.pytest",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pytest_executable.plugin.pytest_terminal_summary": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "Exception",
    "pytest_executable.plugin._pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pytest_executable.plugin.regression_path": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "pytest_executable.plugin._get_regression_path",
    "pytest_executable.plugin.pytest"
   ]
  },
  "type": "function"
 },
 "pytest_executable.plugin.runner": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "ScriptRunner",
    "pytest_executable.plugin._get_settings",
    "pytest_executable.plugin.output_path",
    "pytest_executable.plugin.pytest"
   ]
  },
  "type": "function"
 },
 "pytest_executable.plugin.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pytest_executable.plugin.tolerances": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "pytest_executable.plugin._get_settings",
    "pytest_executable.plugin.pytest"
   ]
  },
  "type": "function"
 },
 "pytest_executable.report": {
  "data": {
   "symbols_in_volume": [
    "YamlHelper",
    "pathlib.Path",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "module"
 },
 "pytest_executable.report.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pytest_executable.report.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pytest_executable.report.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pytest_executable.report.REPORT_DB_FILENAME": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pytest_executable.report.REPORT_DIRNAME": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pytest_executable.report.ReportDBType": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pytest_executable.report.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "pytest_executable.report.TerminalReporter": {
  "data": {
   "shadows": "_pytest.terminal.TerminalReporter"
  },
  "type": "import"
 },
 "pytest_executable.report.YAML_HELPER": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pytest_executable.report.create": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "_pytest.terminal.TerminalReporter",
    "collections.defaultdict",
    "dict",
    "pathlib.Path",
    "pytest_executable.report.ReportDBType",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "pytest_executable.report.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pytest_executable.report.dump": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "_pytest.terminal.TerminalReporter",
    "pathlib.Path",
    "pytest_executable.report.YAML_HELPER",
    "pytest_executable.report.create",
    "pytest_executable.report.merge"
   ]
  },
  "type": "function"
 },
 "pytest_executable.report.generate": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "_pytest.terminal.TerminalReporter",
    "pathlib.Path",
    "pytest_executable.report.REPORT_DB_FILENAME",
    "pytest_executable.report.dump",
    "pytest_executable.report.subprocess",
    "str"
   ]
  },
  "type": "function"
 },
 "pytest_executable.report.merge": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "pathlib.Path",
    "pytest_executable.report.ReportDBType",
    "pytest_executable.report.YAML_HELPER"
   ]
  },
  "type": "function"
 },
 "pytest_executable.report.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pytest_executable.script_runner": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pytest_executable.script_runner.logging"
   ]
  },
  "type": "module"
 },
 "pytest_executable.script_runner.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pytest_executable.script_runner.LOG": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pytest_executable.script_runner.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pytest_executable.script_runner.ScriptExecutionError": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pytest_executable.script_runner.ScriptRunner": {
  "data": {
   "lineno": 36
  },
  "type": "class"
 },
 "pytest_executable.script_runner.ScriptRunner.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "pathlib.Path",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "pytest_executable.script_runner.ScriptRunner._substitute": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "TypeError",
    "UnicodeDecodeError",
    "ValueError",
    "pytest_executable.script_runner.jinja2",
    "str"
   ]
  },
  "type": "function"
 },
 "pytest_executable.script_runner.ScriptRunner.run": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "int",
    "open",
    "pytest_executable.script_runner.LOG",
    "pytest_executable.script_runner.ScriptExecutionError",
    "pytest_executable.script_runner.delta",
    "pytest_executable.script_runner.stat",
    "pytest_executable.script_runner.subprocess"
   ]
  },
  "type": "function"
 },
 "pytest_executable.script_runner.delta": {
  "data": {
   "shadows": "delta"
  },
  "type": "import"
 },
 "pytest_executable.script_runner.jinja2": {
  "data": {
   "shadows": "jinja2"
  },
  "type": "import"
 },
 "pytest_executable.script_runner.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pytest_executable.script_runner.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "pytest_executable.script_runner.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pytest_executable.settings": {
  "data": {
   "symbols_in_volume": [
    "pathlib.Path"
   ]
  },
  "type": "module"
 },
 "pytest_executable.settings.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pytest_executable.settings.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pytest_executable.settings.SETTINGS_SCHEMA_FILE": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pytest_executable.settings.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "pytest_executable.settings.Settings": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "pytest_executable.settings.Tolerances",
    "str",
    "typing.Dict",
    "typing.Set"
   ]
  },
  "type": "class"
 },
 "pytest_executable.settings.Settings.__post_init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pytest_executable.settings.Tolerances",
    "set"
   ]
  },
  "type": "function"
 },
 "pytest_executable.settings.Settings.from_local_file": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "YamlHelper",
    "classmethod",
    "cls",
    "dataclasses.fields",
    "pathlib.Path",
    "pytest_executable.settings.SETTINGS_SCHEMA_FILE"
   ]
  },
  "type": "function"
 },
 "pytest_executable.settings.Tolerances": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "abs",
    "dataclasses.dataclass",
    "float"
   ]
  },
  "type": "class"
 },
 "pytest_executable.settings.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "pytest_executable.settings.fields": {
  "data": {
   "shadows": "dataclasses.fields"
  },
  "type": "import"
 },
 "pytest_executable.test_executable": {
  "data": {},
  "type": "module"
 },
 "pytest_executable.test_executable.test_runner": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "pytest_executable.yaml_helper": {
  "data": {
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "module"
 },
 "pytest_executable.yaml_helper.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pytest_executable.yaml_helper.DataType": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pytest_executable.yaml_helper.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pytest_executable.yaml_helper.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pytest_executable.yaml_helper.TextIO": {
  "data": {
   "shadows": "typing.TextIO"
  },
  "type": "import"
 },
 "pytest_executable.yaml_helper.YamlHelper": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "pytest_executable.yaml_helper.YamlHelper.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pathlib.Path",
    "pytest_executable.yaml_helper.yaml"
   ]
  },
  "type": "function"
 },
 "pytest_executable.yaml_helper.YamlHelper.__recursive_update": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "classmethod",
    "dict",
    "isinstance",
    "list",
    "pytest_executable.yaml_helper.DataType"
   ]
  },
  "type": "function"
 },
 "pytest_executable.yaml_helper.YamlHelper.dump": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "pytest_executable.yaml_helper.DataType",
    "pytest_executable.yaml_helper.jsonschema",
    "pytest_executable.yaml_helper.yaml",
    "typing.TextIO"
   ]
  },
  "type": "function"
 },
 "pytest_executable.yaml_helper.YamlHelper.load": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pathlib.Path",
    "pytest_executable.yaml_helper.DataType",
    "pytest_executable.yaml_helper.jsonschema",
    "pytest_executable.yaml_helper.yaml"
   ]
  },
  "type": "function"
 },
 "pytest_executable.yaml_helper.YamlHelper.load_merge": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "pathlib.Path",
    "pytest_executable.yaml_helper.DataType"
   ]
  },
  "type": "function"
 },
 "pytest_executable.yaml_helper.jsonschema": {
  "data": {
   "shadows": "jsonschema"
  },
  "type": "import"
 },
 "pytest_executable.yaml_helper.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 }
}