{
 "treeinterpreter": {
  "data": {},
  "type": "module"
 },
 "treeinterpreter.__author__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "treeinterpreter.__version__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "treeinterpreter.treeinterpreter": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "distutils.version.LooseVersion",
    "treeinterpreter.treeinterpreter.sklearn"
   ]
  },
  "type": "module"
 },
 "treeinterpreter.treeinterpreter.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "treeinterpreter.treeinterpreter.DecisionTreeRegressor": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeRegressor"
  },
  "type": "import"
 },
 "treeinterpreter.treeinterpreter.ForestClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.forest.ForestClassifier"
  },
  "type": "import"
 },
 "treeinterpreter.treeinterpreter.ForestRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.forest.ForestRegressor"
  },
  "type": "import"
 },
 "treeinterpreter.treeinterpreter.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "treeinterpreter.treeinterpreter._get_tree_paths": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ValueError",
    "sklearn.tree._tree.TREE_LEAF"
   ]
  },
  "type": "function"
 },
 "treeinterpreter.treeinterpreter._predict_forest": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.mean",
    "range",
    "set",
    "sum",
    "treeinterpreter.treeinterpreter._predict_tree"
   ]
  },
  "type": "function"
 },
 "treeinterpreter.treeinterpreter._predict_tree": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.full",
    "numpy.newaxis",
    "numpy.tile",
    "numpy.unique",
    "numpy.zeros",
    "range",
    "set",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor",
    "sorted",
    "treeinterpreter.treeinterpreter._get_tree_paths",
    "tuple"
   ]
  },
  "type": "function"
 },
 "treeinterpreter.treeinterpreter._tree": {
  "data": {
   "shadows": "sklearn.tree._tree"
  },
  "type": "import"
 },
 "treeinterpreter.treeinterpreter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "treeinterpreter.treeinterpreter.predict": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "sklearn.ensemble.forest.ForestClassifier",
    "sklearn.ensemble.forest.ForestRegressor",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor",
    "treeinterpreter.treeinterpreter._predict_forest",
    "treeinterpreter.treeinterpreter._predict_tree"
   ]
  },
  "type": "function"
 },
 "treeinterpreter.treeinterpreter.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "treeinterpreter.utils": {
  "data": {},
  "type": "module"
 },
 "treeinterpreter.utils.aggregated_contribution": {
  "data": {
   "lineno": 2,
   "symbols_in_volume": [
    "enumerate",
    "set"
   ]
  },
  "type": "function"
 }
}