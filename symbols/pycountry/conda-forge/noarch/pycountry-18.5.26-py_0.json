{
 "pycountry": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pkg_resources.resource_filename",
    "pycountry.Currencies",
    "pycountry.DATABASE_DIR",
    "pycountry.ExistingCountries",
    "pycountry.HistoricCountries",
    "pycountry.Languages",
    "pycountry.Scripts",
    "pycountry.Subdivisions"
   ]
  },
  "type": "module"
 },
 "pycountry.Currencies": {
  "data": {
   "lineno": 41
  },
  "type": "class"
 },
 "pycountry.DATABASE_DIR": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pycountry.ExistingCountries": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "pycountry.HistoricCountries": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "pycountry.LOCALES_DIR": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pycountry.Languages": {
  "data": {
   "lineno": 48
  },
  "type": "class"
 },
 "pycountry.Scripts": {
  "data": {
   "lineno": 34
  },
  "type": "class"
 },
 "pycountry.Subdivision": {
  "data": {
   "lineno": 56
  },
  "type": "class"
 },
 "pycountry.Subdivision.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "pycountry.Subdivision",
    "super"
   ]
  },
  "type": "function"
 },
 "pycountry.Subdivision.country": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pycountry.Subdivision.parent": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pycountry.Subdivisions": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "pycountry.Subdivision"
   ]
  },
  "type": "class"
 },
 "pycountry.Subdivisions._load": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "pycountry.Subdivisions",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "pycountry.Subdivisions.get": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "KeyError",
    "pycountry.Subdivisions",
    "super"
   ]
  },
  "type": "function"
 },
 "pycountry.countries": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "pycountry.currencies": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "pycountry.db": {
  "data": {
   "symbols_in_volume": [
    "NameError",
    "pycountry.db.logging",
    "str"
   ]
  },
  "type": "module"
 },
 "pycountry.db.Data": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pycountry.db.Data.__dir__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "dir",
    "list"
   ]
  },
  "type": "function"
 },
 "pycountry.db.Data.__getattr__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "pycountry.db.Data.__init__": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "pycountry.db.Data.__repr__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "pycountry.db.Data.__setattr__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pycountry.db.Data",
    "super"
   ]
  },
  "type": "function"
 },
 "pycountry.db.Database": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "object",
    "pycountry.db.Data"
   ]
  },
  "type": "class"
 },
 "pycountry.db.Database.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "pycountry.db.threading"
   ]
  },
  "type": "function"
 },
 "pycountry.db.Database.__iter__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "iter",
    "pycountry.db.lazy_load"
   ]
  },
  "type": "function"
 },
 "pycountry.db.Database.__len__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "len",
    "pycountry.db.lazy_load"
   ]
  },
  "type": "function"
 },
 "pycountry.db.Database._load": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "f",
    "io.open",
    "pycountry.db.json",
    "pycountry.db.logger",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "pycountry.db.Database.get": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "pycountry.db.lazy_load"
   ]
  },
  "type": "function"
 },
 "pycountry.db.Database.lookup": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "LookupError",
    "isinstance",
    "pycountry.db.lazy_load",
    "pycountry.db.unicode",
    "str"
   ]
  },
  "type": "function"
 },
 "pycountry.db.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pycountry.db.lazy_load": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "pycountry.db.lazy_load.load_if_needed": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "pycountry.db.logger": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pycountry.db.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycountry.db.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "pycountry.db.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "pycountry.db.unicode": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pycountry.historic_countries": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "pycountry.languages": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "pycountry.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pycountry.pycountry.db": {
  "data": {
   "shadows": "pycountry.db"
  },
  "type": "import"
 },
 "pycountry.resource_filename": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "pycountry.scripts": {
  "data": {
   "lineno": 116
  },
  "type": "constant"
 },
 "pycountry.subdivisions": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "pycountry.tests.test_general": {
  "data": {},
  "type": "module"
 },
 "pycountry.tests.test_general.gettext": {
  "data": {
   "shadows": "gettext"
  },
  "type": "import"
 },
 "pycountry.tests.test_general.logging": {
  "data": {
   "shadows": "logging",
   "symbols_in_volume": [
    "pycountry.tests.test_general.pytest"
   ]
  },
  "type": "import"
 },
 "pycountry.tests.test_general.pycountry": {
  "data": {
   "shadows": "pycountry"
  },
  "type": "import"
 },
 "pycountry.tests.test_general.pycountry.db": {
  "data": {
   "shadows": "pycountry.db"
  },
  "type": "import"
 },
 "pycountry.tests.test_general.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pycountry.tests.test_general.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pycountry.tests.test_general.test_country_list": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "pycountry.tests.test_general.pycountry"
   ]
  },
  "type": "function"
 },
 "pycountry.tests.test_general.test_currencies": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "pycountry.tests.test_general.pycountry"
   ]
  },
  "type": "function"
 },
 "pycountry.tests.test_general.test_dir": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "dir",
    "pycountry.tests.test_general.pycountry"
   ]
  },
  "type": "function"
 },
 "pycountry.tests.test_general.test_germany_has_all_attributes": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pycountry.tests.test_general.pycountry"
   ]
  },
  "type": "function"
 },
 "pycountry.tests.test_general.test_get": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "pycountry.tests.test_general.pycountry",
    "pycountry.tests.test_general.pytest"
   ]
  },
  "type": "function"
 },
 "pycountry.tests.test_general.test_languages": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "pycountry.tests.test_general.pycountry"
   ]
  },
  "type": "function"
 },
 "pycountry.tests.test_general.test_locales": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "pycountry.tests.test_general.gettext",
    "pycountry.tests.test_general.pycountry"
   ]
  },
  "type": "function"
 },
 "pycountry.tests.test_general.test_lookup": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "LookupError",
    "pycountry.tests.test_general.pycountry",
    "pycountry.tests.test_general.pytest"
   ]
  },
  "type": "function"
 },
 "pycountry.tests.test_general.test_query_subdivisions_of_country": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "len",
    "pycountry.tests.test_general.pycountry"
   ]
  },
  "type": "function"
 },
 "pycountry.tests.test_general.test_removed_countries": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "isinstance",
    "pycountry.tests.test_general.pycountry"
   ]
  },
  "type": "function"
 },
 "pycountry.tests.test_general.test_repr": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "pycountry.tests.test_general.pycountry",
    "pycountry.tests.test_general.re",
    "repr"
   ]
  },
  "type": "function"
 },
 "pycountry.tests.test_general.test_scripts": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "pycountry.tests.test_general.pycountry"
   ]
  },
  "type": "function"
 },
 "pycountry.tests.test_general.test_subdivision_empty_list": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "pycountry.tests.test_general.pycountry",
    "pycountry.tests.test_general.pytest"
   ]
  },
  "type": "function"
 },
 "pycountry.tests.test_general.test_subdivision_missing_code_raises_keyerror": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "KeyError",
    "pycountry.tests.test_general.pycountry",
    "pycountry.tests.test_general.pytest"
   ]
  },
  "type": "function"
 },
 "pycountry.tests.test_general.test_subdivision_parent": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "pycountry.tests.test_general.pycountry"
   ]
  },
  "type": "function"
 },
 "pycountry.tests.test_general.test_subdivisions_directly_accessible": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "pycountry.tests.test_general.pycountry"
   ]
  },
  "type": "function"
 },
 "pycountry.tests.test_general.test_subdivisions_have_subdivision_as_parent": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "pycountry.tests.test_general.pycountry"
   ]
  },
  "type": "function"
 }
}