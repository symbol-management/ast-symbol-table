{
 "cf_xarray": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "cf_xarray.accessor": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.Callable",
   "typing.List",
   "typing.Mapping",
   "typing.MutableMapping",
   "typing.Tuple",
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset",
   "xarray.core.groupby.GroupBy",
   "xarray.core.resample.Resample",
   "xarray.core.rolling.Coarsen",
   "xarray.core.rolling.Rolling",
   "xarray.core.weighted.Weighted"
  ],
  "type": "module"
 },
 "cf_xarray.accessor.CFAccessor": {
  "lineno": 648,
  "symbols_in_volume": [],
  "type": "class"
 },
 "cf_xarray.accessor.CFAccessor.__contains__": {
  "lineno": 809,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor.__getattr__": {
  "lineno": 800,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor.__getitem__": {
  "lineno": 976,
  "symbols_in_volume": [
   "itertools.chain",
   "typing.Hashable",
   "typing.List",
   "typing.Union",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor.__getitem__.check_results": {
  "lineno": 989,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor.__init__": {
  "lineno": 653,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor._maybe_to_dataarray": {
  "lineno": 1076,
  "symbols_in_volume": [
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor._maybe_to_dataset": {
  "lineno": 1068,
  "symbols_in_volume": [
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor._process_signature": {
  "lineno": 656,
  "symbols_in_volume": [
   "inspect.Parameter.VAR_KEYWORD",
   "inspect.Parameter.VAR_POSITIONAL",
   "inspect.signature",
   "typing.Callable",
   "typing.List",
   "typing.MutableMapping",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor._rewrite_values": {
  "lineno": 707,
  "symbols_in_volume": [
   "collections.ChainMap",
   "itertools.chain",
   "typing.Mapping",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor.describe": {
  "lineno": 819,
  "symbols_in_volume": [
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor.get_associated_variable_names": {
  "lineno": 908,
  "symbols_in_volume": [
   "collections.ChainMap",
   "itertools.chain",
   "typing.Dict",
   "typing.Hashable",
   "typing.List",
   "warnings.warn",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor.get_standard_names": {
  "lineno": 880,
  "symbols_in_volume": [
   "typing.List",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor.get_valid_keys": {
  "lineno": 852,
  "symbols_in_volume": [
   "typing.Set",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor.guess_coord_axis": {
  "lineno": 1134,
  "symbols_in_volume": [
   "collections.ChainMap",
   "re.match",
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor.plot": {
  "lineno": 815,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor.rename_like": {
  "lineno": 1084,
  "symbols_in_volume": [
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.CFDataArrayAccessor": {
  "lineno": 1238,
  "symbols_in_volume": [
   "xarray.register_dataarray_accessor"
  ],
  "type": "class"
 },
 "cf_xarray.accessor.CFDatasetAccessor": {
  "lineno": 1174,
  "symbols_in_volume": [
   "xarray.register_dataset_accessor"
  ],
  "type": "class"
 },
 "cf_xarray.accessor.CFDatasetAccessor.add_bounds": {
  "lineno": 1196,
  "symbols_in_volume": [
   "typing.Hashable",
   "typing.Iterable",
   "typing.Set",
   "typing.Union"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.CFDatasetAccessor.get_bounds": {
  "lineno": 1176,
  "symbols_in_volume": [
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "cf_xarray.accessor._CFWrappedClass": {
  "lineno": 545,
  "symbols_in_volume": [],
  "type": "class"
 },
 "cf_xarray.accessor._CFWrappedClass.__getattr__": {
  "lineno": 565,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.accessor._CFWrappedClass.__init__": {
  "lineno": 550,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.accessor._CFWrappedClass.__repr__": {
  "lineno": 562,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.accessor._CFWrappedPlotMethods": {
  "lineno": 574,
  "symbols_in_volume": [],
  "type": "class"
 },
 "cf_xarray.accessor._CFWrappedPlotMethods.__call__": {
  "lineno": 621,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.accessor._CFWrappedPlotMethods.__getattr__": {
  "lineno": 633,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.accessor._CFWrappedPlotMethods.__init__": {
  "lineno": 579,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.accessor._CFWrappedPlotMethods._plot_decorator": {
  "lineno": 584,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.accessor._CFWrappedPlotMethods._plot_decorator._plot_wrapper": {
  "lineno": 593,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "cf_xarray.accessor._build_docstring": {
  "lineno": 430,
  "symbols_in_volume": [
   "inspect.Parameter.VAR_KEYWORD",
   "inspect.signature"
  ],
  "type": "function"
 },
 "cf_xarray.accessor._get_axis_coord": {
  "lineno": 260,
  "symbols_in_volume": [
   "typing.List",
   "typing.Set",
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.accessor._get_axis_coord_single": {
  "lineno": 216,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.accessor._get_axis_coord_time_accessor": {
  "lineno": 228,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.accessor._get_measure": {
  "lineno": 334,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.accessor._get_measure_variable": {
  "lineno": 324,
  "symbols_in_volume": [
   "typing.List",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "cf_xarray.accessor._get_with_standard_name": {
  "lineno": 400,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.accessor._getattr": {
  "lineno": 462,
  "symbols_in_volume": [
   "typing.Callable",
   "typing.Mapping",
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.accessor._getattr.wrapper": {
  "lineno": 528,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "cf_xarray.accessor._guess_bounds_dim": {
  "lineno": 411,
  "symbols_in_volume": [
   "xarray.concat"
  ],
  "type": "function"
 },
 "cf_xarray.accessor._is_datetime_like": {
  "lineno": 138,
  "symbols_in_volume": [
   "cftime.datetime",
   "numpy.datetime64",
   "numpy.issubdtype",
   "numpy.timedelta64",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.apply_mapper": {
  "lineno": 161,
  "symbols_in_volume": [
   "itertools.chain",
   "typing.Any",
   "typing.Iterable",
   "typing.List",
   "typing.Tuple",
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.apply_mapper._apply_single_mapper": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "cf_xarray.tests.CountingScheduler": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "cf_xarray.tests.CountingScheduler.__call__": {
  "lineno": 29,
  "symbols_in_volume": [
   "dask.get"
  ],
  "type": "function"
 },
 "cf_xarray.tests.CountingScheduler.__init__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.tests.datasets": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.cos",
   "numpy.linspace",
   "numpy.ones",
   "numpy.pi",
   "numpy.random.randn",
   "xarray.DataArray",
   "xarray.Dataset",
   "xarray.ones_like",
   "xarray.tutorial.open_dataset"
  ],
  "type": "module"
 },
 "cf_xarray.tests.raise_if_dask_computes": {
  "lineno": 39,
  "symbols_in_volume": [
   "dask.config.set"
  ],
  "type": "function"
 },
 "cf_xarray.tests.raises_regex": {
  "lineno": 8,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "pytest.raises",
   "re.search"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor": {
  "lineno": null,
  "symbols_in_volume": [
   "matplotlib.use"
  ],
  "type": "module"
 },
 "cf_xarray.tests.test_accessor.test_Z_vs_vertical_ROMS": {
  "lineno": 472,
  "symbols_in_volume": [
   "pytest.raises",
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_add_bounds": {
  "lineno": 342,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.date_range",
   "pytest.mark.parametrize",
   "xarray.concat",
   "xarray.testing.assert_allclose"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_args_methods": {
  "lineno": 216,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_bounds": {
  "lineno": 386,
  "symbols_in_volume": [
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_dataarray_getitem": {
  "lineno": 224,
  "symbols_in_volume": [
   "pytest.raises",
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_dataarray_plot": {
  "lineno": 236,
  "symbols_in_volume": [
   "matplotlib.collections.QuadMesh",
   "matplotlib.contour.QuadContourSet",
   "matplotlib.lines.Line2D",
   "matplotlib.pyplot.close",
   "pytest.mark.parametrize",
   "xarray.plot.FacetGrid"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_dataset_plot": {
  "lineno": 266,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_describe": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_dicts": {
  "lineno": 433,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_docstring": {
  "lineno": 406,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_get_standard_names": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.arange",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_get_valid_keys": {
  "lineno": 203,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_getitem": {
  "lineno": 271,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.mark.xfail",
   "pytest.param",
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_getitem_ancillary_variables": {
  "lineno": 63,
  "symbols_in_volume": [
   "pytest.warns",
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_getitem_errors": {
  "lineno": 296,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_getitem_standard_name": {
  "lineno": 46,
  "symbols_in_volume": [
   "pytest.raises",
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_getitem_uses_coordinates": {
  "lineno": 306,
  "symbols_in_volume": [
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_getitem_uses_dimension_names_when_coordinates_attr": {
  "lineno": 321,
  "symbols_in_volume": [
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_groupby_reduce_multiple_dims": {
  "lineno": 136,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_guess_coord_axis": {
  "lineno": 411,
  "symbols_in_volume": [
   "pandas.date_range",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_kwargs_expand_key_to_multiple_keys": {
  "lineno": 187,
  "symbols_in_volume": [
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_kwargs_methods": {
  "lineno": 152,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_missing_variable_in_coordinates": {
  "lineno": 465,
  "symbols_in_volume": [
   "xarray.set_options",
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_plot_xincrease_yincrease": {
  "lineno": 330,
  "symbols_in_volume": [
   "matplotlib.pyplot.subplots",
   "xarray.tutorial.open_dataset"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_pos_args_methods": {
  "lineno": 165,
  "symbols_in_volume": [
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_preserve_unused_keys": {
  "lineno": 178,
  "symbols_in_volume": [
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_rename_like": {
  "lineno": 78,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_weighted": {
  "lineno": 143,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_wrapped_classes": {
  "lineno": 95,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.mark.skip",
   "pytest.param",
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.utils": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "cf_xarray.utils.UncachedAccessor": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "class"
 },
 "cf_xarray.utils.UncachedAccessor.__get__": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.utils.UncachedAccessor.__init__": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.utils.either_dict_or_kwargs": {
  "lineno": 8,
  "symbols_in_volume": [
   "typing.Hashable",
   "typing.Mapping",
   "typing.Optional",
   "typing.cast"
  ],
  "type": "function"
 },
 "cf_xarray.utils.is_dict_like": {
  "lineno": 30,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 }
}