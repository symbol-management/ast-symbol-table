{
 "cf_xarray": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "cf_xarray.accessor": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.Callable",
   "typing.List",
   "typing.Mapping",
   "typing.MutableMapping",
   "typing.Tuple",
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset",
   "xarray.core.groupby.GroupBy",
   "xarray.core.resample.Resample",
   "xarray.core.rolling.Coarsen",
   "xarray.core.rolling.Rolling",
   "xarray.core.weighted.Weighted"
  ],
  "type": "module"
 },
 "cf_xarray.accessor.CFAccessor": {
  "lineno": 643,
  "symbols_in_volume": [],
  "type": "class"
 },
 "cf_xarray.accessor.CFAccessor.__contains__": {
  "lineno": 816,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor.__getattr__": {
  "lineno": 807,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor.__getitem__": {
  "lineno": 1055,
  "symbols_in_volume": [
   "itertools.chain",
   "typing.Hashable",
   "typing.List",
   "typing.Union",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor.__getitem__.check_results": {
  "lineno": 1068,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor.__init__": {
  "lineno": 648,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor._get_all_cell_measures": {
  "lineno": 652,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor._maybe_to_dataarray": {
  "lineno": 1163,
  "symbols_in_volume": [
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor._maybe_to_dataset": {
  "lineno": 1155,
  "symbols_in_volume": [
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor._process_signature": {
  "lineno": 663,
  "symbols_in_volume": [
   "inspect.Parameter.VAR_KEYWORD",
   "inspect.Parameter.VAR_POSITIONAL",
   "inspect.signature",
   "typing.Callable",
   "typing.List",
   "typing.MutableMapping",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor._rewrite_values": {
  "lineno": 714,
  "symbols_in_volume": [
   "collections.ChainMap",
   "itertools.chain",
   "typing.Mapping",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor.axes": {
  "lineno": 882,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor.cell_measures": {
  "lineno": 926,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.List",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor.coordinates": {
  "lineno": 904,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor.describe": {
  "lineno": 826,
  "symbols_in_volume": [
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor.get_associated_variable_names": {
  "lineno": 993,
  "symbols_in_volume": [
   "collections.ChainMap",
   "itertools.chain",
   "typing.Dict",
   "typing.Hashable",
   "typing.List",
   "warnings.warn",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor.get_standard_names": {
  "lineno": 956,
  "symbols_in_volume": [
   "typing.List",
   "warnings.warn"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor.get_valid_keys": {
  "lineno": 855,
  "symbols_in_volume": [
   "typing.Set",
   "warnings.warn"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor.guess_coord_axis": {
  "lineno": 1221,
  "symbols_in_volume": [
   "collections.ChainMap",
   "re.match",
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor.keys": {
  "lineno": 864,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor.plot": {
  "lineno": 822,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor.rename_like": {
  "lineno": 1171,
  "symbols_in_volume": [
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.CFAccessor.standard_names": {
  "lineno": 965,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.List",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.CFDataArrayAccessor": {
  "lineno": 1489,
  "symbols_in_volume": [
   "xarray.register_dataarray_accessor"
  ],
  "type": "class"
 },
 "cf_xarray.accessor.CFDatasetAccessor": {
  "lineno": 1261,
  "symbols_in_volume": [
   "xarray.register_dataset_accessor"
  ],
  "type": "class"
 },
 "cf_xarray.accessor.CFDatasetAccessor.add_bounds": {
  "lineno": 1283,
  "symbols_in_volume": [
   "typing.Hashable",
   "typing.Iterable",
   "typing.Set",
   "typing.Union"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.CFDatasetAccessor.bounds_to_vertices": {
  "lineno": 1324,
  "symbols_in_volume": [
   "typing.Iterable",
   "typing.Union",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.CFDatasetAccessor.decode_vertical_coords": {
  "lineno": 1403,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.CFDatasetAccessor.get_bounds": {
  "lineno": 1263,
  "symbols_in_volume": [
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "cf_xarray.accessor._CFWrappedClass": {
  "lineno": 540,
  "symbols_in_volume": [],
  "type": "class"
 },
 "cf_xarray.accessor._CFWrappedClass.__getattr__": {
  "lineno": 560,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.accessor._CFWrappedClass.__init__": {
  "lineno": 545,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.accessor._CFWrappedClass.__repr__": {
  "lineno": 557,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.accessor._CFWrappedPlotMethods": {
  "lineno": 569,
  "symbols_in_volume": [],
  "type": "class"
 },
 "cf_xarray.accessor._CFWrappedPlotMethods.__call__": {
  "lineno": 616,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.accessor._CFWrappedPlotMethods.__getattr__": {
  "lineno": 628,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.accessor._CFWrappedPlotMethods.__init__": {
  "lineno": 574,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.accessor._CFWrappedPlotMethods._plot_decorator": {
  "lineno": 579,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.accessor._CFWrappedPlotMethods._plot_decorator._plot_wrapper": {
  "lineno": 588,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "cf_xarray.accessor._build_docstring": {
  "lineno": 425,
  "symbols_in_volume": [
   "inspect.Parameter.VAR_KEYWORD",
   "inspect.signature"
  ],
  "type": "function"
 },
 "cf_xarray.accessor._get_axis_coord": {
  "lineno": 265,
  "symbols_in_volume": [
   "typing.List",
   "typing.Set",
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.accessor._get_axis_coord_single": {
  "lineno": 221,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.accessor._get_axis_coord_time_accessor": {
  "lineno": 233,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.accessor._get_measure": {
  "lineno": 339,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.accessor._get_measure_variable": {
  "lineno": 329,
  "symbols_in_volume": [
   "typing.List",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "cf_xarray.accessor._get_with_standard_name": {
  "lineno": 395,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.accessor._getattr": {
  "lineno": 457,
  "symbols_in_volume": [
   "typing.Callable",
   "typing.Mapping",
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.accessor._getattr.wrapper": {
  "lineno": 523,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "cf_xarray.accessor._guess_bounds_dim": {
  "lineno": 406,
  "symbols_in_volume": [
   "xarray.concat"
  ],
  "type": "function"
 },
 "cf_xarray.accessor._is_datetime_like": {
  "lineno": 143,
  "symbols_in_volume": [
   "cftime.datetime",
   "numpy.datetime64",
   "numpy.issubdtype",
   "numpy.timedelta64",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.apply_mapper": {
  "lineno": 166,
  "symbols_in_volume": [
   "itertools.chain",
   "typing.Any",
   "typing.Iterable",
   "typing.List",
   "typing.Tuple",
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.accessor.apply_mapper._apply_single_mapper": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.helpers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "cf_xarray.helpers.bounds_to_vertices": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.block",
   "numpy.concatenate",
   "typing.Optional",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "cf_xarray.helpers.vertices_to_bounds": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.stack",
   "typing.Sequence",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "cf_xarray.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "cf_xarray.tests.CountingScheduler": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "cf_xarray.tests.CountingScheduler.__call__": {
  "lineno": 29,
  "symbols_in_volume": [
   "dask.get"
  ],
  "type": "function"
 },
 "cf_xarray.tests.CountingScheduler.__init__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.tests.datasets": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.arcsin",
   "numpy.cos",
   "numpy.linspace",
   "numpy.mgrid",
   "numpy.ones",
   "numpy.pi",
   "numpy.rad2deg",
   "numpy.random.randn",
   "numpy.sin",
   "numpy.sqrt",
   "numpy.stack",
   "xarray.DataArray",
   "xarray.Dataset",
   "xarray.ones_like",
   "xarray.tutorial.open_dataset"
  ],
  "type": "module"
 },
 "cf_xarray.tests.raise_if_dask_computes": {
  "lineno": 39,
  "symbols_in_volume": [
   "dask.config.set"
  ],
  "type": "function"
 },
 "cf_xarray.tests.raises_regex": {
  "lineno": 8,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "pytest.raises",
   "re.search"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor": {
  "lineno": null,
  "symbols_in_volume": [
   "matplotlib.use"
  ],
  "type": "module"
 },
 "cf_xarray.tests.test_accessor.test_Z_vs_vertical_ROMS": {
  "lineno": 554,
  "symbols_in_volume": [
   "pytest.raises",
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_add_bounds": {
  "lineno": 398,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.date_range",
   "pytest.mark.parametrize",
   "xarray.concat",
   "xarray.testing.assert_allclose"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_args_methods": {
  "lineno": 266,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_axes": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_bounds": {
  "lineno": 442,
  "symbols_in_volume": [
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_bounds_to_vertices": {
  "lineno": 462,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_cell_measures": {
  "lineno": 55,
  "symbols_in_volume": [
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_coordinates": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_dataarray_getitem": {
  "lineno": 274,
  "symbols_in_volume": [
   "pytest.raises",
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_dataarray_plot": {
  "lineno": 286,
  "symbols_in_volume": [
   "matplotlib.collections.QuadMesh",
   "matplotlib.contour.QuadContourSet",
   "matplotlib.lines.Line2D",
   "matplotlib.pyplot.close",
   "pytest.mark.parametrize",
   "xarray.plot.FacetGrid"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_dataset_plot": {
  "lineno": 316,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_describe": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_dicts": {
  "lineno": 515,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_docstring": {
  "lineno": 488,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_getitem": {
  "lineno": 321,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.mark.xfail",
   "pytest.param",
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_getitem_ancillary_variables": {
  "lineno": 110,
  "symbols_in_volume": [
   "pytest.warns",
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_getitem_errors": {
  "lineno": 346,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_getitem_regression": {
  "lineno": 356,
  "symbols_in_volume": [
   "numpy.ones",
   "xarray.DataArray",
   "xarray.Dataset",
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_getitem_standard_name": {
  "lineno": 93,
  "symbols_in_volume": [
   "pytest.raises",
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_getitem_uses_coordinates": {
  "lineno": 362,
  "symbols_in_volume": [
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_getitem_uses_dimension_names_when_coordinates_attr": {
  "lineno": 377,
  "symbols_in_volume": [
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_groupby_reduce_multiple_dims": {
  "lineno": 183,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_guess_coord_axis": {
  "lineno": 493,
  "symbols_in_volume": [
   "pandas.date_range",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_keys": {
  "lineno": 250,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_kwargs_expand_key_to_multiple_keys": {
  "lineno": 234,
  "symbols_in_volume": [
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_kwargs_methods": {
  "lineno": 199,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_missing_variable_in_coordinates": {
  "lineno": 547,
  "symbols_in_volume": [
   "xarray.set_options",
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_param_vcoord_ocean_s_coord": {
  "lineno": 580,
  "symbols_in_volume": [
   "pytest.raises",
   "xarray.testing.assert_allclose"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_plot_xincrease_yincrease": {
  "lineno": 386,
  "symbols_in_volume": [
   "matplotlib.pyplot.subplots",
   "xarray.tutorial.open_dataset"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_pos_args_methods": {
  "lineno": 212,
  "symbols_in_volume": [
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_preserve_unused_keys": {
  "lineno": 225,
  "symbols_in_volume": [
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_rename_like": {
  "lineno": 125,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_standard_names": {
  "lineno": 80,
  "symbols_in_volume": [
   "numpy.arange",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_weighted": {
  "lineno": 190,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_accessor.test_wrapped_classes": {
  "lineno": 142,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.mark.skip",
   "pytest.param",
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_helpers": {
  "lineno": null,
  "symbols_in_volume": [
   "dask.array.Array"
  ],
  "type": "module"
 },
 "cf_xarray.tests.test_helpers.test_bounds_to_vertices": {
  "lineno": 14,
  "symbols_in_volume": [
   "cf_xarray.bounds_to_vertices",
   "dask.array.Array",
   "numpy.testing.assert_array_equal",
   "xarray.testing.assert_equal"
  ],
  "type": "function"
 },
 "cf_xarray.tests.test_helpers.test_vertices_to_bounds": {
  "lineno": 42,
  "symbols_in_volume": [
   "cf_xarray.bounds_to_vertices",
   "cf_xarray.vertices_to_bounds",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "cf_xarray.utils": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "cf_xarray.utils.UncachedAccessor": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "class"
 },
 "cf_xarray.utils.UncachedAccessor.__get__": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.utils.UncachedAccessor.__init__": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "cf_xarray.utils.either_dict_or_kwargs": {
  "lineno": 8,
  "symbols_in_volume": [
   "typing.Hashable",
   "typing.Mapping",
   "typing.Optional",
   "typing.cast"
  ],
  "type": "function"
 },
 "cf_xarray.utils.is_dict_like": {
  "lineno": 30,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "cf_xarray.utils.parse_cell_methods_attr": {
  "lineno": 52,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 }
}