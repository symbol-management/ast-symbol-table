{
 "mockupdb.__main__": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mockupdb.__main__.main"
   ]
  },
  "type": "module"
 },
 "mockupdb.__main__.OptionParser": {
  "data": {
   "shadows": "optparse.OptionParser"
  },
  "type": "import"
 },
 "mockupdb.__main__.interactive_server": {
  "data": {
   "shadows": "mockupdb.interactive_server"
  },
  "type": "import"
 },
 "mockupdb.__main__.main": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "mockupdb.__main__.time",
    "mockupdb.interactive_server",
    "optparse.OptionParser",
    "print"
   ]
  },
  "type": "function"
 },
 "mockupdb.__main__.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mockupdb._bson.binary": {
  "data": {
   "symbols_in_volume": [
    "mockupdb._bson.binary.CSHARP_LEGACY",
    "mockupdb._bson.binary.JAVA_LEGACY",
    "mockupdb._bson.binary.OLD_UUID_SUBTYPE",
    "mockupdb._bson.binary.PYTHON_LEGACY",
    "mockupdb._bson.binary.STANDARD",
    "mockupdb._bson.binary.UUID_SUBTYPE"
   ]
  },
  "type": "module"
 },
 "mockupdb._bson.binary.ALL_UUID_REPRESENTATIONS": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "mockupdb._bson.binary.ALL_UUID_SUBTYPES": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "mockupdb._bson.binary.BINARY_SUBTYPE": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mockupdb._bson.binary.Binary": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.binary.Binary.__eq__": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "mockupdb._bson.binary.Binary"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.binary.Binary.__getnewargs__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "mockupdb._bson.binary.Binary",
    "mockupdb._bson.py3compat.PY3",
    "super"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.binary.Binary.__hash__": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "hash",
    "mockupdb._bson.binary.Binary",
    "super"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.binary.Binary.__ne__": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "mockupdb._bson.binary.Binary.__new__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bytes",
    "bytes.__new__",
    "int",
    "isinstance",
    "mockupdb._bson.binary.BINARY_SUBTYPE"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.binary.Binary.__repr__": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "bytes.__repr__"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.binary.Binary.subtype": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.binary.CSHARP_LEGACY": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "mockupdb._bson.binary.FUNCTION_SUBTYPE": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mockupdb._bson.binary.JAVA_LEGACY": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "mockupdb._bson.binary.MD5_SUBTYPE": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "mockupdb._bson.binary.OLD_BINARY_SUBTYPE": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mockupdb._bson.binary.OLD_UUID_SUBTYPE": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mockupdb._bson.binary.PY3": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.PY3"
  },
  "type": "import"
 },
 "mockupdb._bson.binary.PYTHON_LEGACY": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "mockupdb._bson.binary.STANDARD": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "mockupdb._bson.binary.USER_DEFINED_SUBTYPE": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "mockupdb._bson.binary.UUID": {
  "data": {
   "shadows": "uuid.UUID"
  },
  "type": "import"
 },
 "mockupdb._bson.binary.UUIDLegacy": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "mockupdb._bson.binary.Binary"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.binary.UUIDLegacy.__getnewargs__": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "mockupdb._bson.binary.UUIDLegacy.__new__": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "mockupdb._bson.binary.Binary",
    "mockupdb._bson.binary.OLD_UUID_SUBTYPE",
    "uuid.UUID"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.binary.UUIDLegacy.__repr__": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "mockupdb._bson.binary.UUIDLegacy.uuid": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.binary.UUID_REPRESENTATION_NAMES": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "mockupdb._bson.binary.UUID_SUBTYPE": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mockupdb._bson.code": {
  "data": {},
  "type": "module"
 },
 "mockupdb._bson.code.Code": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.code.Code.__eq__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "isinstance",
    "mockupdb._bson.code.Code",
    "str"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.code.Code.__ne__": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "mockupdb._bson.code.Code.__new__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "isinstance",
    "mockupdb._bson.py3compat.PY3",
    "mockupdb._bson.py3compat.abc.Mapping",
    "mockupdb._bson.py3compat.string_type",
    "mockupdb._bson.py3compat.string_type.__name__",
    "mockupdb._bson.py3compat.text_type",
    "str.__new__"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.code.Code.__repr__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "str.__repr__"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.code.Code.scope": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.code.PY3": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.PY3"
  },
  "type": "import"
 },
 "mockupdb._bson.code.abc": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.abc"
  },
  "type": "import"
 },
 "mockupdb._bson.code.string_type": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.string_type"
  },
  "type": "import"
 },
 "mockupdb._bson.code.text_type": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.text_type"
  },
  "type": "import"
 },
 "mockupdb._bson.codec_options": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple",
    "mockupdb._bson.codec_options.CodecOptions"
   ]
  },
  "type": "module"
 },
 "mockupdb._bson.codec_options.ALL_UUID_REPRESENTATIONS": {
  "data": {
   "shadows": "mockupdb._bson.binary.ALL_UUID_REPRESENTATIONS"
  },
  "type": "import"
 },
 "mockupdb._bson.codec_options.CodecOptions": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "mockupdb._bson.codec_options._options_base"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.codec_options.CodecOptions.__new__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bool",
    "dict",
    "isinstance",
    "issubclass",
    "mockupdb._bson.binary.ALL_UUID_REPRESENTATIONS",
    "mockupdb._bson.binary.PYTHON_LEGACY",
    "mockupdb._bson.codec_options._raw_document_class",
    "mockupdb._bson.codec_options.datetime",
    "mockupdb._bson.py3compat.abc.MutableMapping",
    "mockupdb._bson.py3compat.string_type",
    "tuple.__new__"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.codec_options.CodecOptions.__repr__": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "mockupdb._bson.codec_options.CodecOptions._arguments_repr": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "dict",
    "mockupdb._bson.binary.UUID_REPRESENTATION_NAMES.get",
    "repr"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.codec_options.CodecOptions.with_options": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "mockupdb._bson.codec_options.CodecOptions"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.codec_options.DEFAULT_CODEC_OPTIONS": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "mockupdb._bson.codec_options.PYTHON_LEGACY": {
  "data": {
   "shadows": "mockupdb._bson.binary.PYTHON_LEGACY"
  },
  "type": "import"
 },
 "mockupdb._bson.codec_options.UUID_REPRESENTATION_NAMES": {
  "data": {
   "shadows": "mockupdb._bson.binary.UUID_REPRESENTATION_NAMES"
  },
  "type": "import"
 },
 "mockupdb._bson.codec_options._RAW_BSON_DOCUMENT_MARKER": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mockupdb._bson.codec_options._options_base": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mockupdb._bson.codec_options._parse_codec_options": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "mockupdb._bson.codec_options.CodecOptions",
    "mockupdb._bson.codec_options.DEFAULT_CODEC_OPTIONS"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.codec_options._raw_document_class": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "getattr",
    "mockupdb._bson.codec_options._RAW_BSON_DOCUMENT_MARKER"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.codec_options.abc": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.abc"
  },
  "type": "import"
 },
 "mockupdb._bson.codec_options.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mockupdb._bson.codec_options.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "mockupdb._bson.codec_options.string_type": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.string_type"
  },
  "type": "import"
 },
 "mockupdb._bson.dbref": {
  "data": {},
  "type": "module"
 },
 "mockupdb._bson.dbref.DBRef": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.dbref.DBRef.__deepcopy__": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "copy.deepcopy",
    "mockupdb._bson.dbref.DBRef"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.dbref.DBRef.__eq__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "mockupdb._bson.dbref.DBRef"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.dbref.DBRef.__getattr__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.dbref.DBRef.__hash__": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "hash",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.dbref.DBRef.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "TypeError",
    "id",
    "isinstance",
    "mockupdb._bson.py3compat.string_type",
    "mockupdb._bson.py3compat.string_type.__name__"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.dbref.DBRef.__ne__": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "mockupdb._bson.dbref.DBRef.__repr__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "mockupdb._bson.py3compat.iteritems"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.dbref.DBRef.__setstate__": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "mockupdb._bson.dbref.DBRef.as_doc": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "mockupdb._bson.son.SON"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.dbref.DBRef.collection": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.dbref.DBRef.database": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.dbref.DBRef.id": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.dbref.SON": {
  "data": {
   "shadows": "mockupdb._bson.son.SON"
  },
  "type": "import"
 },
 "mockupdb._bson.dbref.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mockupdb._bson.dbref.iteritems": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.iteritems"
  },
  "type": "import"
 },
 "mockupdb._bson.dbref.string_type": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.string_type"
  },
  "type": "import"
 },
 "mockupdb._bson.decimal128": {
  "data": {
   "symbols_in_volume": [
    "TypeError",
    "int.from_bytes",
    "mockupdb._bson.decimal128._CTX_OPTIONS",
    "mockupdb._bson.decimal128._EXPONENT_MAX",
    "mockupdb._bson.decimal128._EXPONENT_MIN",
    "mockupdb._bson.decimal128._INF",
    "mockupdb._bson.decimal128._MAX_DIGITS",
    "mockupdb._bson.decimal128._NAN",
    "mockupdb._bson.decimal128._SIGN",
    "mockupdb._bson.decimal128._SNAN",
    "mockupdb._bson.decimal128.decimal",
    "mockupdb._bson.decimal128.struct",
    "mockupdb._bson.decimal128.sys",
    "mockupdb._bson.py3compat.PY3"
   ]
  },
  "type": "module"
 },
 "mockupdb._bson.decimal128.Decimal128": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.decimal128.Decimal128.__eq__": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "mockupdb._bson.decimal128.Decimal128"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.decimal128.Decimal128.__getstate__": {
  "data": {
   "lineno": 342
  },
  "type": "function"
 },
 "mockupdb._bson.decimal128.Decimal128.__init__": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "len",
    "list",
    "mockupdb._bson.decimal128._decimal_to_128",
    "mockupdb._bson.decimal128.decimal",
    "mockupdb._bson.py3compat.string_type",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.decimal128.Decimal128.__ne__": {
  "data": {
   "lineno": 350
  },
  "type": "function"
 },
 "mockupdb._bson.decimal128.Decimal128.__repr__": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.decimal128.Decimal128.__setstate__": {
  "data": {
   "lineno": 339
  },
  "type": "function"
 },
 "mockupdb._bson.decimal128.Decimal128.__str__": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.decimal128.Decimal128.bid": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "mockupdb._bson.decimal128._PACK_64",
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.decimal128.Decimal128.from_bid": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bytes",
    "classmethod",
    "cls",
    "isinstance",
    "len",
    "mockupdb._bson.decimal128._UNPACK_64"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.decimal128.Decimal128.to_decimal": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "bytearray",
    "bytes",
    "int",
    "mockupdb._bson.decimal128._DEC128_CTX",
    "mockupdb._bson.decimal128._EXPONENT_BIAS",
    "mockupdb._bson.decimal128._EXPONENT_MASK",
    "mockupdb._bson.decimal128._INF",
    "mockupdb._bson.decimal128._NAN",
    "mockupdb._bson.decimal128._SIGN",
    "mockupdb._bson.decimal128._SNAN",
    "mockupdb._bson.decimal128._from_bytes",
    "mockupdb._bson.decimal128.decimal",
    "range",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.decimal128._CTX_OPTIONS": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._DEC128_CTX": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._EXPONENT_BIAS": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._EXPONENT_MASK": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._EXPONENT_MAX": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._EXPONENT_MIN": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._INF": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._MAX_DIGITS": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._NAN": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._NINF": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._NNAN": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._NSNAN": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._PACK_64": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._PINF": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._PNAN": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._PSNAN": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._PY3": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.PY3"
  },
  "type": "import"
 },
 "mockupdb._bson.decimal128._SIGN": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._SNAN": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._UNPACK_64": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._bit_length": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "mockupdb._bson.decimal128._decimal_to_128": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "min",
    "mockupdb._bson.decimal128._DEC128_CTX",
    "mockupdb._bson.decimal128._EXPONENT_BIAS",
    "mockupdb._bson.decimal128._EXPONENT_MASK",
    "mockupdb._bson.decimal128._NINF",
    "mockupdb._bson.decimal128._NNAN",
    "mockupdb._bson.decimal128._NSNAN",
    "mockupdb._bson.decimal128._PINF",
    "mockupdb._bson.decimal128._PNAN",
    "mockupdb._bson.decimal128._PSNAN",
    "mockupdb._bson.decimal128._SIGN",
    "mockupdb._bson.decimal128._bit_length",
    "mockupdb._bson.decimal128.decimal",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.decimal128._from_bytes": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "_hexlify",
    "_int",
    "int",
    "mockupdb._bson.decimal128.binascii"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.decimal128._string_type": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.string_type"
  },
  "type": "import"
 },
 "mockupdb._bson.decimal128.binascii": {
  "data": {
   "shadows": "binascii"
  },
  "type": "import"
 },
 "mockupdb._bson.decimal128.create_decimal128_context": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "mockupdb._bson.decimal128._CTX_OPTIONS",
    "mockupdb._bson.decimal128.decimal"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.decimal128.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "mockupdb._bson.decimal128.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "mockupdb._bson.decimal128.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mockupdb._bson.errors": {
  "data": {},
  "type": "module"
 },
 "mockupdb._bson.errors.BSONError": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.errors.InvalidBSON": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "mockupdb._bson.errors.BSONError"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.errors.InvalidDocument": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "mockupdb._bson.errors.BSONError"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.errors.InvalidId": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "mockupdb._bson.errors.BSONError"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.errors.InvalidStringData": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "mockupdb._bson.errors.BSONError"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.int64": {
  "data": {
   "symbols_in_volume": [
    "int",
    "mockupdb._bson.py3compat.PY3"
   ]
  },
  "type": "module"
 },
 "mockupdb._bson.int64.Int64": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "mockupdb._bson.int64.long"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.int64.PY3": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.PY3"
  },
  "type": "import"
 },
 "mockupdb._bson.int64.long": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mockupdb._bson.max_key": {
  "data": {},
  "type": "module"
 },
 "mockupdb._bson.max_key.MaxKey": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.max_key.MaxKey.__eq__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "isinstance",
    "mockupdb._bson.max_key.MaxKey"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.max_key.MaxKey.__ge__": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "mockupdb._bson.max_key.MaxKey.__gt__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "isinstance",
    "mockupdb._bson.max_key.MaxKey"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.max_key.MaxKey.__hash__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.max_key.MaxKey.__le__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "isinstance",
    "mockupdb._bson.max_key.MaxKey"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.max_key.MaxKey.__lt__": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "mockupdb._bson.max_key.MaxKey.__ne__": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "mockupdb._bson.max_key.MaxKey.__repr__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "mockupdb._bson.min_key": {
  "data": {},
  "type": "module"
 },
 "mockupdb._bson.min_key.MinKey": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.min_key.MinKey.__eq__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "isinstance",
    "mockupdb._bson.min_key.MinKey"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.min_key.MinKey.__ge__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "isinstance",
    "mockupdb._bson.min_key.MinKey"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.min_key.MinKey.__gt__": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "mockupdb._bson.min_key.MinKey.__hash__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.min_key.MinKey.__le__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "mockupdb._bson.min_key.MinKey.__lt__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "isinstance",
    "mockupdb._bson.min_key.MinKey"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.min_key.MinKey.__ne__": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "mockupdb._bson.min_key.MinKey.__repr__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "mockupdb._bson.objectid": {
  "data": {},
  "type": "module"
 },
 "mockupdb._bson.objectid.InvalidId": {
  "data": {
   "shadows": "mockupdb._bson.errors.InvalidId"
  },
  "type": "import"
 },
 "mockupdb._bson.objectid.ObjectId": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "mockupdb._bson.objectid._machine_bytes",
    "mockupdb._bson.objectid.random",
    "mockupdb._bson.objectid.threading",
    "object"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.objectid.ObjectId.__eq__": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "mockupdb._bson.objectid.ObjectId"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.__ge__": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "mockupdb._bson.objectid.ObjectId"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.__generate": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "int",
    "mockupdb._bson.objectid.ObjectId",
    "mockupdb._bson.objectid.os",
    "mockupdb._bson.objectid.struct",
    "mockupdb._bson.objectid.time"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.__getstate__": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.__gt__": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "mockupdb._bson.objectid.ObjectId"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.__hash__": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.__le__": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "mockupdb._bson.objectid.ObjectId"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.__lt__": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "mockupdb._bson.objectid.ObjectId"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.__ne__": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "mockupdb._bson.objectid.ObjectId"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.__repr__": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.__setstate__": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "mockupdb._bson.py3compat.PY3",
    "mockupdb._bson.py3compat.text_type"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.__str__": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "mockupdb._bson.objectid.binascii",
    "mockupdb._bson.py3compat.PY3"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.__validate": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "len",
    "mockupdb._bson.objectid.ObjectId",
    "mockupdb._bson.objectid._raise_invalid_id",
    "mockupdb._bson.py3compat.bytes_from_hex",
    "mockupdb._bson.py3compat.string_type",
    "mockupdb._bson.py3compat.text_type.__name__",
    "type"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.binary": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.from_datetime": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "int",
    "mockupdb._bson.objectid.calendar",
    "mockupdb._bson.objectid.struct"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.generation_time": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "mockupdb._bson.objectid.datetime",
    "mockupdb._bson.objectid.struct",
    "mockupdb._bson.tz_util.utc",
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.is_valid": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "TypeError",
    "classmethod",
    "mockupdb._bson.errors.InvalidId",
    "mockupdb._bson.objectid.ObjectId"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.PY3": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.PY3"
  },
  "type": "import"
 },
 "mockupdb._bson.objectid._machine_bytes": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "mockupdb._bson.objectid.hashlib",
    "mockupdb._bson.objectid.socket",
    "mockupdb._bson.py3compat.PY3"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid._raise_invalid_id": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "mockupdb._bson.errors.InvalidId"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.binascii": {
  "data": {
   "shadows": "binascii"
  },
  "type": "import"
 },
 "mockupdb._bson.objectid.bytes_from_hex": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.bytes_from_hex"
  },
  "type": "import"
 },
 "mockupdb._bson.objectid.calendar": {
  "data": {
   "shadows": "calendar"
  },
  "type": "import"
 },
 "mockupdb._bson.objectid.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mockupdb._bson.objectid.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "mockupdb._bson.objectid.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mockupdb._bson.objectid.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "mockupdb._bson.objectid.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "mockupdb._bson.objectid.string_type": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.string_type"
  },
  "type": "import"
 },
 "mockupdb._bson.objectid.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "mockupdb._bson.objectid.text_type": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.text_type"
  },
  "type": "import"
 },
 "mockupdb._bson.objectid.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "mockupdb._bson.objectid.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mockupdb._bson.objectid.utc": {
  "data": {
   "shadows": "mockupdb._bson.tz_util.utc"
  },
  "type": "import"
 },
 "mockupdb._bson.py3compat": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "exec",
    "int",
    "map",
    "mockupdb._bson.py3compat.PY3",
    "mockupdb._bson.py3compat.sys",
    "str"
   ]
  },
  "type": "module"
 },
 "mockupdb._bson.py3compat.MAXSIZE": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "mockupdb._bson.py3compat.PY3": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mockupdb._bson.py3compat.StringIO": {
  "data": {
   "shadows": "StringIO.StringIO"
  },
  "type": "import"
 },
 "mockupdb._bson.py3compat._unicode": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "mockupdb._bson.py3compat.abc": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "mockupdb._bson.py3compat.b": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "mockupdb._bson.py3compat.bytes_from_hex": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "mockupdb._bson.py3compat.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "mockupdb._bson.py3compat.imap": {
  "data": {
   "shadows": "itertools.imap"
  },
  "type": "import"
 },
 "mockupdb._bson.py3compat.integer_types": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "mockupdb._bson.py3compat.iteritems": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "mockupdb._bson.py3compat.itervalues": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "mockupdb._bson.py3compat.reraise": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "exctype",
    "str"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.py3compat.string_type": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "mockupdb._bson.py3compat.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mockupdb._bson.py3compat.text_type": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "mockupdb._bson.py3compat.thread": {
  "data": {
   "shadows": "thread"
  },
  "type": "import"
 },
 "mockupdb._bson.raw_bson": {
  "data": {
   "symbols_in_volume": [
    "mockupdb._bson.codec_options.DEFAULT_CODEC_OPTIONS.with_options",
    "mockupdb._bson.raw_bson.RawBSONDocument"
   ]
  },
  "type": "module"
 },
 "mockupdb._bson.raw_bson.DEFAULT": {
  "data": {
   "shadows": "mockupdb._bson.codec_options.DEFAULT_CODEC_OPTIONS"
  },
  "type": "import"
 },
 "mockupdb._bson.raw_bson.DEFAULT_RAW_BSON_OPTIONS": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "mockupdb._bson.raw_bson.InvalidBSON": {
  "data": {
   "shadows": "mockupdb._bson.errors.InvalidBSON"
  },
  "type": "import"
 },
 "mockupdb._bson.raw_bson.RawBSONDocument": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "mockupdb._bson.codec_options._RAW_BSON_DOCUMENT_MARKER",
    "mockupdb._bson.py3compat.abc.Mapping"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.raw_bson.RawBSONDocument.__eq__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "mockupdb._bson.raw_bson.RawBSONDocument"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.raw_bson.RawBSONDocument.__getitem__": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "mockupdb._bson.raw_bson.RawBSONDocument.__inflated": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "mockupdb._bson._UNPACK_INT",
    "mockupdb._bson._iterate_elements",
    "mockupdb._bson.errors.InvalidBSON",
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.raw_bson.RawBSONDocument.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "TypeError",
    "mockupdb._bson.raw_bson.RawBSONDocument"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.raw_bson.RawBSONDocument.__iter__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.raw_bson.RawBSONDocument.__len__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.raw_bson.RawBSONDocument.__repr__": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "mockupdb._bson.raw_bson.RawBSONDocument.items": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "mockupdb._bson.py3compat.iteritems"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.raw_bson.RawBSONDocument.raw": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.raw_bson._RAW_BSON_DOCUMENT_MARKER": {
  "data": {
   "shadows": "mockupdb._bson.codec_options._RAW_BSON_DOCUMENT_MARKER"
  },
  "type": "import"
 },
 "mockupdb._bson.raw_bson._UNPACK_INT": {
  "data": {
   "shadows": "mockupdb._bson._UNPACK_INT"
  },
  "type": "import"
 },
 "mockupdb._bson.raw_bson._iterate_elements": {
  "data": {
   "shadows": "mockupdb._bson._iterate_elements"
  },
  "type": "import"
 },
 "mockupdb._bson.raw_bson.abc": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.abc"
  },
  "type": "import"
 },
 "mockupdb._bson.raw_bson.iteritems": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.iteritems"
  },
  "type": "import"
 },
 "mockupdb._bson.regex": {
  "data": {},
  "type": "module"
 },
 "mockupdb._bson.regex.RE_TYPE": {
  "data": {
   "shadows": "mockupdb._bson.son.RE_TYPE"
  },
  "type": "import"
 },
 "mockupdb._bson.regex.Regex": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.regex.Regex.__eq__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "mockupdb._bson.regex.Regex"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.regex.Regex.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "TypeError",
    "bytes",
    "int",
    "isinstance",
    "mockupdb._bson.py3compat.string_type",
    "mockupdb._bson.py3compat.text_type",
    "mockupdb._bson.regex.str_flags_to_int",
    "type"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.regex.Regex.__ne__": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "mockupdb._bson.regex.Regex.__repr__": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "mockupdb._bson.regex.Regex.from_native": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "TypeError",
    "classmethod",
    "isinstance",
    "mockupdb._bson.regex.Regex",
    "mockupdb._bson.son.RE_TYPE",
    "type"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.regex.Regex.try_compile": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "mockupdb._bson.regex.re"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.regex.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mockupdb._bson.regex.str_flags_to_int": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "mockupdb._bson.regex.re"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.regex.string_type": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.string_type"
  },
  "type": "import"
 },
 "mockupdb._bson.regex.text_type": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.text_type"
  },
  "type": "import"
 },
 "mockupdb._bson.son": {
  "data": {
   "symbols_in_volume": [
    "mockupdb._bson.son.re",
    "type"
   ]
  },
  "type": "module"
 },
 "mockupdb._bson.son.RE_TYPE": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mockupdb._bson.son.SON": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.son.SON.__deepcopy__": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "id",
    "isinstance",
    "mockupdb._bson.son.RE_TYPE",
    "mockupdb._bson.son.SON",
    "mockupdb._bson.son.copy"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.__delitem__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "dict.__delitem__"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.__eq__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mockupdb._bson.son.SON"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "dict.__init__"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.__iter__": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.__len__": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.__ne__": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.__new__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "mockupdb._bson.son.SON",
    "super"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.__repr__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.__setitem__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "dict.__setitem__"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.clear": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "mockupdb._bson.son.SON",
    "super"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.copy": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "mockupdb._bson.son.SON"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.get": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.has_key": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.items": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.iteritems": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.iterkeys": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.itervalues": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.keys": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.pop": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "len",
    "repr"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.popitem": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "KeyError",
    "StopIteration",
    "next"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.setdefault": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.to_dict": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "dict",
    "transform_value"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.to_dict.transform_value": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "mockupdb._bson.py3compat.abc.Mapping",
    "mockupdb._bson.py3compat.iteritems",
    "transform_value"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.update": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.values": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "mockupdb._bson.son.abc": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.abc"
  },
  "type": "import"
 },
 "mockupdb._bson.son.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mockupdb._bson.son.iteritems": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.iteritems"
  },
  "type": "import"
 },
 "mockupdb._bson.son.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mockupdb._bson.timestamp": {
  "data": {},
  "type": "module"
 },
 "mockupdb._bson.timestamp.Timestamp": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.timestamp.Timestamp.__eq__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "mockupdb._bson.timestamp.Timestamp"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.timestamp.Timestamp.__ge__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "mockupdb._bson.timestamp.Timestamp"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.timestamp.Timestamp.__gt__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "mockupdb._bson.timestamp.Timestamp"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.timestamp.Timestamp.__hash__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.timestamp.Timestamp.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "mockupdb._bson.py3compat.integer_types",
    "mockupdb._bson.timestamp.UPPERBOUND",
    "mockupdb._bson.timestamp.calendar",
    "mockupdb._bson.timestamp.datetime"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.timestamp.Timestamp.__le__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "mockupdb._bson.timestamp.Timestamp"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.timestamp.Timestamp.__lt__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "mockupdb._bson.timestamp.Timestamp"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.timestamp.Timestamp.__ne__": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "mockupdb._bson.timestamp.Timestamp.__repr__": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "mockupdb._bson.timestamp.Timestamp.as_datetime": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "mockupdb._bson.timestamp.datetime",
    "mockupdb._bson.tz_util.utc"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.timestamp.Timestamp.inc": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.timestamp.Timestamp.time": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.timestamp.UPPERBOUND": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mockupdb._bson.timestamp.calendar": {
  "data": {
   "shadows": "calendar"
  },
  "type": "import"
 },
 "mockupdb._bson.timestamp.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mockupdb._bson.timestamp.integer_types": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.integer_types"
  },
  "type": "import"
 },
 "mockupdb._bson.timestamp.utc": {
  "data": {
   "shadows": "mockupdb._bson.tz_util.utc"
  },
  "type": "import"
 },
 "mockupdb._bson.tz_util": {
  "data": {
   "symbols_in_volume": [
    "datetime.timedelta",
    "mockupdb._bson.tz_util.FixedOffset"
   ]
  },
  "type": "module"
 },
 "mockupdb._bson.tz_util.FixedOffset": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "datetime.tzinfo"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.tz_util.FixedOffset.__getinitargs__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "mockupdb._bson.tz_util.FixedOffset.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.tz_util.FixedOffset.dst": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "mockupdb._bson.tz_util.ZERO"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.tz_util.FixedOffset.tzname": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "mockupdb._bson.tz_util.FixedOffset.utcoffset": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "mockupdb._bson.tz_util.ZERO": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mockupdb._bson.tz_util.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "mockupdb._bson.tz_util.tzinfo": {
  "data": {
   "shadows": "datetime.tzinfo"
  },
  "type": "import"
 },
 "mockupdb._bson.tz_util.utc": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 }
}