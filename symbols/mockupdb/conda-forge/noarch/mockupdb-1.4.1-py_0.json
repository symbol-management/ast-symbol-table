{
 "mockupdb": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "exec",
    "mockupdb.OP_DELETE",
    "mockupdb.OP_GET_MORE",
    "mockupdb.OP_INSERT",
    "mockupdb.OP_KILL_CURSORS",
    "mockupdb.OP_MSG",
    "mockupdb.OP_QUERY",
    "mockupdb.OP_UPDATE",
    "mockupdb.OpDelete",
    "mockupdb.OpGetMore",
    "mockupdb.OpInsert",
    "mockupdb.OpKillCursors",
    "mockupdb.OpMsg",
    "mockupdb.OpQuery",
    "mockupdb.OpUpdate",
    "mockupdb.PY3",
    "mockupdb._bson.codec_options.CodecOptions",
    "mockupdb._global_threads",
    "mockupdb._shut_down",
    "mockupdb.atexit",
    "mockupdb.struct",
    "mockupdb.sys",
    "mockupdb.weakref",
    "ordereddict.OrderedDict",
    "str"
   ]
  },
  "type": "module"
 },
 "mockupdb.CODEC_OPTIONS": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "mockupdb.Command": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "mockupdb.CommandBase",
    "mockupdb.OpQuery"
   ]
  },
  "type": "class"
 },
 "mockupdb.Command._replies": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "make_reply",
    "mockupdb.Command",
    "super"
   ]
  },
  "type": "function"
 },
 "mockupdb.Command.replies_to_gle": {
  "data": {
   "lineno": 787
  },
  "type": "function"
 },
 "mockupdb.CommandBase": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "mockupdb.Request"
   ]
  },
  "type": "class"
 },
 "mockupdb.CommandBase._matches_docs": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "len",
    "list",
    "mockupdb.CommandBase",
    "mockupdb._bson_values_equal",
    "ordereddict.OrderedDict",
    "super"
   ]
  },
  "type": "function"
 },
 "mockupdb.CommandBase.command_name": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "list",
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb.DELETE_FLAGS": {
  "data": {
   "lineno": 264
  },
  "type": "constant"
 },
 "mockupdb.Empty": {
  "data": {
   "shadows": "Queue.Empty"
  },
  "type": "import"
 },
 "mockupdb.Future": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mockupdb.Future.__init__": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "mockupdb.threading"
   ]
  },
  "type": "function"
 },
 "mockupdb.Future.result": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "mockupdb.Future.set_result": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "mockupdb.INSERT_FLAGS": {
  "data": {
   "lineno": 261
  },
  "type": "constant"
 },
 "mockupdb.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "mockupdb.Matcher": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mockupdb.Matcher.__init__": {
  "data": {
   "lineno": 1066,
   "symbols_in_volume": [
    "make_prototype_request"
   ]
  },
  "type": "function"
 },
 "mockupdb.Matcher.__repr__": {
  "data": {
   "lineno": 1100
  },
  "type": "function"
 },
 "mockupdb.Matcher.matches": {
  "data": {
   "lineno": 1070,
   "symbols_in_volume": [
    "dir",
    "getattr",
    "len",
    "make_prototype_request",
    "mockupdb.inspect"
   ]
  },
  "type": "function"
 },
 "mockupdb.Matcher.prototype": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb.MockupDB": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": [
    "next",
    "object"
   ]
  },
  "type": "class"
 },
 "mockupdb.MockupDB.__init__": {
  "data": {
   "lineno": 1198,
   "symbols_in_volume": [
    "mockupdb.CommandBase",
    "mockupdb._PeekableQueue",
    "mockupdb.threading",
    "mockupdb.weakref",
    "ssl"
   ]
  },
  "type": "function"
 },
 "mockupdb.MockupDB.__iter__": {
  "data": {
   "lineno": 1632
  },
  "type": "function"
 },
 "mockupdb.MockupDB.__repr__": {
  "data": {
   "lineno": 1644
  },
  "type": "function"
 },
 "mockupdb.MockupDB._accept_loop": {
  "data": {
   "lineno": 1549,
   "symbols_in_volume": [
    "mockupdb._shutting_down",
    "mockupdb.errno",
    "mockupdb.functools",
    "mockupdb.select",
    "mockupdb.socket",
    "mockupdb.threading"
   ]
  },
  "type": "function"
 },
 "mockupdb.MockupDB._log": {
  "data": {
   "lineno": 1617,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "mockupdb.MockupDB._server_loop": {
  "data": {
   "lineno": 1581,
   "symbols_in_volume": [
    "AssertionError",
    "mock_server_receive_request",
    "mockupdb._shutting_down",
    "mockupdb._synchronized",
    "mockupdb.errno",
    "mockupdb.select",
    "mockupdb.socket",
    "mockupdb.traceback",
    "reversed"
   ]
  },
  "type": "function"
 },
 "mockupdb.MockupDB._unlock": {
  "data": {
   "lineno": 1623,
   "symbols_in_volume": [
    "mockupdb.contextlib"
   ]
  },
  "type": "function"
 },
 "mockupdb.MockupDB.address": {
  "data": {
   "lineno": 1476,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb.MockupDB.address_string": {
  "data": {
   "lineno": 1481,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb.MockupDB.autoresponds": {
  "data": {
   "lineno": 1359,
   "symbols_in_volume": [
    "Queue.Empty",
    "mockupdb._AutoResponder",
    "mockupdb._synchronized"
   ]
  },
  "type": "function"
 },
 "mockupdb.MockupDB.cancel_responder": {
  "data": {
   "lineno": 1471,
   "symbols_in_volume": [
    "mockupdb._synchronized"
   ]
  },
  "type": "function"
 },
 "mockupdb.MockupDB.command_err": {
  "data": {
   "lineno": 1348
  },
  "type": "function"
 },
 "mockupdb.MockupDB.fail": {
  "data": {
   "lineno": 1344
  },
  "type": "function"
 },
 "mockupdb.MockupDB.got": {
  "data": {
   "lineno": 1299,
   "symbols_in_volume": [
    "Queue.Empty",
    "make_matcher",
    "mockupdb.time"
   ]
  },
  "type": "function"
 },
 "mockupdb.MockupDB.hangup": {
  "data": {
   "lineno": 1352
  },
  "type": "function"
 },
 "mockupdb.MockupDB.host": {
  "data": {
   "lineno": 1486,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb.MockupDB.label": {
  "data": {
   "lineno": 1519
  },
  "type": "function"
 },
 "mockupdb.MockupDB.next": {
  "data": {
   "lineno": 1635,
   "symbols_in_volume": [
    "StopIteration"
   ]
  },
  "type": "function"
 },
 "mockupdb.MockupDB.port": {
  "data": {
   "lineno": 1491,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb.MockupDB.receives": {
  "data": {
   "lineno": 1269,
   "symbols_in_volume": [
    "AssertionError",
    "Queue.Empty",
    "mockupdb.Matcher",
    "mockupdb.time"
   ]
  },
  "type": "function"
 },
 "mockupdb.MockupDB.replies": {
  "data": {
   "lineno": 1337
  },
  "type": "function"
 },
 "mockupdb.MockupDB.request": {
  "data": {
   "lineno": 1531,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb.MockupDB.requests_count": {
  "data": {
   "lineno": 1523,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb.MockupDB.run": {
  "data": {
   "lineno": 1232,
   "symbols_in_volume": [
    "bind_socket",
    "mockupdb._synchronized",
    "mockupdb.os",
    "mockupdb.threading",
    "ssl.wrap_socket"
   ]
  },
  "type": "function"
 },
 "mockupdb.MockupDB.running": {
  "data": {
   "lineno": 1543,
   "symbols_in_volume": [
    "mockupdb._synchronized",
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb.MockupDB.stop": {
  "data": {
   "lineno": 1247,
   "symbols_in_volume": [
    "list",
    "mockupdb._synchronized",
    "mockupdb.socket"
   ]
  },
  "type": "function"
 },
 "mockupdb.MockupDB.uri": {
  "data": {
   "lineno": 1496,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb.MockupDB.verbose": {
  "data": {
   "lineno": 1508,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "mockupdb.OPCODES": {
  "data": {
   "lineno": 1672
  },
  "type": "constant"
 },
 "mockupdb.OP_DELETE": {
  "data": {
   "lineno": 244
  },
  "type": "constant"
 },
 "mockupdb.OP_GET_MORE": {
  "data": {
   "lineno": 243
  },
  "type": "constant"
 },
 "mockupdb.OP_INSERT": {
  "data": {
   "lineno": 241
  },
  "type": "constant"
 },
 "mockupdb.OP_KILL_CURSORS": {
  "data": {
   "lineno": 245
  },
  "type": "constant"
 },
 "mockupdb.OP_MSG": {
  "data": {
   "lineno": 246
  },
  "type": "constant"
 },
 "mockupdb.OP_MSG_FLAGS": {
  "data": {
   "lineno": 271
  },
  "type": "constant"
 },
 "mockupdb.OP_QUERY": {
  "data": {
   "lineno": 242
  },
  "type": "constant"
 },
 "mockupdb.OP_REPLY": {
  "data": {
   "lineno": 239
  },
  "type": "constant"
 },
 "mockupdb.OP_UPDATE": {
  "data": {
   "lineno": 240
  },
  "type": "constant"
 },
 "mockupdb.OpDelete": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": [
    "mockupdb.DELETE_FLAGS",
    "mockupdb.OP_DELETE",
    "mockupdb._LegacyWrite"
   ]
  },
  "type": "class"
 },
 "mockupdb.OpDelete.unpack": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "mockupdb.CODEC_OPTIONS",
    "mockupdb._UNPACK_INT",
    "mockupdb._bson.decode_all",
    "mockupdb._get_c_string"
   ]
  },
  "type": "function"
 },
 "mockupdb.OpGetMore": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "mockupdb.Request"
   ]
  },
  "type": "class"
 },
 "mockupdb.OpGetMore.__init__": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "mockupdb.OpGetMore",
    "super"
   ]
  },
  "type": "function"
 },
 "mockupdb.OpGetMore.cursor_id": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb.OpGetMore.num_to_return": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb.OpGetMore.unpack": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "classmethod",
    "mockupdb.OpGetMore",
    "mockupdb._UNPACK_INT",
    "mockupdb._UNPACK_LONG",
    "mockupdb._get_c_string"
   ]
  },
  "type": "function"
 },
 "mockupdb.OpInsert": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "mockupdb.INSERT_FLAGS",
    "mockupdb.OP_INSERT",
    "mockupdb._LegacyWrite"
   ]
  },
  "type": "class"
 },
 "mockupdb.OpInsert.unpack": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "mockupdb.CODEC_OPTIONS",
    "mockupdb._UNPACK_INT",
    "mockupdb._bson.decode_all",
    "mockupdb._get_c_string"
   ]
  },
  "type": "function"
 },
 "mockupdb.OpKillCursors": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "mockupdb.Request"
   ]
  },
  "type": "class"
 },
 "mockupdb.OpKillCursors.__init__": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "mockupdb.OpKillCursors",
    "super"
   ]
  },
  "type": "function"
 },
 "mockupdb.OpKillCursors.__repr__": {
  "data": {
   "lineno": 861
  },
  "type": "function"
 },
 "mockupdb.OpKillCursors.cursor_ids": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb.OpKillCursors.unpack": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "classmethod",
    "mockupdb.OpKillCursors",
    "mockupdb._UNPACK_INT",
    "range"
   ]
  },
  "type": "function"
 },
 "mockupdb.OpMsg": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "mockupdb.CommandBase",
    "mockupdb.OP_MSG",
    "mockupdb.OP_MSG_FLAGS"
   ]
  },
  "type": "class"
 },
 "mockupdb.OpMsg.__init__": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mockupdb.OpMsg",
    "raise_args_err",
    "super"
   ]
  },
  "type": "function"
 },
 "mockupdb.OpMsg._replies": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "make_op_msg_reply",
    "mockupdb.OP_MSG_FLAGS",
    "mockupdb.OpMsg",
    "super"
   ]
  },
  "type": "function"
 },
 "mockupdb.OpMsg.command_name": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "list",
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb.OpMsg.slave_ok": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb.OpMsg.unpack": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "len",
    "mockupdb.CODEC_OPTIONS",
    "mockupdb.OpMsg",
    "mockupdb._UNPACK_BYTE",
    "mockupdb._UNPACK_INT",
    "mockupdb._UNPACK_UINT",
    "mockupdb._bson.decode_all",
    "mockupdb._get_c_string"
   ]
  },
  "type": "function"
 },
 "mockupdb.OpMsgReply": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": [
    "mockupdb.Reply"
   ]
  },
  "type": "class"
 },
 "mockupdb.OpMsgReply.__init__": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "len",
    "mockupdb.OpMsgReply",
    "super"
   ]
  },
  "type": "function"
 },
 "mockupdb.OpMsgReply.__repr__": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "mockupdb.OP_MSG_FLAGS"
   ]
  },
  "type": "function"
 },
 "mockupdb.OpMsgReply.docs": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "len",
    "make_docs"
   ]
  },
  "type": "function"
 },
 "mockupdb.OpMsgReply.reply_bytes": {
  "data": {
   "lineno": 1030,
   "symbols_in_volume": [
    "len",
    "mockupdb.OP_MSG",
    "mockupdb._bson.BSON.encode",
    "mockupdb.random",
    "mockupdb.struct"
   ]
  },
  "type": "function"
 },
 "mockupdb.OpMsgReply.update": {
  "data": {
   "lineno": 1019
  },
  "type": "function"
 },
 "mockupdb.OpQuery": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "mockupdb.OP_QUERY",
    "mockupdb.QUERY_FLAGS",
    "mockupdb.Request"
   ]
  },
  "type": "class"
 },
 "mockupdb.OpQuery.__init__": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "ValueError",
    "collections.Mapping",
    "isinstance",
    "len",
    "mockupdb.OpQuery",
    "raise_args_err",
    "super"
   ]
  },
  "type": "function"
 },
 "mockupdb.OpQuery.__repr__": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "docs_repr",
    "mockupdb.OpQuery",
    "super"
   ]
  },
  "type": "function"
 },
 "mockupdb.OpQuery.fields": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb.OpQuery.num_to_return": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb.OpQuery.num_to_skip": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb.OpQuery.unpack": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "Command",
    "classmethod",
    "len",
    "mockupdb.CODEC_OPTIONS",
    "mockupdb.OpQuery",
    "mockupdb._UNPACK_INT",
    "mockupdb._bson.decode_all",
    "mockupdb._get_c_string"
   ]
  },
  "type": "function"
 },
 "mockupdb.OpReply": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "mockupdb.Reply"
   ]
  },
  "type": "class"
 },
 "mockupdb.OpReply.__init__": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": [
    "mockupdb.OpReply",
    "super"
   ]
  },
  "type": "function"
 },
 "mockupdb.OpReply.docs": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "make_docs"
   ]
  },
  "type": "function"
 },
 "mockupdb.OpReply.reply_bytes": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "len",
    "mockupdb.OP_REPLY",
    "mockupdb._bson.BSON.encode",
    "mockupdb.random",
    "mockupdb.struct"
   ]
  },
  "type": "function"
 },
 "mockupdb.OpReply.update": {
  "data": {
   "lineno": 973
  },
  "type": "function"
 },
 "mockupdb.OpUpdate": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "mockupdb.OP_UPDATE",
    "mockupdb.UPDATE_FLAGS",
    "mockupdb._LegacyWrite"
   ]
  },
  "type": "class"
 },
 "mockupdb.OpUpdate.unpack": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "mockupdb.CODEC_OPTIONS",
    "mockupdb._UNPACK_INT",
    "mockupdb._bson.decode_all",
    "mockupdb._get_c_string"
   ]
  },
  "type": "function"
 },
 "mockupdb.OrderedDict": {
  "data": {
   "shadows": "ordereddict.OrderedDict"
  },
  "type": "import"
 },
 "mockupdb.PY3": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "mockupdb.QUERY_FLAGS": {
  "data": {
   "lineno": 248
  },
  "type": "constant"
 },
 "mockupdb.Queue": {
  "data": {
   "shadows": "Queue.Queue"
  },
  "type": "import"
 },
 "mockupdb.REPLY_FLAGS": {
  "data": {
   "lineno": 267
  },
  "type": "constant"
 },
 "mockupdb.Reply": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mockupdb.Reply.__init__": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "make_docs"
   ]
  },
  "type": "function"
 },
 "mockupdb.Reply.__repr__": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "mockupdb.REPLY_FLAGS"
   ]
  },
  "type": "function"
 },
 "mockupdb.Reply.__str__": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "docs_repr"
   ]
  },
  "type": "function"
 },
 "mockupdb.Reply.doc": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb.Request": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mockupdb.Request.__contains__": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mockupdb.string_type",
    "mockupdb.text_type"
   ]
  },
  "type": "function"
 },
 "mockupdb.Request.__getitem__": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mockupdb.Request.__init__": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "all",
    "collections.Mapping",
    "isinstance",
    "make_docs",
    "raise_args_err"
   ]
  },
  "type": "function"
 },
 "mockupdb.Request.__repr__": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "docs_repr",
    "str"
   ]
  },
  "type": "function"
 },
 "mockupdb.Request.__str__": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "docs_repr"
   ]
  },
  "type": "function"
 },
 "mockupdb.Request._matches_docs": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "isinstance",
    "list",
    "mockupdb._bson.SON",
    "mockupdb._bson_values_equal",
    "ordereddict.OrderedDict",
    "seq_match"
   ]
  },
  "type": "function"
 },
 "mockupdb.Request._replies": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "make_reply"
   ]
  },
  "type": "function"
 },
 "mockupdb.Request.assert_matches": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "AssertionError",
    "make_matcher"
   ]
  },
  "type": "function"
 },
 "mockupdb.Request.client_port": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb.Request.command_err": {
  "data": {
   "lineno": 481
  },
  "type": "function"
 },
 "mockupdb.Request.doc": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb.Request.docs": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb.Request.fail": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "mockupdb.REPLY_FLAGS"
   ]
  },
  "type": "function"
 },
 "mockupdb.Request.flags": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb.Request.hangup": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "mockupdb.socket"
   ]
  },
  "type": "function"
 },
 "mockupdb.Request.matches": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "make_matcher"
   ]
  },
  "type": "function"
 },
 "mockupdb.Request.namespace": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb.Request.replies": {
  "data": {
   "lineno": 456
  },
  "type": "function"
 },
 "mockupdb.Request.request_id": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb.Request.server": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb.Request.slave_ok": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "bool",
    "mockupdb.QUERY_FLAGS",
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb.StringIO": {
  "data": {
   "shadows": "cStringIO.StringIO"
  },
  "type": "import"
 },
 "mockupdb.UPDATE_FLAGS": {
  "data": {
   "lineno": 257
  },
  "type": "constant"
 },
 "mockupdb._AutoResponder": {
  "data": {
   "lineno": 1114,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mockupdb._AutoResponder.__init__": {
  "data": {
   "lineno": 1115,
   "symbols_in_volume": [
    "callable",
    "make_matcher",
    "mockupdb.Matcher",
    "mockupdb.inspect",
    "raise_args_err"
   ]
  },
  "type": "function"
 },
 "mockupdb._AutoResponder.__repr__": {
  "data": {
   "lineno": 1153
  },
  "type": "function"
 },
 "mockupdb._AutoResponder.cancel": {
  "data": {
   "lineno": 1149
  },
  "type": "function"
 },
 "mockupdb._AutoResponder.handle": {
  "data": {
   "lineno": 1137
  },
  "type": "function"
 },
 "mockupdb._LegacyWrite": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "mockupdb.Request"
   ]
  },
  "type": "class"
 },
 "mockupdb._PeekableQueue": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "Queue.Queue",
    "object"
   ]
  },
  "type": "class"
 },
 "mockupdb._PeekableQueue.__init__": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "Queue.Queue.__init__",
    "mockupdb._PeekableQueue"
   ]
  },
  "type": "function"
 },
 "mockupdb._PeekableQueue.get": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "Queue.Queue.get",
    "mockupdb._PeekableQueue"
   ]
  },
  "type": "function"
 },
 "mockupdb._PeekableQueue.peek": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "mockupdb._PeekableQueue"
   ]
  },
  "type": "function"
 },
 "mockupdb._UNPACK_BYTE": {
  "data": {
   "lineno": 275
  },
  "type": "constant"
 },
 "mockupdb._UNPACK_INT": {
  "data": {
   "lineno": 276
  },
  "type": "constant"
 },
 "mockupdb._UNPACK_LONG": {
  "data": {
   "lineno": 278
  },
  "type": "constant"
 },
 "mockupdb._UNPACK_UINT": {
  "data": {
   "lineno": 277
  },
  "type": "constant"
 },
 "mockupdb.__all__": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "mockupdb.__author__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mockupdb.__email__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mockupdb.__main__": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mockupdb.__main__.main"
   ]
  },
  "type": "module"
 },
 "mockupdb.__main__.OptionParser": {
  "data": {
   "shadows": "optparse.OptionParser"
  },
  "type": "import"
 },
 "mockupdb.__main__.interactive_server": {
  "data": {
   "shadows": "mockupdb.interactive_server"
  },
  "type": "import"
 },
 "mockupdb.__main__.main": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "mockupdb.__main__.time",
    "mockupdb.interactive_server",
    "optparse.OptionParser",
    "print"
   ]
  },
  "type": "function"
 },
 "mockupdb.__main__.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mockupdb.__version__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mockupdb._bson": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "TypeError",
    "bool",
    "bytes",
    "dict",
    "float",
    "int",
    "list",
    "mockupdb._bson.BSONARR",
    "mockupdb._bson.BSONBIN",
    "mockupdb._bson.BSONBOO",
    "mockupdb._bson.BSONCOD",
    "mockupdb._bson.BSONCWS",
    "mockupdb._bson.BSONDAT",
    "mockupdb._bson.BSONDEC",
    "mockupdb._bson.BSONINT",
    "mockupdb._bson.BSONLON",
    "mockupdb._bson.BSONMAX",
    "mockupdb._bson.BSONMIN",
    "mockupdb._bson.BSONNUL",
    "mockupdb._bson.BSONNUM",
    "mockupdb._bson.BSONOBJ",
    "mockupdb._bson.BSONOID",
    "mockupdb._bson.BSONREF",
    "mockupdb._bson.BSONRGX",
    "mockupdb._bson.BSONSTR",
    "mockupdb._bson.BSONSYM",
    "mockupdb._bson.BSONTIM",
    "mockupdb._bson.BSONUND",
    "mockupdb._bson._ENCODERS",
    "mockupdb._bson._USE_C",
    "mockupdb._bson._cbson._bson_to_dict",
    "mockupdb._bson._cbson._dict_to_bson",
    "mockupdb._bson._cbson._element_to_dict",
    "mockupdb._bson._cbson.decode_all",
    "mockupdb._bson._encode_binary",
    "mockupdb._bson._encode_bool",
    "mockupdb._bson._encode_bytes",
    "mockupdb._bson._encode_code",
    "mockupdb._bson._encode_datetime",
    "mockupdb._bson._encode_dbref",
    "mockupdb._bson._encode_decimal128",
    "mockupdb._bson._encode_float",
    "mockupdb._bson._encode_int",
    "mockupdb._bson._encode_list",
    "mockupdb._bson._encode_long",
    "mockupdb._bson._encode_mapping",
    "mockupdb._bson._encode_maxkey",
    "mockupdb._bson._encode_minkey",
    "mockupdb._bson._encode_none",
    "mockupdb._bson._encode_objectid",
    "mockupdb._bson._encode_regex",
    "mockupdb._bson._encode_text",
    "mockupdb._bson._encode_timestamp",
    "mockupdb._bson._encode_uuid",
    "mockupdb._bson._get_array",
    "mockupdb._bson._get_binary",
    "mockupdb._bson._get_boolean",
    "mockupdb._bson._get_code",
    "mockupdb._bson._get_code_w_scope",
    "mockupdb._bson._get_date",
    "mockupdb._bson._get_decimal128",
    "mockupdb._bson._get_float",
    "mockupdb._bson._get_int",
    "mockupdb._bson._get_int64",
    "mockupdb._bson._get_object",
    "mockupdb._bson._get_oid",
    "mockupdb._bson._get_ref",
    "mockupdb._bson._get_regex",
    "mockupdb._bson._get_string",
    "mockupdb._bson._get_timestamp",
    "mockupdb._bson._make_c_string_check",
    "mockupdb._bson.binary.Binary",
    "mockupdb._bson.binary.UUIDLegacy",
    "mockupdb._bson.code.Code",
    "mockupdb._bson.datetime",
    "mockupdb._bson.dbref.DBRef",
    "mockupdb._bson.decimal128.Decimal128",
    "mockupdb._bson.int64.Int64",
    "mockupdb._bson.max_key.MaxKey",
    "mockupdb._bson.min_key.MinKey",
    "mockupdb._bson.objectid.ObjectId",
    "mockupdb._bson.py3compat.PY3",
    "mockupdb._bson.py3compat.abc.Mapping",
    "mockupdb._bson.py3compat.b",
    "mockupdb._bson.py3compat.text_type",
    "mockupdb._bson.regex.Regex",
    "mockupdb._bson.son.RE_TYPE",
    "mockupdb._bson.son.SON",
    "mockupdb._bson.struct",
    "mockupdb._bson.timestamp.Timestamp",
    "mockupdb._bson.tz_util.utc",
    "mockupdb._bson.uuid",
    "range",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "module"
 },
 "mockupdb._bson.BSON": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.BSON.decode": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "isinstance",
    "mockupdb._bson._CODEC_OPTIONS_TYPE_ERROR",
    "mockupdb._bson._bson_to_dict",
    "mockupdb._bson.codec_options.CodecOptions",
    "mockupdb._bson.codec_options.DEFAULT_CODEC_OPTIONS"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.BSON.encode": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "isinstance",
    "mockupdb._bson._CODEC_OPTIONS_TYPE_ERROR",
    "mockupdb._bson._dict_to_bson",
    "mockupdb._bson.codec_options.CodecOptions",
    "mockupdb._bson.codec_options.DEFAULT_CODEC_OPTIONS"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.BSONARR": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "mockupdb._bson.BSONBIN": {
  "data": {
   "lineno": 121
  },
  "type": "constant"
 },
 "mockupdb._bson.BSONBOO": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "mockupdb._bson.BSONCOD": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "mockupdb._bson.BSONCWS": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "mockupdb._bson.BSONDAT": {
  "data": {
   "lineno": 125
  },
  "type": "constant"
 },
 "mockupdb._bson.BSONDEC": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "mockupdb._bson.BSONINT": {
  "data": {
   "lineno": 132
  },
  "type": "constant"
 },
 "mockupdb._bson.BSONLON": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "mockupdb._bson.BSONMAX": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "mockupdb._bson.BSONMIN": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "mockupdb._bson.BSONNUL": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "mockupdb._bson.BSONNUM": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "mockupdb._bson.BSONOBJ": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "mockupdb._bson.BSONOID": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "mockupdb._bson.BSONREF": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "mockupdb._bson.BSONRGX": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "mockupdb._bson.BSONSTR": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "mockupdb._bson.BSONSYM": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "mockupdb._bson.BSONTIM": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "mockupdb._bson.BSONUND": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "mockupdb._bson.Binary": {
  "data": {
   "shadows": "mockupdb._bson.binary.Binary"
  },
  "type": "import"
 },
 "mockupdb._bson.CSHARP_LEGACY": {
  "data": {
   "shadows": "mockupdb._bson.binary.CSHARP_LEGACY"
  },
  "type": "import"
 },
 "mockupdb._bson.Code": {
  "data": {
   "shadows": "mockupdb._bson.code.Code"
  },
  "type": "import"
 },
 "mockupdb._bson.CodecOptions": {
  "data": {
   "shadows": "mockupdb._bson.codec_options.CodecOptions"
  },
  "type": "import"
 },
 "mockupdb._bson.DBRef": {
  "data": {
   "shadows": "mockupdb._bson.dbref.DBRef"
  },
  "type": "import"
 },
 "mockupdb._bson.DEFAULT_CODEC_OPTIONS": {
  "data": {
   "shadows": "mockupdb._bson.codec_options.DEFAULT_CODEC_OPTIONS"
  },
  "type": "import"
 },
 "mockupdb._bson.Decimal128": {
  "data": {
   "shadows": "mockupdb._bson.decimal128.Decimal128"
  },
  "type": "import"
 },
 "mockupdb._bson.EPOCH_AWARE": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "mockupdb._bson.EPOCH_NAIVE": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "mockupdb._bson.Int64": {
  "data": {
   "shadows": "mockupdb._bson.int64.Int64"
  },
  "type": "import"
 },
 "mockupdb._bson.InvalidBSON": {
  "data": {
   "shadows": "mockupdb._bson.errors.InvalidBSON"
  },
  "type": "import"
 },
 "mockupdb._bson.InvalidDocument": {
  "data": {
   "shadows": "mockupdb._bson.errors.InvalidDocument"
  },
  "type": "import"
 },
 "mockupdb._bson.InvalidStringData": {
  "data": {
   "shadows": "mockupdb._bson.errors.InvalidStringData"
  },
  "type": "import"
 },
 "mockupdb._bson.JAVA_LEGACY": {
  "data": {
   "shadows": "mockupdb._bson.binary.JAVA_LEGACY"
  },
  "type": "import"
 },
 "mockupdb._bson.MaxKey": {
  "data": {
   "shadows": "mockupdb._bson.max_key.MaxKey"
  },
  "type": "import"
 },
 "mockupdb._bson.MinKey": {
  "data": {
   "shadows": "mockupdb._bson.min_key.MinKey"
  },
  "type": "import"
 },
 "mockupdb._bson.OLD_UUID_SUBTYPE": {
  "data": {
   "shadows": "mockupdb._bson.binary.OLD_UUID_SUBTYPE"
  },
  "type": "import"
 },
 "mockupdb._bson.ObjectId": {
  "data": {
   "shadows": "mockupdb._bson.objectid.ObjectId"
  },
  "type": "import"
 },
 "mockupdb._bson.PY3": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.PY3"
  },
  "type": "import"
 },
 "mockupdb._bson.RE_TYPE": {
  "data": {
   "shadows": "mockupdb._bson.son.RE_TYPE"
  },
  "type": "import"
 },
 "mockupdb._bson.Regex": {
  "data": {
   "shadows": "mockupdb._bson.regex.Regex"
  },
  "type": "import"
 },
 "mockupdb._bson.SON": {
  "data": {
   "shadows": "mockupdb._bson.son.SON"
  },
  "type": "import"
 },
 "mockupdb._bson.Timestamp": {
  "data": {
   "shadows": "mockupdb._bson.timestamp.Timestamp"
  },
  "type": "import"
 },
 "mockupdb._bson.UUIDLegacy": {
  "data": {
   "shadows": "mockupdb._bson.binary.UUIDLegacy"
  },
  "type": "import"
 },
 "mockupdb._bson._CODEC_OPTIONS_TYPE_ERROR": {
  "data": {
   "lineno": 843
  },
  "type": "constant"
 },
 "mockupdb._bson._ELEMENT_GETTER": {
  "data": {
   "lineno": 356
  },
  "type": "constant"
 },
 "mockupdb._bson._ENCODERS": {
  "data": {
   "lineno": 702
  },
  "type": "constant"
 },
 "mockupdb._bson._LIST_NAMES": {
  "data": {
   "lineno": 443
  },
  "type": "constant"
 },
 "mockupdb._bson._MARKERS": {
  "data": {
   "lineno": 733
  },
  "type": "constant"
 },
 "mockupdb._bson._PACK_FLOAT": {
  "data": {
   "lineno": 438
  },
  "type": "constant"
 },
 "mockupdb._bson._PACK_INT": {
  "data": {
   "lineno": 439
  },
  "type": "constant"
 },
 "mockupdb._bson._PACK_LENGTH_SUBTYPE": {
  "data": {
   "lineno": 440
  },
  "type": "constant"
 },
 "mockupdb._bson._PACK_LONG": {
  "data": {
   "lineno": 441
  },
  "type": "constant"
 },
 "mockupdb._bson._PACK_TIMESTAMP": {
  "data": {
   "lineno": 442
  },
  "type": "constant"
 },
 "mockupdb._bson._UNPACK_FLOAT": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "mockupdb._bson._UNPACK_INT": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "mockupdb._bson._UNPACK_LENGTH_SUBTYPE": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "mockupdb._bson._UNPACK_LONG": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "mockupdb._bson._UNPACK_TIMESTAMP": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "mockupdb._bson._USE_C": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "mockupdb._bson._bson_to_dict": {
  "data": {
   "lineno": 435
  },
  "type": "constant"
 },
 "mockupdb._bson._cbson": {
  "data": {
   "shadows": "mockupdb._bson._cbson"
  },
  "type": "import"
 },
 "mockupdb._bson._datetime_to_millis": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "int",
    "mockupdb._bson.calendar"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._dict_to_bson": {
  "data": {
   "lineno": 816
  },
  "type": "constant"
 },
 "mockupdb._bson._element_to_bson": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "isinstance",
    "mockupdb._bson._make_name",
    "mockupdb._bson._name_value_to_bson",
    "mockupdb._bson.errors.InvalidDocument",
    "mockupdb._bson.py3compat.string_type"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._element_to_dict": {
  "data": {
   "lineno": 393
  },
  "type": "constant"
 },
 "mockupdb._bson._elements_to_dict": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "mockupdb._bson._iterate_elements",
    "mockupdb._bson.errors.InvalidBSON"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._encode_binary": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "len",
    "mockupdb._bson._PACK_INT",
    "mockupdb._bson._PACK_LENGTH_SUBTYPE"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._encode_bool": {
  "data": {
   "lineno": 604
  },
  "type": "function"
 },
 "mockupdb._bson._encode_bytes": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "UnicodeError",
    "codecs.utf_8_decode",
    "len",
    "mockupdb._bson._PACK_INT",
    "mockupdb._bson.errors.InvalidStringData"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._encode_code": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "_dict_to_bson",
    "len",
    "mockupdb._bson._PACK_INT",
    "mockupdb._bson._make_c_string"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._encode_datetime": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "_datetime_to_millis",
    "mockupdb._bson._PACK_LONG"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._encode_dbref": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "_element_to_bson",
    "_name_value_to_bson",
    "bytearray",
    "bytes",
    "len",
    "mockupdb._bson._PACK_INT",
    "mockupdb._bson.py3compat.iteritems"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._encode_decimal128": {
  "data": {
   "lineno": 682
  },
  "type": "function"
 },
 "mockupdb._bson._encode_float": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "mockupdb._bson._PACK_FLOAT"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._encode_int": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "OverflowError",
    "mockupdb._bson._PACK_INT",
    "mockupdb._bson._PACK_LONG",
    "mockupdb._bson.struct"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._encode_list": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "_name_value_to_bson",
    "len",
    "mockupdb._bson._PACK_INT",
    "mockupdb._bson.gen_list_name",
    "next"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._encode_long": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "OverflowError",
    "mockupdb._bson._PACK_LONG",
    "mockupdb._bson.struct"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._encode_mapping": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "_element_to_bson",
    "len",
    "mockupdb._bson._PACK_INT",
    "mockupdb._bson.codec_options._raw_document_class",
    "mockupdb._bson.py3compat.iteritems"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._encode_maxkey": {
  "data": {
   "lineno": 692
  },
  "type": "function"
 },
 "mockupdb._bson._encode_minkey": {
  "data": {
   "lineno": 687
  },
  "type": "function"
 },
 "mockupdb._bson._encode_none": {
  "data": {
   "lineno": 615
  },
  "type": "function"
 },
 "mockupdb._bson._encode_objectid": {
  "data": {
   "lineno": 599
  },
  "type": "function"
 },
 "mockupdb._bson._encode_regex": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "mockupdb._bson._make_c_string_check",
    "mockupdb._bson.re"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._encode_text": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "codecs.utf_8_encode",
    "len",
    "mockupdb._bson._PACK_INT"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._encode_timestamp": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "mockupdb._bson._PACK_TIMESTAMP"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._encode_uuid": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "mockupdb._bson.binary.CSHARP_LEGACY",
    "mockupdb._bson.binary.JAVA_LEGACY",
    "mockupdb._bson.binary.OLD_UUID_SUBTYPE"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._get_array": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "KeyError",
    "append",
    "index",
    "mockupdb._bson._UNPACK_INT",
    "mockupdb._bson._raise_unknown_type",
    "mockupdb._bson.errors.InvalidBSON"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._get_binary": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "mockupdb._bson._UNPACK_INT",
    "mockupdb._bson._UNPACK_LENGTH_SUBTYPE",
    "mockupdb._bson.binary.Binary",
    "mockupdb._bson.binary.CSHARP_LEGACY",
    "mockupdb._bson.binary.JAVA_LEGACY",
    "mockupdb._bson.errors.InvalidBSON",
    "mockupdb._bson.py3compat.PY3",
    "mockupdb._bson.uuid"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._get_boolean": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "mockupdb._bson.errors.InvalidBSON"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._get_c_string": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "codecs.utf_8_decode"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._get_code": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "mockupdb._bson._get_string",
    "mockupdb._bson.code.Code"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._get_code_w_scope": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "mockupdb._bson._UNPACK_INT",
    "mockupdb._bson._get_object",
    "mockupdb._bson._get_string",
    "mockupdb._bson.code.Code",
    "mockupdb._bson.errors.InvalidBSON"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._get_date": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "_millis_to_datetime",
    "mockupdb._bson._UNPACK_LONG"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._get_decimal128": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "mockupdb._bson.decimal128.Decimal128.from_bid"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._get_float": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "mockupdb._bson._UNPACK_FLOAT"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._get_int": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "mockupdb._bson._UNPACK_INT"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._get_int64": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "mockupdb._bson._UNPACK_LONG",
    "mockupdb._bson.int64.Int64"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._get_object": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "_elements_to_dict",
    "mockupdb._bson._UNPACK_INT",
    "mockupdb._bson.codec_options._raw_document_class",
    "mockupdb._bson.dbref.DBRef",
    "mockupdb._bson.errors.InvalidBSON"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._get_oid": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "mockupdb._bson.objectid.ObjectId"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._get_ref": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "mockupdb._bson._get_oid",
    "mockupdb._bson._get_string",
    "mockupdb._bson.dbref.DBRef"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._get_regex": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "mockupdb._bson._get_c_string",
    "mockupdb._bson.regex.Regex"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._get_string": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "codecs.utf_8_decode",
    "mockupdb._bson._UNPACK_INT",
    "mockupdb._bson.errors.InvalidBSON"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._get_timestamp": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "mockupdb._bson._UNPACK_TIMESTAMP",
    "mockupdb._bson.timestamp.Timestamp"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._iterate_elements": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "mockupdb._bson._element_to_dict"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._make_c_string": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "UnicodeError",
    "bytes",
    "codecs.utf_8_decode",
    "codecs.utf_8_encode",
    "isinstance",
    "mockupdb._bson.errors.InvalidStringData"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._make_c_string_check": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "UnicodeError",
    "bytes",
    "codecs.utf_8_decode",
    "codecs.utf_8_encode",
    "isinstance",
    "mockupdb._bson.errors.InvalidDocument",
    "mockupdb._bson.errors.InvalidStringData"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._make_name": {
  "data": {
   "lineno": 503
  },
  "type": "constant"
 },
 "mockupdb._bson._millis_to_datetime": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "mockupdb._bson.EPOCH_AWARE",
    "mockupdb._bson.EPOCH_NAIVE",
    "mockupdb._bson.datetime"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._name_value_to_bson": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "KeyError",
    "func",
    "getattr",
    "int",
    "isinstance",
    "mockupdb._bson._ENCODERS",
    "mockupdb._bson._MARKERS",
    "mockupdb._bson.errors.InvalidDocument",
    "type"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._raise_unknown_type": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "mockupdb._bson.errors.InvalidBSON"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson._raw_document_class": {
  "data": {
   "shadows": "mockupdb._bson.codec_options._raw_document_class"
  },
  "type": "import"
 },
 "mockupdb._bson._utf_8_decode": {
  "data": {
   "shadows": "codecs.utf_8_decode"
  },
  "type": "import"
 },
 "mockupdb._bson._utf_8_encode": {
  "data": {
   "shadows": "codecs.utf_8_encode"
  },
  "type": "import"
 },
 "mockupdb._bson.abc": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.abc"
  },
  "type": "import"
 },
 "mockupdb._bson.b": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.b"
  },
  "type": "import"
 },
 "mockupdb._bson.binary": {
  "data": {
   "symbols_in_volume": [
    "mockupdb._bson.binary.CSHARP_LEGACY",
    "mockupdb._bson.binary.JAVA_LEGACY",
    "mockupdb._bson.binary.OLD_UUID_SUBTYPE",
    "mockupdb._bson.binary.PYTHON_LEGACY",
    "mockupdb._bson.binary.STANDARD",
    "mockupdb._bson.binary.UUID_SUBTYPE"
   ]
  },
  "type": "module"
 },
 "mockupdb._bson.binary.ALL_UUID_REPRESENTATIONS": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "mockupdb._bson.binary.ALL_UUID_SUBTYPES": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "mockupdb._bson.binary.BINARY_SUBTYPE": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mockupdb._bson.binary.Binary": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.binary.Binary.__eq__": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "mockupdb._bson.binary.Binary"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.binary.Binary.__getnewargs__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "mockupdb._bson.binary.Binary",
    "mockupdb._bson.py3compat.PY3",
    "super"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.binary.Binary.__hash__": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "hash",
    "mockupdb._bson.binary.Binary",
    "super"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.binary.Binary.__ne__": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "mockupdb._bson.binary.Binary.__new__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bytes",
    "bytes.__new__",
    "int",
    "isinstance",
    "mockupdb._bson.binary.BINARY_SUBTYPE"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.binary.Binary.__repr__": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "bytes.__repr__"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.binary.Binary.subtype": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.binary.CSHARP_LEGACY": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "mockupdb._bson.binary.FUNCTION_SUBTYPE": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mockupdb._bson.binary.JAVA_LEGACY": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "mockupdb._bson.binary.MD5_SUBTYPE": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "mockupdb._bson.binary.OLD_BINARY_SUBTYPE": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mockupdb._bson.binary.OLD_UUID_SUBTYPE": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mockupdb._bson.binary.PY3": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.PY3"
  },
  "type": "import"
 },
 "mockupdb._bson.binary.PYTHON_LEGACY": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "mockupdb._bson.binary.STANDARD": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "mockupdb._bson.binary.USER_DEFINED_SUBTYPE": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "mockupdb._bson.binary.UUID": {
  "data": {
   "shadows": "uuid.UUID"
  },
  "type": "import"
 },
 "mockupdb._bson.binary.UUIDLegacy": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "mockupdb._bson.binary.Binary"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.binary.UUIDLegacy.__getnewargs__": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "mockupdb._bson.binary.UUIDLegacy.__new__": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "mockupdb._bson.binary.Binary",
    "mockupdb._bson.binary.OLD_UUID_SUBTYPE",
    "uuid.UUID"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.binary.UUIDLegacy.__repr__": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "mockupdb._bson.binary.UUIDLegacy.uuid": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.binary.UUID_REPRESENTATION_NAMES": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "mockupdb._bson.binary.UUID_SUBTYPE": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mockupdb._bson.calendar": {
  "data": {
   "shadows": "calendar"
  },
  "type": "import"
 },
 "mockupdb._bson.code": {
  "data": {},
  "type": "module"
 },
 "mockupdb._bson.code.Code": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.code.Code.__eq__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "isinstance",
    "mockupdb._bson.code.Code",
    "str"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.code.Code.__ne__": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "mockupdb._bson.code.Code.__new__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "isinstance",
    "mockupdb._bson.py3compat.PY3",
    "mockupdb._bson.py3compat.abc.Mapping",
    "mockupdb._bson.py3compat.string_type",
    "mockupdb._bson.py3compat.string_type.__name__",
    "mockupdb._bson.py3compat.text_type",
    "str.__new__"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.code.Code.__repr__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "str.__repr__"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.code.Code.scope": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.code.PY3": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.PY3"
  },
  "type": "import"
 },
 "mockupdb._bson.code.abc": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.abc"
  },
  "type": "import"
 },
 "mockupdb._bson.code.string_type": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.string_type"
  },
  "type": "import"
 },
 "mockupdb._bson.code.text_type": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.text_type"
  },
  "type": "import"
 },
 "mockupdb._bson.codec_options": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple",
    "mockupdb._bson.codec_options.CodecOptions"
   ]
  },
  "type": "module"
 },
 "mockupdb._bson.codec_options.ALL_UUID_REPRESENTATIONS": {
  "data": {
   "shadows": "mockupdb._bson.binary.ALL_UUID_REPRESENTATIONS"
  },
  "type": "import"
 },
 "mockupdb._bson.codec_options.CodecOptions": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "mockupdb._bson.codec_options._options_base"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.codec_options.CodecOptions.__new__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bool",
    "dict",
    "isinstance",
    "issubclass",
    "mockupdb._bson.binary.ALL_UUID_REPRESENTATIONS",
    "mockupdb._bson.binary.PYTHON_LEGACY",
    "mockupdb._bson.codec_options._raw_document_class",
    "mockupdb._bson.codec_options.datetime",
    "mockupdb._bson.py3compat.abc.MutableMapping",
    "mockupdb._bson.py3compat.string_type",
    "tuple.__new__"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.codec_options.CodecOptions.__repr__": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "mockupdb._bson.codec_options.CodecOptions._arguments_repr": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "dict",
    "mockupdb._bson.binary.UUID_REPRESENTATION_NAMES.get",
    "repr"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.codec_options.CodecOptions.with_options": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "mockupdb._bson.codec_options.CodecOptions"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.codec_options.DEFAULT_CODEC_OPTIONS": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "mockupdb._bson.codec_options.PYTHON_LEGACY": {
  "data": {
   "shadows": "mockupdb._bson.binary.PYTHON_LEGACY"
  },
  "type": "import"
 },
 "mockupdb._bson.codec_options.UUID_REPRESENTATION_NAMES": {
  "data": {
   "shadows": "mockupdb._bson.binary.UUID_REPRESENTATION_NAMES"
  },
  "type": "import"
 },
 "mockupdb._bson.codec_options._RAW_BSON_DOCUMENT_MARKER": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mockupdb._bson.codec_options._options_base": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mockupdb._bson.codec_options._parse_codec_options": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "mockupdb._bson.codec_options.CodecOptions",
    "mockupdb._bson.codec_options.DEFAULT_CODEC_OPTIONS"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.codec_options._raw_document_class": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "getattr",
    "mockupdb._bson.codec_options._RAW_BSON_DOCUMENT_MARKER"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.codec_options.abc": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.abc"
  },
  "type": "import"
 },
 "mockupdb._bson.codec_options.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mockupdb._bson.codec_options.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "mockupdb._bson.codec_options.string_type": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.string_type"
  },
  "type": "import"
 },
 "mockupdb._bson.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mockupdb._bson.dbref": {
  "data": {},
  "type": "module"
 },
 "mockupdb._bson.dbref.DBRef": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.dbref.DBRef.__deepcopy__": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "copy.deepcopy",
    "mockupdb._bson.dbref.DBRef"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.dbref.DBRef.__eq__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "mockupdb._bson.dbref.DBRef"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.dbref.DBRef.__getattr__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.dbref.DBRef.__hash__": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "hash",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.dbref.DBRef.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "TypeError",
    "id",
    "isinstance",
    "mockupdb._bson.py3compat.string_type",
    "mockupdb._bson.py3compat.string_type.__name__"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.dbref.DBRef.__ne__": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "mockupdb._bson.dbref.DBRef.__repr__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "mockupdb._bson.py3compat.iteritems"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.dbref.DBRef.__setstate__": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "mockupdb._bson.dbref.DBRef.as_doc": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "mockupdb._bson.son.SON"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.dbref.DBRef.collection": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.dbref.DBRef.database": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.dbref.DBRef.id": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.dbref.SON": {
  "data": {
   "shadows": "mockupdb._bson.son.SON"
  },
  "type": "import"
 },
 "mockupdb._bson.dbref.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mockupdb._bson.dbref.iteritems": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.iteritems"
  },
  "type": "import"
 },
 "mockupdb._bson.dbref.string_type": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.string_type"
  },
  "type": "import"
 },
 "mockupdb._bson.decimal128": {
  "data": {
   "symbols_in_volume": [
    "TypeError",
    "int.from_bytes",
    "mockupdb._bson.decimal128._CTX_OPTIONS",
    "mockupdb._bson.decimal128._EXPONENT_MAX",
    "mockupdb._bson.decimal128._EXPONENT_MIN",
    "mockupdb._bson.decimal128._INF",
    "mockupdb._bson.decimal128._MAX_DIGITS",
    "mockupdb._bson.decimal128._NAN",
    "mockupdb._bson.decimal128._SIGN",
    "mockupdb._bson.decimal128._SNAN",
    "mockupdb._bson.decimal128.decimal",
    "mockupdb._bson.decimal128.struct",
    "mockupdb._bson.decimal128.sys",
    "mockupdb._bson.py3compat.PY3"
   ]
  },
  "type": "module"
 },
 "mockupdb._bson.decimal128.Decimal128": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.decimal128.Decimal128.__eq__": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "mockupdb._bson.decimal128.Decimal128"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.decimal128.Decimal128.__getstate__": {
  "data": {
   "lineno": 342
  },
  "type": "function"
 },
 "mockupdb._bson.decimal128.Decimal128.__init__": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "len",
    "list",
    "mockupdb._bson.decimal128._decimal_to_128",
    "mockupdb._bson.decimal128.decimal",
    "mockupdb._bson.py3compat.string_type",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.decimal128.Decimal128.__ne__": {
  "data": {
   "lineno": 350
  },
  "type": "function"
 },
 "mockupdb._bson.decimal128.Decimal128.__repr__": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.decimal128.Decimal128.__setstate__": {
  "data": {
   "lineno": 339
  },
  "type": "function"
 },
 "mockupdb._bson.decimal128.Decimal128.__str__": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.decimal128.Decimal128.bid": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "mockupdb._bson.decimal128._PACK_64",
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.decimal128.Decimal128.from_bid": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bytes",
    "classmethod",
    "cls",
    "isinstance",
    "len",
    "mockupdb._bson.decimal128._UNPACK_64"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.decimal128.Decimal128.to_decimal": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "bytearray",
    "bytes",
    "int",
    "mockupdb._bson.decimal128._DEC128_CTX",
    "mockupdb._bson.decimal128._EXPONENT_BIAS",
    "mockupdb._bson.decimal128._EXPONENT_MASK",
    "mockupdb._bson.decimal128._INF",
    "mockupdb._bson.decimal128._NAN",
    "mockupdb._bson.decimal128._SIGN",
    "mockupdb._bson.decimal128._SNAN",
    "mockupdb._bson.decimal128._from_bytes",
    "mockupdb._bson.decimal128.decimal",
    "range",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.decimal128._CTX_OPTIONS": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._DEC128_CTX": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._EXPONENT_BIAS": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._EXPONENT_MASK": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._EXPONENT_MAX": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._EXPONENT_MIN": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._INF": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._MAX_DIGITS": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._NAN": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._NINF": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._NNAN": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._NSNAN": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._PACK_64": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._PINF": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._PNAN": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._PSNAN": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._PY3": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.PY3"
  },
  "type": "import"
 },
 "mockupdb._bson.decimal128._SIGN": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._SNAN": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._UNPACK_64": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "mockupdb._bson.decimal128._bit_length": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "mockupdb._bson.decimal128._decimal_to_128": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "min",
    "mockupdb._bson.decimal128._DEC128_CTX",
    "mockupdb._bson.decimal128._EXPONENT_BIAS",
    "mockupdb._bson.decimal128._EXPONENT_MASK",
    "mockupdb._bson.decimal128._NINF",
    "mockupdb._bson.decimal128._NNAN",
    "mockupdb._bson.decimal128._NSNAN",
    "mockupdb._bson.decimal128._PINF",
    "mockupdb._bson.decimal128._PNAN",
    "mockupdb._bson.decimal128._PSNAN",
    "mockupdb._bson.decimal128._SIGN",
    "mockupdb._bson.decimal128._bit_length",
    "mockupdb._bson.decimal128.decimal",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.decimal128._from_bytes": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "_hexlify",
    "_int",
    "int",
    "mockupdb._bson.decimal128.binascii"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.decimal128._string_type": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.string_type"
  },
  "type": "import"
 },
 "mockupdb._bson.decimal128.binascii": {
  "data": {
   "shadows": "binascii"
  },
  "type": "import"
 },
 "mockupdb._bson.decimal128.create_decimal128_context": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "mockupdb._bson.decimal128._CTX_OPTIONS",
    "mockupdb._bson.decimal128.decimal"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.decimal128.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "mockupdb._bson.decimal128.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "mockupdb._bson.decimal128.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mockupdb._bson.decode_all": {
  "data": {
   "lineno": 911
  },
  "type": "constant"
 },
 "mockupdb._bson.decode_file_iter": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "len",
    "mockupdb._bson._UNPACK_INT",
    "mockupdb._bson._bson_to_dict",
    "mockupdb._bson.codec_options.DEFAULT_CODEC_OPTIONS",
    "mockupdb._bson.errors.InvalidBSON"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.decode_iter": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mockupdb._bson._CODEC_OPTIONS_TYPE_ERROR",
    "mockupdb._bson._UNPACK_INT",
    "mockupdb._bson._bson_to_dict",
    "mockupdb._bson.codec_options.CodecOptions",
    "mockupdb._bson.codec_options.DEFAULT_CODEC_OPTIONS"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.errors": {
  "data": {},
  "type": "module"
 },
 "mockupdb._bson.errors.BSONError": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.errors.InvalidBSON": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "mockupdb._bson.errors.BSONError"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.errors.InvalidDocument": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "mockupdb._bson.errors.BSONError"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.errors.InvalidId": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "mockupdb._bson.errors.BSONError"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.errors.InvalidStringData": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "mockupdb._bson.errors.BSONError"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.gen_list_name": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "mockupdb._bson._LIST_NAMES",
    "mockupdb._bson.itertools",
    "mockupdb._bson.py3compat.b",
    "next",
    "str"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.has_c": {
  "data": {
   "lineno": 1075,
   "symbols_in_volume": [
    "mockupdb._bson._USE_C"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.int64": {
  "data": {
   "symbols_in_volume": [
    "int",
    "mockupdb._bson.py3compat.PY3"
   ]
  },
  "type": "module"
 },
 "mockupdb._bson.int64.Int64": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "mockupdb._bson.int64.long"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.int64.PY3": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.PY3"
  },
  "type": "import"
 },
 "mockupdb._bson.int64.long": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mockupdb._bson.is_valid": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "bytes",
    "isinstance",
    "mockupdb._bson._bson_to_dict",
    "mockupdb._bson.codec_options.DEFAULT_CODEC_OPTIONS"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.iteritems": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.iteritems"
  },
  "type": "import"
 },
 "mockupdb._bson.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "TypeError",
    "dict",
    "frozenset",
    "mockupdb._bson.json_util.DatetimeRepresentation",
    "mockupdb._bson.json_util.JSONMode",
    "mockupdb._bson.json_util.JSONOptions",
    "mockupdb._bson.json_util.LEGACY_JSON_OPTIONS",
    "mockupdb._bson.json_util.re",
    "mockupdb._bson.json_util.sys",
    "simplejson.loads"
   ]
  },
  "type": "module"
 },
 "mockupdb._bson.json_util.Binary": {
  "data": {
   "shadows": "mockupdb._bson.binary.Binary"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util.CANONICAL_JSON_OPTIONS": {
  "data": {
   "lineno": 361
  },
  "type": "constant"
 },
 "mockupdb._bson.json_util.CSHARP_LEGACY": {
  "data": {
   "shadows": "mockupdb._bson.binary.CSHARP_LEGACY"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util.Code": {
  "data": {
   "shadows": "mockupdb._bson.code.Code"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util.CodecOptions": {
  "data": {
   "shadows": "mockupdb._bson.codec_options.CodecOptions"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util.ConfigurationError": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.json_util.DBRef": {
  "data": {
   "shadows": "mockupdb._bson.dbref.DBRef"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util.DEFAULT_JSON_OPTIONS": {
  "data": {
   "lineno": 352
  },
  "type": "constant"
 },
 "mockupdb._bson.json_util.DatetimeRepresentation": {
  "data": {
   "lineno": 169
  },
  "type": "class"
 },
 "mockupdb._bson.json_util.Decimal128": {
  "data": {
   "shadows": "mockupdb._bson.decimal128.Decimal128"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util.EPOCH_AWARE": {
  "data": {
   "shadows": "mockupdb._bson.EPOCH_AWARE"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util.EPOCH_NAIVE": {
  "data": {
   "shadows": "mockupdb._bson.EPOCH_NAIVE"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util.Int64": {
  "data": {
   "shadows": "mockupdb._bson.int64.Int64"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util.JAVA_LEGACY": {
  "data": {
   "shadows": "mockupdb._bson.binary.JAVA_LEGACY"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util.JSONMode": {
  "data": {
   "lineno": 205
  },
  "type": "class"
 },
 "mockupdb._bson.json_util.JSONOptions": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "mockupdb._bson.codec_options.CodecOptions"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.json_util.JSONOptions.__new__": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "dict",
    "mockupdb._bson.json_util.ConfigurationError",
    "mockupdb._bson.json_util.DatetimeRepresentation",
    "mockupdb._bson.json_util.JSONMode",
    "mockupdb._bson.json_util.JSONOptions",
    "mockupdb._bson.json_util._HAS_OBJECT_PAIRS_HOOK",
    "mockupdb._bson.tz_util.utc",
    "super"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.json_util.JSONOptions._arguments_repr": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "mockupdb._bson.json_util.JSONOptions",
    "super"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.json_util.LEGACY_JSON_OPTIONS": {
  "data": {
   "lineno": 344
  },
  "type": "constant"
 },
 "mockupdb._bson.json_util.MaxKey": {
  "data": {
   "shadows": "mockupdb._bson.max_key.MaxKey"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util.MinKey": {
  "data": {
   "shadows": "mockupdb._bson.min_key.MinKey"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util.OLD_UUID_SUBTYPE": {
  "data": {
   "shadows": "mockupdb._bson.binary.OLD_UUID_SUBTYPE"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util.ObjectId": {
  "data": {
   "shadows": "mockupdb._bson.objectid.ObjectId"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util.PY3": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.PY3"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util.RELAXED_JSON_OPTIONS": {
  "data": {
   "lineno": 369
  },
  "type": "constant"
 },
 "mockupdb._bson.json_util.RE_TYPE": {
  "data": {
   "shadows": "mockupdb._bson.RE_TYPE"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util.Regex": {
  "data": {
   "shadows": "mockupdb._bson.regex.Regex"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util.SON": {
  "data": {
   "shadows": "mockupdb._bson.SON"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util.STRICT_JSON_OPTIONS": {
  "data": {
   "lineno": 377
  },
  "type": "constant"
 },
 "mockupdb._bson.json_util.Timestamp": {
  "data": {
   "shadows": "mockupdb._bson.timestamp.Timestamp"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util.UUID_SUBTYPE": {
  "data": {
   "shadows": "mockupdb._bson.binary.UUID_SUBTYPE"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util._DBREF_KEYS": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "mockupdb._bson.json_util._HAS_OBJECT_PAIRS_HOOK": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "mockupdb._bson.json_util._RE_OPT_TABLE": {
  "data": {
   "lineno": 156
  },
  "type": "constant"
 },
 "mockupdb._bson.json_util._binary_or_uuid": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "mockupdb._bson.binary.Binary",
    "mockupdb._bson.binary.CSHARP_LEGACY",
    "mockupdb._bson.binary.JAVA_LEGACY",
    "mockupdb._bson.binary.OLD_UUID_SUBTYPE",
    "mockupdb._bson.binary.UUID_SUBTYPE",
    "mockupdb._bson.json_util.uuid",
    "mockupdb._bson.py3compat.PY3"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.json_util._encode_binary": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "mockupdb._bson.SON",
    "mockupdb._bson.json_util.JSONMode",
    "mockupdb._bson.json_util.base64"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.json_util._json_convert": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "TypeError",
    "bytes",
    "default",
    "hasattr",
    "isinstance",
    "list",
    "mockupdb._bson.SON",
    "mockupdb._bson.json_util.DEFAULT_JSON_OPTIONS",
    "mockupdb._bson.py3compat.iteritems",
    "mockupdb._bson.py3compat.text_type"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.json_util._parse_canonical_binary": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "isinstance",
    "len",
    "mockupdb._bson.json_util._binary_or_uuid",
    "mockupdb._bson.json_util.base64",
    "mockupdb._bson.py3compat.string_type"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.json_util._parse_canonical_code": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "TypeError",
    "mockupdb._bson.code.Code"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.json_util._parse_canonical_datetime": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "int",
    "isinstance",
    "len",
    "mockupdb._bson._millis_to_datetime",
    "mockupdb._bson.json_util.datetime",
    "mockupdb._bson.py3compat.string_type",
    "mockupdb._bson.tz_util.utc"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.json_util._parse_canonical_dbpointer": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "len",
    "mockupdb._bson.dbref.DBRef",
    "mockupdb._bson.objectid.ObjectId"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.json_util._parse_canonical_dbref": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "mockupdb._bson.dbref.DBRef",
    "mockupdb._bson.json_util._DBREF_KEYS"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.json_util._parse_canonical_decimal128": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "len",
    "mockupdb._bson.decimal128.Decimal128",
    "mockupdb._bson.py3compat.string_type"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.json_util._parse_canonical_double": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "isinstance",
    "len",
    "mockupdb._bson.py3compat.string_type"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.json_util._parse_canonical_int32": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "isinstance",
    "len",
    "mockupdb._bson.py3compat.string_type"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.json_util._parse_canonical_int64": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "mockupdb._bson.int64.Int64"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.json_util._parse_canonical_maxkey": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "mockupdb._bson.max_key.MaxKey"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.json_util._parse_canonical_minkey": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "mockupdb._bson.min_key.MinKey"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.json_util._parse_canonical_oid": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "mockupdb._bson.objectid.ObjectId"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.json_util._parse_canonical_regex": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "mockupdb._bson.regex.Regex"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.json_util._parse_canonical_symbol": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "mockupdb._bson.py3compat.text_type"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.json_util._parse_legacy_binary": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "mockupdb._bson.json_util._binary_or_uuid",
    "mockupdb._bson.json_util.base64"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.json_util._parse_legacy_regex": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "isinstance",
    "mockupdb._bson.json_util._RE_OPT_TABLE",
    "mockupdb._bson.regex.Regex"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.json_util._parse_legacy_uuid": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "mockupdb._bson.json_util.uuid"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.json_util.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util.bson": {
  "data": {
   "shadows": "mockupdb._bson"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util.default": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "bytes",
    "float",
    "int",
    "isinstance",
    "mockupdb._bson.EPOCH_AWARE",
    "mockupdb._bson.RE_TYPE",
    "mockupdb._bson.SON",
    "mockupdb._bson._datetime_to_millis",
    "mockupdb._bson.binary.Binary",
    "mockupdb._bson.binary.CSHARP_LEGACY",
    "mockupdb._bson.binary.JAVA_LEGACY",
    "mockupdb._bson.binary.OLD_UUID_SUBTYPE",
    "mockupdb._bson.binary.UUID_SUBTYPE",
    "mockupdb._bson.code.Code",
    "mockupdb._bson.dbref.DBRef",
    "mockupdb._bson.decimal128.Decimal128",
    "mockupdb._bson.int64.Int64",
    "mockupdb._bson.json_util.DEFAULT_JSON_OPTIONS",
    "mockupdb._bson.json_util.DatetimeRepresentation",
    "mockupdb._bson.json_util.JSONMode",
    "mockupdb._bson.json_util._encode_binary",
    "mockupdb._bson.json_util._json_convert",
    "mockupdb._bson.json_util.datetime",
    "mockupdb._bson.json_util.math",
    "mockupdb._bson.json_util.re",
    "mockupdb._bson.json_util.uuid",
    "mockupdb._bson.max_key.MaxKey",
    "mockupdb._bson.min_key.MinKey",
    "mockupdb._bson.objectid.ObjectId",
    "mockupdb._bson.py3compat.PY3",
    "mockupdb._bson.py3compat.integer_types",
    "mockupdb._bson.py3compat.text_type",
    "mockupdb._bson.regex.Regex",
    "mockupdb._bson.timestamp.Timestamp",
    "mockupdb._bson.tz_util.utc",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.json_util.dumps": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "_json_convert",
    "mockupdb._bson.json_util.DEFAULT_JSON_OPTIONS",
    "simplejson.dumps"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.json_util.integer_types": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.integer_types"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util.iteritems": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.iteritems"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util.loads": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "mockupdb._bson.json_util.DEFAULT_JSON_OPTIONS",
    "mockupdb._bson.json_util._HAS_OBJECT_PAIRS_HOOK",
    "object_hook",
    "object_pairs_hook",
    "simplejson.loads"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.json_util.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util.object_hook": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "_parse_canonical_binary",
    "_parse_canonical_code",
    "_parse_canonical_datetime",
    "_parse_canonical_dbpointer",
    "_parse_canonical_dbref",
    "_parse_canonical_decimal128",
    "_parse_canonical_double",
    "_parse_canonical_int32",
    "_parse_canonical_int64",
    "_parse_canonical_maxkey",
    "_parse_canonical_minkey",
    "_parse_canonical_oid",
    "_parse_canonical_regex",
    "_parse_canonical_symbol",
    "_parse_legacy_binary",
    "_parse_legacy_regex",
    "_parse_legacy_uuid",
    "mockupdb._bson.json_util.DEFAULT_JSON_OPTIONS",
    "mockupdb._bson.timestamp.Timestamp"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.json_util.object_pairs_hook": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "mockupdb._bson.json_util.DEFAULT_JSON_OPTIONS",
    "object_hook"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.json_util.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util.string_type": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.string_type"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util.text_type": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.text_type"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util.utc": {
  "data": {
   "shadows": "mockupdb._bson.tz_util.utc"
  },
  "type": "import"
 },
 "mockupdb._bson.json_util.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "mockupdb._bson.max_key": {
  "data": {},
  "type": "module"
 },
 "mockupdb._bson.max_key.MaxKey": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.max_key.MaxKey.__eq__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "isinstance",
    "mockupdb._bson.max_key.MaxKey"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.max_key.MaxKey.__ge__": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "mockupdb._bson.max_key.MaxKey.__gt__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "isinstance",
    "mockupdb._bson.max_key.MaxKey"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.max_key.MaxKey.__hash__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.max_key.MaxKey.__le__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "isinstance",
    "mockupdb._bson.max_key.MaxKey"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.max_key.MaxKey.__lt__": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "mockupdb._bson.max_key.MaxKey.__ne__": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "mockupdb._bson.max_key.MaxKey.__repr__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "mockupdb._bson.min_key": {
  "data": {},
  "type": "module"
 },
 "mockupdb._bson.min_key.MinKey": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.min_key.MinKey.__eq__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "isinstance",
    "mockupdb._bson.min_key.MinKey"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.min_key.MinKey.__ge__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "isinstance",
    "mockupdb._bson.min_key.MinKey"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.min_key.MinKey.__gt__": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "mockupdb._bson.min_key.MinKey.__hash__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.min_key.MinKey.__le__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "mockupdb._bson.min_key.MinKey.__lt__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "isinstance",
    "mockupdb._bson.min_key.MinKey"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.min_key.MinKey.__ne__": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "mockupdb._bson.min_key.MinKey.__repr__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "mockupdb._bson.objectid": {
  "data": {},
  "type": "module"
 },
 "mockupdb._bson.objectid.InvalidId": {
  "data": {
   "shadows": "mockupdb._bson.errors.InvalidId"
  },
  "type": "import"
 },
 "mockupdb._bson.objectid.ObjectId": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "mockupdb._bson.objectid._machine_bytes",
    "mockupdb._bson.objectid.random",
    "mockupdb._bson.objectid.threading",
    "object"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.objectid.ObjectId.__eq__": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "mockupdb._bson.objectid.ObjectId"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.__ge__": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "mockupdb._bson.objectid.ObjectId"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.__generate": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "int",
    "mockupdb._bson.objectid.ObjectId",
    "mockupdb._bson.objectid.os",
    "mockupdb._bson.objectid.struct",
    "mockupdb._bson.objectid.time"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.__getstate__": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.__gt__": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "mockupdb._bson.objectid.ObjectId"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.__hash__": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.__le__": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "mockupdb._bson.objectid.ObjectId"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.__lt__": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "mockupdb._bson.objectid.ObjectId"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.__ne__": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "mockupdb._bson.objectid.ObjectId"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.__repr__": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.__setstate__": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "mockupdb._bson.py3compat.PY3",
    "mockupdb._bson.py3compat.text_type"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.__str__": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "mockupdb._bson.objectid.binascii",
    "mockupdb._bson.py3compat.PY3"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.__validate": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "len",
    "mockupdb._bson.objectid.ObjectId",
    "mockupdb._bson.objectid._raise_invalid_id",
    "mockupdb._bson.py3compat.bytes_from_hex",
    "mockupdb._bson.py3compat.string_type",
    "mockupdb._bson.py3compat.text_type.__name__",
    "type"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.binary": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.from_datetime": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "int",
    "mockupdb._bson.objectid.calendar",
    "mockupdb._bson.objectid.struct"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.generation_time": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "mockupdb._bson.objectid.datetime",
    "mockupdb._bson.objectid.struct",
    "mockupdb._bson.tz_util.utc",
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.ObjectId.is_valid": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "TypeError",
    "classmethod",
    "mockupdb._bson.errors.InvalidId",
    "mockupdb._bson.objectid.ObjectId"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.PY3": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.PY3"
  },
  "type": "import"
 },
 "mockupdb._bson.objectid._machine_bytes": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "mockupdb._bson.objectid.hashlib",
    "mockupdb._bson.objectid.socket",
    "mockupdb._bson.py3compat.PY3"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid._raise_invalid_id": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "mockupdb._bson.errors.InvalidId"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.objectid.binascii": {
  "data": {
   "shadows": "binascii"
  },
  "type": "import"
 },
 "mockupdb._bson.objectid.bytes_from_hex": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.bytes_from_hex"
  },
  "type": "import"
 },
 "mockupdb._bson.objectid.calendar": {
  "data": {
   "shadows": "calendar"
  },
  "type": "import"
 },
 "mockupdb._bson.objectid.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mockupdb._bson.objectid.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "mockupdb._bson.objectid.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mockupdb._bson.objectid.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "mockupdb._bson.objectid.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "mockupdb._bson.objectid.string_type": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.string_type"
  },
  "type": "import"
 },
 "mockupdb._bson.objectid.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "mockupdb._bson.objectid.text_type": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.text_type"
  },
  "type": "import"
 },
 "mockupdb._bson.objectid.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "mockupdb._bson.objectid.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mockupdb._bson.objectid.utc": {
  "data": {
   "shadows": "mockupdb._bson.tz_util.utc"
  },
  "type": "import"
 },
 "mockupdb._bson.py3compat": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "exec",
    "int",
    "map",
    "mockupdb._bson.py3compat.PY3",
    "mockupdb._bson.py3compat.sys",
    "str"
   ]
  },
  "type": "module"
 },
 "mockupdb._bson.py3compat.MAXSIZE": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "mockupdb._bson.py3compat.PY3": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mockupdb._bson.py3compat.StringIO": {
  "data": {
   "shadows": "StringIO.StringIO"
  },
  "type": "import"
 },
 "mockupdb._bson.py3compat._unicode": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "mockupdb._bson.py3compat.abc": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "mockupdb._bson.py3compat.b": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "mockupdb._bson.py3compat.bytes_from_hex": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "mockupdb._bson.py3compat.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "mockupdb._bson.py3compat.imap": {
  "data": {
   "shadows": "itertools.imap"
  },
  "type": "import"
 },
 "mockupdb._bson.py3compat.integer_types": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "mockupdb._bson.py3compat.iteritems": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "mockupdb._bson.py3compat.itervalues": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "mockupdb._bson.py3compat.reraise": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "exctype",
    "str"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.py3compat.string_type": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "mockupdb._bson.py3compat.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mockupdb._bson.py3compat.text_type": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "mockupdb._bson.py3compat.thread": {
  "data": {
   "shadows": "thread"
  },
  "type": "import"
 },
 "mockupdb._bson.raw_bson": {
  "data": {
   "symbols_in_volume": [
    "mockupdb._bson.codec_options.DEFAULT_CODEC_OPTIONS.with_options",
    "mockupdb._bson.raw_bson.RawBSONDocument"
   ]
  },
  "type": "module"
 },
 "mockupdb._bson.raw_bson.DEFAULT": {
  "data": {
   "shadows": "mockupdb._bson.codec_options.DEFAULT_CODEC_OPTIONS"
  },
  "type": "import"
 },
 "mockupdb._bson.raw_bson.DEFAULT_RAW_BSON_OPTIONS": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "mockupdb._bson.raw_bson.InvalidBSON": {
  "data": {
   "shadows": "mockupdb._bson.errors.InvalidBSON"
  },
  "type": "import"
 },
 "mockupdb._bson.raw_bson.RawBSONDocument": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "mockupdb._bson.codec_options._RAW_BSON_DOCUMENT_MARKER",
    "mockupdb._bson.py3compat.abc.Mapping"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.raw_bson.RawBSONDocument.__eq__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "mockupdb._bson.raw_bson.RawBSONDocument"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.raw_bson.RawBSONDocument.__getitem__": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "mockupdb._bson.raw_bson.RawBSONDocument.__inflated": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "mockupdb._bson._UNPACK_INT",
    "mockupdb._bson._iterate_elements",
    "mockupdb._bson.errors.InvalidBSON",
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.raw_bson.RawBSONDocument.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "TypeError",
    "mockupdb._bson.raw_bson.RawBSONDocument"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.raw_bson.RawBSONDocument.__iter__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.raw_bson.RawBSONDocument.__len__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.raw_bson.RawBSONDocument.__repr__": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "mockupdb._bson.raw_bson.RawBSONDocument.items": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "mockupdb._bson.py3compat.iteritems"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.raw_bson.RawBSONDocument.raw": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.raw_bson._RAW_BSON_DOCUMENT_MARKER": {
  "data": {
   "shadows": "mockupdb._bson.codec_options._RAW_BSON_DOCUMENT_MARKER"
  },
  "type": "import"
 },
 "mockupdb._bson.raw_bson._UNPACK_INT": {
  "data": {
   "shadows": "mockupdb._bson._UNPACK_INT"
  },
  "type": "import"
 },
 "mockupdb._bson.raw_bson._iterate_elements": {
  "data": {
   "shadows": "mockupdb._bson._iterate_elements"
  },
  "type": "import"
 },
 "mockupdb._bson.raw_bson.abc": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.abc"
  },
  "type": "import"
 },
 "mockupdb._bson.raw_bson.iteritems": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.iteritems"
  },
  "type": "import"
 },
 "mockupdb._bson.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mockupdb._bson.regex": {
  "data": {},
  "type": "module"
 },
 "mockupdb._bson.regex.RE_TYPE": {
  "data": {
   "shadows": "mockupdb._bson.son.RE_TYPE"
  },
  "type": "import"
 },
 "mockupdb._bson.regex.Regex": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.regex.Regex.__eq__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "mockupdb._bson.regex.Regex"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.regex.Regex.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "TypeError",
    "bytes",
    "int",
    "isinstance",
    "mockupdb._bson.py3compat.string_type",
    "mockupdb._bson.py3compat.text_type",
    "mockupdb._bson.regex.str_flags_to_int",
    "type"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.regex.Regex.__ne__": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "mockupdb._bson.regex.Regex.__repr__": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "mockupdb._bson.regex.Regex.from_native": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "TypeError",
    "classmethod",
    "isinstance",
    "mockupdb._bson.regex.Regex",
    "mockupdb._bson.son.RE_TYPE",
    "type"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.regex.Regex.try_compile": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "mockupdb._bson.regex.re"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.regex.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mockupdb._bson.regex.str_flags_to_int": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "mockupdb._bson.regex.re"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.regex.string_type": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.string_type"
  },
  "type": "import"
 },
 "mockupdb._bson.regex.text_type": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.text_type"
  },
  "type": "import"
 },
 "mockupdb._bson.reraise": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.reraise"
  },
  "type": "import"
 },
 "mockupdb._bson.son": {
  "data": {
   "symbols_in_volume": [
    "mockupdb._bson.son.re",
    "type"
   ]
  },
  "type": "module"
 },
 "mockupdb._bson.son.RE_TYPE": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mockupdb._bson.son.SON": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.son.SON.__deepcopy__": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "id",
    "isinstance",
    "mockupdb._bson.son.RE_TYPE",
    "mockupdb._bson.son.SON",
    "mockupdb._bson.son.copy"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.__delitem__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "dict.__delitem__"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.__eq__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mockupdb._bson.son.SON"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "dict.__init__"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.__iter__": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.__len__": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.__ne__": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.__new__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "mockupdb._bson.son.SON",
    "super"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.__repr__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.__setitem__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "dict.__setitem__"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.clear": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "mockupdb._bson.son.SON",
    "super"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.copy": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "mockupdb._bson.son.SON"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.get": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.has_key": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.items": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.iteritems": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.iterkeys": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.itervalues": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.keys": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.pop": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "len",
    "repr"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.popitem": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "KeyError",
    "StopIteration",
    "next"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.setdefault": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.to_dict": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "dict",
    "transform_value"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.to_dict.transform_value": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "mockupdb._bson.py3compat.abc.Mapping",
    "mockupdb._bson.py3compat.iteritems",
    "transform_value"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.update": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.son.SON.values": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "mockupdb._bson.son.abc": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.abc"
  },
  "type": "import"
 },
 "mockupdb._bson.son.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mockupdb._bson.son.iteritems": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.iteritems"
  },
  "type": "import"
 },
 "mockupdb._bson.son.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mockupdb._bson.string_type": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.string_type"
  },
  "type": "import"
 },
 "mockupdb._bson.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "mockupdb._bson.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mockupdb._bson.text_type": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.text_type"
  },
  "type": "import"
 },
 "mockupdb._bson.timestamp": {
  "data": {},
  "type": "module"
 },
 "mockupdb._bson.timestamp.Timestamp": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.timestamp.Timestamp.__eq__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "mockupdb._bson.timestamp.Timestamp"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.timestamp.Timestamp.__ge__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "mockupdb._bson.timestamp.Timestamp"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.timestamp.Timestamp.__gt__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "mockupdb._bson.timestamp.Timestamp"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.timestamp.Timestamp.__hash__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.timestamp.Timestamp.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "mockupdb._bson.py3compat.integer_types",
    "mockupdb._bson.timestamp.UPPERBOUND",
    "mockupdb._bson.timestamp.calendar",
    "mockupdb._bson.timestamp.datetime"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.timestamp.Timestamp.__le__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "mockupdb._bson.timestamp.Timestamp"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.timestamp.Timestamp.__lt__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "mockupdb._bson.timestamp.Timestamp"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.timestamp.Timestamp.__ne__": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "mockupdb._bson.timestamp.Timestamp.__repr__": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "mockupdb._bson.timestamp.Timestamp.as_datetime": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "mockupdb._bson.timestamp.datetime",
    "mockupdb._bson.tz_util.utc"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.timestamp.Timestamp.inc": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.timestamp.Timestamp.time": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.timestamp.UPPERBOUND": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mockupdb._bson.timestamp.calendar": {
  "data": {
   "shadows": "calendar"
  },
  "type": "import"
 },
 "mockupdb._bson.timestamp.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mockupdb._bson.timestamp.integer_types": {
  "data": {
   "shadows": "mockupdb._bson.py3compat.integer_types"
  },
  "type": "import"
 },
 "mockupdb._bson.timestamp.utc": {
  "data": {
   "shadows": "mockupdb._bson.tz_util.utc"
  },
  "type": "import"
 },
 "mockupdb._bson.tz_util": {
  "data": {
   "symbols_in_volume": [
    "datetime.timedelta",
    "mockupdb._bson.tz_util.FixedOffset"
   ]
  },
  "type": "module"
 },
 "mockupdb._bson.tz_util.FixedOffset": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "datetime.tzinfo"
   ]
  },
  "type": "class"
 },
 "mockupdb._bson.tz_util.FixedOffset.__getinitargs__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "mockupdb._bson.tz_util.FixedOffset.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "datetime.timedelta",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.tz_util.FixedOffset.dst": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "mockupdb._bson.tz_util.ZERO"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson.tz_util.FixedOffset.tzname": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "mockupdb._bson.tz_util.FixedOffset.utcoffset": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "mockupdb._bson.tz_util.ZERO": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mockupdb._bson.tz_util.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "mockupdb._bson.tz_util.tzinfo": {
  "data": {
   "shadows": "datetime.tzinfo"
  },
  "type": "import"
 },
 "mockupdb._bson.tz_util.utc": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mockupdb._bson.utc": {
  "data": {
   "shadows": "mockupdb._bson.tz_util.utc"
  },
  "type": "import"
 },
 "mockupdb._bson.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "mockupdb._bson_values_equal": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "bytes",
    "hasattr",
    "key_fn",
    "marker",
    "str"
   ]
  },
  "type": "function"
 },
 "mockupdb._bson_values_equal.marker": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "mockupdb._codec_options": {
  "data": {
   "shadows": "mockupdb._bson.codec_options"
  },
  "type": "import"
 },
 "mockupdb._errno_from_exception": {
  "data": {
   "lineno": 1694,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "mockupdb._get_c_string": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "codecs.utf_8_decode"
   ]
  },
  "type": "function"
 },
 "mockupdb._global_threads": {
  "data": {
   "lineno": 1159
  },
  "type": "constant"
 },
 "mockupdb._json_util": {
  "data": {
   "shadows": "mockupdb._bson.json_util"
  },
  "type": "import"
 },
 "mockupdb._shut_down": {
  "data": {
   "lineno": 1162,
   "symbols_in_volume": [
    "mockupdb._shutting_down"
   ]
  },
  "type": "function"
 },
 "mockupdb._shutting_down": {
  "data": {
   "lineno": 1158
  },
  "type": "constant"
 },
 "mockupdb._ssl": {
  "data": {
   "shadows": "ssl"
  },
  "type": "import"
 },
 "mockupdb._synchronized": {
  "data": {
   "lineno": 1104
  },
  "type": "function"
 },
 "mockupdb._synchronized.wrapper": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": [
    "meth",
    "mockupdb.functools"
   ]
  },
  "type": "function"
 },
 "mockupdb._utf_8_decode": {
  "data": {
   "shadows": "codecs.utf_8_decode"
  },
  "type": "import"
 },
 "mockupdb.absent": {
  "data": {
   "lineno": 1054
  },
  "type": "constant"
 },
 "mockupdb.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "mockupdb.bind_socket": {
  "data": {
   "lineno": 1648,
   "symbols_in_volume": [
    "mockupdb.os",
    "mockupdb.socket",
    "set"
   ]
  },
  "type": "function"
 },
 "mockupdb.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "mockupdb.docs_repr": {
  "data": {
   "lineno": 1836,
   "symbols_in_volume": [
    "cStringIO.StringIO",
    "enumerate",
    "mockupdb._bson.json_util.dumps",
    "mockupdb.text_type"
   ]
  },
  "type": "function"
 },
 "mockupdb.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "mockupdb.format_call": {
  "data": {
   "lineno": 1900,
   "symbols_in_volume": [
    "mockupdb.inspect",
    "repr"
   ]
  },
  "type": "function"
 },
 "mockupdb.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "mockupdb.go": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "TypeError",
    "callable",
    "mockupdb.threading"
   ]
  },
  "type": "function"
 },
 "mockupdb.go.get_result": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "AssertionError",
    "fn",
    "mockupdb.reraise"
   ]
  },
  "type": "function"
 },
 "mockupdb.go.target": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "Exception",
    "fn",
    "mockupdb.sys"
   ]
  },
  "type": "function"
 },
 "mockupdb.going": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "fn",
    "format_call",
    "future",
    "mockupdb.contextlib",
    "mockupdb.go",
    "mockupdb.inspect",
    "mockupdb.reraise",
    "mockupdb.sys",
    "mockupdb.traceback"
   ]
  },
  "type": "function"
 },
 "mockupdb.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mockupdb.interactive_server": {
  "data": {
   "lineno": 1925,
   "symbols_in_volume": [
    "int",
    "mockupdb.MockupDB",
    "mockupdb.OpMsg",
    "mockupdb.__version__",
    "ssl"
   ]
  },
  "type": "function"
 },
 "mockupdb.make_docs": {
  "data": {
   "lineno": 1717,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "bool",
    "collections.Mapping",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "mockupdb.OpReply",
    "mockupdb.string_type",
    "mockupdb.text_type",
    "ordereddict.OrderedDict",
    "raise_args_err",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mockupdb.make_matcher": {
  "data": {
   "lineno": 1774,
   "symbols_in_volume": [
    "isinstance",
    "mockupdb.Matcher",
    "raise_args_err"
   ]
  },
  "type": "function"
 },
 "mockupdb.make_op_msg_reply": {
  "data": {
   "lineno": 1818,
   "symbols_in_volume": [
    "isinstance",
    "mockupdb.OpMsgReply",
    "mockupdb.OpReply",
    "raise_args_err"
   ]
  },
  "type": "function"
 },
 "mockupdb.make_prototype_request": {
  "data": {
   "lineno": 1794,
   "symbols_in_volume": [
    "isinstance",
    "issubclass",
    "mockupdb.Request",
    "mockupdb.inspect",
    "raise_args_err",
    "request_cls"
   ]
  },
  "type": "function"
 },
 "mockupdb.make_reply": {
  "data": {
   "lineno": 1808,
   "symbols_in_volume": [
    "isinstance",
    "mockupdb.OpMsgReply",
    "mockupdb.OpReply",
    "raise_args_err"
   ]
  },
  "type": "function"
 },
 "mockupdb.mock_server_receive": {
  "data": {
   "lineno": 1703,
   "symbols_in_volume": [
    "len",
    "mockupdb.errno",
    "mockupdb.socket"
   ]
  },
  "type": "function"
 },
 "mockupdb.mock_server_receive_request": {
  "data": {
   "lineno": 1681,
   "symbols_in_volume": [
    "NotImplementedError",
    "mock_server_receive",
    "mockupdb.OPCODES",
    "mockupdb._UNPACK_INT"
   ]
  },
  "type": "function"
 },
 "mockupdb.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mockupdb.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mockupdb.raise_args_err": {
  "data": {
   "lineno": 1910,
   "symbols_in_volume": [
    "TypeError",
    "error_class",
    "mockupdb.format_call",
    "mockupdb.inspect"
   ]
  },
  "type": "function"
 },
 "mockupdb.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "mockupdb.reraise": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "exctype",
    "str"
   ]
  },
  "type": "function"
 },
 "mockupdb.select": {
  "data": {
   "shadows": "select"
  },
  "type": "import"
 },
 "mockupdb.seq_match": {
  "data": {
   "lineno": 1864,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "mockupdb.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "mockupdb.string_type": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "mockupdb.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "mockupdb.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mockupdb.text_type": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "mockupdb.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "mockupdb.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mockupdb.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "mockupdb.unprefixed": {
  "data": {
   "lineno": 1828,
   "symbols_in_volume": [
    "repr",
    "unicode"
   ]
  },
  "type": "function"
 },
 "mockupdb.wait_until": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "AssertionError",
    "mockupdb.time",
    "predicate"
   ]
  },
  "type": "function"
 },
 "mockupdb.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 }
}