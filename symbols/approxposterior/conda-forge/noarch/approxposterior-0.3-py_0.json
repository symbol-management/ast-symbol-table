{
 "approxposterior": {
  "data": {},
  "type": "module"
 },
 "approxposterior.__author__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "approxposterior.__copyright__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "approxposterior.__version__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "approxposterior.approx": {
  "data": {},
  "type": "module"
 },
 "approxposterior.approx.ApproxPosterior": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "approxposterior.approx.ApproxPosterior.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "numpy.any",
    "numpy.array",
    "numpy.isfinite",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "approxposterior.approx.ApproxPosterior._gpll": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "numpy.array",
    "numpy.inf",
    "numpy.isfinite",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "approxposterior.approx.ApproxPosterior.findMAP": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "fn",
    "len",
    "numpy.all",
    "numpy.argmax",
    "numpy.argmin",
    "numpy.array",
    "numpy.isfinite",
    "numpy.min",
    "numpy.random.randn",
    "range",
    "scipy.optimize.minimize",
    "str"
   ]
  },
  "type": "function"
 },
 "approxposterior.approx.ApproxPosterior.findMAP.fn": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.isfinite"
   ]
  },
  "type": "function"
 },
 "approxposterior.approx.ApproxPosterior.findNextPoint": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "approxposterior.approx.george",
    "hasattr",
    "numpy.array",
    "numpy.hstack",
    "numpy.isfinite",
    "numpy.nan",
    "numpy.savez",
    "numpy.vstack",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "approxposterior.approx.ApproxPosterior.optGP": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "approxposterior.approx.ApproxPosterior.run": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "approxposterior.approx.george",
    "approxposterior.approx.time",
    "int",
    "len",
    "list",
    "numpy.random.seed",
    "numpy.savez",
    "print",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "approxposterior.approx.ApproxPosterior.runMCMC": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "approxposterior.approx.emcee",
    "float",
    "int",
    "len",
    "numpy.any",
    "numpy.array",
    "numpy.isfinite",
    "numpy.max",
    "numpy.min",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "approxposterior.approx.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "approxposterior.approx.emcee": {
  "data": {
   "shadows": "emcee"
  },
  "type": "import"
 },
 "approxposterior.approx.george": {
  "data": {
   "shadows": "george"
  },
  "type": "import"
 },
 "approxposterior.approx.minimize": {
  "data": {
   "shadows": "scipy.optimize.minimize"
  },
  "type": "import"
 },
 "approxposterior.approx.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "approxposterior.approx.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "approxposterior.approx.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "approxposterior.approx.ut": {
  "data": {
   "shadows": "utility"
  },
  "type": "import"
 },
 "approxposterior.approx.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "approxposterior.gmmUtils": {
  "data": {},
  "type": "module"
 },
 "approxposterior.gmmUtils.GaussianMixture": {
  "data": {
   "shadows": "sklearn.mixture.GaussianMixture"
  },
  "type": "import"
 },
 "approxposterior.gmmUtils.GridSearchCV": {
  "data": {
   "shadows": "sklearn.model_selection.GridSearchCV"
  },
  "type": "import"
 },
 "approxposterior.gmmUtils.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "approxposterior.gmmUtils.fitGMM": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "dict",
    "numpy.arange",
    "numpy.inf",
    "range",
    "sklearn.mixture.GaussianMixture",
    "sklearn.model_selection.GridSearchCV"
   ]
  },
  "type": "function"
 },
 "approxposterior.gmmUtils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "approxposterior.gpUtils": {
  "data": {},
  "type": "module"
 },
 "approxposterior.gpUtils.KFold": {
  "data": {
   "shadows": "sklearn.model_selection.KFold"
  },
  "type": "import"
 },
 "approxposterior.gpUtils.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "approxposterior.gpUtils._grad_nll": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "approxposterior.gpUtils._nll": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.isfinite",
    "numpy.linalg.LinAlgError",
    "priorFn"
   ]
  },
  "type": "function"
 },
 "approxposterior.gpUtils.defaultGP": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "approxposterior.gpUtils.george",
    "numpy.fabs",
    "numpy.median",
    "numpy.random.randn",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "approxposterior.gpUtils.defaultHyperPrior": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.fabs",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "approxposterior.gpUtils.george": {
  "data": {
   "shadows": "george"
  },
  "type": "import"
 },
 "approxposterior.gpUtils.mean_squared_error": {
  "data": {
   "shadows": "sklearn.metrics.mean_squared_error"
  },
  "type": "import"
 },
 "approxposterior.gpUtils.minimize": {
  "data": {
   "shadows": "scipy.optimize.minimize"
  },
  "type": "import"
 },
 "approxposterior.gpUtils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "approxposterior.gpUtils.optimizeGP": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "approxposterior.gpUtils._grad_nll",
    "approxposterior.gpUtils._nll",
    "approxposterior.gpUtils.defaultHyperPrior",
    "len",
    "numpy.argmax",
    "numpy.array",
    "numpy.median",
    "numpy.min",
    "numpy.random.randn",
    "range",
    "scipy.optimize.minimize"
   ]
  },
  "type": "function"
 },
 "approxposterior.gpUtils.util": {
  "data": {
   "shadows": "utility"
  },
  "type": "import"
 },
 "approxposterior.likelihood": {
  "data": {},
  "type": "module"
 },
 "approxposterior.likelihood.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "approxposterior.likelihood.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "approxposterior.likelihood.rosen": {
  "data": {
   "shadows": "scipy.optimize.rosen"
  },
  "type": "import"
 },
 "approxposterior.likelihood.rosenbrockLnlike": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "scipy.optimize.rosen"
   ]
  },
  "type": "function"
 },
 "approxposterior.likelihood.rosenbrockLnprior": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.fabs",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "approxposterior.likelihood.rosenbrockLnprob": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "approxposterior.likelihood.rosenbrockLnlike",
    "approxposterior.likelihood.rosenbrockLnprior",
    "numpy.inf",
    "numpy.isfinite"
   ]
  },
  "type": "function"
 },
 "approxposterior.likelihood.rosenbrockSample": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "approxposterior.mcmcUtils": {
  "data": {},
  "type": "module"
 },
 "approxposterior.mcmcUtils.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "approxposterior.mcmcUtils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "approxposterior.mcmcUtils.validateMCMCKwargs": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "KeyError",
    "dict",
    "print"
   ]
  },
  "type": "function"
 },
 "approxposterior.tests.test_APRun": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "approxposterior.tests.test_APRun.test_run"
   ]
  },
  "type": "module"
 },
 "approxposterior.tests.test_APRun.approx": {
  "data": {
   "shadows": "approxposterior.approx"
  },
  "type": "import"
 },
 "approxposterior.tests.test_APRun.emcee": {
  "data": {
   "shadows": "emcee"
  },
  "type": "import"
 },
 "approxposterior.tests.test_APRun.george": {
  "data": {
   "shadows": "george"
  },
  "type": "import"
 },
 "approxposterior.tests.test_APRun.gpUtils": {
  "data": {
   "shadows": "approxposterior.gpUtils"
  },
  "type": "import"
 },
 "approxposterior.tests.test_APRun.lh": {
  "data": {
   "shadows": "approxposterior.likelihood"
  },
  "type": "import"
 },
 "approxposterior.tests.test_APRun.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "approxposterior.tests.test_APRun.test_run": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "approxposterior.approx.ApproxPosterior",
    "approxposterior.gpUtils.defaultGP",
    "approxposterior.likelihood.rosenbrockLnlike",
    "approxposterior.likelihood.rosenbrockLnprior",
    "approxposterior.likelihood.rosenbrockSample",
    "int",
    "len",
    "numpy.array",
    "numpy.fabs",
    "numpy.median",
    "numpy.random.seed",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "approxposterior.tests.test_GMM": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "approxposterior.tests.test_GMM.testGMMFit"
   ]
  },
  "type": "module"
 },
 "approxposterior.tests.test_GMM.gmmUtils": {
  "data": {
   "shadows": "approxposterior.gmmUtils"
  },
  "type": "import"
 },
 "approxposterior.tests.test_GMM.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "approxposterior.tests.test_GMM.testGMMFit": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "approxposterior.gmmUtils.fitGMM",
    "numpy.allclose",
    "numpy.array",
    "numpy.dot",
    "numpy.mean",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.random.shuffle",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "approxposterior.tests.test_GPUtil": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "approxposterior.tests.test_GPUtil.testUtilsGPAmp",
    "approxposterior.tests.test_GPUtil.testUtilsGPNoAmp"
   ]
  },
  "type": "module"
 },
 "approxposterior.tests.test_GPUtil.george": {
  "data": {
   "shadows": "george"
  },
  "type": "import"
 },
 "approxposterior.tests.test_GPUtil.gpUtils": {
  "data": {
   "shadows": "approxposterior.gpUtils"
  },
  "type": "import"
 },
 "approxposterior.tests.test_GPUtil.lh": {
  "data": {
   "shadows": "approxposterior.likelihood"
  },
  "type": "import"
 },
 "approxposterior.tests.test_GPUtil.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "approxposterior.tests.test_GPUtil.testUtilsGPAmp": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "approxposterior.gpUtils.defaultGP",
    "approxposterior.likelihood.rosenbrockLnlike",
    "approxposterior.likelihood.rosenbrockLnprior",
    "approxposterior.likelihood.rosenbrockSample",
    "approxposterior.utility.AGPUtility",
    "approxposterior.utility.BAPEUtility",
    "approxposterior.utility.NaiveUtility",
    "len",
    "numpy.allclose",
    "numpy.array",
    "numpy.random.seed",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "approxposterior.tests.test_GPUtil.testUtilsGPNoAmp": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "approxposterior.gpUtils.defaultGP",
    "approxposterior.likelihood.rosenbrockLnlike",
    "approxposterior.likelihood.rosenbrockLnprior",
    "approxposterior.likelihood.rosenbrockSample",
    "approxposterior.utility.AGPUtility",
    "approxposterior.utility.BAPEUtility",
    "approxposterior.utility.NaiveUtility",
    "len",
    "numpy.allclose",
    "numpy.array",
    "numpy.random.seed",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "approxposterior.tests.test_GPUtil.ut": {
  "data": {
   "shadows": "approxposterior.utility"
  },
  "type": "import"
 },
 "approxposterior.tests.test_Import": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "approxposterior.tests.test_Import.test_import"
   ]
  },
  "type": "module"
 },
 "approxposterior.tests.test_Import.approxposterior": {
  "data": {
   "shadows": "approxposterior"
  },
  "type": "import"
 },
 "approxposterior.tests.test_Import.emcee": {
  "data": {
   "shadows": "emcee"
  },
  "type": "import"
 },
 "approxposterior.tests.test_Import.test_import": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "approxposterior.tests.test_Import.emcee",
    "int"
   ]
  },
  "type": "function"
 },
 "approxposterior.tests.test_InitGP": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "approxposterior.tests.test_InitGP.testInitGPAmp",
    "approxposterior.tests.test_InitGP.testInitGPNoAmp"
   ]
  },
  "type": "module"
 },
 "approxposterior.tests.test_InitGP.george": {
  "data": {
   "shadows": "george"
  },
  "type": "import"
 },
 "approxposterior.tests.test_InitGP.gpUtils": {
  "data": {
   "shadows": "approxposterior.gpUtils"
  },
  "type": "import"
 },
 "approxposterior.tests.test_InitGP.lh": {
  "data": {
   "shadows": "approxposterior.likelihood"
  },
  "type": "import"
 },
 "approxposterior.tests.test_InitGP.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "approxposterior.tests.test_InitGP.testInitGPAmp": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "approxposterior.gpUtils.defaultGP",
    "approxposterior.likelihood.rosenbrockLnlike",
    "approxposterior.likelihood.rosenbrockLnprior",
    "approxposterior.likelihood.rosenbrockSample",
    "len",
    "numpy.allclose",
    "numpy.array",
    "numpy.random.seed",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "approxposterior.tests.test_InitGP.testInitGPNoAmp": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "approxposterior.gpUtils.defaultGP",
    "approxposterior.likelihood.rosenbrockLnlike",
    "approxposterior.likelihood.rosenbrockLnprior",
    "approxposterior.likelihood.rosenbrockSample",
    "len",
    "numpy.allclose",
    "numpy.array",
    "numpy.random.seed",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "approxposterior.tests.test_InitGP.ut": {
  "data": {
   "shadows": "approxposterior.utility"
  },
  "type": "import"
 },
 "approxposterior.tests.test_KL": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "approxposterior.tests.test_KL.testKLApproximation"
   ]
  },
  "type": "module"
 },
 "approxposterior.tests.test_KL.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "approxposterior.tests.test_KL.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "approxposterior.tests.test_KL.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "approxposterior.tests.test_KL.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "approxposterior.tests.test_KL.ss": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "approxposterior.tests.test_KL.testKLApproximation": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "approxposterior.utility.klNumerical",
    "numpy.fabs",
    "numpy.linspace",
    "numpy.random.seed",
    "scipy.stats.entropy",
    "scipy.stats.norm.pdf",
    "scipy.stats.norm.rvs"
   ]
  },
  "type": "function"
 },
 "approxposterior.tests.test_KL.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "approxposterior.tests.test_KL.ut": {
  "data": {
   "shadows": "approxposterior.utility"
  },
  "type": "import"
 },
 "approxposterior.tests.test_MAP": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "approxposterior.tests.test_MAP.testMAPAmp",
    "approxposterior.tests.test_MAP.testMAPNoAmp"
   ]
  },
  "type": "module"
 },
 "approxposterior.tests.test_MAP.approx": {
  "data": {
   "shadows": "approxposterior.approx"
  },
  "type": "import"
 },
 "approxposterior.tests.test_MAP.gpUtils": {
  "data": {
   "shadows": "approxposterior.gpUtils"
  },
  "type": "import"
 },
 "approxposterior.tests.test_MAP.lh": {
  "data": {
   "shadows": "approxposterior.likelihood"
  },
  "type": "import"
 },
 "approxposterior.tests.test_MAP.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "approxposterior.tests.test_MAP.testMAPAmp": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "approxposterior.approx.ApproxPosterior",
    "approxposterior.gpUtils.defaultGP",
    "approxposterior.likelihood.rosenbrockLnlike",
    "approxposterior.likelihood.rosenbrockLnprior",
    "approxposterior.likelihood.rosenbrockSample",
    "len",
    "numpy.allclose",
    "numpy.array",
    "numpy.random.seed",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "approxposterior.tests.test_MAP.testMAPNoAmp": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "approxposterior.approx.ApproxPosterior",
    "approxposterior.gpUtils.defaultGP",
    "approxposterior.likelihood.rosenbrockLnlike",
    "approxposterior.likelihood.rosenbrockLnprior",
    "approxposterior.likelihood.rosenbrockSample",
    "len",
    "numpy.allclose",
    "numpy.array",
    "numpy.random.seed",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "approxposterior.tests.test_OptimizeGP": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "approxposterior.tests.test_OptimizeGP.testGPOptAmp",
    "approxposterior.tests.test_OptimizeGP.testGPOptNoAmp"
   ]
  },
  "type": "module"
 },
 "approxposterior.tests.test_OptimizeGP.george": {
  "data": {
   "shadows": "george"
  },
  "type": "import"
 },
 "approxposterior.tests.test_OptimizeGP.gpu": {
  "data": {
   "shadows": "approxposterior.gpUtils"
  },
  "type": "import"
 },
 "approxposterior.tests.test_OptimizeGP.lh": {
  "data": {
   "shadows": "approxposterior.likelihood"
  },
  "type": "import"
 },
 "approxposterior.tests.test_OptimizeGP.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "approxposterior.tests.test_OptimizeGP.testGPOptAmp": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "approxposterior.gpUtils.defaultGP",
    "approxposterior.gpUtils.optimizeGP",
    "approxposterior.likelihood.rosenbrockLnlike",
    "approxposterior.likelihood.rosenbrockLnprior",
    "approxposterior.likelihood.rosenbrockSample",
    "len",
    "numpy.allclose",
    "numpy.array",
    "numpy.random.seed",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "approxposterior.tests.test_OptimizeGP.testGPOptNoAmp": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "approxposterior.gpUtils.defaultGP",
    "approxposterior.gpUtils.optimizeGP",
    "approxposterior.likelihood.rosenbrockLnlike",
    "approxposterior.likelihood.rosenbrockLnprior",
    "approxposterior.likelihood.rosenbrockSample",
    "len",
    "numpy.allclose",
    "numpy.array",
    "numpy.random.seed",
    "numpy.zeros",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "approxposterior.tests.test_OptimizeGP.ut": {
  "data": {
   "shadows": "approxposterior.utility"
  },
  "type": "import"
 },
 "approxposterior.tests.test_findNewPoint": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "approxposterior.tests.test_findNewPoint.testFindAmp",
    "approxposterior.tests.test_findNewPoint.testFindNoAmp"
   ]
  },
  "type": "module"
 },
 "approxposterior.tests.test_findNewPoint.approx": {
  "data": {
   "shadows": "approxposterior.approx"
  },
  "type": "import"
 },
 "approxposterior.tests.test_findNewPoint.george": {
  "data": {
   "shadows": "george"
  },
  "type": "import"
 },
 "approxposterior.tests.test_findNewPoint.gpUtils": {
  "data": {
   "shadows": "approxposterior.gpUtils"
  },
  "type": "import"
 },
 "approxposterior.tests.test_findNewPoint.lh": {
  "data": {
   "shadows": "approxposterior.likelihood"
  },
  "type": "import"
 },
 "approxposterior.tests.test_findNewPoint.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "approxposterior.tests.test_findNewPoint.testFindAmp": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "approxposterior.approx.ApproxPosterior",
    "approxposterior.gpUtils.defaultGP",
    "approxposterior.likelihood.rosenbrockLnlike",
    "approxposterior.likelihood.rosenbrockLnprior",
    "approxposterior.likelihood.rosenbrockSample",
    "len",
    "list",
    "numpy.allclose",
    "numpy.array",
    "numpy.random.seed",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "approxposterior.tests.test_findNewPoint.testFindNoAmp": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "approxposterior.approx.ApproxPosterior",
    "approxposterior.gpUtils.defaultGP",
    "approxposterior.likelihood.rosenbrockLnlike",
    "approxposterior.likelihood.rosenbrockLnprior",
    "approxposterior.likelihood.rosenbrockSample",
    "len",
    "list",
    "numpy.allclose",
    "numpy.array",
    "numpy.random.seed",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "approxposterior.utility": {
  "data": {},
  "type": "module"
 },
 "approxposterior.utility.AGPUtility": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "numpy.e",
    "numpy.inf",
    "numpy.isfinite",
    "numpy.log",
    "numpy.pi",
    "print",
    "priorFn"
   ]
  },
  "type": "function"
 },
 "approxposterior.utility.BAPEUtility": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "approxposterior.utility.logsubexp",
    "numpy.inf",
    "numpy.isfinite",
    "print",
    "priorFn"
   ]
  },
  "type": "function"
 },
 "approxposterior.utility.NaiveUtility": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "numpy.inf",
    "numpy.isfinite",
    "print",
    "priorFn"
   ]
  },
  "type": "function"
 },
 "approxposterior.utility.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "approxposterior.utility.erf": {
  "data": {
   "shadows": "scipy.special.erf"
  },
  "type": "import"
 },
 "approxposterior.utility.klNumerical": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.log",
    "numpy.sum",
    "p",
    "q"
   ]
  },
  "type": "function"
 },
 "approxposterior.utility.latinHypercubeSampling": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "len",
    "pyDOE.lhs",
    "range"
   ]
  },
  "type": "function"
 },
 "approxposterior.utility.lhs": {
  "data": {
   "shadows": "pyDOE.lhs"
  },
  "type": "import"
 },
 "approxposterior.utility.logsubexp": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.inf",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "approxposterior.utility.minimize": {
  "data": {
   "shadows": "scipy.optimize.minimize"
  },
  "type": "import"
 },
 "approxposterior.utility.minimizeObjective": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "fn",
    "numpy.all",
    "numpy.argmin",
    "numpy.array",
    "numpy.isfinite",
    "priorFn",
    "range",
    "sampleFn",
    "scipy.optimize.minimize"
   ]
  },
  "type": "function"
 },
 "approxposterior.utility.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 }
}