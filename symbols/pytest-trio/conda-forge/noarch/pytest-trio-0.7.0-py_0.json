{
 "pytest_trio": {
  "data": {},
  "type": "module"
 },
 "pytest_trio.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pytest_trio._tests": {
  "data": {},
  "type": "module"
 },
 "pytest_trio._tests.conftest": {
  "data": {},
  "type": "module"
 },
 "pytest_trio._tests.conftest.pytest_plugins": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pytest_trio._tests.helpers": {
  "data": {
   "symbols_in_volume": [
    "pytest_trio._tests.helpers.enable_trio_mode_trio_run_via_pytest_ini",
    "pytest_trio._tests.helpers.enable_trio_mode_via_conftest_py",
    "pytest_trio._tests.helpers.enable_trio_mode_via_pytest_ini",
    "pytest_trio._tests.helpers.pytest"
   ]
  },
  "type": "module"
 },
 "pytest_trio._tests.helpers.enable_trio_mode": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pytest_trio._tests.helpers.enable_trio_mode_trio_run_via_pytest_ini": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "pytest_trio._tests.helpers.enable_trio_mode_via_conftest_py": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "pytest_trio._tests.helpers.enable_trio_mode_via_pytest_ini": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "pytest_trio._tests.helpers.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pytest_trio._tests.test_async_fixture": {
  "data": {},
  "type": "module"
 },
 "pytest_trio._tests.test_async_fixture.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pytest_trio._tests.test_async_fixture.test_async_fixture_recomputed_for_each_test": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "pytest_trio._tests.test_async_fixture.test_async_within_sync_fixture": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "pytest_trio._tests.test_async_fixture.test_nested_async_fixture": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "pytest_trio._tests.test_async_fixture.test_raise_in_async_fixture_cause_pytest_error": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "pytest_trio._tests.test_async_fixture.pytest"
   ]
  },
  "type": "function"
 },
 "pytest_trio._tests.test_async_fixture.test_single_async_fixture": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "pytest_trio._tests.test_async_yield_fixture": {
  "data": {},
  "type": "module"
 },
 "pytest_trio._tests.test_async_yield_fixture.async_yield_implementation": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "pytest_trio._tests.test_async_yield_fixture.pytest"
   ]
  },
  "type": "function"
 },
 "pytest_trio._tests.test_async_yield_fixture.async_yield_implementation.patch_code": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "pytest_trio._tests.test_async_yield_fixture.re"
   ]
  },
  "type": "function"
 },
 "pytest_trio._tests.test_async_yield_fixture.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pytest_trio._tests.test_async_yield_fixture.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pytest_trio._tests.test_async_yield_fixture.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pytest_trio._tests.test_async_yield_fixture.test_async_yield_fixture_crashed_teardown_allow_other_teardowns": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "pytest_trio._tests.test_async_yield_fixture.async_yield_implementation"
   ]
  },
  "type": "function"
 },
 "pytest_trio._tests.test_async_yield_fixture.test_async_yield_fixture_with_multiple_yields": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "pytest_trio._tests.test_async_yield_fixture.async_yield_implementation"
   ]
  },
  "type": "function"
 },
 "pytest_trio._tests.test_async_yield_fixture.test_async_yield_fixture_with_nursery": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "pytest_trio._tests.test_async_yield_fixture.async_yield_implementation"
   ]
  },
  "type": "function"
 },
 "pytest_trio._tests.test_async_yield_fixture.test_async_yield_fixture_within_sync_fixture": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "pytest_trio._tests.test_async_yield_fixture.async_yield_implementation"
   ]
  },
  "type": "function"
 },
 "pytest_trio._tests.test_async_yield_fixture.test_async_yield_fixture_within_sync_yield_fixture": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "pytest_trio._tests.test_async_yield_fixture.async_yield_implementation"
   ]
  },
  "type": "function"
 },
 "pytest_trio._tests.test_async_yield_fixture.test_nested_async_yield_fixture": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "pytest_trio._tests.test_async_yield_fixture.async_yield_implementation"
   ]
  },
  "type": "function"
 },
 "pytest_trio._tests.test_async_yield_fixture.test_single_async_yield_fixture": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pytest_trio._tests.test_async_yield_fixture.async_yield_implementation"
   ]
  },
  "type": "function"
 },
 "pytest_trio._tests.test_basic": {
  "data": {},
  "type": "module"
 },
 "pytest_trio._tests.test_basic.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pytest_trio._tests.test_basic.test_async_test_as_class_method": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "pytest_trio._tests.test_basic.test_async_test_is_executed": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "pytest_trio._tests.test_basic.test_sync_function_with_trio_mark": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "pytest_trio._tests.test_basic.pytest"
   ]
  },
  "type": "function"
 },
 "pytest_trio._tests.test_clock_fixture": {
  "data": {
   "symbols_in_volume": [
    "pytest_trio._tests.test_clock_fixture.end_time",
    "pytest_trio._tests.test_clock_fixture.pytest",
    "pytest_trio._tests.test_clock_fixture.start_time",
    "pytest_trio._tests.test_clock_fixture.trio",
    "range"
   ]
  },
  "type": "module"
 },
 "pytest_trio._tests.test_clock_fixture.end_time": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pytest_trio._tests.test_clock_fixture.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pytest_trio._tests.test_clock_fixture.start_time": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pytest_trio._tests.test_clock_fixture.trio": {
  "data": {
   "shadows": "trio"
  },
  "type": "import"
 },
 "pytest_trio._tests.test_contextvars": {
  "data": {
   "symbols_in_volume": [
    "pytest_trio._tests.test_contextvars.contextvars",
    "pytest_trio._tests.test_contextvars.cv",
    "pytest_trio._tests.test_contextvars.pytest"
   ]
  },
  "type": "module"
 },
 "pytest_trio._tests.test_contextvars.contextvars": {
  "data": {
   "shadows": "contextvars"
  },
  "type": "import"
 },
 "pytest_trio._tests.test_contextvars.cv": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pytest_trio._tests.test_contextvars.cv_checker": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "pytest_trio._tests.test_contextvars.cv",
    "pytest_trio.trio_fixture"
   ]
  },
  "type": "function"
 },
 "pytest_trio._tests.test_contextvars.cv_setter": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pytest_trio._tests.test_contextvars.cv",
    "pytest_trio.trio_fixture"
   ]
  },
  "type": "function"
 },
 "pytest_trio._tests.test_contextvars.cv_setter2": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pytest_trio._tests.test_contextvars.cv",
    "pytest_trio.trio_fixture"
   ]
  },
  "type": "function"
 },
 "pytest_trio._tests.test_contextvars.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pytest_trio._tests.test_contextvars.trio_fixture": {
  "data": {
   "shadows": "pytest_trio.trio_fixture"
  },
  "type": "import"
 },
 "pytest_trio._tests.test_fixture_mistakes": {
  "data": {},
  "type": "module"
 },
 "pytest_trio._tests.test_fixture_mistakes.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pytest_trio._tests.test_fixture_mistakes.test_async_fixture_with_sync_test_in_trio_mode": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "enable_trio_mode"
   ]
  },
  "type": "function"
 },
 "pytest_trio._tests.test_fixture_mistakes.test_fixture_cancels_test_but_doesnt_raise": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "enable_trio_mode"
   ]
  },
  "type": "function"
 },
 "pytest_trio._tests.test_fixture_mistakes.test_too_many_clocks": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "enable_trio_mode"
   ]
  },
  "type": "function"
 },
 "pytest_trio._tests.test_fixture_mistakes.test_trio_fixture_with_non_trio_test": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "pytest_trio._tests.test_fixture_mistakes.test_trio_fixture_with_wrong_scope_in_trio_mode": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "enable_trio_mode"
   ]
  },
  "type": "function"
 },
 "pytest_trio._tests.test_fixture_mistakes.test_trio_fixture_with_wrong_scope_without_trio_mode": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "pytest_trio._tests.test_fixture_mistakes.trio_fixture": {
  "data": {
   "shadows": "pytest_trio.trio_fixture"
  },
  "type": "import"
 },
 "pytest_trio._tests.test_fixture_names": {
  "data": {
   "symbols_in_volume": [
    "pytest_trio._tests.test_fixture_names.pytest",
    "pytest_trio._tests.test_fixture_names.sibling_names",
    "pytest_trio._tests.test_fixture_names.task",
    "pytest_trio._tests.test_fixture_names.trio"
   ]
  },
  "type": "module"
 },
 "pytest_trio._tests.test_fixture_names.fixture_with_unique_name": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "pytest_trio._tests.test_fixture_names.trio",
    "pytest_trio.trio_fixture"
   ]
  },
  "type": "function"
 },
 "pytest_trio._tests.test_fixture_names.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pytest_trio._tests.test_fixture_names.sibling_names": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pytest_trio._tests.test_fixture_names.task": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pytest_trio._tests.test_fixture_names.trio": {
  "data": {
   "shadows": "trio"
  },
  "type": "import"
 },
 "pytest_trio._tests.test_fixture_names.trio_fixture": {
  "data": {
   "shadows": "pytest_trio.trio_fixture"
  },
  "type": "import"
 },
 "pytest_trio._tests.test_fixture_nursery": {
  "data": {
   "symbols_in_volume": [
    "pytest_trio._tests.test_fixture_nursery.buff",
    "pytest_trio._tests.test_fixture_nursery.listeners",
    "pytest_trio._tests.test_fixture_nursery.pytest",
    "pytest_trio._tests.test_fixture_nursery.rep",
    "pytest_trio._tests.test_fixture_nursery.stream",
    "pytest_trio._tests.test_fixture_nursery.trio"
   ]
  },
  "type": "module"
 },
 "pytest_trio._tests.test_fixture_nursery.buff": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "pytest_trio._tests.test_fixture_nursery.listeners": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pytest_trio._tests.test_fixture_nursery.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pytest_trio._tests.test_fixture_nursery.rep": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pytest_trio._tests.test_fixture_nursery.stream": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pytest_trio._tests.test_fixture_nursery.trio": {
  "data": {
   "shadows": "trio"
  },
  "type": "import"
 },
 "pytest_trio._tests.test_fixture_ordering": {
  "data": {},
  "type": "module"
 },
 "pytest_trio._tests.test_fixture_ordering.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pytest_trio._tests.test_fixture_ordering.test_background_crash_cancellation_propagation": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "pytest_trio._tests.test_fixture_ordering.pytest"
   ]
  },
  "type": "function"
 },
 "pytest_trio._tests.test_fixture_ordering.test_complex_cancel_interaction_regression": {
  "data": {
   "lineno": 294
  },
  "type": "function"
 },
 "pytest_trio._tests.test_fixture_ordering.test_error_collection": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "pytest_trio._tests.test_fixture_ordering.test_fixture_basic_ordering": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "pytest_trio._tests.test_fixture_ordering.test_nursery_fixture_teardown_ordering": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "pytest_trio._tests.test_hypothesis_interaction": {
  "data": {
   "symbols_in_volume": [
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.none",
    "int",
    "isinstance",
    "pytest_trio._tests.test_hypothesis_interaction.our_settings",
    "pytest_trio._tests.test_hypothesis_interaction.pytest"
   ]
  },
  "type": "module"
 },
 "pytest_trio._tests.test_hypothesis_interaction._trio_test_runner_factory": {
  "data": {
   "shadows": "pytest_trio.plugin._trio_test_runner_factory"
  },
  "type": "import"
 },
 "pytest_trio._tests.test_hypothesis_interaction.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "pytest_trio._tests.test_hypothesis_interaction.our_settings": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pytest_trio._tests.test_hypothesis_interaction.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pytest_trio._tests.test_hypothesis_interaction.scheduler_trace": {
  "data": {
   "shadows": "trio.tests.test_scheduler_determinism.scheduler_trace"
  },
  "type": "import"
 },
 "pytest_trio._tests.test_hypothesis_interaction.settings": {
  "data": {
   "shadows": "hypothesis.settings"
  },
  "type": "import"
 },
 "pytest_trio._tests.test_hypothesis_interaction.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "pytest_trio._tests.test_hypothesis_interaction.test_the_trio_scheduler_is_deterministic_if_seeded": {
  "data": {
   "shadows": "trio.tests.test_scheduler_determinism.test_the_trio_scheduler_is_deterministic_if_seeded"
  },
  "type": "import"
 },
 "pytest_trio._tests.test_hypothesis_interaction.test_the_trio_scheduler_is_deterministic_under_hypothesis": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "inner",
    "len",
    "pytest_trio._tests.test_hypothesis_interaction.our_settings",
    "pytest_trio._tests.test_hypothesis_interaction.pytest",
    "pytest_trio.plugin._trio_test_runner_factory",
    "set",
    "trio.tests.test_scheduler_determinism.scheduler_trace"
   ]
  },
  "type": "function"
 },
 "pytest_trio._tests.test_hypothesis_interaction.test_the_trio_scheduler_is_not_deterministic": {
  "data": {
   "shadows": "trio.tests.test_scheduler_determinism.test_the_trio_scheduler_is_not_deterministic"
  },
  "type": "import"
 },
 "pytest_trio._tests.test_hypothesis_interaction.trio": {
  "data": {
   "shadows": "trio"
  },
  "type": "import"
 },
 "pytest_trio._tests.test_sync_fixture": {
  "data": {
   "symbols_in_volume": [
    "pytest_trio._tests.test_sync_fixture.pytest",
    "pytest_trio._tests.test_sync_fixture.sync_fix"
   ]
  },
  "type": "module"
 },
 "pytest_trio._tests.test_sync_fixture.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pytest_trio._tests.test_sync_fixture.sync_fix": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "pytest_trio._tests.test_sync_fixture.pytest"
   ]
  },
  "type": "function"
 },
 "pytest_trio._tests.test_sync_fixture.test_single_yield_fixture": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "pytest_trio._tests.test_sync_fixture.test_single_yield_fixture_with_async_deps": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "pytest_trio._tests.test_sync_fixture.test_sync_yield_fixture_crashed_teardown_allow_other_teardowns": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "pytest_trio._tests.test_trio_mode": {
  "data": {},
  "type": "module"
 },
 "pytest_trio._tests.test_trio_mode.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pytest_trio._tests.test_trio_mode.qtrio_text": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pytest_trio._tests.test_trio_mode.test_closest_explicit_run_wins": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "pytest_trio._tests.test_trio_mode.qtrio_text",
    "pytest_trio._tests.test_trio_mode.test_text"
   ]
  },
  "type": "function"
 },
 "pytest_trio._tests.test_trio_mode.test_ini_run_wins_with_blank_marker": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "pytest_trio._tests.test_trio_mode.qtrio_text",
    "pytest_trio._tests.test_trio_mode.test_text"
   ]
  },
  "type": "function"
 },
 "pytest_trio._tests.test_trio_mode.test_invalid_trio_run_fails": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "pytest_trio._tests.test_trio_mode.test_text"
   ]
  },
  "type": "function"
 },
 "pytest_trio._tests.test_trio_mode.test_qtrio_just_run_configuration": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "pytest_trio._tests.test_trio_mode.qtrio_text",
    "pytest_trio._tests.test_trio_mode.test_text"
   ]
  },
  "type": "function"
 },
 "pytest_trio._tests.test_trio_mode.test_text": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "pytest_trio._tests.test_trio_mode.test_trio_mode": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "enable_trio_mode",
    "pytest_trio._tests.test_trio_mode.test_text"
   ]
  },
  "type": "function"
 },
 "pytest_trio._tests.test_trio_mode.test_trio_mode_and_qtrio_marker": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "pytest_trio._tests.test_trio_mode.qtrio_text",
    "pytest_trio._tests.test_trio_mode.test_text"
   ]
  },
  "type": "function"
 },
 "pytest_trio._tests.test_trio_mode.test_trio_mode_and_qtrio_run_configuration": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "pytest_trio._tests.test_trio_mode.qtrio_text",
    "pytest_trio._tests.test_trio_mode.test_text"
   ]
  },
  "type": "function"
 },
 "pytest_trio._version": {
  "data": {},
  "type": "module"
 },
 "pytest_trio._version.__version__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "pytest_trio.enable_trio_mode": {
  "data": {},
  "type": "module"
 },
 "pytest_trio.enable_trio_mode.__all__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pytest_trio.enable_trio_mode.pytest_collection_modifyitems": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "automark"
   ]
  },
  "type": "function"
 },
 "pytest_trio.enable_trio_mode.pytest_fixture_setup": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "handle_fixture"
   ]
  },
  "type": "function"
 },
 "pytest_trio.plugin": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "hypothesis.register_random",
    "pytest_trio.plugin.contextvars",
    "pytest_trio.plugin.trio"
   ]
  },
  "type": "module"
 },
 "pytest_trio.plugin.Clock": {
  "data": {
   "shadows": "trio.abc.Clock"
  },
  "type": "import"
 },
 "pytest_trio.plugin.Coroutine": {
  "data": {
   "shadows": "collections.abc.Coroutine"
  },
  "type": "import"
 },
 "pytest_trio.plugin.Generator": {
  "data": {
   "shadows": "collections.abc.Generator"
  },
  "type": "import"
 },
 "pytest_trio.plugin.Instrument": {
  "data": {
   "shadows": "trio.abc.Instrument"
  },
  "type": "import"
 },
 "pytest_trio.plugin.MockClock": {
  "data": {
   "shadows": "trio.testing.MockClock"
  },
  "type": "import"
 },
 "pytest_trio.plugin.NURSERY_FIXTURE_PLACEHOLDER": {
  "data": {
   "lineno": 530
  },
  "type": "class"
 },
 "pytest_trio.plugin.TrioFixture": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "BaseException",
    "RuntimeError",
    "StopAsyncIteration",
    "StopIteration",
    "async_generator.async_generator",
    "async_generator.asynccontextmanager",
    "async_generator.isasyncgen",
    "async_generator.yield_",
    "collections.abc.Coroutine",
    "collections.abc.Generator",
    "isinstance",
    "pytest_trio.plugin.canary",
    "pytest_trio.plugin.outcome",
    "pytest_trio.plugin.trio"
   ]
  },
  "type": "class"
 },
 "pytest_trio.plugin.TrioFixture.__init__": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "pytest_trio.plugin.trio",
    "set"
   ]
  },
  "type": "function"
 },
 "pytest_trio.plugin.TrioFixture.register_and_collect_dependencies": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "isinstance",
    "pytest_trio.plugin.TrioFixture",
    "set"
   ]
  },
  "type": "function"
 },
 "pytest_trio.plugin.TrioTestContext": {
  "data": {
   "lineno": 133
  },
  "type": "class"
 },
 "pytest_trio.plugin.TrioTestContext.__init__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "pytest_trio.plugin.TrioTestContext.crash": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "pytest_trio.plugin._is_trio_fixture": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "any",
    "async_generator.isasyncgenfunction",
    "getattr",
    "inspect.iscoroutinefunction",
    "isinstance",
    "pytest_trio.plugin.TrioFixture"
   ]
  },
  "type": "function"
 },
 "pytest_trio.plugin._trio_test": {
  "data": {
   "lineno": 317
  },
  "type": "function"
 },
 "pytest_trio.plugin._trio_test.decorator": {
  "data": {
   "lineno": 327
  },
  "type": "function"
 },
 "pytest_trio.plugin._trio_test.decorator.wrapper": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "ValueError",
    "functools.partial",
    "functools.wraps",
    "isinstance",
    "len",
    "run",
    "trio.abc.Clock",
    "trio.abc.Instrument"
   ]
  },
  "type": "function"
 },
 "pytest_trio.plugin._trio_test_runner_factory": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "RuntimeError",
    "getattr",
    "inspect.iscoroutinefunction",
    "pytest_trio.plugin.TrioFixture",
    "pytest_trio.plugin.TrioTestContext",
    "pytest_trio.plugin._trio_test",
    "pytest_trio.plugin.canary",
    "pytest_trio.plugin.choose_run",
    "pytest_trio.plugin.contextvars",
    "pytest_trio.plugin.pytest",
    "pytest_trio.plugin.trio",
    "run"
   ]
  },
  "type": "function"
 },
 "pytest_trio.plugin.async_generator": {
  "data": {
   "shadows": "async_generator.async_generator"
  },
  "type": "import"
 },
 "pytest_trio.plugin.asynccontextmanager": {
  "data": {
   "shadows": "async_generator.asynccontextmanager"
  },
  "type": "import"
 },
 "pytest_trio.plugin.autojump_clock": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "pytest_trio.plugin.pytest",
    "trio.testing.MockClock"
   ]
  },
  "type": "function"
 },
 "pytest_trio.plugin.automark": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "hasattr",
    "inspect.iscoroutinefunction",
    "pytest_trio.plugin.pytest",
    "pytest_trio.plugin.trio",
    "run"
   ]
  },
  "type": "function"
 },
 "pytest_trio.plugin.canary": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "pytest_trio.plugin.choose_run": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "ValueError",
    "pytest_trio.plugin.qtrio",
    "pytest_trio.plugin.trio",
    "run"
   ]
  },
  "type": "function"
 },
 "pytest_trio.plugin.contextvars": {
  "data": {
   "shadows": "contextvars"
  },
  "type": "import"
 },
 "pytest_trio.plugin.format_exception": {
  "data": {
   "shadows": "traceback.format_exception"
  },
  "type": "import"
 },
 "pytest_trio.plugin.handle_fixture": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "RuntimeError",
    "pytest_trio.plugin.TrioFixture",
    "pytest_trio.plugin._is_trio_fixture"
   ]
  },
  "type": "function"
 },
 "pytest_trio.plugin.isasyncgen": {
  "data": {
   "shadows": "async_generator.isasyncgen"
  },
  "type": "import"
 },
 "pytest_trio.plugin.isasyncgenfunction": {
  "data": {
   "shadows": "async_generator.isasyncgenfunction"
  },
  "type": "import"
 },
 "pytest_trio.plugin.iscoroutinefunction": {
  "data": {
   "shadows": "inspect.iscoroutinefunction"
  },
  "type": "import"
 },
 "pytest_trio.plugin.isgeneratorfunction": {
  "data": {
   "shadows": "inspect.isgeneratorfunction"
  },
  "type": "import"
 },
 "pytest_trio.plugin.mock_clock": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "pytest_trio.plugin.pytest",
    "trio.testing.MockClock"
   ]
  },
  "type": "function"
 },
 "pytest_trio.plugin.nursery": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "pytest_trio.plugin.NURSERY_FIXTURE_PLACEHOLDER",
    "pytest_trio.plugin.trio_fixture"
   ]
  },
  "type": "function"
 },
 "pytest_trio.plugin.outcome": {
  "data": {
   "shadows": "outcome"
  },
  "type": "import"
 },
 "pytest_trio.plugin.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pytest_trio.plugin.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pytest_trio.plugin.pytest_addoption": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "pytest_trio.plugin.pytest_collection_modifyitems": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "pytest_trio.plugin.automark",
    "pytest_trio.plugin.choose_run"
   ]
  },
  "type": "function"
 },
 "pytest_trio.plugin.pytest_configure": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "pytest_trio.plugin.pytest_exception_interact": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "issubclass",
    "pytest_trio.plugin.pytest",
    "pytest_trio.plugin.trio",
    "traceback.format_exception"
   ]
  },
  "type": "function"
 },
 "pytest_trio.plugin.pytest_fixture_setup": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "pytest_trio.plugin.handle_fixture"
   ]
  },
  "type": "function"
 },
 "pytest_trio.plugin.pytest_runtest_call": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "pytest_trio.plugin._trio_test_runner_factory",
    "pytest_trio.plugin.pytest"
   ]
  },
  "type": "function"
 },
 "pytest_trio.plugin.qtrio": {
  "data": {
   "shadows": "qtrio"
  },
  "type": "import"
 },
 "pytest_trio.plugin.register_random": {
  "data": {
   "shadows": "hypothesis.register_random"
  },
  "type": "import"
 },
 "pytest_trio.plugin.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pytest_trio.plugin.trio": {
  "data": {
   "shadows": "trio"
  },
  "type": "import"
 },
 "pytest_trio.plugin.trio_fixture": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "pytest_trio.plugin.pytest"
   ]
  },
  "type": "function"
 },
 "pytest_trio.plugin.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "pytest_trio.plugin.yield_": {
  "data": {
   "shadows": "async_generator.yield_"
  },
  "type": "import"
 }
}