{
 "*": {
  "data": {
   "imports": [
    "holopy.scattering.interface"
   ]
  },
  "type": "star-import"
 },
 "holopy": {
  "data": {
   "symbols_in_volume": [
    "holopy.__version__",
    "int",
    "tuple"
   ]
  },
  "type": "module"
 },
 "holopy.__version__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "holopy.__version_info__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "holopy.check_display": {
  "data": {
   "shadows": "holopy.core.check_display"
  },
  "type": "import"
 },
 "holopy.core": {
  "data": {},
  "type": "module"
 },
 "holopy.core.check_display": {
  "data": {
   "shadows": "holopy.core.io.check_display"
  },
  "type": "import"
 },
 "holopy.core.copy_metadata": {
  "data": {
   "shadows": "holopy.core.metadata.copy_metadata"
  },
  "type": "import"
 },
 "holopy.core.detector_grid": {
  "data": {
   "shadows": "holopy.core.metadata.detector_grid"
  },
  "type": "import"
 },
 "holopy.core.detector_points": {
  "data": {
   "shadows": "holopy.core.metadata.detector_points"
  },
  "type": "import"
 },
 "holopy.core.errors": {
  "data": {},
  "type": "module"
 },
 "holopy.core.errors.BadImage": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "holopy.core.errors.CoordSysError": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "holopy.core.errors.CoordSysError.__str__": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "holopy.core.errors.DependencyMissing": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "holopy.core.errors.DependencyMissing.__init__": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "holopy.core.errors.DependencyMissing.__str__": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "holopy.core.errors.LoadError": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "holopy.core.errors.LoadError.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "holopy.core.errors.NORMALS_DEPRECATION_MESSAGE": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "holopy.core.errors.NoMetadata": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "holopy.core.errors.NoMetadata.__str__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "holopy.core.holopy_object": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "holopy.core.holopy_object.FullLoader",
    "holopy.core.holopy_object.yaml"
   ]
  },
  "type": "module"
 },
 "holopy.core.holopy_object.FullLoader": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "holopy.core.holopy_object.HoloPyObject": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "holopy.core.holopy_object.Serializable"
   ]
  },
  "type": "class"
 },
 "holopy.core.holopy_object.HoloPyObject.__eq__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "holopy.core.holopy_object.HoloPyObject.__repr__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "holopy.core.holopy_object.HoloPyObject.__str__": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "holopy.core.holopy_object.HoloPyObject._dict": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "dict",
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.core.holopy_object.HoloPyObject._iteritems": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "list",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "holopy.core.holopy_object.HoloPyObject.from_yaml": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "holopy.core.holopy_object.HoloPyObject.like_me": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "holopy.core.holopy_object.HoloPyObject.to_yaml": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "classmethod",
    "holopy.core.holopy_object.yaml"
   ]
  },
  "type": "function"
 },
 "holopy.core.holopy_object.Serializable": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "holopy.core.holopy_object.SerializableMetaclass",
    "holopy.core.holopy_object.yaml"
   ]
  },
  "type": "class"
 },
 "holopy.core.holopy_object.Serializable.to_yaml": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "holopy.core.holopy_object.SerializableMetaclass": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "holopy.core.holopy_object.yaml"
   ]
  },
  "type": "class"
 },
 "holopy.core.holopy_object.SerializableMetaclass.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "holopy.core.holopy_object.YAMLLOADERS",
    "holopy.core.holopy_object.yaml",
    "super"
   ]
  },
  "type": "function"
 },
 "holopy.core.holopy_object.YAMLLOADERS": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "holopy.core.holopy_object.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.core.holopy_object.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "holopy.core.io": {
  "data": {},
  "type": "module"
 },
 "holopy.core.io.check_display": {
  "data": {
   "shadows": "holopy.core.io.vis.check_display"
  },
  "type": "import"
 },
 "holopy.core.io.display_image": {
  "data": {
   "shadows": "holopy.core.io.vis.display_image"
  },
  "type": "import"
 },
 "holopy.core.io.get_example_data": {
  "data": {
   "shadows": "holopy.core.io.io.get_example_data"
  },
  "type": "import"
 },
 "holopy.core.io.get_example_data_path": {
  "data": {
   "shadows": "holopy.core.io.io.get_example_data_path"
  },
  "type": "import"
 },
 "holopy.core.io.io": {
  "data": {},
  "type": "module"
 },
 "holopy.core.io.io.Accumulator": {
  "data": {
   "lineno": 522
  },
  "type": "class"
 },
 "holopy.core.io.io.Accumulator.__init__": {
  "data": {
   "lineno": 526
  },
  "type": "function"
 },
 "holopy.core.io.io.Accumulator._std": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.io.Accumulator.cv": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "IndexError",
    "numpy.array",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.io.Accumulator.mean": {
  "data": {
   "lineno": 542
  },
  "type": "function"
 },
 "holopy.core.io.io.Accumulator.push": {
  "data": {
   "lineno": 531
  },
  "type": "function"
 },
 "holopy.core.io.io.BadImage": {
  "data": {
   "shadows": "holopy.core.errors.BadImage"
  },
  "type": "import"
 },
 "holopy.core.io.io.FullLoader": {
  "data": {
   "shadows": "holopy.core.holopy_object.FullLoader"
  },
  "type": "import"
 },
 "holopy.core.io.io.LoadError": {
  "data": {
   "shadows": "holopy.core.errors.LoadError"
  },
  "type": "import"
 },
 "holopy.core.io.io.NORMALS_DEPRECATION_MESSAGE": {
  "data": {
   "shadows": "holopy.core.errors.NORMALS_DEPRECATION_MESSAGE"
  },
  "type": "import"
 },
 "holopy.core.io.io.NoMetadata": {
  "data": {
   "shadows": "holopy.core.errors.NoMetadata"
  },
  "type": "import"
 },
 "holopy.core.io.io.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "holopy.core.io.io._save_im": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "Error",
    "PIL.Image.fromarray",
    "PIL.TiffImagePlugin.ImageFileDirectory_v2",
    "holopy.core.io.io.os",
    "holopy.core.io.io.pack_attrs",
    "holopy.core.io.io.tiflist",
    "holopy.core.io.io.yaml",
    "str"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.io.attr_coords": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "holopy.core.io.io.copy_metadata": {
  "data": {
   "shadows": "holopy.core.metadata.copy_metadata"
  },
  "type": "import"
 },
 "holopy.core.io.io.data_grid": {
  "data": {
   "shadows": "holopy.core.metadata.data_grid"
  },
  "type": "import"
 },
 "holopy.core.io.io.default_extension": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "holopy.core.io.io.os"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.io.dict_without": {
  "data": {
   "shadows": "holopy.core.utils.dict_without"
  },
  "type": "import"
 },
 "holopy.core.io.io.display_image": {
  "data": {
   "shadows": "holopy.core.io.vis.display_image"
  },
  "type": "import"
 },
 "holopy.core.io.io.ensure_array": {
  "data": {
   "shadows": "holopy.core.utils.ensure_array"
  },
  "type": "import"
 },
 "holopy.core.io.io.get_example_data": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "holopy.core.io.io.get_example_data_path",
    "load"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.io.get_example_data_path": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "holopy.core.io.io.os",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.io.get_spacing": {
  "data": {
   "shadows": "holopy.core.metadata.get_spacing"
  },
  "type": "import"
 },
 "holopy.core.io.io.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "holopy.core.io.io.ifd2": {
  "data": {
   "shadows": "PIL.TiffImagePlugin.ImageFileDirectory_v2"
  },
  "type": "import"
 },
 "holopy.core.io.io.illumination": {
  "data": {
   "shadows": "holopy.core.metadata.illumination"
  },
  "type": "import"
 },
 "holopy.core.io.io.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "holopy.core.io.io.load": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "KeyError",
    "OSError",
    "PIL.Image.open",
    "TypeError",
    "UnicodeDecodeError",
    "ValueError",
    "getattr",
    "holopy.core.errors.NoMetadata",
    "holopy.core.io.io.default_extension",
    "holopy.core.io.io.importlib",
    "holopy.core.io.io.os",
    "holopy.core.io.io.tiflist",
    "holopy.core.io.io.unpack_attrs",
    "holopy.core.io.io.warnings",
    "holopy.core.io.io.yaml",
    "holopy.core.io.serialize.ReaderError",
    "holopy.core.io.serialize.load",
    "holopy.core.metadata.illumination",
    "len",
    "list",
    "load_image",
    "open",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.io.load_average": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "Accumulator",
    "ValueError",
    "enumerate",
    "extent",
    "holopy.core.errors.LoadError",
    "holopy.core.errors.NORMALS_DEPRECATION_MESSAGE",
    "holopy.core.io.io.glob",
    "holopy.core.io.io.load_image",
    "holopy.core.io.io.os",
    "holopy.core.metadata.copy_metadata",
    "holopy.core.metadata.get_spacing",
    "holopy.core.metadata.illumination",
    "holopy.core.metadata.illumination.values",
    "holopy.core.metadata.update_metadata",
    "holopy.core.utils.ensure_array",
    "isinstance",
    "len",
    "numpy.isscalar",
    "numpy.repeat",
    "str",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.io.load_average.extent": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "numpy.around"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.io.load_image": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "PIL.Image.open",
    "ValueError",
    "dict",
    "holopy.core.errors.BadImage",
    "holopy.core.errors.LoadError",
    "holopy.core.errors.NORMALS_DEPRECATION_MESSAGE",
    "holopy.core.io.io.os",
    "holopy.core.io.io.warnings",
    "holopy.core.io.io.yaml",
    "holopy.core.metadata.data_grid",
    "holopy.core.metadata.illumination",
    "holopy.core.metadata.to_vector",
    "holopy.core.utils.ensure_array",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.asarray",
    "open",
    "range",
    "xarray.DataArray",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.core.io.io.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "holopy.core.io.io.pack_attrs": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "holopy.core.io.io.attr_coords",
    "holopy.core.io.io.yaml",
    "holopy.core.metadata.get_spacing",
    "holopy.core.utils.ensure_array",
    "isinstance",
    "list",
    "str",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.io.pilimage": {
  "data": {
   "shadows": "PIL.Image"
  },
  "type": "import"
 },
 "holopy.core.io.io.save": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "hasattr",
    "holopy.core.io.io.default_extension",
    "holopy.core.io.io.os",
    "holopy.core.io.io.pack_attrs",
    "holopy.core.io.io.tiflist",
    "holopy.core.io.serialize.save",
    "isinstance",
    "save_image",
    "str"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.io.save_image": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "_save_im",
    "holopy.core.io.vis.display_image"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.io.save_images": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "ValueError",
    "_save_im",
    "holopy.core.io.vis.display_image",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.io.serialize": {
  "data": {
   "shadows": "holopy.core.io.serialize"
  },
  "type": "import"
 },
 "holopy.core.io.io.tiflist": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "holopy.core.io.io.to_vector": {
  "data": {
   "shadows": "holopy.core.metadata.to_vector"
  },
  "type": "import"
 },
 "holopy.core.io.io.unpack_attrs": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "AttributeError",
    "holopy.core.holopy_object.FullLoader",
    "holopy.core.io.io.attr_coords",
    "holopy.core.io.io.warnings",
    "holopy.core.io.io.yaml",
    "holopy.core.utils.dict_without",
    "holopy.inference.result.warn_text",
    "len",
    "list",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.io.update_metadata": {
  "data": {
   "shadows": "holopy.core.metadata.update_metadata"
  },
  "type": "import"
 },
 "holopy.core.io.io.warn_text": {
  "data": {
   "shadows": "holopy.inference.result.warn_text"
  },
  "type": "import"
 },
 "holopy.core.io.io.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "holopy.core.io.io.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "holopy.core.io.io.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "holopy.core.io.load": {
  "data": {
   "shadows": "holopy.core.io.io.load"
  },
  "type": "import"
 },
 "holopy.core.io.load_average": {
  "data": {
   "shadows": "holopy.core.io.io.load_average"
  },
  "type": "import"
 },
 "holopy.core.io.load_image": {
  "data": {
   "shadows": "holopy.core.io.io.load_image"
  },
  "type": "import"
 },
 "holopy.core.io.save": {
  "data": {
   "shadows": "holopy.core.io.io.save"
  },
  "type": "import"
 },
 "holopy.core.io.save_image": {
  "data": {
   "shadows": "holopy.core.io.io.save_image"
  },
  "type": "import"
 },
 "holopy.core.io.save_images": {
  "data": {
   "shadows": "holopy.core.io.io.save_images"
  },
  "type": "import"
 },
 "holopy.core.io.serialize": {
  "data": {
   "symbols_in_volume": [
    "holopy.core.holopy_object.SerializableMetaclass",
    "holopy.core.holopy_object.YAMLLOADERS",
    "holopy.core.io.serialize._pickle_method",
    "holopy.core.io.serialize._unpickle_method",
    "holopy.core.io.serialize.class_loader",
    "holopy.core.io.serialize.class_representer",
    "holopy.core.io.serialize.complex_constructor",
    "holopy.core.io.serialize.complex_representer",
    "holopy.core.io.serialize.copyreg",
    "holopy.core.io.serialize.ignore_aliases",
    "holopy.core.io.serialize.instancemethod_constructor",
    "holopy.core.io.serialize.instancemethod_representer",
    "holopy.core.io.serialize.ndarray_representer",
    "holopy.core.io.serialize.numpy_dtype_loader",
    "holopy.core.io.serialize.numpy_dtype_representer",
    "holopy.core.io.serialize.numpy_float_representer",
    "holopy.core.io.serialize.numpy_int_representer",
    "holopy.core.io.serialize.tuple_representer",
    "holopy.core.io.serialize.types",
    "holopy.core.io.serialize.yaml",
    "numpy.complex128",
    "numpy.dtype",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.ndarray",
    "staticmethod",
    "tuple"
   ]
  },
  "type": "module"
 },
 "holopy.core.io.serialize.FullLoader": {
  "data": {
   "shadows": "holopy.core.holopy_object.FullLoader"
  },
  "type": "import"
 },
 "holopy.core.io.serialize.ReaderError": {
  "data": {
   "shadows": "yaml.reader.ReaderError"
  },
  "type": "import"
 },
 "holopy.core.io.serialize.SerializableMetaclass": {
  "data": {
   "shadows": "holopy.core.holopy_object.SerializableMetaclass"
  },
  "type": "import"
 },
 "holopy.core.io.serialize.YAMLLOADERS": {
  "data": {
   "shadows": "holopy.core.holopy_object.YAMLLOADERS"
  },
  "type": "import"
 },
 "holopy.core.io.serialize._pickle_method": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "holopy.core.io.serialize._unpickle_method": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.serialize.class_loader": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "__import__"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.serialize.class_representer": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "holopy.core.io.serialize.complex_constructor": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "complex"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.serialize.complex_representer": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.serialize.copyreg": {
  "data": {
   "shadows": "copyreg"
  },
  "type": "import"
 },
 "holopy.core.io.serialize.ignore_aliases": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "float",
    "int",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.serialize.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "holopy.core.io.serialize.instancemethod_constructor": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "getattr",
    "holopy.core.io.serialize.yaml",
    "obj"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.serialize.instancemethod_representer": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "holopy.core.holopy_object.SerializableMetaclass",
    "holopy.core.io.serialize.yaml",
    "isinstance",
    "len",
    "obj"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.serialize.load": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "holopy.core.holopy_object.FullLoader",
    "holopy.core.io.serialize.yaml",
    "isinstance",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.serialize.ndarray_representer": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "holopy.core.io.serialize.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.core.io.serialize.numpy_dtype_loader": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.serialize.numpy_dtype_representer": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "holopy.core.io.serialize.numpy_float_representer": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.serialize.numpy_int_representer": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.serialize.save": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "holopy.core.io.serialize.yaml",
    "isinstance",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.serialize.tuple_representer": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.serialize.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "holopy.core.io.serialize.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "holopy.core.io.show": {
  "data": {
   "shadows": "holopy.core.io.vis.show"
  },
  "type": "import"
 },
 "holopy.core.io.show_scatterer_slices": {
  "data": {
   "shadows": "holopy.core.io.vis.show_scatterer_slices"
  },
  "type": "import"
 },
 "holopy.core.io.vis": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "holopy.core.io.vis.BadImage": {
  "data": {
   "shadows": "holopy.core.errors.BadImage"
  },
  "type": "import"
 },
 "holopy.core.io.vis.DependencyMissing": {
  "data": {
   "shadows": "holopy.core.errors.DependencyMissing"
  },
  "type": "import"
 },
 "holopy.core.io.vis.Show2D": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "holopy.core.io.vis.Show2D.__call__": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.vis.Show2D.__init__": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "holopy.core.errors.DependencyMissing",
    "holopy.core.io.vis._NO_MATPLOTLIB",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.gray",
    "numpy.diff"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.vis.Show2D._title": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.vis.Show2D.click": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "holopy.core.io.vis.sys",
    "numpy.array",
    "print"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.vis.Show2D.draw": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "holopy.core.io.vis.Show2D.format_coord": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.interp",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.vis.Show2D.save": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "holopy.core.io.vis.Show2D.save_all": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "Error",
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.vis.VisualizationNotImplemented": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "holopy.core.io.vis.VisualizationNotImplemented.__init__": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "holopy.core.io.vis.VisualizationNotImplemented.__str__": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "holopy.core.io.vis._NO_MATPLOTLIB": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "holopy.core.io.vis.check_display": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "holopy.core.io.vis.show",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.vis.clean_concat": {
  "data": {
   "shadows": "holopy.core.metadata.clean_concat"
  },
  "type": "import"
 },
 "holopy.core.io.vis.cm": {
  "data": {
   "shadows": "matplotlib.cm"
  },
  "type": "import"
 },
 "holopy.core.io.vis.data_grid": {
  "data": {
   "shadows": "holopy.core.metadata.data_grid"
  },
  "type": "import"
 },
 "holopy.core.io.vis.display_image": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "enumerate",
    "hasattr",
    "holopy.core.errors.BadImage",
    "holopy.core.metadata.clean_concat",
    "holopy.core.metadata.data_grid",
    "holopy.core.utils.ensure_array",
    "holopy.core.utils.ensure_scalar",
    "int",
    "isinstance",
    "len",
    "numpy.NaN",
    "numpy.abs",
    "numpy.all",
    "numpy.argmin",
    "numpy.array",
    "numpy.iscomplex",
    "numpy.maximum",
    "numpy.minimum",
    "range",
    "str",
    "warnings.warn",
    "xarray.DataArray",
    "xarray.full_like"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.vis.ensure_array": {
  "data": {
   "shadows": "holopy.core.utils.ensure_array"
  },
  "type": "import"
 },
 "holopy.core.io.vis.ensure_scalar": {
  "data": {
   "shadows": "holopy.core.utils.ensure_scalar"
  },
  "type": "import"
 },
 "holopy.core.io.vis.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.core.io.vis.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "holopy.core.io.vis.save_plot": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "Show2D",
    "display_image",
    "holopy.core.io.vis.VisualizationNotImplemented",
    "isinstance",
    "len",
    "list",
    "numpy.ndarray",
    "tuple",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.vis.show": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "Show2D",
    "display_image",
    "holopy.core.io.vis.VisualizationNotImplemented",
    "isinstance",
    "list",
    "numpy.ndarray",
    "tuple",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.vis.show_scatterer_slices": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "show2d"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.vis.show_sphere_cluster": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "NotImplementedError",
    "arange",
    "float",
    "import_mayavi",
    "len",
    "matplotlib.cm.gist_rainbow",
    "max"
   ]
  },
  "type": "function"
 },
 "holopy.core.io.vis.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "holopy.core.io.vis.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "holopy.core.io.vis.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "holopy.core.load": {
  "data": {
   "shadows": "holopy.core.io.load"
  },
  "type": "import"
 },
 "holopy.core.load_image": {
  "data": {
   "shadows": "holopy.core.io.load_image"
  },
  "type": "import"
 },
 "holopy.core.math": {
  "data": {
   "symbols_in_volume": [
    "holopy.core.math.keep_in_same_coordinates",
    "holopy.core.math.transform_cartesian_to_cylindrical",
    "holopy.core.math.transform_cartesian_to_spherical",
    "holopy.core.math.transform_cylindrical_to_cartesian",
    "holopy.core.math.transform_cylindrical_to_spherical",
    "holopy.core.math.transform_spherical_to_cartesian",
    "holopy.core.math.transform_spherical_to_cylindrical"
   ]
  },
  "type": "module"
 },
 "holopy.core.math._transformation_lut": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "holopy.core.math.arccos": {
  "data": {
   "shadows": "numpy.arccos"
  },
  "type": "import"
 },
 "holopy.core.math.arctan2": {
  "data": {
   "shadows": "numpy.arctan2"
  },
  "type": "import"
 },
 "holopy.core.math.cartesian_distance": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "holopy.core.math.chisq": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "holopy.core.math.cos": {
  "data": {
   "shadows": "numpy.cos"
  },
  "type": "import"
 },
 "holopy.core.math.find_transformation_function": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "KeyError",
    "NotImplementedError",
    "holopy.core.math._transformation_lut"
   ]
  },
  "type": "function"
 },
 "holopy.core.math.keep_in_same_coordinates": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "holopy.core.math.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.core.math.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "holopy.core.math.repeat_sing_dims": {
  "data": {
   "shadows": "holopy.core.utils.repeat_sing_dims"
  },
  "type": "import"
 },
 "holopy.core.math.rotate_points": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "rotation_matrix"
   ]
  },
  "type": "function"
 },
 "holopy.core.math.rotation_matrix": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cos",
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "holopy.core.math.rsq": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "holopy.core.math.sin": {
  "data": {
   "shadows": "numpy.sin"
  },
  "type": "import"
 },
 "holopy.core.math.sqrt": {
  "data": {
   "shadows": "numpy.sqrt"
  },
  "type": "import"
 },
 "holopy.core.math.to_cartesian": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "holopy.core.math.transform_spherical_to_cartesian",
    "holopy.core.utils.repeat_sing_dims"
   ]
  },
  "type": "function"
 },
 "holopy.core.math.transform_cartesian_to_cylindrical": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.arctan2",
    "numpy.array",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "holopy.core.math.transform_cartesian_to_spherical": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.arctan2",
    "numpy.array",
    "numpy.linalg.norm",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "holopy.core.math.transform_cylindrical_to_cartesian": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "holopy.core.math.transform_cylindrical_to_spherical": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "numpy.arctan2",
    "numpy.array",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "holopy.core.math.transform_spherical_to_cartesian": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "holopy.core.math.transform_spherical_to_cylindrical": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "holopy.core.metadata": {
  "data": {},
  "type": "module"
 },
 "holopy.core.metadata.CoordSysError": {
  "data": {
   "shadows": "holopy.core.errors.CoordSysError"
  },
  "type": "import"
 },
 "holopy.core.metadata.NORMALS_DEPRECATION_MESSAGE": {
  "data": {
   "shadows": "holopy.core.errors.NORMALS_DEPRECATION_MESSAGE"
  },
  "type": "import"
 },
 "holopy.core.metadata.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "holopy.core.metadata.clean_concat": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "isinstance",
    "numpy.roll",
    "xarray.DataArray",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "holopy.core.metadata.copy_metadata": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "find_and_rename",
    "hasattr",
    "isinstance",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.core.metadata.copy_metadata.find_and_rename": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "holopy.core.metadata.data_grid": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "holopy.core.metadata.update_metadata",
    "len",
    "list",
    "make_coords",
    "numpy.expand_dims",
    "numpy.isscalar",
    "numpy.repeat",
    "warnings.warn",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.core.metadata.default_norms": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "holopy.core.errors.CoordSysError",
    "holopy.core.math.to_cartesian",
    "holopy.core.metadata.to_vector",
    "holopy.core.metadata.vector",
    "numpy.vstack",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.core.metadata.detector_grid": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "data_grid",
    "holopy.core.errors.NORMALS_DEPRECATION_MESSAGE",
    "len",
    "list",
    "numpy.isscalar",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "holopy.core.metadata.detector_points": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "holopy.core.errors.CoordSysError",
    "holopy.core.errors.NORMALS_DEPRECATION_MESSAGE",
    "holopy.core.utils.repeat_sing_dims",
    "holopy.core.utils.updated",
    "len",
    "numpy.inf",
    "numpy.zeros",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.core.metadata.dict_to_array": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "hasattr",
    "isinstance",
    "list",
    "sorted",
    "xarray.DataArray",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "holopy.core.metadata.ensure_array": {
  "data": {
   "shadows": "holopy.core.utils.ensure_array"
  },
  "type": "import"
 },
 "holopy.core.metadata.flat": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "holopy.core.metadata.from_flat": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "holopy.core.metadata.get_extents": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "ValueError",
    "get_extent",
    "holopy.core.metadata.detector_grid",
    "numpy.ndim"
   ]
  },
  "type": "function"
 },
 "holopy.core.metadata.get_extents.get_extent": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "float",
    "holopy.core.metadata.detector_grid",
    "len",
    "numpy.diff"
   ]
  },
  "type": "function"
 },
 "holopy.core.metadata.get_spacing": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "ValueError",
    "holopy.core.metadata.detector_grid",
    "numpy.allclose",
    "numpy.array",
    "numpy.diff"
   ]
  },
  "type": "function"
 },
 "holopy.core.metadata.get_values": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "holopy.core.metadata.illumination": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "holopy.core.metadata.make_coords": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "holopy.core.utils.ensure_array",
    "numpy.arange",
    "numpy.isscalar",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "holopy.core.metadata.make_subset_data": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "flat",
    "holopy.core.metadata.copy_metadata",
    "len",
    "numpy.random.choice",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "holopy.core.metadata.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.core.metadata.repeat_sing_dims": {
  "data": {
   "shadows": "holopy.core.utils.repeat_sing_dims"
  },
  "type": "import"
 },
 "holopy.core.metadata.to_cartesian": {
  "data": {
   "shadows": "holopy.core.math.to_cartesian"
  },
  "type": "import"
 },
 "holopy.core.metadata.to_vector": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "dict",
    "hasattr",
    "holopy.core.metadata.vector",
    "isinstance",
    "numpy.append",
    "numpy.array",
    "numpy.sqrt",
    "numpy.sum",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.core.metadata.update_metadata": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "ValueError",
    "dict_to_array",
    "hasattr",
    "holopy.core.errors.NORMALS_DEPRECATION_MESSAGE",
    "holopy.core.utils.updated",
    "to_vector"
   ]
  },
  "type": "function"
 },
 "holopy.core.metadata.updated": {
  "data": {
   "shadows": "holopy.core.utils.updated"
  },
  "type": "import"
 },
 "holopy.core.metadata.vector": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "holopy.core.metadata.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "holopy.core.metadata.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "holopy.core.metadata.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "holopy.core.process": {
  "data": {},
  "type": "module"
 },
 "holopy.core.process.add_noise": {
  "data": {
   "shadows": "holopy.core.process.img_proc.add_noise"
  },
  "type": "import"
 },
 "holopy.core.process.bg_correct": {
  "data": {
   "shadows": "holopy.core.process.img_proc.bg_correct"
  },
  "type": "import"
 },
 "holopy.core.process.center_find": {
  "data": {
   "shadows": "holopy.core.process.centerfinder.center_find"
  },
  "type": "import"
 },
 "holopy.core.process.centerfinder": {
  "data": {},
  "type": "module"
 },
 "holopy.core.process.centerfinder.center_find": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "copy.copy",
    "hough",
    "image_gradient",
    "scipy.ndimage.filters.gaussian_filter"
   ]
  },
  "type": "function"
 },
 "holopy.core.process.centerfinder.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "holopy.core.process.centerfinder.filters": {
  "data": {
   "shadows": "scipy.ndimage.filters"
  },
  "type": "import"
 },
 "holopy.core.process.centerfinder.hough": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "int",
    "min",
    "numpy.arange",
    "numpy.around",
    "numpy.array",
    "numpy.average",
    "numpy.mgrid",
    "numpy.sqrt",
    "numpy.unravel_index",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "holopy.core.process.centerfinder.image_gradient": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "float",
    "normalize",
    "numpy.squeeze",
    "scipy.ndimage.sobel"
   ]
  },
  "type": "function"
 },
 "holopy.core.process.centerfinder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.core.process.centerfinder.sobel": {
  "data": {
   "shadows": "scipy.ndimage.sobel"
  },
  "type": "import"
 },
 "holopy.core.process.detrend": {
  "data": {
   "shadows": "holopy.core.process.img_proc.detrend"
  },
  "type": "import"
 },
 "holopy.core.process.fft": {
  "data": {
   "shadows": "holopy.core.process.fourier.fft"
  },
  "type": "import"
 },
 "holopy.core.process.fourier": {
  "data": {},
  "type": "module"
 },
 "holopy.core.process.fourier.ensure_array": {
  "data": {
   "shadows": "holopy.core.utils.ensure_array"
  },
  "type": "import"
 },
 "holopy.core.process.fourier.fft": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "isinstance",
    "numpy.fft.fft",
    "numpy.fft.fft2",
    "numpy.fft.fftshift",
    "transform_metadata",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.core.process.fourier.ft_coord": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "holopy.core.process.fourier.get_spacing",
    "len",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "holopy.core.process.fourier.ft_coords": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "holopy.core.process.fourier.ft_coord"
   ]
  },
  "type": "function"
 },
 "holopy.core.process.fourier.get_spacing": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ValueError",
    "numpy.allclose",
    "numpy.diff"
   ]
  },
  "type": "function"
 },
 "holopy.core.process.fourier.ifft": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "isinstance",
    "numpy.fft.fftshift",
    "numpy.fft.ifft",
    "numpy.fft.ifft2",
    "transform_metadata",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.core.process.fourier.ift_coord": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "holopy.core.process.fourier.get_spacing",
    "len",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "holopy.core.process.fourier.ift_coords": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "holopy.core.process.fourier.ift_coord"
   ]
  },
  "type": "function"
 },
 "holopy.core.process.fourier.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.core.process.fourier.transform_metadata": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ft_coords",
    "ift_coords",
    "list"
   ]
  },
  "type": "function"
 },
 "holopy.core.process.fourier.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "holopy.core.process.fourier.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "holopy.core.process.hough": {
  "data": {
   "shadows": "holopy.core.process.centerfinder.hough"
  },
  "type": "import"
 },
 "holopy.core.process.ifft": {
  "data": {
   "shadows": "holopy.core.process.fourier.ifft"
  },
  "type": "import"
 },
 "holopy.core.process.image_gradient": {
  "data": {
   "shadows": "holopy.core.process.centerfinder.image_gradient"
  },
  "type": "import"
 },
 "holopy.core.process.img_proc": {
  "data": {},
  "type": "module"
 },
 "holopy.core.process.img_proc.add_noise": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "copy_metadata",
    "get_values",
    "simulate_noise"
   ]
  },
  "type": "function"
 },
 "holopy.core.process.img_proc.bg_correct": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "BadImage",
    "copy_metadata",
    "get_spacing",
    "hasattr",
    "holopy.core.process.img_proc.zero_filter",
    "list",
    "update_metadata"
   ]
  },
  "type": "function"
 },
 "holopy.core.process.img_proc.detrend": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "copy_metadata",
    "scipy.signal.detrend"
   ]
  },
  "type": "function"
 },
 "holopy.core.process.img_proc.dt": {
  "data": {
   "shadows": "scipy.signal.detrend"
  },
  "type": "import"
 },
 "holopy.core.process.img_proc.gaussian_filter": {
  "data": {
   "shadows": "scipy.ndimage.gaussian_filter"
  },
  "type": "import"
 },
 "holopy.core.process.img_proc.normalize": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "copy_metadata"
   ]
  },
  "type": "function"
 },
 "holopy.core.process.img_proc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.core.process.img_proc.simulate_noise": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.poisson",
    "scipy.ndimage.gaussian_filter"
   ]
  },
  "type": "function"
 },
 "holopy.core.process.img_proc.subimage": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "copy_metadata",
    "int",
    "len",
    "numpy.isscalar",
    "numpy.repeat",
    "numpy.round",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "holopy.core.process.img_proc.subimage.intr": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "intr",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "holopy.core.process.img_proc.zero_filter": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "BadImage",
    "copy_metadata",
    "len",
    "numpy.ones",
    "numpy.roll",
    "numpy.sum",
    "numpy.where",
    "print",
    "zip"
   ]
  },
  "type": "function"
 },
 "holopy.core.process.normalize": {
  "data": {
   "shadows": "holopy.core.process.img_proc.normalize"
  },
  "type": "import"
 },
 "holopy.core.process.simulate_noise": {
  "data": {
   "shadows": "holopy.core.process.img_proc.simulate_noise"
  },
  "type": "import"
 },
 "holopy.core.process.subimage": {
  "data": {
   "shadows": "holopy.core.process.img_proc.subimage"
  },
  "type": "import"
 },
 "holopy.core.process.zero_filter": {
  "data": {
   "shadows": "holopy.core.process.img_proc.zero_filter"
  },
  "type": "import"
 },
 "holopy.core.save": {
  "data": {
   "shadows": "holopy.core.io.save"
  },
  "type": "import"
 },
 "holopy.core.save_image": {
  "data": {
   "shadows": "holopy.core.io.save_image"
  },
  "type": "import"
 },
 "holopy.core.save_images": {
  "data": {
   "shadows": "holopy.core.io.save_images"
  },
  "type": "import"
 },
 "holopy.core.show": {
  "data": {
   "shadows": "holopy.core.io.show"
  },
  "type": "import"
 },
 "holopy.core.tests": {
  "data": {},
  "type": "module"
 },
 "holopy.core.tests.common": {
  "data": {},
  "type": "module"
 },
 "holopy.core.tests.common.HoloPyCatchWarnings": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "nose.plugins.Plugin"
   ]
  },
  "type": "class"
 },
 "holopy.core.tests.common.HoloPyCatchWarnings.beforeTest": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "holopy.core.tests.common.warnings"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.common.HoloPyCatchWarnings.configure": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "holopy.core.tests.common.HoloPyCatchWarnings",
    "super"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.common.HoloPyCatchWarnings.options": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "holopy.core.tests.common.HoloPyCatchWarnings",
    "holopy.core.tests.common.os",
    "super"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.common.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "holopy.core.tests.common.Plugin": {
  "data": {
   "shadows": "nose.plugins.Plugin"
  },
  "type": "import"
 },
 "holopy.core.tests.common.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "holopy.core.tests.common.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "holopy.core.tests.common.assert_method_equal": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "TypeError",
    "act_obj",
    "des_obj",
    "holopy.core.tests.common.assert_obj_close",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.common.assert_obj_close": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "assert_method_equal",
    "collections.OrderedDict",
    "dict",
    "enumerate",
    "hasattr",
    "holopy.core.tests.common.types",
    "isinstance",
    "len",
    "list",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "tuple",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.common.assert_pickle_roundtrip": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "assert_obj_close",
    "holopy.core.tests.common.pickle"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.common.assert_read_matches_write": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "assert_obj_close",
    "hasattr",
    "holopy.core.io.load",
    "holopy.core.io.save",
    "holopy.core.tests.common.tempfile"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.common.get_example_data": {
  "data": {
   "shadows": "holopy.core.io.get_example_data"
  },
  "type": "import"
 },
 "holopy.core.tests.common.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "holopy.core.tests.common.load": {
  "data": {
   "shadows": "holopy.core.io.load"
  },
  "type": "import"
 },
 "holopy.core.tests.common.make_golds": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "getattr",
    "holopy.core.io.save",
    "holopy.core.tests.common.os",
    "holopy.core.tests.common.shutil",
    "print"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.common.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "holopy.core.tests.common.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "holopy.core.tests.common.save": {
  "data": {
   "shadows": "holopy.core.io.save"
  },
  "type": "import"
 },
 "holopy.core.tests.common.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "holopy.core.tests.common.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "holopy.core.tests.common.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "holopy.core.tests.common.verify": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "OSError",
    "dict",
    "getattr",
    "holopy.core.io.load",
    "holopy.core.tests.common.assert_obj_close",
    "holopy.core.tests.common.inspect",
    "holopy.core.tests.common.os",
    "holopy.core.tests.common.yaml",
    "isinstance",
    "open"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.common.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "holopy.core.tests.common.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "holopy.core.tests.common.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "holopy.core.tests.test_errors": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "holopy.core.tests.test_errors.unittest"
   ]
  },
  "type": "module"
 },
 "holopy.core.tests.test_errors.TestErrors": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "holopy.core.tests.test_errors.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.core.tests.test_errors.TestErrors.test_BadImage": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "BadImage",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_errors.TestErrors.test_CoordSysError": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "CoordSysError",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_errors.TestErrors.test_DependencyMissing": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "DependencyMissing",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_errors.TestErrors.test_LoadError": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "LoadError",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_errors.TestErrors.test_NoMetadata": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "NoMetadata",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_errors._raise": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "holopy.core.tests.test_errors.attr": {
  "data": {
   "shadows": "nose.plugins.attrib.attr"
  },
  "type": "import"
 },
 "holopy.core.tests.test_errors.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "holopy.core.tests.test_io.unittest"
   ]
  },
  "type": "module"
 },
 "holopy.core.tests.test_io.Accumulator": {
  "data": {
   "shadows": "holopy.core.io.io.Accumulator"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io.HoloPyObject": {
  "data": {
   "shadows": "holopy.core.holopy_object.HoloPyObject"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io.IMAGE01_METADATA": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "holopy.core.tests.test_io.NoMetadata": {
  "data": {
   "shadows": "holopy.core.errors.NoMetadata"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io.TestAccumulator": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "holopy.core.tests.test_io.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.core.tests.test_io.TestAccumulator.test_2_colour_noise_sd": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "holopy.core.io.get_example_data_path",
    "holopy.core.io.load_average",
    "nose.plugins.attrib.attr",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.TestAccumulator.test_calculate_hologram_noise_sd": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "_load_raw_example_data",
    "holopy.core.io.get_example_data_path",
    "holopy.core.io.io.Accumulator",
    "holopy.core.io.load_average",
    "nose.plugins.attrib.attr",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.TestAccumulator.test_cv": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "holopy.core.io.io.Accumulator",
    "nose.plugins.attrib.attr",
    "numpy.arange",
    "numpy.mean",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.TestAccumulator.test_cv_no_data": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "holopy.core.io.io.Accumulator",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.TestAccumulator.test_mean": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "holopy.core.io.io.Accumulator",
    "nose.plugins.attrib.attr",
    "numpy.arange",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.TestAccumulator.test_mean_hologram_type": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "_load_example_data_backgrounds",
    "holopy.core.io.io.Accumulator",
    "holopy.core.tests.test_io.xarray",
    "isinstance",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.TestAccumulator.test_mean_hologram_value": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "_load_example_data_backgrounds",
    "holopy.core.io.io.Accumulator",
    "nose.plugins.attrib.attr",
    "numpy.allclose",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.TestAccumulator.test_push": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "holopy.core.io.io.Accumulator",
    "nose.plugins.attrib.attr",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.TestAccumulator.test_push_hologram": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "_load_example_data_backgrounds",
    "holopy.core.io.io.Accumulator",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.TestAccumulator.test_std": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "holopy.core.io.io.Accumulator",
    "nose.plugins.attrib.attr",
    "numpy.arange",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.TestAccumulator.test_std_no_data": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "holopy.core.io.io.Accumulator",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.TestLoadingAndSaving": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "holopy.core.tests.test_io.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.core.tests.test_io.TestLoadingAndSaving.load_image_with_metadata": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "holopy.core.load_image",
    "holopy.core.metadata.get_spacing",
    "holopy.core.tests.test_io.warnings"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.TestLoadingAndSaving.setUp": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "holopy.core.tests.common.get_example_data",
    "holopy.core.tests.test_io.tempfile"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.TestLoadingAndSaving.tearDown": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "holopy.core.tests.test_io.shutil"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.TestLoadingAndSaving.test_auto_scaling": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "holopy.core.load_image",
    "holopy.core.metadata.get_spacing",
    "holopy.core.save_image",
    "holopy.core.tests.test_io.os",
    "holopy.core.tests.test_io.warnings",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.TestLoadingAndSaving.test_default_save_is_tif": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "holopy.core.save_image",
    "holopy.core.tests.common.assert_obj_close",
    "holopy.core.tests.test_io.os",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.TestLoadingAndSaving.test_hologram_io": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "holopy.core.process.normalize",
    "holopy.core.tests.common.assert_read_matches_write",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.TestLoadingAndSaving.test_ignoring_metadata_warning": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "UserWarning",
    "holopy.core.load_image",
    "holopy.core.save_image",
    "holopy.core.tests.test_io.os",
    "nose.plugins.attrib.attr",
    "str"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.TestLoadingAndSaving.test_image_io": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "holopy.core.save_image",
    "holopy.core.tests.common.assert_obj_close",
    "holopy.core.tests.test_io.os",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.TestLoadingAndSaving.test_load_average_normals_raises_error_with_deprecation_message": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "ValueError",
    "holopy.core.io.load_average",
    "nose.plugins.attrib.attr",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.TestLoadingAndSaving.test_load_func_from_save_image_func": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "holopy.core.load",
    "holopy.core.save_image",
    "holopy.core.tests.common.assert_obj_close",
    "holopy.core.tests.test_io.os",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.TestLoadingAndSaving.test_load_func_from_save_image_func_with_scaling": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "holopy.core.load",
    "holopy.core.save_image",
    "holopy.core.tests.common.assert_obj_close",
    "holopy.core.tests.test_io.os",
    "nose.plugins.attrib.attr",
    "numpy.around"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.TestLoadingAndSaving.test_load_image_normals_raises_error_with_deprecation_message": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "ValueError",
    "holopy.core.load_image",
    "nose.plugins.attrib.attr",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.TestLoadingAndSaving.test_no_metadata": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "PIL.Image.fromarray",
    "PIL.TiffImagePlugin.ImageFileDirectory_v2",
    "holopy.core.errors.NoMetadata",
    "holopy.core.load",
    "holopy.core.load_image",
    "holopy.core.metadata.copy_metadata",
    "holopy.core.metadata.get_spacing",
    "holopy.core.tests.common.assert_obj_close",
    "holopy.core.tests.test_io.os",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.TestLoadingAndSaving.test_non_tif_image": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "holopy.core.save_image",
    "holopy.core.tests.common.assert_obj_close",
    "holopy.core.tests.test_io.os",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.TestLoadingAndSaving.test_save_images": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "holopy.core.load",
    "holopy.core.save_images",
    "holopy.core.tests.test_io.os",
    "nose.plugins.attrib.attr",
    "numpy.all",
    "zip"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.TestLoadingAndSaving.test_save_images_checks_names_and_holograms_are_same_length": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ValueError",
    "holopy.core.save_images",
    "holopy.core.tests.test_io.os",
    "len",
    "nose.plugins.attrib.attr",
    "range"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.TestLoadingAndSaving.test_save_load_h5": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "holopy.core.load",
    "holopy.core.save",
    "holopy.core.tests.common.assert_obj_close",
    "holopy.core.tests.test_io.os",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.TestLoadingAndSaving.test_saving_16_bit": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "holopy.core.save_image",
    "holopy.core.tests.common.assert_obj_close",
    "holopy.core.tests.test_io.os",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.TestLoadingAndSaving.test_specify_scaling": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "holopy.core.save_image",
    "holopy.core.tests.common.assert_obj_close",
    "holopy.core.tests.test_io.os",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.TestMemoryUsage": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "holopy.core.tests.test_io.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.core.tests.test_io.TestMemoryUsage.test_load_average_doesnt_use_excess_mem": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "_load_example_data_backgrounds",
    "_load_raw_example_data",
    "holopy.core.io.get_example_data_path",
    "holopy.core.io.load_average",
    "holopy.core.tests.test_io.importlib",
    "holopy.core.tests.test_io.memory_profiler",
    "holopy.core.tests.test_io.unittest",
    "numpy.ptp",
    "sum"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io._load_example_data_backgrounds": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "holopy.core.io.get_example_data_path",
    "holopy.core.load_image",
    "holopy.core.tests.test_io.IMAGE01_METADATA"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io._load_raw_example_data": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "holopy.core.io.get_example_data_path",
    "holopy.core.load_image",
    "holopy.core.tests.test_io.IMAGE01_METADATA"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io.assert_obj_close": {
  "data": {
   "shadows": "holopy.core.tests.common.assert_obj_close"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io.assert_read_matches_write": {
  "data": {
   "shadows": "holopy.core.tests.common.assert_read_matches_write"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io.attr": {
  "data": {
   "shadows": "nose.plugins.attrib.attr"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io.copy_metadata": {
  "data": {
   "shadows": "holopy.core.metadata.copy_metadata"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io.get_example_data": {
  "data": {
   "shadows": "holopy.core.tests.common.get_example_data"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io.get_example_data_path": {
  "data": {
   "shadows": "holopy.core.io.get_example_data_path"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io.get_spacing": {
  "data": {
   "shadows": "holopy.core.metadata.get_spacing"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io.hp": {
  "data": {
   "shadows": "holopy"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io.ifd2": {
  "data": {
   "shadows": "PIL.TiffImagePlugin.ImageFileDirectory_v2"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io.load": {
  "data": {
   "shadows": "holopy.core.load"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io.load_average": {
  "data": {
   "shadows": "holopy.core.io.load_average"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io.load_image": {
  "data": {
   "shadows": "holopy.core.load_image"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io.memory_profiler": {
  "data": {
   "shadows": "memory_profiler"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io.normalize": {
  "data": {
   "shadows": "holopy.core.process.normalize"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io.pilimage": {
  "data": {
   "shadows": "PIL.Image"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io.save": {
  "data": {
   "shadows": "holopy.core.save"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io.save_image": {
  "data": {
   "shadows": "holopy.core.save_image"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io.save_images": {
  "data": {
   "shadows": "holopy.core.save_images"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io.test_custom_yaml_output": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "holopy.core.tests.test_io.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.core.tests.test_io.test_custom_yaml_output.test_yaml_output_of_numpy_types": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "AssertionError",
    "holopy.core.tests.test_io.yaml",
    "nose.plugins.attrib.attr",
    "numpy.dtype",
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.test_custom_yaml_output.test_yaml_output_of_serializable": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "S",
    "holopy.core.tests.test_io.yaml",
    "nose.plugins.attrib.attr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.test_custom_yaml_output.test_yaml_output_of_serializable.S": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "holopy.core.holopy_object.HoloPyObject"
   ]
  },
  "type": "class"
 },
 "holopy.core.tests.test_io.test_custom_yaml_output.test_yaml_output_of_serializable.S.__init__": {
  "data": {
   "lineno": 224
  },
  "type": "function"
 },
 "holopy.core.tests.test_io.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io.xarray": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "holopy.core.tests.test_io.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "holopy.core.tests.test_metadata": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "holopy.core.tests.test_metadata.unittest"
   ]
  },
  "type": "module"
 },
 "holopy.core.tests.test_metadata.CoordSysError": {
  "data": {
   "shadows": "holopy.core.errors.CoordSysError"
  },
  "type": "import"
 },
 "holopy.core.tests.test_metadata.METADATA_VALUES": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "holopy.core.tests.test_metadata.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "holopy.core.tests.test_metadata.TOLS": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "holopy.core.tests.test_metadata.TestCleanConcat": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "holopy.core.tests.test_metadata.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.core.tests.test_metadata.TestCleanConcat.test_concatenates_data": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "holopy.core.metadata.clean_concat",
    "make_data",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestCleanConcat.test_preserves_data_order": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "holopy.core.metadata.clean_concat",
    "make_data",
    "nose.plugins.attrib.attr",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestCleanConcat.test_preserves_metadata_keys": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "hasattr",
    "holopy.core.metadata.clean_concat",
    "holopy.core.metadata.update_metadata",
    "holopy.core.tests.test_metadata.METADATA_VALUES",
    "make_data",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestCleanConcat.test_preserves_metadata_values": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "getattr",
    "holopy.core.metadata.clean_concat",
    "holopy.core.metadata.update_metadata",
    "holopy.core.tests.test_metadata.METADATA_VALUES",
    "make_data",
    "nose.plugins.attrib.attr",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestCopyMetadata": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "holopy.core.tests.test_metadata.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.core.tests.test_metadata.TestCopyMetadata.test_copies_coords": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "holopy.core.metadata.copy_metadata",
    "make_data",
    "make_metadata",
    "nose.plugins.attrib.attr",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestCopyMetadata.test_copies_metadata_keys": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "hasattr",
    "holopy.core.metadata.copy_metadata",
    "holopy.core.tests.test_metadata.METADATA_VALUES",
    "make_data",
    "make_metadata",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestCopyMetadata.test_copies_metadata_values": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "getattr",
    "holopy.core.metadata.copy_metadata",
    "holopy.core.tests.test_metadata.METADATA_VALUES",
    "make_data",
    "make_metadata",
    "nose.plugins.attrib.attr",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestCopyMetadata.test_copies_name": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "holopy.core.metadata.copy_metadata",
    "make_data",
    "make_metadata",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestCopyMetadata.test_does_not_change_data": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "holopy.core.metadata.copy_metadata",
    "make_data",
    "make_metadata",
    "nose.plugins.attrib.attr",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestDetectorGrid": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "holopy.core.tests.test_metadata.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.core.tests.test_metadata.TestDetectorGrid.test_extra_dims_when_dict": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "dict",
    "holopy.core.metadata.detector_grid",
    "nose.plugins.attrib.attr",
    "numpy.arange",
    "zip"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestDetectorGrid.test_extra_dims_when_ordereddict": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "holopy.core.metadata.detector_grid",
    "nose.plugins.attrib.attr",
    "numpy.arange",
    "zip"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestDetectorGrid.test_name_is_stored": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_grid",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestDetectorGrid.test_normals_are_deprecated_with_error": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "holopy.core.metadata.detector_grid",
    "nose.plugins.attrib.attr",
    "numpy.array",
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestDetectorGrid.test_pads_shape_with_leading_1": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_grid",
    "len",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestDetectorGrid.test_returned_shape_is_correct": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_grid",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestDetectorPoints": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "holopy.core.tests.test_metadata.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.core.tests.test_metadata.TestDetectorPoints.test_data_is_stored_as_zeros_of_corect_size": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_points",
    "nose.plugins.attrib.attr",
    "numpy.all",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestDetectorPoints.test_name_defaults_to_data": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_points",
    "nose.plugins.attrib.attr",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestDetectorPoints.test_name_is_stored": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_points",
    "nose.plugins.attrib.attr",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestDetectorPoints.test_normals_raises_error_with_deprecation_message": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "ValueError",
    "holopy.core.metadata.detector_points",
    "nose.plugins.attrib.attr",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestDetectorPoints.test_r_defaults_to_inf_when_thetaphi_passed": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_points",
    "nose.plugins.attrib.attr",
    "numpy.all",
    "numpy.isinf",
    "numpy.pi",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestDetectorPoints.test_raises_error_when_no_coordinates_passed": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "holopy.core.errors.CoordSysError",
    "holopy.core.metadata.detector_points",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestDetectorPoints.test_stores_r_as_array_when_scalar_r_passed": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_points",
    "nose.plugins.attrib.attr",
    "numpy.all",
    "numpy.pi",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestDetectorPoints.test_stores_rthetaphi_as_correct_shape_when_rthetaphi_passed": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_points",
    "nose.plugins.attrib.attr",
    "numpy.pi",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestDetectorPoints.test_stores_rthetaphi_correct_values_when_rthetaphi_passed": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_points",
    "nose.plugins.attrib.attr",
    "numpy.all",
    "numpy.pi",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestDetectorPoints.test_stores_xyz_as_correct_shape_when_xyz_passed": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_points",
    "nose.plugins.attrib.attr",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestDetectorPoints.test_stores_xyz_correct_values_when_xyz_passed": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_points",
    "nose.plugins.attrib.attr",
    "numpy.all",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestDetectorPoints.test_stores_z_as_array_when_scalar_z_passed": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_points",
    "nose.plugins.attrib.attr",
    "numpy.all",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestDetectorPoints.test_z_defaults_to_zero_when_xy_passed": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_points",
    "nose.plugins.attrib.attr",
    "numpy.all",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestGetExtents": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "holopy.core.tests.test_metadata.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.core.tests.test_metadata.TestGetExtents.test_on_detector_grid_when_size_is_1": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_grid",
    "holopy.core.metadata.get_extents",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestGetExtents.test_on_detector_grid_when_spacing_is_0": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_grid",
    "holopy.core.metadata.get_extents",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestGetExtents.test_on_detector_grid_when_spacing_is_anisotropic": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_grid",
    "holopy.core.metadata.get_extents",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestGetExtents.test_on_detector_grid_when_spacing_is_isotropic": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_grid",
    "holopy.core.metadata.get_extents",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestGetExtents.test_returns_empty_when_dims_is_point": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "ValueError",
    "holopy.core.metadata.detector_points",
    "holopy.core.metadata.get_extents",
    "nose.plugins.attrib.attr",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestGetSpacing": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "holopy.core.tests.test_metadata.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.core.tests.test_metadata.TestGetSpacing.test_on_different_spacings": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_grid",
    "holopy.core.metadata.get_spacing",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestGetSpacing.test_on_same_spacing": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_grid",
    "holopy.core.metadata.get_spacing",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestGetSpacing.test_raises_error_when_xspacing_is_unequal": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "ValueError",
    "holopy.core.metadata.detector_points",
    "holopy.core.metadata.get_spacing",
    "nose.plugins.attrib.attr",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestGetSpacing.test_raises_error_when_yspacing_is_unequal": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "ValueError",
    "holopy.core.metadata.detector_points",
    "holopy.core.metadata.get_spacing",
    "nose.plugins.attrib.attr",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestMakeSubsetData": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "holopy.core.tests.test_metadata.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.core.tests.test_metadata.TestMakeSubsetData.test_returns_correct_number_of_pixels": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "holopy.core.metadata.make_subset_data",
    "make_data",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestMakeSubsetData.test_returns_correct_number_of_pixels_on_detector_points": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "holopy.core.metadata.make_subset_data",
    "holopy.core.tests.test_metadata.unittest",
    "make_points",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestMakeSubsetData.test_returns_correct_xy_coords": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "enumerate",
    "holopy.core.metadata.make_subset_data",
    "make_data",
    "nose.plugins.attrib.attr",
    "numpy.nonzero"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestMakeSubsetData.test_returns_correct_z_coords": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "holopy.core.metadata.make_subset_data",
    "make_data",
    "nose.plugins.attrib.attr",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestMakeSubsetData.test_returns_data_when_nothing_passed": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "holopy.core.metadata.make_subset_data",
    "make_data",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestMakeSubsetData.test_returns_elements_of_data": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "holopy.core.metadata.make_subset_data",
    "make_data",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestMakeSubsetData.test_seed_returns_same_data": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "holopy.core.metadata.make_subset_data",
    "make_data",
    "nose.plugins.attrib.attr",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestUpdateMetadata": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "holopy.core.tests.test_metadata.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.core.tests.test_metadata.TestUpdateMetadata.test_does_update_illum_polarization": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_grid",
    "holopy.core.metadata.update_metadata",
    "nose.plugins.attrib.attr",
    "numpy.all",
    "numpy.linalg.norm",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestUpdateMetadata.test_does_update_illum_wavelength": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_grid",
    "holopy.core.metadata.update_metadata",
    "nose.plugins.attrib.attr",
    "numpy.random.rand",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestUpdateMetadata.test_does_update_medium_index": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_grid",
    "holopy.core.metadata.update_metadata",
    "nose.plugins.attrib.attr",
    "numpy.random.rand",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestUpdateMetadata.test_does_update_noise_sd": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_grid",
    "holopy.core.metadata.update_metadata",
    "nose.plugins.attrib.attr",
    "numpy.random.rand",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.TestUpdateMetadata.test_normals_raises_error_with_deprecation_message": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "ValueError",
    "holopy.core.metadata.detector_grid",
    "holopy.core.metadata.update_metadata",
    "nose.plugins.attrib.attr",
    "numpy.linalg.norm",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.attr": {
  "data": {
   "shadows": "nose.plugins.attrib.attr"
  },
  "type": "import"
 },
 "holopy.core.tests.test_metadata.clean_concat": {
  "data": {
   "shadows": "holopy.core.metadata.clean_concat"
  },
  "type": "import"
 },
 "holopy.core.tests.test_metadata.copy_metadata": {
  "data": {
   "shadows": "holopy.core.metadata.copy_metadata"
  },
  "type": "import"
 },
 "holopy.core.tests.test_metadata.data_grid": {
  "data": {
   "shadows": "holopy.core.metadata.data_grid"
  },
  "type": "import"
 },
 "holopy.core.tests.test_metadata.detector_grid": {
  "data": {
   "shadows": "holopy.core.metadata.detector_grid"
  },
  "type": "import"
 },
 "holopy.core.tests.test_metadata.detector_points": {
  "data": {
   "shadows": "holopy.core.metadata.detector_points"
  },
  "type": "import"
 },
 "holopy.core.tests.test_metadata.get_extents": {
  "data": {
   "shadows": "holopy.core.metadata.get_extents"
  },
  "type": "import"
 },
 "holopy.core.tests.test_metadata.get_spacing": {
  "data": {
   "shadows": "holopy.core.metadata.get_spacing"
  },
  "type": "import"
 },
 "holopy.core.tests.test_metadata.make_data": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_grid",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.make_metadata": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_grid",
    "holopy.core.metadata.update_metadata",
    "holopy.core.tests.test_metadata.METADATA_VALUES"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.make_points": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_points",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_metadata.make_subset_data": {
  "data": {
   "shadows": "holopy.core.metadata.make_subset_data"
  },
  "type": "import"
 },
 "holopy.core.tests.test_metadata.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.core.tests.test_metadata.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "holopy.core.tests.test_metadata.update_metadata": {
  "data": {
   "shadows": "holopy.core.metadata.update_metadata"
  },
  "type": "import"
 },
 "holopy.core.tests.test_pickle": {
  "data": {},
  "type": "module"
 },
 "holopy.core.tests.test_pickle.assert_pickle_roundtrip": {
  "data": {
   "shadows": "holopy.core.tests.common.assert_pickle_roundtrip"
  },
  "type": "import"
 },
 "holopy.core.tests.test_pickle.attr": {
  "data": {
   "shadows": "nose.plugins.attrib.attr"
  },
  "type": "import"
 },
 "holopy.core.tests.test_pickle.get_example_data": {
  "data": {
   "shadows": "holopy.core.tests.common.get_example_data"
  },
  "type": "import"
 },
 "holopy.core.tests.test_pickle.test_image": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "holopy.core.tests.common.assert_pickle_roundtrip",
    "holopy.core.tests.common.get_example_data",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_process": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "holopy.core.tests.test_process.unittest",
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "holopy.core.tests.test_process.TestFourier": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "holopy.core.tests.test_process.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.core.tests.test_process.TestFourier.test_fft": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "holopy.core.process.fft",
    "holopy.core.process.ifft",
    "holopy.core.tests.common.assert_obj_close",
    "holopy.core.tests.common.get_example_data",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_process.TestFourier.test_fft_1d_no_shift": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "holopy.core.process.fft",
    "nose.plugins.attrib.attr",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_process.TestFourier.test_fft_ifft_2d_are_inverses": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "holopy.core.process.fft",
    "holopy.core.process.ifft",
    "holopy.core.tests.common.get_example_data",
    "nose.plugins.attrib.attr",
    "numpy.allclose",
    "xarray",
    "xarray.values"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_process.TestFourier.test_fft_of_xarray_returns_xarray": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "holopy.core.process.fft",
    "holopy.core.tests.common.get_example_data",
    "nose.plugins.attrib.attr",
    "xarray",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_process.TestFourier.test_ifft_1d_no_shift": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "holopy.core.process.ifft",
    "nose.plugins.attrib.attr",
    "numpy.array",
    "numpy.fft.ifft",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_process.TestFourier.test_ifft_of_xarray_returns_xarray": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "holopy.core.process.fft",
    "holopy.core.process.ifft",
    "holopy.core.tests.common.get_example_data",
    "nose.plugins.attrib.attr",
    "xarray",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_process.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "holopy.core.tests.test_process.assert_obj_close": {
  "data": {
   "shadows": "holopy.core.tests.common.assert_obj_close"
  },
  "type": "import"
 },
 "holopy.core.tests.test_process.attr": {
  "data": {
   "shadows": "nose.plugins.attrib.attr"
  },
  "type": "import"
 },
 "holopy.core.tests.test_process.center_find": {
  "data": {
   "shadows": "holopy.core.process.center_find"
  },
  "type": "import"
 },
 "holopy.core.tests.test_process.data_grid": {
  "data": {
   "shadows": "holopy.core.metadata.data_grid"
  },
  "type": "import"
 },
 "holopy.core.tests.test_process.detector_grid": {
  "data": {
   "shadows": "holopy.core.metadata.detector_grid"
  },
  "type": "import"
 },
 "holopy.core.tests.test_process.fft": {
  "data": {
   "shadows": "holopy.core.process.fft"
  },
  "type": "import"
 },
 "holopy.core.tests.test_process.get_example_data": {
  "data": {
   "shadows": "holopy.core.tests.common.get_example_data"
  },
  "type": "import"
 },
 "holopy.core.tests.test_process.gold_location": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "holopy.core.tests.test_process.ifft": {
  "data": {
   "shadows": "holopy.core.process.ifft"
  },
  "type": "import"
 },
 "holopy.core.tests.test_process.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.core.tests.test_process.subimage": {
  "data": {
   "shadows": "holopy.core.process.subimage"
  },
  "type": "import"
 },
 "holopy.core.tests.test_process.test_FoundLocation": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "holopy.core.process.center_find",
    "holopy.core.tests.common.get_example_data",
    "holopy.core.tests.test_process.gold_location",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_process.test_subimage": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "holopy.core.metadata.data_grid",
    "holopy.core.metadata.detector_grid",
    "holopy.core.process.subimage",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_process.test_subimage_floats": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "holopy.core.metadata.data_grid",
    "holopy.core.process.subimage",
    "holopy.core.tests.common.assert_obj_close",
    "nose.plugins.attrib.attr",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_process.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "holopy.core.tests.test_process.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math": {
  "data": {
   "symbols_in_volume": [
    "ModuleNotFoundError"
   ]
  },
  "type": "module"
 },
 "holopy.core.tests.test_utils_math.DummyPool": {
  "data": {
   "lineno": 51
  },
  "type": "class"
 },
 "holopy.core.tests.test_utils_math.DummyPool.__init__": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.DummyPool.map": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.MPIPool": {
  "data": {
   "shadows": "schwimmbad.MPIPool"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.MultiPool": {
  "data": {
   "shadows": "schwimmbad.MultiPool"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.TOLS": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "holopy.core.tests.test_utils_math.TestChoosePool": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "holopy.core.tests.test_utils_math.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.core.tests.test_utils_math.TestChoosePool.test_MPI": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "holopy.core.tests.test_utils_math._has_schwimmbad",
    "holopy.core.tests.test_utils_math.unittest",
    "holopy.core.utils.choose_pool",
    "importlib.util.find_spec",
    "isinstance",
    "nose.plugins.attrib.attr",
    "schwimmbad.MPIPool",
    "schwimmbad.MPIPool.enabled"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestChoosePool.test_auto": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "holopy.core.tests.test_utils_math._has_schwimmbad",
    "holopy.core.tests.test_utils_math.unittest",
    "holopy.core.utils.choose_pool",
    "isinstance",
    "multiprocessing.pool.Pool",
    "nose.plugins.attrib.attr",
    "schwimmbad.pool.BasePool"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestChoosePool.test_counting_all_cores": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "holopy.core.tests.test_utils_math._has_schwimmbad",
    "holopy.core.tests.test_utils_math.unittest",
    "holopy.core.utils.choose_pool",
    "isinstance",
    "multiprocessing.cpu_count",
    "nose.plugins.attrib.attr",
    "schwimmbad.MultiPool"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestChoosePool.test_custom_pool": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "holopy.core.tests.test_utils_math.DummyPool",
    "holopy.core.utils.choose_pool",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestChoosePool.test_multiprocessing_pool": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "holopy.core.utils.choose_pool",
    "multiprocessing.pool.Pool",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestChoosePool.test_nonepool": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "hasattr",
    "holopy.core.tests.test_utils_math._has_schwimmbad",
    "holopy.core.tests.test_utils_math.unittest",
    "holopy.core.utils.choose_pool",
    "isinstance",
    "len",
    "list",
    "multiprocessing.pool.Pool",
    "nose.plugins.attrib.attr",
    "schwimmbad.pool.BasePool"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestChoosePool.test_schwimmbad_multipool": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "holopy.core.tests.test_utils_math._has_schwimmbad",
    "holopy.core.tests.test_utils_math.unittest",
    "holopy.core.utils.choose_pool",
    "isinstance",
    "nose.plugins.attrib.attr",
    "schwimmbad.MultiPool"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestCoordinateTransformations": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "holopy.core.tests.test_utils_math.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.core.tests.test_utils_math.TestCoordinateTransformations.test_coordinate_transformations_work_when_z_is_a_scalar": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "holopy.core.math.find_transformation_function",
    "method",
    "nose.plugins.attrib.attr",
    "numpy.arctan2",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestCoordinateTransformations.test_find_transformation_function": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "holopy.core.math.find_transformation_function",
    "holopy.core.math.transform_cartesian_to_cylindrical",
    "holopy.core.math.transform_cartesian_to_spherical",
    "holopy.core.math.transform_cylindrical_to_cartesian",
    "holopy.core.math.transform_cylindrical_to_spherical",
    "holopy.core.math.transform_spherical_to_cartesian",
    "holopy.core.math.transform_spherical_to_cylindrical",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestCoordinateTransformations.test_find_transformation_function_returns_helpful_error": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "NotImplementedError",
    "holopy.core.math.find_transformation_function",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestCoordinateTransformations.test_find_transformation_function_when_same": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "holopy.core.math.find_transformation_function",
    "holopy.core.tests.test_utils_math.TOLS",
    "method",
    "nose.plugins.attrib.attr",
    "numpy.allclose",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestCoordinateTransformations.test_keep_in_same_coordinates": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "holopy.core.math.keep_in_same_coordinates",
    "holopy.core.tests.test_utils_math.TOLS",
    "nose.plugins.attrib.attr",
    "numpy.allclose",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestCoordinateTransformations.test_transform_cartesian_to_cylindrical": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "holopy.core.math.transform_cartesian_to_cylindrical",
    "holopy.core.tests.test_utils_math.TOLS",
    "nose.plugins.attrib.attr",
    "numpy.allclose",
    "numpy.arctan2",
    "numpy.pi",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestCoordinateTransformations.test_transform_cartesian_to_cylindrical_returns_correct_shape": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "holopy.core.math.transform_cartesian_to_cylindrical",
    "nose.plugins.attrib.attr",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestCoordinateTransformations.test_transform_cartesian_to_cylindrical_returns_phi_on_0_2pi": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "holopy.core.math.transform_cartesian_to_cylindrical",
    "nose.plugins.attrib.attr",
    "numpy.all",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestCoordinateTransformations.test_transform_cartesian_to_spherical": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "holopy.core.math.transform_cartesian_to_spherical",
    "holopy.core.tests.test_utils_math.TOLS",
    "nose.plugins.attrib.attr",
    "numpy.allclose",
    "numpy.arccos",
    "numpy.arctan2",
    "numpy.linalg.norm",
    "numpy.pi",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestCoordinateTransformations.test_transform_cartesian_to_spherical_at_origin": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "holopy.core.math.transform_cartesian_to_spherical",
    "holopy.core.math.transform_spherical_to_cartesian",
    "holopy.core.tests.test_utils_math.TOLS",
    "nose.plugins.attrib.attr",
    "numpy.allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestCoordinateTransformations.test_transform_cartesian_to_spherical_returns_correct_shape": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "holopy.core.math.transform_cartesian_to_spherical",
    "nose.plugins.attrib.attr",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestCoordinateTransformations.test_transform_cartesian_to_spherical_returns_phi_on_0_2pi": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "holopy.core.math.transform_cartesian_to_spherical",
    "nose.plugins.attrib.attr",
    "numpy.all",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestCoordinateTransformations.test_transform_cylindrical_to_cartesian": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "holopy.core.math.transform_cartesian_to_cylindrical",
    "holopy.core.math.transform_cylindrical_to_cartesian",
    "holopy.core.tests.test_utils_math.TOLS",
    "nose.plugins.attrib.attr",
    "numpy.allclose",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestCoordinateTransformations.test_transform_cylindrical_to_spherical": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "holopy.core.math.transform_cartesian_to_cylindrical",
    "holopy.core.math.transform_cartesian_to_spherical",
    "holopy.core.math.transform_cylindrical_to_spherical",
    "holopy.core.tests.test_utils_math.TOLS",
    "nose.plugins.attrib.attr",
    "numpy.allclose",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestCoordinateTransformations.test_transform_spherical_to_cartesian": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "holopy.core.math.transform_cartesian_to_spherical",
    "holopy.core.math.transform_spherical_to_cartesian",
    "holopy.core.tests.test_utils_math.TOLS",
    "nose.plugins.attrib.attr",
    "numpy.allclose",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestCoordinateTransformations.test_transform_spherical_to_cylindrical": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "holopy.core.math.transform_cartesian_to_cylindrical",
    "holopy.core.math.transform_cartesian_to_spherical",
    "holopy.core.math.transform_spherical_to_cylindrical",
    "holopy.core.tests.test_utils_math.TOLS",
    "nose.plugins.attrib.attr",
    "numpy.allclose",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestDictionaryUtils": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "holopy.core.tests.test_utils_math.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.core.tests.test_utils_math.TestDictionaryUtils.test_dict_without": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "holopy.core.utils.dict_without",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestDictionaryUtils.test_kw_takes_priority": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "holopy.core.utils.updated",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestDictionaryUtils.test_updated_basic": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "holopy.core.utils.updated",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestDictionaryUtils.test_updated_from_kw": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "holopy.core.utils.updated",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestDictionaryUtils.test_updated_keep_None": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "holopy.core.utils.updated",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestEnsureArray": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "holopy.core.tests.test_utils_math.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.core.tests.test_utils_math.TestEnsureArray.test_None_is_unchanged": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "holopy.core.utils.ensure_array",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestEnsureArray.test_listlike": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "holopy.core.utils.ensure_array",
    "nose.plugins.attrib.attr",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestEnsureArray.test_xarray_is_unchanged": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "holopy.core.utils.ensure_array",
    "nose.plugins.attrib.attr",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestEnsureArray.test_xarrays_without_coords": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "holopy.core.utils.ensure_array",
    "nose.plugins.attrib.attr",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestEnsureArray.test_zero_d_objects": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "holopy.core.utils.ensure_array",
    "nose.plugins.attrib.attr",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestListUtils": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "holopy.core.tests.test_utils_math.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.core.tests.test_utils_math.TestListUtils.test_ensure_listlike": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "holopy.core.utils.ensure_listlike",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestListUtils.test_ensure_scalar": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "holopy.core.utils.ensure_scalar",
    "nose.plugins.attrib.attr",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestRepeatSingDims": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "holopy.core.tests.test_utils_math.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.core.tests.test_utils_math.TestRepeatSingDims.test_all_keys": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "holopy.core.utils.repeat_sing_dims",
    "nose.plugins.attrib.attr",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestRepeatSingDims.test_input_isnt_modified": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "holopy.core.utils.repeat_sing_dims",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestRepeatSingDims.test_nothing_to_repeat": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "holopy.core.utils.repeat_sing_dims",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.TestRepeatSingDims.test_repeat_some_keys": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "holopy.core.utils.repeat_sing_dims",
    "nose.plugins.attrib.attr",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math._has_schwimmbad": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "holopy.core.tests.test_utils_math.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.assert_obj_close": {
  "data": {
   "shadows": "holopy.core.tests.common.assert_obj_close"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.attr": {
  "data": {
   "shadows": "nose.plugins.attrib.attr"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.choose_pool": {
  "data": {
   "shadows": "holopy.core.utils.choose_pool"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.dict_without": {
  "data": {
   "shadows": "holopy.core.utils.dict_without"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.ensure_array": {
  "data": {
   "shadows": "holopy.core.utils.ensure_array"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.ensure_listlike": {
  "data": {
   "shadows": "holopy.core.utils.ensure_listlike"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.ensure_scalar": {
  "data": {
   "shadows": "holopy.core.utils.ensure_scalar"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.find_spec": {
  "data": {
   "shadows": "importlib.util.find_spec"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.find_transformation_function": {
  "data": {
   "shadows": "holopy.core.math.find_transformation_function"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.get_example_data": {
  "data": {
   "shadows": "holopy.core.tests.common.get_example_data"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.keep_in_same_coordinates": {
  "data": {
   "shadows": "holopy.core.math.keep_in_same_coordinates"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.mkdir_p": {
  "data": {
   "shadows": "holopy.core.utils.mkdir_p"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.mp": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.pool": {
  "data": {
   "shadows": "schwimmbad.pool"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.repeat_sing_dims": {
  "data": {
   "shadows": "holopy.core.utils.repeat_sing_dims"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.rotate_points": {
  "data": {
   "shadows": "holopy.core.math.rotate_points"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.rotation_matrix": {
  "data": {
   "shadows": "holopy.core.math.rotation_matrix"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.test_mkdir_p": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "holopy.core.tests.test_utils_math.os",
    "holopy.core.tests.test_utils_math.shutil",
    "holopy.core.tests.test_utils_math.tempfile",
    "holopy.core.utils.mkdir_p",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.test_rotate_single_point": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "holopy.core.math.rotate_points",
    "nose.plugins.attrib.attr",
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.test_rotation_matrix_degrees": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "holopy.core.math.rotation_matrix",
    "nose.plugins.attrib.attr",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_utils_math.transform_cartesian_to_cylindrical": {
  "data": {
   "shadows": "holopy.core.math.transform_cartesian_to_cylindrical"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.transform_cartesian_to_spherical": {
  "data": {
   "shadows": "holopy.core.math.transform_cartesian_to_spherical"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.transform_cylindrical_to_cartesian": {
  "data": {
   "shadows": "holopy.core.math.transform_cylindrical_to_cartesian"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.transform_cylindrical_to_spherical": {
  "data": {
   "shadows": "holopy.core.math.transform_cylindrical_to_spherical"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.transform_spherical_to_cartesian": {
  "data": {
   "shadows": "holopy.core.math.transform_spherical_to_cartesian"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.transform_spherical_to_cylindrical": {
  "data": {
   "shadows": "holopy.core.math.transform_spherical_to_cylindrical"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.updated": {
  "data": {
   "shadows": "holopy.core.utils.updated"
  },
  "type": "import"
 },
 "holopy.core.tests.test_utils_math.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "holopy.core.tests.test_vis": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "holopy.core.tests.test_vis.ARRAY_3D",
    "holopy.core.tests.test_vis.ARRAY_4D",
    "holopy.core.tests.test_vis.unittest",
    "numpy.arange",
    "numpy.reshape",
    "numpy.transpose"
   ]
  },
  "type": "module"
 },
 "holopy.core.tests.test_vis.ARRAY_2D": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "holopy.core.tests.test_vis.ARRAY_3D": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "holopy.core.tests.test_vis.ARRAY_4D": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "holopy.core.tests.test_vis.ARRAY_5D": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "holopy.core.tests.test_vis.BadImage": {
  "data": {
   "shadows": "holopy.core.errors.BadImage"
  },
  "type": "import"
 },
 "holopy.core.tests.test_vis.ILLUM": {
  "data": {
   "shadows": "holopy.core.metadata.illumination"
  },
  "type": "import"
 },
 "holopy.core.tests.test_vis.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "holopy.core.tests.test_vis.ShowTest": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "holopy.core.tests.test_vis.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.core.tests.test_vis.ShowTest.test_show": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "DeprecationWarning",
    "RuntimeError",
    "UserWarning",
    "holopy.core.io.io.get_example_data",
    "holopy.core.io.vis.show",
    "holopy.core.tests.test_vis._NO_MATPLOTLIB",
    "holopy.core.tests.test_vis.tempfile",
    "holopy.core.tests.test_vis.warnings",
    "matplotlib.pyplot.ioff",
    "matplotlib.pyplot.savefig",
    "nose.plugins.attrib.attr",
    "nose.plugins.skip.SkipTest"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_vis.SkipTest": {
  "data": {
   "shadows": "nose.plugins.skip.SkipTest"
  },
  "type": "import"
 },
 "holopy.core.tests.test_vis.TestDisplayImage": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "holopy.core.tests.test_vis.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.core.tests.test_vis.TestDisplayImage.test_colour_name_formats": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "holopy.core.io.vis.display_image",
    "holopy.core.metadata.illumination",
    "holopy.core.tests.common.assert_obj_close",
    "holopy.core.tests.test_vis.ARRAY_4D",
    "holopy.core.tests.test_vis.convert_ndarray_to_xarray",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_vis.TestDisplayImage.test_colours_in_wrong_order": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "holopy.core.io.vis.display_image",
    "holopy.core.metadata.illumination",
    "holopy.core.tests.test_vis.ARRAY_4D",
    "holopy.core.tests.test_vis.convert_ndarray_to_xarray",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_vis.TestDisplayImage.test_complex_values_return_magnitude": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "holopy.core.io.vis.display_image",
    "holopy.core.tests.common.assert_obj_close",
    "holopy.core.tests.test_vis.ARRAY_3D",
    "holopy.core.tests.test_vis.convert_ndarray_to_xarray",
    "holopy.core.tests.test_vis.warnings",
    "nose.plugins.attrib.attr",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_vis.TestDisplayImage.test_custom_dimension_names": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "holopy.core.io.vis.display_image",
    "holopy.core.tests.test_vis.ARRAY_3D",
    "holopy.core.tests.test_vis.convert_ndarray_to_xarray",
    "nose.plugins.attrib.attr",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_vis.TestDisplayImage.test_custom_extra_dimension_name": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "holopy.core.io.vis.display_image",
    "holopy.core.metadata.illumination",
    "holopy.core.tests.test_vis.ARRAY_3D",
    "holopy.core.tests.test_vis.ARRAY_4D",
    "holopy.core.tests.test_vis.ARRAY_5D",
    "holopy.core.tests.test_vis.convert_ndarray_to_xarray",
    "nose.plugins.attrib.attr",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_vis.TestDisplayImage.test_flat_colour_dimension_gives_greyscale": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "holopy.core.io.vis.display_image",
    "holopy.core.metadata.illumination",
    "holopy.core.tests.common.assert_obj_close",
    "holopy.core.tests.test_vis.ARRAY_3D",
    "holopy.core.tests.test_vis.ARRAY_4D",
    "holopy.core.tests.test_vis.convert_ndarray_to_xarray",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_vis.TestDisplayImage.test_interpet_axes_for_numpy_arrays": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "holopy.core.io.vis.display_image",
    "holopy.core.tests.common.assert_obj_close",
    "holopy.core.tests.test_vis.ARRAY_2D",
    "holopy.core.tests.test_vis.ARRAY_3D",
    "holopy.core.tests.test_vis.convert_ndarray_to_xarray",
    "nose.plugins.attrib.attr",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_vis.TestDisplayImage.test_maintains_metadata": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "holopy.core.io.vis.display_image",
    "holopy.core.tests.test_vis.ARRAY_3D",
    "holopy.core.tests.test_vis.convert_ndarray_to_xarray",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_vis.TestDisplayImage.test_missing_colours": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "holopy.core.io.vis.display_image",
    "holopy.core.metadata.illumination",
    "holopy.core.tests.common.assert_obj_close",
    "holopy.core.tests.test_vis.ARRAY_4D",
    "holopy.core.tests.test_vis.convert_ndarray_to_xarray",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_vis.TestDisplayImage.test_raises_error_1D_numpy_array": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "holopy.core.errors.BadImage",
    "holopy.core.io.vis.display_image",
    "holopy.core.tests.test_vis.ARRAY_2D",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_vis.TestDisplayImage.test_raises_error_4D_array_no_color_axis": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "holopy.core.errors.BadImage",
    "holopy.core.io.vis.display_image",
    "holopy.core.tests.test_vis.ARRAY_4D",
    "holopy.core.tests.test_vis.convert_ndarray_to_xarray",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_vis.TestDisplayImage.test_raises_error_4D_numpy_array": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "holopy.core.errors.BadImage",
    "holopy.core.io.vis.display_image",
    "holopy.core.tests.test_vis.ARRAY_4D",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_vis.TestDisplayImage.test_raises_error_5d_xarray": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "holopy.core.errors.BadImage",
    "holopy.core.io.vis.display_image",
    "holopy.core.metadata.illumination",
    "holopy.core.tests.test_vis.ARRAY_5D",
    "holopy.core.tests.test_vis.convert_ndarray_to_xarray",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_vis.TestDisplayImage.test_scaling_constricts_intensity_bounds": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "holopy.core.io.vis.display_image",
    "holopy.core.tests.common.assert_obj_close",
    "holopy.core.tests.test_vis.ARRAY_3D",
    "holopy.core.tests.test_vis.convert_ndarray_to_xarray",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_vis.TestDisplayImage.test_scaling_exceeds_intensity_bounds": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "holopy.core.io.vis.display_image",
    "holopy.core.tests.test_vis.ARRAY_3D",
    "holopy.core.tests.test_vis.convert_ndarray_to_xarray",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_vis.TestDisplayImage.test_specify_axes_for_numpy_arrays": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "holopy.core.io.vis.display_image",
    "holopy.core.tests.common.assert_obj_close",
    "holopy.core.tests.test_vis.ARRAY_3D",
    "holopy.core.tests.test_vis.convert_ndarray_to_xarray",
    "nose.plugins.attrib.attr",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_vis.TestDisplayImage.test_too_many_color_channels": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "holopy.core.errors.BadImage",
    "holopy.core.io.vis.display_image",
    "holopy.core.metadata.clean_concat",
    "holopy.core.metadata.illumination",
    "holopy.core.tests.test_vis.ARRAY_4D",
    "holopy.core.tests.test_vis.convert_ndarray_to_xarray",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_vis.TestDisplayImage.test_xarray_dimension_order": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "holopy.core.io.vis.display_image",
    "holopy.core.tests.common.assert_obj_close",
    "holopy.core.tests.test_vis.ARRAY_3D",
    "holopy.core.tests.test_vis.convert_ndarray_to_xarray",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_vis.TestSavingImage": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "holopy.core.tests.test_vis.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.core.tests.test_vis.TestSavingImage._make_unused_filename_in_tempdir": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "RuntimeError",
    "holopy.core.tests.test_vis.os",
    "range"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_vis.TestSavingImage.setUp": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "holopy.core.io.io.get_example_data",
    "holopy.core.tests.test_vis.tempfile"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_vis.TestSavingImage.tearDown": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "holopy.core.tests.test_vis.shutil"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_vis.TestSavingImage.test_save_multiple_images_writes_image_files": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "all",
    "enumerate",
    "holopy.core.io.vis.save_plot",
    "holopy.core.metadata.clean_concat",
    "holopy.core.tests.test_vis.os",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_vis.TestSavingImage.test_save_single_image_writes_image_file": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "holopy.core.io.vis.save_plot",
    "holopy.core.tests.test_vis.os",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_vis._NO_MATPLOTLIB": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "holopy.core.tests.test_vis.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "holopy.core.tests.test_vis.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "holopy.core.tests.test_vis.assert_obj_close": {
  "data": {
   "shadows": "holopy.core.tests.common.assert_obj_close"
  },
  "type": "import"
 },
 "holopy.core.tests.test_vis.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "holopy.core.tests.test_vis.attr": {
  "data": {
   "shadows": "nose.plugins.attrib.attr"
  },
  "type": "import"
 },
 "holopy.core.tests.test_vis.clean_concat": {
  "data": {
   "shadows": "holopy.core.metadata.clean_concat"
  },
  "type": "import"
 },
 "holopy.core.tests.test_vis.convert_ndarray_to_xarray": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "holopy.core.metadata.data_grid",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "holopy.core.tests.test_vis.data_grid": {
  "data": {
   "shadows": "holopy.core.metadata.data_grid"
  },
  "type": "import"
 },
 "holopy.core.tests.test_vis.display_image": {
  "data": {
   "shadows": "holopy.core.io.vis.display_image"
  },
  "type": "import"
 },
 "holopy.core.tests.test_vis.get_example_data": {
  "data": {
   "shadows": "holopy.core.io.io.get_example_data"
  },
  "type": "import"
 },
 "holopy.core.tests.test_vis.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.core.tests.test_vis.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "holopy.core.tests.test_vis.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "holopy.core.tests.test_vis.save_plot": {
  "data": {
   "shadows": "holopy.core.io.vis.save_plot"
  },
  "type": "import"
 },
 "holopy.core.tests.test_vis.show": {
  "data": {
   "shadows": "holopy.core.io.vis.show"
  },
  "type": "import"
 },
 "holopy.core.tests.test_vis.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "holopy.core.tests.test_vis.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "holopy.core.tests.test_vis.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "holopy.core.tests.test_vis.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "holopy.core.update_metadata": {
  "data": {
   "shadows": "holopy.core.metadata.update_metadata"
  },
  "type": "import"
 },
 "holopy.core.utils": {
  "data": {
   "symbols_in_volume": [
    "ModuleNotFoundError"
   ]
  },
  "type": "module"
 },
 "holopy.core.utils.DependencyMissing": {
  "data": {
   "shadows": "holopy.core.errors.DependencyMissing"
  },
  "type": "import"
 },
 "holopy.core.utils.HoloPyObject": {
  "data": {
   "shadows": "holopy.core.holopy_object.HoloPyObject"
  },
  "type": "import"
 },
 "holopy.core.utils.LnpostWrapper": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "holopy.core.holopy_object.HoloPyObject"
   ]
  },
  "type": "class"
 },
 "holopy.core.utils.LnpostWrapper.__init__": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "holopy.core.utils.LnpostWrapper.evaluate": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "holopy.core.utils.NO_SCHWIMMBAD": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "holopy.core.utils.NonePool": {
  "data": {
   "lineno": 226
  },
  "type": "class"
 },
 "holopy.core.utils.NonePool.close": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "holopy.core.utils.NonePool.map": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "map"
   ]
  },
  "type": "function"
 },
 "holopy.core.utils.SuppressOutput": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "holopy.core.utils.SuppressOutput.__enter__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "holopy.core.utils.os"
   ]
  },
  "type": "function"
 },
 "holopy.core.utils.SuppressOutput.__exit__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "holopy.core.utils.os"
   ]
  },
  "type": "function"
 },
 "holopy.core.utils.SuppressOutput.__init__": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "holopy.core.utils.choose_pool": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "NonePool",
    "TypeError",
    "hasattr",
    "holopy.core.errors.DependencyMissing",
    "holopy.core.utils.NO_SCHWIMMBAD",
    "holopy.core.utils.os",
    "holopy.core.utils.schwimmbad",
    "holopy.core.utils.sys",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "holopy.core.utils.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "holopy.core.utils.dict_without": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "KeyError",
    "copy.copy",
    "holopy.core.utils.ensure_array"
   ]
  },
  "type": "function"
 },
 "holopy.core.utils.ensure_array": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.core.utils.ensure_listlike": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "TypeError",
    "iter"
   ]
  },
  "type": "function"
 },
 "holopy.core.utils.ensure_scalar": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "holopy.core.utils.ensure_array"
   ]
  },
  "type": "function"
 },
 "holopy.core.utils.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "holopy.core.utils.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "holopy.core.utils.mkdir_p": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "OSError",
    "holopy.core.utils.errno",
    "holopy.core.utils.os"
   ]
  },
  "type": "function"
 },
 "holopy.core.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.core.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "holopy.core.utils.repeat_sing_dims": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "holopy.core.utils.ensure_array",
    "holopy.core.utils.updated",
    "len",
    "max",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "holopy.core.utils.schwimmbad": {
  "data": {
   "shadows": "schwimmbad"
  },
  "type": "import"
 },
 "holopy.core.utils.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "holopy.core.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "holopy.core.utils.updated": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "copy.copy",
    "holopy.core.utils.itertools"
   ]
  },
  "type": "function"
 },
 "holopy.core.utils.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "holopy.detector_grid": {
  "data": {
   "shadows": "holopy.core.detector_grid"
  },
  "type": "import"
 },
 "holopy.detector_points": {
  "data": {
   "shadows": "holopy.core.detector_points"
  },
  "type": "import"
 },
 "holopy.fitting": {
  "data": {
   "shadows": "holopy.fitting"
  },
  "type": "import"
 },
 "holopy.fitting.AlphaModel": {
  "data": {
   "shadows": "holopy.inference.model.AlphaModel"
  },
  "type": "import"
 },
 "holopy.fitting.ComplexParameter": {
  "data": {
   "lineno": 80
  },
  "type": "class"
 },
 "holopy.fitting.ComplexParameter.__new__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "holopy.fitting.fit_warning",
    "holopy.inference.prior.ComplexPrior",
    "holopy.inference.prior.Prior",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "holopy.fitting.ComplexPrior": {
  "data": {
   "shadows": "holopy.inference.prior.ComplexPrior"
  },
  "type": "import"
 },
 "holopy.fitting.ExactModel": {
  "data": {
   "shadows": "holopy.inference.model.ExactModel"
  },
  "type": "import"
 },
 "holopy.fitting.FitResult": {
  "data": {
   "lineno": 149
  },
  "type": "class"
 },
 "holopy.fitting.FitResult.__new__": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "holopy.fitting.fit",
    "holopy.fitting.fit_warning",
    "holopy.inference.result.FitResult",
    "holopy.inference.result.UncertainValue",
    "setattr",
    "zip"
   ]
  },
  "type": "function"
 },
 "holopy.fitting.FitResult.__new__.fitted_holo": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "holopy.fitting.fit"
   ]
  },
  "type": "function"
 },
 "holopy.fitting.LimitOverlaps": {
  "data": {
   "shadows": "holopy.inference.model.LimitOverlaps"
  },
  "type": "import"
 },
 "holopy.fitting.MissingParameter": {
  "data": {
   "shadows": "holopy.scattering.errors.MissingParameter"
  },
  "type": "import"
 },
 "holopy.fitting.Model": {
  "data": {
   "lineno": 106
  },
  "type": "class"
 },
 "holopy.fitting.Model.__new__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ValueError",
    "holopy.fitting.fit_warning",
    "holopy.inference.model.AlphaModel",
    "holopy.inference.model.ExactModel",
    "holopy.scattering.calc_holo",
    "setattr"
   ]
  },
  "type": "function"
 },
 "holopy.fitting.Model.__new__.get_alpha": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "holopy.scattering.errors.MissingParameter"
   ]
  },
  "type": "function"
 },
 "holopy.fitting.Model.__new__.residual": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "holopy.fitting.Nmpfit": {
  "data": {
   "lineno": 136
  },
  "type": "class"
 },
 "holopy.fitting.Nmpfit.__new__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "holopy.fitting.fit_warning",
    "holopy.inference.nmpfit.NmpfitStrategy"
   ]
  },
  "type": "function"
 },
 "holopy.fitting.NmpfitStrategy": {
  "data": {
   "shadows": "holopy.inference.nmpfit.NmpfitStrategy"
  },
  "type": "import"
 },
 "holopy.fitting.Parameter": {
  "data": {
   "lineno": 59
  },
  "type": "class"
 },
 "holopy.fitting.Parameter.__new__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "holopy.core.utils.ensure_listlike",
    "holopy.fitting.Parameter",
    "holopy.fitting.fit_warning",
    "holopy.inference.prior.Uniform",
    "holopy.scattering.errors.ParameterSpecificationError",
    "len",
    "numpy.inf",
    "setattr"
   ]
  },
  "type": "function"
 },
 "holopy.fitting.ParameterSpecificationError": {
  "data": {
   "shadows": "holopy.scattering.errors.ParameterSpecificationError"
  },
  "type": "import"
 },
 "holopy.fitting.ParameterizedObject": {
  "data": {
   "lineno": 88
  },
  "type": "class"
 },
 "holopy.fitting.ParameterizedObject.__new__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "holopy.fitting.fit_warning",
    "setattr"
   ]
  },
  "type": "function"
 },
 "holopy.fitting.Parametrization": {
  "data": {
   "lineno": 94
  },
  "type": "class"
 },
 "holopy.fitting.Parametrization.__new__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "holopy.fitting.ParameterizedObject",
    "holopy.fitting.fit_warning",
    "scatclass"
   ]
  },
  "type": "function"
 },
 "holopy.fitting.Prior": {
  "data": {
   "shadows": "holopy.inference.prior.Prior"
  },
  "type": "import"
 },
 "holopy.fitting.RealFitResult": {
  "data": {
   "shadows": "holopy.inference.result.FitResult"
  },
  "type": "import"
 },
 "holopy.fitting.UncertainValue": {
  "data": {
   "shadows": "holopy.inference.result.UncertainValue"
  },
  "type": "import"
 },
 "holopy.fitting.Uniform": {
  "data": {
   "shadows": "holopy.inference.prior.Uniform"
  },
  "type": "import"
 },
 "holopy.fitting.calc_holo": {
  "data": {
   "shadows": "holopy.scattering.calc_holo"
  },
  "type": "import"
 },
 "holopy.fitting.chisq": {
  "data": {
   "shadows": "holopy.core.math.chisq"
  },
  "type": "import"
 },
 "holopy.fitting.ensure_listlike": {
  "data": {
   "shadows": "holopy.core.utils.ensure_listlike"
  },
  "type": "import"
 },
 "holopy.fitting.fit": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "holopy.fitting.fit_warning",
    "holopy.inference.nmpfit.NmpfitStrategy",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "holopy.fitting.fit_warning": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "UserWarning",
    "holopy.fitting.warnings"
   ]
  },
  "type": "function"
 },
 "holopy.fitting.get_values": {
  "data": {
   "shadows": "holopy.core.metadata.get_values"
  },
  "type": "import"
 },
 "holopy.fitting.limit_overlaps": {
  "data": {
   "lineno": 100
  },
  "type": "class"
 },
 "holopy.fitting.limit_overlaps.__new__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "holopy.fitting.fit_warning",
    "holopy.inference.model.LimitOverlaps"
   ]
  },
  "type": "function"
 },
 "holopy.fitting.make_subset_data": {
  "data": {
   "shadows": "holopy.core.metadata.make_subset_data"
  },
  "type": "import"
 },
 "holopy.fitting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.fitting.rsq": {
  "data": {
   "shadows": "holopy.core.math.rsq"
  },
  "type": "import"
 },
 "holopy.fitting.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "holopy.inference": {
  "data": {},
  "type": "module"
 },
 "holopy.inference.AlphaModel": {
  "data": {
   "shadows": "holopy.inference.model.AlphaModel"
  },
  "type": "import"
 },
 "holopy.inference.CmaStrategy": {
  "data": {
   "shadows": "holopy.inference.cmaes.CmaStrategy"
  },
  "type": "import"
 },
 "holopy.inference.EmceeStrategy": {
  "data": {
   "shadows": "holopy.inference.emcee.EmceeStrategy"
  },
  "type": "import"
 },
 "holopy.inference.ExactModel": {
  "data": {
   "shadows": "holopy.inference.model.ExactModel"
  },
  "type": "import"
 },
 "holopy.inference.FitResult": {
  "data": {
   "shadows": "holopy.inference.result.FitResult"
  },
  "type": "import"
 },
 "holopy.inference.LeastSquaresScipyStrategy": {
  "data": {
   "shadows": "holopy.inference.scipyfit.LeastSquaresScipyStrategy"
  },
  "type": "import"
 },
 "holopy.inference.LimitOverlaps": {
  "data": {
   "shadows": "holopy.inference.model.LimitOverlaps"
  },
  "type": "import"
 },
 "holopy.inference.NmpfitStrategy": {
  "data": {
   "shadows": "holopy.inference.nmpfit.NmpfitStrategy"
  },
  "type": "import"
 },
 "holopy.inference.SamplingResult": {
  "data": {
   "shadows": "holopy.inference.result.SamplingResult"
  },
  "type": "import"
 },
 "holopy.inference.TemperedSamplingResult": {
  "data": {
   "shadows": "holopy.inference.result.TemperedSamplingResult"
  },
  "type": "import"
 },
 "holopy.inference.TemperedStrategy": {
  "data": {
   "shadows": "holopy.inference.emcee.TemperedStrategy"
  },
  "type": "import"
 },
 "holopy.inference.available_fit_strategies": {
  "data": {
   "shadows": "holopy.inference.interface.available_fit_strategies"
  },
  "type": "import"
 },
 "holopy.inference.available_sampling_strategies": {
  "data": {
   "shadows": "holopy.inference.interface.available_sampling_strategies"
  },
  "type": "import"
 },
 "holopy.inference.cmaes": {
  "data": {
   "symbols_in_volume": [
    "ModuleNotFoundError"
   ]
  },
  "type": "module"
 },
 "holopy.inference.cmaes.CmaStrategy": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "holopy.core.holopy_object.HoloPyObject"
   ]
  },
  "type": "class"
 },
 "holopy.inference.cmaes.CmaStrategy.__init__": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "holopy.inference.cmaes.CmaStrategy.__init__.weight_function": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "holopy.inference.cmaes.CmaStrategy.fit": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "dict",
    "holopy.core.metadata.make_subset_data",
    "holopy.core.utils.LnpostWrapper",
    "holopy.inference.cmaes.time",
    "holopy.inference.result.FitResult",
    "holopy.inference.result.UncertainValue",
    "int",
    "len",
    "numpy.sqrt",
    "run_cma",
    "xarray.DataArray",
    "zip"
   ]
  },
  "type": "function"
 },
 "holopy.inference.cmaes.DependencyMissing": {
  "data": {
   "shadows": "holopy.core.errors.DependencyMissing"
  },
  "type": "import"
 },
 "holopy.inference.cmaes.FitResult": {
  "data": {
   "shadows": "holopy.inference.result.FitResult"
  },
  "type": "import"
 },
 "holopy.inference.cmaes.HoloPyObject": {
  "data": {
   "shadows": "holopy.core.holopy_object.HoloPyObject"
  },
  "type": "import"
 },
 "holopy.inference.cmaes.LnpostWrapper": {
  "data": {
   "shadows": "holopy.core.utils.LnpostWrapper"
  },
  "type": "import"
 },
 "holopy.inference.cmaes.UncertainValue": {
  "data": {
   "shadows": "holopy.inference.result.UncertainValue"
  },
  "type": "import"
 },
 "holopy.inference.cmaes._CMA_MISSING": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "holopy.inference.cmaes.choose_pool": {
  "data": {
   "shadows": "holopy.core.utils.choose_pool"
  },
  "type": "import"
 },
 "holopy.inference.cmaes.cma": {
  "data": {
   "shadows": "cma"
  },
  "type": "import"
 },
 "holopy.inference.cmaes.make_subset_data": {
  "data": {
   "shadows": "holopy.core.metadata.make_subset_data"
  },
  "type": "import"
 },
 "holopy.inference.cmaes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.inference.cmaes.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "holopy.inference.cmaes.prior": {
  "data": {
   "shadows": "holopy.inference.prior"
  },
  "type": "import"
 },
 "holopy.inference.cmaes.run_cma": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "bool",
    "holopy.core.errors.DependencyMissing",
    "holopy.core.utils.choose_pool",
    "holopy.inference.cmaes._CMA_MISSING",
    "holopy.inference.cmaes.cma",
    "holopy.inference.cmaes.tempfile",
    "holopy.inference.cmaes.warnings",
    "holopy.inference.prior.Gaussian",
    "isinstance",
    "len",
    "list",
    "numpy.isfinite",
    "numpy.ones",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "weight_function"
   ]
  },
  "type": "function"
 },
 "holopy.inference.cmaes.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "holopy.inference.cmaes.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "holopy.inference.cmaes.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "holopy.inference.cmaes.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "holopy.inference.cmaes.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "holopy.inference.cmaes.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "holopy.inference.emcee": {
  "data": {
   "symbols_in_volume": [
    "ModuleNotFoundError"
   ]
  },
  "type": "module"
 },
 "holopy.inference.emcee.DependencyMissing": {
  "data": {
   "shadows": "holopy.core.errors.DependencyMissing"
  },
  "type": "import"
 },
 "holopy.inference.emcee.EmceeStrategy": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "holopy.core.holopy_object.HoloPyObject"
   ]
  },
  "type": "class"
 },
 "holopy.inference.emcee.EmceeStrategy.__init__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "holopy.inference.emcee.EmceeStrategy.sample": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "emcee_lnprobs_DataArray",
    "emcee_samples_DataArray",
    "holopy.core.metadata.make_subset_data",
    "holopy.fitting.fit_warning",
    "holopy.inference.emcee.time",
    "holopy.inference.result.SamplingResult",
    "sample_emcee"
   ]
  },
  "type": "function"
 },
 "holopy.inference.emcee.HoloPyObject": {
  "data": {
   "shadows": "holopy.core.holopy_object.HoloPyObject"
  },
  "type": "import"
 },
 "holopy.inference.emcee.LnpostWrapper": {
  "data": {
   "shadows": "holopy.core.utils.LnpostWrapper"
  },
  "type": "import"
 },
 "holopy.inference.emcee.SamplingResult": {
  "data": {
   "shadows": "holopy.inference.result.SamplingResult"
  },
  "type": "import"
 },
 "holopy.inference.emcee.TemperedSamplingResult": {
  "data": {
   "shadows": "holopy.inference.result.TemperedSamplingResult"
  },
  "type": "import"
 },
 "holopy.inference.emcee.TemperedStrategy": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "holopy.inference.emcee.EmceeStrategy"
   ]
  },
  "type": "class"
 },
 "holopy.inference.emcee.TemperedStrategy.__init__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "holopy.inference.emcee.sample_one_sigma_gaussian",
    "numpy.log10",
    "numpy.logspace"
   ]
  },
  "type": "function"
 },
 "holopy.inference.emcee.TemperedStrategy.add_stage_strategy": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "holopy.inference.emcee.EmceeStrategy",
    "int",
    "round"
   ]
  },
  "type": "function"
 },
 "holopy.inference.emcee.TemperedStrategy.sample": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "enumerate",
    "holopy.inference.emcee.time",
    "holopy.inference.result.TemperedSamplingResult"
   ]
  },
  "type": "function"
 },
 "holopy.inference.emcee._EMCEE_MISSING": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "holopy.inference.emcee.choose_pool": {
  "data": {
   "shadows": "holopy.core.utils.choose_pool"
  },
  "type": "import"
 },
 "holopy.inference.emcee.emcee": {
  "data": {
   "shadows": "emcee"
  },
  "type": "import"
 },
 "holopy.inference.emcee.emcee_lnprobs_DataArray": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "AttributeError",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.inference.emcee.emcee_samples_DataArray": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "AttributeError",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.inference.emcee.fit_warning": {
  "data": {
   "shadows": "holopy.fitting.fit_warning"
  },
  "type": "import"
 },
 "holopy.inference.emcee.make_subset_data": {
  "data": {
   "shadows": "holopy.core.metadata.make_subset_data"
  },
  "type": "import"
 },
 "holopy.inference.emcee.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "holopy.inference.emcee.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.inference.emcee.prior": {
  "data": {
   "shadows": "holopy.inference.prior"
  },
  "type": "import"
 },
 "holopy.inference.emcee.sample_emcee": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "holopy.core.errors.DependencyMissing",
    "holopy.core.utils.LnpostWrapper",
    "holopy.core.utils.choose_pool",
    "holopy.inference.emcee._EMCEE_MISSING",
    "holopy.inference.emcee.emcee",
    "len",
    "numpy.random.mtrand.RandomState",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "holopy.inference.emcee.sample_one_sigma_gaussian": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "holopy.inference.prior.updated",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "holopy.inference.emcee.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "holopy.inference.emcee.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "holopy.inference.fit": {
  "data": {
   "shadows": "holopy.inference.interface.fit"
  },
  "type": "import"
 },
 "holopy.inference.interface": {
  "data": {
   "symbols_in_volume": [
    "holopy.inference.model.ALL_STRATEGIES"
   ]
  },
  "type": "module"
 },
 "holopy.inference.interface.ALL_STRATEGIES": {
  "data": {
   "shadows": "holopy.inference.model.ALL_STRATEGIES"
  },
  "type": "import"
 },
 "holopy.inference.interface.AlphaModel": {
  "data": {
   "shadows": "holopy.inference.model.AlphaModel"
  },
  "type": "import"
 },
 "holopy.inference.interface.Model": {
  "data": {
   "shadows": "holopy.inference.model.Model"
  },
  "type": "import"
 },
 "holopy.inference.interface.Scatterer": {
  "data": {
   "shadows": "holopy.scattering.Scatterer"
  },
  "type": "import"
 },
 "holopy.inference.interface.Uniform": {
  "data": {
   "shadows": "holopy.inference.prior.Uniform"
  },
  "type": "import"
 },
 "holopy.inference.interface._interpret_parameters": {
  "data": {
   "shadows": "holopy.scattering.scatterer._interpret_parameters"
  },
  "type": "import"
 },
 "holopy.inference.interface.available_fit_strategies": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "holopy.inference.interface.available_sampling_strategies": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "holopy.inference.interface.fit": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "UserWarning",
    "holopy.inference.interface.warnings",
    "holopy.scattering.Scatterer",
    "isinstance",
    "make_default_model"
   ]
  },
  "type": "function"
 },
 "holopy.inference.interface.make_default_model": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "holopy.inference.model.AlphaModel",
    "holopy.inference.prior.Uniform",
    "parameterize_scatterer"
   ]
  },
  "type": "function"
 },
 "holopy.inference.interface.make_uniform": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "holopy.inference.prior.Uniform",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "holopy.inference.interface.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.inference.interface.parameterize_scatterer": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "holopy.scattering.scatterer._interpret_parameters",
    "make_uniform",
    "rename_xyz",
    "type"
   ]
  },
  "type": "function"
 },
 "holopy.inference.interface.rename_xyz": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "holopy.inference.interface.sample": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "holopy.inference.model.Model",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "holopy.inference.interface.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "holopy.inference.model": {
  "data": {
   "symbols_in_volume": [
    "NotImplemented",
    "holopy.inference.cmaes.CmaStrategy",
    "holopy.inference.emcee.EmceeStrategy",
    "holopy.inference.emcee.TemperedStrategy",
    "holopy.inference.nmpfit.NmpfitStrategy",
    "holopy.inference.scipyfit.LeastSquaresScipyStrategy"
   ]
  },
  "type": "module"
 },
 "holopy.inference.model.ALL_STRATEGIES": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "holopy.inference.model.AlphaModel": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "holopy.inference.model.Model"
   ]
  },
  "type": "class"
 },
 "holopy.inference.model.AlphaModel.__init__": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "holopy.inference.model.AlphaModel.forward": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "holopy.scattering.errors.InvalidScatterer",
    "holopy.scattering.errors.MultisphereFailure",
    "holopy.scattering.errors.TmatrixFailure",
    "holopy.scattering.interface.calc_holo",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "holopy.inference.model.CmaStrategy": {
  "data": {
   "shadows": "holopy.inference.cmaes.CmaStrategy"
  },
  "type": "import"
 },
 "holopy.inference.model.DEFAULT_STRATEGY": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "holopy.inference.model.EmceeStrategy": {
  "data": {
   "shadows": "holopy.inference.emcee.EmceeStrategy"
  },
  "type": "import"
 },
 "holopy.inference.model.ExactModel": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "holopy.inference.model.Model"
   ]
  },
  "type": "class"
 },
 "holopy.inference.model.ExactModel.__init__": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "holopy.scattering.interface.calc_holo",
    "super"
   ]
  },
  "type": "function"
 },
 "holopy.inference.model.ExactModel.forward": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "holopy.scattering.errors.InvalidScatterer",
    "holopy.scattering.errors.MultisphereFailure",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "holopy.inference.model.HoloPyObject": {
  "data": {
   "shadows": "holopy.core.holopy_object.HoloPyObject"
  },
  "type": "import"
 },
 "holopy.inference.model.InvalidScatterer": {
  "data": {
   "shadows": "holopy.scattering.errors.InvalidScatterer"
  },
  "type": "import"
 },
 "holopy.inference.model.LeastSquaresScipyStrategy": {
  "data": {
   "shadows": "holopy.inference.scipyfit.LeastSquaresScipyStrategy"
  },
  "type": "import"
 },
 "holopy.inference.model.LimitOverlaps": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "holopy.core.holopy_object.HoloPyObject"
   ]
  },
  "type": "class"
 },
 "holopy.inference.model.LimitOverlaps.__init__": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "holopy.inference.model.LimitOverlaps.check": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "holopy.inference.model.MieLens": {
  "data": {
   "shadows": "holopy.scattering.theory.MieLens"
  },
  "type": "import"
 },
 "holopy.inference.model.MissingParameter": {
  "data": {
   "shadows": "holopy.scattering.errors.MissingParameter"
  },
  "type": "import"
 },
 "holopy.inference.model.Model": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "holopy.core.holopy_object.HoloPyObject"
   ]
  },
  "type": "class"
 },
 "holopy.inference.model.Model.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "dict",
    "holopy.core.utils.ensure_array",
    "holopy.core.utils.ensure_listlike",
    "holopy.inference.prior.Prior",
    "isinstance",
    "numpy.isscalar"
   ]
  },
  "type": "function"
 },
 "holopy.inference.model.Model._check_parameters_are_not_xarray": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.inference.model.Model._find_noise": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "holopy.core.metadata.dict_to_array",
    "holopy.inference.prior.Uniform",
    "holopy.scattering.errors.MissingParameter",
    "isinstance",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "holopy.inference.model.Model._get_parameter": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "holopy.scattering.errors.MissingParameter",
    "holopy.scattering.scatterer._interpret_parameters"
   ]
  },
  "type": "function"
 },
 "holopy.inference.model.Model._optics_scatterer": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "holopy.inference.model.Model._residuals": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "holopy.inference.model.Model._use_parameters": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "copy.copy",
    "dict",
    "holopy.inference.prior.Prior",
    "holopy.scattering.scatterer._expand_parameters",
    "isinstance",
    "setattr"
   ]
  },
  "type": "function"
 },
 "holopy.inference.model.Model.fit": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "holopy.inference.model.Model.forward": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "holopy.inference.model.Model.generate_guess": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "holopy.inference.prior.generate_guess"
   ]
  },
  "type": "function"
 },
 "holopy.inference.model.Model.lnlike": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "holopy.core.utils.ensure_array",
    "holopy.core.utils.ensure_scalar",
    "numpy.log",
    "numpy.mean",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "holopy.inference.model.Model.lnposterior": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "holopy.core.metadata.make_subset_data",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "holopy.inference.model.Model.lnprior": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "hasattr",
    "holopy.scattering.errors.InvalidScatterer",
    "numpy.inf",
    "sum"
   ]
  },
  "type": "function"
 },
 "holopy.inference.model.Model.parameters": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.inference.model.Model.sample": {
  "data": {
   "lineno": 208
  },
  "type": "function"
 },
 "holopy.inference.model.Model.validate_strategy": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "hasattr",
    "holopy.inference.model.ALL_STRATEGIES",
    "holopy.inference.model.DEFAULT_STRATEGY",
    "isinstance",
    "str",
    "strategy",
    "type"
   ]
  },
  "type": "function"
 },
 "holopy.inference.model.MultisphereFailure": {
  "data": {
   "shadows": "holopy.scattering.errors.MultisphereFailure"
  },
  "type": "import"
 },
 "holopy.inference.model.NmpfitStrategy": {
  "data": {
   "shadows": "holopy.inference.nmpfit.NmpfitStrategy"
  },
  "type": "import"
 },
 "holopy.inference.model.PerfectLensModel": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "holopy.inference.model.Model"
   ]
  },
  "type": "class"
 },
 "holopy.inference.model.PerfectLensModel.__init__": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "holopy.inference.model.PerfectLensModel.forward": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "holopy.scattering.errors.InvalidScatterer",
    "holopy.scattering.interface.calc_holo",
    "holopy.scattering.theory.MieLens",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "holopy.inference.model.Prior": {
  "data": {
   "shadows": "holopy.inference.prior.Prior"
  },
  "type": "import"
 },
 "holopy.inference.model.TemperedStrategy": {
  "data": {
   "shadows": "holopy.inference.emcee.TemperedStrategy"
  },
  "type": "import"
 },
 "holopy.inference.model.TmatrixFailure": {
  "data": {
   "shadows": "holopy.scattering.errors.TmatrixFailure"
  },
  "type": "import"
 },
 "holopy.inference.model.Uniform": {
  "data": {
   "shadows": "holopy.inference.prior.Uniform"
  },
  "type": "import"
 },
 "holopy.inference.model._expand_parameters": {
  "data": {
   "shadows": "holopy.scattering.scatterer._expand_parameters"
  },
  "type": "import"
 },
 "holopy.inference.model._interpret_parameters": {
  "data": {
   "shadows": "holopy.scattering.scatterer._interpret_parameters"
  },
  "type": "import"
 },
 "holopy.inference.model.calc_holo": {
  "data": {
   "shadows": "holopy.scattering.interface.calc_holo"
  },
  "type": "import"
 },
 "holopy.inference.model.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "holopy.inference.model.dict_to_array": {
  "data": {
   "shadows": "holopy.core.metadata.dict_to_array"
  },
  "type": "import"
 },
 "holopy.inference.model.ensure_array": {
  "data": {
   "shadows": "holopy.core.utils.ensure_array"
  },
  "type": "import"
 },
 "holopy.inference.model.ensure_listlike": {
  "data": {
   "shadows": "holopy.core.utils.ensure_listlike"
  },
  "type": "import"
 },
 "holopy.inference.model.ensure_scalar": {
  "data": {
   "shadows": "holopy.core.utils.ensure_scalar"
  },
  "type": "import"
 },
 "holopy.inference.model.generate_guess": {
  "data": {
   "shadows": "holopy.inference.prior.generate_guess"
  },
  "type": "import"
 },
 "holopy.inference.model.make_subset_data": {
  "data": {
   "shadows": "holopy.core.metadata.make_subset_data"
  },
  "type": "import"
 },
 "holopy.inference.model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.inference.model.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "holopy.inference.nmpfit": {
  "data": {},
  "type": "module"
 },
 "holopy.inference.nmpfit.FitResult": {
  "data": {
   "shadows": "holopy.inference.result.FitResult"
  },
  "type": "import"
 },
 "holopy.inference.nmpfit.HoloPyObject": {
  "data": {
   "shadows": "holopy.core.holopy_object.HoloPyObject"
  },
  "type": "import"
 },
 "holopy.inference.nmpfit.MissingParameter": {
  "data": {
   "shadows": "holopy.scattering.errors.MissingParameter"
  },
  "type": "import"
 },
 "holopy.inference.nmpfit.NmpfitStrategy": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "holopy.core.holopy_object.HoloPyObject"
   ]
  },
  "type": "class"
 },
 "holopy.inference.nmpfit.NmpfitStrategy.__init__": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "holopy.inference.nmpfit.NmpfitStrategy.fit": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "holopy.core.metadata.make_subset_data",
    "holopy.inference.nmpfit.time",
    "holopy.inference.nmpfit.warnings",
    "holopy.inference.result.FitResult",
    "holopy.inference.result.UncertainValue",
    "holopy.scattering.errors.MissingParameter",
    "len",
    "setattr"
   ]
  },
  "type": "function"
 },
 "holopy.inference.nmpfit.NmpfitStrategy.fit.residual": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "numpy.append",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "holopy.inference.nmpfit.NmpfitStrategy.minimize": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "RuntimeWarning",
    "hasattr",
    "holopy.inference.nmpfit.warnings",
    "holopy.inference.third_party.nmpfit.mpfit",
    "numpy.NaN",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "holopy.inference.nmpfit.NmpfitStrategy.minimize.resid_wrapper": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "obj_func"
   ]
  },
  "type": "function"
 },
 "holopy.inference.nmpfit.NmpfitStrategy.unscale_pars_from_minimizer": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "holopy.inference.nmpfit.ParameterSpecificationError": {
  "data": {
   "shadows": "holopy.scattering.errors.ParameterSpecificationError"
  },
  "type": "import"
 },
 "holopy.inference.nmpfit.UncertainValue": {
  "data": {
   "shadows": "holopy.inference.result.UncertainValue"
  },
  "type": "import"
 },
 "holopy.inference.nmpfit.Uniform": {
  "data": {
   "shadows": "holopy.inference.prior.Uniform"
  },
  "type": "import"
 },
 "holopy.inference.nmpfit.chisq": {
  "data": {
   "shadows": "holopy.core.math.chisq"
  },
  "type": "import"
 },
 "holopy.inference.nmpfit.flat": {
  "data": {
   "shadows": "holopy.core.metadata.flat"
  },
  "type": "import"
 },
 "holopy.inference.nmpfit.make_subset_data": {
  "data": {
   "shadows": "holopy.core.metadata.make_subset_data"
  },
  "type": "import"
 },
 "holopy.inference.nmpfit.nmpfit": {
  "data": {
   "shadows": "holopy.inference.third_party.nmpfit"
  },
  "type": "import"
 },
 "holopy.inference.nmpfit.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.inference.nmpfit.rsq": {
  "data": {
   "shadows": "holopy.core.math.rsq"
  },
  "type": "import"
 },
 "holopy.inference.nmpfit.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "holopy.inference.nmpfit.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "holopy.inference.prior": {
  "data": {},
  "type": "module"
 },
 "holopy.inference.prior.BoundedGaussian": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "holopy.inference.prior.Gaussian"
   ]
  },
  "type": "class"
 },
 "holopy.inference.prior.BoundedGaussian.__init__": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "holopy.scattering.errors.ParameterSpecificationError",
    "numpy.inf",
    "super"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.BoundedGaussian.__neg__": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "holopy.inference.prior.BoundedGaussian"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.BoundedGaussian._add": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "holopy.inference.prior.BoundedGaussian"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.BoundedGaussian._multiply": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "holopy.inference.prior.BoundedGaussian"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.BoundedGaussian.lnprob": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "numpy.inf",
    "super"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.BoundedGaussian.prob": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.BoundedGaussian.sample": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "len",
    "numpy.any",
    "numpy.logical_or",
    "numpy.where",
    "super"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.ComplexPrior": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "holopy.inference.prior.Prior"
   ]
  },
  "type": "class"
 },
 "holopy.inference.prior.ComplexPrior.__add__": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "holopy.inference.prior.ComplexPrior",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.ComplexPrior.__init__": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "holopy.inference.prior.ComplexPrior.__neg__": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "holopy.inference.prior.ComplexPrior"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.ComplexPrior._add": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "holopy.inference.prior.ComplexPrior",
    "numpy.imag",
    "numpy.real"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.ComplexPrior._multiply": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "holopy.inference.prior.ComplexPrior"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.ComplexPrior.guess": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "get_val",
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.ComplexPrior.guess.get_val": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.ComplexPrior.lnprob": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.imag",
    "numpy.real"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.ComplexPrior.prob": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.ComplexPrior.sample": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "get_val"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.ComplexPrior.sample.get_val": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.EPS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "holopy.inference.prior.Gaussian": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "holopy.inference.prior.Prior"
   ]
  },
  "type": "class"
 },
 "holopy.inference.prior.Gaussian.__add__": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "holopy.inference.prior.Gaussian",
    "isinstance",
    "numpy.sqrt",
    "super"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.Gaussian.__init__": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "abs",
    "holopy.scattering.errors.ParameterSpecificationError",
    "numpy.log",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.Gaussian.__neg__": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "holopy.inference.prior.Gaussian"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.Gaussian._add": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "holopy.inference.prior.Gaussian"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.Gaussian._multiply": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "holopy.inference.prior.Gaussian"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.Gaussian.guess": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.Gaussian.lnprob": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "holopy.inference.prior.Gaussian.prob": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "scipy.stats.norm.pdf"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.Gaussian.sample": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "numpy.random.normal"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.Gaussian.variance": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.HoloPyObject": {
  "data": {
   "shadows": "holopy.core.holopy_object.HoloPyObject"
  },
  "type": "import"
 },
 "holopy.inference.prior.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "holopy.inference.prior.ParameterSpecificationError": {
  "data": {
   "shadows": "holopy.scattering.errors.ParameterSpecificationError"
  },
  "type": "import"
 },
 "holopy.inference.prior.Prior": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "holopy.core.holopy_object.HoloPyObject"
   ]
  },
  "type": "class"
 },
 "holopy.inference.prior.Prior.__add__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numbers.Number",
    "numpy.array",
    "numpy.ndarray",
    "type"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.Prior.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.Prior.__mul__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numbers.Real",
    "numpy.array",
    "numpy.ndarray",
    "type"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.Prior.__radd__": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "holopy.inference.prior.Prior.__rmul__": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "holopy.inference.prior.Prior.__rsub__": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "holopy.inference.prior.Prior.__sub__": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "holopy.inference.prior.Prior.__truediv__": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "holopy.inference.prior.Prior.scale": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "holopy.inference.prior.Prior.unscale": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "holopy.inference.prior.Real": {
  "data": {
   "shadows": "numbers.Real"
  },
  "type": "import"
 },
 "holopy.inference.prior.Uniform": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "holopy.inference.prior.Prior"
   ]
  },
  "type": "class"
 },
 "holopy.inference.prior.Uniform.__init__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "abs",
    "holopy.inference.prior.EPS",
    "holopy.scattering.errors.ParameterSpecificationError",
    "numpy.isfinite",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.Uniform.__neg__": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "holopy.inference.prior.Uniform"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.Uniform._add": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "holopy.inference.prior.Uniform"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.Uniform._multiply": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "holopy.inference.prior.Uniform"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.Uniform.interval": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.Uniform.lnprob": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.Uniform.prob": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "holopy.inference.prior.Uniform.sample": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.center_find": {
  "data": {
   "shadows": "holopy.core.process.center_find"
  },
  "type": "import"
 },
 "holopy.inference.prior.generate_guess": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "numpy.random.seed",
    "numpy.vstack",
    "scaled_sample"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.generate_guess.scaled_sample": {
  "data": {
   "lineno": 405
  },
  "type": "function"
 },
 "holopy.inference.prior.get_extents": {
  "data": {
   "shadows": "holopy.core.metadata.get_extents"
  },
  "type": "import"
 },
 "holopy.inference.prior.get_spacing": {
  "data": {
   "shadows": "holopy.core.metadata.get_spacing"
  },
  "type": "import"
 },
 "holopy.inference.prior.make_center_priors": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "holopy.core.metadata.get_extents",
    "holopy.core.metadata.get_spacing",
    "holopy.core.process.center_find",
    "holopy.inference.prior.Gaussian",
    "holopy.inference.prior.Uniform",
    "max",
    "zip"
   ]
  },
  "type": "function"
 },
 "holopy.inference.prior.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.inference.prior.random": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "holopy.inference.prior.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "holopy.inference.prior.updated": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "holopy.inference.prior.BoundedGaussian",
    "holopy.inference.prior.Gaussian",
    "max",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result": {
  "data": {},
  "type": "module"
 },
 "holopy.inference.result.FitResult": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "holopy.core.holopy_object.HoloPyObject"
   ]
  },
  "type": "class"
 },
 "holopy.inference.result.FitResult.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "hasattr",
    "holopy.scattering.errors.MissingParameter",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.FitResult._calculate_first_time": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "long_calculation",
    "setattr"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.FitResult._load": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.FitResult._names": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.FitResult._parameters": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.FitResult._save": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "holopy.inference.result.FitResult._serialization_ds": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "copy.copy",
    "getattr",
    "holopy.core.io.io.pack_attrs",
    "holopy.inference.result.yaml",
    "isinstance",
    "len",
    "list",
    "make_yaml",
    "numpy.arange",
    "str",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.merge"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.FitResult._serialization_ds.make_yaml": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "getattr",
    "holopy.core.holopy_object.HoloPyObject",
    "holopy.inference.result.yaml",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.FitResult._source_class": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.FitResult._unserialize": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "classmethod",
    "getattr",
    "holopy.core.holopy_object.FullLoader",
    "holopy.core.io.io.unpack_attrs",
    "holopy.inference.result.get_strategy",
    "holopy.inference.result.warn_text",
    "holopy.inference.result.yaml",
    "list",
    "numpy.array",
    "pandas.MultiIndex",
    "warnings.warn",
    "xarray.DataArray",
    "zip"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.FitResult.add_attr": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.FitResult.best_fit": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "holopy.fitting.fit_warning"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.FitResult.forward": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "hasattr",
    "holopy.core.metadata.copy_metadata",
    "holopy.core.metadata.detector_grid",
    "holopy.core.utils.dict_without",
    "len",
    "numpy.diff"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.FitResult.guess_hologram": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.FitResult.guess_hologram.calculation": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "holopy.inference.result.FitResult.guess_parameters": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.FitResult.guess_scatterer": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.FitResult.hologram": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.FitResult.hologram.calculation": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "holopy.inference.result.FitResult.max_lnprob": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.FitResult.max_lnprob.calculation": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "holopy.inference.result.FitResult.output_scatterer": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "holopy.fitting.fit_warning"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.FitResult.parameters": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "property",
    "zip"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.FitResult.scatterer": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.FullLoader": {
  "data": {
   "shadows": "holopy.core.holopy_object.FullLoader"
  },
  "type": "import"
 },
 "holopy.inference.result.GROUPNAME": {
  "data": {
   "lineno": 300
  },
  "type": "constant"
 },
 "holopy.inference.result.HoloPyObject": {
  "data": {
   "shadows": "holopy.core.holopy_object.HoloPyObject"
  },
  "type": "import"
 },
 "holopy.inference.result.Math": {
  "data": {
   "shadows": "IPython.display.Math"
  },
  "type": "import"
 },
 "holopy.inference.result.MissingParameter": {
  "data": {
   "shadows": "holopy.scattering.errors.MissingParameter"
  },
  "type": "import"
 },
 "holopy.inference.result.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "holopy.inference.result.SamplingResult": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "holopy.inference.result.FitResult"
   ]
  },
  "type": "class"
 },
 "holopy.inference.result.SamplingResult.MAP": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "holopy.fitting.fit_warning"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.SamplingResult.__init__": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.SamplingResult._calc_intervals": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "make_uncertain_value",
    "numpy.percentile",
    "numpy.unravel_index"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.SamplingResult._calc_intervals.make_uncertain_value": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "UncertainValue"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.SamplingResult.burn_in": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "copy.copy",
    "cut_start"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.SamplingResult.burn_in.cut_start": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "len",
    "slice"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.SamplingResult.values": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "holopy.fitting.fit_warning"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.TemperedSamplingResult": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "holopy.inference.result.SamplingResult"
   ]
  },
  "type": "class"
 },
 "holopy.inference.result.TemperedSamplingResult.__init__": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.TemperedSamplingResult._load": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "AttributeError",
    "classmethod",
    "cls",
    "holopy.inference.result.GROUPNAME",
    "holopy.inference.result.SamplingResult",
    "holopy.inference.result.get_strategy",
    "holopy.inference.result.warn_text",
    "len",
    "range",
    "warnings.warn",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.TemperedSamplingResult._save": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "enumerate",
    "holopy.inference.result.GROUPNAME",
    "super"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.UncertainValue": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "holopy.core.holopy_object.HoloPyObject"
   ]
  },
  "type": "class"
 },
 "holopy.inference.result.UncertainValue.__init__": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "holopy.core.utils.ensure_scalar"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.UncertainValue._repr_latex_": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "int",
    "max",
    "min",
    "numpy.log10",
    "round"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "holopy.inference.result.copy_metadata": {
  "data": {
   "shadows": "holopy.core.metadata.copy_metadata"
  },
  "type": "import"
 },
 "holopy.inference.result.detector_grid": {
  "data": {
   "shadows": "holopy.core.metadata.detector_grid"
  },
  "type": "import"
 },
 "holopy.inference.result.dict_without": {
  "data": {
   "shadows": "holopy.core.utils.dict_without"
  },
  "type": "import"
 },
 "holopy.inference.result.ensure_scalar": {
  "data": {
   "shadows": "holopy.core.utils.ensure_scalar"
  },
  "type": "import"
 },
 "holopy.inference.result.fit_warning": {
  "data": {
   "shadows": "holopy.fitting.fit_warning"
  },
  "type": "import"
 },
 "holopy.inference.result.get_strategy": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "holopy.core.holopy_object.FullLoader",
    "holopy.inference.result.warn_text",
    "holopy.inference.result.yaml",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "holopy.inference.result.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "holopy.inference.result.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.inference.result.pack_attrs": {
  "data": {
   "shadows": "holopy.core.io.io.pack_attrs"
  },
  "type": "import"
 },
 "holopy.inference.result.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "holopy.inference.result.scipy.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "holopy.inference.result.unpack_attrs": {
  "data": {
   "shadows": "holopy.core.io.io.unpack_attrs"
  },
  "type": "import"
 },
 "holopy.inference.result.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "holopy.inference.result.warn_text": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "holopy.inference.result.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "holopy.inference.result.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "holopy.inference.sample": {
  "data": {
   "shadows": "holopy.inference.interface.sample"
  },
  "type": "import"
 },
 "holopy.inference.scipyfit": {
  "data": {},
  "type": "module"
 },
 "holopy.inference.scipyfit.FitResult": {
  "data": {
   "shadows": "holopy.inference.result.FitResult"
  },
  "type": "import"
 },
 "holopy.inference.scipyfit.HoloPyObject": {
  "data": {
   "shadows": "holopy.core.holopy_object.HoloPyObject"
  },
  "type": "import"
 },
 "holopy.inference.scipyfit.LeastSquaresScipyStrategy": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "holopy.core.holopy_object.HoloPyObject"
   ]
  },
  "type": "class"
 },
 "holopy.inference.scipyfit.LeastSquaresScipyStrategy.__init__": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "holopy.inference.scipyfit.LeastSquaresScipyStrategy._calculate_unit_noise_errors_from_fit": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "classmethod",
    "numpy.diag",
    "numpy.dot",
    "numpy.linalg.inv",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "holopy.inference.scipyfit.LeastSquaresScipyStrategy.fit": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "holopy.core.metadata.flat",
    "holopy.core.metadata.make_subset_data",
    "holopy.inference.result.FitResult",
    "holopy.inference.result.UncertainValue",
    "holopy.inference.scipyfit.time",
    "holopy.inference.scipyfit.warnings",
    "holopy.scattering.errors.MissingParameter",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "holopy.inference.scipyfit.LeastSquaresScipyStrategy.fit.residual": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.append",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "holopy.inference.scipyfit.LeastSquaresScipyStrategy.minimize": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "scipy.optimize.least_squares"
   ]
  },
  "type": "function"
 },
 "holopy.inference.scipyfit.LeastSquaresScipyStrategy.unscale_pars_from_minimizer": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "holopy.inference.scipyfit.MissingParameter": {
  "data": {
   "shadows": "holopy.scattering.errors.MissingParameter"
  },
  "type": "import"
 },
 "holopy.inference.scipyfit.UncertainValue": {
  "data": {
   "shadows": "holopy.inference.result.UncertainValue"
  },
  "type": "import"
 },
 "holopy.inference.scipyfit.flat": {
  "data": {
   "shadows": "holopy.core.metadata.flat"
  },
  "type": "import"
 },
 "holopy.inference.scipyfit.least_squares": {
  "data": {
   "shadows": "scipy.optimize.least_squares"
  },
  "type": "import"
 },
 "holopy.inference.scipyfit.make_subset_data": {
  "data": {
   "shadows": "holopy.core.metadata.make_subset_data"
  },
  "type": "import"
 },
 "holopy.inference.scipyfit.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.inference.scipyfit.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "holopy.inference.scipyfit.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "holopy.inference.third_party": {
  "data": {},
  "type": "module"
 },
 "holopy.inference.third_party.nmpfit": {
  "data": {},
  "type": "module"
 },
 "holopy.inference.third_party.nmpfit.Serializable": {
  "data": {
   "shadows": "holopy.core.holopy_object.Serializable"
  },
  "type": "import"
 },
 "holopy.inference.third_party.nmpfit.__version__": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "holopy.inference.third_party.nmpfit.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "holopy.inference.third_party.nmpfit.machar": {
  "data": {
   "lineno": 2321,
   "symbols_in_volume": [
    "holopy.core.holopy_object.Serializable"
   ]
  },
  "type": "class"
 },
 "holopy.inference.third_party.nmpfit.machar.__init__": {
  "data": {
   "lineno": 2322,
   "symbols_in_volume": [
    "holopy.inference.third_party.nmpfit.numpy"
   ]
  },
  "type": "function"
 },
 "holopy.inference.third_party.nmpfit.mpfit": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "holopy.core.holopy_object.Serializable"
   ]
  },
  "type": "class"
 },
 "holopy.inference.third_party.nmpfit.mpfit.__init__": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "abs",
    "dict",
    "holopy.inference.third_party.nmpfit.numpy",
    "iterfunct",
    "len",
    "list",
    "machar",
    "max",
    "min",
    "range",
    "str",
    "sum",
    "type"
   ]
  },
  "type": "function"
 },
 "holopy.inference.third_party.nmpfit.mpfit.calc_covar": {
  "data": {
   "lineno": 2263,
   "symbols_in_volume": [
    "abs",
    "holopy.inference.third_party.nmpfit.numpy",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "holopy.inference.third_party.nmpfit.mpfit.call": {
  "data": {
   "lineno": 1490,
   "symbols_in_volume": [
    "fcn",
    "holopy.inference.third_party.nmpfit.numpy",
    "print"
   ]
  },
  "type": "function"
 },
 "holopy.inference.third_party.nmpfit.mpfit.defiter": {
  "data": {
   "lineno": 1420,
   "symbols_in_volume": [
    "iter",
    "len",
    "print",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "holopy.inference.third_party.nmpfit.mpfit.enorm": {
  "data": {
   "lineno": 1507,
   "symbols_in_volume": [
    "abs",
    "holopy.inference.third_party.nmpfit.numpy",
    "len",
    "max",
    "min",
    "print"
   ]
  },
  "type": "function"
 },
 "holopy.inference.third_party.nmpfit.mpfit.fdjac2": {
  "data": {
   "lineno": 1538,
   "symbols_in_volume": [
    "abs",
    "fcn",
    "holopy.inference.third_party.nmpfit.numpy",
    "len",
    "max",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "holopy.inference.third_party.nmpfit.mpfit.lmpar": {
  "data": {
   "lineno": 2078,
   "symbols_in_volume": [
    "abs",
    "holopy.inference.third_party.nmpfit.numpy",
    "iter",
    "len",
    "max",
    "min",
    "print",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "holopy.inference.third_party.nmpfit.mpfit.parinfo": {
  "data": {
   "lineno": 1464,
   "symbols_in_volume": [
    "float",
    "holopy.inference.third_party.nmpfit.numpy",
    "int",
    "len",
    "list",
    "print",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "holopy.inference.third_party.nmpfit.mpfit.qrfac": {
  "data": {
   "lineno": 1755,
   "symbols_in_volume": [
    "holopy.inference.third_party.nmpfit.numpy",
    "len",
    "max",
    "min",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "holopy.inference.third_party.nmpfit.mpfit.qrsolv": {
  "data": {
   "lineno": 1908,
   "symbols_in_volume": [
    "abs",
    "copy.copy",
    "holopy.inference.third_party.nmpfit.numpy",
    "len",
    "print",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "holopy.inference.third_party.nmpfit.mpfit.tie": {
  "data": {
   "lineno": 2186,
   "symbols_in_volume": [
    "exec",
    "len",
    "print",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "holopy.inference.third_party.nmpfit.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.inference.third_party.nmpfit.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "holopy.load": {
  "data": {
   "shadows": "holopy.core.load"
  },
  "type": "import"
 },
 "holopy.load_image": {
  "data": {
   "shadows": "holopy.core.load_image"
  },
  "type": "import"
 },
 "holopy.propagate": {
  "data": {
   "shadows": "holopy.propagation.propagate"
  },
  "type": "import"
 },
 "holopy.propagation": {
  "data": {},
  "type": "module"
 },
 "holopy.propagation.convolution_propagation": {
  "data": {},
  "type": "module"
 },
 "holopy.propagation.convolution_propagation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.propagation.convolution_propagation.propagate": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "MissingParameter",
    "copy_metadata",
    "fft",
    "ifft",
    "numpy.array",
    "numpy.delete",
    "numpy.isscalar",
    "numpy.nonzero",
    "trans_func",
    "update_metadata",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "holopy.propagation.convolution_propagation.trans_func": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "abs",
    "ensure_array",
    "ft_coord",
    "hasattr",
    "int",
    "numpy.exp",
    "numpy.pi",
    "numpy.sqrt",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.propagation.convolution_propagation.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "holopy.propagation.point_source_propagate": {
  "data": {},
  "type": "module"
 },
 "holopy.propagation.point_source_propagate.RectBivariateSpline": {
  "data": {
   "shadows": "scipy.interpolate.RectBivariateSpline"
  },
  "type": "import"
 },
 "holopy.propagation.point_source_propagate.concat": {
  "data": {
   "shadows": "xarray.concat"
  },
  "type": "import"
 },
 "holopy.propagation.point_source_propagate.copy_metadata": {
  "data": {
   "shadows": "holopy.core.metadata.copy_metadata"
  },
  "type": "import"
 },
 "holopy.propagation.point_source_propagate.data_grid": {
  "data": {
   "shadows": "holopy.core.metadata.data_grid"
  },
  "type": "import"
 },
 "holopy.propagation.point_source_propagate.fsolve": {
  "data": {
   "shadows": "scipy.optimize.fsolve"
  },
  "type": "import"
 },
 "holopy.propagation.point_source_propagate.get_spacing": {
  "data": {
   "shadows": "holopy.core.metadata.get_spacing"
  },
  "type": "import"
 },
 "holopy.propagation.point_source_propagate.interpolate2D": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.where",
    "scipy.interpolate.RectBivariateSpline"
   ]
  },
  "type": "function"
 },
 "holopy.propagation.point_source_propagate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.propagation.point_source_propagate.ps_propagate": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.ndarray",
    "ps_propagate_plane",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "holopy.propagation.point_source_propagate.ps_propagate_plane": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "Ip_calc",
    "bool",
    "float",
    "holopy.core.metadata.copy_metadata",
    "holopy.core.metadata.data_grid",
    "holopy.core.metadata.get_spacing",
    "int",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.exp",
    "numpy.fft.fftshift",
    "numpy.fft.ifft2",
    "numpy.fromfunction",
    "numpy.pi",
    "numpy.sqrt",
    "print",
    "scipy.optimize.fsolve"
   ]
  },
  "type": "function"
 },
 "holopy.propagation.point_source_propagate.ps_propagate_plane.Ip_calc": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "bool",
    "int",
    "interpolate2D",
    "isinstance",
    "numpy.array",
    "numpy.exp",
    "numpy.inf",
    "numpy.sqrt",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "holopy.propagation.point_source_propagate.ps_propagate_plane.X0_f": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "holopy.propagation.point_source_propagate.ps_propagate_plane.to_solve": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "X0_f",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "holopy.propagation.propagate": {
  "data": {
   "shadows": "holopy.propagation.convolution_propagation.propagate"
  },
  "type": "import"
 },
 "holopy.propagation.ps_propagate": {
  "data": {
   "shadows": "holopy.propagation.point_source_propagate.ps_propagate"
  },
  "type": "import"
 },
 "holopy.propagation.tests": {
  "data": {},
  "type": "module"
 },
 "holopy.propagation.tests.test_propagation": {
  "data": {},
  "type": "module"
 },
 "holopy.propagation.tests.test_propagation.Mie": {
  "data": {
   "shadows": "holopy.scattering.Mie"
  },
  "type": "import"
 },
 "holopy.propagation.tests.test_propagation.Sphere": {
  "data": {
   "shadows": "holopy.scattering.Sphere"
  },
  "type": "import"
 },
 "holopy.propagation.tests.test_propagation.assert_obj_close": {
  "data": {
   "shadows": "holopy.core.tests.common.assert_obj_close"
  },
  "type": "import"
 },
 "holopy.propagation.tests.test_propagation.attr": {
  "data": {
   "shadows": "nose.plugins.attrib.attr"
  },
  "type": "import"
 },
 "holopy.propagation.tests.test_propagation.calc_field": {
  "data": {
   "shadows": "holopy.scattering.calc_field"
  },
  "type": "import"
 },
 "holopy.propagation.tests.test_propagation.detector_grid": {
  "data": {
   "shadows": "holopy.core.detector_grid"
  },
  "type": "import"
 },
 "holopy.propagation.tests.test_propagation.get_example_data": {
  "data": {
   "shadows": "holopy.core.tests.common.get_example_data"
  },
  "type": "import"
 },
 "holopy.propagation.tests.test_propagation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.propagation.tests.test_propagation.propagate": {
  "data": {
   "shadows": "holopy.propagation.propagate"
  },
  "type": "import"
 },
 "holopy.propagation.tests.test_propagation.test_gradient_filter": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "holopy.core.tests.common.get_example_data",
    "holopy.core.tests.common.verify",
    "holopy.propagation.propagate",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.propagation.tests.test_propagation.test_propagate_0_distance": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "holopy.core.tests.common.assert_obj_close",
    "holopy.core.tests.common.get_example_data",
    "holopy.core.tests.common.verify",
    "holopy.propagation.propagate",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.propagation.tests.test_propagation.test_propagate_e_field": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "holopy.core.detector_grid",
    "holopy.core.tests.common.verify",
    "holopy.propagation.propagate",
    "holopy.scattering.Mie",
    "holopy.scattering.Sphere",
    "holopy.scattering.calc_field",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.propagation.tests.test_propagation.test_reconstruction": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "holopy.core.tests.common.get_example_data",
    "holopy.core.tests.common.verify",
    "holopy.propagation.propagate",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.propagation.tests.test_propagation.verify": {
  "data": {
   "shadows": "holopy.core.tests.common.verify"
  },
  "type": "import"
 },
 "holopy.propagation.tests.test_ps_propagate": {
  "data": {},
  "type": "module"
 },
 "holopy.propagation.tests.test_ps_propagate.attr": {
  "data": {
   "shadows": "nose.plugins.attrib.attr"
  },
  "type": "import"
 },
 "holopy.propagation.tests.test_ps_propagate.center_of_mass": {
  "data": {
   "shadows": "scipy.ndimage.measurements.center_of_mass"
  },
  "type": "import"
 },
 "holopy.propagation.tests.test_ps_propagate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.propagation.tests.test_ps_propagate.simplefilter": {
  "data": {
   "shadows": "warnings.simplefilter"
  },
  "type": "import"
 },
 "holopy.propagation.tests.test_ps_propagate.test_ps": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "bg_correct",
    "get_example_data_path",
    "load_image",
    "nose.plugins.attrib.attr",
    "ps_propagate",
    "scipy.ndimage.measurements.center_of_mass",
    "subimage",
    "verify",
    "warnings.simplefilter"
   ]
  },
  "type": "function"
 },
 "holopy.save": {
  "data": {
   "shadows": "holopy.core.save"
  },
  "type": "import"
 },
 "holopy.save_image": {
  "data": {
   "shadows": "holopy.core.save_image"
  },
  "type": "import"
 },
 "holopy.scattering": {
  "data": {},
  "type": "module"
 },
 "holopy.scattering.Bisphere": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Bisphere"
  },
  "type": "import"
 },
 "holopy.scattering.Capsule": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Capsule"
  },
  "type": "import"
 },
 "holopy.scattering.Cylinder": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Cylinder"
  },
  "type": "import"
 },
 "holopy.scattering.DDA": {
  "data": {
   "shadows": "holopy.scattering.theory.DDA"
  },
  "type": "import"
 },
 "holopy.scattering.Ellipsoid": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Ellipsoid"
  },
  "type": "import"
 },
 "holopy.scattering.JanusSphere_Tapered": {
  "data": {
   "shadows": "holopy.scattering.scatterer.JanusSphere_Tapered"
  },
  "type": "import"
 },
 "holopy.scattering.JanusSphere_Uniform": {
  "data": {
   "shadows": "holopy.scattering.scatterer.JanusSphere_Uniform"
  },
  "type": "import"
 },
 "holopy.scattering.LayeredSphere": {
  "data": {
   "shadows": "holopy.scattering.scatterer.LayeredSphere"
  },
  "type": "import"
 },
 "holopy.scattering.Mie": {
  "data": {
   "shadows": "holopy.scattering.theory.Mie"
  },
  "type": "import"
 },
 "holopy.scattering.MieLens": {
  "data": {
   "shadows": "holopy.scattering.theory.MieLens"
  },
  "type": "import"
 },
 "holopy.scattering.Multisphere": {
  "data": {
   "shadows": "holopy.scattering.theory.Multisphere"
  },
  "type": "import"
 },
 "holopy.scattering.RigidCluster": {
  "data": {
   "shadows": "holopy.scattering.scatterer.RigidCluster"
  },
  "type": "import"
 },
 "holopy.scattering.Scatterer": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Scatterer"
  },
  "type": "import"
 },
 "holopy.scattering.Scatterers": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Scatterers"
  },
  "type": "import"
 },
 "holopy.scattering.Sphere": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Sphere"
  },
  "type": "import"
 },
 "holopy.scattering.Spheres": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Spheres"
  },
  "type": "import"
 },
 "holopy.scattering.Spheroid": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Spheroid"
  },
  "type": "import"
 },
 "holopy.scattering.Tmatrix": {
  "data": {
   "shadows": "holopy.scattering.theory.Tmatrix"
  },
  "type": "import"
 },
 "holopy.scattering.calc_cross_sections": {
  "data": {
   "shadows": "holopy.scattering.interface.calc_cross_sections"
  },
  "type": "import"
 },
 "holopy.scattering.calc_field": {
  "data": {
   "shadows": "holopy.scattering.interface.calc_field"
  },
  "type": "import"
 },
 "holopy.scattering.calc_holo": {
  "data": {
   "shadows": "holopy.scattering.interface.calc_holo"
  },
  "type": "import"
 },
 "holopy.scattering.calc_intensity": {
  "data": {
   "shadows": "holopy.scattering.interface.calc_intensity"
  },
  "type": "import"
 },
 "holopy.scattering.calc_scat_matrix": {
  "data": {
   "shadows": "holopy.scattering.interface.calc_scat_matrix"
  },
  "type": "import"
 },
 "holopy.scattering.errors": {
  "data": {
   "symbols_in_volume": [
    "holopy.scattering.errors.OverlapWarning",
    "holopy.scattering.errors.warnings"
   ]
  },
  "type": "module"
 },
 "holopy.scattering.errors.AutoTheoryFailed": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.errors.AutoTheoryFailed.__init__": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "holopy.scattering.errors.AutoTheoryFailed.__str__": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "holopy.scattering.errors.InvalidScatterer": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.errors.InvalidScatterer.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.errors.MissingParameter": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.errors.MissingParameter.__init__": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "holopy.scattering.errors.MissingParameter.__str__": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "holopy.scattering.errors.MultisphereFailure": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.errors.MultisphereFailure.__str__": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "holopy.scattering.errors.OverlapWarning": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.errors.OverlapWarning.__init__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "holopy.scattering.errors.OverlapWarning.__str__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.errors.ParameterSpecificationError": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.errors.TheoryNotCompatibleError": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.errors.TheoryNotCompatibleError.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.errors.TmatrixFailure": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.errors.TmatrixFailure.__init__": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "holopy.scattering.errors.TmatrixFailure.__str__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "list",
    "open"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.errors.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "holopy.scattering.interface": {
  "data": {},
  "type": "module"
 },
 "holopy.scattering.interface.AutoTheoryFailed": {
  "data": {
   "shadows": "holopy.scattering.errors.AutoTheoryFailed"
  },
  "type": "import"
 },
 "holopy.scattering.interface.Cylinder": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Cylinder"
  },
  "type": "import"
 },
 "holopy.scattering.interface.DDA": {
  "data": {
   "shadows": "holopy.scattering.theory.dda.DDA"
  },
  "type": "import"
 },
 "holopy.scattering.interface.Mie": {
  "data": {
   "shadows": "holopy.scattering.theory.Mie"
  },
  "type": "import"
 },
 "holopy.scattering.interface.MissingParameter": {
  "data": {
   "shadows": "holopy.scattering.errors.MissingParameter"
  },
  "type": "import"
 },
 "holopy.scattering.interface.Multisphere": {
  "data": {
   "shadows": "holopy.scattering.theory.Multisphere"
  },
  "type": "import"
 },
 "holopy.scattering.interface.SerializableMetaclass": {
  "data": {
   "shadows": "holopy.core.holopy_object.SerializableMetaclass"
  },
  "type": "import"
 },
 "holopy.scattering.interface.Sphere": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Sphere"
  },
  "type": "import"
 },
 "holopy.scattering.interface.Spheres": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Spheres"
  },
  "type": "import"
 },
 "holopy.scattering.interface.Spheroid": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Spheroid"
  },
  "type": "import"
 },
 "holopy.scattering.interface.Tmatrix": {
  "data": {
   "shadows": "holopy.scattering.theory.Tmatrix"
  },
  "type": "import"
 },
 "holopy.scattering.interface._expand_parameters": {
  "data": {
   "shadows": "holopy.scattering.scatterer._expand_parameters"
  },
  "type": "import"
 },
 "holopy.scattering.interface._interpret_parameters": {
  "data": {
   "shadows": "holopy.scattering.scatterer._interpret_parameters"
  },
  "type": "import"
 },
 "holopy.scattering.interface.calc_cross_sections": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "holopy.core.metadata.to_vector",
    "holopy.scattering.interface.interpret_theory",
    "numpy.pi",
    "theory",
    "theory.calculate_cross_sections"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.interface.calc_field": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "holopy.scattering.interface.finalize",
    "holopy.scattering.interface.interpret_theory",
    "holopy.scattering.interface.prep_schema",
    "theory",
    "theory.calculate_scattered_field"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.interface.calc_holo": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "dict",
    "hasattr",
    "holopy.core.metadata.dict_to_array",
    "holopy.scattering.interface.finalize",
    "holopy.scattering.interface.interpret_theory",
    "holopy.scattering.interface.prep_schema",
    "holopy.scattering.scatterer._expand_parameters",
    "holopy.scattering.scatterer._interpret_parameters",
    "scattered_field_to_hologram",
    "theory",
    "theory.calculate_scattered_field"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.interface.calc_intensity": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "calc_field",
    "holopy.core.metadata.vector",
    "holopy.scattering.interface.finalize",
    "numpy.abs",
    "theory"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.interface.calc_scat_matrix": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "holopy.scattering.interface.finalize",
    "holopy.scattering.interface.interpret_theory",
    "holopy.scattering.interface.prep_schema",
    "theory",
    "theory.calculate_scattering_matrix"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.interface.copy_metadata": {
  "data": {
   "shadows": "holopy.core.metadata.copy_metadata"
  },
  "type": "import"
 },
 "holopy.scattering.interface.determine_default_theory_for": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "all",
    "holopy.scattering.errors.AutoTheoryFailed",
    "holopy.scattering.scatterer.Cylinder",
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.scatterer.Spheres",
    "holopy.scattering.scatterer.Spheroid",
    "holopy.scattering.theory.Mie",
    "holopy.scattering.theory.Multisphere",
    "holopy.scattering.theory.Tmatrix",
    "holopy.scattering.theory.dda.DDA",
    "isinstance",
    "numpy.isscalar",
    "theory",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.interface.dict_to_array": {
  "data": {
   "shadows": "holopy.core.metadata.dict_to_array"
  },
  "type": "import"
 },
 "holopy.scattering.interface.dict_without": {
  "data": {
   "shadows": "holopy.core.utils.dict_without"
  },
  "type": "import"
 },
 "holopy.scattering.interface.ensure_array": {
  "data": {
   "shadows": "holopy.core.utils.ensure_array"
  },
  "type": "import"
 },
 "holopy.scattering.interface.finalize": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "hasattr",
    "holopy.core.metadata.copy_metadata",
    "holopy.core.metadata.from_flat"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.interface.from_flat": {
  "data": {
   "shadows": "holopy.core.metadata.from_flat"
  },
  "type": "import"
 },
 "holopy.scattering.interface.illumination": {
  "data": {
   "shadows": "holopy.core.metadata.illumination"
  },
  "type": "import"
 },
 "holopy.scattering.interface.interpret_theory": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "determine_default_theory_for",
    "holopy.core.holopy_object.SerializableMetaclass",
    "isinstance",
    "str",
    "theory"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.interface.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.interface.prep_schema": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "holopy.core.metadata.illumination",
    "holopy.core.metadata.update_metadata",
    "holopy.core.metadata.vector",
    "holopy.core.utils.ensure_array",
    "holopy.scattering.errors.MissingParameter",
    "isinstance",
    "len",
    "xarray.DataArray",
    "xarray.broadcast"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.interface.scattered_field_to_hologram": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "holopy.core.metadata.vector",
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.interface.to_vector": {
  "data": {
   "shadows": "holopy.core.metadata.to_vector"
  },
  "type": "import"
 },
 "holopy.scattering.interface.update_metadata": {
  "data": {
   "shadows": "holopy.core.metadata.update_metadata"
  },
  "type": "import"
 },
 "holopy.scattering.interface.vector": {
  "data": {
   "shadows": "holopy.core.metadata.vector"
  },
  "type": "import"
 },
 "holopy.scattering.interface.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "holopy.scattering.interface.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer": {
  "data": {},
  "type": "module"
 },
 "holopy.scattering.scatterer.Bisphere": {
  "data": {
   "shadows": "holopy.scattering.scatterer.bisphere.Bisphere"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.Capsule": {
  "data": {
   "shadows": "holopy.scattering.scatterer.capsule.Capsule"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.CsgScatterer": {
  "data": {
   "shadows": "holopy.scattering.scatterer.csg.CsgScatterer"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.Cylinder": {
  "data": {
   "shadows": "holopy.scattering.scatterer.cylinder.Cylinder"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.Difference": {
  "data": {
   "shadows": "holopy.scattering.scatterer.csg.Difference"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.Ellipsoid": {
  "data": {
   "shadows": "holopy.scattering.scatterer.ellipsoid.Ellipsoid"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.Indicators": {
  "data": {
   "shadows": "holopy.scattering.scatterer.scatterer.Indicators"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.Intersection": {
  "data": {
   "shadows": "holopy.scattering.scatterer.csg.Intersection"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.JanusSphere_Tapered": {
  "data": {
   "shadows": "holopy.scattering.scatterer.janus.JanusSphere_Tapered"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.JanusSphere_Uniform": {
  "data": {
   "shadows": "holopy.scattering.scatterer.janus.JanusSphere_Uniform"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.LayeredSphere": {
  "data": {
   "shadows": "holopy.scattering.scatterer.sphere.LayeredSphere"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.RigidCluster": {
  "data": {
   "shadows": "holopy.scattering.scatterer.spherecluster.RigidCluster"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.Scatterer": {
  "data": {
   "shadows": "holopy.scattering.scatterer.scatterer.Scatterer"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.Scatterers": {
  "data": {
   "shadows": "holopy.scattering.scatterer.composite.Scatterers"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.Sphere": {
  "data": {
   "shadows": "holopy.scattering.scatterer.sphere.Sphere"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.Spheres": {
  "data": {
   "shadows": "holopy.scattering.scatterer.spherecluster.Spheres"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.Spheroid": {
  "data": {
   "shadows": "holopy.scattering.scatterer.spheroid.Spheroid"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.Union": {
  "data": {
   "shadows": "holopy.scattering.scatterer.csg.Union"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer._expand_parameters": {
  "data": {
   "shadows": "holopy.scattering.scatterer.scatterer._expand_parameters"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer._interpret_parameters": {
  "data": {
   "shadows": "holopy.scattering.scatterer.scatterer._interpret_parameters"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.bisphere": {
  "data": {},
  "type": "module"
 },
 "holopy.scattering.scatterer.bisphere.Bisphere": {
  "data": {
   "lineno": 31
  },
  "type": "class"
 },
 "holopy.scattering.scatterer.bisphere.Bisphere.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "InvalidScatterer",
    "len",
    "numpy.isscalar",
    "super"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.bisphere.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.capsule": {
  "data": {},
  "type": "module"
 },
 "holopy.scattering.scatterer.capsule.Capsule": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "holopy.scattering.scatterer.capsule.Capsule.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "InvalidScatterer",
    "len",
    "numpy.isscalar",
    "super"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.capsule.Capsule.indicators": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "Indicators",
    "Sphere",
    "numpy.dot",
    "property",
    "rotation_matrix"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.capsule.Capsule.indicators.cylinder": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.tile",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.capsule.norm": {
  "data": {
   "shadows": "numpy.linalg.norm"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.capsule.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.composite": {
  "data": {},
  "type": "module"
 },
 "holopy.scattering.scatterer.composite.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.composite.Scatterer": {
  "data": {
   "shadows": "holopy.scattering.scatterer.scatterer.Scatterer"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.composite.Scatterers": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "holopy.scattering.scatterer.scatterer.Scatterer"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.scatterer.composite.Scatterers.__getitem__": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.composite.Scatterers.__init__": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.composite.Scatterers.__str__": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.composite.Scatterers._all_ties": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "property",
    "sum"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.composite.Scatterers._check_ties": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.composite.Scatterers._find_new_ties": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "holopy.core.utils.dict_without",
    "isinstance",
    "numbers.Number"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.composite.Scatterers._prettystr": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.composite.Scatterers._reversed_ties": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.composite.Scatterers.add": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.composite.Scatterers.add_tie": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.composite.Scatterers.from_parameters": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "KeyError",
    "dict",
    "int",
    "len",
    "range",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.composite.Scatterers.get_component_list": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.composite.Scatterers.in_domain": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "enumerate",
    "numpy.nonzero"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.composite.Scatterers.index_at": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.composite.Scatterers.parameters": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.composite.Scatterers.raw_parameters": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "enumerate",
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.composite.Scatterers.rotated": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "InvalidScatterer",
    "copy.copy",
    "holopy.core.math.rotate_points",
    "holopy.core.utils.ensure_array",
    "len",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.composite.Scatterers.select": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "copy.copy"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.composite.Scatterers.translated": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "InvalidScatterer",
    "copy.copy",
    "holopy.core.utils.ensure_array",
    "len",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.composite.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.composite.dict_without": {
  "data": {
   "shadows": "holopy.core.utils.dict_without"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.composite.ensure_array": {
  "data": {
   "shadows": "holopy.core.utils.ensure_array"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.composite.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.composite.rotate_points": {
  "data": {
   "shadows": "holopy.core.math.rotate_points"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.composite.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.csg": {
  "data": {},
  "type": "module"
 },
 "holopy.scattering.scatterer.csg.CsgScatterer": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "holopy.scattering.scatterer.Scatterer"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.scatterer.csg.CsgScatterer.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "copy.copy",
    "holopy.scattering.errors.InvalidScatterer"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.csg.CsgScatterer.bounds": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "max",
    "min",
    "property",
    "zip"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.csg.CsgScatterer.rotated": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "holopy.core.math.rotate_points",
    "numpy.array",
    "zip"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.csg.Difference": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "holopy.scattering.scatterer.csg.CsgScatterer"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.scatterer.csg.Difference.bounds": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.csg.Difference.in_domain": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.logical_and",
    "numpy.logical_not"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.csg.Intersection": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "holopy.scattering.scatterer.csg.CsgScatterer"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.scatterer.csg.Intersection.in_domain": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.logical_and"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.csg.InvalidScatterer": {
  "data": {
   "shadows": "holopy.scattering.errors.InvalidScatterer"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.csg.Scatterer": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Scatterer"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.csg.Union": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "holopy.scattering.scatterer.csg.CsgScatterer"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.scatterer.csg.Union.in_domain": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.logical_or"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.csg.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.csg.logical_and": {
  "data": {
   "shadows": "numpy.logical_and"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.csg.logical_not": {
  "data": {
   "shadows": "numpy.logical_not"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.csg.logical_or": {
  "data": {
   "shadows": "numpy.logical_or"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.csg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.csg.rotate_points": {
  "data": {
   "shadows": "holopy.core.math.rotate_points"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.cylinder": {
  "data": {},
  "type": "module"
 },
 "holopy.scattering.scatterer.cylinder.Cylinder": {
  "data": {
   "lineno": 31
  },
  "type": "class"
 },
 "holopy.scattering.scatterer.cylinder.Cylinder.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "InvalidScatterer",
    "len",
    "numpy.isscalar",
    "super"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.cylinder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.ellipsoid": {
  "data": {},
  "type": "module"
 },
 "holopy.scattering.scatterer.ellipsoid.Ellipsoid": {
  "data": {
   "lineno": 43
  },
  "type": "class"
 },
 "holopy.scattering.scatterer.ellipsoid.Ellipsoid.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "InvalidScatterer",
    "len",
    "numpy.isscalar",
    "super"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.ellipsoid.Ellipsoid.indicators": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "Indicators",
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.ellipsoid.all_numbers": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "functools.reduce",
    "holopy.scattering.scatterer.ellipsoid.isnumber"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.ellipsoid.isnumber": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.ellipsoid.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.ellipsoid.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.janus": {
  "data": {},
  "type": "module"
 },
 "holopy.scattering.scatterer.janus.JanusSphere_Tapered": {
  "data": {
   "lineno": 68
  },
  "type": "class"
 },
 "holopy.scattering.scatterer.janus.JanusSphere_Tapered.__init__": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.janus.JanusSphere_Tapered.indicators": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "Indicators",
    "Sphere",
    "max",
    "numpy.dot",
    "property",
    "rotation_matrix"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.janus.JanusSphere_Tapered.indicators.cap": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.janus.JanusSphere_Uniform": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "holopy.scattering.scatterer.janus.JanusSphere_Uniform.__init__": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.janus.JanusSphere_Uniform.indicators": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "Indicators",
    "Sphere",
    "max",
    "numpy.dot",
    "property",
    "rotation_matrix"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.janus.JanusSphere_Uniform.indicators.cap": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.janus.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.scatterer": {
  "data": {},
  "type": "module"
 },
 "holopy.scattering.scatterer.scatterer.CenteredScatterer": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "holopy.scattering.scatterer.scatterer.Scatterer"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.scatterer.scatterer.CenteredScatterer.__init__": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "holopy.scattering.errors.InvalidScatterer",
    "len",
    "numpy.isscalar"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.scatterer.CenteredScatterer.from_parameters": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "_interpret_parameters",
    "copy.copy",
    "isinstance",
    "numbers.Number",
    "type"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.scatterer.CenteredScatterer.parameters": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "_expand_parameters",
    "dict",
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.scatterer.CenteredScatterer.select": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "_interpret_parameters",
    "dict",
    "getattr",
    "holopy.core.utils.ensure_array",
    "isinstance",
    "len",
    "type",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.scatterer.HoloPyObject": {
  "data": {
   "shadows": "holopy.core.holopy_object.HoloPyObject"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.scatterer.Indicators": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "holopy.core.holopy_object.HoloPyObject"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.scatterer.scatterer.Indicators.__call__": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "test"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.scatterer.Indicators.__init__": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "TypeError",
    "holopy.scattering.scatterer.scatterer.bound_union",
    "holopy.scattering.scatterer.scatterer.find_bounds",
    "len"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.scatterer.InvalidScatterer": {
  "data": {
   "shadows": "holopy.scattering.errors.InvalidScatterer"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.scatterer.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.scatterer.ParameterSpecificationError": {
  "data": {
   "shadows": "holopy.scattering.errors.ParameterSpecificationError"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.scatterer.Scatterer": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "holopy.core.holopy_object.HoloPyObject"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.scatterer.scatterer.Scatterer.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "Indicators",
    "holopy.core.utils.ensure_array",
    "isinstance",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.scatterer.Scatterer._index_type": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "numpy.complex",
    "numpy.float",
    "numpy.iscomplex"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.scatterer.Scatterer._voxel_coords": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "len",
    "numpy.concatenate",
    "numpy.isscalar",
    "numpy.mgrid",
    "numpy.newaxis",
    "numpy.ones",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.scatterer.Scatterer.bounds": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "property",
    "zip"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.scatterer.Scatterer.contains": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.scatterer.Scatterer.guess": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.scatterer.Scatterer.in_domain": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "enumerate",
    "list",
    "numpy.array",
    "numpy.nonzero",
    "numpy.zeros",
    "reversed"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.scatterer.Scatterer.index_at": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "enumerate",
    "holopy.core.utils.ensure_array",
    "numpy.append",
    "numpy.complex",
    "numpy.float",
    "numpy.iscomplex",
    "numpy.ones_like"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.scatterer.Scatterer.num_domains": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.scatterer.Scatterer.translated": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "copy.copy",
    "holopy.core.utils.ensure_array",
    "holopy.scattering.errors.InvalidScatterer",
    "len",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.scatterer.Scatterer.voxelate": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.scatterer.Scatterer.voxelate_domains": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.scatterer.Scatterer.x": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.scatterer.Scatterer.y": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.scatterer.Scatterer.z": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.scatterer._expand_parameters": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "add_pars",
    "dict",
    "enumerate",
    "hasattr",
    "isinstance",
    "itertools.chain",
    "len",
    "list",
    "numpy.ndarray",
    "str",
    "tuple",
    "xarray.DataArray",
    "zip"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.scatterer._expand_parameters.add_pars": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "holopy.scattering.scatterer.scatterer._expand_parameters"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.scatterer._interpret_parameters": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "hasattr",
    "holopy.scattering.errors.ParameterSpecificationError",
    "len",
    "range",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.scatterer.bound_union": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "max",
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.scatterer.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.scatterer.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.scatterer.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.scatterer.ensure_array": {
  "data": {
   "shadows": "holopy.core.utils.ensure_array"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.scatterer.find_bounds": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "indicator",
    "iter",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.scatterer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.scatterer.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.sphere": {
  "data": {},
  "type": "module"
 },
 "holopy.scattering.scatterer.sphere.CenteredScatterer": {
  "data": {
   "shadows": "holopy.scattering.scatterer.scatterer.CenteredScatterer"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.sphere.Indicators": {
  "data": {
   "shadows": "holopy.scattering.scatterer.scatterer.Indicators"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.sphere.InvalidScatterer": {
  "data": {
   "shadows": "holopy.scattering.errors.InvalidScatterer"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.sphere.LayeredSphere": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "holopy.scattering.scatterer.sphere.Sphere"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.scatterer.sphere.LayeredSphere.__init__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "holopy.core.utils.ensure_array"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.sphere.LayeredSphere.r": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.zeros",
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.sphere.Sphere": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "holopy.scattering.scatterer.scatterer.CenteredScatterer"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.scatterer.sphere.Sphere.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "TypeError",
    "holopy.scattering.errors.InvalidScatterer",
    "numpy.any",
    "numpy.array",
    "super"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.sphere.Sphere.indicators": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "holopy.core.utils.ensure_array",
    "holopy.scattering.scatterer.scatterer.Indicators",
    "max",
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.sphere.Sphere.like_me": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "enumerate",
    "holopy.core.utils.updated",
    "super"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.sphere.Sphere.num_domains": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "len",
    "numpy.isscalar",
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.sphere.Sphere.rotated": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "copy.copy"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.sphere.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.sphere.ensure_array": {
  "data": {
   "shadows": "holopy.core.utils.ensure_array"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.sphere.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.sphere.updated": {
  "data": {
   "shadows": "holopy.core.utils.updated"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.spherecluster": {
  "data": {
   "symbols_in_volume": [
    "holopy.scattering.errors.OverlapWarning",
    "holopy.scattering.scatterer.spherecluster.warnings"
   ]
  },
  "type": "module"
 },
 "holopy.scattering.scatterer.spherecluster.InvalidScatterer": {
  "data": {
   "shadows": "holopy.scattering.errors.InvalidScatterer"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.spherecluster.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.spherecluster.OverlapWarning": {
  "data": {
   "shadows": "holopy.scattering.errors.OverlapWarning"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.spherecluster.RigidCluster": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "holopy.scattering.scatterer.spherecluster.Spheres"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.scatterer.spherecluster.RigidCluster.__init__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ValueError",
    "holopy.core.utils.ensure_array",
    "holopy.scattering.errors.InvalidScatterer",
    "holopy.scattering.scatterer.spherecluster.Spheres",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.spherecluster.RigidCluster.from_parameters": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "copy.copy",
    "filter",
    "isinstance",
    "numbers.Number",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.spherecluster.RigidCluster.parameters": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "expand",
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.spherecluster.RigidCluster.parameters.expand": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.spherecluster.RigidCluster.scatterers": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.spherecluster.Scatterers": {
  "data": {
   "shadows": "holopy.scattering.scatterer.composite.Scatterers"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.spherecluster.Sphere": {
  "data": {
   "shadows": "holopy.scattering.scatterer.sphere.Sphere"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.spherecluster.Spheres": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "holopy.scattering.scatterer.composite.Scatterers"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.scatterer.spherecluster.Spheres.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "holopy.core.utils.ensure_listlike",
    "holopy.scattering.errors.InvalidScatterer",
    "holopy.scattering.errors.OverlapWarning",
    "holopy.scattering.scatterer.sphere.Sphere",
    "holopy.scattering.scatterer.spherecluster.warnings",
    "isinstance",
    "repr",
    "super"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.spherecluster.Spheres.add": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "holopy.scattering.errors.InvalidScatterer",
    "holopy.scattering.scatterer.sphere.Sphere",
    "isinstance",
    "repr",
    "super"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.spherecluster.Spheres.center": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.spherecluster.Spheres.centers": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.array",
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.spherecluster.Spheres.largest_overlap": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "enumerate",
    "holopy.core.math.cartesian_distance",
    "len",
    "max",
    "numpy.max",
    "range"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.spherecluster.Spheres.n": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.array",
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.spherecluster.Spheres.n_imag": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.array",
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.spherecluster.Spheres.n_real": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.array",
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.spherecluster.Spheres.overlaps": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "enumerate",
    "holopy.core.math.cartesian_distance",
    "len",
    "numpy.max",
    "property",
    "range"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.spherecluster.Spheres.r": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.array",
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.spherecluster.Spheres.x": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.array",
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.spherecluster.Spheres.y": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "numpy.array",
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.spherecluster.Spheres.z": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "numpy.array",
    "property"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.spherecluster.cartesian_distance": {
  "data": {
   "shadows": "holopy.core.math.cartesian_distance"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.spherecluster.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.spherecluster.dict_without": {
  "data": {
   "shadows": "holopy.core.utils.dict_without"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.spherecluster.ensure_array": {
  "data": {
   "shadows": "holopy.core.utils.ensure_array"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.spherecluster.ensure_listlike": {
  "data": {
   "shadows": "holopy.core.utils.ensure_listlike"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.spherecluster.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.spherecluster.rotate_points": {
  "data": {
   "shadows": "holopy.core.math.rotate_points"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.spherecluster.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "holopy.scattering.scatterer.spheroid": {
  "data": {},
  "type": "module"
 },
 "holopy.scattering.scatterer.spheroid.Spheroid": {
  "data": {
   "lineno": 33
  },
  "type": "class"
 },
 "holopy.scattering.scatterer.spheroid.Spheroid.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "InvalidScatterer",
    "len",
    "numpy.isscalar"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.spheroid.Spheroid.indicators": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "Indicators",
    "max",
    "numpy.linalg.inv",
    "property",
    "rotation_matrix"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.spheroid.Spheroid.indicators.spheroidbody": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.tile",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.scatterer.spheroid.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.tests": {
  "data": {},
  "type": "module"
 },
 "holopy.scattering.tests.common": {
  "data": {
   "symbols_in_volume": [
    "holopy.core.detector_grid",
    "holopy.core.update_metadata",
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.tests.common.index",
    "holopy.scattering.tests.common.n_particle_imag",
    "holopy.scattering.tests.common.n_particle_real",
    "holopy.scattering.tests.common.pixel_scale",
    "holopy.scattering.tests.common.radius",
    "holopy.scattering.tests.common.wavelen",
    "holopy.scattering.tests.common.x",
    "holopy.scattering.tests.common.xpolarization",
    "holopy.scattering.tests.common.xschema",
    "holopy.scattering.tests.common.y",
    "holopy.scattering.tests.common.ypolarization",
    "holopy.scattering.tests.common.z"
   ]
  },
  "type": "module"
 },
 "holopy.scattering.tests.common.Sphere": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Sphere"
  },
  "type": "import"
 },
 "holopy.scattering.tests.common.detector_grid": {
  "data": {
   "shadows": "holopy.core.detector_grid"
  },
  "type": "import"
 },
 "holopy.scattering.tests.common.index": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "holopy.scattering.tests.common.n": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "holopy.scattering.tests.common.n_particle_imag": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "holopy.scattering.tests.common.n_particle_real": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "holopy.scattering.tests.common.pixel_scale": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "holopy.scattering.tests.common.radius": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "holopy.scattering.tests.common.scaling_alpha": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "holopy.scattering.tests.common.sphere": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "holopy.scattering.tests.common.update_metadata": {
  "data": {
   "shadows": "holopy.core.update_metadata"
  },
  "type": "import"
 },
 "holopy.scattering.tests.common.wavelen": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "holopy.scattering.tests.common.x": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "holopy.scattering.tests.common.xpolarization": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "holopy.scattering.tests.common.xschema": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "holopy.scattering.tests.common.y": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "holopy.scattering.tests.common.ypolarization": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "holopy.scattering.tests.common.yschema": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "holopy.scattering.tests.common.z": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "holopy.scattering.tests.test_2_color": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "holopy.scattering.tests.test_2_color.unittest"
   ]
  },
  "type": "module"
 },
 "holopy.scattering.tests.test_2_color.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_2_color.Sphere": {
  "data": {
   "shadows": "holopy.scattering.Sphere"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_2_color.Spheres": {
  "data": {
   "shadows": "holopy.scattering.Spheres"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_2_color.TestHologramCalculation": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_2_color.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.tests.test_2_color.TestHologramCalculation.test_calc_holo_with_twocolor_alpha": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_grid",
    "holopy.scattering.Sphere",
    "holopy.scattering.calc_holo",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_2_color.TestHologramCalculation.test_calc_holo_with_twocolor_index": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "holopy.core.metadata.detector_grid",
    "holopy.core.metadata.update_metadata",
    "holopy.core.tests.common.assert_equal",
    "holopy.scattering.Sphere",
    "holopy.scattering.calc_holo",
    "nose.plugins.attrib.attr",
    "numpy.array",
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_2_color.TestHologramCalculation.test_calc_holo_with_twocolor_priors": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_grid",
    "holopy.inference.prior.Uniform",
    "holopy.scattering.Sphere",
    "holopy.scattering.calc_holo",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_2_color.assert_allclose": {
  "data": {
   "shadows": "holopy.core.tests.common.assert_allclose"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_2_color.assert_equal": {
  "data": {
   "shadows": "holopy.core.tests.common.assert_equal"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_2_color.assert_obj_close": {
  "data": {
   "shadows": "holopy.core.tests.common.assert_obj_close"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_2_color.attr": {
  "data": {
   "shadows": "nose.plugins.attrib.attr"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_2_color.calc_holo": {
  "data": {
   "shadows": "holopy.scattering.calc_holo"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_2_color.detector_grid": {
  "data": {
   "shadows": "holopy.core.metadata.detector_grid"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_2_color.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_2_color.prep_schema": {
  "data": {
   "shadows": "holopy.scattering.interface.prep_schema"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_2_color.prior": {
  "data": {
   "shadows": "holopy.inference.prior"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_2_color.test_prep_schema": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "holopy.core.metadata.detector_grid",
    "holopy.core.metadata.to_vector",
    "holopy.core.tests.common.assert_obj_close",
    "holopy.scattering.interface.prep_schema",
    "nose.plugins.attrib.attr",
    "xarray.DataArray",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_2_color.test_select": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "holopy.core.tests.common.assert_equal",
    "holopy.scattering.Sphere",
    "holopy.scattering.Spheres",
    "nose.plugins.attrib.attr",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_2_color.to_vector": {
  "data": {
   "shadows": "holopy.core.metadata.to_vector"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_2_color.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_2_color.update_metadata": {
  "data": {
   "shadows": "holopy.core.metadata.update_metadata"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_2_color.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_basics": {
  "data": {},
  "type": "module"
 },
 "holopy.scattering.tests.test_basics.Difference": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Difference"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_basics.Mie": {
  "data": {
   "shadows": "holopy.scattering.theory.Mie"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_basics.Sphere": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Sphere"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_basics.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_basics.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_basics.assert_obj_close": {
  "data": {
   "shadows": "holopy.core.tests.common.assert_obj_close"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_basics.attr": {
  "data": {
   "shadows": "nose.plugins.attrib.attr"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_basics.calc_field": {
  "data": {
   "shadows": "holopy.scattering.interface.calc_field"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_basics.calc_holo": {
  "data": {
   "shadows": "holopy.scattering.interface.calc_holo"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_basics.calc_intensity": {
  "data": {
   "shadows": "holopy.scattering.interface.calc_intensity"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_basics.detector_grid": {
  "data": {
   "shadows": "holopy.core.detector_grid"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_basics.detector_points": {
  "data": {
   "shadows": "holopy.core.detector_points"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_basics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_basics.test_calc_field": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "abs",
    "holopy.core.detector_grid",
    "holopy.core.metadata.update_metadata",
    "holopy.core.tests.common.assert_obj_close",
    "holopy.scattering.interface.calc_field",
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.theory.Mie",
    "nose.plugins.attrib.attr",
    "numpy.array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_basics.test_calc_holo": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "holopy.core.detector_grid",
    "holopy.scattering.interface.calc_holo",
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.theory.Mie",
    "nose.plugins.attrib.attr",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_basics.test_calc_intensity": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "holopy.core.detector_grid",
    "holopy.scattering.interface.calc_intensity",
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.theory.Mie",
    "nose.plugins.attrib.attr",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_basics.test_csg_construction": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "holopy.scattering.scatterer.Difference",
    "holopy.scattering.scatterer.Sphere",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_basics.test_detector_points": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "holopy.core.detector_points",
    "holopy.scattering.interface.calc_field",
    "holopy.scattering.scatterer.Sphere",
    "nose.plugins.attrib.attr",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_basics.update_metadata": {
  "data": {
   "shadows": "holopy.core.metadata.update_metadata"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_basics.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_composite": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "holopy.scattering.tests.test_composite.unittest"
   ]
  },
  "type": "module"
 },
 "holopy.scattering.tests.test_composite.Sphere": {
  "data": {
   "shadows": "holopy.scattering.Sphere"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_composite.Spheres": {
  "data": {
   "shadows": "holopy.scattering.Spheres"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_composite.TestBasicMethods": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_composite.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.tests.test_composite.TestBasicMethods.test_all_ties": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "holopy.inference.prior.Uniform",
    "holopy.scattering.Sphere",
    "holopy.scattering.Spheres",
    "nose.plugins.attrib.attr",
    "range"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_composite.TestBasicMethods.test_from_parameters_keeps_attributes": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "holopy.scattering.Sphere",
    "holopy.scattering.Spheres",
    "nose.plugins.attrib.attr",
    "numpy.random.rand",
    "range"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_composite.TestBasicMethods.test_getattr": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "holopy.scattering.Sphere",
    "holopy.scattering.Spheres",
    "nose.plugins.attrib.attr",
    "numpy.random.rand",
    "range"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_composite.TestBasicMethods.test_raw_parameters": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "holopy.scattering.Sphere",
    "holopy.scattering.Spheres",
    "nose.plugins.attrib.attr",
    "numpy.random.rand",
    "numpy.sqrt",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_composite.TestBasicMethods.test_reversed_ties": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "holopy.inference.prior.Uniform",
    "holopy.scattering.Sphere",
    "holopy.scattering.Spheres",
    "nose.plugins.attrib.attr",
    "range"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_composite.TestBasicMethods.test_ties": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "holopy.inference.prior.Uniform",
    "holopy.scattering.Sphere",
    "holopy.scattering.Spheres",
    "nose.plugins.attrib.attr",
    "range"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_composite.TestBrokenTies": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_composite.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.tests.test_composite.TestBrokenTies.test_missing_tie": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "holopy.inference.prior.Uniform",
    "holopy.scattering.Sphere",
    "holopy.scattering.Spheres",
    "nose.plugins.attrib.attr",
    "range"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_composite.TestBrokenTies.test_parameters_checks_ties": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ValueError",
    "holopy.inference.prior.Uniform",
    "holopy.scattering.Sphere",
    "holopy.scattering.Spheres",
    "nose.plugins.attrib.attr",
    "range"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_composite.TestBrokenTies.test_unequal_ties": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ValueError",
    "holopy.inference.prior.Uniform",
    "holopy.scattering.Sphere",
    "holopy.scattering.Spheres",
    "nose.plugins.attrib.attr",
    "range"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_composite.TestTiedParameters": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_composite.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.tests.test_composite.TestTiedParameters.test_add_tie": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "holopy.inference.prior.Uniform",
    "holopy.scattering.Sphere",
    "holopy.scattering.Spheres",
    "nose.plugins.attrib.attr",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_composite.TestTiedParameters.test_adding_newly_tied_scatterer": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "holopy.inference.prior.Uniform",
    "holopy.scattering.Sphere",
    "holopy.scattering.Spheres",
    "nose.plugins.attrib.attr",
    "set"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_composite.TestTiedParameters.test_adding_tied_scatterer": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "holopy.inference.prior.Uniform",
    "holopy.scattering.Sphere",
    "holopy.scattering.Spheres",
    "nose.plugins.attrib.attr",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_composite.TestTiedParameters.test_adding_untied_scatterer": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "holopy.inference.prior.Uniform",
    "holopy.scattering.Sphere",
    "holopy.scattering.Spheres",
    "nose.plugins.attrib.attr",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_composite.TestTiedParameters.test_fixed_values_not_tied": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "holopy.scattering.Sphere",
    "holopy.scattering.Spheres",
    "nose.plugins.attrib.attr",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_composite.TestTiedParameters.test_from_parameters": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "holopy.inference.prior.Uniform",
    "holopy.scattering.Sphere",
    "holopy.scattering.Spheres",
    "nose.plugins.attrib.attr",
    "numpy.pi",
    "range"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_composite.TestTiedParameters.test_manual_tie": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "holopy.inference.prior.Uniform",
    "holopy.scattering.Sphere",
    "holopy.scattering.Spheres",
    "nose.plugins.attrib.attr",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_composite.TestTiedParameters.test_not_tied_if_equal": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "holopy.inference.prior.Uniform",
    "holopy.scattering.Sphere",
    "holopy.scattering.Spheres",
    "nose.plugins.attrib.attr",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_composite.TestTiedParameters.test_save_and_open": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "holopy.inference.prior.Uniform",
    "holopy.load",
    "holopy.save",
    "holopy.scattering.Sphere",
    "holopy.scattering.Spheres",
    "holopy.scattering.tests.test_composite.tempfile",
    "nose.plugins.attrib.attr",
    "numpy.pi",
    "range"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_composite.TestTiedParameters.test_tied_if_same_object": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "holopy.inference.prior.Uniform",
    "holopy.scattering.Sphere",
    "holopy.scattering.Spheres",
    "nose.plugins.attrib.attr",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_composite.TestTiedParameters.test_tied_parameter_naming": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "holopy.inference.prior.Uniform",
    "holopy.scattering.Sphere",
    "holopy.scattering.Spheres",
    "nose.plugins.attrib.attr",
    "range"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_composite.Uniform": {
  "data": {
   "shadows": "holopy.inference.prior.Uniform"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_composite.attr": {
  "data": {
   "shadows": "nose.plugins.attrib.attr"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_composite.hp": {
  "data": {
   "shadows": "holopy"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_composite.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_composite.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_composite.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_dda": {
  "data": {},
  "type": "module"
 },
 "holopy.scattering.tests.test_dda.Bisphere": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Bisphere"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_dda.CalledProcessError": {
  "data": {
   "shadows": "subprocess.CalledProcessError"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_dda.Capsule": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Capsule"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_dda.Cylinder": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Cylinder"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_dda.DDA": {
  "data": {
   "shadows": "holopy.scattering.DDA"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_dda.DependencyMissing": {
  "data": {
   "shadows": "holopy.core.errors.DependencyMissing"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_dda.Difference": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Difference"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_dda.Ellipsoid": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Ellipsoid"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_dda.JanusSphere_Uniform": {
  "data": {
   "shadows": "holopy.scattering.scatterer.JanusSphere_Uniform"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_dda.Mie": {
  "data": {
   "shadows": "holopy.scattering.Mie"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_dda.Scatterer": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Scatterer"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_dda.SkipTest": {
  "data": {
   "shadows": "nose.plugins.skip.SkipTest"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_dda.Sphere": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Sphere"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_dda.Spheroid": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Spheroid"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_dda.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_dda.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_dda.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_dda.assert_obj_close": {
  "data": {
   "shadows": "holopy.core.tests.common.assert_obj_close"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_dda.attr": {
  "data": {
   "shadows": "nose.plugins.attrib.attr"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_dda.calc_holo": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "holopy.core.errors.DependencyMissing",
    "holopy.scattering.calc_holo",
    "nose.plugins.skip.SkipTest"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_dda.calc_holo_external": {
  "data": {
   "shadows": "holopy.scattering.calc_holo"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_dda.detector_grid": {
  "data": {
   "shadows": "holopy.core.detector_grid"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_dda.in_sphere": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_dda.in_sphere.test": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_dda.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_dda.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_dda.setup_optics": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "holopy.core.detector_grid",
    "holopy.core.update_metadata"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_dda.teardown_optics": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_dda.test_DDA_coated": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "holopy.scattering.DDA",
    "holopy.scattering.Mie",
    "holopy.scattering.calc_holo",
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.tests.test_dda.setup_optics",
    "holopy.scattering.tests.test_dda.teardown_optics",
    "nose.plugins.attrib.attr",
    "nose.tools.with_setup",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_dda.test_DDA_indicator": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "holopy.scattering.DDA",
    "holopy.scattering.calc_holo",
    "holopy.scattering.scatterer.Scatterer",
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.tests.test_dda.setup_optics",
    "holopy.scattering.tests.test_dda.teardown_optics",
    "nose.plugins.attrib.attr",
    "nose.tools.with_setup",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_dda.test_DDA_sphere": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "holopy.scattering.DDA",
    "holopy.scattering.calc_holo",
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.tests.test_dda.setup_optics",
    "holopy.scattering.tests.test_dda.teardown_optics",
    "nose.plugins.attrib.attr",
    "nose.tools.with_setup",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_dda.test_Ellipsoid_dda": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "holopy.core.detector_grid",
    "holopy.core.errors.DependencyMissing",
    "holopy.core.tests.common.verify",
    "holopy.scattering.DDA",
    "holopy.scattering.calc_holo",
    "holopy.scattering.scatterer.Ellipsoid",
    "holopy.scattering.tests.test_dda.setup_optics",
    "holopy.scattering.tests.test_dda.teardown_optics",
    "nose.plugins.skip.SkipTest",
    "nose.tools.with_setup",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_dda.test_csg_dda": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "holopy.core.detector_grid",
    "holopy.core.tests.common.verify",
    "holopy.scattering.calc_holo",
    "holopy.scattering.scatterer.Difference",
    "holopy.scattering.scatterer.Sphere",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_dda.test_dda_2_cpu": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "holopy.core.errors.DependencyMissing",
    "holopy.scattering.DDA",
    "holopy.scattering.calc_holo",
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.tests.test_dda.os",
    "holopy.scattering.tests.test_dda.setup_optics",
    "holopy.scattering.tests.test_dda.teardown_optics",
    "nose.plugins.skip.SkipTest",
    "nose.tools.with_setup",
    "subprocess.CalledProcessError"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_dda.test_janus": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "holopy.core.detector_grid",
    "holopy.core.tests.common.verify",
    "holopy.scattering.calc_holo",
    "holopy.scattering.scatterer.JanusSphere_Uniform",
    "numpy.pi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_dda.test_predefined_scatterers": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "holopy.core.detector_grid",
    "holopy.core.errors.DependencyMissing",
    "holopy.scattering.DDA",
    "holopy.scattering.calc_holo",
    "holopy.scattering.scatterer.Bisphere",
    "holopy.scattering.scatterer.Capsule",
    "holopy.scattering.scatterer.Cylinder",
    "holopy.scattering.scatterer.Ellipsoid",
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.scatterer.Spheroid",
    "nose.plugins.attrib.attr",
    "nose.plugins.skip.SkipTest"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_dda.test_voxelated_complex": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "holopy.core.detector_grid",
    "holopy.core.tests.common.verify",
    "holopy.scattering.DDA",
    "holopy.scattering.calc_holo",
    "holopy.scattering.scatterer.Scatterer",
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.tests.test_dda.setup_optics",
    "holopy.scattering.tests.test_dda.teardown_optics",
    "nose.plugins.attrib.attr",
    "nose.tools.with_setup"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_dda.update_metadata": {
  "data": {
   "shadows": "holopy.core.update_metadata"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_dda.verify": {
  "data": {
   "shadows": "holopy.core.tests.common.verify"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_dda.with_setup": {
  "data": {
   "shadows": "nose.tools.with_setup"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_interface": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "holopy.core.detector_grid",
    "holopy.scattering.Sphere",
    "holopy.scattering.tests.test_interface.unittest"
   ]
  },
  "type": "module"
 },
 "holopy.scattering.tests.test_interface.Cylinder": {
  "data": {
   "shadows": "holopy.scattering.Cylinder"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_interface.LOCATIONS": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "holopy.scattering.tests.test_interface.MED_INDEX": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "holopy.scattering.tests.test_interface.Mie": {
  "data": {
   "shadows": "holopy.scattering.Mie"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_interface.MissingParameter": {
  "data": {
   "shadows": "holopy.scattering.errors.MissingParameter"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_interface.Multisphere": {
  "data": {
   "shadows": "holopy.scattering.Multisphere"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_interface.POL": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "holopy.scattering.tests.test_interface.SCATTERER": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "holopy.scattering.tests.test_interface.Sphere": {
  "data": {
   "shadows": "holopy.scattering.Sphere"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_interface.Spheres": {
  "data": {
   "shadows": "holopy.scattering.Spheres"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_interface.Spheroid": {
  "data": {
   "shadows": "holopy.scattering.Spheroid"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_interface.TestDetermineDefaultTheoryFor": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_interface.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.tests.test_interface.TestDetermineDefaultTheoryFor.test_determine_default_theory_for_cylinder": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "determine_default_theory_for",
    "holopy.scattering.Cylinder",
    "holopy.scattering.Tmatrix",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_interface.TestDetermineDefaultTheoryFor.test_determine_default_theory_for_layered_spheres": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "determine_default_theory_for",
    "holopy.scattering.Mie",
    "holopy.scattering.Sphere",
    "holopy.scattering.Spheres",
    "holopy.scattering.tests.test_interface.warnings",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_interface.TestDetermineDefaultTheoryFor.test_determine_default_theory_for_sphere": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "determine_default_theory_for",
    "holopy.scattering.Mie",
    "holopy.scattering.Sphere",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_interface.TestDetermineDefaultTheoryFor.test_determine_default_theory_for_spheres": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "determine_default_theory_for",
    "holopy.scattering.Multisphere",
    "holopy.scattering.Sphere",
    "holopy.scattering.Spheres",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_interface.TestDetermineDefaultTheoryFor.test_determine_default_theory_for_spheroid": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "determine_default_theory_for",
    "holopy.scattering.Spheroid",
    "holopy.scattering.Tmatrix",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_interface.TestInterface": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_interface.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.tests.test_interface.TestInterface.test_calc_cross_sections": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "calc_cross_sections",
    "holopy.scattering.tests.test_interface.MED_INDEX",
    "holopy.scattering.tests.test_interface.POL",
    "holopy.scattering.tests.test_interface.SCATTERER",
    "holopy.scattering.tests.test_interface.WAVELEN",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_interface.TestInterface.test_calc_field": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "calc_field",
    "holopy.scattering.tests.test_interface.LOCATIONS",
    "holopy.scattering.tests.test_interface.MED_INDEX",
    "holopy.scattering.tests.test_interface.POL",
    "holopy.scattering.tests.test_interface.SCATTERER",
    "holopy.scattering.tests.test_interface.WAVELEN",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_interface.TestInterface.test_calc_holo": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "calc_holo",
    "holopy.scattering.tests.test_interface.LOCATIONS",
    "holopy.scattering.tests.test_interface.MED_INDEX",
    "holopy.scattering.tests.test_interface.POL",
    "holopy.scattering.tests.test_interface.SCATTERER",
    "holopy.scattering.tests.test_interface.WAVELEN",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_interface.TestInterface.test_calc_intensity": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "calc_intensity",
    "holopy.scattering.tests.test_interface.LOCATIONS",
    "holopy.scattering.tests.test_interface.MED_INDEX",
    "holopy.scattering.tests.test_interface.POL",
    "holopy.scattering.tests.test_interface.SCATTERER",
    "holopy.scattering.tests.test_interface.WAVELEN",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_interface.TestInterface.test_calc_scat_matrix": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "calc_scat_matrix",
    "holopy.scattering.tests.test_interface.LOCATIONS",
    "holopy.scattering.tests.test_interface.MED_INDEX",
    "holopy.scattering.tests.test_interface.SCATTERER",
    "holopy.scattering.tests.test_interface.WAVELEN",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_interface.TestInterface.test_finalize": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "copy_metadata",
    "finalize",
    "holopy.scattering.tests.test_interface.LOCATIONS",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_interface.TestInterface.test_scattered_field_to_hologram": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "nose.plugins.attrib.attr",
    "scattered_field_to_hologram",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_interface.TestInterpretTheory": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_interface.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.tests.test_interface.TestInterpretTheory.test_interpret_auto_theory": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "holopy.scattering.Mie",
    "holopy.scattering.tests.test_interface.SCATTERER",
    "interpret_theory",
    "nose.plugins.attrib.attr",
    "type"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_interface.TestInterpretTheory.test_interpret_specified_theory": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "holopy.scattering.Mie",
    "holopy.scattering.tests.test_interface.SCATTERER",
    "interpret_theory",
    "nose.plugins.attrib.attr",
    "type"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_interface.TestPrepSchema": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_interface.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.tests.test_interface.TestPrepSchema.test_medium_index_missing": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "holopy.scattering.errors.MissingParameter",
    "holopy.scattering.tests.test_interface.LOCATIONS",
    "holopy.scattering.tests.test_interface.POL",
    "holopy.scattering.tests.test_interface.WAVELEN",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_interface.TestPrepSchema.test_multiple_illumination_via_detector_wavelength_shape": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_interface.LOCATIONS",
    "holopy.scattering.tests.test_interface.MED_INDEX",
    "holopy.scattering.tests.test_interface.POL",
    "len",
    "nose.plugins.attrib.attr",
    "prep_schema",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_interface.TestPrepSchema.test_multiple_illumination_via_polarization_shape": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_interface.LOCATIONS",
    "holopy.scattering.tests.test_interface.MED_INDEX",
    "holopy.scattering.tests.test_interface.WAVELEN",
    "len",
    "nose.plugins.attrib.attr",
    "prep_schema",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_interface.TestPrepSchema.test_polarization_missing": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "holopy.scattering.errors.MissingParameter",
    "holopy.scattering.tests.test_interface.LOCATIONS",
    "holopy.scattering.tests.test_interface.MED_INDEX",
    "holopy.scattering.tests.test_interface.WAVELEN",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_interface.TestPrepSchema.test_wavelength_missing": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "holopy.scattering.errors.MissingParameter",
    "holopy.scattering.tests.test_interface.LOCATIONS",
    "holopy.scattering.tests.test_interface.MED_INDEX",
    "holopy.scattering.tests.test_interface.POL",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_interface.Tmatrix": {
  "data": {
   "shadows": "holopy.scattering.Tmatrix"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_interface.WAVELEN": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "holopy.scattering.tests.test_interface.assert_obj_close": {
  "data": {
   "shadows": "holopy.core.tests.common.assert_obj_close"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_interface.attr": {
  "data": {
   "shadows": "nose.plugins.attrib.attr"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_interface.detector_grid": {
  "data": {
   "shadows": "holopy.core.detector_grid"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_interface.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_interface.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_interface.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_io": {
  "data": {},
  "type": "module"
 },
 "holopy.scattering.tests.test_io.attr": {
  "data": {
   "shadows": "nose.plugins.attrib.attr"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_io.test_scatterer_io": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "Sphere",
    "Spheres",
    "assert_read_matches_write",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_layeredmie": {
  "data": {},
  "type": "module"
 },
 "holopy.scattering.tests.test_layeredmie.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_layeredmie.attr": {
  "data": {
   "shadows": "nose.plugins.attrib.attr"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_layeredmie.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_layeredmie.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_layeredmie.test_Shell": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "Mie",
    "Sphere",
    "calc_holo",
    "detector_grid",
    "nose.plugins.attrib.attr",
    "verify"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_layeredmie.test_sooty_particles": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "efficiencies_from_scat_units",
    "holopy.scattering.tests.test_layeredmie.os",
    "holopy.scattering.tests.test_layeredmie.yaml",
    "nose.plugins.attrib.attr",
    "numpy.arange",
    "numpy.array",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "open"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_layeredmie.test_sooty_particles.efficiencies_from_scat_units": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_layeredmie.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_lowlevel": {
  "data": {
   "symbols_in_volume": [
    "numpy.pi"
   ]
  },
  "type": "module"
 },
 "holopy.scattering.tests.test_lowlevel.SkipTest": {
  "data": {
   "shadows": "nose.plugins.skip.SkipTest"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_lowlevel.SuppressOutput": {
  "data": {
   "shadows": "holopy.core.utils.SuppressOutput"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_lowlevel._asm_far": {
  "data": {
   "shadows": "holopy.scattering.theory.multisphere._asm_far"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_lowlevel.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_lowlevel.attr": {
  "data": {
   "shadows": "nose.plugins.attrib.attr"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_lowlevel.conj": {
  "data": {
   "shadows": "numpy.conj"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_lowlevel.dot": {
  "data": {
   "shadows": "numpy.dot"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_lowlevel.exp": {
  "data": {
   "shadows": "numpy.exp"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_lowlevel.imag": {
  "data": {
   "shadows": "numpy.imag"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_lowlevel.kr": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "holopy.scattering.tests.test_lowlevel.kr_asym": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "holopy.scattering.tests.test_lowlevel.mie_specfuncs": {
  "data": {
   "shadows": "holopy.scattering.theory.mie_f.mie_specfuncs"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_lowlevel.mieangfuncs": {
  "data": {
   "shadows": "holopy.scattering.theory.mie_f.mieangfuncs"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_lowlevel.miescatlib": {
  "data": {
   "shadows": "holopy.scattering.theory.mie_f.miescatlib"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_lowlevel.multilayer_sphere_lib": {
  "data": {
   "shadows": "holopy.scattering.theory.mie_f.multilayer_sphere_lib"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_lowlevel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_lowlevel.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_lowlevel.phi": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "holopy.scattering.tests.test_lowlevel.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_lowlevel.real": {
  "data": {
   "shadows": "numpy.real"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_lowlevel.scsmfo_min": {
  "data": {
   "shadows": "holopy.scattering.theory.mie_f.scsmfo_min"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_lowlevel.spherical_jn": {
  "data": {
   "shadows": "scipy.special.spherical_jn"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_lowlevel.spherical_yn": {
  "data": {
   "shadows": "scipy.special.spherical_yn"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_lowlevel.sqrt": {
  "data": {
   "shadows": "numpy.sqrt"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_lowlevel.test_asm": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "holopy.core.utils.SuppressOutput",
    "holopy.scattering.theory.mie_f.scsmfo_min.amncalc",
    "holopy.scattering.theory.multisphere._asm_far",
    "nose.plugins.attrib.attr",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_lowlevel.test_dn1_down_recursion": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "holopy.scattering.theory.mie_f.mie_specfuncs.log_der_1",
    "holopy.scattering.theory.mie_f.mieangfuncs.dn_1_down",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_lowlevel.test_dn1_lentz": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "abs",
    "holopy.scattering.theory.mie_f.mie_specfuncs.log_der_1",
    "holopy.scattering.theory.mie_f.mieangfuncs.dn_1_down",
    "holopy.scattering.theory.mie_f.mieangfuncs.lentz_dn1",
    "holopy.scattering.theory.mie_f.miescatlib.nstop",
    "int",
    "max",
    "nose.plugins.attrib.attr",
    "numpy.array",
    "numpy.ceil",
    "numpy.logspace",
    "numpy.testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_lowlevel.test_mie_amplitude_scattering_matrices": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "AssertionError",
    "holopy.scattering.tests.test_lowlevel.kr",
    "holopy.scattering.tests.test_lowlevel.kr_asym",
    "holopy.scattering.tests.test_lowlevel.os",
    "holopy.scattering.tests.test_lowlevel.phi",
    "holopy.scattering.tests.test_lowlevel.theta",
    "holopy.scattering.tests.test_lowlevel.yaml",
    "holopy.scattering.theory.mie_f.mieangfuncs.asm_mie_far",
    "holopy.scattering.theory.mie_f.mieangfuncs.asm_mie_fullradial",
    "holopy.scattering.theory.mie_f.miescatlib.nstop",
    "holopy.scattering.theory.mie_f.miescatlib.scatcoeffs",
    "massage_into_bh_form",
    "nose.plugins.attrib.attr",
    "numpy.array",
    "numpy.pi",
    "numpy.ravel",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "open"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_lowlevel.test_mie_amplitude_scattering_matrices.massage_into_bh_form": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "abs",
    "holopy.scattering.theory.mie_f.mieangfuncs.asm_mie_far",
    "numpy.array",
    "numpy.conj",
    "numpy.imag",
    "numpy.ravel",
    "numpy.real"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_lowlevel.test_mie_bndy_conds": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "holopy.scattering.theory.mie_f.mieangfuncs.mie_fields",
    "holopy.scattering.theory.mie_f.mieangfuncs.mie_internal_fields",
    "holopy.scattering.theory.mie_f.miescatlib.internal_coeffs",
    "holopy.scattering.theory.mie_f.miescatlib.nstop",
    "holopy.scattering.theory.mie_f.miescatlib.scatcoeffs",
    "nose.plugins.attrib.attr",
    "numpy.array",
    "numpy.exp",
    "numpy.ones",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_lowlevel.test_mie_internal_coeffs": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_lowlevel.os",
    "holopy.scattering.theory.mie_f.miescatlib.internal_coeffs",
    "holopy.scattering.theory.mie_f.miescatlib.nstop",
    "holopy.scattering.theory.mie_f.miescatlib.scatcoeffs",
    "nose.plugins.attrib.attr",
    "nose.plugins.skip.SkipTest",
    "numpy.arange",
    "numpy.testing.assert_allclose",
    "scipy.special.spherical_jn",
    "scipy.special.spherical_yn"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_lowlevel.test_mie_multisphere_singlesph": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "holopy.core.utils.SuppressOutput",
    "holopy.scattering.tests.test_lowlevel.kr",
    "holopy.scattering.theory.mie_f.mieangfuncs.mie_fields",
    "holopy.scattering.theory.mie_f.mieangfuncs.tmatrix_fields",
    "holopy.scattering.theory.mie_f.miescatlib.nstop",
    "holopy.scattering.theory.mie_f.miescatlib.scatcoeffs",
    "holopy.scattering.theory.mie_f.scsmfo_min.amncalc",
    "nose.plugins.attrib.attr",
    "numpy.array",
    "numpy.ones",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_lowlevel.test_polarization_to_scatt_coords": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_lowlevel.phi",
    "holopy.scattering.theory.mie_f.mieangfuncs.incfield",
    "nose.plugins.attrib.attr",
    "numpy.array",
    "numpy.dot",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_lowlevel.test_scattered_field_from_asm": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_lowlevel.kr",
    "holopy.scattering.tests.test_lowlevel.phi",
    "holopy.scattering.theory.mie_f.mieangfuncs.calc_scat_field",
    "nose.plugins.attrib.attr",
    "numpy.array",
    "numpy.exp",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_lowlevel.test_spherical_vector_to_cartesian": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_lowlevel.phi",
    "holopy.scattering.tests.test_lowlevel.theta",
    "holopy.scattering.theory.mie_f.mieangfuncs.fieldstocart",
    "holopy.scattering.theory.mie_f.mieangfuncs.radial_vect_to_cart",
    "nose.plugins.attrib.attr",
    "numpy.array",
    "numpy.dot",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_lowlevel.theta": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "holopy.scattering.tests.test_lowlevel.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie": {
  "data": {},
  "type": "module"
 },
 "holopy.scattering.tests.test_mie.Ellipsoid": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Ellipsoid"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.InvalidScatterer": {
  "data": {
   "shadows": "holopy.scattering.errors.InvalidScatterer"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.LayeredSphere": {
  "data": {
   "shadows": "holopy.scattering.scatterer.LayeredSphere"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.Mie": {
  "data": {
   "shadows": "holopy.scattering.theory.Mie"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.Sphere": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Sphere"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.Spheres": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Spheres"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.TheoryNotCompatibleError": {
  "data": {
   "shadows": "holopy.scattering.errors.TheoryNotCompatibleError"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.assert_obj_close": {
  "data": {
   "shadows": "holopy.core.tests.common.assert_obj_close"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.attr": {
  "data": {
   "shadows": "nose.plugins.attrib.attr"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.calc_cross_sections": {
  "data": {
   "shadows": "holopy.scattering.interface.calc_cross_sections"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.calc_field": {
  "data": {
   "shadows": "holopy.scattering.interface.calc_field"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.calc_holo": {
  "data": {
   "shadows": "holopy.scattering.interface.calc_holo"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.calc_intensity": {
  "data": {
   "shadows": "holopy.scattering.interface.calc_intensity"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.calc_scat_matrix": {
  "data": {
   "shadows": "holopy.scattering.interface.calc_scat_matrix"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.detector_grid": {
  "data": {
   "shadows": "holopy.core.metadata.detector_grid"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.detector_points": {
  "data": {
   "shadows": "holopy.core.metadata.detector_points"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.index": {
  "data": {
   "shadows": "holopy.scattering.tests.common.index"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.n": {
  "data": {
   "shadows": "holopy.scattering.tests.common.n"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.radius": {
  "data": {
   "shadows": "holopy.scattering.tests.common.radius"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.scaling_alpha": {
  "data": {
   "shadows": "holopy.scattering.tests.common.scaling_alpha"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.sphere": {
  "data": {
   "shadows": "holopy.scattering.tests.common.sphere"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.subimage": {
  "data": {
   "shadows": "holopy.core.process.subimage"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.test_Mie_multiple": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "holopy.core.tests.common.verify",
    "holopy.scattering.errors.TheoryNotCompatibleError",
    "holopy.scattering.interface.calc_field",
    "holopy.scattering.interface.calc_holo",
    "holopy.scattering.interface.calc_intensity",
    "holopy.scattering.scatterer.Ellipsoid",
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.scatterer.Spheres",
    "holopy.scattering.tests.common.index",
    "holopy.scattering.tests.common.wavelen",
    "holopy.scattering.tests.common.xpolarization",
    "holopy.scattering.tests.common.ypolarization",
    "holopy.scattering.tests.common.yschema",
    "holopy.scattering.theory.Mie",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "str"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mie.test_calc_scat_coeffs": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.theory.Mie",
    "nose.plugins.attrib.attr",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mie.test_farfield_holo": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "AssertionError",
    "holopy.core.tests.common.assert_obj_close",
    "holopy.scattering.interface.calc_holo",
    "holopy.scattering.tests.common.index",
    "holopy.scattering.tests.common.scaling_alpha",
    "holopy.scattering.tests.common.sphere",
    "holopy.scattering.tests.common.wavelen",
    "holopy.scattering.tests.common.xpolarization",
    "holopy.scattering.tests.common.xschema",
    "holopy.scattering.theory.Mie",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mie.test_farfield_matr": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_points",
    "holopy.core.tests.common.verify",
    "holopy.scattering.interface.calc_scat_matrix",
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.tests.common.index",
    "holopy.scattering.tests.common.sphere",
    "nose.plugins.attrib.attr",
    "numpy.linspace",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mie.test_j0_roots": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_grid",
    "holopy.core.metadata.update_metadata",
    "holopy.scattering.interface.calc_field",
    "holopy.scattering.scatterer.Sphere",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mie.test_large_sphere": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_grid",
    "holopy.core.tests.common.assert_obj_close",
    "holopy.scattering.interface.calc_holo",
    "holopy.scattering.scatterer.Sphere",
    "nose.plugins.attrib.attr",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mie.test_layered": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_grid",
    "holopy.core.tests.common.assert_obj_close",
    "holopy.scattering.interface.calc_holo",
    "holopy.scattering.scatterer.LayeredSphere",
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.tests.common.index",
    "holopy.scattering.tests.common.wavelen",
    "holopy.scattering.tests.common.xpolarization",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mie.test_linearity": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "AssertionError",
    "holopy.scattering.interface.calc_holo",
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.scatterer.Spheres",
    "holopy.scattering.tests.common.index",
    "holopy.scattering.tests.common.n",
    "holopy.scattering.tests.common.scaling_alpha",
    "holopy.scattering.tests.common.wavelen",
    "holopy.scattering.tests.common.x",
    "holopy.scattering.tests.common.xpolarization",
    "holopy.scattering.tests.common.xschema",
    "holopy.scattering.tests.common.y",
    "holopy.scattering.tests.common.z",
    "holopy.scattering.theory.Mie",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mie.test_mie_polarization": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "AssertionError",
    "holopy.core.tests.common.assert_obj_close",
    "holopy.scattering.interface.calc_holo",
    "holopy.scattering.tests.common.index",
    "holopy.scattering.tests.common.scaling_alpha",
    "holopy.scattering.tests.common.sphere",
    "holopy.scattering.tests.common.wavelen",
    "holopy.scattering.tests.common.xpolarization",
    "holopy.scattering.tests.common.xschema",
    "holopy.scattering.tests.common.ypolarization",
    "holopy.scattering.tests.common.yschema",
    "holopy.scattering.theory.Mie",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mie.test_nonlinearity": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "AssertionError",
    "holopy.scattering.interface.calc_holo",
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.scatterer.Spheres",
    "holopy.scattering.tests.common.index",
    "holopy.scattering.tests.common.n",
    "holopy.scattering.tests.common.scaling_alpha",
    "holopy.scattering.tests.common.wavelen",
    "holopy.scattering.tests.common.x",
    "holopy.scattering.tests.common.xpolarization",
    "holopy.scattering.tests.common.xschema",
    "holopy.scattering.tests.common.y",
    "holopy.scattering.tests.common.z",
    "holopy.scattering.theory.Mie",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mie.test_radialEscat": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "AssertionError",
    "holopy.scattering.interface.calc_holo",
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.tests.common.index",
    "holopy.scattering.tests.common.sphere",
    "holopy.scattering.tests.common.wavelen",
    "holopy.scattering.tests.common.xpolarization",
    "holopy.scattering.tests.common.xschema",
    "holopy.scattering.theory.Mie",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mie.test_radiometric": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "holopy.scattering.interface.calc_cross_sections",
    "holopy.scattering.tests.common.index",
    "holopy.scattering.tests.common.radius",
    "holopy.scattering.tests.common.sphere",
    "holopy.scattering.tests.common.wavelen",
    "holopy.scattering.tests.common.xpolarization",
    "holopy.scattering.tests.test_mie.os",
    "holopy.scattering.tests.test_mie.yaml",
    "nose.plugins.attrib.attr",
    "numpy.pi",
    "numpy.testing.assert_almost_equal",
    "open",
    "zip"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mie.test_raw_fields": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_grid",
    "holopy.core.metadata.to_vector",
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.tests.common.index",
    "holopy.scattering.tests.common.wavelen",
    "holopy.scattering.theory.Mie",
    "holopy.scattering.theory.Mie._transform_to_desired_coordinates",
    "nose.plugins.attrib.attr",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mie.test_single_sphere": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "holopy.core.tests.common.verify",
    "holopy.scattering.errors.InvalidScatterer",
    "holopy.scattering.interface.calc_field",
    "holopy.scattering.interface.calc_holo",
    "holopy.scattering.interface.calc_intensity",
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.tests.common.index",
    "holopy.scattering.tests.common.scaling_alpha",
    "holopy.scattering.tests.common.sphere",
    "holopy.scattering.tests.common.wavelen",
    "holopy.scattering.tests.common.xpolarization",
    "holopy.scattering.tests.common.xschema",
    "holopy.scattering.theory.Mie",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mie.test_subimaged": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "holopy.core.process.subimage",
    "holopy.core.tests.common.assert_obj_close",
    "holopy.scattering.interface.calc_holo",
    "holopy.scattering.tests.common.index",
    "holopy.scattering.tests.common.sphere",
    "holopy.scattering.tests.common.wavelen",
    "holopy.scattering.tests.common.xpolarization",
    "holopy.scattering.tests.common.xschema",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mie.to_vector": {
  "data": {
   "shadows": "holopy.core.metadata.to_vector"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.update_metadata": {
  "data": {
   "shadows": "holopy.core.metadata.update_metadata"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.verify": {
  "data": {
   "shadows": "holopy.core.tests.common.verify"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.wavelen": {
  "data": {
   "shadows": "holopy.scattering.tests.common.wavelen"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.x": {
  "data": {
   "shadows": "holopy.scattering.tests.common.x"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.xpolarization": {
  "data": {
   "shadows": "holopy.scattering.tests.common.xpolarization"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.xschema": {
  "data": {
   "shadows": "holopy.scattering.tests.common.xschema"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.y": {
  "data": {
   "shadows": "holopy.scattering.tests.common.y"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.ypolarization": {
  "data": {
   "shadows": "holopy.scattering.tests.common.ypolarization"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.yschema": {
  "data": {
   "shadows": "holopy.scattering.tests.common.yschema"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mie.z": {
  "data": {
   "shadows": "holopy.scattering.tests.common.z"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mielens": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "holopy.scattering.tests.test_mielens.unittest"
   ]
  },
  "type": "module"
 },
 "holopy.scattering.tests.test_mielens.MEDTOLS": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "holopy.scattering.tests.test_mielens.Mie": {
  "data": {
   "shadows": "holopy.scattering.theory.Mie"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mielens.MieLens": {
  "data": {
   "shadows": "holopy.scattering.theory.MieLens"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mielens.SOFTTOLS": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "holopy.scattering.tests.test_mielens.Sphere": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Sphere"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mielens.Spheres": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Spheres"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mielens.TOLS": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "holopy.scattering.tests.test_mielens.TestMieLens": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_mielens.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.tests.test_mielens.TestMieLens.test_can_calculate_for_positive_and_negative_z": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "all",
    "holopy.scattering.interface.calc_holo",
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.tests.common.index",
    "holopy.scattering.tests.common.radius",
    "holopy.scattering.tests.common.wavelen",
    "holopy.scattering.tests.common.xpolarization",
    "holopy.scattering.tests.common.xschema",
    "holopy.scattering.theory.MieLens",
    "nose.plugins.attrib.attr",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielens.TestMieLens.test_central_lobe_is_bright_when_particle_is_above_focus": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "calculate_central_lobe_at",
    "nose.plugins.attrib.attr",
    "numpy.all",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielens.TestMieLens.test_central_lobe_is_dark_when_particle_is_below_focus": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "calculate_central_lobe_at",
    "nose.plugins.attrib.attr",
    "numpy.all",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielens.TestMieLens.test_desired_coordinate_system_is_cylindrical": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "holopy.scattering.theory.MieLens.desired_coordinate_system",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielens.TestMieLens.test_does_not_crash": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "holopy.scattering.interface.calc_holo",
    "holopy.scattering.tests.common.index",
    "holopy.scattering.tests.common.sphere",
    "holopy.scattering.tests.common.wavelen",
    "holopy.scattering.tests.common.xpolarization",
    "holopy.scattering.tests.common.xschema",
    "holopy.scattering.theory.MieLens",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielens.TestMieLens.test_holopy_hologram_equal_to_exact_calculation": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_grid",
    "holopy.scattering.interface.calc_holo",
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.tests.common.x",
    "holopy.scattering.tests.common.y",
    "holopy.scattering.tests.test_mielens.TOLS",
    "holopy.scattering.theory.MieLens",
    "holopy.scattering.theory.mielensfunctions.MieLensCalculator",
    "nose.plugins.attrib.attr",
    "numpy.allclose",
    "numpy.arctan2",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielens.TestMieLens.test_mielens_is_close_to_mieonly": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "holopy.scattering.interface.calc_holo",
    "holopy.scattering.tests.common.index",
    "holopy.scattering.tests.common.sphere",
    "holopy.scattering.tests.common.wavelen",
    "holopy.scattering.tests.common.xpolarization",
    "holopy.scattering.tests.common.xschema",
    "holopy.scattering.tests.test_mielens.TOLS",
    "holopy.scattering.theory.Mie",
    "holopy.scattering.theory.MieLens",
    "nose.plugins.attrib.attr",
    "numpy.allclose",
    "numpy.isclose",
    "numpy.median"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielens.TestMieLens.test_mielens_multiple_returns_nonzero": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "holopy.scattering.interface.calc_holo",
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.scatterer.Spheres",
    "holopy.scattering.tests.common.index",
    "holopy.scattering.tests.common.wavelen",
    "holopy.scattering.tests.common.yschema",
    "holopy.scattering.theory.MieLens",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielens.TestMieLens.test_mielens_x_polarization_differs_from_y": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "holopy.scattering.interface.calc_holo",
    "holopy.scattering.tests.common.index",
    "holopy.scattering.tests.common.sphere",
    "holopy.scattering.tests.common.wavelen",
    "holopy.scattering.tests.common.xpolarization",
    "holopy.scattering.tests.common.xschema",
    "holopy.scattering.tests.common.ypolarization",
    "holopy.scattering.tests.common.yschema",
    "holopy.scattering.tests.test_mielens.MEDTOLS",
    "holopy.scattering.tests.test_mielens.SOFTTOLS",
    "holopy.scattering.theory.MieLens",
    "nose.plugins.attrib.attr",
    "numpy.allclose",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielens.TestMieLens.test_raises_error_if_multiple_z_values": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "holopy.scattering.tests.common.sphere",
    "holopy.scattering.tests.common.xschema.illum_polarization",
    "holopy.scattering.theory.MieLens",
    "nose.plugins.attrib.attr",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielens.attr": {
  "data": {
   "shadows": "nose.plugins.attrib.attr"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mielens.calc_holo": {
  "data": {
   "shadows": "holopy.scattering.interface.calc_holo"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mielens.calculate_central_lobe_at": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_grid",
    "holopy.scattering.interface.calc_holo",
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.tests.common.z",
    "holopy.scattering.theory.MieLens",
    "numpy.array",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielens.detector_grid": {
  "data": {
   "shadows": "holopy.core.metadata.detector_grid"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mielens.index": {
  "data": {
   "shadows": "holopy.scattering.tests.common.index"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mielens.mielensfunctions": {
  "data": {
   "shadows": "holopy.scattering.theory.mielensfunctions"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mielens.n": {
  "data": {
   "shadows": "holopy.scattering.tests.common.n"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mielens.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mielens.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mielens.radius": {
  "data": {
   "shadows": "holopy.scattering.tests.common.radius"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mielens.scaling_alpha": {
  "data": {
   "shadows": "holopy.scattering.tests.common.scaling_alpha"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mielens.sphere": {
  "data": {
   "shadows": "holopy.scattering.tests.common.sphere"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mielens.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mielens.wavelen": {
  "data": {
   "shadows": "holopy.scattering.tests.common.wavelen"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mielens.x": {
  "data": {
   "shadows": "holopy.scattering.tests.common.x"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mielens.xpolarization": {
  "data": {
   "shadows": "holopy.scattering.tests.common.xpolarization"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mielens.xschema": {
  "data": {
   "shadows": "holopy.scattering.tests.common.xschema"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mielens.y": {
  "data": {
   "shadows": "holopy.scattering.tests.common.y"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mielens.ypolarization": {
  "data": {
   "shadows": "holopy.scattering.tests.common.ypolarization"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mielens.yschema": {
  "data": {
   "shadows": "holopy.scattering.tests.common.yschema"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mielens.z": {
  "data": {
   "shadows": "holopy.scattering.tests.common.z"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mielensfunctions": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "holopy.scattering.tests.test_mielensfunctions.unittest"
   ]
  },
  "type": "module"
 },
 "holopy.scattering.tests.test_mielensfunctions.Chebyshev": {
  "data": {
   "shadows": "numpy.polynomial.chebyshev.Chebyshev"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mielensfunctions.CheckEnergyIsConserved": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.tests.test_mielensfunctions.CheckEnergyIsConserved.__init__": {
  "data": {
   "lineno": 665
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.CheckEnergyIsConserved.check_if_energy_is_conserved": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.CheckEnergyIsConserved.evaluate_scattered_power_incident_on_detector": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.linspace",
    "numpy.trapz"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.CheckEnergyIsConserved.evaluate_scattered_power_incident_on_pupil": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.CheckEnergyIsConserved.get_ratio_of_scattered_powerin_to_scattered_powerout": {
  "data": {
   "lineno": 695
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.MEDTOLS": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "holopy.scattering.tests.test_mielensfunctions.SOFTTOLS": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "holopy.scattering.tests.test_mielensfunctions.TOLS": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestCalculation": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_mielensfunctions.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestCalculation.test_energy_is_conserved_at_high_na_largeparticle": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "get_ratio_of_scattered_powerin_to_scattered_powerout",
    "nose.plugins.attrib.attr",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestCalculation.test_energy_is_conserved_at_high_na_largeparticle_defocus": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "get_ratio_of_scattered_powerin_to_scattered_powerout",
    "nose.plugins.attrib.attr",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestCalculation.test_energy_is_conserved_at_high_na_pointparticle": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "get_ratio_of_scattered_powerin_to_scattered_powerout",
    "nose.plugins.attrib.attr",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestCalculation.test_energy_is_conserved_at_low_na_largeparticle": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "get_ratio_of_scattered_powerin_to_scattered_powerout",
    "nose.plugins.attrib.attr",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestCalculation.test_energy_is_conserved_at_low_na_pointparticle": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "get_ratio_of_scattered_powerin_to_scattered_powerout",
    "nose.plugins.attrib.attr",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestGaussQuad": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_mielensfunctions.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestGaussQuad.test_constant_integrand": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_mielensfunctions.TOLS",
    "integrate_like_mielens",
    "nose.plugins.attrib.attr",
    "numpy.isclose",
    "numpy.ones_like"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestGaussQuad.test_linear_integrand": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_mielensfunctions.TOLS",
    "integrate_like_mielens",
    "nose.plugins.attrib.attr",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestGaussQuad.test_transcendental_integrand": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_mielensfunctions.TOLS",
    "integrate_like_mielens",
    "nose.plugins.attrib.attr",
    "numpy.isclose",
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestMieLensCalculator": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_mielensfunctions.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestMieLensCalculator.test_calculation_doesnt_crash_for_large_rho": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "holopy.scattering.theory.mielensfunctions.MieLensCalculator",
    "nose.plugins.attrib.attr",
    "numpy.full_like",
    "numpy.linspace",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestMieLensCalculator.test_central_lobe_is_bright_when_particle_is_above_focus": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "evaluate_intensity_at_rho_zero",
    "nose.plugins.attrib.attr",
    "numpy.all",
    "numpy.linspace",
    "numpy.pi",
    "numpy.squeeze"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestMieLensCalculator.test_central_lobe_is_dark_when_particle_is_below_focus": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "evaluate_intensity_at_rho_zero",
    "nose.plugins.attrib.attr",
    "numpy.all",
    "numpy.linspace",
    "numpy.pi",
    "numpy.squeeze"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestMieLensCalculator.test_energy_is_conserved": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "get_excess_power",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestMieLensCalculator.test_energy_is_conserved.get_excess_power": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "holopy.scattering.theory.mielensfunctions.MieLensCalculator",
    "numpy.arctan2",
    "numpy.linspace",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestMieLensCalculator.test_fields_are_correct_values": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_mielensfunctions.MEDTOLS",
    "holopy.scattering.theory.mielensfunctions.MieLensCalculator",
    "nose.plugins.attrib.attr",
    "numpy.allclose",
    "numpy.array",
    "numpy.full",
    "numpy.linspace",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestMieLensCalculator.test_fields_go_to_zero_at_large_distances": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "holopy.scattering.theory.mielensfunctions.MieLensCalculator",
    "nose.plugins.attrib.attr",
    "numpy.abs",
    "numpy.all",
    "numpy.logspace"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestMieLensCalculator.test_fields_nonzero": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "any",
    "evaluate_scattered_field_in_lens",
    "holopy.scattering.tests.test_mielensfunctions.TOLS",
    "nose.plugins.attrib.attr",
    "numpy.isclose",
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestMieLensCalculator.test_interpolate_is_same_as_direct_computation": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_mielensfunctions.TOLS",
    "holopy.scattering.tests.test_mielensfunctions.itertools",
    "holopy.scattering.theory.mielensfunctions.MieLensCalculator",
    "nose.plugins.attrib.attr",
    "numpy.allclose",
    "numpy.linspace",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestMieLensCalculator.test_raises_error_integral_is_not_i0_or_i2": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "holopy.scattering.theory.mielensfunctions.MieLensCalculator",
    "nose.plugins.attrib.attr",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestMieLensCalculator.test_raises_error_when_inputs_mismatched_size": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "holopy.scattering.theory.mielensfunctions.MieLensCalculator",
    "nose.plugins.attrib.attr",
    "numpy.full",
    "numpy.linspace",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestMieLensCalculator.test_raises_error_when_params_arent_specified": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "create_calculator",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestMieLensCalculator.test_raises_error_when_params_arent_specified.create_calculator": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "holopy.scattering.theory.mielensfunctions.MieLensCalculator"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestMieLensCalculator.test_scatteredfield_linear_at_low_contrast": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "evaluate_scattered_field_in_lens",
    "holopy.scattering.tests.test_mielensfunctions.SOFTTOLS",
    "nose.plugins.attrib.attr",
    "numpy.isclose",
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestMieLensCalculator.test_xpolarization_is_larger_along_phi_equals_0": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "holopy.scattering.theory.mielensfunctions.MieLensCalculator",
    "nose.plugins.attrib.attr",
    "numpy.all",
    "numpy.linspace",
    "numpy.pi",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestMieScatteringMatrix": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_mielensfunctions.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestMieScatteringMatrix.test_interpolator_maxl_accuracy": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_mielensfunctions.MEDTOLS",
    "holopy.scattering.theory.mielensfunctions.MieScatteringMatrix",
    "nose.plugins.attrib.attr",
    "numpy.abs",
    "numpy.allclose",
    "numpy.ceil",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestMieScatteringMatrix.test_lazy_eval_sets_up_interpolator": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "holopy.scattering.theory.mielensfunctions.MieScatteringMatrix",
    "interpolator",
    "interpolator._interp",
    "nose.plugins.attrib.attr",
    "numpy.linspace",
    "type"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestMieScatteringMatrix.test_parallel_interpolator_accuracy": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_mielensfunctions.MEDTOLS",
    "holopy.scattering.theory.mielensfunctions.MieScatteringMatrix",
    "interpolator",
    "interpolator._eval",
    "nose.plugins.attrib.attr",
    "numpy.abs",
    "numpy.allclose",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestMieScatteringMatrix.test_perpendicular_interpolator_accuracy": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_mielensfunctions.MEDTOLS",
    "holopy.scattering.theory.mielensfunctions.MieScatteringMatrix",
    "interpolator",
    "interpolator._eval",
    "nose.plugins.attrib.attr",
    "numpy.abs",
    "numpy.allclose",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestMieScatteringMatrix.test_raises_error_on_nans": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "RuntimeError",
    "holopy.scattering.theory.mielensfunctions.MieScatteringMatrix",
    "nose.plugins.attrib.attr",
    "numpy.array",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestMiscMath": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_mielensfunctions.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestMiscMath.test_fastj2_notzero": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "holopy.scattering.theory.mielensfunctions.j2",
    "nose.plugins.attrib.attr",
    "numpy.isclose",
    "scipy.special.jn_zeros"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestMiscMath.test_fastj2_zeros": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "holopy.scattering.theory.mielensfunctions.j2",
    "nose.plugins.attrib.attr",
    "numpy.allclose",
    "scipy.special.jn_zeros"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestMiscMath.test_guass_legendre_pts_wts_n10_gives_correct_value": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_mielensfunctions.TOLS",
    "holopy.scattering.theory.mielensfunctions.gauss_legendre_pts_wts",
    "nose.plugins.attrib.attr",
    "numpy.cos",
    "numpy.isclose",
    "numpy.sin",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestMiscMath.test_guass_legendre_pts_wts_n10_uses_10_points": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "holopy.scattering.theory.mielensfunctions.gauss_legendre_pts_wts",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestMiscMath.test_guass_legendre_pts_wts_ndefault": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_mielensfunctions.TOLS",
    "holopy.scattering.theory.mielensfunctions.gauss_legendre_pts_wts",
    "nose.plugins.attrib.attr",
    "numpy.cos",
    "numpy.isclose",
    "numpy.sin",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestMiscMath.test_spherical_hankel_1": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_mielensfunctions.TOLS",
    "holopy.scattering.theory.mielensfunctions.spherical_h1n",
    "nose.plugins.attrib.attr",
    "numpy.allclose",
    "numpy.exp",
    "numpy.random.rand",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestMiscMath.test_spherical_hankel_2": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_mielensfunctions.TOLS",
    "holopy.scattering.theory.mielensfunctions.spherical_h2n",
    "nose.plugins.attrib.attr",
    "numpy.allclose",
    "numpy.exp",
    "numpy.random.rand",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestPiecewiseChebyshevApproximant": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_mielensfunctions.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestPiecewiseChebyshevApproximant.test_call_accurately_approximates": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_mielensfunctions.TOLS",
    "holopy.scattering.theory.mielensfunctions.PiecewiseChebyshevApproximant",
    "nose.plugins.attrib.attr",
    "numpy.allclose",
    "numpy.linspace",
    "numpy.sin",
    "piecewisecheb"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestPiecewiseChebyshevApproximant.test_call_raises_error_when_x_equal_to_max_window": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "ValueError",
    "holopy.scattering.theory.mielensfunctions.PiecewiseChebyshevApproximant",
    "nose.plugins.attrib.attr",
    "numpy.linspace",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestPiecewiseChebyshevApproximant.test_call_raises_error_when_x_greater_than_window": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "ValueError",
    "holopy.scattering.theory.mielensfunctions.PiecewiseChebyshevApproximant",
    "nose.plugins.attrib.attr",
    "numpy.linspace",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestPiecewiseChebyshevApproximant.test_call_raises_error_when_x_less_than_window": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "ValueError",
    "holopy.scattering.theory.mielensfunctions.PiecewiseChebyshevApproximant",
    "nose.plugins.attrib.attr",
    "numpy.linspace",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestPiecewiseChebyshevApproximant.test_call_returns_correct_shape": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "holopy.scattering.theory.mielensfunctions.PiecewiseChebyshevApproximant",
    "nose.plugins.attrib.attr",
    "numpy.linspace",
    "numpy.sin",
    "piecewisecheb"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestPiecewiseChebyshevApproximant.test_dtype_on_complex": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "holopy.scattering.theory.mielensfunctions.PiecewiseChebyshevApproximant",
    "nose.plugins.attrib.attr",
    "numpy.exp",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestPiecewiseChebyshevApproximant.test_dtype_on_float": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "holopy.scattering.theory.mielensfunctions.PiecewiseChebyshevApproximant",
    "nose.plugins.attrib.attr",
    "numpy.linspace",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestPiecewiseChebyshevApproximant.test_mask_window": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "holopy.scattering.theory.mielensfunctions.PiecewiseChebyshevApproximant._mask_window",
    "nose.plugins.attrib.attr",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestPiecewiseChebyshevApproximant.test_setup_approximants_generates_approximants": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "holopy.scattering.theory.mielensfunctions.PiecewiseChebyshevApproximant",
    "isinstance",
    "nose.plugins.attrib.attr",
    "numpy.linspace",
    "numpy.polynomial.chebyshev.Chebyshev",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestPiecewiseChebyshevApproximant.test_setup_windows_partitions_window": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "holopy.scattering.theory.mielensfunctions.PiecewiseChebyshevApproximant",
    "nose.plugins.attrib.attr",
    "numpy.all",
    "numpy.linspace",
    "numpy.ptp",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.sin",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.TestPiecewiseChebyshevApproximant.test_setup_windows_splits_into_n_windows": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "holopy.scattering.theory.mielensfunctions.PiecewiseChebyshevApproximant",
    "len",
    "nose.plugins.attrib.attr",
    "numpy.linspace",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.attr": {
  "data": {
   "shadows": "nose.plugins.attrib.attr"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mielensfunctions.evaluate_intensity_at_rho_zero": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "holopy.scattering.theory.mielensfunctions.MieLensCalculator",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.evaluate_scattered_field_in_lens": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "holopy.scattering.theory.mielensfunctions.MieLensCalculator",
    "numpy.full_like",
    "numpy.linspace",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.get_ratio_of_scattered_powerin_to_scattered_powerout": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_mielensfunctions.CheckEnergyIsConserved",
    "holopy.scattering.theory.mielensfunctions.MieLensCalculator"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.integrate_like_mielens": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "function",
    "holopy.scattering.theory.mielensfunctions.gauss_legendre_pts_wts"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_mielensfunctions.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mielensfunctions.jn_zeros": {
  "data": {
   "shadows": "scipy.special.jn_zeros"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mielensfunctions.mielensfunctions": {
  "data": {
   "shadows": "holopy.scattering.theory.mielensfunctions"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mielensfunctions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_mielensfunctions.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "holopy.scattering.Sphere",
    "holopy.scattering.tests.common.xschema",
    "holopy.scattering.tests.test_multisphere.unittest"
   ]
  },
  "type": "module"
 },
 "holopy.scattering.tests.test_multisphere.InvalidScatterer": {
  "data": {
   "shadows": "holopy.scattering.errors.InvalidScatterer"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.Multisphere": {
  "data": {
   "shadows": "holopy.scattering.Multisphere"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.MultisphereFailure": {
  "data": {
   "shadows": "holopy.scattering.errors.MultisphereFailure"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.OverlapWarning": {
  "data": {
   "shadows": "holopy.scattering.errors.OverlapWarning"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.SCATTERERS_LARGE_OVERLAP": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "holopy.scattering.tests.test_multisphere.SCATTERERS_SMALL_OVERLAP": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "holopy.scattering.tests.test_multisphere.SkipTest": {
  "data": {
   "shadows": "nose.plugins.skip.SkipTest"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.Sphere": {
  "data": {
   "shadows": "holopy.scattering.Sphere"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.Spheres": {
  "data": {
   "shadows": "holopy.scattering.Spheres"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.TestOverlap": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_multisphere.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.tests.test_multisphere.TestOverlap.test_calc_holo_fails_to_converge_when_overlap_is_large": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "holopy.scattering.Spheres",
    "holopy.scattering.calc_holo",
    "holopy.scattering.errors.MultisphereFailure",
    "holopy.scattering.tests.common.index",
    "holopy.scattering.tests.common.wavelen",
    "holopy.scattering.tests.common.xpolarization",
    "holopy.scattering.tests.test_multisphere.SCATTERERS_LARGE_OVERLAP",
    "holopy.scattering.tests.test_multisphere.schema",
    "holopy.scattering.tests.test_multisphere.warnings",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_multisphere.TestOverlap.test_calc_holo_succeeds_but_warns_with_small_overlap": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "holopy.core.tests.common.verify",
    "holopy.scattering.Spheres",
    "holopy.scattering.calc_holo",
    "holopy.scattering.tests.common.index",
    "holopy.scattering.tests.common.wavelen",
    "holopy.scattering.tests.common.xpolarization",
    "holopy.scattering.tests.test_multisphere.SCATTERERS_SMALL_OVERLAP",
    "holopy.scattering.tests.test_multisphere.schema",
    "holopy.scattering.tests.test_multisphere.warnings",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_multisphere.TestOverlap.test_spheres_raises_warning_when_overlapping": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "holopy.scattering.Spheres",
    "holopy.scattering.errors.OverlapWarning",
    "holopy.scattering.tests.test_multisphere.SCATTERERS_LARGE_OVERLAP",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_multisphere.TheoryNotCompatibleError": {
  "data": {
   "shadows": "holopy.scattering.errors.TheoryNotCompatibleError"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.assert_obj_close": {
  "data": {
   "shadows": "holopy.core.tests.common.assert_obj_close"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.attr": {
  "data": {
   "shadows": "nose.plugins.attrib.attr"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.calc_cross_sections": {
  "data": {
   "shadows": "holopy.scattering.calc_cross_sections"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.calc_holo": {
  "data": {
   "shadows": "holopy.scattering.calc_holo"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.calc_scat_matrix": {
  "data": {
   "shadows": "holopy.scattering.calc_scat_matrix"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.detector_points": {
  "data": {
   "shadows": "holopy.core.metadata.detector_points"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.index": {
  "data": {
   "shadows": "holopy.scattering.tests.common.index"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.scaling_alpha": {
  "data": {
   "shadows": "holopy.scattering.tests.common.scaling_alpha"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.schema": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "holopy.scattering.tests.test_multisphere.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.sphere": {
  "data": {
   "shadows": "holopy.scattering.tests.common.sphere"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.test_2_sph": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "holopy.core.tests.common.assert_obj_close",
    "holopy.scattering.Multisphere",
    "holopy.scattering.Sphere",
    "holopy.scattering.Spheres",
    "holopy.scattering.calc_holo",
    "holopy.scattering.tests.test_multisphere.schema",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_multisphere.test_construction": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "holopy.scattering.Multisphere",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_multisphere.test_cross_sections": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "holopy.scattering.Multisphere",
    "holopy.scattering.Sphere",
    "holopy.scattering.Spheres",
    "holopy.scattering.calc_cross_sections",
    "holopy.scattering.tests.common.index",
    "holopy.scattering.tests.common.wavelen",
    "holopy.scattering.tests.common.ypolarization",
    "holopy.scattering.tests.test_multisphere.os",
    "holopy.scattering.tests.test_multisphere.scipy",
    "holopy.scattering.tests.test_multisphere.warnings",
    "nose.plugins.attrib.attr",
    "nose.plugins.skip.SkipTest",
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_multisphere.test_farfield": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "holopy.core.metadata.detector_points",
    "holopy.scattering.Multisphere",
    "holopy.scattering.Sphere",
    "holopy.scattering.Spheres",
    "holopy.scattering.calc_scat_matrix",
    "holopy.scattering.tests.common.index",
    "holopy.scattering.tests.test_multisphere.schema",
    "nose.plugins.attrib.attr",
    "numpy.linspace",
    "numpy.pi",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_multisphere.test_invalid": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "holopy.scattering.Multisphere",
    "holopy.scattering.Sphere",
    "holopy.scattering.Spheres",
    "holopy.scattering.calc_cross_sections",
    "holopy.scattering.calc_holo",
    "holopy.scattering.errors.InvalidScatterer",
    "holopy.scattering.errors.TheoryNotCompatibleError",
    "holopy.scattering.tests.common.index",
    "holopy.scattering.tests.common.wavelen",
    "holopy.scattering.tests.common.xpolarization",
    "holopy.scattering.tests.common.ypolarization",
    "holopy.scattering.tests.test_multisphere.schema",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_multisphere.test_niter": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "holopy.scattering.Multisphere",
    "holopy.scattering.Sphere",
    "holopy.scattering.Spheres",
    "holopy.scattering.calc_holo",
    "holopy.scattering.errors.MultisphereFailure",
    "holopy.scattering.tests.common.index",
    "holopy.scattering.tests.common.wavelen",
    "holopy.scattering.tests.common.xpolarization",
    "holopy.scattering.tests.test_multisphere.schema",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_multisphere.test_polarization": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "AssertionError",
    "holopy.core.tests.common.assert_obj_close",
    "holopy.scattering.Spheres",
    "holopy.scattering.calc_holo",
    "holopy.scattering.tests.common.index",
    "holopy.scattering.tests.common.scaling_alpha",
    "holopy.scattering.tests.common.sphere",
    "holopy.scattering.tests.common.wavelen",
    "holopy.scattering.tests.common.xpolarization",
    "holopy.scattering.tests.common.xschema",
    "holopy.scattering.tests.common.ypolarization",
    "holopy.scattering.tests.common.yschema",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_multisphere.test_radial_holos": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "AssertionError",
    "holopy.scattering.Multisphere",
    "holopy.scattering.Sphere",
    "holopy.scattering.Spheres",
    "holopy.scattering.calc_holo",
    "holopy.scattering.tests.common.index",
    "holopy.scattering.tests.common.wavelen",
    "holopy.scattering.tests.common.xpolarization",
    "holopy.scattering.tests.test_multisphere.schema",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_multisphere.test_wrap_sphere": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "holopy.scattering.Multisphere",
    "holopy.scattering.Sphere",
    "holopy.scattering.Spheres",
    "holopy.scattering.calc_holo",
    "holopy.scattering.tests.common.sphere",
    "holopy.scattering.tests.test_multisphere.schema",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_multisphere.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.verify": {
  "data": {
   "shadows": "holopy.core.tests.common.verify"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.wavelen": {
  "data": {
   "shadows": "holopy.scattering.tests.common.wavelen"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.xpolarization": {
  "data": {
   "shadows": "holopy.scattering.tests.common.xpolarization"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.xschema": {
  "data": {
   "shadows": "holopy.scattering.tests.common.xschema"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.ypolarization": {
  "data": {
   "shadows": "holopy.scattering.tests.common.ypolarization"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_multisphere.yschema": {
  "data": {
   "shadows": "holopy.scattering.tests.common.yschema"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_pickle": {
  "data": {},
  "type": "module"
 },
 "holopy.scattering.tests.test_pickle.Mie": {
  "data": {
   "shadows": "holopy.scattering.theory.Mie"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_pickle.assert_method_roundtrip": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "assert_method_equal"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_pickle.assert_pickle_roundtrip": {
  "data": {
   "shadows": "holopy.core.tests.common.assert_pickle_roundtrip"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_pickle.attr": {
  "data": {
   "shadows": "nose.plugins.attrib.attr"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_pickle.test_pickle_mie_object": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "holopy.core.tests.common.assert_pickle_roundtrip",
    "holopy.scattering.theory.Mie",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatterer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "holopy.scattering.tests.test_scatterer.unittest"
   ]
  },
  "type": "module"
 },
 "holopy.scattering.tests.test_scatterer.ComplexPrior": {
  "data": {
   "shadows": "holopy.inference.prior.ComplexPrior"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatterer.Ellipsoid": {
  "data": {
   "shadows": "holopy.scattering.Ellipsoid"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatterer.InvalidScatterer": {
  "data": {
   "shadows": "holopy.scattering.errors.InvalidScatterer"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatterer.MissingParameter": {
  "data": {
   "shadows": "holopy.scattering.errors.MissingParameter"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatterer.Scatterer": {
  "data": {
   "shadows": "holopy.scattering.Scatterer"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatterer.Scatterers": {
  "data": {
   "shadows": "holopy.scattering.Scatterers"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatterer.Sphere": {
  "data": {
   "shadows": "holopy.scattering.Sphere"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatterer.Spheres": {
  "data": {
   "shadows": "holopy.scattering.Spheres"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatterer.TestParameterHandling": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_scatterer.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.tests.test_scatterer.TestParameterHandling.test_expand_parameters": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "dict",
    "holopy.inference.prior.ComplexPrior",
    "holopy.scattering.scatterer.scatterer._expand_parameters",
    "nose.plugins.attrib.attr",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatterer.TestParameterHandling.test_interpret_parameters": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "holopy.scattering.scatterer.scatterer._interpret_parameters",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatterer.Uniform": {
  "data": {
   "shadows": "holopy.inference.prior.Uniform"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatterer._expand_parameters": {
  "data": {
   "shadows": "holopy.scattering.scatterer.scatterer._expand_parameters"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatterer._interpret_parameters": {
  "data": {
   "shadows": "holopy.scattering.scatterer.scatterer._interpret_parameters"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatterer.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatterer.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatterer.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatterer.attr": {
  "data": {
   "shadows": "nose.plugins.attrib.attr"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatterer.calc_holo": {
  "data": {
   "shadows": "holopy.scattering.calc_holo"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatterer.detector_grid": {
  "data": {
   "shadows": "holopy.core.detector_grid"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatterer.find_bounds": {
  "data": {
   "shadows": "holopy.scattering.scatterer.scatterer.find_bounds"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatterer.isnumber": {
  "data": {
   "shadows": "holopy.scattering.scatterer.ellipsoid.isnumber"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatterer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatterer.test_Composite_construction": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "holopy.scattering.Scatterers",
    "holopy.scattering.Sphere",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatterer.test_Composite_tying": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "holopy.inference.prior.Uniform",
    "holopy.scattering.Sphere",
    "holopy.scattering.Spheres",
    "len",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatterer.test_Ellipsoid": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "holopy.scattering.Ellipsoid",
    "holopy.scattering.scatterer.ellipsoid.isnumber",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatterer.test_Sphere_construct_array": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "holopy.scattering.Sphere",
    "holopy.scattering.errors.InvalidScatterer",
    "nose.plugins.attrib.attr",
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "str"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatterer.test_Sphere_construct_list": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "holopy.scattering.Sphere",
    "nose.plugins.attrib.attr",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatterer.test_Sphere_construct_tuple": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "holopy.scattering.Sphere",
    "nose.plugins.attrib.attr",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatterer.test_Sphere_construction": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "holopy.scattering.Sphere",
    "holopy.scattering.errors.InvalidScatterer",
    "nose.plugins.attrib.attr",
    "numpy.array",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatterer.test_Sphere_parameters": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "dict",
    "holopy.scattering.Sphere",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatterer.test_ellipsoid": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "holopy.scattering.Ellipsoid",
    "nose.plugins.attrib.attr",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatterer.test_find_bounds": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "holopy.scattering.Sphere",
    "holopy.scattering.scatterer.scatterer.find_bounds",
    "nose.plugins.attrib.attr",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatterer.test_from_parameters": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "holopy.inference.prior.Uniform",
    "holopy.scattering.Sphere",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatterer.test_like_me": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "holopy.scattering.Sphere",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatterer.test_sphere_nocenter": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "holopy.core.detector_grid",
    "holopy.scattering.Sphere",
    "holopy.scattering.calc_holo",
    "holopy.scattering.errors.MissingParameter",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatterer.test_translate": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "holopy.scattering.Sphere",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatterer.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatterer.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatteringtheory": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "holopy.core.detector_grid",
    "holopy.scattering.interface.prep_schema",
    "holopy.scattering.scatterer.Ellipsoid",
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.scatterer.Spheres",
    "holopy.scattering.tests.test_scatteringtheory.unittest"
   ]
  },
  "type": "module"
 },
 "holopy.scattering.tests.test_scatteringtheory.ELLIPSOID": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "holopy.scattering.tests.test_scatteringtheory.Ellipsoid": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Ellipsoid"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatteringtheory.MEDTOLS": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "holopy.scattering.tests.test_scatteringtheory.Mie": {
  "data": {
   "shadows": "holopy.scattering.theory.Mie"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatteringtheory.MockScatteringMatrixBasedTheory": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "holopy.scattering.theory.scatteringtheory.ScatteringTheory"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.tests.test_scatteringtheory.MockScatteringMatrixBasedTheory.__init__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.MockScatteringMatrixBasedTheory._can_handle": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "holopy.scattering.scatterer.Sphere",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.MockScatteringMatrixBasedTheory._raw_scat_matrs": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.eye",
    "range"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.MockTheory": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "holopy.scattering.theory.scatteringtheory.ScatteringTheory"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.tests.test_scatteringtheory.MockTheory.__init__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.MockTheory._can_handle": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "holopy.scattering.scatterer.Sphere",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.MockTheory._raw_fields": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.SCAT_SCHEMA": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "holopy.scattering.tests.test_scatteringtheory.SPHERE": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "holopy.scattering.tests.test_scatteringtheory.SPHERES": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "holopy.scattering.tests.test_scatteringtheory.ScatteringTheory": {
  "data": {
   "shadows": "holopy.scattering.theory.scatteringtheory.ScatteringTheory"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatteringtheory.Sphere": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Sphere"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatteringtheory.Spheres": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Spheres"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatteringtheory.TOLS": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestMockScatteringMatrixBasedTheory": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_scatteringtheory.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestMockScatteringMatrixBasedTheory.test_can_handle_sphere": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_scatteringtheory.MockScatteringMatrixBasedTheory",
    "holopy.scattering.tests.test_scatteringtheory.SPHERE",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestMockScatteringMatrixBasedTheory.test_cannot_handle_spheres": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_scatteringtheory.MockScatteringMatrixBasedTheory",
    "holopy.scattering.tests.test_scatteringtheory.SPHERES",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestMockScatteringMatrixBasedTheory.test_creation": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_scatteringtheory.MockScatteringMatrixBasedTheory",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestMockScatteringMatrixBasedTheory.test_raw_fields_returns_dtype_complex": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_scatteringtheory.MockScatteringMatrixBasedTheory",
    "holopy.scattering.tests.test_scatteringtheory.SPHERE",
    "nose.plugins.attrib.attr",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestMockScatteringMatrixBasedTheory.test_raw_scat_matrs_returns_correct_shape": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_scatteringtheory.MockScatteringMatrixBasedTheory",
    "holopy.scattering.tests.test_scatteringtheory.SPHERE",
    "nose.plugins.attrib.attr",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestMockScatteringMatrixBasedTheory.test_raw_scat_matrs_returns_eyes": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "all",
    "holopy.scattering.tests.test_scatteringtheory.MockScatteringMatrixBasedTheory",
    "holopy.scattering.tests.test_scatteringtheory.SPHERE",
    "holopy.scattering.tests.test_scatteringtheory.TOLS",
    "nose.plugins.attrib.attr",
    "numpy.diag",
    "numpy.eye",
    "numpy.isclose",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestMockTheory": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_scatteringtheory.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestMockTheory.test_can_handle_sphere": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_scatteringtheory.MockTheory",
    "holopy.scattering.tests.test_scatteringtheory.SPHERE",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestMockTheory.test_cannot_handle_spheres": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_scatteringtheory.MockTheory",
    "holopy.scattering.tests.test_scatteringtheory.SPHERES",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestMockTheory.test_creation": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_scatteringtheory.MockTheory",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestMockTheory.test_raw_fields_returns_correct_shape": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_scatteringtheory.MockTheory",
    "holopy.scattering.tests.test_scatteringtheory.SPHERE",
    "nose.plugins.attrib.attr",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestMockTheory.test_raw_fields_returns_dtype_complex": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_scatteringtheory.MockTheory",
    "holopy.scattering.tests.test_scatteringtheory.SPHERE",
    "nose.plugins.attrib.attr",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestMockTheory.test_raw_fields_returns_ones": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_scatteringtheory.MockTheory",
    "holopy.scattering.tests.test_scatteringtheory.SPHERE",
    "holopy.scattering.tests.test_scatteringtheory.TOLS",
    "nose.plugins.attrib.attr",
    "numpy.allclose",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestScatteringTheory": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_scatteringtheory.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestScatteringTheory.test_calc_field_equals_calc_singlecolor_for_single_color": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "holopy.scattering.tests.common.xschema",
    "holopy.scattering.tests.test_scatteringtheory.MockTheory",
    "holopy.scattering.tests.test_scatteringtheory.SPHERE",
    "holopy.scattering.tests.test_scatteringtheory.TOLS",
    "nose.plugins.attrib.attr",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestScatteringTheory.test_calc_field_has_correct_dims": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "holopy.scattering.tests.common.xschema",
    "holopy.scattering.tests.test_scatteringtheory.MockTheory",
    "holopy.scattering.tests.test_scatteringtheory.SPHERE",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestScatteringTheory.test_calc_field_keeps_same_attrs_as_input_schema": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "holopy.scattering.tests.common.xschema",
    "holopy.scattering.tests.common.xschema.attrs",
    "holopy.scattering.tests.test_scatteringtheory.MockTheory",
    "holopy.scattering.tests.test_scatteringtheory.SPHERE",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestScatteringTheory.test_calc_field_keeps_same_coords_as_flattened_input_for_spheres": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "holopy.core.metadata.flat",
    "holopy.scattering.tests.common.xschema",
    "holopy.scattering.tests.test_scatteringtheory.MockTheory",
    "holopy.scattering.tests.test_scatteringtheory.SPHERES",
    "nose.plugins.attrib.attr",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestScatteringTheory.test_calc_field_keeps_same_coords_as_flattened_input_schema": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "holopy.core.metadata.flat",
    "holopy.scattering.tests.common.xschema",
    "holopy.scattering.tests.test_scatteringtheory.MockTheory",
    "holopy.scattering.tests.test_scatteringtheory.SPHERE",
    "nose.plugins.attrib.attr",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestScatteringTheory.test_calc_field_returns_xarray_of_correct_shape": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "holopy.scattering.tests.common.xschema",
    "holopy.scattering.tests.common.xschema.values.size",
    "holopy.scattering.tests.test_scatteringtheory.MockTheory",
    "holopy.scattering.tests.test_scatteringtheory.SPHERE",
    "nose.plugins.attrib.attr",
    "type",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestScatteringTheory.test_calc_singlecolor_adds_get_field_from_for_spheres": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "holopy.scattering.tests.common.xschema",
    "holopy.scattering.tests.test_scatteringtheory.MockTheory",
    "holopy.scattering.tests.test_scatteringtheory.SPHERES",
    "holopy.scattering.tests.test_scatteringtheory.TOLS",
    "nose.plugins.attrib.attr",
    "numpy.allclose",
    "sum"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestScatteringTheory.test_calc_singlecolor_equals_get_field_from_for_sphere": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "holopy.scattering.tests.common.xschema",
    "holopy.scattering.tests.test_scatteringtheory.MockTheory",
    "holopy.scattering.tests.test_scatteringtheory.SPHERE",
    "holopy.scattering.tests.test_scatteringtheory.TOLS",
    "nose.plugins.attrib.attr",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestScatteringTheory.test_calc_singlecolor_raises_error_for_cant_handle": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "holopy.scattering.errors.TheoryNotCompatibleError",
    "holopy.scattering.tests.common.xschema",
    "holopy.scattering.tests.test_scatteringtheory.ELLIPSOID",
    "holopy.scattering.tests.test_scatteringtheory.MockTheory",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestScatteringTheory.test_calculate_scattering_matrix_has_correct_cartesian_coords": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_scatteringtheory.MEDTOLS",
    "holopy.scattering.tests.test_scatteringtheory.SCAT_SCHEMA",
    "holopy.scattering.tests.test_scatteringtheory.SPHERE",
    "holopy.scattering.theory.Mie",
    "nose.plugins.attrib.attr",
    "numpy.allclose",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestScatteringTheory.test_calculate_scattering_matrix_has_correct_dims": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_scatteringtheory.SCAT_SCHEMA",
    "holopy.scattering.tests.test_scatteringtheory.SPHERE",
    "holopy.scattering.theory.Mie",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestScatteringTheory.test_calculate_scattering_matrix_has_correct_s1s2s3s4_labels": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_scatteringtheory.SCAT_SCHEMA",
    "holopy.scattering.tests.test_scatteringtheory.SPHERE",
    "holopy.scattering.theory.Mie",
    "nose.plugins.attrib.attr",
    "numpy.all",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestScatteringTheory.test_calculate_scattering_matrix_has_correct_spherical_coords": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_scatteringtheory.MEDTOLS",
    "holopy.scattering.tests.test_scatteringtheory.SCAT_SCHEMA",
    "holopy.scattering.tests.test_scatteringtheory.SPHERE",
    "holopy.scattering.theory.Mie",
    "nose.plugins.attrib.attr",
    "numpy.allclose",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestScatteringTheory.test_default_desired_coordinate_system_is_spherical": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_scatteringtheory.MockTheory",
    "holopy.scattering.theory.Mie",
    "holopy.scattering.theory.scatteringtheory.ScatteringTheory",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestScatteringTheory.test_is_detector_view_point_or_flat_when_flat": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "holopy.core.metadata.flat",
    "holopy.scattering.tests.common.xschema",
    "holopy.scattering.tests.test_scatteringtheory.MockTheory",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestScatteringTheory.test_is_detector_view_point_or_flat_when_neither": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ValueError",
    "holopy.scattering.tests.common.xschema",
    "holopy.scattering.tests.test_scatteringtheory.MockTheory",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestScatteringTheory.test_is_detector_view_point_or_flat_when_point": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "holopy.core.detector_points",
    "holopy.scattering.tests.test_scatteringtheory.MockTheory",
    "nose.plugins.attrib.attr",
    "numpy.arange",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestScatteringTheory.test_pack_field_into_xarray_returns_correct_coords": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "holopy.scattering.tests.common.xschema",
    "holopy.scattering.tests.common.xschema.x.values",
    "holopy.scattering.tests.common.xschema.y.values",
    "holopy.scattering.tests.common.xschema.z.values",
    "holopy.scattering.tests.test_scatteringtheory.MockTheory",
    "holopy.scattering.tests.test_scatteringtheory.SPHERE",
    "nose.plugins.attrib.attr",
    "numpy.all",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestScatteringTheory.test_pack_field_into_xarray_returns_correct_dims": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "holopy.scattering.tests.common.xschema",
    "holopy.scattering.tests.test_scatteringtheory.MockTheory",
    "holopy.scattering.tests.test_scatteringtheory.SPHERE",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestScatteringTheory.test_scattering_matrix_pathway_returns_correct_type": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "holopy.scattering.tests.common.xschema",
    "holopy.scattering.tests.common.xschema.values.size",
    "holopy.scattering.tests.test_scatteringtheory.MockScatteringMatrixBasedTheory",
    "holopy.scattering.tests.test_scatteringtheory.SPHERE",
    "nose.plugins.attrib.attr",
    "type",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestScatteringTheory.test_scattering_matrix_pathway_returns_linear_in_scatmatrs": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.tests.common.xschema",
    "holopy.scattering.tests.test_scatteringtheory.MockScatteringMatrixBasedTheory",
    "holopy.scattering.tests.test_scatteringtheory.TOLS",
    "nose.plugins.attrib.attr",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestTransformToDesiredCoords": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_scatteringtheory.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.tests.test_scatteringtheory.TestTransformToDesiredCoords.test_transform_to_desired_coordinates": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "holopy.core.detector_grid",
    "holopy.scattering.theory.scatteringtheory.ScatteringTheory._transform_to_desired_coordinates",
    "nose.plugins.attrib.attr",
    "numpy.allclose",
    "numpy.pi",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_scatteringtheory.TheoryNotCompatibleError": {
  "data": {
   "shadows": "holopy.scattering.errors.TheoryNotCompatibleError"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatteringtheory.XSCHEMA": {
  "data": {
   "shadows": "holopy.scattering.tests.common.xschema"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatteringtheory.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatteringtheory.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatteringtheory.attr": {
  "data": {
   "shadows": "nose.plugins.attrib.attr"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatteringtheory.detector_grid": {
  "data": {
   "shadows": "holopy.core.detector_grid"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatteringtheory.detector_points": {
  "data": {
   "shadows": "holopy.core.detector_points"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatteringtheory.flat": {
  "data": {
   "shadows": "holopy.core.metadata.flat"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatteringtheory.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatteringtheory.prep_schema": {
  "data": {
   "shadows": "holopy.scattering.interface.prep_schema"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatteringtheory.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatteringtheory.update_metadata": {
  "data": {
   "shadows": "holopy.core.metadata.update_metadata"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_scatteringtheory.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_spherecluster": {
  "data": {},
  "type": "module"
 },
 "holopy.scattering.tests.test_spherecluster.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_spherecluster.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_spherecluster.assert_obj_close": {
  "data": {
   "shadows": "holopy.core.tests.common.assert_obj_close"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_spherecluster.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_spherecluster.attr": {
  "data": {
   "shadows": "nose.plugins.attrib.attr"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_spherecluster.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_spherecluster.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_spherecluster.test_RigidCluster": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "RigidCluster",
    "Sphere",
    "Spheres",
    "holopy.core.tests.common.assert_obj_close",
    "nose.plugins.attrib.attr",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_spherecluster.test_Spheres_construction": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "Sphere",
    "Spheres",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_spherecluster.test_Spheres_construction_typechecking": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "Ellipsoid",
    "Sphere",
    "Spheres",
    "nose.plugins.attrib.attr",
    "nose.tools.raises"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_spherecluster.test_Spheres_ovelap_checking": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "Sphere",
    "Spheres",
    "holopy.scattering.tests.test_spherecluster.warnings",
    "len",
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_spherecluster.test_Spheres_parameters": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "Sphere",
    "Spheres",
    "dict",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_spherecluster.test_Spheres_rotation": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "Sphere",
    "Spheres",
    "nose.plugins.attrib.attr",
    "numpy.pi",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_spherecluster.test_Spheres_translation": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "Sphere",
    "Spheres",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_spherecluster.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_tmatrix": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "collections.OrderedDict",
    "holopy.core.detector_grid",
    "holopy.core.update_metadata",
    "holopy.scattering.tests.test_tmatrix.unittest",
    "numpy.pi"
   ]
  },
  "type": "module"
 },
 "holopy.scattering.tests.test_tmatrix.Cylinder": {
  "data": {
   "shadows": "holopy.scattering.Cylinder"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_tmatrix.DDA": {
  "data": {
   "shadows": "holopy.scattering.DDA"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_tmatrix.DependencyMissing": {
  "data": {
   "shadows": "holopy.core.errors.DependencyMissing"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_tmatrix.Ellipsoid": {
  "data": {
   "shadows": "holopy.scattering.Ellipsoid"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_tmatrix.MISHCHENKO_PARAMS": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "holopy.scattering.tests.test_tmatrix.Mie": {
  "data": {
   "shadows": "holopy.scattering.theory.Mie"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_tmatrix.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_tmatrix.SCHEMA": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "holopy.scattering.tests.test_tmatrix.SkipTest": {
  "data": {
   "shadows": "nose.plugins.skip.SkipTest"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_tmatrix.Sphere": {
  "data": {
   "shadows": "holopy.scattering.Sphere"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_tmatrix.Spheroid": {
  "data": {
   "shadows": "holopy.scattering.Spheroid"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_tmatrix.TestTMatrix": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_tmatrix.unittest"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.tests.test_tmatrix.TestTMatrix.test_calc_scattering_matrix": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "all",
    "holopy.scattering.tests.test_tmatrix.MISHCHENKO_PARAMS",
    "holopy.scattering.theory.tmatrix_f.S.ampld",
    "list",
    "nose.plugins.attrib.attr",
    "numpy.allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_tmatrix.TestTMatrix.test_calc_scattering_matrix_multiple_angles": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "holopy.scattering.tests.test_tmatrix.MISHCHENKO_PARAMS",
    "holopy.scattering.theory.tmatrix_f.S.ampld",
    "len",
    "list",
    "nose.plugins.attrib.attr",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_tmatrix.TestTMatrix.test_cylinder": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "_load_verification_data",
    "all",
    "calc_holo_safe",
    "holopy.scattering.Cylinder",
    "holopy.scattering.tests.test_tmatrix.SCHEMA",
    "nose.plugins.attrib.attr",
    "numpy.allclose",
    "numpy.max",
    "numpy.mean",
    "numpy.min",
    "numpy.pi",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_tmatrix.TestTMatrix.test_raw_fields_similar_to_mie": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "holopy.scattering.Sphere",
    "holopy.scattering.Tmatrix",
    "holopy.scattering.theory.Mie",
    "nose.plugins.attrib.attr",
    "numpy.allclose",
    "numpy.array",
    "numpy.pi",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_tmatrix.TestTMatrix.test_raw_scat_matrs_same_as_mie": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "holopy.scattering.Sphere",
    "holopy.scattering.Tmatrix",
    "holopy.scattering.theory.Mie",
    "nose.plugins.attrib.attr",
    "numpy.allclose",
    "numpy.array",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_tmatrix.TestTMatrix.test_sphere": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "calc_holo_safe",
    "holopy.scattering.Sphere",
    "holopy.scattering.Tmatrix",
    "holopy.scattering.tests.test_tmatrix.SCHEMA",
    "nose.plugins.attrib.attr",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_tmatrix.TestTMatrix.test_spheroid": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "_load_verification_data",
    "all",
    "calc_holo_safe",
    "holopy.scattering.Spheroid",
    "holopy.scattering.tests.test_tmatrix.SCHEMA",
    "nose.plugins.attrib.attr",
    "numpy.allclose",
    "numpy.max",
    "numpy.mean",
    "numpy.min",
    "numpy.pi",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_tmatrix.TestTMatrix.test_vs_dda": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "calc_holo_safe",
    "holopy.core.errors.DependencyMissing",
    "holopy.scattering.DDA",
    "holopy.scattering.Spheroid",
    "holopy.scattering.Tmatrix",
    "holopy.scattering.tests.test_tmatrix.SCHEMA",
    "nose.plugins.attrib.attr",
    "nose.plugins.skip.SkipTest",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_tmatrix.Tmatrix": {
  "data": {
   "shadows": "holopy.scattering.Tmatrix"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_tmatrix._load_verification_data": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "holopy.__path__",
    "holopy.scattering.tests.test_tmatrix.yaml",
    "open"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_tmatrix.ampld": {
  "data": {
   "shadows": "holopy.scattering.theory.tmatrix_f.S.ampld"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_tmatrix.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_tmatrix.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_tmatrix.attr": {
  "data": {
   "shadows": "nose.plugins.attrib.attr"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_tmatrix.calc_holo": {
  "data": {
   "shadows": "holopy.scattering.calc_holo"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_tmatrix.calc_holo_safe": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "holopy.core.errors.DependencyMissing",
    "holopy.scattering.calc_holo",
    "nose.plugins.skip.SkipTest"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.tests.test_tmatrix.detector_grid": {
  "data": {
   "shadows": "holopy.core.detector_grid"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_tmatrix.hp": {
  "data": {
   "shadows": "holopy"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_tmatrix.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_tmatrix.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_tmatrix.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_tmatrix.update_metadata": {
  "data": {
   "shadows": "holopy.core.update_metadata"
  },
  "type": "import"
 },
 "holopy.scattering.tests.test_tmatrix.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "holopy.scattering.theory": {
  "data": {},
  "type": "module"
 },
 "holopy.scattering.theory.DDA": {
  "data": {
   "shadows": "holopy.scattering.theory.dda.DDA"
  },
  "type": "import"
 },
 "holopy.scattering.theory.Mie": {
  "data": {
   "shadows": "holopy.scattering.theory.mie.Mie"
  },
  "type": "import"
 },
 "holopy.scattering.theory.MieLens": {
  "data": {
   "shadows": "holopy.scattering.theory.mielens.MieLens"
  },
  "type": "import"
 },
 "holopy.scattering.theory.Multisphere": {
  "data": {
   "shadows": "holopy.scattering.theory.multisphere.Multisphere"
  },
  "type": "import"
 },
 "holopy.scattering.theory.Tmatrix": {
  "data": {
   "shadows": "holopy.scattering.theory.tmatrix.Tmatrix"
  },
  "type": "import"
 },
 "holopy.scattering.theory.dda": {
  "data": {
   "symbols_in_volume": [
    "holopy.scattering.scatterer.Bisphere",
    "holopy.scattering.scatterer.Capsule",
    "holopy.scattering.scatterer.Cylinder",
    "holopy.scattering.scatterer.Ellipsoid",
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.scatterer.Spheroid",
    "str"
   ]
  },
  "type": "module"
 },
 "holopy.scattering.theory.dda.Bisphere": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Bisphere"
  },
  "type": "import"
 },
 "holopy.scattering.theory.dda.Capsule": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Capsule"
  },
  "type": "import"
 },
 "holopy.scattering.theory.dda.Cylinder": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Cylinder"
  },
  "type": "import"
 },
 "holopy.scattering.theory.dda.DDA": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "holopy.scattering.theory.scatteringtheory.ScatteringTheory"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.theory.dda.DDA.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "OSError",
    "holopy.core.errors.DependencyMissing",
    "holopy.core.utils.SuppressOutput",
    "holopy.scattering.theory.dda.subprocess",
    "super"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.dda.DDA._adda_discretized": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "holopy.core.utils.ensure_array",
    "holopy.scattering.theory.dda.tempfile",
    "holopy.scattering.theory.dda.warnings",
    "len",
    "numpy.concatenate",
    "numpy.hstack",
    "numpy.mgrid",
    "numpy.newaxis",
    "numpy.nonzero",
    "numpy.savetxt",
    "slice",
    "str"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.dda.DDA._adda_predefined": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "hasattr",
    "numpy.pi",
    "reversed",
    "str"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.dda.DDA._can_handle": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "holopy.scattering.theory.dda.DDA._dpl": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "max",
    "numpy.abs",
    "numpy.isscalar"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.dda.DDA._raw_scat_matrs": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "holopy.scattering.theory.dda.glob",
    "holopy.scattering.theory.dda.os",
    "holopy.scattering.theory.dda.shutil",
    "holopy.scattering.theory.dda.tempfile",
    "len",
    "numpy.array",
    "numpy.loadtxt",
    "numpy.pi",
    "numpy.savetxt",
    "open",
    "print"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.dda.DDA._run_adda": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "holopy.core.utils.SuppressOutput",
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.theory.dda.subprocess",
    "isinstance",
    "numpy.isscalar",
    "numpy.pi",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.dda.DDA.required_spacing": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "holopy.scattering.theory.dda.DependencyMissing": {
  "data": {
   "shadows": "holopy.core.errors.DependencyMissing"
  },
  "type": "import"
 },
 "holopy.scattering.theory.dda.Ellipsoid": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Ellipsoid"
  },
  "type": "import"
 },
 "holopy.scattering.theory.dda.Scatterer": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Scatterer"
  },
  "type": "import"
 },
 "holopy.scattering.theory.dda.ScatteringTheory": {
  "data": {
   "shadows": "holopy.scattering.theory.scatteringtheory.ScatteringTheory"
  },
  "type": "import"
 },
 "holopy.scattering.theory.dda.Sphere": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Sphere"
  },
  "type": "import"
 },
 "holopy.scattering.theory.dda.Spheroid": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Spheroid"
  },
  "type": "import"
 },
 "holopy.scattering.theory.dda.SuppressOutput": {
  "data": {
   "shadows": "holopy.core.utils.SuppressOutput"
  },
  "type": "import"
 },
 "holopy.scattering.theory.dda._get_predefined_shape": {
  "data": {
   "lineno": 230
  },
  "type": "constant"
 },
 "holopy.scattering.theory.dda.ensure_array": {
  "data": {
   "shadows": "holopy.core.utils.ensure_array"
  },
  "type": "import"
 },
 "holopy.scattering.theory.dda.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "holopy.scattering.theory.dda.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.theory.dda.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "holopy.scattering.theory.dda.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "holopy.scattering.theory.dda.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "holopy.scattering.theory.dda.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "holopy.scattering.theory.dda.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "holopy.scattering.theory.dda.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "holopy.scattering.theory.mie.DependencyMissing": {
  "data": {
   "shadows": "holopy.core.errors.DependencyMissing"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie.InvalidScatterer": {
  "data": {
   "shadows": "holopy.scattering.errors.InvalidScatterer"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie.Mie": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "holopy.scattering.theory.scatteringtheory.ScatteringTheory"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.theory.mie.Mie.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "holopy.core.errors.DependencyMissing",
    "holopy.scattering.theory.mie._COMPILED_FORTRAN",
    "super"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mie.Mie._can_handle": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "holopy.scattering.scatterer.Sphere",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mie.Mie._raw_cross_sections": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "holopy.scattering.errors.InvalidScatterer",
    "holopy.scattering.scatterer.Spheres",
    "holopy.scattering.theory.mie_f.miescatlib.asymmetry_parameter",
    "holopy.scattering.theory.mie_f.miescatlib.cross_sections",
    "isinstance",
    "numpy.array",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mie.Mie._raw_fields": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "holopy.scattering.theory.mie_f.mieangfuncs.mie_fields"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mie.Mie._raw_internal_fields": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "holopy.scattering.theory.mie_f.mieangfuncs.mie_internal_fields"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mie.Mie._raw_scat_matrs": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "holopy.scattering.errors.TheoryNotCompatibleError",
    "holopy.scattering.theory.mie_f.mieangfuncs.asm_mie_far"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mie.Mie._scat_coeffs": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "holopy.core.utils.ensure_array",
    "holopy.scattering.errors.InvalidScatterer",
    "holopy.scattering.theory.mie_f.miescatlib.nstop",
    "holopy.scattering.theory.mie_f.miescatlib.scatcoeffs",
    "holopy.scattering.theory.mie_f.scatcoeffs_multi",
    "len"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mie.Mie._scat_coeffs_internal": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "holopy.core.utils.ensure_array",
    "holopy.scattering.errors.InvalidScatterer",
    "holopy.scattering.theory.mie_f.miescatlib.internal_coeffs",
    "holopy.scattering.theory.mie_f.miescatlib.nstop",
    "len"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mie.ScatteringTheory": {
  "data": {
   "shadows": "holopy.scattering.theory.scatteringtheory.ScatteringTheory"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie.Sphere": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Sphere"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie.Spheres": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Spheres"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie.TheoryNotCompatibleError": {
  "data": {
   "shadows": "holopy.scattering.errors.TheoryNotCompatibleError"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie._COMPILED_FORTRAN": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "holopy.scattering.theory.mie.ensure_array": {
  "data": {
   "shadows": "holopy.core.utils.ensure_array"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie.mieangfuncs": {
  "data": {
   "shadows": "holopy.scattering.theory.mie_f.mieangfuncs"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie.miescatlib": {
  "data": {
   "shadows": "holopy.scattering.theory.mie_f.miescatlib"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie.scatcoeffs_multi": {
  "data": {
   "shadows": "holopy.scattering.theory.mie_f.scatcoeffs_multi"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie_f": {
  "data": {},
  "type": "module"
 },
 "holopy.scattering.theory.mie_f.mie_specfuncs": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "holopy.scattering.theory.mie_f.mie_specfuncs.Qratio": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "holopy.scattering.theory.mie_f.mie_specfuncs.log_der_13",
    "numpy.arange",
    "numpy.complex128",
    "numpy.exp",
    "numpy.imag",
    "numpy.real",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mie_f.mie_specfuncs.R_psi": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "dn_1_down",
    "lentz_dn1",
    "numpy.arange",
    "numpy.sin",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mie_f.mie_specfuncs.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie_f.mie_specfuncs.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie_f.mie_specfuncs.cos": {
  "data": {
   "shadows": "numpy.cos"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie_f.mie_specfuncs.exp": {
  "data": {
   "shadows": "numpy.exp"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie_f.mie_specfuncs.imag": {
  "data": {
   "shadows": "numpy.imag"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie_f.mie_specfuncs.log_der_1": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mie_f.mie_specfuncs.log_der_13": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "dn_1_down",
    "lentz_dn1",
    "numpy.arange",
    "numpy.complex128",
    "numpy.exp",
    "numpy.sin",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mie_f.mie_specfuncs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie_f.mie_specfuncs.real": {
  "data": {
   "shadows": "numpy.real"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie_f.mie_specfuncs.riccati_jn": {
  "data": {
   "shadows": "scipy.special.riccati_jn"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie_f.mie_specfuncs.riccati_psi_xi": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.imag",
    "scipy.special.riccati_jn",
    "scipy.special.riccati_yn"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mie_f.mie_specfuncs.riccati_yn": {
  "data": {
   "shadows": "scipy.special.riccati_yn"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie_f.mie_specfuncs.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie_f.mie_specfuncs.sin": {
  "data": {
   "shadows": "numpy.sin"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie_f.mie_specfuncs.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie_f.miescatlib": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "holopy.scattering.theory.mie_f.miescatlib.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie_f.miescatlib.asymmetry_parameter": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.conj",
    "numpy.real"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mie_f.miescatlib.cos": {
  "data": {
   "shadows": "numpy.cos"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie_f.miescatlib.cross_sections": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.arange",
    "numpy.array",
    "numpy.real"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mie_f.miescatlib.internal_coeffs": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "dn_1_down",
    "lentz_dn1",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mie_f.miescatlib.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie_f.miescatlib.nstop": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "int",
    "numpy.absolute",
    "numpy.round_"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mie_f.miescatlib.scatcoeffs": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "dn_1_down",
    "lentz_dn1",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mie_f.miescatlib.sin": {
  "data": {
   "shadows": "numpy.sin"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie_f.multilayer_sphere_lib": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "holopy.scattering.theory.mie_f.multilayer_sphere_lib.cos": {
  "data": {
   "shadows": "numpy.cos"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie_f.multilayer_sphere_lib.exp": {
  "data": {
   "shadows": "numpy.exp"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie_f.multilayer_sphere_lib.imag": {
  "data": {
   "shadows": "numpy.imag"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie_f.multilayer_sphere_lib.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie_f.multilayer_sphere_lib.real": {
  "data": {
   "shadows": "numpy.real"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie_f.multilayer_sphere_lib.scatcoeffs_multi": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "InvalidScatterer",
    "Qratio",
    "Sphere",
    "log_der_13",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.zeros",
    "riccati_psi_xi"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mie_f.multilayer_sphere_lib.sin": {
  "data": {
   "shadows": "numpy.sin"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie_f.scatcoeffs_multi": {
  "data": {
   "shadows": "holopy.scattering.theory.mie_f.multilayer_sphere_lib.scatcoeffs_multi"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie_f.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "holopy.scattering.theory.mie_f.setup.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "holopy.scattering.theory.mie_f.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie_f.setup.build_ext": {
  "data": {
   "shadows": "numpy.distutils.command.build_ext"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie_f.setup.configuration": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "hasattr",
    "holopy.scattering.theory.mie_f.setup.sys",
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mie_f.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mie_f.setup.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mielens": {
  "data": {},
  "type": "module"
 },
 "holopy.scattering.theory.mielens.MieLens": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "holopy.scattering.theory.scatteringtheory.ScatteringTheory"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.theory.mielens.MieLens.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "holopy.scattering.theory.mielens.MieLens",
    "super"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielens.MieLens._can_handle": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "holopy.scattering.scatterer.Sphere",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielens.MieLens._raw_fields": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError",
    "holopy.scattering.theory.mielensfunctions.MieLensCalculator",
    "numpy.abs",
    "numpy.arctan2",
    "numpy.array",
    "numpy.cos",
    "numpy.exp",
    "numpy.mean",
    "numpy.pi",
    "numpy.ptp",
    "numpy.sin",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielens.MieLensCalculator": {
  "data": {
   "shadows": "holopy.scattering.theory.mielensfunctions.MieLensCalculator"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mielens.ScatteringTheory": {
  "data": {
   "shadows": "holopy.scattering.theory.scatteringtheory.ScatteringTheory"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mielens.Sphere": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Sphere"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mielens.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mielensfunctions": {
  "data": {
   "symbols_in_volume": [
    "holopy.scattering.theory.mielensfunctions.NPTS",
    "numpy.polynomial.legendre.leggauss"
   ]
  },
  "type": "module"
 },
 "holopy.scattering.theory.mielensfunctions.AlBlFunctions": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.theory.mielensfunctions.AlBlFunctions.calculate_al_bl": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "holopy.scattering.theory.mielensfunctions.AlBlFunctions",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.AlBlFunctions.riccati_psin": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "scipy.special.spherical_jn",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.AlBlFunctions.riccati_xin": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "holopy.scattering.theory.mielensfunctions.spherical_h2n",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.Chebyshev": {
  "data": {
   "shadows": "numpy.polynomial.chebyshev.Chebyshev"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mielensfunctions.LEGGAUSS_PTS_WTS_NPTS": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "holopy.scattering.theory.mielensfunctions.MieLensCalculator": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.theory.mielensfunctions.MieLensCalculator.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "gauss_legendre_pts_wts",
    "numpy.arccos",
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.MieLensCalculator._calculate_large_krho_scattered_field": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.MieLensCalculator._calculate_small_krho_scattered_field": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.reshape",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.MieLensCalculator._check_parameters": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "getattr"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.MieLensCalculator._direct_eval_mielens_i_n": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "ValueError",
    "ji",
    "numpy.exp",
    "numpy.sqrt",
    "numpy.sum",
    "scipy.special.j0"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.MieLensCalculator._eval_mielens_i_n": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.MieLensCalculator._interpolate_and_eval_mielens_i_n": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "PiecewiseChebyshevApproximant",
    "interpolator",
    "numpy.arange",
    "numpy.ceil",
    "numpy.floor"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.MieLensCalculator._precompute_scattering_matrices": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "MieScatteringMatrix",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.MieLensCalculator.calculate_incident_field": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.MieLensCalculator.calculate_scattered_field": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.MieLensCalculator.calculate_total_field": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.MieLensCalculator.calculate_total_intensity": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.MieScatteringMatrix": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.theory.mielensfunctions.MieScatteringMatrix.__call__": {
  "data": {
   "lineno": 344
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.MieScatteringMatrix.__init__": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.MieScatteringMatrix._default_max_l": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "numpy.ceil"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.MieScatteringMatrix._default_npts": {
  "data": {
   "lineno": 319
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.MieScatteringMatrix._eval": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "RuntimeError",
    "calculate_al_bl",
    "calculate_pil_taul",
    "numpy.array",
    "numpy.isnan",
    "numpy.sum",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.MieScatteringMatrix._setup_interpolator": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.pi",
    "scipy.interpolate.CubicSpline"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.NPTS": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "holopy.scattering.theory.mielensfunctions.PiecewiseChebyshevApproximant": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.theory.mielensfunctions.PiecewiseChebyshevApproximant.__call__": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "ValueError",
    "approximant",
    "numpy.asarray",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.PiecewiseChebyshevApproximant.__init__": {
  "data": {
   "lineno": 569
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.PiecewiseChebyshevApproximant._mask_window": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.PiecewiseChebyshevApproximant._setup_approximants": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "numpy.polynomial.chebyshev.Chebyshev.interpolate"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.PiecewiseChebyshevApproximant._setup_windows": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.calculate_al_bl": {
  "data": {
   "lineno": 382
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.calculate_pil_taul": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "numpy.atleast_1d",
    "numpy.cos",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.gauss_legendre_pts_wts": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "holopy.scattering.theory.mielensfunctions.LEGGAUSS_PTS_WTS_NPTS",
    "holopy.scattering.theory.mielensfunctions.NPTS",
    "numpy.polynomial.legendre.leggauss"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mielensfunctions.j0": {
  "data": {
   "shadows": "scipy.special.j0"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mielensfunctions.j1": {
  "data": {
   "shadows": "scipy.special.j1"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mielensfunctions.j2": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "numpy.clip",
    "numpy.inf",
    "scipy.special.j0",
    "scipy.special.j1"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mielensfunctions.spherical_h1n": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "scipy.special.spherical_jn",
    "scipy.special.spherical_yn"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.spherical_h2n": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "scipy.special.spherical_jn",
    "scipy.special.spherical_yn"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.mielensfunctions.spherical_jn": {
  "data": {
   "shadows": "scipy.special.spherical_jn"
  },
  "type": "import"
 },
 "holopy.scattering.theory.mielensfunctions.spherical_yn": {
  "data": {
   "shadows": "scipy.special.spherical_yn"
  },
  "type": "import"
 },
 "holopy.scattering.theory.multisphere": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "holopy.scattering.theory.multisphere.DependencyMissing": {
  "data": {
   "shadows": "holopy.core.errors.DependencyMissing"
  },
  "type": "import"
 },
 "holopy.scattering.theory.multisphere.InvalidScatterer": {
  "data": {
   "shadows": "holopy.scattering.errors.InvalidScatterer"
  },
  "type": "import"
 },
 "holopy.scattering.theory.multisphere.Multisphere": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "holopy.scattering.theory.scatteringtheory.ScatteringTheory"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.theory.multisphere.Multisphere.__init__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "holopy.core.errors.DependencyMissing",
    "holopy.scattering.theory.multisphere._COMPILED_FORTRAN",
    "super"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.multisphere.Multisphere._calc_asym": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "_integrate4pi",
    "holopy.scattering.theory.multisphere.normalize_polarization"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.multisphere.Multisphere._calc_asym.costhetawt": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "_asm_far",
    "holopy.scattering.theory.mie_f.mieangfuncs.incfield",
    "numpy.abs",
    "numpy.cos",
    "numpy.dot",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.multisphere.Multisphere._calc_cext": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "_asm_far",
    "holopy.scattering.theory.multisphere.normalize_polarization",
    "numpy.array",
    "numpy.dot",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.multisphere.Multisphere._calc_cscat": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "holopy.scattering.theory.multisphere.normalize_polarization",
    "numpy.abs",
    "numpy.arctan2",
    "numpy.cos",
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.multisphere.Multisphere._calc_cscat_quad": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "_integrate4pi",
    "holopy.scattering.theory.multisphere.normalize_polarization"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.multisphere.Multisphere._calc_cscat_quad.ampsq": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "_asm_far",
    "holopy.scattering.theory.mie_f.mieangfuncs.incfield",
    "numpy.abs",
    "numpy.dot",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.multisphere.Multisphere._can_handle": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.scatterer.Spheres",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.multisphere.Multisphere._raw_fields": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "holopy.scattering.errors.MultisphereFailure",
    "holopy.scattering.theory.mie_f.mieangfuncs.tmatrix_fields",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.multisphere.Multisphere._raw_internal_fields": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "numpy.zeros",
    "range",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.multisphere.Multisphere._raw_scat_matrs": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "_asm_far"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.multisphere.Multisphere._scsmfo_setup": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "holopy.core.utils.SuppressOutput",
    "holopy.scattering.errors.InvalidScatterer",
    "holopy.scattering.errors.MultisphereFailure",
    "holopy.scattering.errors.TheoryNotCompatibleError",
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.scatterer.Spheres",
    "holopy.scattering.theory.mie_f.scsmfo_min.amncalc",
    "isinstance",
    "numpy.isnan",
    "numpy.isscalar"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.multisphere.Multisphere.calculate_cross_sections": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "holopy.scattering.theory.multisphere.normalize_polarization",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.multisphere.MultisphereFailure": {
  "data": {
   "shadows": "holopy.scattering.errors.MultisphereFailure"
  },
  "type": "import"
 },
 "holopy.scattering.theory.multisphere.ScatteringTheory": {
  "data": {
   "shadows": "holopy.scattering.theory.scatteringtheory.ScatteringTheory"
  },
  "type": "import"
 },
 "holopy.scattering.theory.multisphere.Sphere": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Sphere"
  },
  "type": "import"
 },
 "holopy.scattering.theory.multisphere.Spheres": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Spheres"
  },
  "type": "import"
 },
 "holopy.scattering.theory.multisphere.SuppressOutput": {
  "data": {
   "shadows": "holopy.core.utils.SuppressOutput"
  },
  "type": "import"
 },
 "holopy.scattering.theory.multisphere.TheoryNotCompatibleError": {
  "data": {
   "shadows": "holopy.scattering.errors.TheoryNotCompatibleError"
  },
  "type": "import"
 },
 "holopy.scattering.theory.multisphere._COMPILED_FORTRAN": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "holopy.scattering.theory.multisphere._asm_far": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "holopy.scattering.theory.mie_f.uts_scsmfo.asm",
    "numpy.roll"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.multisphere._integrate4pi": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "numpy.pi",
    "scipy.integrate.dblquad"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.multisphere.arctan2": {
  "data": {
   "shadows": "numpy.arctan2"
  },
  "type": "import"
 },
 "holopy.scattering.theory.multisphere.cos": {
  "data": {
   "shadows": "numpy.cos"
  },
  "type": "import"
 },
 "holopy.scattering.theory.multisphere.dblquad": {
  "data": {
   "shadows": "scipy.integrate.dblquad"
  },
  "type": "import"
 },
 "holopy.scattering.theory.multisphere.mieangfuncs": {
  "data": {
   "shadows": "holopy.scattering.theory.mie_f.mieangfuncs"
  },
  "type": "import"
 },
 "holopy.scattering.theory.multisphere.normalize_polarization": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.multisphere.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.theory.multisphere.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "holopy.scattering.theory.multisphere.scsmfo_min": {
  "data": {
   "shadows": "holopy.scattering.theory.mie_f.scsmfo_min"
  },
  "type": "import"
 },
 "holopy.scattering.theory.multisphere.sin": {
  "data": {
   "shadows": "numpy.sin"
  },
  "type": "import"
 },
 "holopy.scattering.theory.multisphere.uts_scsmfo": {
  "data": {
   "shadows": "holopy.scattering.theory.mie_f.uts_scsmfo"
  },
  "type": "import"
 },
 "holopy.scattering.theory.multisphere.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "holopy.scattering.theory.scatteringtheory": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "holopy.scattering.theory.scatteringtheory.HoloPyObject": {
  "data": {
   "shadows": "holopy.core.holopy_object.HoloPyObject"
  },
  "type": "import"
 },
 "holopy.scattering.theory.scatteringtheory.MissingParameter": {
  "data": {
   "shadows": "holopy.scattering.errors.MissingParameter"
  },
  "type": "import"
 },
 "holopy.scattering.theory.scatteringtheory.Scatterers": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Scatterers"
  },
  "type": "import"
 },
 "holopy.scattering.theory.scatteringtheory.ScatteringTheory": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "holopy.core.holopy_object.HoloPyObject"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.theory.scatteringtheory.ScatteringTheory._calculate_multiple_color_scattered_field": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "holopy.core.metadata.clean_concat",
    "holopy.core.metadata.illumination",
    "holopy.core.metadata.update_metadata",
    "holopy.core.utils.ensure_array"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.scatteringtheory.ScatteringTheory._calculate_scattered_field_from_superposition": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "holopy.scattering.theory.scatteringtheory.ScatteringTheory._calculate_single_color_scattered_field": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "holopy.scattering.errors.TheoryNotCompatibleError",
    "holopy.scattering.scatterer.Scatterers",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.scatteringtheory.ScatteringTheory._get_field_from": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "holopy.scattering.theory.scatteringtheory.get_wavevec_from",
    "numpy.exp",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.scatteringtheory.ScatteringTheory._is_detector_view_point_or_flat": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "ValueError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.scatteringtheory.ScatteringTheory._pack_field_into_xarray": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "holopy.core.metadata.flat",
    "holopy.core.metadata.vector",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.scatteringtheory.ScatteringTheory._pack_scattering_matrix_into_xarray": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "holopy.core.metadata.flat",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.scatteringtheory.ScatteringTheory._raw_fields": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "enumerate",
    "holopy.scattering.theory.mie_f.mieangfuncs.calc_scat_field",
    "holopy.scattering.theory.mie_f.mieangfuncs.fieldstocart",
    "numpy.array",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.scatteringtheory.ScatteringTheory._transform_to_desired_coordinates": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "classmethod",
    "hasattr",
    "holopy.core.math.find_transformation_function",
    "holopy.core.metadata.flat",
    "method",
    "numpy.full",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.scatteringtheory.ScatteringTheory.calculate_cross_sections": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.scatteringtheory.ScatteringTheory.calculate_scattered_field": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "holopy.core.utils.ensure_array",
    "holopy.scattering.errors.MissingParameter",
    "len"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.scatteringtheory.ScatteringTheory.calculate_scattering_matrix": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "holopy.scattering.theory.scatteringtheory.get_wavevec_from"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.scatteringtheory.TheoryNotCompatibleError": {
  "data": {
   "shadows": "holopy.scattering.errors.TheoryNotCompatibleError"
  },
  "type": "import"
 },
 "holopy.scattering.theory.scatteringtheory.clean_concat": {
  "data": {
   "shadows": "holopy.core.metadata.clean_concat"
  },
  "type": "import"
 },
 "holopy.scattering.theory.scatteringtheory.ensure_array": {
  "data": {
   "shadows": "holopy.core.utils.ensure_array"
  },
  "type": "import"
 },
 "holopy.scattering.theory.scatteringtheory.find_transformation_function": {
  "data": {
   "shadows": "holopy.core.math.find_transformation_function"
  },
  "type": "import"
 },
 "holopy.scattering.theory.scatteringtheory.flat": {
  "data": {
   "shadows": "holopy.core.metadata.flat"
  },
  "type": "import"
 },
 "holopy.scattering.theory.scatteringtheory.get_wavevec_from": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.scatteringtheory.illumination": {
  "data": {
   "shadows": "holopy.core.metadata.illumination"
  },
  "type": "import"
 },
 "holopy.scattering.theory.scatteringtheory.mieangfuncs": {
  "data": {
   "shadows": "holopy.scattering.theory.mie_f.mieangfuncs"
  },
  "type": "import"
 },
 "holopy.scattering.theory.scatteringtheory.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.theory.scatteringtheory.update_metadata": {
  "data": {
   "shadows": "holopy.core.metadata.update_metadata"
  },
  "type": "import"
 },
 "holopy.scattering.theory.scatteringtheory.vector": {
  "data": {
   "shadows": "holopy.core.metadata.vector"
  },
  "type": "import"
 },
 "holopy.scattering.theory.scatteringtheory.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "holopy.scattering.theory.scatteringtheory.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "holopy.scattering.theory.tmatrix": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "ModuleNotFoundError"
   ]
  },
  "type": "module"
 },
 "holopy.scattering.theory.tmatrix.COMPILED_TMATRIX_FORTRAN": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "holopy.scattering.theory.tmatrix.Cylinder": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Cylinder"
  },
  "type": "import"
 },
 "holopy.scattering.theory.tmatrix.DependencyMissing": {
  "data": {
   "shadows": "holopy.core.errors.DependencyMissing"
  },
  "type": "import"
 },
 "holopy.scattering.theory.tmatrix.ScatteringTheory": {
  "data": {
   "shadows": "holopy.scattering.theory.scatteringtheory.ScatteringTheory"
  },
  "type": "import"
 },
 "holopy.scattering.theory.tmatrix.Sphere": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Sphere"
  },
  "type": "import"
 },
 "holopy.scattering.theory.tmatrix.Spheroid": {
  "data": {
   "shadows": "holopy.scattering.scatterer.Spheroid"
  },
  "type": "import"
 },
 "holopy.scattering.theory.tmatrix.TheoryNotCompatibleError": {
  "data": {
   "shadows": "holopy.scattering.errors.TheoryNotCompatibleError"
  },
  "type": "import"
 },
 "holopy.scattering.theory.tmatrix.Tmatrix": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "holopy.scattering.theory.scatteringtheory.ScatteringTheory"
   ]
  },
  "type": "class"
 },
 "holopy.scattering.theory.tmatrix.Tmatrix.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "holopy.core.errors.DependencyMissing",
    "holopy.scattering.theory.tmatrix.COMPILED_TMATRIX_FORTRAN",
    "super"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.tmatrix.Tmatrix._can_handle": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "holopy.scattering.scatterer.Cylinder",
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.scatterer.Spheroid",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.tmatrix.Tmatrix._parse_args": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "holopy.scattering.errors.TheoryNotCompatibleError",
    "holopy.scattering.scatterer.Cylinder",
    "holopy.scattering.scatterer.Sphere",
    "holopy.scattering.scatterer.Spheroid",
    "holopy.scattering.theory.tmatrix.copy",
    "int",
    "isinstance",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.tmatrix.Tmatrix._raw_fields": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "holopy.scattering.theory.mie_f.mieangfuncs.calc_scat_field",
    "holopy.scattering.theory.mie_f.mieangfuncs.fieldstocart",
    "holopy.scattering.theory.tmatrix._NO_MIEANGFUNCS",
    "numpy.array",
    "numpy.cos",
    "numpy.dot",
    "numpy.sin",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.tmatrix.Tmatrix._raw_scat_matrs": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "holopy.scattering.theory.tmatrix.Tmatrix._run_tmat": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "holopy.scattering.theory.tmatrix_f.S.ampld",
    "numpy.array",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.tmatrix.TmatrixFailure": {
  "data": {
   "shadows": "holopy.scattering.errors.TmatrixFailure"
  },
  "type": "import"
 },
 "holopy.scattering.theory.tmatrix._NO_MIEANGFUNCS": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "holopy.scattering.theory.tmatrix.ampld": {
  "data": {
   "shadows": "holopy.scattering.theory.tmatrix_f.S.ampld"
  },
  "type": "import"
 },
 "holopy.scattering.theory.tmatrix.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "holopy.scattering.theory.tmatrix.mieangfuncs": {
  "data": {
   "shadows": "holopy.scattering.theory.mie_f.mieangfuncs"
  },
  "type": "import"
 },
 "holopy.scattering.theory.tmatrix.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "holopy.scattering.theory.tmatrix_f": {
  "data": {},
  "type": "module"
 },
 "holopy.scattering.theory.tmatrix_f.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "holopy.scattering.theory.tmatrix_f.setup.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "holopy.scattering.theory.tmatrix_f.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "holopy.scattering.theory.tmatrix_f.setup.build_ext": {
  "data": {
   "shadows": "numpy.distutils.command.build_ext"
  },
  "type": "import"
 },
 "holopy.scattering.theory.tmatrix_f.setup.configuration": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "hasattr",
    "holopy.scattering.theory.tmatrix_f.setup.sys",
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "holopy.scattering.theory.tmatrix_f.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "holopy.scattering.theory.tmatrix_f.setup.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "holopy.scattering.third_party": {
  "data": {},
  "type": "module"
 },
 "holopy.show": {
  "data": {
   "shadows": "holopy.core.show"
  },
  "type": "import"
 }
}