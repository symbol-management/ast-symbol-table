{
 "*": {
  "data": {
   "imports": [
    "molmod",
    "molmod.io"
   ]
  },
  "type": "star-import"
 },
 "molmod": {
  "data": {
   "symbols_in_volume": {
    "numpy.seterr": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "module"
 },
 "molmod.__version__": {
  "data": {
   "shadows": "molmod.version.__version__"
  },
  "type": "import"
 },
 "molmod.binning": {
  "data": {},
  "type": "module"
 },
 "molmod.binning.Binning": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "object": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.binning.Binning.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "bin": {
     "line number": [
      76,
      77,
      78,
      79
     ]
    },
    "bin.append": {
     "line number": [
      80
     ]
    },
    "builtins.range": {
     "line number": [
      72
     ]
    },
    "int": {
     "line number": [
      73,
      86
     ]
    },
    "len": {
     "line number": [
      72
     ]
    },
    "numpy.diag": {
     "line number": [
      86
     ]
    },
    "tuple": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.binning.Binning.__iter__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.binning.Binning.iter_surrounding": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "bin": {
     "line number": [
      100,
      101,
      102
     ]
    },
    "int": {
     "line number": [
      97
     ]
    },
    "numpy.add": {
     "line number": [
      97
     ]
    },
    "tuple": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.binning.Binning.wrap_key": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "int": {
     "line number": [
      111
     ]
    },
    "numpy.round": {
     "line number": [
      109
     ]
    },
    "tuple": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.binning.PairSearchBase": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "object": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.binning.PairSearchBase._setup_grid": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      139
     ]
    },
    "ValueError": {
     "line number": [
      146
     ]
    },
    "abs": {
     "line number": [
      145
     ]
    },
    "float": {
     "line number": [
      130
     ]
    },
    "isinstance": {
     "line number": [
      130,
      136
     ]
    },
    "molmod.unit_cells.UnitCell": {
     "line number": [
      131,
      136,
      148
     ]
    },
    "numpy.array": {
     "line number": [
      131
     ]
    },
    "numpy.ceil": {
     "line number": [
      126
     ]
    },
    "numpy.round": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.binning.PairSearchInter": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "molmod.binning.PairSearchBase": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.binning.PairSearchInter.__init__": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": {
    "molmod.binning.Binning": {
     "line number": [
      257,
      258
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.binning.PairSearchInter.__iter__": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": {
    "numpy.linalg.norm": {
     "line number": [
      269
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.binning.PairSearchIntra": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "molmod.binning.PairSearchBase": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.binning.PairSearchIntra.__init__": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "molmod.binning.Binning": {
     "line number": [
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.binning.PairSearchIntra.__iter__": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "numpy.linalg.norm": {
     "line number": [
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.binning.UnitCell": {
  "data": {
   "shadows": "molmod.unit_cells.UnitCell"
  },
  "type": "import"
 },
 "molmod.binning.__all__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "molmod.binning.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.binning.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.binning.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.bonds": {
  "data": {
   "symbols_in_volume": {
    "molmod.bonds.BOND_DOUBLE": {
     "line number": [
      66
     ]
    },
    "molmod.bonds.BOND_HYBRID": {
     "line number": [
      66
     ]
    },
    "molmod.bonds.BOND_HYDROGEN": {
     "line number": [
      66
     ]
    },
    "molmod.bonds.BOND_SINGLE": {
     "line number": [
      66
     ]
    },
    "molmod.bonds.BOND_TRIPLE": {
     "line number": [
      66
     ]
    },
    "molmod.bonds.BondData": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "module"
 },
 "molmod.bonds.BOND_DOUBLE": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "molmod.bonds.BOND_HYBRID": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "molmod.bonds.BOND_HYDROGEN": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "molmod.bonds.BOND_SINGLE": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "molmod.bonds.BOND_TRIPLE": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "molmod.bonds.BondData": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "object": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.bonds.BondData.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      79
     ]
    },
    "len": {
     "line number": [
      86
     ]
    },
    "max": {
     "line number": [
      82,
      83
     ]
    },
    "molmod.bonds.bond_types": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.bonds.BondData._approximate_unkown_bond_lengths": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "frozenset": {
     "line number": [
      134
     ]
    },
    "molmod.bonds.BOND_SINGLE": {
     "line number": [
      130
     ]
    },
    "molmod.periodic.periodic": {
     "line number": [
      135,
      136
     ]
    },
    "molmod.periodic.periodic.iter_numbers": {
     "line number": [
      131,
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.bonds.BondData._load_bond_data": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      117
     ]
    },
    "len": {
     "line number": [
      120
     ]
    },
    "molmod.bonds.BOND_DOUBLE": {
     "line number": [
      125
     ]
    },
    "molmod.bonds.BOND_SINGLE": {
     "line number": [
      124
     ]
    },
    "molmod.bonds.BOND_TRIPLE": {
     "line number": [
      126
     ]
    },
    "molmod.bonds.pkg_resources": {
     "line number": [
      117
     ]
    },
    "read_length": {
     "line number": [
      124,
      125,
      126
     ]
    },
    "read_units": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.bonds.BondData._load_bond_data.read_length": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      111
     ]
    },
    "float": {
     "line number": [
      114
     ]
    },
    "frozenset": {
     "line number": [
      114
     ]
    },
    "int": {
     "line number": [
      109,
      110
     ]
    },
    "len": {
     "line number": [
      111
     ]
    },
    "zip": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.bonds.BondData._load_bond_data.read_units": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "molmod.units.angstrom": {
     "line number": [
      101
     ]
    },
    "molmod.units.nanometer": {
     "line number": [
      103
     ]
    },
    "molmod.units.picometer": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.bonds.BondData.bonded": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      168,
      170
     ]
    },
    "frozenset": {
     "line number": [
      160
     ]
    },
    "molmod.bonds.bond_types": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.bonds.BondData.get_length": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "frozenset": {
     "line number": [
      192
     ]
    },
    "molmod.bonds.BOND_SINGLE": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.bonds.__all__": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "molmod.bonds.bond_types": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "molmod.bonds.bonds": {
  "data": {
   "lineno": 195
  },
  "type": "constant"
 },
 "molmod.bonds.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.bonds.periodic": {
  "data": {
   "shadows": "molmod.periodic.periodic"
  },
  "type": "import"
 },
 "molmod.bonds.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "molmod.bonds.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.bonds.units": {
  "data": {
   "shadows": "molmod.units"
  },
  "type": "import"
 },
 "molmod.clusters": {
  "data": {},
  "type": "module"
 },
 "molmod.clusters.Cluster": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "object": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.clusters.Cluster.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "set": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.clusters.Cluster.add_item": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "molmod.clusters.Cluster.update": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "molmod.clusters.ClusterFactory": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "object": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.clusters.ClusterFactory.__init__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "molmod.clusters.Cluster": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.clusters.ClusterFactory.add_related": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      118
     ]
    },
    "set": {
     "line number": [
      115,
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.clusters.ClusterFactory.get_clusters": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "set": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.clusters.RuleCluster": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "molmod.clusters.Cluster": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.clusters.RuleCluster.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "molmod.clusters.Cluster": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.clusters.RuleCluster.update": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "molmod.clusters.Cluster": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.clusters.__all__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "molmod.constants": {
  "data": {
   "symbols_in_volume": {
    "__doc__": {
     "line number": [
      49
     ]
    },
    "float": {
     "line number": [
      44
     ]
    },
    "globals": {
     "line number": [
      43
     ]
    },
    "isinstance": {
     "line number": [
      44
     ]
    },
    "molmod.constants.lines": {
     "line number": [
      46,
      47,
      49
     ]
    },
    "sorted": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "module"
 },
 "molmod.constants.avogadro": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "molmod.constants.boltzmann": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "molmod.constants.lightspeed": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "molmod.constants.lines": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "molmod.constants.planck": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "molmod.examples.000_units.a_reaction": {
  "data": {
   "symbols_in_volume": {
    "molmod.examples.000_units.a_reaction.energy_prod": {
     "line number": [
      11
     ]
    },
    "molmod.examples.000_units.a_reaction.energy_react": {
     "line number": [
      11
     ]
    },
    "molmod.examples.000_units.a_reaction.reaction_energy": {
     "line number": [
      13
     ]
    },
    "print": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "module"
 },
 "molmod.examples.000_units.a_reaction.energy_prod": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "molmod.examples.000_units.a_reaction.energy_react": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "molmod.examples.000_units.a_reaction.old_div": {
  "data": {
   "shadows": "past.utils.old_div"
  },
  "type": "import"
 },
 "molmod.examples.000_units.a_reaction.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "molmod.examples.000_units.a_reaction.reaction_energy": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "molmod.examples.000_units.b_chbond": {
  "data": {
   "symbols_in_volume": {
    "molmod.examples.000_units.b_chbond.freq": {
     "line number": [
      14
     ]
    },
    "molmod.examples.000_units.b_chbond.k": {
     "line number": [
      11,
      13
     ]
    },
    "molmod.examples.000_units.b_chbond.m": {
     "line number": [
      11
     ]
    },
    "numpy.pi": {
     "line number": [
      11
     ]
    },
    "numpy.sqrt": {
     "line number": [
      11
     ]
    },
    "print": {
     "line number": [
      13,
      14
     ]
    }
   }
  },
  "type": "module"
 },
 "molmod.examples.000_units.b_chbond.freq": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "molmod.examples.000_units.b_chbond.k": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "molmod.examples.000_units.b_chbond.m": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "molmod.examples.000_units.b_chbond.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "molmod.examples.000_units.b_chbond.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "molmod.examples.000_units.b_chbond.sqrt": {
  "data": {
   "shadows": "numpy.sqrt"
  },
  "type": "import"
 },
 "molmod.examples.000_units.c_h2rot": {
  "data": {
   "symbols_in_volume": {
    "molmod.examples.000_units.c_h2rot.d": {
     "line number": [
      14
     ]
    },
    "molmod.examples.000_units.c_h2rot.imom": {
     "line number": [
      16
     ]
    },
    "molmod.examples.000_units.c_h2rot.m": {
     "line number": [
      14
     ]
    },
    "molmod.examples.000_units.c_h2rot.prob": {
     "line number": [
      31
     ]
    },
    "molmod.examples.000_units.c_h2rot.q_rot": {
     "line number": [
      25,
      28
     ]
    },
    "molmod.examples.000_units.c_h2rot.q_rot_term": {
     "line number": [
      25,
      28
     ]
    },
    "molmod.examples.000_units.c_h2rot.rot_temp": {
     "line number": [
      30
     ]
    },
    "print": {
     "line number": [
      30,
      31
     ]
    },
    "range": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "module"
 },
 "molmod.examples.000_units.c_h2rot.d": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "molmod.examples.000_units.c_h2rot.exp": {
  "data": {
   "shadows": "numpy.exp"
  },
  "type": "import"
 },
 "molmod.examples.000_units.c_h2rot.imom": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "molmod.examples.000_units.c_h2rot.m": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "molmod.examples.000_units.c_h2rot.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "molmod.examples.000_units.c_h2rot.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "molmod.examples.000_units.c_h2rot.prob": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "molmod.examples.000_units.c_h2rot.q_rot": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "molmod.examples.000_units.c_h2rot.q_rot_term": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "molmod.examples.000_units.c_h2rot.rot_temp": {
     "line number": [
      20
     ]
    },
    "molmod.examples.000_units.c_h2rot.temp": {
     "line number": [
      20
     ]
    },
    "numpy.exp": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.examples.000_units.c_h2rot.rot_temp": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "molmod.examples.000_units.c_h2rot.temp": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "molmod.examples.001_molecules.a_convert": {
  "data": {
   "symbols_in_volume": {
    "molmod.examples.001_molecules.a_convert.mol": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "module"
 },
 "molmod.examples.001_molecules.a_convert.mol": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "molmod.examples.001_molecules.b_com": {
  "data": {
   "symbols_in_volume": {
    "molmod.examples.001_molecules.b_com.mol1": {
     "line number": [
      10,
      11,
      18,
      18,
      21
     ]
    },
    "molmod.examples.001_molecules.b_com.mol2": {
     "line number": [
      22
     ]
    },
    "molmod.examples.001_molecules.b_com.new_coordinates": {
     "line number": [
      21
     ]
    },
    "print": {
     "line number": [
      11,
      23
     ]
    }
   }
  },
  "type": "module"
 },
 "molmod.examples.001_molecules.b_com.mol1": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "molmod.examples.001_molecules.b_com.mol2": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "molmod.examples.001_molecules.b_com.new_coordinates": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "molmod.examples.001_molecules.c_carbon": {
  "data": {
   "symbols_in_volume": {
    "molmod.examples.001_molecules.c_carbon.mol": {
     "line number": [
      9,
      10,
      11
     ]
    },
    "print": {
     "line number": [
      11
     ]
    },
    "range": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "module"
 },
 "molmod.examples.001_molecules.c_carbon.mol": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "molmod.examples.001_molecules.d_size": {
  "data": {
   "symbols_in_volume": {
    "molmod.examples.001_molecules.d_size.mol": {
     "line number": [
      10
     ]
    },
    "print": {
     "line number": [
      9,
      10
     ]
    }
   }
  },
  "type": "module"
 },
 "molmod.examples.001_molecules.d_size.mol": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "molmod.examples.001_molecules.e_shape": {
  "data": {
   "symbols_in_volume": {
    "molmod.examples.001_molecules.e_shape.R": {
     "line number": [
      39,
      40,
      45
     ]
    },
    "molmod.examples.001_molecules.e_shape.centered": {
     "line number": [
      25,
      25
     ]
    },
    "molmod.examples.001_molecules.e_shape.covar": {
     "line number": [
      28
     ]
    },
    "molmod.examples.001_molecules.e_shape.evals": {
     "line number": [
      32
     ]
    },
    "molmod.examples.001_molecules.e_shape.mol": {
     "line number": [
      15,
      22,
      22,
      25
     ]
    },
    "molmod.examples.001_molecules.e_shape.shape": {
     "line number": [
      49
     ]
    },
    "numpy.dot": {
     "line number": [
      25
     ]
    },
    "numpy.linalg.eigvalsh": {
     "line number": [
      28
     ]
    },
    "numpy.sqrt": {
     "line number": [
      32
     ]
    },
    "print": {
     "line number": [
      33,
      34,
      35,
      49
     ]
    }
   }
  },
  "type": "module"
 },
 "molmod.examples.001_molecules.e_shape.R": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "molmod.examples.001_molecules.e_shape.center": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "molmod.examples.001_molecules.e_shape.centered": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "molmod.examples.001_molecules.e_shape.covar": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "molmod.examples.001_molecules.e_shape.dot": {
  "data": {
   "shadows": "numpy.dot"
  },
  "type": "import"
 },
 "molmod.examples.001_molecules.e_shape.eigvalsh": {
  "data": {
   "shadows": "numpy.linalg.eigvalsh"
  },
  "type": "import"
 },
 "molmod.examples.001_molecules.e_shape.evals": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "molmod.examples.001_molecules.e_shape.mol": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "molmod.examples.001_molecules.e_shape.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "molmod.examples.001_molecules.e_shape.shape": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "molmod.examples.001_molecules.e_shape.sqrt": {
  "data": {
   "shadows": "numpy.sqrt"
  },
  "type": "import"
 },
 "molmod.examples.002_graphs.a_graphs": {
  "data": {
   "symbols_in_volume": {
    "molmod.examples.002_graphs.a_graphs.mol": {
     "line number": [
      14,
      19,
      31,
      34,
      41,
      54,
      55,
      55,
      57,
      57
     ]
    },
    "print": {
     "line number": [
      30,
      31,
      32,
      34,
      42,
      56,
      58
     ]
    }
   }
  },
  "type": "module"
 },
 "molmod.examples.002_graphs.a_graphs.mol": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "molmod.examples.002_graphs.a_graphs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "molmod.examples.002_graphs.b_neighbors": {
  "data": {
   "symbols_in_volume": {
    "len": {
     "line number": [
      21,
      27,
      31
     ]
    },
    "molmod.examples.002_graphs.b_neighbors.h_indexes": {
     "line number": [
      31,
      34,
      34,
      34
     ]
    },
    "molmod.examples.002_graphs.b_neighbors.mol": {
     "line number": [
      10,
      15,
      20,
      21,
      22,
      23,
      23,
      26,
      27,
      29
     ]
    },
    "print": {
     "line number": [
      14,
      15,
      16,
      20,
      21,
      22,
      23,
      34
     ]
    }
   }
  },
  "type": "module"
 },
 "molmod.examples.002_graphs.b_neighbors.h_indexes": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "molmod.examples.002_graphs.b_neighbors.mol": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "molmod.examples.002_graphs.b_neighbors.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "molmod.examples.002_graphs.c_distances": {
  "data": {
   "symbols_in_volume": {
    "int": {
     "line number": [
      26
     ]
    },
    "molmod.examples.002_graphs.c_distances.mask": {
     "line number": [
      26
     ]
    },
    "molmod.examples.002_graphs.c_distances.mol": {
     "line number": [
      10,
      13,
      14,
      19,
      23,
      23
     ]
    },
    "print": {
     "line number": [
      13,
      14,
      19,
      25,
      26
     ]
    }
   }
  },
  "type": "module"
 },
 "molmod.examples.002_graphs.c_distances.mask": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "molmod.examples.002_graphs.c_distances.mol": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "molmod.examples.002_graphs.c_distances.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "molmod.examples.002_graphs.d_symmetries": {
  "data": {
   "symbols_in_volume": {
    "molmod.examples.002_graphs.d_symmetries.mol": {
     "line number": [
      10,
      16,
      22
     ]
    },
    "print": {
     "line number": [
      15,
      17,
      21,
      23
     ]
    }
   }
  },
  "type": "module"
 },
 "molmod.examples.002_graphs.d_symmetries.mol": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "molmod.examples.002_graphs.d_symmetries.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "molmod.examples.003_internal_coordinates.a_bond_length": {
  "data": {
   "symbols_in_volume": {
    "bond_length": {
     "line number": [
      11
     ]
    },
    "molmod.examples.003_internal_coordinates.a_bond_length.d": {
     "line number": [
      14
     ]
    },
    "molmod.examples.003_internal_coordinates.a_bond_length.mol": {
     "line number": [
      11
     ]
    },
    "print": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "module"
 },
 "molmod.examples.003_internal_coordinates.a_bond_length.d": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "molmod.examples.003_internal_coordinates.a_bond_length.mol": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "molmod.examples.003_internal_coordinates.a_bond_length.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "molmod.examples.003_internal_coordinates.b_bending_angles": {
  "data": {
   "symbols_in_volume": {
    "bend_angle": {
     "line number": [
      30
     ]
    },
    "enumerate": {
     "line number": [
      20
     ]
    },
    "list": {
     "line number": [
      17
     ]
    },
    "molmod.examples.003_internal_coordinates.b_bending_angles.angle": {
     "line number": [
      33
     ]
    },
    "molmod.examples.003_internal_coordinates.b_bending_angles.angles": {
     "line number": [
      24,
      28
     ]
    },
    "molmod.examples.003_internal_coordinates.b_bending_angles.mol": {
     "line number": [
      9,
      14,
      17,
      30,
      33,
      33,
      33
     ]
    },
    "molmod.examples.003_internal_coordinates.b_bending_angles.n": {
     "line number": [
      20,
      22
     ]
    },
    "print": {
     "line number": [
      27,
      32
     ]
    },
    "range": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "module"
 },
 "molmod.examples.003_internal_coordinates.b_bending_angles.angle": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "molmod.examples.003_internal_coordinates.b_bending_angles.angles": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "molmod.examples.003_internal_coordinates.b_bending_angles.mol": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "molmod.examples.003_internal_coordinates.b_bending_angles.n": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "molmod.examples.003_internal_coordinates.b_bending_angles.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "molmod.examples.003_internal_coordinates.c_ff_hessian": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      149
     ]
    },
    "molmod.examples.003_internal_coordinates.c_ff_hessian.ff": {
     "line number": [
      153
     ]
    },
    "molmod.examples.003_internal_coordinates.c_ff_hessian.hessian": {
     "line number": [
      156
     ]
    },
    "molmod.examples.003_internal_coordinates.c_ff_hessian.propane": {
     "line number": [
      151,
      152,
      153
     ]
    },
    "molmod.examples.003_internal_coordinates.c_ff_hessian.setup_hydrocarbon_ff": {
     "line number": [
      152
     ]
    },
    "molmod.examples.003_internal_coordinates.c_ff_hessian.unit": {
     "line number": [
      157
     ]
    },
    "print": {
     "line number": [
      154,
      157
     ]
    }
   }
  },
  "type": "module"
 },
 "molmod.examples.003_internal_coordinates.c_ff_hessian.BendAngleTerm": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "molmod.examples.003_internal_coordinates.c_ff_hessian.HarmonicEnergyTerm": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.examples.003_internal_coordinates.c_ff_hessian.BendAngleTerm.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "molmod.examples.003_internal_coordinates.c_ff_hessian.HarmonicEnergyTerm": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.examples.003_internal_coordinates.c_ff_hessian.BondStretchTerm": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "molmod.examples.003_internal_coordinates.c_ff_hessian.HarmonicEnergyTerm": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.examples.003_internal_coordinates.c_ff_hessian.BondStretchTerm.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "molmod.examples.003_internal_coordinates.c_ff_hessian.HarmonicEnergyTerm": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.examples.003_internal_coordinates.c_ff_hessian.ForceField": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "object": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.examples.003_internal_coordinates.c_ff_hessian.ForceField.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "print": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.examples.003_internal_coordinates.c_ff_hessian.ForceField.hessian": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "float": {
     "line number": [
      99
     ]
    },
    "molmod.examples.003_internal_coordinates.c_ff_hessian.numpy": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.examples.003_internal_coordinates.c_ff_hessian.HarmonicEnergyTerm": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "object": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.examples.003_internal_coordinates.c_ff_hessian.HarmonicEnergyTerm.__init__": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "molmod.examples.003_internal_coordinates.c_ff_hessian.HarmonicEnergyTerm.add_to_hessian": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      38,
      41
     ]
    },
    "list": {
     "line number": [
      36
     ]
    },
    "molmod.examples.003_internal_coordinates.c_ff_hessian.numpy": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.examples.003_internal_coordinates.c_ff_hessian.ff": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "molmod.examples.003_internal_coordinates.c_ff_hessian.hessian": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "molmod.examples.003_internal_coordinates.c_ff_hessian.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.examples.003_internal_coordinates.c_ff_hessian.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "molmod.examples.003_internal_coordinates.c_ff_hessian.propane": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "molmod.examples.003_internal_coordinates.c_ff_hessian.setup_hydrocarbon_ff": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      138
     ]
    },
    "list": {
     "line number": [
      115,
      125,
      137
     ]
    },
    "molmod.examples.003_internal_coordinates.c_ff_hessian.BendAngleTerm": {
     "line number": [
      141
     ]
    },
    "molmod.examples.003_internal_coordinates.c_ff_hessian.BondStretchTerm": {
     "line number": [
      134
     ]
    },
    "molmod.examples.003_internal_coordinates.c_ff_hessian.ForceField": {
     "line number": [
      144
     ]
    },
    "range": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.examples.003_internal_coordinates.c_ff_hessian.unit": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "molmod.examples.003_internal_coordinates.d_dft_hessian": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      117
     ]
    },
    "molmod.examples.003_internal_coordinates.d_dft_hessian.H": {
     "line number": [
      135
     ]
    },
    "molmod.examples.003_internal_coordinates.d_dft_hessian.J": {
     "line number": [
      131
     ]
    },
    "molmod.examples.003_internal_coordinates.d_dft_hessian.Jinv": {
     "line number": [
      135,
      135
     ]
    },
    "molmod.examples.003_internal_coordinates.d_dft_hessian.K": {
     "line number": [
      139
     ]
    },
    "molmod.examples.003_internal_coordinates.d_dft_hessian.compute_jacobian": {
     "line number": [
      128
     ]
    },
    "molmod.examples.003_internal_coordinates.d_dft_hessian.fchk": {
     "line number": [
      124,
      126,
      128,
      133
     ]
    },
    "molmod.examples.003_internal_coordinates.d_dft_hessian.ics": {
     "line number": [
      128
     ]
    },
    "molmod.examples.003_internal_coordinates.d_dft_hessian.numpy": {
     "line number": [
      131,
      135,
      135
     ]
    },
    "molmod.examples.003_internal_coordinates.d_dft_hessian.setup_ics": {
     "line number": [
      126
     ]
    },
    "molmod.examples.003_internal_coordinates.d_dft_hessian.unit": {
     "line number": [
      140
     ]
    },
    "molmod.io.FCHKFile": {
     "line number": [
      122
     ]
    },
    "print": {
     "line number": [
      137,
      140
     ]
    }
   }
  },
  "type": "module"
 },
 "molmod.examples.003_internal_coordinates.d_dft_hessian.BendingAngle": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "molmod.examples.003_internal_coordinates.d_dft_hessian.InternalCoordinate": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.examples.003_internal_coordinates.d_dft_hessian.BendingAngle.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "molmod.examples.003_internal_coordinates.d_dft_hessian.InternalCoordinate": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.examples.003_internal_coordinates.d_dft_hessian.BondLength": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "molmod.examples.003_internal_coordinates.d_dft_hessian.InternalCoordinate": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.examples.003_internal_coordinates.d_dft_hessian.BondLength.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "molmod.examples.003_internal_coordinates.d_dft_hessian.InternalCoordinate": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.examples.003_internal_coordinates.d_dft_hessian.DihedralAngle": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "molmod.examples.003_internal_coordinates.d_dft_hessian.InternalCoordinate": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.examples.003_internal_coordinates.d_dft_hessian.DihedralAngle.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "molmod.examples.003_internal_coordinates.d_dft_hessian.InternalCoordinate": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.examples.003_internal_coordinates.d_dft_hessian.FCHKFile": {
  "data": {
   "shadows": "molmod.io.FCHKFile"
  },
  "type": "import"
 },
 "molmod.examples.003_internal_coordinates.d_dft_hessian.H": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "molmod.examples.003_internal_coordinates.d_dft_hessian.InternalCoordinate": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "object": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.examples.003_internal_coordinates.d_dft_hessian.InternalCoordinate.__init__": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "molmod.examples.003_internal_coordinates.d_dft_hessian.InternalCoordinate.fill_jacobian_column": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      42
     ]
    },
    "list": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.examples.003_internal_coordinates.d_dft_hessian.J": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "molmod.examples.003_internal_coordinates.d_dft_hessian.Jinv": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "molmod.examples.003_internal_coordinates.d_dft_hessian.K": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "molmod.examples.003_internal_coordinates.d_dft_hessian.compute_jacobian": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      109
     ]
    },
    "float": {
     "line number": [
      108
     ]
    },
    "len": {
     "line number": [
      108
     ]
    },
    "molmod.examples.003_internal_coordinates.d_dft_hessian.numpy": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.examples.003_internal_coordinates.d_dft_hessian.fchk": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "molmod.examples.003_internal_coordinates.d_dft_hessian.ics": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "molmod.examples.003_internal_coordinates.d_dft_hessian.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.examples.003_internal_coordinates.d_dft_hessian.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "molmod.examples.003_internal_coordinates.d_dft_hessian.setup_ics": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      78
     ]
    },
    "list": {
     "line number": [
      77
     ]
    },
    "molmod.examples.003_internal_coordinates.d_dft_hessian.BendingAngle": {
     "line number": [
      80
     ]
    },
    "molmod.examples.003_internal_coordinates.d_dft_hessian.BondLength": {
     "line number": [
      74
     ]
    },
    "molmod.examples.003_internal_coordinates.d_dft_hessian.DihedralAngle": {
     "line number": [
      91
     ]
    },
    "range": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.examples.003_internal_coordinates.d_dft_hessian.unit": {
  "data": {
   "lineno": 138
  },
  "type": "constant"
 },
 "molmod.examples.004_patterns.a_propane_types": {
  "data": {
   "symbols_in_volume": {
    "CritAnd": {
     "line number": [
      14,
      15,
      16,
      17
     ]
    },
    "HasAtomNumber": {
     "line number": [
      12,
      13
     ]
    },
    "HasNeighborNumbers": {
     "line number": [
      14,
      15
     ]
    },
    "HasNeighbors": {
     "line number": [
      16,
      17
     ]
    },
    "TypeError": {
     "line number": [
      38,
      41
     ]
    },
    "atom_type": {
     "line number": [
      31
     ]
    },
    "molmod.examples.004_patterns.a_propane_types.atom_types": {
     "line number": [
      30
     ]
    },
    "molmod.examples.004_patterns.a_propane_types.detected": {
     "line number": [
      46,
      51
     ]
    },
    "molmod.examples.004_patterns.a_propane_types.is_cach2": {
     "line number": [
      17,
      20
     ]
    },
    "molmod.examples.004_patterns.a_propane_types.is_cach3": {
     "line number": [
      16,
      19
     ]
    },
    "molmod.examples.004_patterns.a_propane_types.is_carbon": {
     "line number": [
      14,
      15
     ]
    },
    "molmod.examples.004_patterns.a_propane_types.is_hach2": {
     "line number": [
      22
     ]
    },
    "molmod.examples.004_patterns.a_propane_types.is_hach3": {
     "line number": [
      21
     ]
    },
    "molmod.examples.004_patterns.a_propane_types.is_hydrogen": {
     "line number": [
      16,
      17
     ]
    },
    "molmod.examples.004_patterns.a_propane_types.l": {
     "line number": [
      48
     ]
    },
    "molmod.examples.004_patterns.a_propane_types.match_label": {
     "line number": [
      33,
      38,
      39,
      46
     ]
    },
    "molmod.examples.004_patterns.a_propane_types.mol": {
     "line number": [
      9,
      27,
      31
     ]
    },
    "print": {
     "line number": [
      52
     ]
    },
    "range": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "module"
 },
 "molmod.examples.004_patterns.a_propane_types.atom_types": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "molmod.examples.004_patterns.a_propane_types.detected": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "molmod.examples.004_patterns.a_propane_types.is_cach2": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "molmod.examples.004_patterns.a_propane_types.is_cach3": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "molmod.examples.004_patterns.a_propane_types.is_carbon": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "molmod.examples.004_patterns.a_propane_types.is_hach2": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "molmod.examples.004_patterns.a_propane_types.is_hach3": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "molmod.examples.004_patterns.a_propane_types.is_hydrogen": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "molmod.examples.004_patterns.a_propane_types.l": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "molmod.examples.004_patterns.a_propane_types.match_label": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "molmod.examples.004_patterns.a_propane_types.mol": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "molmod.examples.004_patterns.a_propane_types.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "molmod.examples.004_patterns.b_dopamine_types": {
  "data": {
   "symbols_in_volume": {
    "CritAnd": {
     "line number": [
      13,
      14,
      15
     ]
    },
    "HasAtomNumber": {
     "line number": [
      13,
      14,
      15
     ]
    },
    "HasNeighborNumbers": {
     "line number": [
      15
     ]
    },
    "HasNumNeighbors": {
     "line number": [
      13,
      14
     ]
    },
    "TypeError": {
     "line number": [
      31
     ]
    },
    "atom_type": {
     "line number": [
      24
     ]
    },
    "molmod.examples.004_patterns.b_dopamine_types.atom_types": {
     "line number": [
      23
     ]
    },
    "molmod.examples.004_patterns.b_dopamine_types.detected": {
     "line number": [
      36,
      41
     ]
    },
    "molmod.examples.004_patterns.b_dopamine_types.l": {
     "line number": [
      38
     ]
    },
    "molmod.examples.004_patterns.b_dopamine_types.match_label": {
     "line number": [
      26,
      31,
      36
     ]
    },
    "molmod.examples.004_patterns.b_dopamine_types.mol": {
     "line number": [
      9,
      20,
      24
     ]
    },
    "print": {
     "line number": [
      42
     ]
    },
    "range": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "module"
 },
 "molmod.examples.004_patterns.b_dopamine_types.atom_types": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "molmod.examples.004_patterns.b_dopamine_types.detected": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "molmod.examples.004_patterns.b_dopamine_types.l": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "molmod.examples.004_patterns.b_dopamine_types.match_label": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "molmod.examples.004_patterns.b_dopamine_types.mol": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "molmod.examples.004_patterns.b_dopamine_types.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "molmod.io": {
  "data": {},
  "type": "module"
 },
 "molmod.io.atrj": {
  "data": {},
  "type": "module"
 },
 "molmod.io.atrj.ATRJFrame": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "object": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.atrj.ATRJReader": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "molmod.io.common.SlicedReader": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.atrj.ATRJReader.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "molmod.io.atrj.SectionFile": {
     "line number": [
      100
     ]
    },
    "molmod.io.common.SlicedReader.__init__": {
     "line number": [
      99
     ]
    },
    "slice": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.atrj.ATRJReader._read_frame": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      120
     ]
    },
    "float": {
     "line number": [
      114,
      116,
      119,
      122,
      123,
      124
     ]
    },
    "int": {
     "line number": [
      115
     ]
    },
    "molmod.io.atrj.ATRJFrame": {
     "line number": [
      110
     ]
    },
    "molmod.units.angstrom": {
     "line number": [
      125
     ]
    },
    "molmod.units.kcalmol": {
     "line number": [
      116
     ]
    },
    "molmod.units.picosecond": {
     "line number": [
      114
     ]
    },
    "numpy.zeros": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.atrj.ATRJReader._read_header": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "int": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.atrj.ATRJReader._skip_frame": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "molmod.io.atrj.SectionFile": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "object": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.atrj.SectionFile.__init__": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "molmod.io.atrj.SectionFile._get_current_label": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "StopIteration": {
     "line number": [
      48
     ]
    },
    "len": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.atrj.SectionFile._read_section": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "len": {
     "line number": [
      61,
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.atrj.SectionFile._skip_section": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "len": {
     "line number": [
      54,
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.atrj.SectionFile.get_next": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "molmod.io.atrj.SlicedReader": {
  "data": {
   "shadows": "molmod.io.common.SlicedReader"
  },
  "type": "import"
 },
 "molmod.io.atrj.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "molmod.io.atrj.angstrom": {
  "data": {
   "shadows": "molmod.units.angstrom"
  },
  "type": "import"
 },
 "molmod.io.atrj.kcalmol": {
  "data": {
   "shadows": "molmod.units.kcalmol"
  },
  "type": "import"
 },
 "molmod.io.atrj.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.io.atrj.picosecond": {
  "data": {
   "shadows": "molmod.units.picosecond"
  },
  "type": "import"
 },
 "molmod.io.chk": {
  "data": {},
  "type": "module"
 },
 "molmod.io.chk.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "molmod.io.chk.dump_chk": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      120,
      142,
      163,
      176
     ]
    },
    "ValueError": {
     "line number": [
      122,
      124,
      127,
      129,
      148,
      150
     ]
    },
    "bool": {
     "line number": [
      131
     ]
    },
    "float": {
     "line number": [
      135,
      159
     ]
    },
    "int": {
     "line number": [
      133
     ]
    },
    "isinstance": {
     "line number": [
      119,
      125,
      131,
      133,
      135,
      137,
      137,
      138,
      139,
      139
     ]
    },
    "issubclass": {
     "line number": [
      144,
      153,
      156,
      159
     ]
    },
    "len": {
     "line number": [
      121,
      126,
      147,
      168,
      171
     ]
    },
    "list": {
     "line number": [
      137,
      139
     ]
    },
    "numpy.array": {
     "line number": [
      140
     ]
    },
    "numpy.bool_": {
     "line number": [
      156
     ]
    },
    "numpy.bytes_": {
     "line number": [
      144
     ]
    },
    "numpy.integer": {
     "line number": [
      133,
      153
     ]
    },
    "numpy.ndarray": {
     "line number": [
      137
     ]
    },
    "numpy.unicode": {
     "line number": [
      144,
      145
     ]
    },
    "open": {
     "line number": [
      117
     ]
    },
    "print": {
     "line number": [
      130,
      132,
      134,
      136,
      151,
      154,
      157,
      160,
      169,
      172,
      174
     ]
    },
    "sorted": {
     "line number": [
      118
     ]
    },
    "str": {
     "line number": [
      119,
      125,
      143,
      144
     ]
    },
    "tuple": {
     "line number": [
      138,
      139
     ]
    },
    "type": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.chk.load_chk": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      53,
      75,
      84,
      101
     ]
    },
    "bool": {
     "line number": [
      71,
      86
     ]
    },
    "callable": {
     "line number": [
      88
     ]
    },
    "dtype": {
     "line number": [
      89
     ]
    },
    "float": {
     "line number": [
      64,
      73
     ]
    },
    "int": {
     "line number": [
      60,
      69,
      76
     ]
    },
    "len": {
     "line number": [
      52,
      83
     ]
    },
    "numpy.dtype": {
     "line number": [
      67
     ]
    },
    "numpy.zeros": {
     "line number": [
      77
     ]
    },
    "open": {
     "line number": [
      46
     ]
    },
    "tuple": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.chk.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.io.chk.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "molmod.io.cml": {
  "data": {},
  "type": "module"
 },
 "molmod.io.cml.CMLMoleculeLoader": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "frozenset": {
     "line number": [
      58,
      59,
      60
     ]
    },
    "xml.sax.handler.ContentHandler": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.cml.CMLMoleculeLoader.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "xml.sax.handler.ContentHandler.__init__": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cml.CMLMoleculeLoader._get_extra": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "str": {
     "line number": [
      67,
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cml.CMLMoleculeLoader.endElement": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      123
     ]
    },
    "frozenset": {
     "line number": [
      132
     ]
    },
    "len": {
     "line number": [
      116,
      133,
      138
     ]
    },
    "molmod.molecular_graphs.MolecularGraph": {
     "line number": [
      141
     ]
    },
    "molmod.molecules.Molecule": {
     "line number": [
      118
     ]
    },
    "molmod.units.angstrom": {
     "line number": [
      117
     ]
    },
    "numpy.array": {
     "line number": [
      117
     ]
    },
    "set": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cml.CMLMoleculeLoader.startElement": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      93
     ]
    },
    "float": {
     "line number": [
      90,
      91,
      92
     ]
    },
    "len": {
     "line number": [
      103,
      104
     ]
    },
    "molmod.periodic.periodic": {
     "line number": [
      95
     ]
    },
    "str": {
     "line number": [
      74,
      95,
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cml.ContentHandler": {
  "data": {
   "shadows": "xml.sax.handler.ContentHandler"
  },
  "type": "import"
 },
 "molmod.io.cml.MolecularGraph": {
  "data": {
   "shadows": "molmod.molecular_graphs.MolecularGraph"
  },
  "type": "import"
 },
 "molmod.io.cml.Molecule": {
  "data": {
   "shadows": "molmod.molecules.Molecule"
  },
  "type": "import"
 },
 "molmod.io.cml.__all__": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "molmod.io.cml._dump_cml_molecule": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      178
     ]
    },
    "getattr": {
     "line number": [
      173,
      177,
      187
     ]
    },
    "molmod.periodic.periodic.symbol": {
     "line number": [
      182
     ]
    },
    "molmod.units.angstrom": {
     "line number": [
      178
     ]
    },
    "zip": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cml.angstrom": {
  "data": {
   "shadows": "molmod.units.angstrom"
  },
  "type": "import"
 },
 "molmod.io.cml.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.io.cml.dump_cml": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      205
     ]
    },
    "molmod.io.cml._dump_cml_molecule": {
     "line number": [
      213
     ]
    },
    "open": {
     "line number": [
      206
     ]
    },
    "str": {
     "line number": [
      205
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cml.feature_namespaces": {
  "data": {
   "shadows": "xml.sax.handler.feature_namespaces"
  },
  "type": "import"
 },
 "molmod.io.cml.load_cml": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "molmod.io.cml.CMLMoleculeLoader": {
     "line number": [
      160
     ]
    },
    "xml.sax.handler.feature_namespaces": {
     "line number": [
      159
     ]
    },
    "xml.sax.make_parser": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cml.make_parser": {
  "data": {
   "shadows": "xml.sax.make_parser"
  },
  "type": "import"
 },
 "molmod.io.cml.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.io.cml.periodic": {
  "data": {
   "shadows": "molmod.periodic.periodic"
  },
  "type": "import"
 },
 "molmod.io.cml.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.io.common": {
  "data": {
   "symbols_in_volume": {
    "NameError": {
     "line number": [
      31
     ]
    },
    "str": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "module"
 },
 "molmod.io.common.FileFormatError": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.common.SlicedReader": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "builtins.object": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.common.SlicedReader.__del__": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "molmod.io.common.SlicedReader.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      80
     ]
    },
    "molmod.io.common.basestring": {
     "line number": [
      80
     ]
    },
    "open": {
     "line number": [
      82
     ]
    },
    "slice": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.common.SlicedReader.__iter__": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "molmod.io.common.SlicedReader.__next__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "molmod.io.common.slice_match": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.common.SlicedReader._read_frame": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.common.SlicedReader._skip_frame": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.common.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "molmod.io.common.basestring": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "molmod.io.common.object": {
  "data": {
   "shadows": "builtins.object"
  },
  "type": "import"
 },
 "molmod.io.common.slice_match": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "StopIteration": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cp2k": {
  "data": {},
  "type": "module"
 },
 "molmod.io.cp2k.CP2KInputFile": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": {
    "molmod.io.cp2k.CP2KSection": {
     "line number": [
      319
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.cp2k.CP2KInputFile.__init__": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": {
    "molmod.io.cp2k.CP2KSection": {
     "line number": [
      345
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cp2k.CP2KInputFile.dump": {
  "data": {
   "lineno": 352
  },
  "type": "function"
 },
 "molmod.io.cp2k.CP2KInputFile.read_from_file": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": {
    "EOFError": {
     "line number": [
      339
     ]
    },
    "molmod.io.cp2k.CP2KInputFile": {
     "line number": [
      335
     ]
    },
    "open": {
     "line number": [
      334
     ]
    },
    "staticmethod": {
     "line number": [
      322
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cp2k.CP2KInputFile.write_to_file": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": {
    "open": {
     "line number": [
      349
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cp2k.CP2KKeyword": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": {
    "object": {
     "line number": [
      250
     ]
    },
    "property": {
     "line number": [
      314,
      315,
      316
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.cp2k.CP2KKeyword.__eq__": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      267
     ]
    },
    "molmod.io.cp2k.CP2KKeyword": {
     "line number": [
      267
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cp2k.CP2KKeyword.__init__": {
  "data": {
   "lineno": 253
  },
  "type": "function"
 },
 "molmod.io.cp2k.CP2KKeyword.dump": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": {
    "print": {
     "line number": [
      276,
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cp2k.CP2KKeyword.get_name": {
  "data": {
   "lineno": 302
  },
  "type": "function"
 },
 "molmod.io.cp2k.CP2KKeyword.get_unit": {
  "data": {
   "lineno": 310
  },
  "type": "function"
 },
 "molmod.io.cp2k.CP2KKeyword.get_value": {
  "data": {
   "lineno": 306
  },
  "type": "function"
 },
 "molmod.io.cp2k.CP2KKeyword.load": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      287
     ]
    },
    "float": {
     "line number": [
      284
     ]
    },
    "len": {
     "line number": [
      289
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cp2k.CP2KKeyword.set_value": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      299
     ]
    },
    "isinstance": {
     "line number": [
      298
     ]
    },
    "str": {
     "line number": [
      298
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cp2k.CP2KSection": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "object": {
     "line number": [
      34
     ]
    },
    "property": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.cp2k.CP2KSection.__delitem__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      169
     ]
    },
    "int": {
     "line number": [
      165
     ]
    },
    "isinstance": {
     "line number": [
      160,
      165,
      165,
      165
     ]
    },
    "len": {
     "line number": [
      165
     ]
    },
    "str": {
     "line number": [
      160,
      165
     ]
    },
    "tuple": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cp2k.CP2KSection.__eq__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      86
     ]
    },
    "len": {
     "line number": [
      88,
      88,
      96,
      96
     ]
    },
    "molmod.io.cp2k.CP2KSection": {
     "line number": [
      86
     ]
    },
    "zip": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cp2k.CP2KSection.__getitem__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      116
     ]
    },
    "int": {
     "line number": [
      113
     ]
    },
    "isinstance": {
     "line number": [
      107,
      113,
      113,
      113
     ]
    },
    "len": {
     "line number": [
      109,
      113
     ]
    },
    "str": {
     "line number": [
      107,
      113
     ]
    },
    "tuple": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cp2k.CP2KSection.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      48,
      52,
      54
     ]
    },
    "isinstance": {
     "line number": [
      47,
      51,
      51,
      53
     ]
    },
    "molmod.io.cp2k.CP2KSection": {
     "line number": [
      51
     ]
    },
    "str": {
     "line number": [
      47,
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cp2k.CP2KSection.__iter__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cp2k.CP2KSection.__len__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "len": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cp2k.CP2KSection.__setitem__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      138,
      146,
      152
     ]
    },
    "TypeError": {
     "line number": [
      136,
      157
     ]
    },
    "delete_all": {
     "line number": [
      141,
      148
     ]
    },
    "int": {
     "line number": [
      150
     ]
    },
    "isinstance": {
     "line number": [
      132,
      133,
      135,
      135,
      144,
      144,
      150,
      150,
      150
     ]
    },
    "len": {
     "line number": [
      150
     ]
    },
    "list": {
     "line number": [
      133
     ]
    },
    "molmod.io.cp2k.CP2KSection": {
     "line number": [
      135,
      144
     ]
    },
    "str": {
     "line number": [
      132,
      150
     ]
    },
    "tuple": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cp2k.CP2KSection.__setitem__.delete_all": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      122
     ]
    },
    "len": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cp2k.CP2KSection._consistent": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      77
     ]
    },
    "len": {
     "line number": [
      65,
      65
     ]
    },
    "molmod.io.cp2k.CP2KSection": {
     "line number": [
      77
     ]
    },
    "molmod.io.cp2k.copy": {
     "line number": [
      68
     ]
    },
    "sum": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cp2k.CP2KSection.append": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      180
     ]
    },
    "isinstance": {
     "line number": [
      179,
      179
     ]
    },
    "molmod.io.cp2k.CP2KSection": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cp2k.CP2KSection.dump": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "print": {
     "line number": [
      200,
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cp2k.CP2KSection.dump_children": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "molmod.io.cp2k.CP2KSection.get_name": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "molmod.io.cp2k.CP2KSection.insert": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      188
     ]
    },
    "isinstance": {
     "line number": [
      187,
      187
     ]
    },
    "molmod.io.cp2k.CP2KSection": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cp2k.CP2KSection.load": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": {
    "EOFError": {
     "line number": [
      246
     ]
    },
    "molmod.io.common.FileFormatError": {
     "line number": [
      247
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cp2k.CP2KSection.load_children": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "molmod.io.common.FileFormatError": {
     "line number": [
      223
     ]
    },
    "molmod.io.cp2k.CP2KKeyword": {
     "line number": [
      230
     ]
    },
    "molmod.io.cp2k.CP2KSection": {
     "line number": [
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cp2k.CP2KSection.readline": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "EOFError": {
     "line number": [
      209
     ]
    },
    "len": {
     "line number": [
      208,
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cp2k.FileFormatError": {
  "data": {
   "shadows": "molmod.io.common.FileFormatError"
  },
  "type": "import"
 },
 "molmod.io.cp2k.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "molmod.io.cp2k.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "molmod.io.cp2k.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "molmod.io.cpmd": {
  "data": {},
  "type": "module"
 },
 "molmod.io.cpmd.CPMDTrajectoryReader": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "molmod.io.common.SlicedReader": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.cpmd.CPMDTrajectoryReader.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "molmod.io.common.SlicedReader.__init__": {
     "line number": [
      52
     ]
    },
    "slice": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cpmd.CPMDTrajectoryReader._read_frame": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      68
     ]
    },
    "float": {
     "line number": [
      66,
      67,
      71,
      72,
      73,
      74,
      75,
      76
     ]
    },
    "next": {
     "line number": [
      69
     ]
    },
    "numpy.zeros": {
     "line number": [
      66,
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cpmd.CPMDTrajectoryReader._skip_frame": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      81
     ]
    },
    "next": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cpmd.SlicedReader": {
  "data": {
   "shadows": "molmod.io.common.SlicedReader"
  },
  "type": "import"
 },
 "molmod.io.cpmd.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "molmod.io.cpmd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.io.cpmd.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.io.crystal": {
  "data": {},
  "type": "module"
 },
 "molmod.io.crystal.CrystalAPIOut": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "object": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.crystal.CrystalAPIOut.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "FileFormatError": {
     "line number": [
      63,
      75,
      94,
      143
     ]
    },
    "builtins.range": {
     "line number": [
      67,
      153
     ]
    },
    "enumerate": {
     "line number": [
      156
     ]
    },
    "float": {
     "line number": [
      69,
      89,
      89,
      89,
      115,
      117,
      119,
      119,
      121,
      147,
      157
     ]
    },
    "int": {
     "line number": [
      87
     ]
    },
    "len": {
     "line number": [
      112
     ]
    },
    "molmod.Molecule": {
     "line number": [
      90
     ]
    },
    "molmod.UnitCell": {
     "line number": [
      71
     ]
    },
    "numpy.array": {
     "line number": [
      70,
      90,
      90
     ]
    },
    "numpy.zeros": {
     "line number": [
      147
     ]
    },
    "open": {
     "line number": [
      59
     ]
    },
    "skip_to": {
     "line number": [
      61,
      73,
      92,
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.crystal.CrystalAPIOut.__init__.skip_to": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "len": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.crystal.Molecule": {
  "data": {
   "shadows": "molmod.Molecule"
  },
  "type": "import"
 },
 "molmod.io.crystal.UnitCell": {
  "data": {
   "shadows": "molmod.UnitCell"
  },
  "type": "import"
 },
 "molmod.io.crystal.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "molmod.io.crystal.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "molmod.io.crystal.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.io.crystal.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.io.cube": {
  "data": {},
  "type": "module"
 },
 "molmod.io.cube.Cube": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "builtins.object": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.cube.Cube.__init__": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "float": {
     "line number": [
      222
     ]
    },
    "numpy.array": {
     "line number": [
      216,
      217,
      218,
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cube.Cube.copy": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "molmod.io.cube.Cube.from_file": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      166
     ]
    },
    "cls": {
     "line number": [
      190
     ]
    },
    "float": {
     "line number": [
      179,
      188
     ]
    },
    "len": {
     "line number": [
      184
     ]
    },
    "molmod.io.cube.read_cube_header": {
     "line number": [
      178
     ]
    },
    "numpy.zeros": {
     "line number": [
      179
     ]
    },
    "open": {
     "line number": [
      176
     ]
    },
    "tuple": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cube.Cube.get_points": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": {
    "molmod.io.cube.get_cube_points": {
     "line number": [
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cube.Cube.write_to_file": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      243,
      247,
      248,
      250
     ]
    },
    "open": {
     "line number": [
      228
     ]
    },
    "write_atom_line": {
     "line number": [
      244
     ]
    },
    "write_grid_line": {
     "line number": [
      235,
      236,
      237,
      238
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cube.Cube.write_to_file.write_atom_line": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "molmod.io.cube.Cube.write_to_file.write_grid_line": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "molmod.io.cube.CubeReader": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "builtins.object": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.cube.CubeReader.__del__": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "molmod.io.cube.CubeReader.__init__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "molmod.io.cube.read_cube_header": {
     "line number": [
      121
     ]
    },
    "open": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cube.CubeReader.__iter__": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "molmod.io.cube.CubeReader.__next__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "StopIteration": {
     "line number": [
      141,
      145
     ]
    },
    "float": {
     "line number": [
      146
     ]
    },
    "len": {
     "line number": [
      142,
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cube.Molecule": {
  "data": {
   "shadows": "molmod.molecules.Molecule"
  },
  "type": "import"
 },
 "molmod.io.cube.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "molmod.io.cube.get_cube_points": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "float": {
     "line number": [
      51,
      53,
      54,
      55
     ]
    },
    "numpy.arange": {
     "line number": [
      53,
      54,
      55
     ]
    },
    "numpy.outer": {
     "line number": [
      53,
      54,
      55
     ]
    },
    "numpy.zeros": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cube.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.io.cube.object": {
  "data": {
   "shadows": "builtins.object"
  },
  "type": "import"
 },
 "molmod.io.cube.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "molmod.io.cube.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.io.cube.read_cube_header": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      94
     ]
    },
    "float": {
     "line number": [
      92,
      93
     ]
    },
    "int": {
     "line number": [
      79,
      91
     ]
    },
    "molmod.molecules.Molecule": {
     "line number": [
      97
     ]
    },
    "numpy.array": {
     "line number": [
      79,
      80
     ]
    },
    "numpy.zeros": {
     "line number": [
      91,
      92,
      93
     ]
    },
    "read_coordinate_line": {
     "line number": [
      95
     ]
    },
    "read_grid_line": {
     "line number": [
      74,
      76,
      77,
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cube.read_cube_header.read_coordinate_line": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "float": {
     "line number": [
      86,
      87,
      87,
      87,
      87
     ]
    },
    "int": {
     "line number": [
      86
     ]
    },
    "numpy.array": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.cube.read_cube_header.read_grid_line": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "float": {
     "line number": [
      69,
      69,
      69,
      69
     ]
    },
    "int": {
     "line number": [
      68
     ]
    },
    "numpy.array": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.dlpoly": {
  "data": {},
  "type": "module"
 },
 "molmod.io.dlpoly.DLPolyHistoryReader": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "molmod.io.common.SlicedReader": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.dlpoly.DLPolyHistoryReader.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "StopIteration": {
     "line number": [
      86
     ]
    },
    "ValueError": {
     "line number": [
      88
     ]
    },
    "int": {
     "line number": [
      82
     ]
    },
    "len": {
     "line number": [
      83
     ]
    },
    "molmod.io.common.FileFormatError": {
     "line number": [
      84,
      87,
      89
     ]
    },
    "molmod.io.common.SlicedReader.__init__": {
     "line number": [
      71
     ]
    },
    "molmod.units.amu": {
     "line number": [
      49,
      50
     ]
    },
    "molmod.units.angstrom": {
     "line number": [
      48,
      49,
      49
     ]
    },
    "molmod.units.picosecond": {
     "line number": [
      49,
      49,
      50
     ]
    },
    "next": {
     "line number": [
      81,
      82
     ]
    },
    "slice": {
     "line number": [
      48
     ]
    },
    "tuple": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.dlpoly.DLPolyHistoryReader._detect_restart": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      107
     ]
    },
    "float": {
     "line number": [
      106
     ]
    },
    "int": {
     "line number": [
      109,
      109,
      109
     ]
    },
    "len": {
     "line number": [
      98
     ]
    },
    "next": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.dlpoly.DLPolyHistoryReader._read_frame": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      141,
      174
     ]
    },
    "builtins.range": {
     "line number": [
      147,
      165
     ]
    },
    "float": {
     "line number": [
      139,
      144,
      153,
      155,
      157,
      160,
      163,
      172,
      173
     ]
    },
    "int": {
     "line number": [
      131,
      133,
      135,
      137
     ]
    },
    "len": {
     "line number": [
      126,
      168
     ]
    },
    "molmod.io.common.FileFormatError": {
     "line number": [
      127,
      129,
      134,
      136,
      138,
      142,
      169,
      175
     ]
    },
    "next": {
     "line number": [
      125,
      167
     ]
    },
    "numpy.zeros": {
     "line number": [
      144,
      153,
      155,
      157,
      160,
      163
     ]
    },
    "read_three": {
     "line number": [
      148,
      178,
      181,
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.dlpoly.DLPolyHistoryReader._read_frame.read_three": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      120
     ]
    },
    "float": {
     "line number": [
      119,
      119,
      119
     ]
    },
    "molmod.io.common.FileFormatError": {
     "line number": [
      121
     ]
    },
    "next": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.dlpoly.DLPolyHistoryReader._skip_frame": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      194
     ]
    },
    "next": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.dlpoly.DLPolyOutputReader": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "molmod.io.common.SlicedReader": {
     "line number": [
      198
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.dlpoly.DLPolyOutputReader.__init__": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "StopIteration": {
     "line number": [
      248
     ]
    },
    "ValueError": {
     "line number": [
      250
     ]
    },
    "int": {
     "line number": [
      246
     ]
    },
    "molmod.io.common.FileFormatError": {
     "line number": [
      249,
      251
     ]
    },
    "molmod.io.common.SlicedReader.__init__": {
     "line number": [
      231
     ]
    },
    "molmod.units.amu": {
     "line number": [
      215
     ]
    },
    "molmod.units.angstrom": {
     "line number": [
      214,
      215
     ]
    },
    "molmod.units.atm": {
     "line number": [
      238
     ]
    },
    "molmod.units.deg": {
     "line number": [
      214
     ]
    },
    "molmod.units.picosecond": {
     "line number": [
      214,
      215
     ]
    },
    "next": {
     "line number": [
      244
     ]
    },
    "slice": {
     "line number": [
      213
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.dlpoly.DLPolyOutputReader._read_frame": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      292
     ]
    },
    "builtins.range": {
     "line number": [
      282,
      286,
      290,
      296
     ]
    },
    "float": {
     "line number": [
      283,
      285,
      287,
      289,
      291
     ]
    },
    "molmod.io.common.FileFormatError": {
     "line number": [
      293
     ]
    },
    "next": {
     "line number": [
      284,
      288
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.dlpoly.DLPolyOutputReader._skip_frame": {
  "data": {
   "lineno": 302
  },
  "type": "function"
 },
 "molmod.io.dlpoly.DLPolyOutputReader.goto_next_frame": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      262
     ]
    },
    "int": {
     "line number": [
      260
     ]
    },
    "len": {
     "line number": [
      258,
      264
     ]
    },
    "next": {
     "line number": [
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.dlpoly.FileFormatError": {
  "data": {
   "shadows": "molmod.io.common.FileFormatError"
  },
  "type": "import"
 },
 "molmod.io.dlpoly.SlicedReader": {
  "data": {
   "shadows": "molmod.io.common.SlicedReader"
  },
  "type": "import"
 },
 "molmod.io.dlpoly.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "molmod.io.dlpoly.amu": {
  "data": {
   "shadows": "molmod.units.amu"
  },
  "type": "import"
 },
 "molmod.io.dlpoly.angstrom": {
  "data": {
   "shadows": "molmod.units.angstrom"
  },
  "type": "import"
 },
 "molmod.io.dlpoly.atm": {
  "data": {
   "shadows": "molmod.units.atm"
  },
  "type": "import"
 },
 "molmod.io.dlpoly.deg": {
  "data": {
   "shadows": "molmod.units.deg"
  },
  "type": "import"
 },
 "molmod.io.dlpoly.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.io.dlpoly.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.io.dlpoly.picosecond": {
  "data": {
   "shadows": "molmod.units.picosecond"
  },
  "type": "import"
 },
 "molmod.io.dlpoly.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.io.fchk": {
  "data": {},
  "type": "module"
 },
 "molmod.io.fchk.FCHKFile": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "object": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.fchk.FCHKFile.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "molmod.io.common.FileFormatError": {
     "line number": [
      66
     ]
    },
    "set": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.fchk.FCHKFile._analyze": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "molmod.molecules.Molecule": {
     "line number": [
      161
     ]
    },
    "numpy.reshape": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.fchk.FCHKFile._read": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "len": {
     "line number": [
      148,
      150
     ]
    },
    "molmod.io.common.FileFormatError": {
     "line number": [
      153
     ]
    },
    "open": {
     "line number": [
      145
     ]
    },
    "read_field": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.fchk.FCHKFile._read.read_field": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "OverflowError": {
     "line number": [
      129
     ]
    },
    "ValueError": {
     "line number": [
      113,
      129,
      136
     ]
    },
    "datatype": {
     "line number": [
      112,
      119,
      128
     ]
    },
    "float": {
     "line number": [
      107
     ]
    },
    "int": {
     "line number": [
      104,
      118
     ]
    },
    "len": {
     "line number": [
      92,
      100,
      110,
      115
     ]
    },
    "molmod.io.common.FileFormatError": {
     "line number": [
      117,
      125,
      139
     ]
    },
    "numpy.nan": {
     "line number": [
      108
     ]
    },
    "numpy.zeros": {
     "line number": [
      119
     ]
    },
    "print": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.fchk.FCHKFile.get_hessian": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      222
     ]
    },
    "float": {
     "line number": [
      220
     ]
    },
    "len": {
     "line number": [
      219
     ]
    },
    "numpy.zeros": {
     "line number": [
      220
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.fchk.FCHKFile.get_optimization_coordinates": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "len": {
     "line number": [
      185
     ]
    },
    "numpy.reshape": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.fchk.FCHKFile.get_optimization_energies": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "molmod.io.fchk.FCHKFile.get_optimization_gradients": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "len": {
     "line number": [
      204
     ]
    },
    "numpy.reshape": {
     "line number": [
      204
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.fchk.FCHKFile.get_optimization_lowest_index": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "molmod.io.fchk.FCHKFile.get_optimized_energy": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "molmod.io.fchk.FCHKFile.get_optimized_gradient": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": {
    "len": {
     "line number": [
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.fchk.FCHKFile.get_optimized_molecule": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "len": {
     "line number": [
      190
     ]
    },
    "molmod.molecules.Molecule": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.fchk.FileFormatError": {
  "data": {
   "shadows": "molmod.io.common.FileFormatError"
  },
  "type": "import"
 },
 "molmod.io.fchk.Molecule": {
  "data": {
   "shadows": "molmod.molecules.Molecule"
  },
  "type": "import"
 },
 "molmod.io.fchk.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "molmod.io.fchk.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.io.fchk.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "molmod.io.fchk.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.io.gamess": {
  "data": {},
  "type": "module"
 },
 "molmod.io.gamess.CoordinateParser": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "molmod.io.gamess.PunchParser": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.gamess.CoordinateParser.read": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      154
     ]
    },
    "float": {
     "line number": [
      152,
      156,
      157,
      158,
      159
     ]
    },
    "int": {
     "line number": [
      148,
      156
     ]
    },
    "len": {
     "line number": [
      144
     ]
    },
    "molmod.units.angstrom": {
     "line number": [
      157,
      158,
      159
     ]
    },
    "numpy.zeros": {
     "line number": [
      148,
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.gamess.CoordinateParser.test": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "molmod.io.gamess.EnergyGradParser": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "molmod.io.gamess.PunchParser": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.gamess.EnergyGradParser.read": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      178
     ]
    },
    "float": {
     "line number": [
      171,
      176,
      180,
      181,
      182
     ]
    },
    "len": {
     "line number": [
      172
     ]
    },
    "numpy.zeros": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.gamess.EnergyGradParser.test": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "molmod.io.gamess.FirstDataParser": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "molmod.io.gamess.PunchParser": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.gamess.FirstDataParser.__init__": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "molmod.io.gamess.FirstDataParser.read": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.gamess.FirstDataParser.test": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "molmod.io.gamess.HessianParser": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "molmod.io.gamess.PunchParser": {
     "line number": [
      200
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.gamess.HessianParser.read": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      220
     ]
    },
    "float": {
     "line number": [
      212,
      221
     ]
    },
    "len": {
     "line number": [
      211,
      220
     ]
    },
    "numpy.zeros": {
     "line number": [
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.gamess.HessianParser.test": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "molmod.io.gamess.MassParser": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": {
    "molmod.io.gamess.PunchParser": {
     "line number": [
      226
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.gamess.MassParser.read": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "float": {
     "line number": [
      236,
      241
     ]
    },
    "len": {
     "line number": [
      235
     ]
    },
    "molmod.units.amu": {
     "line number": [
      241
     ]
    },
    "numpy.zeros": {
     "line number": [
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.gamess.MassParser.test": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "molmod.io.gamess.PunchFile": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "object": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.gamess.PunchFile.__init__": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "molmod.io.gamess.PunchFile._read": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "molmod.io.gamess.CoordinateParser": {
     "line number": [
      59
     ]
    },
    "molmod.io.gamess.EnergyGradParser": {
     "line number": [
      59
     ]
    },
    "molmod.io.gamess.FirstDataParser": {
     "line number": [
      59
     ]
    },
    "molmod.io.gamess.HessianParser": {
     "line number": [
      60
     ]
    },
    "molmod.io.gamess.MassParser": {
     "line number": [
      60
     ]
    },
    "molmod.io.gamess.SkipApproxHessian": {
     "line number": [
      60
     ]
    },
    "open": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.gamess.PunchParser": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "object": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.gamess.PunchParser.read": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.gamess.PunchParser.test": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.gamess.SkipApproxHessian": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "molmod.io.gamess.PunchParser": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.gamess.SkipApproxHessian.read": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "molmod.io.gamess.SkipApproxHessian.test": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "molmod.io.gamess.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "molmod.io.gamess.amu": {
  "data": {
   "shadows": "molmod.units.amu"
  },
  "type": "import"
 },
 "molmod.io.gamess.angstrom": {
  "data": {
   "shadows": "molmod.units.angstrom"
  },
  "type": "import"
 },
 "molmod.io.gamess.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.io.gamess.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.io.gamess.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.io.gromacs": {
  "data": {},
  "type": "module"
 },
 "molmod.io.gromacs.GroReader": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "molmod.io.common.SlicedReader": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.gromacs.GroReader.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "len": {
     "line number": [
      58
     ]
    },
    "molmod.io.common.SlicedReader.__init__": {
     "line number": [
      55
     ]
    },
    "slice": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.gromacs.GroReader._get_line": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "StopIteration": {
     "line number": [
      65
     ]
    },
    "len": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.gromacs.GroReader._read_frame": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      82
     ]
    },
    "builtins.range": {
     "line number": [
      86
     ]
    },
    "float": {
     "line number": [
      75,
      88,
      89,
      90,
      91,
      92,
      93,
      100,
      101,
      102,
      104,
      105,
      106,
      107,
      108,
      109
     ]
    },
    "int": {
     "line number": [
      80
     ]
    },
    "len": {
     "line number": [
      99,
      103
     ]
    },
    "molmod.units.nanometer": {
     "line number": [
      94,
      95,
      110
     ]
    },
    "molmod.units.picosecond": {
     "line number": [
      75,
      95
     ]
    },
    "numpy.float32": {
     "line number": [
      84,
      85,
      97
     ]
    },
    "numpy.zeros": {
     "line number": [
      84,
      85,
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.gromacs.GroReader._skip_frame": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      118
     ]
    },
    "builtins.range": {
     "line number": [
      119
     ]
    },
    "int": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.gromacs.SlicedReader": {
  "data": {
   "shadows": "molmod.io.common.SlicedReader"
  },
  "type": "import"
 },
 "molmod.io.gromacs.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "molmod.io.gromacs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.io.gromacs.nanometer": {
  "data": {
   "shadows": "molmod.units.nanometer"
  },
  "type": "import"
 },
 "molmod.io.gromacs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.io.gromacs.picosecond": {
  "data": {
   "shadows": "molmod.units.picosecond"
  },
  "type": "import"
 },
 "molmod.io.gromacs.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.io.lammps": {
  "data": {},
  "type": "module"
 },
 "molmod.io.lammps.FileFormatError": {
  "data": {
   "shadows": "molmod.io.common.FileFormatError"
  },
  "type": "import"
 },
 "molmod.io.lammps.LAMMPSDumpReader": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "molmod.io.common.SlicedReader": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.lammps.LAMMPSDumpReader.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "StopIteration": {
     "line number": [
      67
     ]
    },
    "ValueError": {
     "line number": [
      65
     ]
    },
    "int": {
     "line number": [
      64
     ]
    },
    "molmod.io.common.FileFormatError": {
     "line number": [
      66,
      68
     ]
    },
    "molmod.io.common.SlicedReader.__init__": {
     "line number": [
      55
     ]
    },
    "next": {
     "line number": [
      59,
      63
     ]
    },
    "slice": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.lammps.LAMMPSDumpReader._read_frame": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      83,
      94
     ]
    },
    "builtins.range": {
     "line number": [
      100,
      107,
      108,
      111
     ]
    },
    "float": {
     "line number": [
      112
     ]
    },
    "int": {
     "line number": [
      82,
      93
     ]
    },
    "len": {
     "line number": [
      107,
      111
     ]
    },
    "list": {
     "line number": [
      107
     ]
    },
    "molmod.io.common.FileFormatError": {
     "line number": [
      79,
      84,
      90,
      95,
      97,
      106
     ]
    },
    "next": {
     "line number": [
      77,
      81,
      88,
      92,
      101,
      104,
      109
     ]
    },
    "numpy.array": {
     "line number": [
      113
     ]
    },
    "zip": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.lammps.LAMMPSDumpReader._skip_frame": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      122
     ]
    },
    "next": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.lammps.SlicedReader": {
  "data": {
   "shadows": "molmod.io.common.SlicedReader"
  },
  "type": "import"
 },
 "molmod.io.lammps.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "molmod.io.lammps.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.io.lammps.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.io.number_state": {
  "data": {},
  "type": "module"
 },
 "molmod.io.number_state.ArrayAttr": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "molmod.io.number_state.StateAttr": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.number_state.ArrayAttr.__init__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      101
     ]
    },
    "molmod.io.number_state.StateAttr": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.number_state.ArrayAttr.dump": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "int": {
     "line number": [
      127
     ]
    },
    "print": {
     "line number": [
      124,
      133,
      135,
      137
     ]
    },
    "str": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.number_state.ArrayAttr.get": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.number_state.ArrayAttr.get_kind": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "molmod.io.number_state.ArrayAttr.load": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "convert": {
     "line number": [
      152
     ]
    },
    "molmod.io.common.FileFormatError": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.number_state.ArrayAttr.set": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "molmod.io.number_state.FileFormatError": {
  "data": {
   "shadows": "molmod.io.common.FileFormatError"
  },
  "type": "import"
 },
 "molmod.io.number_state.NumberState": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "object": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.number_state.NumberState.__init__": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      196
     ]
    },
    "float": {
     "line number": [
      193
     ]
    },
    "getattr": {
     "line number": [
      190
     ]
    },
    "int": {
     "line number": [
      193
     ]
    },
    "isinstance": {
     "line number": [
      191,
      193,
      193
     ]
    },
    "molmod.io.number_state.ArrayAttr": {
     "line number": [
      192
     ]
    },
    "molmod.io.number_state.ScalarAttr": {
     "line number": [
      194
     ]
    },
    "numpy.ndarray": {
     "line number": [
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.number_state.NumberState._register": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "AttrCls": {
     "line number": [
      209
     ]
    },
    "TypeError": {
     "line number": [
      206
     ]
    },
    "ValueError": {
     "line number": [
      208
     ]
    },
    "issubclass": {
     "line number": [
      205
     ]
    },
    "len": {
     "line number": [
      207
     ]
    },
    "molmod.io.number_state.StateAttr": {
     "line number": [
      205
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.number_state.NumberState.dump": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": {
    "open": {
     "line number": [
      256
     ]
    },
    "sorted": {
     "line number": [
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.number_state.NumberState.get": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      219,
      221
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.number_state.NumberState.load": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      305
     ]
    },
    "float": {
     "line number": [
      318
     ]
    },
    "int": {
     "line number": [
      304,
      316
     ]
    },
    "isinstance": {
     "line number": [
      298,
      312
     ]
    },
    "len": {
     "line number": [
      277,
      324
     ]
    },
    "molmod.io.common.FileFormatError": {
     "line number": [
      285,
      288,
      292,
      299,
      306,
      309,
      313,
      320,
      325
     ]
    },
    "molmod.io.number_state.ArrayAttr": {
     "line number": [
      298
     ]
    },
    "molmod.io.number_state.ScalarAttr": {
     "line number": [
      312
     ]
    },
    "open": {
     "line number": [
      270
     ]
    },
    "print": {
     "line number": [
      296
     ]
    },
    "tuple": {
     "line number": [
      304
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.number_state.NumberState.set": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      236,
      240,
      242,
      245
     ]
    },
    "len": {
     "line number": [
      244,
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.number_state.ScalarAttr": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "molmod.io.number_state.StateAttr": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.number_state.ScalarAttr.dump": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "print": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.number_state.ScalarAttr.get": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.number_state.ScalarAttr.get_kind": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      75
     ]
    },
    "float": {
     "line number": [
      70
     ]
    },
    "int": {
     "line number": [
      72
     ]
    },
    "isinstance": {
     "line number": [
      70,
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.number_state.ScalarAttr.set": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "setattr": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.number_state.StateAttr": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "object": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.number_state.StateAttr.__init__": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "molmod.io.number_state.StateAttr.get": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.number_state.StateAttr.get_kind": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.number_state.StateAttr.set": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.number_state.__all__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "molmod.io.number_state.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.io.number_state.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "molmod.io.pdb": {
  "data": {},
  "type": "module"
 },
 "molmod.io.pdb.FileFormatError": {
  "data": {
   "shadows": "molmod.io.common.FileFormatError"
  },
  "type": "import"
 },
 "molmod.io.pdb.Molecule": {
  "data": {
   "shadows": "molmod.molecules.Molecule"
  },
  "type": "import"
 },
 "molmod.io.pdb.__all__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "molmod.io.pdb.angstrom": {
  "data": {
   "shadows": "molmod.units.angstrom"
  },
  "type": "import"
 },
 "molmod.io.pdb.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.io.pdb.dump_pdb": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      73
     ]
    },
    "molmod.periodic.periodic.symbol": {
     "line number": [
      74
     ]
    },
    "molmod.units.angstrom": {
     "line number": [
      100,
      101,
      102
     ]
    },
    "open": {
     "line number": [
      69
     ]
    },
    "print": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.pdb.load_pdb": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "float": {
     "line number": [
      123,
      123,
      123,
      124,
      125
     ]
    },
    "len": {
     "line number": [
      126
     ]
    },
    "molmod.io.common.FileFormatError": {
     "line number": [
      132
     ]
    },
    "molmod.molecules.Molecule": {
     "line number": [
      127
     ]
    },
    "molmod.periodic.periodic.number": {
     "line number": [
      122
     ]
    },
    "molmod.units.angstrom": {
     "line number": [
      123,
      123,
      123
     ]
    },
    "numpy.array": {
     "line number": [
      128,
      129
     ]
    },
    "open": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.pdb.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.io.pdb.periodic": {
  "data": {
   "shadows": "molmod.periodic.periodic"
  },
  "type": "import"
 },
 "molmod.io.pdb.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "molmod.io.pdb.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.io.psf": {
  "data": {},
  "type": "module"
 },
 "molmod.io.psf.BendingAnglePattern": {
  "data": {
   "shadows": "molmod.molecular_graphs.BendingAnglePattern"
  },
  "type": "import"
 },
 "molmod.io.psf.BondPattern": {
  "data": {
   "shadows": "molmod.molecular_graphs.BondPattern"
  },
  "type": "import"
 },
 "molmod.io.psf.CriteriaSet": {
  "data": {
   "shadows": "molmod.graphs.CriteriaSet"
  },
  "type": "import"
 },
 "molmod.io.psf.DihedralAnglePattern": {
  "data": {
   "shadows": "molmod.molecular_graphs.DihedralAnglePattern"
  },
  "type": "import"
 },
 "molmod.io.psf.FileFormatError": {
  "data": {
   "shadows": "molmod.io.common.FileFormatError"
  },
  "type": "import"
 },
 "molmod.io.psf.Graph": {
  "data": {
   "shadows": "molmod.graphs.Graph"
  },
  "type": "import"
 },
 "molmod.io.psf.GraphSearch": {
  "data": {
   "shadows": "molmod.graphs.GraphSearch"
  },
  "type": "import"
 },
 "molmod.io.psf.HasNumNeighbors": {
  "data": {
   "shadows": "molmod.molecular_graphs.HasNumNeighbors"
  },
  "type": "import"
 },
 "molmod.io.psf.MolecularGraph": {
  "data": {
   "shadows": "molmod.molecular_graphs.MolecularGraph"
  },
  "type": "import"
 },
 "molmod.io.psf.OutOfPlanePattern": {
  "data": {
   "shadows": "molmod.molecular_graphs.OutOfPlanePattern"
  },
  "type": "import"
 },
 "molmod.io.psf.PSFFile": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "object": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.psf.PSFFile.__init__": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "molmod.io.psf.PSFFile._add_graph_bends": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": {
    "len": {
     "line number": [
      349,
      351,
      352,
      353,
      354
     ]
    },
    "match_generator": {
     "line number": [
      343,
      348
     ]
    },
    "molmod.graphs.CriteriaSet": {
     "line number": [
      343
     ]
    },
    "molmod.graphs.GraphSearch": {
     "line number": [
      343
     ]
    },
    "molmod.molecular_graphs.BendingAnglePattern": {
     "line number": [
      343
     ]
    },
    "numpy.resize": {
     "line number": [
      352
     ]
    },
    "sorted": {
     "line number": [
      344
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.psf.PSFFile._add_graph_bonds": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": {
    "len": {
     "line number": [
      334,
      336,
      337,
      338,
      339
     ]
    },
    "match_generator": {
     "line number": [
      333
     ]
    },
    "molmod.graphs.CriteriaSet": {
     "line number": [
      329
     ]
    },
    "molmod.graphs.GraphSearch": {
     "line number": [
      329
     ]
    },
    "molmod.molecular_graphs.BondPattern": {
     "line number": [
      329
     ]
    },
    "numpy.resize": {
     "line number": [
      337
     ]
    },
    "sorted": {
     "line number": [
      330
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.psf.PSFFile._add_graph_dihedrals": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": {
    "len": {
     "line number": [
      365,
      367,
      368,
      369,
      370
     ]
    },
    "match_generator": {
     "line number": [
      358,
      364
     ]
    },
    "molmod.graphs.CriteriaSet": {
     "line number": [
      358
     ]
    },
    "molmod.graphs.GraphSearch": {
     "line number": [
      358
     ]
    },
    "molmod.molecular_graphs.DihedralAnglePattern": {
     "line number": [
      358
     ]
    },
    "numpy.resize": {
     "line number": [
      368
     ]
    },
    "sorted": {
     "line number": [
      359
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.psf.PSFFile._add_graph_impropers": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "len": {
     "line number": [
      383,
      385,
      386,
      387,
      388
     ]
    },
    "match_generator": {
     "line number": [
      374,
      382
     ]
    },
    "molmod.graphs.CriteriaSet": {
     "line number": [
      374
     ]
    },
    "molmod.graphs.GraphSearch": {
     "line number": [
      374
     ]
    },
    "molmod.molecular_graphs.HasNumNeighbors": {
     "line number": [
      375
     ]
    },
    "molmod.molecular_graphs.OutOfPlanePattern": {
     "line number": [
      374
     ]
    },
    "numpy.resize": {
     "line number": [
      386
     ]
    },
    "sorted": {
     "line number": [
      377
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.psf.PSFFile._get_name": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "len": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.psf.PSFFile.add_molecular_graph": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      306
     ]
    },
    "int": {
     "line number": [
      305
     ]
    },
    "len": {
     "line number": [
      287,
      289,
      297
     ]
    },
    "molmod.periodic.periodic.symbol": {
     "line number": [
      294
     ]
    },
    "numpy.resize": {
     "line number": [
      291,
      299
     ]
    },
    "numpy.zeros": {
     "line number": [
      305
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.psf.PSFFile.add_molecule": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": {
    "molmod.molecular_graphs.MolecularGraph.from_geometry": {
     "line number": [
      271
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.psf.PSFFile.clear": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "int": {
     "line number": [
      72,
      76,
      77,
      78,
      79,
      80
     ]
    },
    "numpy.zeros": {
     "line number": [
      72,
      76,
      77,
      78,
      79,
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.psf.PSFFile.dump": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      183
     ]
    },
    "len": {
     "line number": [
      181,
      182,
      197,
      198,
      202,
      205,
      210,
      211,
      215,
      218,
      223,
      224,
      228,
      231,
      236,
      237,
      241,
      244
     ]
    },
    "molmod.periodic.periodic": {
     "line number": [
      184
     ]
    },
    "molmod.units.unified": {
     "line number": [
      192
     ]
    },
    "print": {
     "line number": [
      172,
      173,
      176,
      177,
      178,
      181,
      185,
      194,
      197,
      203,
      206,
      207,
      210,
      216,
      219,
      220,
      223,
      229,
      232,
      233,
      236,
      242,
      245,
      246,
      249,
      250,
      251,
      252,
      253,
      254
     ]
    },
    "zip": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.psf.PSFFile.get_graph": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": {
    "molmod.graphs.Graph": {
     "line number": [
      392
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.psf.PSFFile.get_groups": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      404
     ]
    },
    "len": {
     "line number": [
      405
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.psf.PSFFile.get_molecular_graph": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": {
    "molmod.molecular_graphs.MolecularGraph": {
     "line number": [
      396
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.psf.PSFFile.read_from_file": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "float": {
     "line number": [
      117
     ]
    },
    "int": {
     "line number": [
      119,
      131,
      136,
      141,
      146
     ]
    },
    "molmod.io.common.FileFormatError": {
     "line number": [
      91
     ]
    },
    "molmod.periodic.periodic": {
     "line number": [
      120
     ]
    },
    "molmod.periodic.periodic.number": {
     "line number": [
      124
     ]
    },
    "next": {
     "line number": [
      89
     ]
    },
    "numpy.array": {
     "line number": [
      125,
      126,
      127,
      132,
      137,
      142,
      147
     ]
    },
    "numpy.reshape": {
     "line number": [
      132,
      137,
      142,
      147
     ]
    },
    "open": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.psf.PSFFile.write_to_file": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "open": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.psf.__all__": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "molmod.io.psf.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.io.psf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.io.psf.periodic": {
  "data": {
   "shadows": "molmod.periodic.periodic"
  },
  "type": "import"
 },
 "molmod.io.psf.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "molmod.io.psf.unified": {
  "data": {
   "shadows": "molmod.units.unified"
  },
  "type": "import"
 },
 "molmod.io.sdf": {
  "data": {},
  "type": "module"
 },
 "molmod.io.sdf.FileFormatError": {
  "data": {
   "shadows": "molmod.io.common.FileFormatError"
  },
  "type": "import"
 },
 "molmod.io.sdf.MolecularGraph": {
  "data": {
   "shadows": "molmod.molecular_graphs.MolecularGraph"
  },
  "type": "import"
 },
 "molmod.io.sdf.Molecule": {
  "data": {
   "shadows": "molmod.molecules.Molecule"
  },
  "type": "import"
 },
 "molmod.io.sdf.SDFReader": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "builtins.object": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.sdf.SDFReader.__del__": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "molmod.io.sdf.SDFReader.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      58
     ]
    },
    "open": {
     "line number": [
      60
     ]
    },
    "str": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.sdf.SDFReader.__iter__": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "molmod.io.sdf.SDFReader.__next__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "StopIteration": {
     "line number": [
      82
     ]
    },
    "ValueError": {
     "line number": [
      93,
      106,
      123,
      136
     ]
    },
    "builtins.range": {
     "line number": [
      98,
      116
     ]
    },
    "float": {
     "line number": [
      97,
      103,
      104,
      105
     ]
    },
    "int": {
     "line number": [
      91,
      92,
      96,
      115,
      121,
      121,
      122,
      126,
      135,
      135
     ]
    },
    "len": {
     "line number": [
      81,
      88,
      100,
      118,
      126,
      133
     ]
    },
    "molmod.io.common.FileFormatError": {
     "line number": [
      89,
      94,
      101,
      107,
      110,
      119,
      124,
      137
     ]
    },
    "molmod.molecular_graphs.MolecularGraph": {
     "line number": [
      149
     ]
    },
    "molmod.molecules.Molecule": {
     "line number": [
      146
     ]
    },
    "molmod.periodic.periodic": {
     "line number": [
      108
     ]
    },
    "molmod.units.angstrom": {
     "line number": [
      112
     ]
    },
    "next": {
     "line number": [
      80,
      85,
      86,
      87,
      99,
      117,
      128,
      139
     ]
    },
    "numpy.zeros": {
     "line number": [
      96,
      97,
      115,
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.sdf.__all__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "molmod.io.sdf.angstrom": {
  "data": {
   "shadows": "molmod.units.angstrom"
  },
  "type": "import"
 },
 "molmod.io.sdf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.io.sdf.object": {
  "data": {
   "shadows": "builtins.object"
  },
  "type": "import"
 },
 "molmod.io.sdf.periodic": {
  "data": {
   "shadows": "molmod.periodic.periodic"
  },
  "type": "import"
 },
 "molmod.io.sdf.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.io.test": {
  "data": {},
  "type": "module"
 },
 "molmod.io.test.test_atrj": {
  "data": {},
  "type": "module"
 },
 "molmod.io.test.test_atrj.ATRJTestCase": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "molmod.test.common.BaseTestCase": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.test.test_atrj.ATRJTestCase.test_load": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "ATRJReader": {
     "line number": [
      42,
      64
     ]
    },
    "len": {
     "line number": [
      45,
      67
     ]
    },
    "list": {
     "line number": [
      44,
      66
     ]
    },
    "molmod.io.test.test_atrj.pkg_resources": {
     "line number": [
      42,
      64
     ]
    },
    "slice": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_atrj.BaseTestCase": {
  "data": {
   "shadows": "molmod.test.common.BaseTestCase"
  },
  "type": "import"
 },
 "molmod.io.test.test_atrj.__all__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "molmod.io.test.test_atrj.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.io.test.test_atrj.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "molmod.io.test.test_atrj.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "molmod.io.test.test_chk": {
  "data": {},
  "type": "module"
 },
 "molmod.io.test.test_chk.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "molmod.io.test.test_chk.check_data": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      83
     ]
    },
    "isinstance": {
     "line number": [
      89
     ]
    },
    "molmod.io.dump_chk": {
     "line number": [
      85
     ]
    },
    "molmod.io.load_chk": {
     "line number": [
      86
     ]
    },
    "molmod.io.test.test_chk.os": {
     "line number": [
      84
     ]
    },
    "molmod.test.common.tmpdir": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_chk.check_data_array": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      35
     ]
    },
    "molmod.io.dump_chk": {
     "line number": [
      37
     ]
    },
    "molmod.io.load_chk": {
     "line number": [
      38
     ]
    },
    "molmod.io.test.test_chk.os": {
     "line number": [
      36
     ]
    },
    "molmod.test.common.tmpdir": {
     "line number": [
      35
     ]
    },
    "numpy.asarray": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_chk.dump_chk": {
  "data": {
   "shadows": "molmod.io.dump_chk"
  },
  "type": "import"
 },
 "molmod.io.test.test_chk.load_chk": {
  "data": {
   "shadows": "molmod.io.load_chk"
  },
  "type": "import"
 },
 "molmod.io.test.test_chk.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.io.test.test_chk.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "molmod.io.test.test_chk.test_bool": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      106
     ]
    },
    "molmod.io.test.test_chk.check_data": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_chk.test_bool_array": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      79
     ]
    },
    "molmod.io.test.test_chk.check_data_array": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_chk.test_errors": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      114,
      116,
      128,
      130
     ]
    },
    "ValueError": {
     "line number": [
      118,
      121,
      123,
      125,
      132,
      134
     ]
    },
    "molmod.io.test.test_chk.check_data": {
     "line number": [
      115,
      117,
      119,
      122,
      124,
      126,
      129,
      131,
      133,
      135
     ]
    },
    "nose.tools.assert_raises": {
     "line number": [
      114,
      116,
      118,
      121,
      123,
      125,
      128,
      130,
      132,
      134
     ]
    },
    "numpy.array": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_chk.test_floats": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "float": {
     "line number": [
      98
     ]
    },
    "molmod.io.test.test_chk.check_data": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_chk.test_floats_array": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "float": {
     "line number": [
      70,
      71
     ]
    },
    "molmod.io.test.test_chk.check_data_array": {
     "line number": [
      70,
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_chk.test_ints": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "int": {
     "line number": [
      102
     ]
    },
    "molmod.io.test.test_chk.check_data": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_chk.test_ints_array": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "int": {
     "line number": [
      75
     ]
    },
    "molmod.io.test.test_chk.check_data_array": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_chk.test_none": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "molmod.io.test.test_chk.check_data": {
     "line number": [
      110
     ]
    },
    "type": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_chk.test_strings": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "molmod.io.test.test_chk.check_data": {
     "line number": [
      93,
      94
     ]
    },
    "numpy.unicode": {
     "line number": [
      93,
      94
     ]
    },
    "str": {
     "line number": [
      93,
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_chk.test_strings_array": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "molmod.io.test.test_chk.check_data_array": {
     "line number": [
      46
     ]
    },
    "numpy.array": {
     "line number": [
      45
     ]
    },
    "numpy.dtype": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_chk.test_strings_array_bytes": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "molmod.io.test.test_chk.check_data_array": {
     "line number": [
      61
     ]
    },
    "numpy.array": {
     "line number": [
      60
     ]
    },
    "numpy.bytes_": {
     "line number": [
      60
     ]
    },
    "numpy.dtype": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_chk.test_strings_array_list": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "molmod.io.test.test_chk.check_data_array": {
     "line number": [
      51
     ]
    },
    "numpy.dtype": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_chk.test_strings_array_tuple": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "molmod.io.test.test_chk.check_data_array": {
     "line number": [
      56
     ]
    },
    "numpy.dtype": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_chk.test_strings_array_unicode": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "molmod.io.test.test_chk.check_data_array": {
     "line number": [
      66
     ]
    },
    "numpy.array": {
     "line number": [
      65
     ]
    },
    "numpy.dtype": {
     "line number": [
      66
     ]
    },
    "numpy.unicode": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_chk.tmpdir": {
  "data": {
   "shadows": "molmod.test.common.tmpdir"
  },
  "type": "import"
 },
 "molmod.io.test.test_cml": {
  "data": {},
  "type": "module"
 },
 "molmod.io.test.test_cml.CMLTestCase": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "molmod.io.test.test_cml.unittest": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.test.test_cml.CMLTestCase.test_consistency": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      46
     ]
    },
    "dump_cml": {
     "line number": [
      47
     ]
    },
    "load_cml": {
     "line number": [
      48
     ]
    },
    "molmod.io.test.test_cml.pkg_resources": {
     "line number": [
      41,
      42
     ]
    },
    "set": {
     "line number": [
      54,
      54
     ]
    },
    "tmpdir": {
     "line number": [
      46
     ]
    },
    "zip": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_cml.CMLTestCase.test_load": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "load_cml": {
     "line number": [
      57
     ]
    },
    "molmod.io.test.test_cml.pkg_resources": {
     "line number": [
      57
     ]
    },
    "numpy.array": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_cml.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "molmod.io.test.test_cml.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.io.test.test_cml.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "molmod.io.test.test_cml.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "molmod.io.test.test_cp2k": {
  "data": {},
  "type": "module"
 },
 "molmod.io.test.test_cp2k.CP2KTestCase": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "molmod.io.test.test_cp2k.unittest": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.test.test_cp2k.CP2KTestCase.test_input_file": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "CP2KKeyword": {
     "line number": [
      59,
      64,
      70,
      70,
      75,
      75,
      77,
      92,
      92,
      100,
      101
     ]
    },
    "CP2KSection": {
     "line number": [
      99
     ]
    },
    "KeyError": {
     "line number": [
      56,
      66,
      72
     ]
    },
    "__name__": {
     "line number": [
      116,
      124
     ]
    },
    "len": {
     "line number": [
      80,
      90,
      91,
      94,
      107
     ]
    },
    "molmod.io.test.test_cp2k.pkg_resources": {
     "line number": [
      41,
      123,
      126
     ]
    },
    "open": {
     "line number": [
      126,
      127
     ]
    },
    "print": {
     "line number": [
      54
     ]
    },
    "tmpdir": {
     "line number": [
      116,
      124
     ]
    },
    "zip": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_cp2k.__all__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "molmod.io.test.test_cp2k.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "molmod.io.test.test_cp2k.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "molmod.io.test.test_cp2k.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "molmod.io.test.test_cpmd": {
  "data": {},
  "type": "module"
 },
 "molmod.io.test.test_cpmd.BaseTestCase": {
  "data": {
   "shadows": "molmod.test.common.BaseTestCase"
  },
  "type": "import"
 },
 "molmod.io.test.test_cpmd.CPMDTestCase": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "molmod.test.common.BaseTestCase": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.test.test_cpmd.CPMDTestCase.test_trajectory_reader": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "CPMDTrajectoryReader": {
     "line number": [
      37,
      44
     ]
    },
    "molmod.io.test.test_cpmd.pkg_resources": {
     "line number": [
      37,
      44
     ]
    },
    "next": {
     "line number": [
      46,
      49
     ]
    },
    "slice": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_cpmd.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "molmod.io.test.test_cpmd.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "molmod.io.test.test_crystal": {
  "data": {},
  "type": "module"
 },
 "molmod.io.test.test_crystal.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "molmod.io.test.test_crystal.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "molmod.io.test.test_crystal.test_crystal_quartz": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "CrystalAPIOut": {
     "line number": [
      34
     ]
    },
    "abs": {
     "line number": [
      36,
      38,
      43,
      74,
      75,
      76,
      77,
      78,
      79,
      80,
      81,
      82,
      83,
      87,
      89
     ]
    },
    "len": {
     "line number": [
      45,
      46,
      47,
      48,
      49,
      50,
      51,
      58,
      59,
      60,
      61,
      62,
      63,
      64,
      65,
      66,
      67,
      68,
      69,
      70,
      71,
      72,
      73
     ]
    },
    "molmod.io.test.test_crystal.pkg_resources": {
     "line number": [
      34
     ]
    },
    "print": {
     "line number": [
      85,
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_cube": {
  "data": {},
  "type": "module"
 },
 "molmod.io.test.test_cube.CubeTestCase": {
  "data": {
   "lineno": 36
  },
  "type": "class"
 },
 "molmod.io.test.test_cube.CubeTestCase.test_cube": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      84
     ]
    },
    "len": {
     "line number": [
      92,
      92
     ]
    },
    "molmod.io.test.test_cube.pkg_resources": {
     "line number": [
      65,
      86
     ]
    },
    "numpy.sqrt": {
     "line number": [
      95,
      107,
      108,
      109,
      110,
      111,
      112
     ]
    },
    "open": {
     "line number": [
      86,
      89
     ]
    },
    "tmpdir": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_cube.CubeTestCase.test_cube_reader": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "CubeReader": {
     "line number": [
      38
     ]
    },
    "molmod.io.test.test_cube.pkg_resources": {
     "line number": [
      38
     ]
    },
    "next": {
     "line number": [
      47,
      50
     ]
    },
    "numpy.array": {
     "line number": [
      49,
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_cube.CubeTestCase.test_cube_reader_size": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "CubeReader": {
     "line number": [
      55
     ]
    },
    "len": {
     "line number": [
      60,
      61
     ]
    },
    "list": {
     "line number": [
      59
     ]
    },
    "molmod.io.test.test_cube.pkg_resources": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_cube.__all__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "molmod.io.test.test_cube.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.io.test.test_cube.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "molmod.io.test.test_dlpoly": {
  "data": {},
  "type": "module"
 },
 "molmod.io.test.test_dlpoly.DLPolyTestCase": {
  "data": {
   "lineno": 38
  },
  "type": "class"
 },
 "molmod.io.test.test_dlpoly.DLPolyTestCase.test_history_reader": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "DLPolyHistoryReader": {
     "line number": [
      40
     ]
    },
    "molmod.io.test.test_dlpoly.pkg_resources": {
     "line number": [
      40
     ]
    },
    "next": {
     "line number": [
      42,
      53
     ]
    },
    "numpy.array": {
     "line number": [
      50,
      51,
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_dlpoly.DLPolyTestCase.test_history_reader_restart": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "DLPolyHistoryReader": {
     "line number": [
      57
     ]
    },
    "molmod.io.test.test_dlpoly.pkg_resources": {
     "line number": [
      57
     ]
    },
    "next": {
     "line number": [
      59,
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_dlpoly.DLPolyTestCase.test_output_reader": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "DLPolyOutputReader": {
     "line number": [
      66
     ]
    },
    "molmod.io.test.test_dlpoly.pkg_resources": {
     "line number": [
      66
     ]
    },
    "next": {
     "line number": [
      67,
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_dlpoly.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "molmod.io.test.test_dlpoly.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.io.test.test_dlpoly.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.io.test.test_dlpoly.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "molmod.io.test.test_fchk": {
  "data": {},
  "type": "module"
 },
 "molmod.io.test.test_fchk.BaseTestCase": {
  "data": {
   "shadows": "molmod.test.common.BaseTestCase"
  },
  "type": "import"
 },
 "molmod.io.test.test_fchk.FCHKTestCase": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "molmod.test.common.BaseTestCase": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.test.test_fchk.FCHKTestCase.test_fchk": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "FCHKFile": {
     "line number": [
      48,
      60,
      69
     ]
    },
    "isinstance": {
     "line number": [
      57
     ]
    },
    "molmod.io.test.test_fchk.pkg_resources": {
     "line number": [
      48,
      60,
      69
     ]
    },
    "numpy.array": {
     "line number": [
      38
     ]
    },
    "numpy.integer": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_fchk.__all__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "molmod.io.test.test_fchk.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.io.test.test_fchk.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "molmod.io.test.test_gamess": {
  "data": {},
  "type": "module"
 },
 "molmod.io.test.test_gamess.BaseTestCase": {
  "data": {
   "shadows": "molmod.test.common.BaseTestCase"
  },
  "type": "import"
 },
 "molmod.io.test.test_gamess.GamessTestCase": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "molmod.test.common.BaseTestCase": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.test.test_gamess.GamessTestCase.test_punch": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "PunchFile": {
     "line number": [
      39
     ]
    },
    "abs": {
     "line number": [
      54,
      55,
      56,
      58,
      59,
      60,
      61,
      62
     ]
    },
    "len": {
     "line number": [
      43
     ]
    },
    "molmod.io.test.test_gamess.pkg_resources": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_gamess.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "molmod.io.test.test_gamess.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.io.test.test_gamess.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "molmod.io.test.test_gromacs": {
  "data": {},
  "type": "module"
 },
 "molmod.io.test.test_gromacs.BaseTestCase": {
  "data": {
   "shadows": "molmod.test.common.BaseTestCase"
  },
  "type": "import"
 },
 "molmod.io.test.test_gromacs.GromacsTestCase": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "molmod.test.common.BaseTestCase": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.test.test_gromacs.GromacsTestCase.test_reader": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "GroReader": {
     "line number": [
      39
     ]
    },
    "molmod.io.test.test_gromacs.pkg_resources": {
     "line number": [
      39
     ]
    },
    "next": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_gromacs.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "molmod.io.test.test_gromacs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.io.test.test_gromacs.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "molmod.io.test.test_lammps": {
  "data": {},
  "type": "module"
 },
 "molmod.io.test.test_lammps.BaseTestCase": {
  "data": {
   "shadows": "molmod.test.common.BaseTestCase"
  },
  "type": "import"
 },
 "molmod.io.test.test_lammps.LAMMPSTestCase": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "molmod.test.common.BaseTestCase": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.test.test_lammps.LAMMPSTestCase.test_dump_reader": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "LAMMPSDumpReader": {
     "line number": [
      39,
      50,
      53
     ]
    },
    "len": {
     "line number": [
      51,
      54
     ]
    },
    "list": {
     "line number": [
      51,
      54
     ]
    },
    "molmod.io.test.test_lammps.pkg_resources": {
     "line number": [
      39,
      50,
      53
     ]
    },
    "slice": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_lammps.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "molmod.io.test.test_lammps.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.io.test.test_lammps.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "molmod.io.test.test_number_state": {
  "data": {},
  "type": "module"
 },
 "molmod.io.test.test_number_state.NumberStateTestCase": {
  "data": {
   "lineno": 43
  },
  "type": "class"
 },
 "molmod.io.test.test_number_state.NumberStateTestCase.test_consistency": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      45
     ]
    },
    "abs": {
     "line number": [
      60
     ]
    },
    "len": {
     "line number": [
      68
     ]
    },
    "molmod.io.test.test_number_state.TestObject": {
     "line number": [
      46,
      48,
      64,
      65
     ]
    },
    "set": {
     "line number": [
      66
     ]
    },
    "tmpdir": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_number_state.TestObject": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "object": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.test.test_number_state.TestObject.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "NumberState": {
     "line number": [
      40
     ]
    },
    "numpy.random.normal": {
     "line number": [
      36,
      38
     ]
    },
    "numpy.random.randint": {
     "line number": [
      37,
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_number_state.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "molmod.io.test.test_number_state.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.io.test.test_pdb": {
  "data": {},
  "type": "module"
 },
 "molmod.io.test.test_pdb.PDBTestCase": {
  "data": {
   "lineno": 37
  },
  "type": "class"
 },
 "molmod.io.test.test_pdb.PDBTestCase.test_dump_pdb": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "Molecule": {
     "line number": [
      55
     ]
    },
    "__name__": {
     "line number": [
      54
     ]
    },
    "dump_pdb": {
     "line number": [
      56
     ]
    },
    "load_pdb": {
     "line number": [
      69
     ]
    },
    "open": {
     "line number": [
      61
     ]
    },
    "tmpdir": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_pdb.PDBTestCase.test_load_pdb": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "len": {
     "line number": [
      48,
      51
     ]
    },
    "load_pdb": {
     "line number": [
      39
     ]
    },
    "molmod.io.test.test_pdb.pkg_resources": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_pdb.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "molmod.io.test.test_pdb.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.io.test.test_pdb.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "molmod.io.test.test_psf": {
  "data": {},
  "type": "module"
 },
 "molmod.io.test.test_psf.PSFTestCase": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "molmod.io.test.test_psf.PSFTestCase.test_dump": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "PSFFile": {
     "line number": [
      52
     ]
    },
    "__name__": {
     "line number": [
      54
     ]
    },
    "molmod.io.test.test_psf.pkg_resources": {
     "line number": [
      51
     ]
    },
    "tmpdir": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_psf.PSFTestCase.test_improper": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "PSFFile": {
     "line number": [
      78,
      87
     ]
    },
    "__name__": {
     "line number": [
      85
     ]
    },
    "molmod.io.test.test_psf.pkg_resources": {
     "line number": [
      77
     ]
    },
    "set": {
     "line number": [
      81
     ]
    },
    "tmpdir": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_psf.PSFTestCase.test_load": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "PSFFile": {
     "line number": [
      37
     ]
    },
    "molmod.io.test.test_psf.pkg_resources": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_psf.PSFTestCase.test_load_vmd": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "PSFFile": {
     "line number": [
      44
     ]
    },
    "molmod.io.test.test_psf.pkg_resources": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_psf.PSFTestCase.test_many_separate": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "PSFFile": {
     "line number": [
      67
     ]
    },
    "__name__": {
     "line number": [
      73
     ]
    },
    "molmod.io.test.test_psf.pkg_resources": {
     "line number": [
      68,
      71
     ]
    },
    "tmpdir": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_psf.PSFTestCase.test_tetra": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "PSFFile": {
     "line number": [
      59
     ]
    },
    "__name__": {
     "line number": [
      63
     ]
    },
    "molmod.io.test.test_psf.pkg_resources": {
     "line number": [
      58
     ]
    },
    "tmpdir": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_psf.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "molmod.io.test.test_psf.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "molmod.io.test.test_sdf": {
  "data": {},
  "type": "module"
 },
 "molmod.io.test.test_sdf.SDFTestCase": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "molmod.io.test.test_sdf.unittest": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.test.test_sdf.SDFTestCase.test_reader": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "SDFReader": {
     "line number": [
      40
     ]
    },
    "StopIteration": {
     "line number": [
      61
     ]
    },
    "frozenset": {
     "line number": [
      45,
      53
     ]
    },
    "len": {
     "line number": [
      44,
      52,
      54
     ]
    },
    "molmod.io.test.test_sdf.pkg_resources": {
     "line number": [
      40
     ]
    },
    "next": {
     "line number": [
      41,
      49,
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_sdf.SDFTestCase.test_reader2": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "SDFReader": {
     "line number": [
      65
     ]
    },
    "frozenset": {
     "line number": [
      70
     ]
    },
    "len": {
     "line number": [
      69,
      71
     ]
    },
    "molmod.io.test.test_sdf.pkg_resources": {
     "line number": [
      65
     ]
    },
    "next": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_sdf.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "molmod.io.test.test_sdf.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.io.test.test_sdf.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "molmod.io.test.test_sdf.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "molmod.io.test.test_xyz": {
  "data": {},
  "type": "module"
 },
 "molmod.io.test.test_xyz.XYZTestCase": {
  "data": {
   "lineno": 39
  },
  "type": "class"
 },
 "molmod.io.test.test_xyz.XYZTestCase.test_dopamine": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "XYZFile": {
     "line number": [
      102
     ]
    },
    "molmod.io.test.test_xyz.pkg_resources": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_xyz.XYZTestCase.test_probes": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "XYZFile": {
     "line number": [
      96,
      98
     ]
    },
    "molmod.io.test.test_xyz.pkg_resources": {
     "line number": [
      96,
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_xyz.XYZTestCase.test_xyz_file": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "XYZFile": {
     "line number": [
      72,
      82,
      88
     ]
    },
    "__name__": {
     "line number": [
      80
     ]
    },
    "molmod.io.test.test_xyz.pkg_resources": {
     "line number": [
      72
     ]
    },
    "slice": {
     "line number": [
      88
     ]
    },
    "tmpdir": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_xyz.XYZTestCase.test_xyz_reader": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "XYZReader": {
     "line number": [
      41
     ]
    },
    "molmod.io.test.test_xyz.pkg_resources": {
     "line number": [
      41
     ]
    },
    "next": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_xyz.XYZTestCase.test_xyz_writer": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "XYZReader": {
     "line number": [
      56,
      62
     ]
    },
    "XYZWriter": {
     "line number": [
      58
     ]
    },
    "__name__": {
     "line number": [
      57
     ]
    },
    "molmod.io.test.test_xyz.pkg_resources": {
     "line number": [
      56
     ]
    },
    "next": {
     "line number": [
      65
     ]
    },
    "tmpdir": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.test.test_xyz.__all__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "molmod.io.test.test_xyz.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.io.test.test_xyz.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "molmod.io.test.test_xyz.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "molmod.io.xyz": {
  "data": {},
  "type": "module"
 },
 "molmod.io.xyz.FileFormatError": {
  "data": {
   "shadows": "molmod.io.common.FileFormatError"
  },
  "type": "import"
 },
 "molmod.io.xyz.Molecule": {
  "data": {
   "shadows": "molmod.molecules.Molecule"
  },
  "type": "import"
 },
 "molmod.io.xyz.SlicedReader": {
  "data": {
   "shadows": "molmod.io.common.SlicedReader"
  },
  "type": "import"
 },
 "molmod.io.xyz.XYZFile": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "object": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.xyz.XYZFile.__init__": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      236
     ]
    },
    "float": {
     "line number": [
      234,
      245
     ]
    },
    "len": {
     "line number": [
      234
     ]
    },
    "molmod.io.xyz.XYZReader": {
     "line number": [
      222
     ]
    },
    "molmod.units.angstrom": {
     "line number": [
      205
     ]
    },
    "numpy.array": {
     "line number": [
      245
     ]
    },
    "numpy.zeros": {
     "line number": [
      234
     ]
    },
    "slice": {
     "line number": [
      205
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.xyz.XYZFile.get_molecule": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "molmod.molecules.Molecule": {
     "line number": [
      253
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.xyz.XYZFile.write_to_file": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "molmod.io.xyz.XYZWriter": {
     "line number": [
      265
     ]
    },
    "molmod.units.angstrom": {
     "line number": [
      255
     ]
    },
    "zip": {
     "line number": [
      266
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.xyz.XYZReader": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "molmod.io.common.SlicedReader": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.xyz.XYZReader.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "StopIteration": {
     "line number": [
      89
     ]
    },
    "ValueError": {
     "line number": [
      80
     ]
    },
    "enumerate": {
     "line number": [
      75
     ]
    },
    "int": {
     "line number": [
      74,
      77
     ]
    },
    "len": {
     "line number": [
      74
     ]
    },
    "molmod.io.common.FileFormatError": {
     "line number": [
      90
     ]
    },
    "molmod.io.common.SlicedReader.__init__": {
     "line number": [
      68
     ]
    },
    "molmod.periodic.periodic": {
     "line number": [
      81
     ]
    },
    "molmod.periodic.periodic.symbol": {
     "line number": [
      78
     ]
    },
    "molmod.units.angstrom": {
     "line number": [
      53
     ]
    },
    "numpy.zeros": {
     "line number": [
      74
     ]
    },
    "slice": {
     "line number": [
      53
     ]
    },
    "tuple": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.xyz.XYZReader._read_frame": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "StopIteration": {
     "line number": [
      110,
      113,
      121
     ]
    },
    "ValueError": {
     "line number": [
      120
     ]
    },
    "builtins.range": {
     "line number": [
      107
     ]
    },
    "float": {
     "line number": [
      106,
      117,
      118,
      119
     ]
    },
    "len": {
     "line number": [
      109,
      112
     ]
    },
    "numpy.zeros": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.xyz.XYZReader._skip_frame": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "StopIteration": {
     "line number": [
      133
     ]
    },
    "builtins.range": {
     "line number": [
      130
     ]
    },
    "len": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.xyz.XYZReader.get_first_molecule": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "molmod.molecules.Molecule": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.xyz.XYZReader.read_size": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "StopIteration": {
     "line number": [
      97
     ]
    },
    "ValueError": {
     "line number": [
      96
     ]
    },
    "int": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.xyz.XYZWriter": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "object": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.io.xyz.XYZWriter.__del__": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "molmod.io.xyz.XYZWriter.__init__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      167
     ]
    },
    "molmod.units.angstrom": {
     "line number": [
      157
     ]
    },
    "open": {
     "line number": [
      169
     ]
    },
    "str": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.xyz.XYZWriter.dump": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "len": {
     "line number": [
      187
     ]
    },
    "print": {
     "line number": [
      187,
      188,
      190
     ]
    },
    "str": {
     "line number": [
      188
     ]
    },
    "tuple": {
     "line number": [
      190
     ]
    },
    "zip": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.io.xyz.__all__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "molmod.io.xyz.angstrom": {
  "data": {
   "shadows": "molmod.units.angstrom"
  },
  "type": "import"
 },
 "molmod.io.xyz.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.io.xyz.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.io.xyz.periodic": {
  "data": {
   "shadows": "molmod.periodic.periodic"
  },
  "type": "import"
 },
 "molmod.io.xyz.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "molmod.io.xyz.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.isotopes": {
  "data": {
   "symbols_in_volume": {
    "molmod.isotopes.Ame2003": {
     "line number": [
      103
     ]
    },
    "molmod.isotopes.NubTab03": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "module"
 },
 "molmod.isotopes.Ame2003": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "object": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.isotopes.Ame2003.__init__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      93
     ]
    },
    "add_mass": {
     "line number": [
      100
     ]
    },
    "builtins.range": {
     "line number": [
      94
     ]
    },
    "float": {
     "line number": [
      99
     ]
    },
    "int": {
     "line number": [
      97,
      98
     ]
    },
    "molmod.isotopes.pkg_resources": {
     "line number": [
      93
     ]
    },
    "molmod.units.amu": {
     "line number": [
      99
     ]
    },
    "next": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.isotopes.Ame2003.__init__.add_mass": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "molmod.isotopes.NubTab03": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "object": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.isotopes.NubTab03.__init__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      136
     ]
    },
    "add_abundance": {
     "line number": [
      144
     ]
    },
    "dict": {
     "line number": [
      140
     ]
    },
    "float": {
     "line number": [
      143
     ]
    },
    "int": {
     "line number": [
      138,
      139
     ]
    },
    "molmod.isotopes.pkg_resources": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.isotopes.NubTab03.__init__.add_abundance": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "molmod.isotopes.__all__": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "molmod.isotopes.ame2003": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "molmod.isotopes.amu": {
  "data": {
   "shadows": "molmod.units.amu"
  },
  "type": "import"
 },
 "molmod.isotopes.nubtab03": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "molmod.isotopes.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "molmod.isotopes.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.log": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "module"
 },
 "molmod.log.ScreenLog": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "molmod.log.Unit": {
     "line number": [
      101,
      102,
      103,
      104,
      105,
      106,
      107,
      108,
      109,
      110,
      111,
      112,
      113,
      114,
      115,
      116,
      117,
      118,
      119,
      122,
      123,
      124,
      125,
      126,
      127,
      128,
      129,
      130,
      131,
      132,
      133,
      134,
      135,
      136,
      137,
      138,
      139,
      140,
      143,
      144,
      145,
      146,
      147,
      148,
      149,
      150,
      151,
      152,
      153,
      154,
      155,
      156,
      157,
      158,
      159,
      160,
      161,
      164,
      165,
      166,
      167,
      168,
      169,
      170,
      171,
      172,
      173,
      174,
      175,
      176,
      177,
      178,
      179,
      180,
      181,
      182,
      185,
      186,
      187,
      188,
      189,
      190,
      191,
      192,
      193,
      194,
      195,
      196,
      197,
      198,
      199,
      200,
      201,
      202,
      203
     ]
    },
    "molmod.log.UnitSystem": {
     "line number": [
      100,
      121,
      142,
      163,
      184
     ]
    },
    "molmod.log.functools": {
     "line number": [
      240,
      241,
      242,
      243,
      244,
      245,
      246,
      247,
      248,
      249,
      250,
      251,
      252
     ]
    },
    "molmod.units.amu": {
     "line number": [
      108,
      129,
      150,
      171
     ]
    },
    "molmod.units.angstrom": {
     "line number": [
      103,
      104,
      105,
      106,
      110,
      111,
      112,
      113,
      118,
      124,
      125,
      126,
      127,
      131,
      132,
      133,
      134,
      139,
      145,
      146,
      147,
      148,
      152,
      153,
      154,
      155,
      160,
      173,
      174,
      175,
      176
     ]
    },
    "molmod.units.centimeter": {
     "line number": [
      119,
      140,
      161,
      182
     ]
    },
    "molmod.units.deg": {
     "line number": [
      114,
      135,
      156,
      177
     ]
    },
    "molmod.units.electronvolt": {
     "line number": [
      143,
      152,
      153
     ]
    },
    "molmod.units.femtosecond": {
     "line number": [
      107,
      112,
      113,
      128,
      133,
      134,
      139,
      149,
      154,
      155,
      160
     ]
    },
    "molmod.units.gram": {
     "line number": [
      119,
      140,
      161,
      182
     ]
    },
    "molmod.units.kcalmol": {
     "line number": [
      122,
      131,
      132,
      164,
      173,
      174
     ]
    },
    "molmod.units.kjmol": {
     "line number": [
      101,
      110,
      111
     ]
    },
    "molmod.units.nanometer": {
     "line number": [
      166,
      167,
      168,
      169,
      181
     ]
    },
    "molmod.units.picosecond": {
     "line number": [
      118,
      170,
      175,
      176,
      181
     ]
    },
    "object": {
     "line number": [
      85
     ]
    },
    "property": {
     "line number": [
      228,
      229,
      230,
      231,
      232,
      240,
      241,
      242,
      243,
      244,
      245,
      246,
      247,
      248,
      249,
      250,
      251,
      252
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.log.ScreenLog.__call__": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      267
     ]
    },
    "ValueError": {
     "line number": [
      285
     ]
    },
    "len": {
     "line number": [
      283,
      288,
      289,
      302
     ]
    },
    "str": {
     "line number": [
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.ScreenLog.__init__": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "molmod.log.sys": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.ScreenLog._enter": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      331
     ]
    },
    "len": {
     "line number": [
      330
     ]
    },
    "self.add_newline": {
     "line number": [
      334
     ]
    },
    "self.margin": {
     "line number": [
      330,
      331,
      333
     ]
    },
    "self.prefix": {
     "line number": [
      332,
      333
     ]
    },
    "self.stack.append": {
     "line number": [
      332
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.ScreenLog._exit": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": {
    "self._active": {
     "line number": [
      338
     ]
    },
    "self.add_newline": {
     "line number": [
      339
     ]
    },
    "self.prefix": {
     "line number": [
      337
     ]
    },
    "self.stack.pop": {
     "line number": [
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.ScreenLog._pass_color_code": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "molmod.log.ScreenLog._print_basic_info": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": {
    "molmod.log.datetime": {
     "line number": [
      380
     ]
    },
    "molmod.log.getpass": {
     "line number": [
      378
     ]
    },
    "molmod.log.os": {
     "line number": [
      383
     ]
    },
    "molmod.log.platform": {
     "line number": [
      379
     ]
    },
    "molmod.log.sys": {
     "line number": [
      381,
      384
     ]
    },
    "self": {
     "line number": [
      378,
      379,
      380,
      381,
      382,
      383,
      384
     ]
    },
    "self.do_low": {
     "line number": [
      376
     ]
    },
    "self.name.ljust": {
     "line number": [
      382
     ]
    },
    "self.section": {
     "line number": [
      377
     ]
    },
    "self.version": {
     "line number": [
      382
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.ScreenLog.blank": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": {
    "self._file.write": {
     "line number": [
      327
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.ScreenLog.center": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      317,
      320
     ]
    },
    "ValueError": {
     "line number": [
      323
     ]
    },
    "len": {
     "line number": [
      313,
      315,
      322,
      322,
      324
     ]
    },
    "self": {
     "line number": [
      324
     ]
    },
    "self.width": {
     "line number": [
      322,
      324
     ]
    },
    "str": {
     "line number": [
      321
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.ScreenLog.hline": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": {
    "self": {
     "line number": [
      310
     ]
    },
    "self.width": {
     "line number": [
      310
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.ScreenLog.print_footer": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": {
    "print": {
     "line number": [
      373
     ]
    },
    "self": {
     "line number": [
      372
     ]
    },
    "self._active": {
     "line number": [
      369
     ]
    },
    "self._file": {
     "line number": [
      373
     ]
    },
    "self._print_basic_info": {
     "line number": [
      370
     ]
    },
    "self.do_warning": {
     "line number": [
      369
     ]
    },
    "self.foot_banner": {
     "line number": [
      373
     ]
    },
    "self.timer._stop": {
     "line number": [
      371
     ]
    },
    "self.timer.report": {
     "line number": [
      372
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.ScreenLog.print_header": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "molmod.log.sys": {
     "line number": [
      360
     ]
    },
    "print": {
     "line number": [
      364
     ]
    },
    "self": {
     "line number": [
      366
     ]
    },
    "self._active": {
     "line number": [
      362,
      363
     ]
    },
    "self._file": {
     "line number": [
      364
     ]
    },
    "self._print_basic_info": {
     "line number": [
      365
     ]
    },
    "self.do_warning": {
     "line number": [
      362
     ]
    },
    "self.head_banner": {
     "line number": [
      364
     ]
    },
    "self.unitsys.log_info": {
     "line number": [
      366
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.ScreenLog.print_header.excepthook_wrapper": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": {
    "molmod.log.sys": {
     "line number": [
      359
     ]
    },
    "self.set_level": {
     "line number": [
      358
     ]
    },
    "self.silent": {
     "line number": [
      358
     ]
    },
    "type": {
     "line number": [
      359
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.ScreenLog.section": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": {
    "contextlib.contextmanager": {
     "line number": [
      341
     ]
    },
    "self._enter": {
     "line number": [
      343
     ]
    },
    "self._exit": {
     "line number": [
      347
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.ScreenLog.set_file": {
  "data": {
   "lineno": 254
  },
  "type": "function"
 },
 "molmod.log.ScreenLog.set_level": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.ScreenLog.set_unitsys": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": {
    "self": {
     "line number": [
      351
     ]
    },
    "self._active": {
     "line number": [
      352
     ]
    },
    "self.unitsys": {
     "line number": [
      350
     ]
    },
    "self.unitsys.apply": {
     "line number": [
      351
     ]
    },
    "self.unitsys.log_info": {
     "line number": [
      353
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.ScreenLog.warn": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "self": {
     "line number": [
      307
     ]
    },
    "str": {
     "line number": [
      307
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.SubTimer": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": {
    "object": {
     "line number": [
      402
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.log.SubTimer.__init__": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": {
    "molmod.log.Timer": {
     "line number": [
      405,
      406
     ]
    },
    "self.label": {
     "line number": [
      404
     ]
    },
    "self.own": {
     "line number": [
      406
     ]
    },
    "self.total": {
     "line number": [
      405
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.SubTimer.start": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": {
    "self.own.start": {
     "line number": [
      410
     ]
    },
    "self.total.start": {
     "line number": [
      409
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.SubTimer.start_sub": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": {
    "self.own.stop": {
     "line number": [
      413
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.SubTimer.stop": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": {
    "self.own.stop": {
     "line number": [
      419
     ]
    },
    "self.total.stop": {
     "line number": [
      420
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.SubTimer.stop_sub": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": {
    "self.own.start": {
     "line number": [
      416
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.Timer": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": {
    "object": {
     "line number": [
      387
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.log.Timer.__init__": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": {
    "self._start": {
     "line number": [
      390
     ]
    },
    "self.cpu": {
     "line number": [
      389
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.Timer.start": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": {
    "self._start": {
     "line number": [
      393,
      394
     ]
    },
    "time.clock": {
     "line number": [
      394
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.Timer.stop": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": {
    "self._start": {
     "line number": [
      397,
      398,
      399
     ]
    },
    "self.cpu": {
     "line number": [
      398
     ]
    },
    "time.clock": {
     "line number": [
      398
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.TimerGroup": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": {
    "object": {
     "line number": [
      423
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.log.TimerGroup.__init__": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": {
    "self._stack": {
     "line number": [
      426
     ]
    },
    "self._start": {
     "line number": [
      427
     ]
    },
    "self.parts": {
     "line number": [
      425
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.TimerGroup._start": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": {
    "len": {
     "line number": [
      450
     ]
    },
    "molmod.log.SubTimer": {
     "line number": [
      446
     ]
    },
    "self._stack": {
     "line number": [
      450
     ]
    },
    "self._stack.append": {
     "line number": [
      453
     ]
    },
    "self._stack.start_sub": {
     "line number": [
      451
     ]
    },
    "self.parts": {
     "line number": [
      447
     ]
    },
    "self.parts.get": {
     "line number": [
      444
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.TimerGroup._stop": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": {
    "len": {
     "line number": [
      459
     ]
    },
    "self._stack": {
     "line number": [
      459
     ]
    },
    "self._stack.pop": {
     "line number": [
      456
     ]
    },
    "self._stack.stop_sub": {
     "line number": [
      460
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.TimerGroup.get_max_own_cpu": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": {
    "self.parts.values": {
     "line number": [
      464
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.TimerGroup.report": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": {
    "int": {
     "line number": [
      483
     ]
    },
    "log": {
     "line number": [
      474,
      476,
      486
     ]
    },
    "log.hline": {
     "line number": [
      475,
      477,
      490
     ]
    },
    "log.section": {
     "line number": [
      473
     ]
    },
    "log.width": {
     "line number": [
      478
     ]
    },
    "self.get_max_own_cpu": {
     "line number": [
      470
     ]
    },
    "self.parts.items": {
     "line number": [
      479
     ]
    },
    "sorted": {
     "line number": [
      479
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.TimerGroup.reset": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": {
    "self.parts.values": {
     "line number": [
      430
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.TimerGroup.section": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": {
    "contextlib.contextmanager": {
     "line number": [
      434
     ]
    },
    "self._start": {
     "line number": [
      436
     ]
    },
    "self._stop": {
     "line number": [
      440
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.Unit": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "object": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.log.Unit.__call__": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "molmod.log.Unit.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "format": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.UnitSystem": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "object": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.log.UnitSystem.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      66
     ]
    },
    "enumerate": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.UnitSystem.apply": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "molmod.log.UnitSystem.log_info": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "log": {
     "line number": [
      71,
      73,
      76,
      78
     ]
    },
    "log.hline": {
     "line number": [
      72,
      74,
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.log.__all__": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "molmod.log.amu": {
  "data": {
   "shadows": "molmod.units.amu"
  },
  "type": "import"
 },
 "molmod.log.angstrom": {
  "data": {
   "shadows": "molmod.units.angstrom"
  },
  "type": "import"
 },
 "molmod.log.centimeter": {
  "data": {
   "shadows": "molmod.units.centimeter"
  },
  "type": "import"
 },
 "molmod.log.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "molmod.log.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "molmod.log.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "molmod.log.deg": {
  "data": {
   "shadows": "molmod.units.deg"
  },
  "type": "import"
 },
 "molmod.log.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.log.electronvolt": {
  "data": {
   "shadows": "molmod.units.electronvolt"
  },
  "type": "import"
 },
 "molmod.log.femtosecond": {
  "data": {
   "shadows": "molmod.units.femtosecond"
  },
  "type": "import"
 },
 "molmod.log.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "molmod.log.getpass": {
  "data": {
   "shadows": "getpass"
  },
  "type": "import"
 },
 "molmod.log.gram": {
  "data": {
   "shadows": "molmod.units.gram"
  },
  "type": "import"
 },
 "molmod.log.kcalmol": {
  "data": {
   "shadows": "molmod.units.kcalmol"
  },
  "type": "import"
 },
 "molmod.log.kjmol": {
  "data": {
   "shadows": "molmod.units.kjmol"
  },
  "type": "import"
 },
 "molmod.log.locale": {
  "data": {
   "shadows": "locale"
  },
  "type": "import"
 },
 "molmod.log.nanometer": {
  "data": {
   "shadows": "molmod.units.nanometer"
  },
  "type": "import"
 },
 "molmod.log.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "molmod.log.picosecond": {
  "data": {
   "shadows": "molmod.units.picosecond"
  },
  "type": "import"
 },
 "molmod.log.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "molmod.log.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "molmod.log.process_time": {
  "data": {
   "shadows": "time.clock"
  },
  "type": "import"
 },
 "molmod.log.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "molmod.minimizer": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      68
     ]
    },
    "numpy.sqrt": {
     "line number": [
      241
     ]
    }
   }
  },
  "type": "module"
 },
 "molmod.minimizer.ConjugateGradient": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "molmod.minimizer.SearchDirection": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.minimizer.ConjugateGradient.__init__": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "molmod.minimizer.SearchDirection": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.ConjugateGradient._beta": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      185,
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.ConjugateGradient._update_cg": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "molmod.minimizer.ConjugateGradient._update_sd": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "molmod.minimizer.ConjugateGradient.is_sd": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "molmod.minimizer.ConjugateGradient.reset": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "molmod.minimizer.ConjugateGradient.update": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "molmod.minimizer.ConstraintError": {
  "data": {
   "lineno": 1025,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      1025
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.minimizer.Constraints": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": {
    "object": {
     "line number": [
      1029
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.minimizer.Constraints.__init__": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      1071
     ]
    },
    "len": {
     "line number": [
      1071
     ]
    },
    "numpy.zeros": {
     "line number": [
      1071
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.Constraints._compute_equations": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      1091
     ]
    },
    "equation": {
     "line number": [
      1092
     ]
    },
    "float": {
     "line number": [
      1107,
      1108
     ]
    },
    "int": {
     "line number": [
      1109
     ]
    },
    "len": {
     "line number": [
      1093,
      1102
     ]
    },
    "numpy.array": {
     "line number": [
      1107,
      1108,
      1109
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1106
     ]
    },
    "print": {
     "line number": [
      1088,
      1089,
      1111,
      1113,
      1115
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.Constraints._fast_shake": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      1188
     ]
    },
    "molmod.minimizer.ConstraintError": {
     "line number": [
      1192
     ]
    },
    "numpy.dot": {
     "line number": [
      1178,
      1178
     ]
    },
    "numpy.linalg.svd": {
     "line number": [
      1162
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.Constraints._rough_shake": {
  "data": {
   "lineno": 1118,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      1136
     ]
    },
    "builtins.range": {
     "line number": [
      1132
     ]
    },
    "len": {
     "line number": [
      1132
     ]
    },
    "numpy.array": {
     "line number": [
      1135
     ]
    },
    "numpy.dot": {
     "line number": [
      1133
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.Constraints.free_shake": {
  "data": {
   "lineno": 1196,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1221
     ]
    },
    "molmod.minimizer.ConstraintError": {
     "line number": [
      1220
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.Constraints.project": {
  "data": {
   "lineno": 1249,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      1277
     ]
    },
    "len": {
     "line number": [
      1266
     ]
    },
    "molmod.minimizer.ConstraintError": {
     "line number": [
      1299
     ]
    },
    "numpy.dot": {
     "line number": [
      1276,
      1282,
      1288,
      1294,
      1294
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      1261
     ]
    },
    "numpy.linalg.svd": {
     "line number": [
      1289
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.Constraints.safe_shake": {
  "data": {
   "lineno": 1223
  },
  "type": "function"
 },
 "molmod.minimizer.Constraints.safe_shake.extra_equation": {
  "data": {
   "lineno": 1241,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      1243,
      1243
     ]
    },
    "fun": {
     "line number": [
      1242
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.ConvergenceCondition": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": {
    "object": {
     "line number": [
      788
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.minimizer.ConvergenceCondition.__call__": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      872,
      874,
      876
     ]
    },
    "check_threshold": {
     "line number": [
      871,
      872,
      873,
      874,
      875,
      876
     ]
    },
    "numpy.sqrt": {
     "line number": [
      871,
      873,
      875
     ]
    },
    "safe_divide": {
     "line number": [
      875,
      876
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.ConvergenceCondition.__call__.check_threshold": {
  "data": {
   "lineno": 854
  },
  "type": "function"
 },
 "molmod.minimizer.ConvergenceCondition.__call__.safe_divide": {
  "data": {
   "lineno": 865
  },
  "type": "function"
 },
 "molmod.minimizer.ConvergenceCondition.__init__": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      815
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.ConvergenceCondition.get_header": {
  "data": {
   "lineno": 823
  },
  "type": "function"
 },
 "molmod.minimizer.DiagonalPreconditioner": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": {
    "molmod.minimizer.Preconditioner": {
     "line number": [
      620
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.minimizer.DiagonalPreconditioner.__init__": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": {
    "fun": {
     "line number": [
      655
     ]
    },
    "molmod.minimizer.Preconditioner": {
     "line number": [
      655
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.DiagonalPreconditioner.do": {
  "data": {
   "lineno": 696
  },
  "type": "function"
 },
 "molmod.minimizer.DiagonalPreconditioner.undo": {
  "data": {
   "lineno": 706
  },
  "type": "function"
 },
 "molmod.minimizer.DiagonalPreconditioner.update": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      688
     ]
    },
    "builtins.range": {
     "line number": [
      679
     ]
    },
    "float": {
     "line number": [
      678,
      690
     ]
    },
    "len": {
     "line number": [
      676
     ]
    },
    "molmod.minimizer.Preconditioner": {
     "line number": [
      673
     ]
    },
    "numpy.ones": {
     "line number": [
      678,
      690
     ]
    },
    "numpy.sqrt": {
     "line number": [
      688
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.FullPreconditioner": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": {
    "molmod.minimizer.Preconditioner": {
     "line number": [
      717
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.minimizer.FullPreconditioner.__init__": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": {
    "fun": {
     "line number": [
      739
     ]
    },
    "molmod.minimizer.Preconditioner": {
     "line number": [
      739
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.FullPreconditioner.do": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      775
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.FullPreconditioner.undo": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      785
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.FullPreconditioner.update": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      762
     ]
    },
    "molmod.minimizer.Preconditioner": {
     "line number": [
      758
     ]
    },
    "molmod.minimizer.compute_fd_hessian": {
     "line number": [
      760
     ]
    },
    "numpy.linalg.eigh": {
     "line number": [
      761
     ]
    },
    "numpy.sqrt": {
     "line number": [
      762
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.FunWrapper": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": {
    "object": {
     "line number": [
      985
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.minimizer.FunWrapper.__call__": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      1014
     ]
    },
    "len": {
     "line number": [
      1014
     ]
    },
    "numpy.zeros": {
     "line number": [
      1013
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.FunWrapper.__init__": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": {
    "fun": {
     "line number": [
      1004
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.GoldenLineSearch": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": {
    "molmod.minimizer.LineSearch": {
     "line number": [
      283
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.minimizer.GoldenLineSearch.__call__": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": {
    "fun": {
     "line number": [
      330,
      331,
      335,
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.GoldenLineSearch.__init__": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      298
     ]
    },
    "molmod.minimizer.LineSearch": {
     "line number": [
      301
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.GoldenLineSearch._bracket": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": {
    "fun": {
     "line number": [
      344,
      352,
      365,
      374
     ]
    },
    "molmod.minimizer.phi": {
     "line number": [
      351,
      364,
      373
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.GoldenLineSearch._golden": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      395
     ]
    },
    "fun": {
     "line number": [
      388
     ]
    },
    "molmod.minimizer.phi": {
     "line number": [
      387,
      387
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.LineSearch": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "object": {
     "line number": [
      244
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.minimizer.LineSearch.__call__": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      280
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.LineSearch.__init__": {
  "data": {
   "lineno": 247
  },
  "type": "function"
 },
 "molmod.minimizer.LineSearch.limit_step": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": {
    "numpy.clip": {
     "line number": [
      259
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.LineWrapper": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": {
    "object": {
     "line number": [
      937
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.minimizer.LineWrapper.__call__": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      976
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.LineWrapper.__init__": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": {
    "fun": {
     "line number": [
      955
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.LineWrapper.configure": {
  "data": {
   "lineno": 961
  },
  "type": "function"
 },
 "molmod.minimizer.Minimizer": {
  "data": {
   "lineno": 1305,
   "symbols_in_volume": {
    "object": {
     "line number": [
      1305
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.minimizer.Minimizer.__init__": {
  "data": {
   "lineno": 1311,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1356
     ]
    },
    "fun": {
     "line number": [
      1359,
      1360,
      1363,
      1364
     ]
    },
    "isinstance": {
     "line number": [
      1359
     ]
    },
    "len": {
     "line number": [
      1355
     ]
    },
    "molmod.minimizer.FunWrapper": {
     "line number": [
      1363
     ]
    },
    "molmod.minimizer.LineWrapper": {
     "line number": [
      1364
     ]
    },
    "molmod.minimizer.Preconditioner": {
     "line number": [
      1359
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.Minimizer._line_opt": {
  "data": {
   "lineno": 1527,
   "symbols_in_volume": {
    "matplotlib.pyplot.clf": {
     "line number": [
      1558
     ]
    },
    "matplotlib.pyplot.plot": {
     "line number": [
      1561
     ]
    },
    "matplotlib.pyplot.savefig": {
     "line number": [
      1571
     ]
    },
    "matplotlib.pyplot.title": {
     "line number": [
      1568
     ]
    },
    "matplotlib.pyplot.xlabel": {
     "line number": [
      1569
     ]
    },
    "matplotlib.pyplot.xlim": {
     "line number": [
      1562
     ]
    },
    "matplotlib.pyplot.ylabel": {
     "line number": [
      1570
     ]
    },
    "matplotlib.pyplot.ylim": {
     "line number": [
      1567
     ]
    },
    "molmod.minimizer.ConstraintError": {
     "line number": [
      1533
     ]
    },
    "molmod.minimizer.datetime": {
     "line number": [
      1571
     ]
    },
    "numpy.arange": {
     "line number": [
      1559
     ]
    },
    "numpy.array": {
     "line number": [
      1560
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      1536,
      1545
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.Minimizer._print_header": {
  "data": {
   "lineno": 1506,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1515,
      1517
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.Minimizer._reset_state": {
  "data": {
   "lineno": 1575
  },
  "type": "function"
 },
 "molmod.minimizer.Minimizer._run": {
  "data": {
   "lineno": 1398
  },
  "type": "function"
 },
 "molmod.minimizer.Minimizer._screen": {
  "data": {
   "lineno": 1519,
   "symbols_in_volume": {
    "print": {
     "line number": [
      1523,
      1525
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.Minimizer.get_final": {
  "data": {
   "lineno": 1391
  },
  "type": "function"
 },
 "molmod.minimizer.Minimizer.initialize": {
  "data": {
   "lineno": 1405,
   "symbols_in_volume": {
    "molmod.minimizer.ConstraintError": {
     "line number": [
      1410,
      1417
     ]
    },
    "time.clock": {
     "line number": [
      1420
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.Minimizer.propagate": {
  "data": {
   "lineno": 1422,
   "symbols_in_volume": {
    "molmod.minimizer.ConstraintError": {
     "line number": [
      1443,
      1450,
      1463
     ]
    },
    "time.clock": {
     "line number": [
      1480
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.NewtonLineSearch": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": {
    "molmod.minimizer.LineSearch": {
     "line number": [
      399
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.minimizer.NewtonLineSearch.__call__": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      470,
      470,
      487,
      489,
      489,
      489
     ]
    },
    "fun": {
     "line number": [
      455,
      457,
      458,
      469,
      494,
      495,
      514
     ]
    },
    "min": {
     "line number": [
      510
     ]
    },
    "numpy.sign": {
     "line number": [
      511
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.NewtonLineSearch.__init__": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": {
    "molmod.minimizer.LineSearch": {
     "line number": [
      431
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.Preconditioner": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": {
    "object": {
     "line number": [
      524
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.minimizer.Preconditioner.__call__": {
  "data": {
   "lineno": 565
  },
  "type": "function"
 },
 "molmod.minimizer.Preconditioner.__init__": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": {
    "fun": {
     "line number": [
      559
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.Preconditioner.do": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      610
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.Preconditioner.undo": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      617
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.Preconditioner.update": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": {
    "numpy.sqrt": {
     "line number": [
      599
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.QuasiNewton": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": {
    "molmod.minimizer.SearchDirection": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.minimizer.QuasiNewton.__init__": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "molmod.minimizer.SearchDirection": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.QuasiNewton.is_sd": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "molmod.minimizer.QuasiNewton.reset": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "molmod.minimizer.QuasiNewton.update": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      221
     ]
    },
    "float": {
     "line number": [
      213
     ]
    },
    "len": {
     "line number": [
      207
     ]
    },
    "numpy.dot": {
     "line number": [
      216,
      221,
      225,
      225
     ]
    },
    "numpy.identity": {
     "line number": [
      213
     ]
    },
    "numpy.outer": {
     "line number": [
      222,
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.SearchDirection": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "object": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.minimizer.SearchDirection.__init__": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "molmod.minimizer.SearchDirection.is_sd": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.SearchDirection.reset": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.SearchDirection.update": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.SteepestDescent": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "molmod.minimizer.SearchDirection": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.minimizer.SteepestDescent.__init__": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "molmod.minimizer.SearchDirection": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.SteepestDescent.is_sd": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "molmod.minimizer.SteepestDescent.reset": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "molmod.minimizer.SteepestDescent.update": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "molmod.minimizer.StopLossCondition": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": {
    "object": {
     "line number": [
      881
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.minimizer.StopLossCondition.__call__": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": {
    "numpy.sqrt": {
     "line number": [
      922,
      929
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.StopLossCondition.__init__": {
  "data": {
   "lineno": 883
  },
  "type": "function"
 },
 "molmod.minimizer.StopLossCondition.reset": {
  "data": {
   "lineno": 906
  },
  "type": "function"
 },
 "molmod.minimizer.__all__": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "molmod.minimizer.check_anagrad": {
  "data": {
   "lineno": 1580,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      1608
     ]
    },
    "abs": {
     "line number": [
      1607
     ]
    },
    "builtins.range": {
     "line number": [
      1601
     ]
    },
    "fun": {
     "line number": [
      1600,
      1606,
      1606
     ]
    },
    "len": {
     "line number": [
      1599
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.check_delta": {
  "data": {
   "lineno": 1611,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      1670
     ]
    },
    "abs": {
     "line number": [
      1654
     ]
    },
    "fun": {
     "line number": [
      1645,
      1646
     ]
    },
    "hasattr": {
     "line number": [
      1651
     ]
    },
    "norm": {
     "line number": [
      1657,
      1658,
      1659
     ]
    },
    "numpy.array": {
     "line number": [
      1660,
      1661,
      1662
     ]
    },
    "numpy.dot": {
     "line number": [
      1655
     ]
    },
    "numpy.floor": {
     "line number": [
      1650
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      1652
     ]
    },
    "numpy.median": {
     "line number": [
      1665
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.compute_fd_hessian": {
  "data": {
   "lineno": 1681,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      1718
     ]
    },
    "compute_gradient": {
     "line number": [
      1723,
      1723
     ]
    },
    "float": {
     "line number": [
      1717
     ]
    },
    "len": {
     "line number": [
      1702
     ]
    },
    "numpy.zeros": {
     "line number": [
      1717
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.compute_fd_hessian.compute_gradient": {
  "data": {
   "lineno": 1704,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      1709
     ]
    },
    "float": {
     "line number": [
      1708
     ]
    },
    "fun": {
     "line number": [
      1706,
      1714,
      1714
     ]
    },
    "numpy.zeros": {
     "line number": [
      1708
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.minimizer.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "molmod.minimizer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.minimizer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.minimizer.phi": {
  "data": {
   "lineno": 241
  },
  "type": "constant"
 },
 "molmod.minimizer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "molmod.minimizer.process_time": {
  "data": {
   "shadows": "time.clock"
  },
  "type": "import"
 },
 "molmod.minimizer.pt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "molmod.minimizer.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.molecular_graphs": {
  "data": {},
  "type": "module"
 },
 "molmod.molecular_graphs.BendingAnglePattern": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": {
    "molmod.graphs.CustomPattern": {
     "line number": [
      515
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.molecular_graphs.BendingAnglePattern.__init__": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": {
    "molmod.graphs.CustomPattern.__init__": {
     "line number": [
      524
     ]
    },
    "molmod.graphs.Graph": {
     "line number": [
      523
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecular_graphs.BondLongerThan": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": {
    "object": {
     "line number": [
      464
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.molecular_graphs.BondLongerThan.__call__": {
  "data": {
   "lineno": 476
  },
  "type": "function"
 },
 "molmod.molecular_graphs.BondLongerThan.__init__": {
  "data": {
   "lineno": 466
  },
  "type": "function"
 },
 "molmod.molecular_graphs.BondPattern": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": {
    "molmod.graphs.CustomPattern": {
     "line number": [
      503
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.molecular_graphs.BondPattern.__init__": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": {
    "molmod.graphs.CustomPattern.__init__": {
     "line number": [
      512
     ]
    },
    "molmod.graphs.Graph": {
     "line number": [
      511
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecular_graphs.CustomPattern": {
  "data": {
   "shadows": "molmod.graphs.CustomPattern"
  },
  "type": "import"
 },
 "molmod.molecular_graphs.DihedralAnglePattern": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": {
    "molmod.graphs.CustomPattern": {
     "line number": [
      527
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.molecular_graphs.DihedralAnglePattern.__init__": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": {
    "molmod.graphs.CustomPattern.__init__": {
     "line number": [
      536
     ]
    },
    "molmod.graphs.Graph": {
     "line number": [
      535
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecular_graphs.Graph": {
  "data": {
   "shadows": "molmod.graphs.Graph"
  },
  "type": "import"
 },
 "molmod.molecular_graphs.HasAtomNumber": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": {
    "object": {
     "line number": [
      348
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.molecular_graphs.HasAtomNumber.__call__": {
  "data": {
   "lineno": 358
  },
  "type": "function"
 },
 "molmod.molecular_graphs.HasAtomNumber.__init__": {
  "data": {
   "lineno": 351
  },
  "type": "function"
 },
 "molmod.molecular_graphs.HasNeighborNumbers": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": {
    "object": {
     "line number": [
      390
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.molecular_graphs.HasNeighborNumbers.__call__": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": {
    "len": {
     "line number": [
      413,
      413
     ]
    },
    "sorted": {
     "line number": [
      415
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecular_graphs.HasNeighborNumbers.__init__": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      400
     ]
    },
    "int": {
     "line number": [
      399
     ]
    },
    "isinstance": {
     "line number": [
      399
     ]
    },
    "list": {
     "line number": [
      401
     ]
    },
    "type": {
     "line number": [
      400
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecular_graphs.HasNeighbors": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": {
    "object": {
     "line number": [
      419
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.molecular_graphs.HasNeighbors.__call__": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": {
    "all_permutations": {
     "line number": [
      453
     ]
    },
    "crit": {
     "line number": [
      456
     ]
    },
    "len": {
     "line number": [
      450,
      450
     ]
    },
    "list": {
     "line number": [
      453
     ]
    },
    "zip": {
     "line number": [
      455
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecular_graphs.HasNeighbors.__call__.all_permutations": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": {
    "all_permutations": {
     "line number": [
      446
     ]
    },
    "builtins.range": {
     "line number": [
      445
     ]
    },
    "len": {
     "line number": [
      442,
      445
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecular_graphs.HasNeighbors.__init__": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      428
     ]
    },
    "hasattr": {
     "line number": [
      427
     ]
    },
    "list": {
     "line number": [
      429
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecular_graphs.HasNumNeighbors": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": {
    "object": {
     "line number": [
      369
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.molecular_graphs.HasNumNeighbors.__call__": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": {
    "len": {
     "line number": [
      387
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecular_graphs.HasNumNeighbors.__init__": {
  "data": {
   "lineno": 372
  },
  "type": "function"
 },
 "molmod.molecular_graphs.MolecularGraph": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "molmod.graphs.Graph": {
     "line number": [
      45
     ]
    },
    "molmod.utils.ReadOnlyAttribute": {
     "line number": [
      75,
      78,
      81
     ]
    },
    "numpy.floating": {
     "line number": [
      79
     ]
    },
    "numpy.ndarray": {
     "line number": [
      75,
      78
     ]
    },
    "numpy.signedinteger": {
     "line number": [
      76
     ]
    },
    "tuple": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.molecular_graphs.MolecularGraph.__init__": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      212
     ]
    },
    "float": {
     "line number": [
      214
     ]
    },
    "len": {
     "line number": [
      211,
      214,
      215
     ]
    },
    "molmod.graphs.Graph.__init__": {
     "line number": [
      215
     ]
    },
    "numpy.ones": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecular_graphs.MolecularGraph.__mul__": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      227
     ]
    },
    "builtins.range": {
     "line number": [
      230
     ]
    },
    "frozenset": {
     "line number": [
      232
     ]
    },
    "int": {
     "line number": [
      226,
      234,
      238
     ]
    },
    "isinstance": {
     "line number": [
      226
     ]
    },
    "len": {
     "line number": [
      234,
      238
     ]
    },
    "molmod.molecular_graphs.MolecularGraph": {
     "line number": [
      246
     ]
    },
    "numpy.zeros": {
     "line number": [
      234,
      238
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecular_graphs.MolecularGraph._check_numbers": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      57
     ]
    },
    "len": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecular_graphs.MolecularGraph._check_orders": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      63
     ]
    },
    "len": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecular_graphs.MolecularGraph._check_symbols": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      69,
      73
     ]
    },
    "isinstance": {
     "line number": [
      72
     ]
    },
    "len": {
     "line number": [
      68
     ]
    },
    "str": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecular_graphs.MolecularGraph.add_hydrogens": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      312,
      331
     ]
    },
    "frozenset": {
     "line number": [
      327
     ]
    },
    "int": {
     "line number": [
      315,
      330,
      334,
      337
     ]
    },
    "len": {
     "line number": [
      337
     ]
    },
    "list": {
     "line number": [
      310
     ]
    },
    "molmod.molecular_graphs.MolecularGraph": {
     "line number": [
      340
     ]
    },
    "numpy.zeros": {
     "line number": [
      334,
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecular_graphs.MolecularGraph.blob": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": {
    "molmod.graphs.cached": {
     "line number": [
      250
     ]
    },
    "str": {
     "line number": [
      253
     ]
    },
    "zip": {
     "line number": [
      254
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecular_graphs.MolecularGraph.from_blob": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      178
     ]
    },
    "cls": {
     "line number": [
      189
     ]
    },
    "int": {
     "line number": [
      182,
      186
     ]
    },
    "numpy.array": {
     "line number": [
      182,
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecular_graphs.MolecularGraph.from_geometry": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      163
     ]
    },
    "bool": {
     "line number": [
      159
     ]
    },
    "builtins.range": {
     "line number": [
      166,
      168,
      173
     ]
    },
    "classmethod": {
     "line number": [
      84
     ]
    },
    "cls": {
     "line number": [
      130,
      132,
      169,
      171
     ]
    },
    "enumerate": {
     "line number": [
      149,
      150
     ]
    },
    "frozenset": {
     "line number": [
      161
     ]
    },
    "len": {
     "line number": [
      159,
      166,
      168,
      173
     ]
    },
    "molmod.binning.PairSearchIntra": {
     "line number": [
      111
     ]
    },
    "molmod.bonds.bonds.bond_tolerance": {
     "line number": [
      113
     ]
    },
    "molmod.bonds.bonds.bonded": {
     "line number": [
      122
     ]
    },
    "molmod.bonds.bonds.max_length": {
     "line number": [
      113
     ]
    },
    "numpy.array": {
     "line number": [
      174
     ]
    },
    "numpy.dot": {
     "line number": [
      153
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      146
     ]
    },
    "numpy.ones": {
     "line number": [
      159
     ]
    },
    "set": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecular_graphs.MolecularGraph.get_edge_string": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": {
    "molmod.graphs.Graph.get_edge_string": {
     "line number": [
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecular_graphs.MolecularGraph.get_subgraph": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "molmod.graphs.Graph.get_subgraph": {
     "line number": [
      280
     ]
    },
    "molmod.molecular_graphs.MolecularGraph": {
     "line number": [
      292
     ]
    },
    "tuple": {
     "line number": [
      288
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecular_graphs.MolecularGraph.get_vertex_string": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": {
    "molmod.graphs.Graph.get_vertex_string": {
     "line number": [
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecular_graphs.NRingPattern": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": {
    "molmod.graphs.CustomPattern": {
     "line number": [
      563
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.molecular_graphs.NRingPattern.__init__": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      575
     ]
    },
    "molmod.graphs.CustomPattern.__init__": {
     "line number": [
      576
     ]
    },
    "molmod.graphs.Graph": {
     "line number": [
      575
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecular_graphs.NRingPattern.check_next_match": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": {
    "len": {
     "line number": [
      587,
      588,
      592,
      592,
      596,
      599,
      599
     ]
    },
    "list": {
     "line number": [
      586
     ]
    },
    "molmod.graphs.CustomPattern.check_next_match": {
     "line number": [
      580
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecular_graphs.NRingPattern.complete": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      613,
      626
     ]
    },
    "len": {
     "line number": [
      617,
      621,
      630,
      632,
      636,
      638
     ]
    },
    "list": {
     "line number": [
      616,
      629,
      635
     ]
    },
    "molmod.graphs.CustomPattern.complete": {
     "line number": [
      607
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecular_graphs.OutOfPlanePattern": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": {
    "molmod.graphs.CustomPattern": {
     "line number": [
      539
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.molecular_graphs.OutOfPlanePattern.__init__": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": {
    "molmod.graphs.CustomPattern.__init__": {
     "line number": [
      548
     ]
    },
    "molmod.graphs.Graph": {
     "line number": [
      547
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecular_graphs.PairSearchIntra": {
  "data": {
   "shadows": "molmod.binning.PairSearchIntra"
  },
  "type": "import"
 },
 "molmod.molecular_graphs.ReadOnlyAttribute": {
  "data": {
   "shadows": "molmod.utils.ReadOnlyAttribute"
  },
  "type": "import"
 },
 "molmod.molecular_graphs.TetraPattern": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": {
    "molmod.graphs.CustomPattern": {
     "line number": [
      551
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.molecular_graphs.TetraPattern.__init__": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": {
    "molmod.graphs.CustomPattern.__init__": {
     "line number": [
      560
     ]
    },
    "molmod.graphs.Graph": {
     "line number": [
      559
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecular_graphs.__all__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "molmod.molecular_graphs.atom_criteria": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      490
     ]
    },
    "int": {
     "line number": [
      493
     ]
    },
    "isinstance": {
     "line number": [
      493
     ]
    },
    "molmod.molecular_graphs.HasAtomNumber": {
     "line number": [
      494
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecular_graphs.bonds": {
  "data": {
   "shadows": "molmod.bonds.bonds"
  },
  "type": "import"
 },
 "molmod.molecular_graphs.cached": {
  "data": {
   "shadows": "molmod.graphs.cached"
  },
  "type": "import"
 },
 "molmod.molecular_graphs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.molecular_graphs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.molecular_graphs.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.molecules": {
  "data": {},
  "type": "module"
 },
 "molmod.molecules.FCHKFile": {
  "data": {
   "shadows": "molmod.io.FCHKFile"
  },
  "type": "import"
 },
 "molmod.molecules.MolecularGraph": {
  "data": {
   "shadows": "molmod.molecular_graphs.MolecularGraph"
  },
  "type": "import"
 },
 "molmod.molecules.Molecule": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "molmod.molecular_graphs.MolecularGraph": {
     "line number": [
      92
     ]
    },
    "molmod.unit_cells.UnitCell": {
     "line number": [
      96
     ]
    },
    "molmod.utils.ReadOnly": {
     "line number": [
      43
     ]
    },
    "molmod.utils.ReadOnlyAttribute": {
     "line number": [
      84,
      86,
      89,
      90,
      92,
      94,
      96
     ]
    },
    "numpy.floating": {
     "line number": [
      87,
      90
     ]
    },
    "numpy.ndarray": {
     "line number": [
      84,
      86,
      90
     ]
    },
    "numpy.signedinteger": {
     "line number": [
      85
     ]
    },
    "property": {
     "line number": [
      159
     ]
    },
    "str": {
     "line number": [
      89
     ]
    },
    "tuple": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.molecules.Molecule.__init__": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "molmod.molecules.Molecule._check_coordinates": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      55
     ]
    },
    "len": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecules.Molecule._check_graph": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      67,
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecules.Molecule._check_masses": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      61
     ]
    },
    "len": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecules.Molecule._check_symbols": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      78,
      82
     ]
    },
    "isinstance": {
     "line number": [
      81
     ]
    },
    "len": {
     "line number": [
      77
     ]
    },
    "str": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecules.Molecule.chemical_formula": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "molmod.periodic.periodic.symbol": {
     "line number": [
      199,
      201
     ]
    },
    "molmod.utils.cached": {
     "line number": [
      190
     ]
    },
    "sorted": {
     "line number": [
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecules.Molecule.com": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "molmod.utils.cached": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecules.Molecule.compute_rotsym": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      291,
      292
     ]
    },
    "molmod.molecular_graphs.MolecularGraph.from_geometry": {
     "line number": [
      288
     ]
    },
    "molmod.symmetry.compute_rotsym": {
     "line number": [
      290
     ]
    },
    "molmod.units.angstrom": {
     "line number": [
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecules.Molecule.distance_matrix": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "molmod.ext.molecules_distance_matrix": {
     "line number": [
      166
     ]
    },
    "molmod.utils.cached": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecules.Molecule.from_file": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      157
     ]
    },
    "classmethod": {
     "line number": [
      120
     ]
    },
    "molmod.io.FCHKFile": {
     "line number": [
      143
     ]
    },
    "molmod.io.SDFReader": {
     "line number": [
      150
     ]
    },
    "molmod.io.XYZReader": {
     "line number": [
      153
     ]
    },
    "molmod.io.load_cml": {
     "line number": [
      140
     ]
    },
    "molmod.io.load_pdb": {
     "line number": [
      147
     ]
    },
    "molmod.molecules.Molecule": {
     "line number": [
      155
     ]
    },
    "next": {
     "line number": [
      150,
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecules.Molecule.inertia_tensor": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      182
     ]
    },
    "float": {
     "line number": [
      181
     ]
    },
    "molmod.utils.cached": {
     "line number": [
      178
     ]
    },
    "numpy.outer": {
     "line number": [
      187
     ]
    },
    "numpy.zeros": {
     "line number": [
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecules.Molecule.mass": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "molmod.utils.cached": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecules.Molecule.rmsd": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      275
     ]
    },
    "molmod.transformations.fit_rmsd": {
     "line number": [
      276
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecules.Molecule.set_default_graph": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": {
    "molmod.molecular_graphs.MolecularGraph.from_geometry": {
     "line number": [
      220
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecules.Molecule.set_default_masses": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "molmod.periodic.periodic.mass": {
     "line number": [
      206
     ]
    },
    "numpy.array": {
     "line number": [
      206
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecules.Molecule.set_default_symbols": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "molmod.periodic.periodic.symbol": {
     "line number": [
      224
     ]
    },
    "tuple": {
     "line number": [
      224
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecules.Molecule.write_to_file": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      252
     ]
    },
    "molmod.io.XYZWriter": {
     "line number": [
      248
     ]
    },
    "molmod.io.dump_cml": {
     "line number": [
      238
     ]
    },
    "molmod.periodic.periodic": {
     "line number": [
      243
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.molecules.ReadOnly": {
  "data": {
   "shadows": "molmod.utils.ReadOnly"
  },
  "type": "import"
 },
 "molmod.molecules.ReadOnlyAttribute": {
  "data": {
   "shadows": "molmod.utils.ReadOnlyAttribute"
  },
  "type": "import"
 },
 "molmod.molecules.SDFReader": {
  "data": {
   "shadows": "molmod.io.SDFReader"
  },
  "type": "import"
 },
 "molmod.molecules.UnitCell": {
  "data": {
   "shadows": "molmod.unit_cells.UnitCell"
  },
  "type": "import"
 },
 "molmod.molecules.XYZReader": {
  "data": {
   "shadows": "molmod.io.XYZReader"
  },
  "type": "import"
 },
 "molmod.molecules.XYZWriter": {
  "data": {
   "shadows": "molmod.io.XYZWriter"
  },
  "type": "import"
 },
 "molmod.molecules.__all__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "molmod.molecules.angstrom": {
  "data": {
   "shadows": "molmod.units.angstrom"
  },
  "type": "import"
 },
 "molmod.molecules.cached": {
  "data": {
   "shadows": "molmod.utils.cached"
  },
  "type": "import"
 },
 "molmod.molecules.compute_rotsym": {
  "data": {
   "shadows": "molmod.symmetry.compute_rotsym"
  },
  "type": "import"
 },
 "molmod.molecules.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.molecules.dump_cml": {
  "data": {
   "shadows": "molmod.io.dump_cml"
  },
  "type": "import"
 },
 "molmod.molecules.fit_rmsd": {
  "data": {
   "shadows": "molmod.transformations.fit_rmsd"
  },
  "type": "import"
 },
 "molmod.molecules.load_cml": {
  "data": {
   "shadows": "molmod.io.load_cml"
  },
  "type": "import"
 },
 "molmod.molecules.load_pdb": {
  "data": {
   "shadows": "molmod.io.load_pdb"
  },
  "type": "import"
 },
 "molmod.molecules.molecules_distance_matrix": {
  "data": {
   "shadows": "molmod.ext.molecules_distance_matrix"
  },
  "type": "import"
 },
 "molmod.molecules.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.molecules.periodic": {
  "data": {
   "shadows": "molmod.periodic.periodic"
  },
  "type": "import"
 },
 "molmod.molecules.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.pairff": {
  "data": {},
  "type": "module"
 },
 "molmod.pairff.CoulombFF": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "molmod.pairff.PairFF": {
     "line number": [
      181
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.pairff.CoulombFF.__init__": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": {
    "molmod.pairff.PairFF": {
     "line number": [
      198
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.pairff.CoulombFF.efield": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      318
     ]
    },
    "float": {
     "line number": [
      317
     ]
    },
    "numpy.zeros": {
     "line number": [
      317
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.pairff.CoulombFF.efield_component": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      304
     ]
    },
    "numpy.dot": {
     "line number": [
      312
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.pairff.CoulombFF.efield_point": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      291
     ]
    },
    "numpy.dot": {
     "line number": [
      299
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      293
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.pairff.CoulombFF.esp": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      285
     ]
    },
    "float": {
     "line number": [
      284
     ]
    },
    "numpy.zeros": {
     "line number": [
      284
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.pairff.CoulombFF.esp_component": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      273
     ]
    },
    "numpy.dot": {
     "line number": [
      279
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.pairff.CoulombFF.esp_point": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      261
     ]
    },
    "numpy.dot": {
     "line number": [
      268
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.pairff.CoulombFF.yield_pair_energies": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      215,
      216,
      216,
      218,
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.pairff.CoulombFF.yield_pair_gradients": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      234,
      235,
      235
     ]
    },
    "numpy.zeros": {
     "line number": [
      227,
      234
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.pairff.CoulombFF.yield_pair_hessians": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      253
     ]
    },
    "numpy.outer": {
     "line number": [
      254,
      254
     ]
    },
    "numpy.zeros": {
     "line number": [
      247,
      253,
      256,
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.pairff.DispersionFF": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "molmod.pairff.PairFF": {
     "line number": [
      324
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.pairff.DispersionFF.__init__": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": {
    "molmod.pairff.PairFF": {
     "line number": [
      341
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.pairff.DispersionFF.yield_pair_energies": {
  "data": {
   "lineno": 344
  },
  "type": "function"
 },
 "molmod.pairff.DispersionFF.yield_pair_gradients": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      354
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.pairff.DispersionFF.yield_pair_hessians": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      360
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.pairff.ExpRepFF": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": {
    "molmod.pairff.PairFF": {
     "line number": [
      402
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.pairff.ExpRepFF.__init__": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": {
    "molmod.pairff.PairFF": {
     "line number": [
      421
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.pairff.ExpRepFF.yield_pair_energies": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": {
    "numpy.exp": {
     "line number": [
      430
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.pairff.ExpRepFF.yield_pair_gradients": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": {
    "numpy.exp": {
     "line number": [
      437
     ]
    },
    "numpy.zeros": {
     "line number": [
      437
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.pairff.ExpRepFF.yield_pair_hessians": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": {
    "numpy.exp": {
     "line number": [
      444
     ]
    },
    "numpy.zeros": {
     "line number": [
      444
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.pairff.PairFF": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "object": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.pairff.PairFF.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "len": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.pairff.PairFF.energy": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      106,
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.pairff.PairFF.gradient": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      125
     ]
    },
    "float": {
     "line number": [
      124
     ]
    },
    "numpy.zeros": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.pairff.PairFF.gradient_component": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      116
     ]
    },
    "float": {
     "line number": [
      115
     ]
    },
    "numpy.zeros": {
     "line number": [
      115
     ]
    },
    "zip": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.pairff.PairFF.gradient_flat": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "molmod.pairff.PairFF.hessian": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      167,
      168
     ]
    },
    "float": {
     "line number": [
      166
     ]
    },
    "numpy.zeros": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.pairff.PairFF.hessian_component": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      133
     ]
    },
    "float": {
     "line number": [
      131,
      143,
      157
     ]
    },
    "numpy.identity": {
     "line number": [
      143,
      157
     ]
    },
    "numpy.outer": {
     "line number": [
      144,
      145,
      158,
      159
     ]
    },
    "numpy.zeros": {
     "line number": [
      131
     ]
    },
    "zip": {
     "line number": [
      136,
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.pairff.PairFF.hessian_flat": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "molmod.pairff.PairFF.update_coordinates": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      80,
      81
     ]
    },
    "float": {
     "line number": [
      76,
      77,
      78,
      79
     ]
    },
    "len": {
     "line number": [
      75
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      84
     ]
    },
    "numpy.outer": {
     "line number": [
      89
     ]
    },
    "numpy.zeros": {
     "line number": [
      76,
      77,
      78,
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.pairff.PairFF.yield_pair_energies": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.pairff.PairFF.yield_pair_gradients": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.pairff.PairFF.yield_pair_hessians": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.pairff.PauliFF": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": {
    "molmod.pairff.PairFF": {
     "line number": [
      363
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.pairff.PauliFF.__init__": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": {
    "molmod.pairff.PairFF": {
     "line number": [
      380
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.pairff.PauliFF.yield_pair_energies": {
  "data": {
   "lineno": 383
  },
  "type": "function"
 },
 "molmod.pairff.PauliFF.yield_pair_gradients": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      393
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.pairff.PauliFF.yield_pair_hessians": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      399
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.pairff.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "molmod.pairff.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.pairff.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.pairff.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.periodic": {
  "data": {
   "symbols_in_volume": {
    "molmod.periodic.PeriodicData": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "module"
 },
 "molmod.periodic.AtomInfo": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "object": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.periodic.PeriodicData": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "object": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.periodic.PeriodicData.__getitem__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      128
     ]
    },
    "str": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.periodic.PeriodicData.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      93
     ]
    },
    "append_convertor": {
     "line number": [
      104
     ]
    },
    "convertor": {
     "line number": [
      107,
      111
     ]
    },
    "float": {
     "line number": [
      68,
      69,
      70,
      71,
      72
     ]
    },
    "len": {
     "line number": [
      97
     ]
    },
    "molmod.periodic.AtomInfo": {
     "line number": [
      106
     ]
    },
    "molmod.periodic.pkg_resources": {
     "line number": [
      93
     ]
    },
    "molmod.units.angstrom": {
     "line number": [
      71
     ]
    },
    "molmod.units.centimeter": {
     "line number": [
      69
     ]
    },
    "molmod.units.gram": {
     "line number": [
      69
     ]
    },
    "molmod.units.picometer": {
     "line number": [
      72
     ]
    },
    "molmod.units.unified": {
     "line number": [
      68
     ]
    },
    "setattr": {
     "line number": [
      109,
      112
     ]
    },
    "zip": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.periodic.PeriodicData.__init__.append_convertor": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      91
     ]
    },
    "convertor": {
     "line number": [
      89
     ]
    },
    "eval": {
     "line number": [
      85
     ]
    },
    "float": {
     "line number": [
      83,
      89
     ]
    },
    "int": {
     "line number": [
      81
     ]
    },
    "str": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.periodic.PeriodicData.__len__": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "len": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.periodic.PeriodicData._add_atom_info": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "molmod.periodic.PeriodicData.iter_numbers": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "sorted": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.periodic.__all__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "molmod.periodic.periodic": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "molmod.periodic.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "molmod.periodic.units": {
  "data": {
   "shadows": "molmod.units"
  },
  "type": "import"
 },
 "molmod.quaternions": {
  "data": {},
  "type": "module"
 },
 "molmod.quaternions.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "molmod.quaternions.conjugate": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "molmod.quaternions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.quaternions.off_diagonals": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "molmod.quaternions.quaternion_product": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "float": {
     "line number": [
      47
     ]
    },
    "numpy.array": {
     "line number": [
      42
     ]
    },
    "numpy.dot": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.quaternions.quaternion_rotation": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "float": {
     "line number": [
      69
     ]
    },
    "numpy.array": {
     "line number": [
      65
     ]
    },
    "numpy.dot": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.quaternions.quaternion_to_rotation_matrix": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "float": {
     "line number": [
      108
     ]
    },
    "numpy.array": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.quaternions.rotation_matrix_to_quaternion": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      89
     ]
    },
    "float": {
     "line number": [
      88,
      98
     ]
    },
    "molmod.quaternions.off_diagonals": {
     "line number": [
      93
     ]
    },
    "numpy.array": {
     "line number": [
      98
     ]
    },
    "numpy.diagonal": {
     "line number": [
      86
     ]
    },
    "numpy.linalg.det": {
     "line number": [
      76
     ]
    },
    "numpy.sqrt": {
     "line number": [
      85,
      95,
      97
     ]
    },
    "numpy.trace": {
     "line number": [
      81
     ]
    },
    "numpy.zeros": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.randomize": {
  "data": {},
  "type": "module"
 },
 "molmod.randomize.Complete": {
  "data": {
   "shadows": "molmod.transformations.Complete"
  },
  "type": "import"
 },
 "molmod.randomize.GraphError": {
  "data": {
   "shadows": "molmod.graphs.GraphError"
  },
  "type": "import"
 },
 "molmod.randomize.MolecularDistortion": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "object": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.randomize.MolecularDistortion.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "molmod.transformations.Complete.cast": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.randomize.MolecularDistortion.apply": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "molmod.randomize.MolecularDistortion.read_from_file": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      59
     ]
    },
    "cls": {
     "line number": [
      72
     ]
    },
    "float": {
     "line number": [
      67
     ]
    },
    "int": {
     "line number": [
      71
     ]
    },
    "list": {
     "line number": [
      63,
      67
     ]
    },
    "molmod.transformations.Complete": {
     "line number": [
      70
     ]
    },
    "open": {
     "line number": [
      62
     ]
    },
    "set": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.randomize.MolecularDistortion.write_to_file": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "open": {
     "line number": [
      93
     ]
    },
    "print": {
     "line number": [
      94,
      95,
      96,
      97,
      98,
      99,
      100,
      101
     ]
    },
    "str": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.randomize.Molecule": {
  "data": {
   "shadows": "molmod.molecules.Molecule"
  },
  "type": "import"
 },
 "molmod.randomize.RandomBend": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "molmod.randomize.RandomManipulation": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.randomize.RandomBend.get_transformation": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "molmod.transformations.Complete.about_axis": {
     "line number": [
      185
     ]
    },
    "molmod.vectors.random_orthonormal": {
     "line number": [
      181
     ]
    },
    "numpy.cross": {
     "line number": [
      177
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      178,
      183
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.randomize.RandomDoubleStretch": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "molmod.randomize.RandomManipulation": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.randomize.RandomDoubleStretch.get_transformation": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "molmod.transformations.Translation": {
     "line number": [
      201
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      196,
      198
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.randomize.RandomManipulation": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "object": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.randomize.RandomManipulation.__init__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      119
     ]
    },
    "len": {
     "line number": [
      118,
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.randomize.RandomManipulation.apply": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "molmod.randomize.MolecularDistortion": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.randomize.RandomManipulation.get_transformation": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.randomize.RandomStretch": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "molmod.randomize.RandomManipulation": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.randomize.RandomStretch.get_transformation": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "molmod.transformations.Translation": {
     "line number": [
      149
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      147
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.randomize.RandomTorsion": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "molmod.randomize.RandomManipulation": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.randomize.RandomTorsion.get_transformation": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "molmod.transformations.Complete.about_axis": {
     "line number": [
      164
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      162
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.randomize.Translation": {
  "data": {
   "shadows": "molmod.transformations.Translation"
  },
  "type": "import"
 },
 "molmod.randomize.__all__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "molmod.randomize.check_nonbond": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      344,
      345
     ]
    },
    "frozenset": {
     "line number": [
      348
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      347
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.randomize.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "molmod.randomize.generate_manipulations": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": {
    "len": {
     "line number": [
      288,
      288,
      314,
      314
     ]
    },
    "molmod.randomize.RandomBend": {
     "line number": [
      296
     ]
    },
    "molmod.randomize.RandomDoubleStretch": {
     "line number": [
      311
     ]
    },
    "molmod.randomize.RandomStretch": {
     "line number": [
      285
     ]
    },
    "molmod.randomize.RandomTorsion": {
     "line number": [
      289,
      316,
      320
     ]
    },
    "molmod.randomize.iter_halfs_bend": {
     "line number": [
      295
     ]
    },
    "molmod.randomize.iter_halfs_bond": {
     "line number": [
      279
     ]
    },
    "molmod.randomize.iter_halfs_double": {
     "line number": [
      301
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      281,
      303,
      307
     ]
    },
    "numpy.pi": {
     "line number": [
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.randomize.iter_halfs_bend": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      218
     ]
    },
    "enumerate": {
     "line number": [
      220
     ]
    },
    "list": {
     "line number": [
      219
     ]
    },
    "molmod.graphs.GraphError": {
     "line number": [
      227,
      233
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.randomize.iter_halfs_bond": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": {
    "molmod.graphs.GraphError": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.randomize.iter_halfs_double": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      240
     ]
    },
    "molmod.graphs.GraphError": {
     "line number": [
      245
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.randomize.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.randomize.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "molmod.randomize.random_dimer": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      438,
      439
     ]
    },
    "float": {
     "line number": [
      416,
      436,
      437
     ]
    },
    "frozenset": {
     "line number": [
      440
     ]
    },
    "len": {
     "line number": [
      423,
      424,
      436,
      436,
      437,
      437
     ]
    },
    "molmod.molecules.Molecule": {
     "line number": [
      461
     ]
    },
    "molmod.transformations.Complete.about_axis": {
     "line number": [
      419
     ]
    },
    "molmod.vectors.random_unit": {
     "line number": [
      418,
      431
     ]
    },
    "numpy.concatenate": {
     "line number": [
      462,
      463
     ]
    },
    "numpy.dot": {
     "line number": [
      420
     ]
    },
    "numpy.pi": {
     "line number": [
      417
     ]
    },
    "numpy.random.randint": {
     "line number": [
      423,
      424
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      417,
      453
     ]
    },
    "numpy.subtract.outer": {
     "line number": [
      446,
      456
     ]
    },
    "numpy.zeros": {
     "line number": [
      416,
      436,
      437
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.randomize.random_orthonormal": {
  "data": {
   "shadows": "molmod.vectors.random_orthonormal"
  },
  "type": "import"
 },
 "molmod.randomize.random_unit": {
  "data": {
   "shadows": "molmod.vectors.random_unit"
  },
  "type": "import"
 },
 "molmod.randomize.randomize_molecule": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      361
     ]
    },
    "molmod.randomize.check_nonbond": {
     "line number": [
      363
     ]
    },
    "molmod.randomize.randomize_molecule_low": {
     "line number": [
      362
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.randomize.randomize_molecule_low": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": {
    "molmod.randomize.copy": {
     "line number": [
      370
     ]
    },
    "random.shuffle": {
     "line number": [
      371
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.randomize.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.randomize.sample": {
  "data": {
   "shadows": "random.sample"
  },
  "type": "import"
 },
 "molmod.randomize.shuffle": {
  "data": {
   "shadows": "random.shuffle"
  },
  "type": "import"
 },
 "molmod.randomize.single_random_manipulation": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      386
     ]
    },
    "molmod.randomize.check_nonbond": {
     "line number": [
      388
     ]
    },
    "molmod.randomize.single_random_manipulation_low": {
     "line number": [
      387
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.randomize.single_random_manipulation_low": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": {
    "random.sample": {
     "line number": [
      396
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.similarity": {
  "data": {},
  "type": "module"
 },
 "molmod.similarity.SimilarityDescriptor": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "object": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.similarity.SimilarityDescriptor.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "float": {
     "line number": [
      63
     ]
    },
    "int": {
     "line number": [
      64
     ]
    },
    "len": {
     "line number": [
      65,
      65
     ]
    },
    "molmod.ext.similarity_table_distances": {
     "line number": [
      63
     ]
    },
    "molmod.ext.similarity_table_labels": {
     "line number": [
      64
     ]
    },
    "numpy.lexsort": {
     "line number": [
      66
     ]
    },
    "print": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.similarity.SimilarityDescriptor.from_coordinates": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      98
     ]
    },
    "cls": {
     "line number": [
      109
     ]
    },
    "molmod.ext.molecules_distance_matrix": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.similarity.SimilarityDescriptor.from_molecular_graph": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      84
     ]
    },
    "cls": {
     "line number": [
      96
     ]
    },
    "int": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.similarity.SimilarityDescriptor.from_molecule": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      70
     ]
    },
    "cls": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.similarity.__all__": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "molmod.similarity.compute_similarity": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "molmod.ext.similarity_measure": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.similarity.molecules_distance_matrix": {
  "data": {
   "shadows": "molmod.ext.molecules_distance_matrix"
  },
  "type": "import"
 },
 "molmod.similarity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.similarity.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "molmod.similarity.similarity_measure": {
  "data": {
   "shadows": "molmod.ext.similarity_measure"
  },
  "type": "import"
 },
 "molmod.similarity.similarity_table_distances": {
  "data": {
   "shadows": "molmod.ext.similarity_table_distances"
  },
  "type": "import"
 },
 "molmod.similarity.similarity_table_labels": {
  "data": {
   "shadows": "molmod.ext.similarity_table_labels"
  },
  "type": "import"
 },
 "molmod.symmetry": {
  "data": {},
  "type": "module"
 },
 "molmod.symmetry.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "molmod.symmetry.angstrom": {
  "data": {
   "shadows": "molmod.units.angstrom"
  },
  "type": "import"
 },
 "molmod.symmetry.compute_rotsym": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "list": {
     "line number": [
      47
     ]
    },
    "molmod.transformations.fit_rmsd": {
     "line number": [
      49
     ]
    },
    "molmod.units.angstrom": {
     "line number": [
      33
     ]
    },
    "sorted": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.symmetry.fit_rmsd": {
  "data": {
   "shadows": "molmod.transformations.fit_rmsd"
  },
  "type": "import"
 },
 "molmod.test": {
  "data": {},
  "type": "module"
 },
 "molmod.test.common": {
  "data": {},
  "type": "module"
 },
 "molmod.test.common.BaseTestCase": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "molmod.test.common.unittest": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.test.common.BaseTestCase.assertArrayAlmostConstant": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.common.BaseTestCase.assertArrayAlmostZero": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.common.BaseTestCase.assertArrayConstant": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "molmod.test.common.BaseTestCase.assertArraysAlmostEqual": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      49,
      50,
      50,
      52,
      53,
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.common.BaseTestCase.assertArraysEqual": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "molmod.test.common.__all__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "molmod.test.common.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "molmod.test.common.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.test.common.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "molmod.test.common.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "molmod.test.common.tmpdir": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "contextlib.contextmanager": {
     "line number": [
      71
     ]
    },
    "molmod.test.common.shutil": {
     "line number": [
      77
     ]
    },
    "molmod.test.common.tempfile": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.common.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "molmod.test.test_binning": {
  "data": {},
  "type": "module"
 },
 "molmod.test.test_binning.BinningTestCase": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "molmod.test.test_binning.unittest": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.test.test_binning.BinningTestCase.test_distances_inter_random": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "PairSearchInter": {
     "line number": [
      199
     ]
    },
    "builtins.range": {
     "line number": [
      192
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      193,
      194,
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_binning.BinningTestCase.test_distances_inter_random_periodic": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "PairSearchInter": {
     "line number": [
      213
     ]
    },
    "builtins.range": {
     "line number": [
      205
     ]
    },
    "molmod.test.test_unit_cells.get_random_uc": {
     "line number": [
      208
     ]
    },
    "nose.plugins.skip.SkipTest": {
     "line number": [
      204
     ]
    },
    "numpy.random.randint": {
     "line number": [
      208
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      206,
      207,
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_binning.BinningTestCase.test_distances_intra_lau": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "PairSearchIntra": {
     "line number": [
      139
     ]
    },
    "XYZFile": {
     "line number": [
      134
     ]
    },
    "frozenset": {
     "line number": [
      137
     ]
    },
    "molmod.periodic.periodic.max_radius": {
     "line number": [
      135
     ]
    },
    "molmod.test.test_binning.pkg_resources": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_binning.BinningTestCase.test_distances_intra_lau_periodic": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "PairSearchIntra": {
     "line number": [
      151
     ]
    },
    "XYZFile": {
     "line number": [
      144
     ]
    },
    "frozenset": {
     "line number": [
      155
     ]
    },
    "molmod.periodic.periodic.max_radius": {
     "line number": [
      145
     ]
    },
    "molmod.test.test_binning.pkg_resources": {
     "line number": [
      144
     ]
    },
    "numpy.array": {
     "line number": [
      147,
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_binning.BinningTestCase.test_distances_intra_random": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "PairSearchIntra": {
     "line number": [
      169
     ]
    },
    "builtins.range": {
     "line number": [
      163
     ]
    },
    "frozenset": {
     "line number": [
      167
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      164,
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_binning.BinningTestCase.test_distances_intra_random_periodic": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "PairSearchIntra": {
     "line number": [
      181
     ]
    },
    "builtins.range": {
     "line number": [
      175
     ]
    },
    "frozenset": {
     "line number": [
      185
     ]
    },
    "molmod.test.test_unit_cells.get_random_uc": {
     "line number": [
      177
     ]
    },
    "nose.plugins.skip.SkipTest": {
     "line number": [
      174
     ]
    },
    "numpy.random.randint": {
     "line number": [
      177
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      176,
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_binning.BinningTestCase.verify_bins_inter_periodic": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "len": {
     "line number": [
      109,
      109
     ]
    },
    "nose.plugins.skip.SkipTest": {
     "line number": [
      106
     ]
    },
    "set": {
     "line number": [
      108,
      112
     ]
    },
    "str": {
     "line number": [
      115,
      115,
      116,
      116
     ]
    },
    "tuple": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_binning.BinningTestCase.verify_bins_intra_periodic": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "len": {
     "line number": [
      95,
      95
     ]
    },
    "nose.plugins.skip.SkipTest": {
     "line number": [
      93
     ]
    },
    "set": {
     "line number": [
      94,
      98
     ]
    },
    "str": {
     "line number": [
      101,
      101,
      102,
      102
     ]
    },
    "tuple": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_binning.BinningTestCase.verify_distances": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      47
     ]
    },
    "idcls": {
     "line number": [
      63
     ]
    },
    "iter_pairs": {
     "line number": [
      56
     ]
    },
    "len": {
     "line number": [
      45,
      46,
      48,
      48,
      75,
      78,
      81,
      88,
      89,
      90
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      60
     ]
    },
    "str": {
     "line number": [
      45
     ]
    },
    "tuple": {
     "line number": [
      66,
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_binning.BinningTestCase.verify_distances_inter": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "iter_pairs": {
     "line number": [
      131
     ]
    },
    "tuple": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_binning.BinningTestCase.verify_distances_inter.iter_pairs": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      128,
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_binning.BinningTestCase.verify_distances_intra": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "frozenset": {
     "line number": [
      124
     ]
    },
    "iter_pairs": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_binning.BinningTestCase.verify_distances_intra.iter_pairs": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      121,
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_binning.SkipTest": {
  "data": {
   "shadows": "nose.plugins.skip.SkipTest"
  },
  "type": "import"
 },
 "molmod.test.test_binning.__all__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "molmod.test.test_binning.get_random_uc": {
  "data": {
   "shadows": "molmod.test.test_unit_cells.get_random_uc"
  },
  "type": "import"
 },
 "molmod.test.test_binning.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.test.test_binning.periodic": {
  "data": {
   "shadows": "molmod.periodic.periodic"
  },
  "type": "import"
 },
 "molmod.test.test_binning.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "molmod.test.test_binning.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.test.test_binning.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "molmod.test.test_clusters": {
  "data": {},
  "type": "module"
 },
 "molmod.test.test_clusters.ClusterTestCase": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "molmod.test.test_clusters.unittest": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.test.test_clusters.ClusterTestCase.test_even_odd": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "ClusterFactory": {
     "line number": [
      39
     ]
    },
    "builtins.range": {
     "line number": [
      40
     ]
    },
    "len": {
     "line number": [
      52,
      54
     ]
    },
    "list": {
     "line number": [
      50
     ]
    },
    "numpy.array": {
     "line number": [
      50
     ]
    },
    "numpy.random.randint": {
     "line number": [
      41,
      42
     ]
    },
    "set": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_clusters.ClusterTestCase.test_rule_cluster": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "ClusterFactory": {
     "line number": [
      57
     ]
    },
    "RuleCluster": {
     "line number": [
      58,
      59,
      60
     ]
    },
    "len": {
     "line number": [
      62,
      63
     ]
    },
    "list": {
     "line number": [
      61
     ]
    },
    "set": {
     "line number": [
      66,
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_clusters.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "molmod.test.test_clusters.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.test.test_clusters.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.test.test_clusters.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "molmod.test.test_data": {
  "data": {},
  "type": "module"
 },
 "molmod.test.test_data.DataTestCase": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "molmod.test.test_data.unittest": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.test.test_data.DataTestCase.test_ame2003": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "molmod.isotopes.ame2003.masses": {
     "line number": [
      59,
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_data.DataTestCase.test_nubtab03": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "molmod.isotopes.nubtab03.abundances": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_data.DataTestCase.test_periodic": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "molmod.periodic.periodic": {
     "line number": [
      55,
      55,
      56,
      56
     ]
    },
    "molmod.periodic.periodic.artificial": {
     "line number": [
      50
     ]
    },
    "molmod.periodic.periodic.blue": {
     "line number": [
      53
     ]
    },
    "molmod.periodic.periodic.col": {
     "line number": [
      45
     ]
    },
    "molmod.periodic.periodic.covalent_radius": {
     "line number": [
      48
     ]
    },
    "molmod.periodic.periodic.density": {
     "line number": [
      47
     ]
    },
    "molmod.periodic.periodic.green": {
     "line number": [
      52
     ]
    },
    "molmod.periodic.periodic.mass": {
     "line number": [
      46
     ]
    },
    "molmod.periodic.periodic.name": {
     "line number": [
      41
     ]
    },
    "molmod.periodic.periodic.number": {
     "line number": [
      43
     ]
    },
    "molmod.periodic.periodic.red": {
     "line number": [
      51
     ]
    },
    "molmod.periodic.periodic.row": {
     "line number": [
      44
     ]
    },
    "molmod.periodic.periodic.symbol": {
     "line number": [
      42
     ]
    },
    "molmod.periodic.periodic.vdw_radius": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_data.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "molmod.test.test_data.ame2003": {
  "data": {
   "shadows": "molmod.isotopes.ame2003"
  },
  "type": "import"
 },
 "molmod.test.test_data.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.test.test_data.nubtab03": {
  "data": {
   "shadows": "molmod.isotopes.nubtab03"
  },
  "type": "import"
 },
 "molmod.test.test_data.periodic": {
  "data": {
   "shadows": "molmod.periodic.periodic"
  },
  "type": "import"
 },
 "molmod.test.test_data.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "molmod.test.test_examples": {
  "data": {},
  "type": "module"
 },
 "molmod.test.test_examples.check_example": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      80
     ]
    },
    "__name__": {
     "line number": [
      55
     ]
    },
    "dict": {
     "line number": [
      66
     ]
    },
    "molmod.test.common.tmpdir": {
     "line number": [
      55
     ]
    },
    "molmod.test.test_examples.os": {
     "line number": [
      60,
      60,
      61,
      62,
      64,
      66,
      67,
      69,
      70,
      70
     ]
    },
    "molmod.test.test_examples.pkg_resources": {
     "line number": [
      57
     ]
    },
    "molmod.test.test_examples.stat": {
     "line number": [
      70
     ]
    },
    "molmod.test.test_examples.subprocess": {
     "line number": [
      72,
      72,
      73,
      73
     ]
    },
    "open": {
     "line number": [
      64
     ]
    },
    "str": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_examples.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "molmod.test.test_examples.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "molmod.test.test_examples.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "molmod.test.test_examples.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "molmod.test.test_examples.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "molmod.test.test_examples.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "molmod.test.test_examples.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "molmod.test.test_examples.test_example_000_a": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "molmod.test.test_examples.check_example": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_examples.test_example_000_b": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "molmod.test.test_examples.check_example": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_examples.test_example_000_c": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "molmod.test.test_examples.check_example": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_examples.test_example_001_a": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "molmod.test.test_examples.check_example": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_examples.test_example_001_b": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "molmod.test.test_examples.check_example": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_examples.test_example_001_c": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "molmod.test.test_examples.check_example": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_examples.test_example_001_d": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "molmod.test.test_examples.check_example": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_examples.test_example_001_e": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "molmod.test.test_examples.check_example": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_examples.test_example_002_a": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "molmod.test.test_examples.check_example": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_examples.test_example_002_b": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "molmod.test.test_examples.check_example": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_examples.test_example_002_c": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "molmod.test.test_examples.check_example": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_examples.test_example_002_d": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "molmod.test.test_examples.check_example": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_examples.test_example_003_a": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "molmod.test.test_examples.check_example": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_examples.test_example_003_b": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "molmod.test.test_examples.check_example": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_examples.test_example_003_c": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "molmod.test.test_examples.check_example": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_examples.test_example_003_d": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "molmod.test.test_examples.check_example": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_examples.test_example_004_a": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "molmod.test.test_examples.check_example": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_examples.test_example_004_b": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "molmod.test.test_examples.check_example": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_examples.tmpdir": {
  "data": {
   "shadows": "molmod.test.common.tmpdir"
  },
  "type": "import"
 },
 "molmod.test.test_examples.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "molmod.test.test_graphs": {
  "data": {},
  "type": "module"
 },
 "molmod.test.test_graphs.Case": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "object": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.test.test_graphs.Case.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "Graph": {
     "line number": [
      44
     ]
    },
    "set": {
     "line number": [
      48,
      52
     ]
    },
    "tuple": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_graphs.GraphTestCase": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "molmod.test.test_graphs.unittest": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.test.test_graphs.GraphTestCase.check_graph_search": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": {
    "GraphSearch": {
     "line number": [
      585
     ]
    },
    "callback": {
     "line number": [
      600
     ]
    },
    "graph_search": {
     "line number": [
      595
     ]
    },
    "print": {
     "line number": [
      584,
      591,
      592,
      593,
      598
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_graphs.GraphTestCase.iter_cases": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "molmod.test.test_graphs.Case": {
     "line number": [
      58,
      59,
      60,
      61,
      62,
      71,
      79,
      83,
      109,
      119,
      179,
      191,
      194,
      204,
      207,
      211,
      221,
      231,
      235,
      239,
      243,
      247,
      252
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_graphs.GraphTestCase.test_central_vertices": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": {
    "len": {
     "line number": [
      315
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_graphs.GraphTestCase.test_custom_pattern": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": {
    "CustomPattern": {
     "line number": [
      615
     ]
    },
    "GraphSearch": {
     "line number": [
      615
     ]
    },
    "graph_search": {
     "line number": [
      615,
      622
     ]
    },
    "len": {
     "line number": [
      616,
      619
     ]
    },
    "next": {
     "line number": [
      622
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_graphs.GraphTestCase.test_distances": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "Graph": {
     "line number": [
      264,
      278,
      289
     ]
    },
    "numpy.array": {
     "line number": [
      265,
      279,
      290
     ]
    },
    "numpy.int32": {
     "line number": [
      274,
      285,
      296
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_graphs.GraphTestCase.test_equivalent_vertices": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      396
     ]
    },
    "set": {
     "line number": [
      394,
      397
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_graphs.GraphTestCase.test_fingerprints": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": {
    "Graph": {
     "line number": [
      330
     ]
    },
    "builtins.range": {
     "line number": [
      332
     ]
    },
    "numpy.random.permutation": {
     "line number": [
      328
     ]
    },
    "tuple": {
     "line number": [
      329
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_graphs.GraphTestCase.test_get_subgraph": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      493,
      499
     ]
    },
    "frozenset": {
     "line number": [
      502
     ]
    },
    "len": {
     "line number": [
      498
     ]
    },
    "numpy.random.permutation": {
     "line number": [
      482
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_graphs.GraphTestCase.test_halfs": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": {
    "Graph": {
     "line number": [
      508,
      510,
      574
     ]
    },
    "set": {
     "line number": [
      525,
      526,
      528,
      529,
      531,
      532,
      534,
      535,
      538,
      539,
      542,
      543,
      577,
      578
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_graphs.GraphTestCase.test_independent_vertices": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": {
    "Graph": {
     "line number": [
      322
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_graphs.GraphTestCase.test_iter_breadth_first": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": {
    "int": {
     "line number": [
      412
     ]
    },
    "len": {
     "line number": [
      408,
      410
     ]
    },
    "list": {
     "line number": [
      407
     ]
    },
    "numpy.random.randint": {
     "line number": [
      406
     ]
    },
    "numpy.zeros": {
     "line number": [
      412
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_graphs.GraphTestCase.test_iter_breadth_first_edges": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      432
     ]
    },
    "enumerate": {
     "line number": [
      432
     ]
    },
    "frozenset": {
     "line number": [
      442
     ]
    },
    "int": {
     "line number": [
      431
     ]
    },
    "len": {
     "line number": [
      427,
      429
     ]
    },
    "list": {
     "line number": [
      426
     ]
    },
    "numpy.random.randint": {
     "line number": [
      425
     ]
    },
    "numpy.zeros": {
     "line number": [
      431
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_graphs.GraphTestCase.test_iter_shortest_paths": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": {
    "Graph": {
     "line number": [
      449,
      453,
      457,
      461
     ]
    },
    "len": {
     "line number": [
      468,
      472
     ]
    },
    "set": {
     "line number": [
      450,
      454,
      458,
      462
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_graphs.GraphTestCase.test_neighbors": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": {
    "frozenset": {
     "line number": [
      307
     ]
    },
    "len": {
     "line number": [
      308
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_graphs.GraphTestCase.test_pattern_lower_symmetry": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": {
    "CustomPattern": {
     "line number": [
      647
     ]
    },
    "Graph": {
     "line number": [
      642,
      646
     ]
    },
    "GraphSearch": {
     "line number": [
      649
     ]
    },
    "len": {
     "line number": [
      655
     ]
    },
    "set": {
     "line number": [
      652
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_graphs.GraphTestCase.test_ring_pattern": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": {
    "RingPattern": {
     "line number": [
      609
     ]
    },
    "callback": {
     "line number": [
      609
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_graphs.GraphTestCase.test_ring_pattern.callback": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": {
    "len": {
     "line number": [
      606,
      606
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_graphs.GraphTestCase.test_rings_zeolite": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": {
    "GraphSearch": {
     "line number": [
      664
     ]
    },
    "RingPattern": {
     "line number": [
      664
     ]
    },
    "gs": {
     "line number": [
      669
     ]
    },
    "len": {
     "line number": [
      670
     ]
    },
    "molmod.test.test_graphs.pkg_resources": {
     "line number": [
      666
     ]
    },
    "tuple": {
     "line number": [
      672
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_graphs.GraphTestCase.test_start_vertex": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": {
    "CustomPattern": {
     "line number": [
      627,
      629
     ]
    },
    "Graph": {
     "line number": [
      625,
      626
     ]
    },
    "GraphSearch": {
     "line number": [
      628,
      630
     ]
    },
    "len": {
     "line number": [
      631,
      631
     ]
    },
    "list": {
     "line number": [
      628,
      630
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_graphs.GraphTestCase.test_symmetries": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      343
     ]
    },
    "builtins.range": {
     "line number": [
      354
     ]
    },
    "len": {
     "line number": [
      341,
      344,
      350,
      352,
      357,
      383,
      384
     ]
    },
    "max": {
     "line number": [
      352
     ]
    },
    "message": {
     "line number": [
      383,
      384
     ]
    },
    "molmod.test.test_graphs.copy": {
     "line number": [
      368
     ]
    },
    "set": {
     "line number": [
      366,
      367
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_graphs.GraphTestCase.test_symmetries.message": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": {
    "len": {
     "line number": [
      379,
      380,
      381
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_graphs.__all__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "molmod.test.test_graphs.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "molmod.test.test_graphs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.test.test_graphs.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "molmod.test.test_graphs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "molmod.test.test_graphs.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.test.test_graphs.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "molmod.test.test_ic": {
  "data": {},
  "type": "module"
 },
 "molmod.test.test_ic.MyCross": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "object": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.test.test_ic.MyCross.__call__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      144
     ]
    },
    "molmod.ic.Vector3": {
     "line number": [
      135,
      136
     ]
    },
    "molmod.ic.cross": {
     "line number": [
      138,
      140,
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_ic.MyCross.__init__": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "molmod.test.test_ic.big": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "molmod.test.test_ic.check_diff_ic": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "check_delta": {
     "line number": [
      114,
      115
     ]
    },
    "iterp": {
     "line number": [
      111
     ]
    },
    "len": {
     "line number": [
      113
     ]
    },
    "molmod.test.test_ic.eps": {
     "line number": [
      113
     ]
    },
    "numpy.array": {
     "line number": [
      112
     ]
    },
    "numpy.random.normal": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_ic.check_diff_ic.fng": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "icfn": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_ic.check_diff_ic.fnv": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "icfn": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_ic.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.test.test_ic.eps": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "molmod.test.test_ic.ic": {
  "data": {
   "shadows": "molmod.ic"
  },
  "type": "import"
 },
 "molmod.test.test_ic.iter_bends": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "molmod.test.test_ic.big": {
     "line number": [
      55,
      56,
      59
     ]
    },
    "molmod.test.test_ic.num": {
     "line number": [
      54
     ]
    },
    "molmod.test.test_ic.small": {
     "line number": [
      57,
      60,
      62
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      57,
      60,
      62
     ]
    },
    "numpy.random.normal": {
     "line number": [
      55,
      56,
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_ic.iter_bonds": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "molmod.test.test_ic.big": {
     "line number": [
      44,
      45
     ]
    },
    "molmod.test.test_ic.num": {
     "line number": [
      43
     ]
    },
    "molmod.test.test_ic.small": {
     "line number": [
      46
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      46
     ]
    },
    "numpy.random.normal": {
     "line number": [
      44,
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_ic.iter_diheds": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "molmod.test.test_ic.big": {
     "line number": [
      71,
      72,
      76,
      80
     ]
    },
    "molmod.test.test_ic.num": {
     "line number": [
      70
     ]
    },
    "molmod.test.test_ic.small": {
     "line number": [
      73,
      78,
      82
     ]
    },
    "numpy.dot": {
     "line number": [
      77,
      81
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      73,
      75,
      78,
      82
     ]
    },
    "numpy.random.normal": {
     "line number": [
      71,
      72,
      76,
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_ic.iter_diheds_special": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      188,
      189,
      190,
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_ic.iter_pairs": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      89
     ]
    },
    "molmod.test.test_ic.big": {
     "line number": [
      91
     ]
    },
    "molmod.test.test_ic.num": {
     "line number": [
      89
     ]
    },
    "molmod.test.test_ic.small": {
     "line number": [
      92
     ]
    },
    "numpy.random.normal": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_ic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.test.test_ic.num": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "molmod.test.test_ic.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "molmod.test.test_ic.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.test.test_ic.small": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "molmod.test.test_ic.test_diff_bend_angle": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "molmod.ic.bend_angle": {
     "line number": [
      163
     ]
    },
    "molmod.test.test_ic.check_diff_ic": {
     "line number": [
      163
     ]
    },
    "molmod.test.test_ic.iter_bends": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_ic.test_diff_bend_cos": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "molmod.ic.bend_cos": {
     "line number": [
      167
     ]
    },
    "molmod.test.test_ic.check_diff_ic": {
     "line number": [
      167
     ]
    },
    "molmod.test.test_ic.iter_bends": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_ic.test_diff_bond": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "molmod.ic.bond_length": {
     "line number": [
      119
     ]
    },
    "molmod.test.test_ic.check_diff_ic": {
     "line number": [
      119
     ]
    },
    "molmod.test.test_ic.iter_bonds": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_ic.test_diff_cross": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "molmod.test.test_ic.MyCross": {
     "line number": [
      148,
      149,
      150
     ]
    },
    "molmod.test.test_ic.check_diff_ic": {
     "line number": [
      148,
      149,
      150
     ]
    },
    "molmod.test.test_ic.iter_bonds": {
     "line number": [
      148,
      149,
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_ic.test_diff_dihed_angle": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "molmod.ic.dihed_angle": {
     "line number": [
      184
     ]
    },
    "molmod.test.test_ic.check_diff_ic": {
     "line number": [
      184
     ]
    },
    "molmod.test.test_ic.iter_diheds": {
     "line number": [
      184
     ]
    },
    "numpy.pi": {
     "line number": [
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_ic.test_diff_dihed_angle_special": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": {
    "molmod.ic.dihed_angle": {
     "line number": [
      195
     ]
    },
    "molmod.test.test_ic.check_diff_ic": {
     "line number": [
      195
     ]
    },
    "molmod.test.test_ic.iter_diheds_special": {
     "line number": [
      195
     ]
    },
    "numpy.pi": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_ic.test_diff_dihed_cos": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "molmod.ic.dihed_cos": {
     "line number": [
      180
     ]
    },
    "molmod.test.test_ic.check_diff_ic": {
     "line number": [
      180
     ]
    },
    "molmod.test.test_ic.iter_diheds": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_ic.test_diff_dot": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "molmod.test.test_ic.check_diff_ic": {
     "line number": [
      127
     ]
    },
    "molmod.test.test_ic.iter_bonds": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_ic.test_diff_dot.my_dot": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "molmod.ic.Vector3": {
     "line number": [
      124,
      125
     ]
    },
    "molmod.ic.dot": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_ic.test_diff_idiv": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "molmod.test.test_ic.check_diff_ic": {
     "line number": [
      159
     ]
    },
    "molmod.test.test_ic.iter_pairs": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_ic.test_diff_idiv.my_div": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "molmod.ic.Scalar": {
     "line number": [
      155,
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_ic.test_diff_imul": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "molmod.test.test_ic.check_diff_ic": {
     "line number": [
      176
     ]
    },
    "molmod.test.test_ic.iter_pairs": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_ic.test_diff_imul.my_mul": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "molmod.ic.Scalar": {
     "line number": [
      172,
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_ic.test_diff_opbend_angle": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "molmod.ic.opbend_angle": {
     "line number": [
      203
     ]
    },
    "molmod.test.test_ic.check_diff_ic": {
     "line number": [
      203
     ]
    },
    "molmod.test.test_ic.iter_diheds": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_ic.test_diff_opbend_cos": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "molmod.ic.opbend_cos": {
     "line number": [
      199
     ]
    },
    "molmod.test.test_ic.check_diff_ic": {
     "line number": [
      199
     ]
    },
    "molmod.test.test_ic.iter_diheds": {
     "line number": [
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_ic.test_diff_opbend_dist": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "molmod.ic.opbend_dist": {
     "line number": [
      212
     ]
    },
    "molmod.test.test_ic.check_diff_ic": {
     "line number": [
      212
     ]
    },
    "molmod.test.test_ic.iter_diheds": {
     "line number": [
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_ic.test_diff_opbend_mangle": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": {
    "molmod.ic.opbend_mangle": {
     "line number": [
      209
     ]
    },
    "molmod.test.test_ic.check_diff_ic": {
     "line number": [
      209
     ]
    },
    "molmod.test.test_ic.iter_diheds": {
     "line number": [
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_ic.test_diff_opbend_mcos": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": {
    "molmod.ic.opbend_mcos": {
     "line number": [
      206
     ]
    },
    "molmod.test.test_ic.check_diff_ic": {
     "line number": [
      206
     ]
    },
    "molmod.test.test_ic.iter_diheds": {
     "line number": [
      206
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_ic.test_dihedral_ethene": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      218,
      219,
      229,
      230
     ]
    },
    "builtins.range": {
     "line number": [
      220
     ]
    },
    "molmod.ic.dihed_angle": {
     "line number": [
      219,
      230
     ]
    },
    "molmod.ic.dihed_cos": {
     "line number": [
      218,
      229
     ]
    },
    "molmod.test.test_ic.pkg_resources": {
     "line number": [
      216
     ]
    },
    "numpy.cos": {
     "line number": [
      226,
      229
     ]
    },
    "numpy.pi": {
     "line number": [
      221,
      221
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      221,
      222,
      223
     ]
    },
    "numpy.sin": {
     "line number": [
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_ic.test_opbend_ethene": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      236,
      237,
      238,
      239,
      240,
      250,
      251
     ]
    },
    "builtins.range": {
     "line number": [
      241
     ]
    },
    "molmod.ic.opbend_angle": {
     "line number": [
      237,
      251
     ]
    },
    "molmod.ic.opbend_cos": {
     "line number": [
      236,
      250
     ]
    },
    "molmod.ic.opbend_dist": {
     "line number": [
      240
     ]
    },
    "molmod.ic.opbend_mangle": {
     "line number": [
      239
     ]
    },
    "molmod.ic.opbend_mcos": {
     "line number": [
      238
     ]
    },
    "molmod.test.test_ic.pkg_resources": {
     "line number": [
      234
     ]
    },
    "numpy.cos": {
     "line number": [
      246,
      250
     ]
    },
    "numpy.pi": {
     "line number": [
      242,
      242
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      242,
      243
     ]
    },
    "numpy.sin": {
     "line number": [
      248
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_log": {
  "data": {},
  "type": "module"
 },
 "molmod.test.test_log.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "molmod.test.test_log.kcalmol": {
  "data": {
   "shadows": "molmod.units.kcalmol"
  },
  "type": "import"
 },
 "molmod.test.test_log.kjmol": {
  "data": {
   "shadows": "molmod.units.kjmol"
  },
  "type": "import"
 },
 "molmod.test.test_log.test_center": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "ScreenLog": {
     "line number": [
      43
     ]
    },
    "TimerGroup": {
     "line number": [
      42
     ]
    },
    "io.StringIO": {
     "line number": [
      41
     ]
    },
    "log": {
     "line number": [
      43
     ]
    },
    "log._active": {
     "line number": [
      44
     ]
    },
    "log.center": {
     "line number": [
      46,
      47
     ]
    },
    "log.section": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_log.test_colors": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "ScreenLog": {
     "line number": [
      71
     ]
    },
    "TimerGroup": {
     "line number": [
      70
     ]
    },
    "log": {
     "line number": [
      71
     ]
    },
    "log.red": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_log.test_enter_leave": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "ScreenLog": {
     "line number": [
      108
     ]
    },
    "TimerGroup": {
     "line number": [
      107
     ]
    },
    "io.StringIO": {
     "line number": [
      106
     ]
    },
    "log": {
     "line number": [
      108
     ]
    },
    "log.prefix": {
     "line number": [
      110,
      112,
      113,
      114
     ]
    },
    "log.section": {
     "line number": [
      109,
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_log.test_header_footer": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "ScreenLog": {
     "line number": [
      63
     ]
    },
    "TimerGroup": {
     "line number": [
      62
     ]
    },
    "io.StringIO": {
     "line number": [
      61
     ]
    },
    "log": {
     "line number": [
      63,
      64
     ]
    },
    "log.print_footer": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_log.test_hline": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "ScreenLog": {
     "line number": [
      78
     ]
    },
    "TimerGroup": {
     "line number": [
      77
     ]
    },
    "io.StringIO": {
     "line number": [
      76
     ]
    },
    "log": {
     "line number": [
      78
     ]
    },
    "log._active": {
     "line number": [
      79
     ]
    },
    "log.hline": {
     "line number": [
      81
     ]
    },
    "log.section": {
     "line number": [
      80
     ]
    },
    "log.width": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_log.test_lead": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "ScreenLog": {
     "line number": [
      98
     ]
    },
    "TimerGroup": {
     "line number": [
      97
     ]
    },
    "io.StringIO": {
     "line number": [
      96
     ]
    },
    "log": {
     "line number": [
      98,
      101
     ]
    },
    "log._active": {
     "line number": [
      99
     ]
    },
    "log.section": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_log.test_levels": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "ScreenLog": {
     "line number": [
      53
     ]
    },
    "TimerGroup": {
     "line number": [
      52
     ]
    },
    "log": {
     "line number": [
      53
     ]
    },
    "log.do_high": {
     "line number": [
      55
     ]
    },
    "log.do_medium": {
     "line number": [
      54,
      57
     ]
    },
    "log.low": {
     "line number": [
      56
     ]
    },
    "log.set_level": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_log.test_line_wrapping": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "ScreenLog": {
     "line number": [
      33
     ]
    },
    "TimerGroup": {
     "line number": [
      32
     ]
    },
    "io.StringIO": {
     "line number": [
      31
     ]
    },
    "log": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_log.test_unitsys": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "ScreenLog": {
     "line number": [
      89
     ]
    },
    "TimerGroup": {
     "line number": [
      88
     ]
    },
    "abs": {
     "line number": [
      90,
      92
     ]
    },
    "io.StringIO": {
     "line number": [
      87
     ]
    },
    "log": {
     "line number": [
      89
     ]
    },
    "log.cal": {
     "line number": [
      91
     ]
    },
    "log.energy.conversion": {
     "line number": [
      90,
      92
     ]
    },
    "log.set_unitsys": {
     "line number": [
      91
     ]
    },
    "molmod.units.kcalmol": {
     "line number": [
      92
     ]
    },
    "molmod.units.kjmol": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_minimizer": {
  "data": {},
  "type": "module"
 },
 "molmod.test.test_minimizer.BaseTestCase": {
  "data": {
   "shadows": "molmod.test.common.BaseTestCase"
  },
  "type": "import"
 },
 "molmod.test.test_minimizer.Half": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "object": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.test.test_minimizer.Half.__call__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_minimizer.Half.__init__": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "molmod.test.test_minimizer.MinimizerTestCase": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "molmod.test.common.BaseTestCase": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.test.test_minimizer.MinimizerTestCase.check_min": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      97
     ]
    },
    "builtins.range": {
     "line number": [
      80
     ]
    },
    "compute_fd_hessian": {
     "line number": [
      90,
      94
     ]
    },
    "len": {
     "line number": [
      83
     ]
    },
    "molmod.test.test_minimizer.fun": {
     "line number": [
      79,
      86,
      90,
      94
     ]
    },
    "numpy.linalg.eigvalsh": {
     "line number": [
      91,
      95
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      82
     ]
    },
    "numpy.random.normal": {
     "line number": [
      81
     ]
    },
    "numpy.sqrt": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_minimizer.MinimizerTestCase.test_cg_golden": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "ConjugateGradient": {
     "line number": [
      113
     ]
    },
    "ConvergenceCondition": {
     "line number": [
      115
     ]
    },
    "GoldenLineSearch": {
     "line number": [
      114
     ]
    },
    "Minimizer": {
     "line number": [
      117
     ]
    },
    "StopLossCondition": {
     "line number": [
      116
     ]
    },
    "float": {
     "line number": [
      112
     ]
    },
    "molmod.test.test_minimizer.fun": {
     "line number": [
      118
     ]
    },
    "numpy.zeros": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_minimizer.MinimizerTestCase.test_cg_newton": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "ConjugateGradient": {
     "line number": [
      137
     ]
    },
    "ConvergenceCondition": {
     "line number": [
      139
     ]
    },
    "Minimizer": {
     "line number": [
      141
     ]
    },
    "NewtonLineSearch": {
     "line number": [
      138
     ]
    },
    "StopLossCondition": {
     "line number": [
      140
     ]
    },
    "float": {
     "line number": [
      136
     ]
    },
    "molmod.test.test_minimizer.fun": {
     "line number": [
      142
     ]
    },
    "numpy.zeros": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_minimizer.MinimizerTestCase.test_cg_newtong": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "ConjugateGradient": {
     "line number": [
      161
     ]
    },
    "ConvergenceCondition": {
     "line number": [
      163
     ]
    },
    "Minimizer": {
     "line number": [
      165
     ]
    },
    "NewtonLineSearch": {
     "line number": [
      162
     ]
    },
    "StopLossCondition": {
     "line number": [
      164
     ]
    },
    "float": {
     "line number": [
      160
     ]
    },
    "molmod.test.test_minimizer.fun": {
     "line number": [
      166
     ]
    },
    "numpy.zeros": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_minimizer.MinimizerTestCase.test_cg_newtong_diag_prec": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "ConjugateGradient": {
     "line number": [
      173
     ]
    },
    "ConvergenceCondition": {
     "line number": [
      175
     ]
    },
    "DiagonalPreconditioner": {
     "line number": [
      177
     ]
    },
    "Minimizer": {
     "line number": [
      178
     ]
    },
    "NewtonLineSearch": {
     "line number": [
      174
     ]
    },
    "StopLossCondition": {
     "line number": [
      176
     ]
    },
    "float": {
     "line number": [
      172
     ]
    },
    "molmod.test.test_minimizer.fun": {
     "line number": [
      177
     ]
    },
    "numpy.zeros": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_minimizer.MinimizerTestCase.test_cg_newtong_full_prec": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "ConjugateGradient": {
     "line number": [
      187
     ]
    },
    "ConvergenceCondition": {
     "line number": [
      189
     ]
    },
    "FullPreconditioner": {
     "line number": [
      191
     ]
    },
    "Minimizer": {
     "line number": [
      192
     ]
    },
    "NewtonLineSearch": {
     "line number": [
      188
     ]
    },
    "StopLossCondition": {
     "line number": [
      190
     ]
    },
    "float": {
     "line number": [
      186
     ]
    },
    "molmod.test.test_minimizer.fun": {
     "line number": [
      191
     ]
    },
    "numpy.zeros": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_minimizer.MinimizerTestCase.test_check_anagrad": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "check_anagrad": {
     "line number": [
      224
     ]
    },
    "float": {
     "line number": [
      223
     ]
    },
    "molmod.test.test_minimizer.fun": {
     "line number": [
      224
     ]
    },
    "numpy.zeros": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_minimizer.MinimizerTestCase.test_check_anagrad_diag_prec": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": {
    "DiagonalPreconditioner": {
     "line number": [
      228
     ]
    },
    "check_anagrad": {
     "line number": [
      230
     ]
    },
    "check_delta": {
     "line number": [
      232
     ]
    },
    "float": {
     "line number": [
      227
     ]
    },
    "len": {
     "line number": [
      231
     ]
    },
    "molmod.test.test_minimizer.fun": {
     "line number": [
      228
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      229
     ]
    },
    "numpy.zeros": {
     "line number": [
      227
     ]
    },
    "random_unit": {
     "line number": [
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_minimizer.MinimizerTestCase.test_check_anagrad_full_prec": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "FullPreconditioner": {
     "line number": [
      237
     ]
    },
    "abs": {
     "line number": [
      241
     ]
    },
    "check_anagrad": {
     "line number": [
      243
     ]
    },
    "check_delta": {
     "line number": [
      245
     ]
    },
    "float": {
     "line number": [
      236
     ]
    },
    "len": {
     "line number": [
      244
     ]
    },
    "molmod.test.test_minimizer.fun": {
     "line number": [
      237
     ]
    },
    "nose.plugins.skip.SkipTest": {
     "line number": [
      235
     ]
    },
    "numpy.linalg.eigh": {
     "line number": [
      240
     ]
    },
    "numpy.random.normal": {
     "line number": [
      238
     ]
    },
    "numpy.zeros": {
     "line number": [
      236
     ]
    },
    "random_unit": {
     "line number": [
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_minimizer.MinimizerTestCase.test_constraints1": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "ConjugateGradient": {
     "line number": [
      277
     ]
    },
    "Constraints": {
     "line number": [
      281
     ]
    },
    "ConvergenceCondition": {
     "line number": [
      279
     ]
    },
    "Minimizer": {
     "line number": [
      282
     ]
    },
    "NewtonLineSearch": {
     "line number": [
      278
     ]
    },
    "StopLossCondition": {
     "line number": [
      280
     ]
    },
    "float": {
     "line number": [
      276
     ]
    },
    "molmod.test.test_minimizer.circle1": {
     "line number": [
      281
     ]
    },
    "molmod.test.test_minimizer.quad": {
     "line number": [
      283
     ]
    },
    "numpy.array": {
     "line number": [
      276
     ]
    },
    "numpy.sqrt": {
     "line number": [
      286
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_minimizer.MinimizerTestCase.test_constraints2": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": {
    "ConjugateGradient": {
     "line number": [
      290
     ]
    },
    "Constraints": {
     "line number": [
      294
     ]
    },
    "ConvergenceCondition": {
     "line number": [
      292
     ]
    },
    "Minimizer": {
     "line number": [
      295
     ]
    },
    "NewtonLineSearch": {
     "line number": [
      291
     ]
    },
    "StopLossCondition": {
     "line number": [
      293
     ]
    },
    "float": {
     "line number": [
      289
     ]
    },
    "molmod.test.test_minimizer.circle1": {
     "line number": [
      294
     ]
    },
    "molmod.test.test_minimizer.quad": {
     "line number": [
      296
     ]
    },
    "numpy.array": {
     "line number": [
      289
     ]
    },
    "numpy.sqrt": {
     "line number": [
      299
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_minimizer.MinimizerTestCase.test_constraints3": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": {
    "ConjugateGradient": {
     "line number": [
      303
     ]
    },
    "Constraints": {
     "line number": [
      307
     ]
    },
    "ConvergenceCondition": {
     "line number": [
      305
     ]
    },
    "Minimizer": {
     "line number": [
      308
     ]
    },
    "NewtonLineSearch": {
     "line number": [
      304
     ]
    },
    "StopLossCondition": {
     "line number": [
      306
     ]
    },
    "float": {
     "line number": [
      302
     ]
    },
    "molmod.test.test_minimizer.circle1": {
     "line number": [
      307
     ]
    },
    "molmod.test.test_minimizer.quad": {
     "line number": [
      309
     ]
    },
    "numpy.array": {
     "line number": [
      302
     ]
    },
    "numpy.sqrt": {
     "line number": [
      312
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_minimizer.MinimizerTestCase.test_constraints4": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": {
    "ConjugateGradient": {
     "line number": [
      316
     ]
    },
    "Constraints": {
     "line number": [
      320
     ]
    },
    "ConvergenceCondition": {
     "line number": [
      318
     ]
    },
    "Minimizer": {
     "line number": [
      321
     ]
    },
    "NewtonLineSearch": {
     "line number": [
      317
     ]
    },
    "StopLossCondition": {
     "line number": [
      319
     ]
    },
    "float": {
     "line number": [
      315
     ]
    },
    "molmod.test.test_minimizer.circle1": {
     "line number": [
      320
     ]
    },
    "molmod.test.test_minimizer.circle2": {
     "line number": [
      320
     ]
    },
    "molmod.test.test_minimizer.quad": {
     "line number": [
      322
     ]
    },
    "numpy.array": {
     "line number": [
      315
     ]
    },
    "numpy.sqrt": {
     "line number": [
      325
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_minimizer.MinimizerTestCase.test_constraints5": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": {
    "ConjugateGradient": {
     "line number": [
      339
     ]
    },
    "Constraints": {
     "line number": [
      343
     ]
    },
    "ConvergenceCondition": {
     "line number": [
      341
     ]
    },
    "Minimizer": {
     "line number": [
      349
     ]
    },
    "NewtonLineSearch": {
     "line number": [
      340
     ]
    },
    "StopLossCondition": {
     "line number": [
      342
     ]
    },
    "float": {
     "line number": [
      338
     ]
    },
    "molmod.test.test_minimizer.Half": {
     "line number": [
      344,
      345,
      346,
      347
     ]
    },
    "numpy.array": {
     "line number": [
      338
     ]
    },
    "numpy.sqrt": {
     "line number": [
      355
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_minimizer.MinimizerTestCase.test_constraints5.surf": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": {
    "float": {
     "line number": [
      334
     ]
    },
    "numpy.array": {
     "line number": [
      331
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_minimizer.MinimizerTestCase.test_constraints6": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": {
    "ConjugateGradient": {
     "line number": [
      359
     ]
    },
    "Constraints": {
     "line number": [
      363
     ]
    },
    "ConvergenceCondition": {
     "line number": [
      361
     ]
    },
    "Minimizer": {
     "line number": [
      367
     ]
    },
    "NewtonLineSearch": {
     "line number": [
      360
     ]
    },
    "StopLossCondition": {
     "line number": [
      362
     ]
    },
    "float": {
     "line number": [
      358
     ]
    },
    "molmod.test.test_minimizer.Half": {
     "line number": [
      364
     ]
    },
    "molmod.test.test_minimizer.circle1": {
     "line number": [
      365
     ]
    },
    "molmod.test.test_minimizer.quad": {
     "line number": [
      368
     ]
    },
    "numpy.array": {
     "line number": [
      358
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_minimizer.MinimizerTestCase.test_full_prec_consitency": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "FullPreconditioner": {
     "line number": [
      249
     ]
    },
    "abs": {
     "line number": [
      253
     ]
    },
    "builtins.range": {
     "line number": [
      256
     ]
    },
    "float": {
     "line number": [
      248
     ]
    },
    "molmod.test.test_minimizer.fun": {
     "line number": [
      249
     ]
    },
    "numpy.linalg.eigh": {
     "line number": [
      252
     ]
    },
    "numpy.random.normal": {
     "line number": [
      250,
      257
     ]
    },
    "numpy.zeros": {
     "line number": [
      248
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_minimizer.MinimizerTestCase.test_qn_newtong": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "ConvergenceCondition": {
     "line number": [
      203
     ]
    },
    "Minimizer": {
     "line number": [
      205
     ]
    },
    "NewtonLineSearch": {
     "line number": [
      202
     ]
    },
    "QuasiNewton": {
     "line number": [
      201
     ]
    },
    "StopLossCondition": {
     "line number": [
      204
     ]
    },
    "float": {
     "line number": [
      200
     ]
    },
    "molmod.test.test_minimizer.fun": {
     "line number": [
      206
     ]
    },
    "numpy.zeros": {
     "line number": [
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_minimizer.MinimizerTestCase.test_qn_newtong_rel_grad": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "ConvergenceCondition": {
     "line number": [
      215
     ]
    },
    "Minimizer": {
     "line number": [
      217
     ]
    },
    "NewtonLineSearch": {
     "line number": [
      214
     ]
    },
    "QuasiNewton": {
     "line number": [
      213
     ]
    },
    "StopLossCondition": {
     "line number": [
      216
     ]
    },
    "float": {
     "line number": [
      212
     ]
    },
    "molmod.test.test_minimizer.fun": {
     "line number": [
      218
     ]
    },
    "numpy.zeros": {
     "line number": [
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_minimizer.MinimizerTestCase.test_sd_golden": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "ConvergenceCondition": {
     "line number": [
      103
     ]
    },
    "GoldenLineSearch": {
     "line number": [
      102
     ]
    },
    "Minimizer": {
     "line number": [
      105
     ]
    },
    "SteepestDescent": {
     "line number": [
      101
     ]
    },
    "StopLossCondition": {
     "line number": [
      104
     ]
    },
    "float": {
     "line number": [
      100
     ]
    },
    "molmod.test.test_minimizer.fun": {
     "line number": [
      106
     ]
    },
    "numpy.zeros": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_minimizer.MinimizerTestCase.test_sd_newton": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "ConvergenceCondition": {
     "line number": [
      127
     ]
    },
    "Minimizer": {
     "line number": [
      129
     ]
    },
    "NewtonLineSearch": {
     "line number": [
      126
     ]
    },
    "SteepestDescent": {
     "line number": [
      125
     ]
    },
    "StopLossCondition": {
     "line number": [
      128
     ]
    },
    "float": {
     "line number": [
      124
     ]
    },
    "molmod.test.test_minimizer.fun": {
     "line number": [
      130
     ]
    },
    "numpy.zeros": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_minimizer.MinimizerTestCase.test_sd_newtong": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "ConvergenceCondition": {
     "line number": [
      151
     ]
    },
    "Minimizer": {
     "line number": [
      153
     ]
    },
    "NewtonLineSearch": {
     "line number": [
      150
     ]
    },
    "SteepestDescent": {
     "line number": [
      149
     ]
    },
    "StopLossCondition": {
     "line number": [
      152
     ]
    },
    "float": {
     "line number": [
      148
     ]
    },
    "molmod.test.test_minimizer.fun": {
     "line number": [
      154
     ]
    },
    "numpy.zeros": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_minimizer.MinimizerTestCase.test_stop_loss_step": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": {
    "ConjugateGradient": {
     "line number": [
      265
     ]
    },
    "ConvergenceCondition": {
     "line number": [
      267
     ]
    },
    "Minimizer": {
     "line number": [
      269
     ]
    },
    "NewtonLineSearch": {
     "line number": [
      266
     ]
    },
    "StopLossCondition": {
     "line number": [
      268
     ]
    },
    "float": {
     "line number": [
      264
     ]
    },
    "molmod.test.test_minimizer.fun": {
     "line number": [
      270
     ]
    },
    "numpy.sqrt": {
     "line number": [
      273
     ]
    },
    "numpy.zeros": {
     "line number": [
      264
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_minimizer.SkipTest": {
  "data": {
   "shadows": "nose.plugins.skip.SkipTest"
  },
  "type": "import"
 },
 "molmod.test.test_minimizer.__all__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "molmod.test.test_minimizer.circle1": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "molmod.test.test_minimizer.circle2": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "molmod.test.test_minimizer.fun": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      39
     ]
    },
    "numpy.cos": {
     "line number": [
      37,
      40
     ]
    },
    "numpy.sin": {
     "line number": [
      37,
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_minimizer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.test.test_minimizer.quad": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "molmod.test.test_minimizer.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.test.test_molecular_graphs": {
  "data": {},
  "type": "module"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "molmod.test.test_molecular_graphs.unittest": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.iter_molecules": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "len": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.load_molecule": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "molmod.test.test_molecular_graphs.pkg_resources": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.test_add_hydrogens": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": {
    "MolecularGraph": {
     "line number": [
      492,
      494,
      496,
      498,
      500,
      502,
      504,
      506
     ]
    },
    "int": {
     "line number": [
      497
     ]
    },
    "numpy.array": {
     "line number": [
      492,
      492,
      494,
      494,
      496,
      496,
      497,
      498,
      498,
      500,
      500,
      502,
      502,
      504,
      504,
      506,
      506
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.test_bending_angles_tpa": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "BendingAnglePattern": {
     "line number": [
      139
     ]
    },
    "CriteriaSet": {
     "line number": [
      140,
      141,
      142,
      143,
      144,
      145
     ]
    },
    "GraphSearch": {
     "line number": [
      178
     ]
    },
    "atom_criteria": {
     "line number": [
      140,
      141,
      142,
      143,
      144,
      145
     ]
    },
    "builtins.range": {
     "line number": [
      180
     ]
    },
    "dict": {
     "line number": [
      177
     ]
    },
    "graph_search": {
     "line number": [
      178,
      179
     ]
    },
    "iter_alternatives": {
     "line number": [
      188
     ]
    },
    "len": {
     "line number": [
      180
     ]
    },
    "set": {
     "line number": [
      148,
      158,
      161,
      165,
      171,
      175
     ]
    },
    "tuple": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.test_bending_angles_tpa.iter_alternatives": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.test_blob": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": {
    "MolecularGraph.from_blob": {
     "line number": [
      468
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.test_bonds_tpa": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "BondLongerThan": {
     "line number": [
      96
     ]
    },
    "BondPattern": {
     "line number": [
      90
     ]
    },
    "CritOr": {
     "line number": [
      95
     ]
    },
    "CriteriaSet": {
     "line number": [
      91,
      92,
      93,
      94,
      95,
      96,
      97
     ]
    },
    "GraphSearch": {
     "line number": [
      125
     ]
    },
    "HasAtomNumber": {
     "line number": [
      95,
      95
     ]
    },
    "HasNeighbors": {
     "line number": [
      97
     ]
    },
    "HasNumNeighbors": {
     "line number": [
      94
     ]
    },
    "atom_criteria": {
     "line number": [
      91,
      92,
      93,
      94,
      95,
      97,
      97
     ]
    },
    "builtins.range": {
     "line number": [
      127
     ]
    },
    "dict": {
     "line number": [
      124
     ]
    },
    "graph_search": {
     "line number": [
      126
     ]
    },
    "iter_alternatives": {
     "line number": [
      135
     ]
    },
    "len": {
     "line number": [
      127
     ]
    },
    "set": {
     "line number": [
      100,
      106,
      107,
      108,
      112,
      116,
      120
     ]
    },
    "tuple": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.test_bonds_tpa.iter_alternatives": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.test_canonical_order": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      462
     ]
    },
    "numpy.random.permutation": {
     "line number": [
      454
     ]
    },
    "str": {
     "line number": [
      459,
      459
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.test_copy_with": {
  "data": {
   "lineno": 543
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.test_criteria_arguments": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": {
    "HasAtomNumber": {
     "line number": [
      523,
      523,
      527,
      527
     ]
    },
    "HasNeighborNumbers": {
     "line number": [
      517,
      521
     ]
    },
    "HasNeighbors": {
     "line number": [
      523,
      527
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.test_dihedral_angles_precursor": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": {
    "CriteriaSet": {
     "line number": [
      271
     ]
    },
    "DihedralAnglePattern": {
     "line number": [
      271
     ]
    },
    "GraphSearch": {
     "line number": [
      284
     ]
    },
    "builtins.range": {
     "line number": [
      286
     ]
    },
    "dict": {
     "line number": [
      283
     ]
    },
    "graph_search": {
     "line number": [
      284,
      285
     ]
    },
    "iter_alternatives": {
     "line number": [
      293
     ]
    },
    "len": {
     "line number": [
      286
     ]
    },
    "set": {
     "line number": [
      273
     ]
    },
    "tuple": {
     "line number": [
      286
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.test_dihedral_angles_precursor.iter_alternatives": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.test_dihedral_angles_tpa": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "CriteriaSet": {
     "line number": [
      193,
      194,
      195
     ]
    },
    "DihedralAnglePattern": {
     "line number": [
      192
     ]
    },
    "GraphSearch": {
     "line number": [
      224
     ]
    },
    "atom_criteria": {
     "line number": [
      193,
      194,
      195
     ]
    },
    "builtins.range": {
     "line number": [
      226
     ]
    },
    "dict": {
     "line number": [
      223
     ]
    },
    "graph_search": {
     "line number": [
      224,
      225
     ]
    },
    "iter_alternatives": {
     "line number": [
      234
     ]
    },
    "len": {
     "line number": [
      226
     ]
    },
    "set": {
     "line number": [
      198,
      210,
      214
     ]
    },
    "tuple": {
     "line number": [
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.test_dihedral_angles_tpa.iter_alternatives": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.test_fingerprint_collisions": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": {
    "molmod.test.test_molecular_graphs.pkg_resources": {
     "line number": [
      388,
      389
     ]
    },
    "nose.plugins.skip.SkipTest": {
     "line number": [
      377
     ]
    },
    "str": {
     "line number": [
      390,
      390
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.test_fingerprints": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      372
     ]
    },
    "numpy.random.permutation": {
     "line number": [
      370
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.test_full_match_on_self": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": {
    "len": {
     "line number": [
      444
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.test_halfs_double_thf": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": {
    "len": {
     "line number": [
      484,
      485,
      487,
      488
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.test_iter_shortest_paths": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": {
    "set": {
     "line number": [
      418,
      419,
      420,
      423
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.test_iter_shortest_paths_generic": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      436
     ]
    },
    "len": {
     "line number": [
      433,
      435,
      436
     ]
    },
    "numpy.random.randint": {
     "line number": [
      428,
      429
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.test_multiply": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": {
    "MolecularGraph": {
     "line number": [
      349
     ]
    },
    "frozenset": {
     "line number": [
      356
     ]
    },
    "len": {
     "line number": [
      360,
      360
     ]
    },
    "numpy.array": {
     "line number": [
      347,
      348
     ]
    },
    "numpy.concatenate": {
     "line number": [
      357,
      358
     ]
    },
    "tuple": {
     "line number": [
      356
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.test_rings_5ringOH": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": {
    "CriteriaSet": {
     "line number": [
      297
     ]
    },
    "GraphSearch": {
     "line number": [
      303
     ]
    },
    "NRingPattern": {
     "line number": [
      297
     ]
    },
    "builtins.range": {
     "line number": [
      305
     ]
    },
    "dict": {
     "line number": [
      302
     ]
    },
    "graph_search": {
     "line number": [
      303,
      304
     ]
    },
    "iter_alternatives": {
     "line number": [
      313
     ]
    },
    "len": {
     "line number": [
      305
     ]
    },
    "set": {
     "line number": [
      299
     ]
    },
    "tuple": {
     "line number": [
      305
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.test_rings_5ringOH.iter_alternatives": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      308
     ]
    },
    "reversed": {
     "line number": [
      311
     ]
    },
    "tuple": {
     "line number": [
      311
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.test_rings_precursor": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": {
    "CriteriaSet": {
     "line number": [
      326
     ]
    },
    "GraphSearch": {
     "line number": [
      319,
      330
     ]
    },
    "NRingPattern": {
     "line number": [
      326
     ]
    },
    "RingPattern": {
     "line number": [
      317
     ]
    },
    "builtins.range": {
     "line number": [
      332
     ]
    },
    "graph_search": {
     "line number": [
      319,
      320,
      330,
      331
     ]
    },
    "iter_alternatives": {
     "line number": [
      340
     ]
    },
    "len": {
     "line number": [
      321,
      332
     ]
    },
    "set": {
     "line number": [
      321
     ]
    },
    "tuple": {
     "line number": [
      332
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.test_rings_precursor.iter_alternatives": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      335
     ]
    },
    "reversed": {
     "line number": [
      338
     ]
    },
    "tuple": {
     "line number": [
      338
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.test_subgraph": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": {
    "numpy.random.permutation": {
     "line number": [
      395
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.test_subgraph_big": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": {
    "len": {
     "line number": [
      412
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.test_tetra_tpa": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": {
    "CriteriaSet": {
     "line number": [
      239
     ]
    },
    "GraphSearch": {
     "line number": [
      248
     ]
    },
    "TetraPattern": {
     "line number": [
      238
     ]
    },
    "atom_criteria": {
     "line number": [
      239
     ]
    },
    "builtins.range": {
     "line number": [
      250
     ]
    },
    "dict": {
     "line number": [
      247
     ]
    },
    "graph_search": {
     "line number": [
      248,
      249
     ]
    },
    "iter_alternatives": {
     "line number": [
      267
     ]
    },
    "len": {
     "line number": [
      250
     ]
    },
    "set": {
     "line number": [
      242
     ]
    },
    "tuple": {
     "line number": [
      250
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.test_tetra_tpa.iter_alternatives": {
  "data": {
   "lineno": 253
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.test_zirconium": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": {
    "len": {
     "line number": [
      532,
      535,
      538,
      541
     ]
    },
    "molmod.test.test_molecular_graphs.pkg_resources": {
     "line number": [
      530,
      533,
      536,
      539
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.MolecularGraphTestCase.verify_graph_search": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "iter_alternatives": {
     "line number": [
      72
     ]
    },
    "len": {
     "line number": [
      81,
      82,
      83,
      85,
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecular_graphs.SkipTest": {
  "data": {
   "shadows": "nose.plugins.skip.SkipTest"
  },
  "type": "import"
 },
 "molmod.test.test_molecular_graphs.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "molmod.test.test_molecular_graphs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.test.test_molecular_graphs.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "molmod.test.test_molecular_graphs.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.test.test_molecular_graphs.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "molmod.test.test_molecules": {
  "data": {},
  "type": "module"
 },
 "molmod.test.test_molecules.MoleculeTestCase": {
  "data": {
   "lineno": 38
  },
  "type": "class"
 },
 "molmod.test.test_molecules.MoleculeTestCase.test_chemical_formula": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "Molecule.from_file": {
     "line number": [
      106
     ]
    },
    "molmod.test.test_molecules.pkg_resources": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecules.MoleculeTestCase.test_com": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "Molecule.from_file": {
     "line number": [
      88
     ]
    },
    "builtins.range": {
     "line number": [
      91
     ]
    },
    "molmod.test.test_molecules.pkg_resources": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecules.MoleculeTestCase.test_copy": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "Molecule.from_file": {
     "line number": [
      110
     ]
    },
    "id": {
     "line number": [
      113,
      113,
      115,
      115
     ]
    },
    "molmod.test.test_molecules.copy": {
     "line number": [
      112,
      114
     ]
    },
    "molmod.test.test_molecules.pkg_resources": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecules.MoleculeTestCase.test_copy_with": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "Molecule.from_file": {
     "line number": [
      175
     ]
    },
    "molmod.test.test_molecules.pkg_resources": {
     "line number": [
      175
     ]
    },
    "numpy.array": {
     "line number": [
      177,
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecules.MoleculeTestCase.test_default_graph": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "Molecule.from_file": {
     "line number": [
      118
     ]
    },
    "molmod.test.test_molecules.pkg_resources": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecules.MoleculeTestCase.test_default_graph_periodic": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "Molecule.from_file": {
     "line number": [
      123
     ]
    },
    "molmod.test.test_molecules.pkg_resources": {
     "line number": [
      123
     ]
    },
    "numpy.array": {
     "line number": [
      125,
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecules.MoleculeTestCase.test_default_symbols": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "Molecule.from_file": {
     "line number": [
      182
     ]
    },
    "molmod.test.test_molecules.pkg_resources": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecules.MoleculeTestCase.test_distance_matrix": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      45
     ]
    },
    "molmod.test.test_molecules.pkg_resources": {
     "line number": [
      40
     ]
    },
    "numpy.sqrt": {
     "line number": [
      44
     ]
    },
    "numpy.subtract.outer": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecules.MoleculeTestCase.test_distance_matrix_periodic": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      48,
      56,
      57
     ]
    },
    "molmod.ext.molecules_distance_matrix": {
     "line number": [
      54
     ]
    },
    "molmod.test.test_unit_cells.get_random_uc": {
     "line number": [
      50
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      60
     ]
    },
    "numpy.random.randint": {
     "line number": [
      50
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecules.MoleculeTestCase.test_from_file_cml": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "Molecule.from_file": {
     "line number": [
      134
     ]
    },
    "molmod.test.test_molecules.pkg_resources": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecules.MoleculeTestCase.test_from_file_fchk": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "Molecule.from_file": {
     "line number": [
      139
     ]
    },
    "molmod.test.test_molecules.pkg_resources": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecules.MoleculeTestCase.test_from_file_pdb": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "Molecule.from_file": {
     "line number": [
      143
     ]
    },
    "molmod.test.test_molecules.pkg_resources": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecules.MoleculeTestCase.test_from_file_sdf": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "Molecule.from_file": {
     "line number": [
      147
     ]
    },
    "molmod.test.test_molecules.pkg_resources": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecules.MoleculeTestCase.test_from_file_xyz": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "Molecule.from_file": {
     "line number": [
      151
     ]
    },
    "molmod.test.test_molecules.pkg_resources": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecules.MoleculeTestCase.test_inertia_tensor": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "Molecule.from_file": {
     "line number": [
      97
     ]
    },
    "molmod.test.test_molecules.pkg_resources": {
     "line number": [
      97
     ]
    },
    "numpy.identity": {
     "line number": [
      100
     ]
    },
    "numpy.outer": {
     "line number": [
      100
     ]
    },
    "sum": {
     "line number": [
      99
     ]
    },
    "zip": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecules.MoleculeTestCase.test_mass": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "Molecule.from_file": {
     "line number": [
      83
     ]
    },
    "molmod.test.test_molecules.pkg_resources": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecules.MoleculeTestCase.test_probes": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "Molecule.from_file": {
     "line number": [
      199,
      203
     ]
    },
    "__name__": {
     "line number": [
      201
     ]
    },
    "molmod.test.test_molecules.pkg_resources": {
     "line number": [
      199,
      203
     ]
    },
    "tmpdir": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecules.MoleculeTestCase.test_read_only": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "Molecule": {
     "line number": [
      69,
      78
     ]
    },
    "float": {
     "line number": [
      75
     ]
    },
    "isinstance": {
     "line number": [
      75
     ]
    },
    "numpy.array": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecules.MoleculeTestCase.test_rmsd": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "Molecule.from_file": {
     "line number": [
      188
     ]
    },
    "molmod.test.test_molecules.pkg_resources": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecules.MoleculeTestCase.test_rotsym": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "Molecule.from_file": {
     "line number": [
      192,
      194
     ]
    },
    "molmod.test.test_molecules.pkg_resources": {
     "line number": [
      192,
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecules.MoleculeTestCase.test_to_cml": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "Molecule.from_file": {
     "line number": [
      156,
      159
     ]
    },
    "__name__": {
     "line number": [
      157
     ]
    },
    "molmod.test.test_molecules.pkg_resources": {
     "line number": [
      156
     ]
    },
    "tmpdir": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecules.MoleculeTestCase.test_to_xyz": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "Molecule.from_file": {
     "line number": [
      166,
      169
     ]
    },
    "__name__": {
     "line number": [
      167
     ]
    },
    "molmod.test.test_molecules.pkg_resources": {
     "line number": [
      166
     ]
    },
    "tmpdir": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_molecules.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "molmod.test.test_molecules.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "molmod.test.test_molecules.get_random_uc": {
  "data": {
   "shadows": "molmod.test.test_unit_cells.get_random_uc"
  },
  "type": "import"
 },
 "molmod.test.test_molecules.molecules_distance_matrix": {
  "data": {
   "shadows": "molmod.ext.molecules_distance_matrix"
  },
  "type": "import"
 },
 "molmod.test.test_molecules.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.test.test_molecules.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "molmod.test.test_molecules.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.test.test_pairff": {
  "data": {},
  "type": "module"
 },
 "molmod.test.test_pairff.BaseTestCase": {
  "data": {
   "shadows": "molmod.test.common.BaseTestCase"
  },
  "type": "import"
 },
 "molmod.test.test_pairff.CoulombFFTestCase": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": {
    "molmod.test.common.BaseTestCase": {
     "line number": [
      389
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.test.test_pairff.CoulombFFTestCase.test_cc1": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": {
    "CoulombFF": {
     "line number": [
      397
     ]
    },
    "float": {
     "line number": [
      394,
      395,
      396
     ]
    },
    "numpy.array": {
     "line number": [
      391,
      396
     ]
    },
    "numpy.identity": {
     "line number": [
      395
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_pairff.CoulombFFTestCase.test_cc2": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": {
    "CoulombFF": {
     "line number": [
      408
     ]
    },
    "float": {
     "line number": [
      405,
      406,
      407
     ]
    },
    "numpy.array": {
     "line number": [
      401,
      407
     ]
    },
    "numpy.identity": {
     "line number": [
      406
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_pairff.CoulombFFTestCase.test_cc3": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": {
    "CoulombFF": {
     "line number": [
      419
     ]
    },
    "float": {
     "line number": [
      416,
      417,
      418
     ]
    },
    "numpy.array": {
     "line number": [
      412,
      418
     ]
    },
    "numpy.identity": {
     "line number": [
      417
     ]
    },
    "numpy.sqrt": {
     "line number": [
      420
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_pairff.CoulombFFTestCase.test_cd1": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": {
    "CoulombFF": {
     "line number": [
      433
     ]
    },
    "float": {
     "line number": [
      426,
      427,
      431,
      432
     ]
    },
    "numpy.array": {
     "line number": [
      423,
      427,
      428
     ]
    },
    "numpy.identity": {
     "line number": [
      432
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_pairff.CoulombFFTestCase.test_dd1": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": {
    "CoulombFF": {
     "line number": [
      447
     ]
    },
    "float": {
     "line number": [
      440,
      441,
      445,
      446
     ]
    },
    "numpy.array": {
     "line number": [
      437,
      441,
      442
     ]
    },
    "numpy.identity": {
     "line number": [
      446
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_pairff.CoulombFFTestCase.test_efield": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": {
    "CoulombFF": {
     "line number": [
      528,
      533
     ]
    },
    "float": {
     "line number": [
      523,
      530
     ]
    },
    "numpy.identity": {
     "line number": [
      523,
      530
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      521,
      524,
      525
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_pairff.CoulombFFTestCase.test_efield_point": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": {
    "CoulombFF": {
     "line number": [
      509
     ]
    },
    "builtins.range": {
     "line number": [
      511,
      515
     ]
    },
    "float": {
     "line number": [
      502,
      503,
      507,
      508
     ]
    },
    "numpy.array": {
     "line number": [
      499,
      504,
      508
     ]
    },
    "numpy.identity": {
     "line number": [
      503
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      512
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_pairff.CoulombFFTestCase.test_esp_c": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": {
    "CoulombFF": {
     "line number": [
      482
     ]
    },
    "float": {
     "line number": [
      479,
      480,
      481
     ]
    },
    "numpy.array": {
     "line number": [
      476,
      481,
      483
     ]
    },
    "numpy.identity": {
     "line number": [
      480
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_pairff.CoulombFFTestCase.test_esp_d": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": {
    "CoulombFF": {
     "line number": [
      495
     ]
    },
    "float": {
     "line number": [
      489,
      490,
      494
     ]
    },
    "numpy.array": {
     "line number": [
      486,
      491,
      496
     ]
    },
    "numpy.identity": {
     "line number": [
      490
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_pairff.CoulombFFTestCase.test_esp_point_c": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": {
    "CoulombFF": {
     "line number": [
      457
     ]
    },
    "float": {
     "line number": [
      454,
      455,
      456
     ]
    },
    "numpy.array": {
     "line number": [
      451,
      456,
      458,
      459
     ]
    },
    "numpy.identity": {
     "line number": [
      455
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_pairff.CoulombFFTestCase.test_esp_point_d": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": {
    "CoulombFF": {
     "line number": [
      471
     ]
    },
    "float": {
     "line number": [
      465,
      466,
      470
     ]
    },
    "numpy.array": {
     "line number": [
      462,
      467,
      472,
      473
     ]
    },
    "numpy.identity": {
     "line number": [
      466
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_pairff.Debug1FF": {
  "data": {
   "lineno": 39
  },
  "type": "class"
 },
 "molmod.test.test_pairff.Debug1FF.yield_pair_energies": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "molmod.test.test_pairff.Debug1FF.yield_pair_gradients": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_pairff.Debug1FF.yield_pair_hessians": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_pairff.Debug2FF": {
  "data": {
   "lineno": 50
  },
  "type": "class"
 },
 "molmod.test.test_pairff.Debug2FF.yield_pair_energies": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "sum": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_pairff.Debug2FF.yield_pair_gradients": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "molmod.test.test_pairff.Debug2FF.yield_pair_hessians": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "float": {
     "line number": [
      58
     ]
    },
    "numpy.identity": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_pairff.Debug3FF": {
  "data": {
   "lineno": 61
  },
  "type": "class"
 },
 "molmod.test.test_pairff.Debug3FF.yield_pair_energies": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "sum": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_pairff.Debug3FF.yield_pair_gradients": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "molmod.test.test_pairff.Debug3FF.yield_pair_hessians": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "float": {
     "line number": [
      69
     ]
    },
    "numpy.identity": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_pairff.Debug4FF": {
  "data": {
   "lineno": 72
  },
  "type": "class"
 },
 "molmod.test.test_pairff.Debug4FF.yield_pair_energies": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "molmod.test.test_pairff.Debug4FF.yield_pair_gradients": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_pairff.Debug4FF.yield_pair_hessians": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "float": {
     "line number": [
      80
     ]
    },
    "numpy.array": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_pairff.PairFFTestCase": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "molmod.test.test_pairff.unittest": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.test.test_pairff.PairFFTestCase.check_ff": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      260,
      261,
      284,
      316,
      322,
      323,
      332,
      333,
      344,
      350,
      351,
      352,
      353,
      371,
      372
     ]
    },
    "float": {
     "line number": [
      282,
      283,
      331,
      343,
      349,
      370
     ]
    },
    "len": {
     "line number": [
      250,
      260,
      332,
      350,
      351,
      371
     ]
    },
    "numpy.zeros": {
     "line number": [
      282,
      283,
      331,
      343,
      349,
      370
     ]
    },
    "sum": {
     "line number": [
      288,
      289,
      291,
      292,
      293,
      295,
      296,
      297,
      300,
      301,
      304,
      305,
      311,
      312,
      317,
      318,
      324,
      325,
      338,
      339,
      361,
      362,
      365,
      366,
      380,
      381,
      384,
      385
     ]
    },
    "zip": {
     "line number": [
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_pairff.PairFFTestCase.make_coulombff": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "CoulombFF": {
     "line number": [
      110
     ]
    },
    "float": {
     "line number": [
      89,
      94,
      97,
      106
     ]
    },
    "numpy.array": {
     "line number": [
      85,
      90,
      97,
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_pairff.PairFFTestCase.make_debug1ff": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "float": {
     "line number": [
      185,
      190
     ]
    },
    "molmod.test.test_pairff.Debug1FF": {
     "line number": [
      192
     ]
    },
    "numpy.array": {
     "line number": [
      181,
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_pairff.PairFFTestCase.make_debug2ff": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "float": {
     "line number": [
      202,
      207
     ]
    },
    "molmod.test.test_pairff.Debug2FF": {
     "line number": [
      209
     ]
    },
    "numpy.array": {
     "line number": [
      198,
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_pairff.PairFFTestCase.make_debug3ff": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "float": {
     "line number": [
      219,
      224
     ]
    },
    "molmod.test.test_pairff.Debug3FF": {
     "line number": [
      226
     ]
    },
    "numpy.array": {
     "line number": [
      215,
      220
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_pairff.PairFFTestCase.make_debug4ff": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": {
    "float": {
     "line number": [
      236,
      241
     ]
    },
    "molmod.test.test_pairff.Debug4FF": {
     "line number": [
      243
     ]
    },
    "numpy.array": {
     "line number": [
      232,
      237
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_pairff.PairFFTestCase.make_dispersionff": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "DispersionFF": {
     "line number": [
      135
     ]
    },
    "float": {
     "line number": [
      122,
      128,
      133
     ]
    },
    "numpy.array": {
     "line number": [
      122,
      124,
      129
     ]
    },
    "numpy.outer": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_pairff.PairFFTestCase.make_exprepff": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "ExpRepFF": {
     "line number": [
      175
     ]
    },
    "float": {
     "line number": [
      160,
      162,
      168,
      173
     ]
    },
    "numpy.add.outer": {
     "line number": [
      163
     ]
    },
    "numpy.array": {
     "line number": [
      160,
      162,
      164,
      169
     ]
    },
    "numpy.outer": {
     "line number": [
      161
     ]
    },
    "numpy.sqrt": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_pairff.PairFFTestCase.make_pauliff": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "PauliFF": {
     "line number": [
      154
     ]
    },
    "float": {
     "line number": [
      141,
      147,
      152
     ]
    },
    "numpy.array": {
     "line number": [
      141,
      143,
      148
     ]
    },
    "numpy.outer": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_pairff.PairFFTestCase.test_coulombff_c": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "molmod.test.test_pairff.PairFFTestCase.test_coulombff_cd": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "molmod.test.test_pairff.PairFFTestCase.test_coulombff_d": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "molmod.test.test_pairff.PairFFTestCase.test_debug1ff": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "molmod.test.test_pairff.PairFFTestCase.test_debug2ff": {
  "data": {
   "lineno": 211
  },
  "type": "function"
 },
 "molmod.test.test_pairff.PairFFTestCase.test_debug3ff": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "molmod.test.test_pairff.PairFFTestCase.test_debug4ff": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "molmod.test.test_pairff.PairFFTestCase.test_dispersionff": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "molmod.test.test_pairff.PairFFTestCase.test_exprepff": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "molmod.test.test_pairff.PairFFTestCase.test_pauliff": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "molmod.test.test_pairff.__all__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "molmod.test.test_pairff.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.test.test_pairff.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.test.test_pairff.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.test.test_pairff.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "molmod.test.test_quaternions": {
  "data": {},
  "type": "module"
 },
 "molmod.test.test_quaternions.QuaternionTestCase": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "molmod.test.test_quaternions.unittest": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.test.test_quaternions.QuaternionTestCase.test_quaternion_product": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      64,
      64
     ]
    },
    "numpy.dot": {
     "line number": [
      62
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      56,
      58
     ]
    },
    "numpy.random.normal": {
     "line number": [
      55,
      57
     ]
    },
    "quaternion_product": {
     "line number": [
      59
     ]
    },
    "quaternion_to_rotation_matrix": {
     "line number": [
      60,
      61
     ]
    },
    "rotation_matrix_to_quaternion": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_quaternions.QuaternionTestCase.test_quaternion_rotation": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      52
     ]
    },
    "numpy.dot": {
     "line number": [
      50
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      46
     ]
    },
    "numpy.random.normal": {
     "line number": [
      45,
      49
     ]
    },
    "quaternion_rotation": {
     "line number": [
      51
     ]
    },
    "quaternion_to_rotation_matrix": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_quaternions.QuaternionTestCase.test_rotation_matrix": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      41,
      41,
      42
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      37
     ]
    },
    "numpy.random.normal": {
     "line number": [
      36
     ]
    },
    "quaternion_to_rotation_matrix": {
     "line number": [
      38,
      40
     ]
    },
    "rotation_matrix_to_quaternion": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_quaternions.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "molmod.test.test_quaternions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.test.test_quaternions.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "molmod.test.test_randomize": {
  "data": {
   "symbols_in_volume": {
    "frozenset": {
     "line number": [
      39,
      40,
      41,
      42,
      43,
      44,
      45,
      46,
      47,
      48
     ]
    }
   }
  },
  "type": "module"
 },
 "molmod.test.test_randomize.RandomizeTestCase": {
  "data": {
   "lineno": 52
  },
  "type": "class"
 },
 "molmod.test.test_randomize.RandomizeTestCase.iter_test_molecules": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "molmod.test.test_randomize.pkg_resources": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_randomize.RandomizeTestCase.test_random_dimer": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      83
     ]
    },
    "molmod.test.test_randomize.nonbond_thresholds": {
     "line number": [
      80
     ]
    },
    "molmod.test.test_randomize.os": {
     "line number": [
      84
     ]
    },
    "random_dimer": {
     "line number": [
      80
     ]
    },
    "tmpdir": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_randomize.RandomizeTestCase.test_randomize_count": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      69
     ]
    },
    "generate_manipulations": {
     "line number": [
      67
     ]
    },
    "isinstance": {
     "line number": [
      74
     ]
    },
    "molmod.test.test_randomize.nonbond_thresholds": {
     "line number": [
      68
     ]
    },
    "molmod.test.test_randomize.os": {
     "line number": [
      70
     ]
    },
    "randomize_molecule": {
     "line number": [
      68
     ]
    },
    "str": {
     "line number": [
      75
     ]
    },
    "sum": {
     "line number": [
      74
     ]
    },
    "tmpdir": {
     "line number": [
      69
     ]
    },
    "zip": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_randomize.RandomizeTestCase.test_single_manipulation": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      91
     ]
    },
    "builtins.range": {
     "line number": [
      89
     ]
    },
    "generate_manipulations": {
     "line number": [
      88
     ]
    },
    "molmod.test.test_randomize.nonbond_thresholds": {
     "line number": [
      90
     ]
    },
    "molmod.test.test_randomize.os": {
     "line number": [
      92,
      93,
      94
     ]
    },
    "single_random_manipulation": {
     "line number": [
      90
     ]
    },
    "tmpdir": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_randomize.__all__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "molmod.test.test_randomize.nonbond_thresholds": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "molmod.test.test_randomize.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "molmod.test.test_randomize.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "molmod.test.test_randomize.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.test.test_similarity": {
  "data": {},
  "type": "module"
 },
 "molmod.test.test_similarity.SimilarityTestCase": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "molmod.test.test_similarity.unittest": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.test.test_similarity.SimilarityTestCase.check": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      92,
      93
     ]
    },
    "compute_similarity": {
     "line number": [
      66,
      83
     ]
    },
    "enumerate": {
     "line number": [
      78,
      82
     ]
    },
    "numpy.array": {
     "line number": [
      91
     ]
    },
    "numpy.diag": {
     "line number": [
      92
     ]
    },
    "print": {
     "line number": [
      64,
      73,
      75,
      76,
      79,
      89,
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_similarity.SimilarityTestCase.get_molecules": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "molmod.test.test_similarity.pkg_resources": {
     "line number": [
      41,
      42,
      43,
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_similarity.SimilarityTestCase.test_graph": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "molmod.test.test_similarity.SimilarityTestCase.test_mol": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "molmod.test.test_similarity.__all__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "molmod.test.test_similarity.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.test.test_similarity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.test.test_similarity.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "molmod.test.test_similarity.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "molmod.test.test_similarity.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "molmod.test.test_symmetry": {
  "data": {},
  "type": "module"
 },
 "molmod.test.test_symmetry.BaseTestCase": {
  "data": {
   "shadows": "molmod.test.common.BaseTestCase"
  },
  "type": "import"
 },
 "molmod.test.test_symmetry.SymmetryTestCase": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "molmod.test.common.BaseTestCase": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.test.test_symmetry.SymmetryTestCase.test_rotsym_benzene": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "compute_rotsym": {
     "line number": [
      68
     ]
    },
    "molmod.test.test_symmetry.pkg_resources": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_symmetry.SymmetryTestCase.test_rotsym_butane": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "compute_rotsym": {
     "line number": [
      38
     ]
    },
    "molmod.test.test_symmetry.pkg_resources": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_symmetry.SymmetryTestCase.test_rotsym_cyclopentane": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "compute_rotsym": {
     "line number": [
      44
     ]
    },
    "molmod.test.test_symmetry.pkg_resources": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_symmetry.SymmetryTestCase.test_rotsym_ethane": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "compute_rotsym": {
     "line number": [
      74
     ]
    },
    "molmod.test.test_symmetry.pkg_resources": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_symmetry.SymmetryTestCase.test_rotsym_octane": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "compute_rotsym": {
     "line number": [
      50
     ]
    },
    "molmod.test.test_symmetry.pkg_resources": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_symmetry.SymmetryTestCase.test_rotsym_tetra": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "compute_rotsym": {
     "line number": [
      56
     ]
    },
    "molmod.test.test_symmetry.pkg_resources": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_symmetry.SymmetryTestCase.test_rotsym_water": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "compute_rotsym": {
     "line number": [
      62
     ]
    },
    "molmod.test.test_symmetry.pkg_resources": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_symmetry.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "molmod.test.test_symmetry.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "molmod.test.test_toyff": {
  "data": {},
  "type": "module"
 },
 "molmod.test.test_toyff.ToyFFTestCase": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "molmod.test.test_toyff.unittest": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.test.test_toyff.ToyFFTestCase.check_toyff_gradient": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      120,
      121
     ]
    },
    "ff": {
     "line number": [
      113,
      115
     ]
    },
    "numpy.dot": {
     "line number": [
      118
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_toyff.ToyFFTestCase.get_random_ff": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "MolecularGraph": {
     "line number": [
      107
     ]
    },
    "ToyFF": {
     "line number": [
      108
     ]
    },
    "bool": {
     "line number": [
      78
     ]
    },
    "builtins.range": {
     "line number": [
      79,
      80
     ]
    },
    "frozenset": {
     "line number": [
      104
     ]
    },
    "len": {
     "line number": [
      98
     ]
    },
    "molmod.ext.molecules_distance_matrix": {
     "line number": [
      90,
      92
     ]
    },
    "molmod.test.test_unit_cells.get_random_uc": {
     "line number": [
      85
     ]
    },
    "numpy.random.randint": {
     "line number": [
      85,
      88,
      99,
      101,
      106
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      86
     ]
    },
    "numpy.zeros": {
     "line number": [
      78
     ]
    },
    "set": {
     "line number": [
      97
     ]
    },
    "tuple": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_toyff.ToyFFTestCase.iter_molecules": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "len": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_toyff.ToyFFTestCase.load_molecule": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "molmod.test.test_toyff.pkg_resources": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_toyff.ToyFFTestCase.test_bond_hyper_energy": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      177
     ]
    },
    "ff": {
     "line number": [
      178,
      180
     ]
    },
    "ff.bond_edges": {
     "line number": [
      181
     ]
    },
    "ff.bond_hyper": {
     "line number": [
      179
     ]
    },
    "ff.bond_hyper_scale": {
     "line number": [
      182
     ]
    },
    "ff.bond_lengths": {
     "line number": [
      182
     ]
    },
    "numpy.array": {
     "line number": [
      181
     ]
    },
    "numpy.cosh": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_toyff.ToyFFTestCase.test_bond_hyper_gradient": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      186
     ]
    },
    "ff": {
     "line number": [
      187,
      189
     ]
    },
    "ff.bond_hyper": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_toyff.ToyFFTestCase.test_bond_quad_energy": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      162
     ]
    },
    "ff": {
     "line number": [
      163,
      165
     ]
    },
    "ff.bond_edges": {
     "line number": [
      166
     ]
    },
    "ff.bond_lengths": {
     "line number": [
      167
     ]
    },
    "ff.bond_quad": {
     "line number": [
      164
     ]
    },
    "numpy.array": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_toyff.ToyFFTestCase.test_bond_quad_gradient": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      171
     ]
    },
    "ff": {
     "line number": [
      172,
      174
     ]
    },
    "ff.bond_quad": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_toyff.ToyFFTestCase.test_dm_quad_energy": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      126
     ]
    },
    "ff": {
     "line number": [
      127,
      129
     ]
    },
    "ff.dm0": {
     "line number": [
      130,
      131
     ]
    },
    "ff.dm_quad": {
     "line number": [
      128
     ]
    },
    "ff.dmk": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_toyff.ToyFFTestCase.test_dm_quad_gradient": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      136
     ]
    },
    "ff": {
     "line number": [
      137,
      139
     ]
    },
    "ff.dm_quad": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_toyff.ToyFFTestCase.test_dm_reci_energy": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      142
     ]
    },
    "ff": {
     "line number": [
      143,
      145
     ]
    },
    "ff.dm": {
     "line number": [
      150
     ]
    },
    "ff.dm_reci": {
     "line number": [
      144
     ]
    },
    "ff.vdw_radii": {
     "line number": [
      146,
      146
     ]
    },
    "len": {
     "line number": [
      148
     ]
    },
    "numpy.add.outer": {
     "line number": [
      146
     ]
    },
    "numpy.ravel": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_toyff.ToyFFTestCase.test_dm_reci_gradient": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      156
     ]
    },
    "ff": {
     "line number": [
      157,
      159
     ]
    },
    "ff.dm_reci": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_toyff.ToyFFTestCase.test_example_periodic": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "UnitCell": {
     "line number": [
      193
     ]
    },
    "len": {
     "line number": [
      202
     ]
    },
    "molmod.test.test_toyff.pkg_resources": {
     "line number": [
      192
     ]
    },
    "numpy.array": {
     "line number": [
      194,
      199
     ]
    },
    "numpy.identity": {
     "line number": [
      202
     ]
    },
    "tune_geometry": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_toyff.ToyFFTestCase.test_guess_geometry": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "guess_geometry": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_toyff.ToyFFTestCase.test_tune_geometry": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "tune_geometry": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_toyff.__all__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "molmod.test.test_toyff.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.test.test_toyff.get_random_uc": {
  "data": {
   "shadows": "molmod.test.test_unit_cells.get_random_uc"
  },
  "type": "import"
 },
 "molmod.test.test_toyff.molecules_distance_matrix": {
  "data": {
   "shadows": "molmod.ext.molecules_distance_matrix"
  },
  "type": "import"
 },
 "molmod.test.test_toyff.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.test.test_toyff.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "molmod.test.test_toyff.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.test.test_toyff.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "molmod.test.test_transformations": {
  "data": {},
  "type": "module"
 },
 "molmod.test.test_transformations.BaseTestCase": {
  "data": {
   "shadows": "molmod.test.common.BaseTestCase"
  },
  "type": "import"
 },
 "molmod.test.test_transformations.TransformationsTestCase": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "molmod.test.common.BaseTestCase": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.test.test_transformations.TransformationsTestCase.iter_random_completes": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      47
     ]
    },
    "numpy.pi": {
     "line number": [
      49
     ]
    },
    "numpy.random.randint": {
     "line number": [
      51
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      49,
      52
     ]
    },
    "random_unit": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.iter_random_rotations": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.iter_random_translations": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "Translation": {
     "line number": [
      38
     ]
    },
    "builtins.range": {
     "line number": [
      37
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_cast_complete": {
  "data": {
   "lineno": 292
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_cast_rotation": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_cast_translation": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_compare_completes": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "zip": {
     "line number": [
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_compare_rotations": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": {
    "zip": {
     "line number": [
      277
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_compare_translations": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": {
    "zip": {
     "line number": [
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_complete_apply_to_complete": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      209,
      214,
      215,
      216,
      216,
      217,
      218,
      219,
      220,
      220,
      221
     ]
    },
    "zip": {
     "line number": [
      208
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_complete_apply_to_rotation": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      197,
      199,
      201,
      202,
      203,
      204,
      205
     ]
    },
    "zip": {
     "line number": [
      196
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_complete_apply_to_translation": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      185,
      186,
      188,
      190,
      192
     ]
    },
    "zip": {
     "line number": [
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_complete_apply_to_vector": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      169,
      170
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_complete_apply_to_vectors": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      179,
      180
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_complete_from_matrix": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_complete_from_properties": {
  "data": {
   "lineno": 268
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_copy": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "Translation": {
     "line number": [
      357
     ]
    },
    "molmod.test.test_transformations.copy": {
     "line number": [
      358,
      359,
      360,
      362,
      363,
      364,
      366,
      367,
      368,
      369,
      370
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_fit_rmsd": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "fit_rmsd": {
     "line number": [
      374
     ]
    },
    "float": {
     "line number": [
      375,
      376
     ]
    },
    "numpy.identity": {
     "line number": [
      375
     ]
    },
    "numpy.random.normal": {
     "line number": [
      373
     ]
    },
    "numpy.zeros": {
     "line number": [
      376
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_inv_complete": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "float": {
     "line number": [
      244,
      245,
      246,
      247
     ]
    },
    "id": {
     "line number": [
      250,
      250
     ]
    },
    "numpy.identity": {
     "line number": [
      246,
      247
     ]
    },
    "numpy.linalg.inv": {
     "line number": [
      243
     ]
    },
    "numpy.zeros": {
     "line number": [
      244,
      245
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_inv_rotation": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "float": {
     "line number": [
      235,
      236
     ]
    },
    "id": {
     "line number": [
      239,
      239
     ]
    },
    "numpy.identity": {
     "line number": [
      235,
      236
     ]
    },
    "numpy.linalg.inv": {
     "line number": [
      234
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_inv_translation": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "Translation.identity": {
     "line number": [
      228,
      229
     ]
    },
    "float": {
     "line number": [
      226,
      227
     ]
    },
    "id": {
     "line number": [
      230,
      230
     ]
    },
    "numpy.linalg.inv": {
     "line number": [
      225
     ]
    },
    "numpy.zeros": {
     "line number": [
      226,
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_rotation_about_axis": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      298,
      299,
      299,
      300
     ]
    },
    "numpy.pi": {
     "line number": [
      299
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_rotation_apply_to_complete": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      152,
      153,
      154,
      155,
      155,
      156,
      157,
      158,
      159,
      159,
      160
     ]
    },
    "zip": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_rotation_apply_to_rotation": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      145,
      147
     ]
    },
    "zip": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_rotation_apply_to_translation": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      133,
      134,
      136,
      138,
      140
     ]
    },
    "zip": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_rotation_apply_to_vector": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      117,
      118
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_rotation_apply_to_vectors": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      127,
      128
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_rotation_from_matrix": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_rotation_from_properties": {
  "data": {
   "lineno": 264
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_superpose": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      306,
      349
     ]
    },
    "compute_rmsd": {
     "line number": [
      348,
      352
     ]
    },
    "fit_rmsd": {
     "line number": [
      326
     ]
    },
    "float": {
     "line number": [
      308,
      309,
      310,
      311,
      330
     ]
    },
    "numpy.array": {
     "line number": [
      308,
      309,
      310,
      311
     ]
    },
    "numpy.dot": {
     "line number": [
      330,
      332
     ]
    },
    "numpy.identity": {
     "line number": [
      330
     ]
    },
    "numpy.pi": {
     "line number": [
      320
     ]
    },
    "numpy.random.normal": {
     "line number": [
      306,
      312,
      321,
      342,
      350
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      320
     ]
    },
    "random_unit": {
     "line number": [
      319,
      350
     ]
    },
    "superpose": {
     "line number": [
      325,
      347
     ]
    },
    "zip": {
     "line number": [
      324,
      346
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_translation_apply_to_complete": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      100,
      103,
      107
     ]
    },
    "zip": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_translation_apply_to_rotation": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      88
     ]
    },
    "zip": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_translation_apply_to_translation": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      80
     ]
    },
    "zip": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_translation_apply_to_vector": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "numpy.random.uniform": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_translation_apply_to_vectors": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "numpy.random.uniform": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_transformations.TransformationsTestCase.test_translation_from_matrix": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": {
    "Translation.from_matrix": {
     "line number": [
      254
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_transformations.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "molmod.test.test_transformations.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "molmod.test.test_transformations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.test.test_transformations.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.test.test_unit_cells": {
  "data": {},
  "type": "module"
 },
 "molmod.test.test_unit_cells.BaseTestCase": {
  "data": {
   "shadows": "molmod.test.common.BaseTestCase"
  },
  "type": "import"
 },
 "molmod.test.test_unit_cells.Circle": {
  "data": {
   "shadows": "matplotlib.patches.Circle"
  },
  "type": "import"
 },
 "molmod.test.test_unit_cells.Line2D": {
  "data": {
   "shadows": "matplotlib.lines.Line2D"
  },
  "type": "import"
 },
 "molmod.test.test_unit_cells.Polygon": {
  "data": {
   "shadows": "matplotlib.patches.Polygon"
  },
  "type": "import"
 },
 "molmod.test.test_unit_cells.SkipTest": {
  "data": {
   "shadows": "nose.plugins.skip.SkipTest"
  },
  "type": "import"
 },
 "molmod.test.test_unit_cells.UnitCellTestCase": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "molmod.test.common.BaseTestCase": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.test.test_unit_cells.UnitCellTestCase.test_add_periodicities": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "UnitCell": {
     "line number": [
      151
     ]
    },
    "bool": {
     "line number": [
      151
     ]
    },
    "builtins.range": {
     "line number": [
      150
     ]
    },
    "float": {
     "line number": [
      151
     ]
    },
    "numpy.identity": {
     "line number": [
      151
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      152,
      153,
      154
     ]
    },
    "numpy.zeros": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_unit_cells.UnitCellTestCase.test_alignment_a": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": {
    "UnitCell": {
     "line number": [
      447
     ]
    },
    "float": {
     "line number": [
      446,
      454
     ]
    },
    "numpy.array": {
     "line number": [
      446,
      450,
      457
     ]
    },
    "numpy.sqrt": {
     "line number": [
      449
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_unit_cells.UnitCellTestCase.test_alignment_c": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": {
    "UnitCell": {
     "line number": [
      466
     ]
    },
    "float": {
     "line number": [
      465
     ]
    },
    "numpy.array": {
     "line number": [
      465,
      470
     ]
    },
    "numpy.sqrt": {
     "line number": [
      469
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_unit_cells.UnitCellTestCase.test_consistency": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      136,
      142
     ]
    },
    "molmod.test.test_unit_cells.get_random_uc": {
     "line number": [
      137,
      143
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      138,
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_unit_cells.UnitCellTestCase.test_div": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      393
     ]
    },
    "molmod.test.test_unit_cells.get_random_uc": {
     "line number": [
      394
     ]
    },
    "numpy.dot": {
     "line number": [
      400,
      405,
      410
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      401,
      402,
      406,
      407,
      411,
      412
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      395
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_unit_cells.UnitCellTestCase.test_mul": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      416
     ]
    },
    "molmod.test.test_unit_cells.get_random_uc": {
     "line number": [
      417
     ]
    },
    "numpy.dot": {
     "line number": [
      423,
      428,
      433
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      424,
      425,
      429,
      430,
      434,
      435
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      418
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_unit_cells.UnitCellTestCase.test_ordered": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      484
     ]
    },
    "enumerate": {
     "line number": [
      491
     ]
    },
    "molmod.test.test_unit_cells.get_random_uc": {
     "line number": [
      485
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_unit_cells.UnitCellTestCase.test_parameters": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "UnitCell.from_parameters3": {
     "line number": [
      58
     ]
    },
    "ValueError": {
     "line number": [
      59
     ]
    },
    "builtins.range": {
     "line number": [
      54
     ]
    },
    "numpy.pi": {
     "line number": [
      56
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      55,
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_unit_cells.UnitCellTestCase.test_radius_indexes": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      227,
      250
     ]
    },
    "builtins.range": {
     "line number": [
      225,
      252,
      259,
      260,
      261
     ]
    },
    "len": {
     "line number": [
      250
     ]
    },
    "molmod.test.test_unit_cells.get_random_uc": {
     "line number": [
      226
     ]
    },
    "numpy.array": {
     "line number": [
      277,
      277
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      263,
      270
     ]
    },
    "numpy.pi": {
     "line number": [
      250
     ]
    },
    "numpy.product": {
     "line number": [
      247
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      227,
      253,
      254
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_unit_cells.UnitCellTestCase.test_radius_indexes_1d": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": {
    "UnitCell": {
     "line number": [
      280,
      288
     ]
    },
    "float": {
     "line number": [
      280,
      288
     ]
    },
    "numpy.array": {
     "line number": [
      280,
      282,
      288,
      289,
      290
     ]
    },
    "numpy.identity": {
     "line number": [
      280,
      288
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_unit_cells.UnitCellTestCase.test_radius_indexes_2d": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "UnitCell": {
     "line number": [
      299
     ]
    },
    "float": {
     "line number": [
      299
     ]
    },
    "numpy.array": {
     "line number": [
      299,
      301
     ]
    },
    "numpy.identity": {
     "line number": [
      299
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_unit_cells.UnitCellTestCase.test_radius_indexes_2d_graphical": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": {
    "UnitCell": {
     "line number": [
      322
     ]
    },
    "builtins.range": {
     "line number": [
      349,
      354,
      359,
      364
     ]
    },
    "matplotlib.lines.Line2D": {
     "line number": [
      352,
      357,
      362,
      367
     ]
    },
    "matplotlib.patches.Circle": {
     "line number": [
      343,
      344
     ]
    },
    "matplotlib.patches.Polygon": {
     "line number": [
      378
     ]
    },
    "molmod.test.test_unit_cells.pylab": {
     "line number": [
      339,
      343,
      344,
      352,
      357,
      362,
      367,
      378,
      386,
      387
     ]
    },
    "nose.plugins.skip.SkipTest": {
     "line number": [
      315
     ]
    },
    "numpy.arange": {
     "line number": [
      335
     ]
    },
    "numpy.array": {
     "line number": [
      322,
      372,
      380
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_unit_cells.UnitCellTestCase.test_radius_ranges": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      218
     ]
    },
    "builtins.range": {
     "line number": [
      210,
      214
     ]
    },
    "molmod.test.test_unit_cells.get_random_uc": {
     "line number": [
      211
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      212,
      215
     ]
    },
    "random_unit": {
     "line number": [
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_unit_cells.UnitCellTestCase.test_radius_ranges_2d": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": {
    "UnitCell": {
     "line number": [
      221
     ]
    },
    "float": {
     "line number": [
      221
     ]
    },
    "numpy.array": {
     "line number": [
      221,
      222
     ]
    },
    "numpy.identity": {
     "line number": [
      221
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_unit_cells.UnitCellTestCase.test_reciprocal": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      66
     ]
    },
    "molmod.test.test_unit_cells.get_random_uc": {
     "line number": [
      67
     ]
    },
    "numpy.dot": {
     "line number": [
      69,
      70,
      71,
      73,
      74,
      75,
      77,
      78,
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_unit_cells.UnitCellTestCase.test_reciprocal_bis": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      86
     ]
    },
    "builtins.range": {
     "line number": [
      82
     ]
    },
    "len": {
     "line number": [
      87,
      93,
      102
     ]
    },
    "molmod.test.test_unit_cells.get_random_uc": {
     "line number": [
      83
     ]
    },
    "numpy.cross": {
     "line number": [
      95,
      98,
      99
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      89,
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_unit_cells.UnitCellTestCase.test_shortest_vector": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "UnitCell": {
     "line number": [
      159,
      166
     ]
    },
    "builtins.range": {
     "line number": [
      170,
      172,
      185
     ]
    },
    "float": {
     "line number": [
      159,
      166
     ]
    },
    "molmod.test.test_unit_cells.get_random_uc": {
     "line number": [
      171
     ]
    },
    "nose.plugins.skip.SkipTest": {
     "line number": [
      157
     ]
    },
    "numpy.array": {
     "line number": [
      160,
      161,
      162,
      163,
      164,
      166,
      167,
      168
     ]
    },
    "numpy.dot": {
     "line number": [
      176
     ]
    },
    "numpy.identity": {
     "line number": [
      159,
      166
     ]
    },
    "numpy.random.normal": {
     "line number": [
      173,
      183
     ]
    },
    "numpy.round": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_unit_cells.UnitCellTestCase.test_shortest_vector_aperiodic": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": {
    "UnitCell": {
     "line number": [
      478
     ]
    },
    "bool": {
     "line number": [
      478
     ]
    },
    "float": {
     "line number": [
      478,
      479,
      480
     ]
    },
    "numpy.identity": {
     "line number": [
      478
     ]
    },
    "numpy.ones": {
     "line number": [
      479,
      480
     ]
    },
    "numpy.zeros": {
     "line number": [
      478
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_unit_cells.UnitCellTestCase.test_shortest_vector_trivial": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "UnitCell": {
     "line number": [
      190
     ]
    },
    "float": {
     "line number": [
      190
     ]
    },
    "numpy.array": {
     "line number": [
      191
     ]
    },
    "numpy.identity": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_unit_cells.UnitCellTestCase.test_spacings": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": {
    "UnitCell": {
     "line number": [
      196
     ]
    },
    "abs": {
     "line number": [
      206
     ]
    },
    "builtins.range": {
     "line number": [
      198
     ]
    },
    "float": {
     "line number": [
      196,
      197
     ]
    },
    "molmod.test.test_unit_cells.get_random_uc": {
     "line number": [
      199
     ]
    },
    "numpy.cross": {
     "line number": [
      204
     ]
    },
    "numpy.dot": {
     "line number": [
      206
     ]
    },
    "numpy.identity": {
     "line number": [
      196
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      205
     ]
    },
    "numpy.ones": {
     "line number": [
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_unit_cells.UnitCellTestCase.test_to_cartesian": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      121,
      127,
      131
     ]
    },
    "molmod.test.test_unit_cells.get_random_uc": {
     "line number": [
      122,
      128
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      123,
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_unit_cells.UnitCellTestCase.test_to_fractional": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      106,
      112,
      116
     ]
    },
    "molmod.test.test_unit_cells.get_random_uc": {
     "line number": [
      107,
      113
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      108,
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_unit_cells.UnitCellTestCase.test_volume": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": {
    "UnitCell": {
     "line number": [
      440,
      441,
      442,
      443
     ]
    },
    "float": {
     "line number": [
      439
     ]
    },
    "numpy.array": {
     "line number": [
      439,
      440,
      441,
      442,
      443
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_unit_cells.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "molmod.test.test_unit_cells.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.test.test_unit_cells.get_random_uc": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "UnitCell": {
     "line number": [
      45
     ]
    },
    "ValueError": {
     "line number": [
      48
     ]
    },
    "bool": {
     "line number": [
      40
     ]
    },
    "numpy.random.randint": {
     "line number": [
      40
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_unit_cells.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.test.test_unit_cells.pylab": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "molmod.test.test_unit_cells.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.test.test_units": {
  "data": {},
  "type": "module"
 },
 "molmod.test.test_units.BaseTestCase": {
  "data": {
   "shadows": "molmod.test.common.BaseTestCase"
  },
  "type": "import"
 },
 "molmod.test.test_units.UnitTestCase": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "molmod.test.common.BaseTestCase": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.test.test_units.UnitTestCase.test_shortands": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "parse_unit": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_units.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "molmod.test.test_units.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.test.test_utils": {
  "data": {},
  "type": "module"
 },
 "molmod.test.test_utils.CustomCheckTest": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "ReadOnlyAttribute": {
     "line number": [
      58,
      59
     ]
    },
    "int": {
     "line number": [
      58
     ]
    },
    "numpy.integer": {
     "line number": [
      59
     ]
    },
    "numpy.ndarray": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.test.test_utils.CustomCheckTest.__init__": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "molmod.test.test_utils.CustomCheckTest.check_b": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      56
     ]
    },
    "len": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_utils.DerivTest": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "molmod.test.test_utils.Test": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.test.test_utils.Test": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "ReadOnlyAttribute": {
     "line number": [
      37,
      38
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.test.test_utils.Test.__init__": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "molmod.test.test_utils.TypeCheckTest": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "ReadOnlyAttribute": {
     "line number": [
      46,
      47,
      48,
      49,
      50
     ]
    },
    "int": {
     "line number": [
      46
     ]
    },
    "numpy.floating": {
     "line number": [
      50
     ]
    },
    "numpy.ndarray": {
     "line number": [
      47,
      48,
      49,
      50
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.test.test_utils.UtilsTestCase": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "molmod.test.test_utils.unittest": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.test.test_utils.UtilsTestCase.check_type_error": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      94
     ]
    },
    "TypeError": {
     "line number": [
      91
     ]
    },
    "fn": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_utils.UtilsTestCase.test_assign_list": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "molmod.test.test_utils.Test": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_utils.UtilsTestCase.test_assign_none": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "molmod.test.test_utils.Test": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_utils.UtilsTestCase.test_copy_with": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "molmod.test.test_utils.Test": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_utils.UtilsTestCase.test_custon_check_correct": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "int": {
     "line number": [
      129
     ]
    },
    "molmod.test.test_utils.CustomCheckTest": {
     "line number": [
      128
     ]
    },
    "numpy.zeros": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_utils.UtilsTestCase.test_custon_check_wrong": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "int": {
     "line number": [
      133
     ]
    },
    "molmod.test.test_utils.CustomCheckTest": {
     "line number": [
      132
     ]
    },
    "numpy.zeros": {
     "line number": [
      133
     ]
    },
    "setattr": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_utils.UtilsTestCase.test_deriv": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "molmod.test.test_utils.Test": {
     "line number": [
      136
     ]
    },
    "molmod.test.test_utils.pickle": {
     "line number": [
      137,
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_utils.UtilsTestCase.test_pickle_read_only1": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "molmod.test.test_utils.Test": {
     "line number": [
      71
     ]
    },
    "molmod.test.test_utils.pickle": {
     "line number": [
      72,
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_utils.UtilsTestCase.test_pickle_read_only2": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "molmod.test.test_utils.Test": {
     "line number": [
      81
     ]
    },
    "molmod.test.test_utils.pickle": {
     "line number": [
      82,
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_utils.UtilsTestCase.test_type_checking_correct": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "molmod.test.test_utils.TypeCheckTest": {
     "line number": [
      107
     ]
    },
    "numpy.array": {
     "line number": [
      109,
      111,
      112
     ]
    },
    "numpy.identity": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_utils.UtilsTestCase.test_type_checking_wrong": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "molmod.test.test_utils.TypeCheckTest": {
     "line number": [
      115
     ]
    },
    "numpy.array": {
     "line number": [
      118,
      119,
      121,
      122
     ]
    },
    "numpy.identity": {
     "line number": [
      120
     ]
    },
    "setattr": {
     "line number": [
      116,
      117,
      118,
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_utils.__all__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "molmod.test.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.test.test_utils.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "molmod.test.test_utils.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "molmod.test.test_vectors": {
  "data": {},
  "type": "module"
 },
 "molmod.test.test_vectors.BaseTestCase": {
  "data": {
   "shadows": "molmod.test.common.BaseTestCase"
  },
  "type": "import"
 },
 "molmod.test.test_vectors.VectorTestCase": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "molmod.test.common.BaseTestCase": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.test.test_vectors.VectorTestCase.test_angle": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "angle": {
     "line number": [
      58,
      61,
      63,
      67
     ]
    },
    "builtins.range": {
     "line number": [
      55
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      65,
      66
     ]
    },
    "numpy.pi": {
     "line number": [
      60,
      64,
      68
     ]
    },
    "numpy.random.normal": {
     "line number": [
      56,
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_vectors.VectorTestCase.test_cosine": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      39
     ]
    },
    "cosine": {
     "line number": [
      42,
      45,
      47,
      51
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      49,
      50
     ]
    },
    "numpy.random.normal": {
     "line number": [
      40,
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_vectors.VectorTestCase.test_random_orthonormal": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      77
     ]
    },
    "numpy.dot": {
     "line number": [
      80
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      81
     ]
    },
    "numpy.random.normal": {
     "line number": [
      78
     ]
    },
    "random_orthonormal": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_vectors.VectorTestCase.test_random_unit": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      71
     ]
    },
    "len": {
     "line number": [
      74
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      72,
      73
     ]
    },
    "random_unit": {
     "line number": [
      72,
      73,
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_vectors.VectorTestCase.test_triangle_normal": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      84
     ]
    },
    "numpy.dot": {
     "line number": [
      89,
      90,
      91
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      92
     ]
    },
    "numpy.random.normal": {
     "line number": [
      85,
      86,
      87
     ]
    },
    "triangle_normal": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_vectors.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "molmod.test.test_vectors.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.test.test_vectors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.test.test_vectors.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.test.test_zmatrix": {
  "data": {},
  "type": "module"
 },
 "molmod.test.test_zmatrix.BaseTestCase": {
  "data": {
   "shadows": "molmod.test.common.BaseTestCase"
  },
  "type": "import"
 },
 "molmod.test.test_zmatrix.ZMatrixTestCase": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "molmod.test.common.BaseTestCase": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.test.test_zmatrix.ZMatrixTestCase.test_constency": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "test_one": {
     "line number": [
      105,
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_zmatrix.ZMatrixTestCase.test_constency.test_one": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "Molecule": {
     "line number": [
      51
     ]
    },
    "ZMatrixGenerator": {
     "line number": [
      41,
      54
     ]
    },
    "molmod.test.test_zmatrix.pkg_resources": {
     "line number": [
      39
     ]
    },
    "numpy.arange": {
     "line number": [
      43,
      44,
      55,
      56
     ]
    },
    "zmat_to_cart": {
     "line number": [
      50,
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.test.test_zmatrix.__all__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "molmod.test.test_zmatrix.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.test.test_zmatrix.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "molmod.unit_cells": {
  "data": {},
  "type": "module"
 },
 "molmod.unit_cells.ReadOnly": {
  "data": {
   "shadows": "molmod.utils.ReadOnly"
  },
  "type": "import"
 },
 "molmod.unit_cells.ReadOnlyAttribute": {
  "data": {
   "shadows": "molmod.utils.ReadOnlyAttribute"
  },
  "type": "import"
 },
 "molmod.unit_cells.Rotation": {
  "data": {
   "shadows": "molmod.transformations.Rotation"
  },
  "type": "import"
 },
 "molmod.unit_cells.UnitCell": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "molmod.utils.ReadOnly": {
     "line number": [
      37
     ]
    },
    "molmod.utils.ReadOnlyAttribute": {
     "line number": [
      47,
      50
     ]
    },
    "numpy.bool_": {
     "line number": [
      51
     ]
    },
    "numpy.floating": {
     "line number": [
      48
     ]
    },
    "numpy.ndarray": {
     "line number": [
      47,
      50
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.unit_cells.UnitCell.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      73,
      75
     ]
    },
    "abs": {
     "line number": [
      74
     ]
    },
    "enumerate": {
     "line number": [
      69
     ]
    },
    "numpy.array": {
     "line number": [
      65
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.unit_cells.UnitCell.__mul__": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "molmod.unit_cells.UnitCell.__truediv__": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "molmod.unit_cells.UnitCell.active_inactive": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      154
     ]
    },
    "molmod.utils.cached": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.unit_cells.UnitCell.add_cell_vector": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      292
     ]
    },
    "bool": {
     "line number": [
      294
     ]
    },
    "float": {
     "line number": [
      293
     ]
    },
    "len": {
     "line number": [
      291,
      295,
      304,
      313
     ]
    },
    "molmod.unit_cells.UnitCell": {
     "line number": [
      299,
      308,
      317
     ]
    },
    "numpy.zeros": {
     "line number": [
      293,
      294
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.unit_cells.UnitCell.alignment_a": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "molmod.transformations.Rotation": {
     "line number": [
      218
     ]
    },
    "molmod.utils.cached": {
     "line number": [
      202
     ]
    },
    "numpy.array": {
     "line number": [
      218
     ]
    },
    "numpy.cross": {
     "line number": [
      214,
      216
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      213,
      215,
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.unit_cells.UnitCell.alignment_c": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": {
    "molmod.transformations.Rotation": {
     "line number": [
      236
     ]
    },
    "molmod.utils.cached": {
     "line number": [
      220
     ]
    },
    "numpy.array": {
     "line number": [
      236
     ]
    },
    "numpy.cross": {
     "line number": [
      232,
      234
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      231,
      233,
      235
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.unit_cells.UnitCell.from_parameters3": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      94,
      97,
      121
     ]
    },
    "bool": {
     "line number": [
      124
     ]
    },
    "classmethod": {
     "line number": [
      83
     ]
    },
    "cls": {
     "line number": [
      125
     ]
    },
    "float": {
     "line number": [
      101
     ]
    },
    "numpy.cos": {
     "line number": [
      107,
      115,
      116
     ]
    },
    "numpy.ones": {
     "line number": [
      124
     ]
    },
    "numpy.pi": {
     "line number": [
      96
     ]
    },
    "numpy.sin": {
     "line number": [
      108
     ]
    },
    "numpy.sqrt": {
     "line number": [
      122
     ]
    },
    "numpy.zeros": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.unit_cells.UnitCell.get_radius_indexes": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": {
    "int": {
     "line number": [
      368
     ]
    },
    "molmod.ext.unit_cell_get_radius_indexes": {
     "line number": [
      373
     ]
    },
    "numpy.array": {
     "line number": [
      363
     ]
    },
    "numpy.product": {
     "line number": [
      367
     ]
    },
    "numpy.zeros": {
     "line number": [
      368
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.unit_cells.UnitCell.get_radius_ranges": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      333
     ]
    },
    "int": {
     "line number": [
      332
     ]
    },
    "numpy.ceil": {
     "line number": [
      336,
      338
     ]
    },
    "numpy.zeros": {
     "line number": [
      332
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.unit_cells.UnitCell.ordered": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": {
    "molmod.unit_cells.UnitCell": {
     "line number": [
      200
     ]
    },
    "molmod.utils.cached": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.unit_cells.UnitCell.parameters": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "float": {
     "line number": [
      191,
      192
     ]
    },
    "molmod.utils.cached": {
     "line number": [
      181
     ]
    },
    "numpy.arccos": {
     "line number": [
      187,
      188,
      189
     ]
    },
    "numpy.array": {
     "line number": [
      191,
      192
     ]
    },
    "numpy.dot": {
     "line number": [
      187,
      188,
      189
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      184,
      185,
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.unit_cells.UnitCell.reciprocal": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      175
     ]
    },
    "builtins.range": {
     "line number": [
      174
     ]
    },
    "float": {
     "line number": [
      173
     ]
    },
    "molmod.utils.cached": {
     "line number": [
      161
     ]
    },
    "numpy.dot": {
     "line number": [
      179
     ]
    },
    "numpy.linalg.svd": {
     "line number": [
      172
     ]
    },
    "numpy.zeros": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.unit_cells.UnitCell.shortest_vector": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": {
    "numpy.floor": {
     "line number": [
      285
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.unit_cells.UnitCell.spacings": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": {
    "builtins.range": {
     "line number": [
      243
     ]
    },
    "float": {
     "line number": [
      242
     ]
    },
    "molmod.utils.cached": {
     "line number": [
      238
     ]
    },
    "numpy.zeros": {
     "line number": [
      242
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.unit_cells.UnitCell.to_cartesian": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.unit_cells.UnitCell.to_fractional": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      258
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.unit_cells.UnitCell.volume": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      147
     ]
    },
    "len": {
     "line number": [
      140,
      142,
      144,
      146
     ]
    },
    "molmod.utils.cached": {
     "line number": [
      127
     ]
    },
    "numpy.cross": {
     "line number": [
      145
     ]
    },
    "numpy.linalg.det": {
     "line number": [
      147
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      143,
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.unit_cells.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "molmod.unit_cells.cached": {
  "data": {
   "shadows": "molmod.utils.cached"
  },
  "type": "import"
 },
 "molmod.unit_cells.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.unit_cells.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.unit_cells.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.unit_cells.unit_cell_get_radius_indexes": {
  "data": {
   "shadows": "molmod.ext.unit_cell_get_radius_indexes"
  },
  "type": "import"
 },
 "molmod.units": {
  "data": {
   "symbols_in_volume": {
    "__doc__": {
     "line number": [
      218
     ]
    },
    "float": {
     "line number": [
      213,
      228
     ]
    },
    "globals": {
     "line number": [
      212
     ]
    },
    "isinstance": {
     "line number": [
      213,
      228
     ]
    },
    "molmod.constants.avogadro": {
     "line number": [
      95
     ]
    },
    "molmod.units.angstrom": {
     "line number": [
      185
     ]
    },
    "molmod.units.au": {
     "line number": [
      200
     ]
    },
    "molmod.units.bar": {
     "line number": [
      157
     ]
    },
    "molmod.units.calorie": {
     "line number": [
      128,
      189
     ]
    },
    "molmod.units.centimeter": {
     "line number": [
      181
     ]
    },
    "molmod.units.coulomb": {
     "line number": [
      129,
      169,
      175
     ]
    },
    "molmod.units.decimeter": {
     "line number": [
      120
     ]
    },
    "molmod.units.electronvolt": {
     "line number": [
      190
     ]
    },
    "molmod.units.femtosecond": {
     "line number": [
      195
     ]
    },
    "molmod.units.gram": {
     "line number": [
      177
     ]
    },
    "molmod.units.hertz": {
     "line number": [
      193
     ]
    },
    "molmod.units.joule": {
     "line number": [
      126,
      127,
      129,
      134,
      188
     ]
    },
    "molmod.units.kelvin": {
     "line number": [
      198
     ]
    },
    "molmod.units.kilogram": {
     "line number": [
      101,
      102,
      103,
      176
     ]
    },
    "molmod.units.lines": {
     "line number": [
      215,
      216,
      218,
      230,
      231,
      233,
      235
     ]
    },
    "molmod.units.liter": {
     "line number": [
      187
     ]
    },
    "molmod.units.meter": {
     "line number": [
      110,
      111,
      112,
      113,
      114,
      115,
      116,
      134,
      155,
      180
     ]
    },
    "molmod.units.micrometer": {
     "line number": [
      183
     ]
    },
    "molmod.units.miligram": {
     "line number": [
      178
     ]
    },
    "molmod.units.milimeter": {
     "line number": [
      182
     ]
    },
    "molmod.units.mol": {
     "line number": [
      103,
      127,
      128
     ]
    },
    "molmod.units.nanometer": {
     "line number": [
      184
     ]
    },
    "molmod.units.nanosecond": {
     "line number": [
      194
     ]
    },
    "molmod.units.newton": {
     "line number": [
      155,
      191
     ]
    },
    "molmod.units.parse_unit": {
     "line number": [
      233
     ]
    },
    "molmod.units.pascal": {
     "line number": [
      156,
      197
     ]
    },
    "molmod.units.picometer": {
     "line number": [
      186
     ]
    },
    "molmod.units.picosecond": {
     "line number": [
      196
     ]
    },
    "molmod.units.second": {
     "line number": [
      145,
      146,
      147,
      151,
      169,
      192
     ]
    },
    "molmod.units.shorthands": {
     "line number": [
      227
     ]
    },
    "molmod.units.unified": {
     "line number": [
      104,
      179
     ]
    },
    "sorted": {
     "line number": [
      212,
      227
     ]
    }
   }
  },
  "type": "module"
 },
 "molmod.units.ampere": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "molmod.units.amu": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "molmod.units.angstrom": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "molmod.units.atm": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "molmod.units.au": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "molmod.units.avogadro": {
  "data": {
   "shadows": "molmod.constants.avogadro"
  },
  "type": "import"
 },
 "molmod.units.bar": {
  "data": {
   "lineno": 156
  },
  "type": "constant"
 },
 "molmod.units.calorie": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "molmod.units.centimeter": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "molmod.units.coulomb": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "molmod.units.debye": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "molmod.units.decimeter": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "molmod.units.deg": {
  "data": {
   "lineno": 138
  },
  "type": "constant"
 },
 "molmod.units.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.units.electronvolt": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "molmod.units.femtosecond": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "molmod.units.gram": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "molmod.units.hertz": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "molmod.units.joule": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "molmod.units.kcalmol": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "molmod.units.kelvin": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "molmod.units.kilogram": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "molmod.units.kjmol": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "molmod.units.lines": {
  "data": {
   "lineno": 221
  },
  "type": "constant"
 },
 "molmod.units.liter": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "molmod.units.meter": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "molmod.units.micrometer": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "molmod.units.miligram": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "molmod.units.milimeter": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "molmod.units.mol": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "molmod.units.nanometer": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "molmod.units.nanosecond": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "molmod.units.newton": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "molmod.units.parse_unit": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      82
     ]
    },
    "eval": {
     "line number": [
      80
     ]
    },
    "float": {
     "line number": [
      80
     ]
    },
    "globals": {
     "line number": [
      78
     ]
    },
    "str": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.units.pascal": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "molmod.units.picometer": {
  "data": {
   "lineno": 116
  },
  "type": "constant"
 },
 "molmod.units.picosecond": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "molmod.units.rad": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "molmod.units.rydberg": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "molmod.units.second": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "molmod.units.shorthands": {
  "data": {
   "lineno": 174
  },
  "type": "constant"
 },
 "molmod.units.unified": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "molmod.utils": {
  "data": {},
  "type": "module"
 },
 "molmod.utils.ReadOnly": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "future.utils.with_metaclass": {
     "line number": [
      247
     ]
    },
    "molmod.utils.ReadOnlyType": {
     "line number": [
      247
     ]
    },
    "object": {
     "line number": [
      247
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.utils.ReadOnly.__copy__": {
  "data": {
   "lineno": 258
  },
  "type": "function"
 },
 "molmod.utils.ReadOnly.__deepcopy__": {
  "data": {
   "lineno": 261
  },
  "type": "function"
 },
 "molmod.utils.ReadOnly.__getstate__": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      268
     ]
    },
    "molmod.utils.ReadOnlyAttribute": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.utils.ReadOnly.__setstate__": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      276,
      285
     ]
    },
    "molmod.utils.ReadOnlyAttribute": {
     "line number": [
      276,
      285
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.utils.ReadOnly.copy_with": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      304
     ]
    },
    "isinstance": {
     "line number": [
      300
     ]
    },
    "molmod.utils.ReadOnlyAttribute": {
     "line number": [
      300
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.utils.ReadOnlyAttribute": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "object": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.utils.ReadOnlyAttribute.__get__": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      171
     ]
    },
    "isinstance": {
     "line number": [
      172
     ]
    },
    "numpy.ndarray": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.utils.ReadOnlyAttribute.__init__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      122,
      126,
      130
     ]
    },
    "ValueError": {
     "line number": [
      136
     ]
    },
    "all": {
     "line number": [
      128
     ]
    },
    "id": {
     "line number": [
      164
     ]
    },
    "int": {
     "line number": [
      125,
      128
     ]
    },
    "isinstance": {
     "line number": [
      125,
      127,
      128
     ]
    },
    "issubclass": {
     "line number": [
      121,
      124,
      145
     ]
    },
    "len": {
     "line number": [
      161
     ]
    },
    "list": {
     "line number": [
      121
     ]
    },
    "numpy.ndarray": {
     "line number": [
      124,
      145
     ]
    },
    "str": {
     "line number": [
      154
     ]
    },
    "tuple": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.utils.ReadOnlyAttribute.__set__": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      178,
      189,
      192,
      199,
      202,
      210
     ]
    },
    "ValueError": {
     "line number": [
      207
     ]
    },
    "builtins.range": {
     "line number": [
      195
     ]
    },
    "hasattr": {
     "line number": [
      185
     ]
    },
    "hash": {
     "line number": [
      222
     ]
    },
    "isinstance": {
     "line number": [
      209,
      218
     ]
    },
    "issubclass": {
     "line number": [
      179,
      184
     ]
    },
    "len": {
     "line number": [
      191,
      193,
      195,
      198
     ]
    },
    "numpy.array": {
     "line number": [
      187
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      206
     ]
    },
    "numpy.ndarray": {
     "line number": [
      184,
      218
     ]
    },
    "setattr": {
     "line number": [
      225
     ]
    },
    "tuple": {
     "line number": [
      179,
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.utils.ReadOnlyAttribute.check_wrapper": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "molmod.utils.ReadOnlyType": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "type": {
     "line number": [
      233
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.utils.ReadOnlyType.__init__": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      243
     ]
    },
    "molmod.utils.ReadOnlyAttribute": {
     "line number": [
      243
     ]
    },
    "molmod.utils.ReadOnlyType": {
     "line number": [
      240
     ]
    },
    "setattr": {
     "line number": [
      244
     ]
    },
    "super": {
     "line number": [
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.utils.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "molmod.utils.cached": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "object": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.utils.cached.__get__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      66
     ]
    },
    "setattr": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.utils.cached.__init__": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "molmod.utils.compute_rmsd": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": {
    "numpy.sqrt": {
     "line number": [
      315
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.utils.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.utils.with_metaclass": {
  "data": {
   "shadows": "future.utils.with_metaclass"
  },
  "type": "import"
 },
 "molmod.vectors": {
  "data": {
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      68,
      69,
      70
     ]
    }
   }
  },
  "type": "module"
 },
 "molmod.vectors.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "molmod.vectors.angle": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "molmod.vectors.cosine": {
     "line number": [
      51
     ]
    },
    "numpy.arccos": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.vectors.cosine": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "numpy.clip": {
     "line number": [
      43
     ]
    },
    "numpy.dot": {
     "line number": [
      42
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      42,
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.vectors.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "molmod.vectors.normal_fns": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "molmod.vectors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.vectors.random_orthonormal": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "molmod.vectors.normal_fns": {
     "line number": [
      75
     ]
    },
    "numpy.argmin": {
     "line number": [
      75
     ]
    },
    "numpy.cos": {
     "line number": [
      80
     ]
    },
    "numpy.cross": {
     "line number": [
      77
     ]
    },
    "numpy.fabs": {
     "line number": [
      75
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      76,
      78
     ]
    },
    "numpy.pi": {
     "line number": [
      79
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      79
     ]
    },
    "numpy.sin": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.vectors.random_unit": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "numpy.linalg.norm": {
     "line number": [
      62
     ]
    },
    "numpy.random.normal": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.vectors.triangle_normal": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "numpy.cross": {
     "line number": [
      88
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.version": {
  "data": {},
  "type": "module"
 },
 "molmod.version.__version__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "molmod.zmatrix": {
  "data": {},
  "type": "module"
 },
 "molmod.zmatrix.ZMatrixGenerator": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "float": {
     "line number": [
      45,
      46,
      47
     ]
    },
    "int": {
     "line number": [
      44,
      45,
      46,
      47
     ]
    },
    "object": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "class"
 },
 "molmod.zmatrix.ZMatrixGenerator.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      59
     ]
    },
    "builtins.range": {
     "line number": [
      68,
      76
     ]
    },
    "enumerate": {
     "line number": [
      86
     ]
    },
    "int": {
     "line number": [
      85
     ]
    },
    "len": {
     "line number": [
      58,
      76,
      77
     ]
    },
    "list": {
     "line number": [
      76
     ]
    },
    "numpy.array": {
     "line number": [
      84
     ]
    },
    "numpy.zeros": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.zmatrix.ZMatrixGenerator._get_new_ref": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      118
     ]
    },
    "sorted": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.zmatrix.ZMatrixGenerator.cart_to_zmat": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      131
     ]
    },
    "builtins.range": {
     "line number": [
      133
     ]
    },
    "len": {
     "line number": [
      129
     ]
    },
    "molmod.ic.bend_angle": {
     "line number": [
      147
     ]
    },
    "molmod.ic.dihed_angle": {
     "line number": [
      151
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      143
     ]
    },
    "numpy.zeros": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "molmod.zmatrix.__all__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "molmod.zmatrix.ic": {
  "data": {
   "shadows": "molmod.ic"
  },
  "type": "import"
 },
 "molmod.zmatrix.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "molmod.zmatrix.random_orthonormal": {
  "data": {
   "shadows": "molmod.vectors.random_orthonormal"
  },
  "type": "import"
 },
 "molmod.zmatrix.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "molmod.zmatrix.zmat_to_cart": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "float": {
     "line number": [
      162,
      187
     ]
    },
    "len": {
     "line number": [
      161
     ]
    },
    "molmod.vectors.random_orthonormal": {
     "line number": [
      194
     ]
    },
    "numpy.array": {
     "line number": [
      187
     ]
    },
    "numpy.cos": {
     "line number": [
      170,
      202,
      204
     ]
    },
    "numpy.cross": {
     "line number": [
      199
     ]
    },
    "numpy.dot": {
     "line number": [
      191
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      185,
      189,
      192,
      196
     ]
    },
    "numpy.sin": {
     "line number": [
      171,
      202,
      203,
      203
     ]
    },
    "numpy.zeros": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 }
}