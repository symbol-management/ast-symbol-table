{
 "pydaymet": {
  "lineno": null,
  "symbols_in_volume": [
   "pkg_resources.DistributionNotFound",
   "pkg_resources.get_distribution"
  ],
  "type": "module"
 },
 "pydaymet.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pydaymet.exceptions.InvalidInputRange": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pydaymet.exceptions.InvalidInputType": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pydaymet.exceptions.InvalidInputType.__init__": {
  "lineno": 45,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "pydaymet.exceptions.InvalidInputType.__str__": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydaymet.exceptions.InvalidInputValue": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pydaymet.exceptions.InvalidInputValue.__init__": {
  "lineno": 20,
  "symbols_in_volume": [
   "typing.Generator",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "pydaymet.exceptions.InvalidInputValue.__str__": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydaymet.exceptions.MissingItems": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pydaymet.exceptions.MissingItems.__init__": {
  "lineno": 68,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "pydaymet.exceptions.MissingItems.__str__": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pydaymet.exceptions.ZeroMatched": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pydaymet.pydaymet": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pydaymet.pydaymet.Daymet": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pydaymet.pydaymet.Daymet.__init__": {
  "lineno": 35,
  "symbols_in_volume": [
   "pandas.read_html",
   "pygeoogc.RetrySession",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "pydaymet.pydaymet.Daymet.dates_todict": {
  "lineno": 57,
  "symbols_in_volume": [
   "pandas.to_datetime",
   "typing.Dict",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "pydaymet.pydaymet.Daymet.dates_tolist": {
  "lineno": 80,
  "symbols_in_volume": [
   "pandas.DateOffset",
   "pandas.DatetimeIndex",
   "pandas.date_range",
   "pandas.to_datetime",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "pydaymet.pydaymet.Daymet.pet_bygrid": {
  "lineno": 214,
  "symbols_in_volume": [
   "numpy.arccos",
   "numpy.cos",
   "numpy.exp",
   "numpy.isnan",
   "numpy.pi",
   "numpy.sin",
   "numpy.sqrt",
   "numpy.tan",
   "pandas.to_datetime",
   "py3dep.elevation_bygrid",
   "xarray.Dataset",
   "xarray.merge"
  ],
  "type": "function"
 },
 "pydaymet.pydaymet.Daymet.pet_byloc": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.arccos",
   "numpy.cos",
   "numpy.exp",
   "numpy.pi",
   "numpy.sin",
   "numpy.sqrt",
   "numpy.tan",
   "pandas.DataFrame",
   "py3dep.elevation_byloc",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "pydaymet.pydaymet.Daymet.years_todict": {
  "lineno": 74,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "pydaymet.pydaymet.Daymet.years_tolist": {
  "lineno": 100,
  "symbols_in_volume": [
   "pandas.DateOffset",
   "pandas.DatetimeIndex",
   "pandas.to_datetime",
   "typing.List",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "pydaymet.pydaymet._check_requirements": {
  "lineno": 523,
  "symbols_in_volume": [
   "typing.Iterable",
   "typing.List"
  ],
  "type": "function"
 },
 "pydaymet.pydaymet.get_bygeom": {
  "lineno": 388,
  "symbols_in_volume": [
   "numpy.array",
   "pygeoogc.MatchCRS.bounds",
   "pygeoogc.ServiceURL",
   "pygeoogc.utils.threading",
   "pygeoutils.xarray_geomask",
   "shapely.geometry.Polygon",
   "typing.List",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union",
   "xarray.Dataset",
   "xarray.merge"
  ],
  "type": "function"
 },
 "pydaymet.pydaymet.get_bygeom.getter": {
  "lineno": 469,
  "symbols_in_volume": [
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "pydaymet.pydaymet.get_byloc": {
  "lineno": 313,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.to_datetime",
   "pygeoogc.MatchCRS.coords",
   "pygeoogc.ServiceURL",
   "typing.List",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 }
}