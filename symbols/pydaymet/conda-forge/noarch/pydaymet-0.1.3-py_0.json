{
 "pydaymet": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pkg_resources.DistributionNotFound",
    "pkg_resources.get_distribution"
   ]
  },
  "type": "module"
 },
 "pydaymet.DistributionNotFound": {
  "data": {
   "shadows": "pkg_resources.DistributionNotFound"
  },
  "type": "import"
 },
 "pydaymet.__version__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pydaymet.exceptions": {
  "data": {},
  "type": "module"
 },
 "pydaymet.exceptions.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "pydaymet.exceptions.InvalidInputRange": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "pydaymet.exceptions.InvalidInputType": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pydaymet.exceptions.InvalidInputType.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pydaymet.exceptions.InvalidInputType.__str__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pydaymet.exceptions.InvalidInputValue": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pydaymet.exceptions.InvalidInputValue.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.Generator",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydaymet.exceptions.InvalidInputValue.__str__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pydaymet.exceptions.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pydaymet.exceptions.MissingItems": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pydaymet.exceptions.MissingItems.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pydaymet.exceptions.MissingItems.__str__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pydaymet.exceptions.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pydaymet.exceptions.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pydaymet.exceptions.ZeroMatched": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "pydaymet.get_distribution": {
  "data": {
   "shadows": "pkg_resources.get_distribution"
  },
  "type": "import"
 },
 "pydaymet.print_versions": {
  "data": {},
  "type": "module"
 },
 "pydaymet.print_versions.get_sys_info": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "OSError",
    "_minimal_ext_cmd",
    "pydaymet.print_versions.locale",
    "pydaymet.print_versions.os",
    "pydaymet.print_versions.platform",
    "pydaymet.print_versions.struct",
    "pydaymet.print_versions.subprocess",
    "pydaymet.print_versions.sys"
   ]
  },
  "type": "function"
 },
 "pydaymet.print_versions.get_sys_info._minimal_ext_cmd": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "pydaymet.print_versions.os",
    "pydaymet.print_versions.subprocess"
   ]
  },
  "type": "function"
 },
 "pydaymet.print_versions.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pydaymet.print_versions.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "pydaymet.print_versions.locale": {
  "data": {
   "shadows": "locale"
  },
  "type": "import"
 },
 "pydaymet.print_versions.netCDF4": {
  "data": {
   "shadows": "netCDF4"
  },
  "type": "import"
 },
 "pydaymet.print_versions.netcdf_and_hdf5_versions": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ImportError",
    "pydaymet.print_versions.h5py",
    "pydaymet.print_versions.netCDF4"
   ]
  },
  "type": "function"
 },
 "pydaymet.print_versions.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pydaymet.print_versions.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "pydaymet.print_versions.show_versions": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ModuleNotFoundError",
    "NotImplementedError",
    "OSError",
    "print",
    "pydaymet.print_versions.get_sys_info",
    "pydaymet.print_versions.importlib",
    "pydaymet.print_versions.netcdf_and_hdf5_versions",
    "pydaymet.print_versions.sys",
    "ver_f"
   ]
  },
  "type": "function"
 },
 "pydaymet.print_versions.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "pydaymet.print_versions.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pydaymet.print_versions.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pydaymet.pydaymet": {
  "data": {},
  "type": "module"
 },
 "pydaymet.pydaymet.DATE_FMT": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pydaymet.pydaymet.DEF_CRS": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pydaymet.pydaymet.Daymet": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "pydaymet.pydaymet.Daymet.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "InvalidInputValue",
    "bool",
    "dict",
    "isinstance",
    "list",
    "pandas.read_html",
    "pygeoogc.RetrySession",
    "set",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "pydaymet.pydaymet.Daymet.dates_todict": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "InvalidInputRange",
    "InvalidInputType",
    "isinstance",
    "len",
    "pandas.to_datetime",
    "pydaymet.pydaymet.DATE_FMT",
    "staticmethod",
    "str",
    "tuple",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pydaymet.pydaymet.Daymet.dates_tolist": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "pandas.DateOffset",
    "pandas.DatetimeIndex",
    "pandas.date_range",
    "pandas.to_datetime",
    "pydaymet.pydaymet.DATE_FMT",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pydaymet.pydaymet.Daymet.pet_bygrid": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "_check_requirements",
    "list",
    "numpy.arccos",
    "numpy.cos",
    "numpy.exp",
    "numpy.isnan",
    "numpy.pi",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.tan",
    "pandas.to_datetime",
    "pydaymet.pydaymet.py3dep",
    "staticmethod",
    "xarray.Dataset",
    "xarray.merge"
   ]
  },
  "type": "function"
 },
 "pydaymet.pydaymet.Daymet.pet_byloc": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "_check_requirements",
    "float",
    "numpy.arccos",
    "numpy.cos",
    "numpy.exp",
    "numpy.pi",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.tan",
    "pandas.DataFrame",
    "pydaymet.pydaymet.DEF_CRS",
    "pydaymet.pydaymet.py3dep",
    "staticmethod",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pydaymet.pydaymet.Daymet.years_todict": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "list",
    "staticmethod",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydaymet.pydaymet.Daymet.years_tolist": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "int",
    "list",
    "pandas.DateOffset",
    "pandas.DatetimeIndex",
    "pandas.to_datetime",
    "typing.List",
    "typing.Tuple",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "pydaymet.pydaymet.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "pydaymet.pydaymet.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "pydaymet.pydaymet.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pydaymet.pydaymet.MatchCRS": {
  "data": {
   "shadows": "pygeoogc.MatchCRS"
  },
  "type": "import"
 },
 "pydaymet.pydaymet.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pydaymet.pydaymet.Polygon": {
  "data": {
   "shadows": "shapely.geometry.Polygon"
  },
  "type": "import"
 },
 "pydaymet.pydaymet.RetrySession": {
  "data": {
   "shadows": "pygeoogc.RetrySession"
  },
  "type": "import"
 },
 "pydaymet.pydaymet.ServiceURL": {
  "data": {
   "shadows": "pygeoogc.ServiceURL"
  },
  "type": "import"
 },
 "pydaymet.pydaymet.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pydaymet.pydaymet.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pydaymet.pydaymet._check_requirements": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "InvalidInputType",
    "MissingItems",
    "isinstance",
    "str",
    "typing.Iterable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "pydaymet.pydaymet.geoutils": {
  "data": {
   "shadows": "pygeoutils"
  },
  "type": "import"
 },
 "pydaymet.pydaymet.get_bygeom": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "InvalidInputType",
    "bool",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "pydaymet.pydaymet.DEF_CRS",
    "pydaymet.pydaymet.Daymet",
    "pygeoogc.ServiceURL",
    "pygeoogc.utils.threading",
    "pygeoutils.geo2polygon",
    "pygeoutils.xarray_geomask",
    "shapely.geometry.Polygon",
    "str",
    "tuple",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union",
    "xarray.Dataset",
    "xarray.merge"
   ]
  },
  "type": "function"
 },
 "pydaymet.pydaymet.get_bygeom.getter": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "xarray.load_dataset"
   ]
  },
  "type": "function"
 },
 "pydaymet.pydaymet.get_byloc": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "InvalidInputRange",
    "InvalidInputType",
    "bool",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "pandas.DataFrame",
    "pandas.to_datetime",
    "pydaymet.pydaymet.DEF_CRS",
    "pydaymet.pydaymet.Daymet",
    "pygeoogc.MatchCRS.coords",
    "pygeoogc.ServiceURL",
    "str",
    "tuple",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pydaymet.pydaymet.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pydaymet.pydaymet.ogc": {
  "data": {
   "shadows": "pygeoogc"
  },
  "type": "import"
 },
 "pydaymet.pydaymet.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pydaymet.pydaymet.py3dep": {
  "data": {
   "shadows": "py3dep"
  },
  "type": "import"
 },
 "pydaymet.pydaymet.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 }
}