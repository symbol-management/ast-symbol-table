{
 "tensorly": {
  "data": {
   "symbols_in_volume": [
    "NameError",
    "tensorly.default_backend",
    "tensorly.os"
   ]
  },
  "type": "module"
 },
 "tensorly._BACKEND": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorly.__version__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "tensorly.backend": {
  "data": {
   "symbols_in_volume": [
    "tensorly.backend.sys",
    "tensorly.backend.warnings"
   ]
  },
  "type": "module"
 },
 "tensorly.backend.cupy_backend": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises",
    "tensorly.backend.cupy_backend.message"
   ]
  },
  "type": "module"
 },
 "tensorly.backend.cupy_backend.abs": {
  "data": {
   "shadows": "cupy.abs"
  },
  "type": "import"
 },
 "tensorly.backend.cupy_backend.all": {
  "data": {
   "shadows": "cupy.all"
  },
  "type": "import"
 },
 "tensorly.backend.cupy_backend.arange": {
  "data": {
   "shadows": "cupy.arange"
  },
  "type": "import"
 },
 "tensorly.backend.cupy_backend.assert_": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "tensorly.backend.cupy_backend.assert_array_almost_equal": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "tensorly.backend.cupy_backend.to_numpy"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.cupy_backend.assert_array_equal": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "tensorly.backend.cupy_backend.to_numpy"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.cupy_backend.assert_equal": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "cupy.ndarray",
    "isinstance",
    "numpy.testing.assert_equal",
    "tensorly.backend.cupy_backend.to_numpy"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.cupy_backend.assert_raises": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "tensorly.backend.cupy_backend.clip": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "cupy.clip",
    "tensorly.backend.cupy_backend.tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.cupy_backend.concatenate": {
  "data": {
   "shadows": "cupy.concatenate"
  },
  "type": "import"
 },
 "tensorly.backend.cupy_backend.context": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "tensorly.backend.cupy_backend.copy": {
  "data": {
   "shadows": "cupy.copy"
  },
  "type": "import"
 },
 "tensorly.backend.cupy_backend.cp": {
  "data": {
   "shadows": "cupy"
  },
  "type": "import"
 },
 "tensorly.backend.cupy_backend.dot": {
  "data": {
   "shadows": "cupy.dot"
  },
  "type": "import"
 },
 "tensorly.backend.cupy_backend.kr": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "ValueError",
    "cupy.reshape",
    "enumerate",
    "len",
    "tensorly.backend.cupy_backend.shape"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.cupy_backend.kron": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "cupy.reshape"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.cupy_backend.max": {
  "data": {
   "shadows": "cupy.max"
  },
  "type": "import"
 },
 "tensorly.backend.cupy_backend.maximum": {
  "data": {
   "shadows": "cupy.maximum"
  },
  "type": "import"
 },
 "tensorly.backend.cupy_backend.mean": {
  "data": {
   "shadows": "cupy.mean"
  },
  "type": "import"
 },
 "tensorly.backend.cupy_backend.message": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorly.backend.cupy_backend.min": {
  "data": {
   "shadows": "cupy.min"
  },
  "type": "import"
 },
 "tensorly.backend.cupy_backend.moveaxis": {
  "data": {
   "shadows": "cupy.moveaxis"
  },
  "type": "import"
 },
 "tensorly.backend.cupy_backend.ndim": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "tensorly.backend.cupy_backend.tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.cupy_backend.norm": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "cupy.abs",
    "cupy.max",
    "cupy.sqrt",
    "cupy.sum",
    "tensorly.backend.cupy_backend.tensor",
    "tensorly.backend.cupy_backend.to_numpy"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.cupy_backend.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorly.backend.cupy_backend.ones": {
  "data": {
   "shadows": "cupy.ones"
  },
  "type": "import"
 },
 "tensorly.backend.cupy_backend.partial_svd": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "ValueError",
    "tensorly.backend.cupy_backend.context",
    "tensorly.backend.cupy_backend.numpy",
    "tensorly.backend.cupy_backend.tensor",
    "tensorly.backend.cupy_backend.to_numpy"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.cupy_backend.prod": {
  "data": {
   "shadows": "cupy.prod"
  },
  "type": "import"
 },
 "tensorly.backend.cupy_backend.qr": {
  "data": {
   "shadows": "cupy.linalg.qr"
  },
  "type": "import"
 },
 "tensorly.backend.cupy_backend.reshape": {
  "data": {
   "shadows": "cupy.reshape"
  },
  "type": "import"
 },
 "tensorly.backend.cupy_backend.scipy.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "tensorly.backend.cupy_backend.scipy.sparse.linalg": {
  "data": {
   "shadows": "scipy.sparse.linalg"
  },
  "type": "import"
 },
 "tensorly.backend.cupy_backend.shape": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "tensorly.backend.cupy_backend.tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.cupy_backend.sign": {
  "data": {
   "shadows": "cupy.sign"
  },
  "type": "import"
 },
 "tensorly.backend.cupy_backend.solve": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "cupy.cuda.cusolver.CUSOLVERError",
    "cupy.linalg.solve",
    "tensorly.backend.cupy_backend.context",
    "tensorly.backend.cupy_backend.numpy",
    "tensorly.backend.cupy_backend.tensor",
    "tensorly.backend.cupy_backend.to_numpy",
    "tensorly.backend.cupy_backend.warnings"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.cupy_backend.sqrt": {
  "data": {
   "shadows": "cupy.sqrt"
  },
  "type": "import"
 },
 "tensorly.backend.cupy_backend.sum": {
  "data": {
   "shadows": "cupy.sum"
  },
  "type": "import"
 },
 "tensorly.backend.cupy_backend.tensor": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "cupy.array",
    "tensorly.backend.cupy_backend.numpy"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.cupy_backend.testing": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "tensorly.backend.cupy_backend.to_numpy": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "cupy.asnumpy",
    "cupy.ndarray",
    "isinstance",
    "tensorly.backend.cupy_backend.tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.cupy_backend.transpose": {
  "data": {
   "shadows": "cupy.transpose"
  },
  "type": "import"
 },
 "tensorly.backend.cupy_backend.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "tensorly.backend.cupy_backend.where": {
  "data": {
   "shadows": "cupy.where"
  },
  "type": "import"
 },
 "tensorly.backend.cupy_backend.zeros": {
  "data": {
   "shadows": "cupy.zeros"
  },
  "type": "import"
 },
 "tensorly.backend.cupy_backend.zeros_like": {
  "data": {
   "shadows": "cupy.zeros_like"
  },
  "type": "import"
 },
 "tensorly.backend.mxnet_backend": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises",
    "tensorly.backend.mxnet_backend.message"
   ]
  },
  "type": "module"
 },
 "tensorly.backend.mxnet_backend.abs": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "isinstance",
    "mxnet.nd.NDArray",
    "mxnet.nd.abs",
    "tensorly.backend.mxnet_backend.numpy",
    "tensorly.backend.mxnet_backend.tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.all": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "mxnet.nd.sum",
    "tensorly.backend.mxnet_backend.tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.arange": {
  "data": {
   "shadows": "mxnet.ndarray.arange"
  },
  "type": "import"
 },
 "tensorly.backend.mxnet_backend.assert_": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "tensorly.backend.mxnet_backend.assert_array_almost_equal": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "tensorly.backend.mxnet_backend.to_numpy"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.assert_array_equal": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "tensorly.backend.mxnet_backend.to_numpy"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.assert_equal": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "isinstance",
    "mxnet.nd.NDArray",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.assert_raises": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "tensorly.backend.mxnet_backend.clip": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "mxnet.nd.max",
    "mxnet.nd.maximum",
    "mxnet.nd.min",
    "mxnet.nd.minimum",
    "tensorly.backend.mxnet_backend.max",
    "tensorly.backend.mxnet_backend.min",
    "tensorly.backend.mxnet_backend.tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.concatenate": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "mxnet.nd.concat"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.context": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.copy": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "tensorly.backend.mxnet_backend.tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.dot": {
  "data": {
   "shadows": "mxnet.ndarray.dot"
  },
  "type": "import"
 },
 "tensorly.backend.mxnet_backend.kr": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "mxnet.ndarray.reshape",
    "tensorly.backend.mxnet_backend.shape"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.kron": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "mxnet.nd.reshape"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.max": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "isinstance",
    "mxnet.nd.NDArray",
    "mxnet.nd.max",
    "tensorly.backend.mxnet_backend.numpy",
    "tensorly.backend.mxnet_backend.tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.maximum": {
  "data": {
   "shadows": "mxnet.ndarray.maximum"
  },
  "type": "import"
 },
 "tensorly.backend.mxnet_backend.mean": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "mxnet.nd.mean",
    "tensorly.backend.mxnet_backend.tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.message": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorly.backend.mxnet_backend.min": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "isinstance",
    "mxnet.nd.NDArray",
    "mxnet.nd.min",
    "tensorly.backend.mxnet_backend.numpy",
    "tensorly.backend.mxnet_backend.tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.moveaxis": {
  "data": {
   "shadows": "mxnet.ndarray.moveaxis"
  },
  "type": "import"
 },
 "tensorly.backend.mxnet_backend.mx": {
  "data": {
   "shadows": "mxnet"
  },
  "type": "import"
 },
 "tensorly.backend.mxnet_backend.nd": {
  "data": {
   "shadows": "mxnet.nd"
  },
  "type": "import"
 },
 "tensorly.backend.mxnet_backend.ndim": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "tensorly.backend.mxnet_backend.tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.norm": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "mxnet.nd.abs",
    "mxnet.nd.max",
    "mxnet.nd.sqrt",
    "mxnet.nd.sum",
    "tensorly.backend.mxnet_backend.tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorly.backend.mxnet_backend.ones": {
  "data": {
   "shadows": "mxnet.ndarray.ones"
  },
  "type": "import"
 },
 "tensorly.backend.mxnet_backend.partial_svd": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "ValueError",
    "tensorly.backend.mxnet_backend.context",
    "tensorly.backend.mxnet_backend.numpy",
    "tensorly.backend.mxnet_backend.tensor",
    "tensorly.backend.mxnet_backend.to_numpy"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.prod": {
  "data": {
   "shadows": "mxnet.ndarray.prod"
  },
  "type": "import"
 },
 "tensorly.backend.mxnet_backend.qr": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "AttributeError",
    "mxnet.nd.linalg.gelqf",
    "tensorly.backend.mxnet_backend.tensor",
    "tensorly.backend.mxnet_backend.to_numpy",
    "tensorly.backend.mxnet_backend.warnings"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.reshape": {
  "data": {
   "shadows": "mxnet.ndarray.reshape"
  },
  "type": "import"
 },
 "tensorly.backend.mxnet_backend.scalar_sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "tensorly.backend.mxnet_backend.scipy.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "tensorly.backend.mxnet_backend.scipy.sparse.linalg": {
  "data": {
   "shadows": "scipy.sparse.linalg"
  },
  "type": "import"
 },
 "tensorly.backend.mxnet_backend.shape": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "tensorly.backend.mxnet_backend.tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.sign": {
  "data": {
   "shadows": "mxnet.ndarray.sign"
  },
  "type": "import"
 },
 "tensorly.backend.mxnet_backend.solve": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "tensorly.backend.mxnet_backend.context",
    "tensorly.backend.mxnet_backend.numpy",
    "tensorly.backend.mxnet_backend.tensor",
    "tensorly.backend.mxnet_backend.to_numpy"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.sqrt": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "isinstance",
    "math.sqrt",
    "mxnet.nd.NDArray",
    "mxnet.nd.sqrt",
    "tensorly.backend.mxnet_backend.tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.sum": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "mxnet.nd.sum",
    "tensorly.backend.mxnet_backend.tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.tensor": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "isinstance",
    "mxnet.cpu",
    "mxnet.nd.array",
    "tensorly.backend.mxnet_backend.numpy"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.testing": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "tensorly.backend.mxnet_backend.to_numpy": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "isinstance",
    "mxnet.nd.NDArray",
    "tensorly.backend.mxnet_backend.numpy",
    "tensorly.backend.mxnet_backend.tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.transpose": {
  "data": {
   "shadows": "mxnet.ndarray.transpose"
  },
  "type": "import"
 },
 "tensorly.backend.mxnet_backend.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "tensorly.backend.mxnet_backend.where": {
  "data": {
   "shadows": "mxnet.ndarray.where"
  },
  "type": "import"
 },
 "tensorly.backend.mxnet_backend.zeros": {
  "data": {
   "shadows": "mxnet.ndarray.zeros"
  },
  "type": "import"
 },
 "tensorly.backend.mxnet_backend.zeros_like": {
  "data": {
   "shadows": "mxnet.ndarray.zeros_like"
  },
  "type": "import"
 },
 "tensorly.backend.numpy_backend": {
  "data": {
   "symbols_in_volume": [
    "numpy.testing.assert_",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "module"
 },
 "tensorly.backend.numpy_backend.abs": {
  "data": {
   "shadows": "numpy.abs"
  },
  "type": "import"
 },
 "tensorly.backend.numpy_backend.all": {
  "data": {
   "shadows": "numpy.all"
  },
  "type": "import"
 },
 "tensorly.backend.numpy_backend.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "tensorly.backend.numpy_backend.assert_": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "tensorly.backend.numpy_backend.assert_array_almost_equal": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "tensorly.backend.numpy_backend.to_numpy"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.numpy_backend.assert_array_equal": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.numpy_backend.assert_equal": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "tensorly.backend.numpy_backend.assert_raises": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "tensorly.backend.numpy_backend.clip": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.clip",
    "tensorly.backend.numpy_backend.tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.numpy_backend.concatenate": {
  "data": {
   "shadows": "numpy.concatenate"
  },
  "type": "import"
 },
 "tensorly.backend.numpy_backend.context": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "tensorly.backend.numpy_backend.copy": {
  "data": {
   "shadows": "numpy.copy"
  },
  "type": "import"
 },
 "tensorly.backend.numpy_backend.dot": {
  "data": {
   "shadows": "numpy.dot"
  },
  "type": "import"
 },
 "tensorly.backend.numpy_backend.kr": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "chr",
    "len",
    "numpy.einsum",
    "ord",
    "range"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.numpy_backend.kron": {
  "data": {
   "shadows": "numpy.kron"
  },
  "type": "import"
 },
 "tensorly.backend.numpy_backend.max": {
  "data": {
   "shadows": "numpy.max"
  },
  "type": "import"
 },
 "tensorly.backend.numpy_backend.maximum": {
  "data": {
   "shadows": "numpy.maximum"
  },
  "type": "import"
 },
 "tensorly.backend.numpy_backend.mean": {
  "data": {
   "shadows": "numpy.mean"
  },
  "type": "import"
 },
 "tensorly.backend.numpy_backend.min": {
  "data": {
   "shadows": "numpy.min"
  },
  "type": "import"
 },
 "tensorly.backend.numpy_backend.moveaxis": {
  "data": {
   "shadows": "numpy.moveaxis"
  },
  "type": "import"
 },
 "tensorly.backend.numpy_backend.ndim": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "tensorly.backend.numpy_backend.tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.numpy_backend.norm": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.max",
    "numpy.sqrt",
    "numpy.sum",
    "tensorly.backend.numpy_backend.tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.numpy_backend.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorly.backend.numpy_backend.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "tensorly.backend.numpy_backend.partial_svd": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dot",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.numpy_backend.prod": {
  "data": {
   "shadows": "numpy.prod"
  },
  "type": "import"
 },
 "tensorly.backend.numpy_backend.qr": {
  "data": {
   "shadows": "numpy.linalg.qr"
  },
  "type": "import"
 },
 "tensorly.backend.numpy_backend.reshape": {
  "data": {
   "shadows": "numpy.reshape"
  },
  "type": "import"
 },
 "tensorly.backend.numpy_backend.scipy.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "tensorly.backend.numpy_backend.scipy.sparse.linalg": {
  "data": {
   "shadows": "scipy.sparse.linalg"
  },
  "type": "import"
 },
 "tensorly.backend.numpy_backend.shape": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "tensorly.backend.numpy_backend.tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.numpy_backend.sign": {
  "data": {
   "shadows": "numpy.sign"
  },
  "type": "import"
 },
 "tensorly.backend.numpy_backend.solve": {
  "data": {
   "shadows": "numpy.linalg.solve"
  },
  "type": "import"
 },
 "tensorly.backend.numpy_backend.sqrt": {
  "data": {
   "shadows": "numpy.sqrt"
  },
  "type": "import"
 },
 "tensorly.backend.numpy_backend.sum": {
  "data": {
   "shadows": "numpy.sum"
  },
  "type": "import"
 },
 "tensorly.backend.numpy_backend.tensor": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.numpy_backend.testing": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "tensorly.backend.numpy_backend.to_numpy": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.copy",
    "tensorly.backend.numpy_backend.tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.numpy_backend.transpose": {
  "data": {
   "shadows": "numpy.transpose"
  },
  "type": "import"
 },
 "tensorly.backend.numpy_backend.where": {
  "data": {
   "shadows": "numpy.where"
  },
  "type": "import"
 },
 "tensorly.backend.numpy_backend.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "tensorly.backend.numpy_backend.zeros_like": {
  "data": {
   "shadows": "numpy.zeros_like"
  },
  "type": "import"
 },
 "tensorly.backend.pytorch_backend": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "distutils.version.LooseVersion",
    "numpy.testing.assert_",
    "numpy.testing.assert_raises",
    "tensorly.backend.pytorch_backend.message",
    "tensorly.backend.pytorch_backend.torch",
    "torch.max"
   ]
  },
  "type": "module"
 },
 "tensorly.backend.pytorch_backend.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "tensorly.backend.pytorch_backend.abs": {
  "data": {
   "shadows": "torch.abs"
  },
  "type": "import"
 },
 "tensorly.backend.pytorch_backend.all": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "tensorly.backend.pytorch_backend.tensor",
    "tensorly.backend.pytorch_backend.torch"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.arange": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "float",
    "tensorly.backend.pytorch_backend.torch"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.assert_": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "tensorly.backend.pytorch_backend.assert_array_almost_equal": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "tensorly.backend.pytorch_backend.to_numpy"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.assert_array_equal": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "tensorly.backend.pytorch_backend.to_numpy"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.assert_equal": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "isinstance",
    "numpy.testing.assert_equal",
    "tensorly.backend.pytorch_backend.to_numpy",
    "tensorly.backend.pytorch_backend.torch"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.assert_raises": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "tensorly.backend.pytorch_backend.clip": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "tensorly.backend.pytorch_backend.tensor",
    "tensorly.backend.pytorch_backend.torch"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.concatenate": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "tensorly.backend.pytorch_backend.torch"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.context": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.copy": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "tensorly.backend.pytorch_backend.tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.dot": {
  "data": {
   "shadows": "torch.matmul"
  },
  "type": "import"
 },
 "tensorly.backend.pytorch_backend.kr": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "tensorly.backend.pytorch_backend.shape",
    "torch.reshape"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.kron": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "tensorly.backend.pytorch_backend.shape",
    "torch.reshape"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.max": {
  "data": {
   "shadows": "torch.max"
  },
  "type": "import"
 },
 "tensorly.backend.pytorch_backend.maximum": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "tensorly.backend.pytorch_backend.mean": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "tensorly.backend.pytorch_backend.tensor",
    "tensorly.backend.pytorch_backend.torch"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.message": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "tensorly.backend.pytorch_backend.min": {
  "data": {
   "shadows": "torch.min"
  },
  "type": "import"
 },
 "tensorly.backend.pytorch_backend.moveaxis": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "list",
    "range",
    "tensorly.backend.pytorch_backend.ndim",
    "tensorly.backend.pytorch_backend.tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.ndim": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "tensorly.backend.pytorch_backend.tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.norm": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "tensorly.backend.pytorch_backend.tensor",
    "tensorly.backend.pytorch_backend.torch"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorly.backend.pytorch_backend.ones": {
  "data": {
   "shadows": "torch.ones"
  },
  "type": "import"
 },
 "tensorly.backend.pytorch_backend.partial_svd": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "tensorly.backend.pytorch_backend.context",
    "tensorly.backend.pytorch_backend.ndim",
    "tensorly.backend.pytorch_backend.numpy",
    "tensorly.backend.pytorch_backend.tensor",
    "tensorly.backend.pytorch_backend.to_numpy",
    "tensorly.backend.pytorch_backend.torch"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.prod": {
  "data": {
   "shadows": "torch.prod"
  },
  "type": "import"
 },
 "tensorly.backend.pytorch_backend.qr": {
  "data": {
   "shadows": "torch.qr"
  },
  "type": "import"
 },
 "tensorly.backend.pytorch_backend.reshape": {
  "data": {
   "shadows": "torch.reshape"
  },
  "type": "import"
 },
 "tensorly.backend.pytorch_backend.scalar_sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "tensorly.backend.pytorch_backend.scipy.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "tensorly.backend.pytorch_backend.scipy.sparse.linalg": {
  "data": {
   "shadows": "scipy.sparse.linalg"
  },
  "type": "import"
 },
 "tensorly.backend.pytorch_backend.shape": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "tensorly.backend.pytorch_backend.tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.sign": {
  "data": {
   "shadows": "torch.sign"
  },
  "type": "import"
 },
 "tensorly.backend.pytorch_backend.solve": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "tensorly.backend.pytorch_backend.torch"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.sqrt": {
  "data": {
   "shadows": "torch.sqrt"
  },
  "type": "import"
 },
 "tensorly.backend.pytorch_backend.sum": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "tensorly.backend.pytorch_backend.tensor",
    "tensorly.backend.pytorch_backend.torch"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.tensor": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "isinstance",
    "tensorly.backend.pytorch_backend.numpy",
    "tensorly.backend.pytorch_backend.torch"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.testing": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "tensorly.backend.pytorch_backend.to_numpy": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "tensorly.backend.pytorch_backend.numpy",
    "tensorly.backend.pytorch_backend.tensor",
    "tensorly.backend.pytorch_backend.torch",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "tensorly.backend.pytorch_backend.transpose": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "list",
    "range",
    "tensorly.backend.pytorch_backend.ndim",
    "tensorly.backend.pytorch_backend.tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.where": {
  "data": {
   "shadows": "torch.where"
  },
  "type": "import"
 },
 "tensorly.backend.pytorch_backend.zeros": {
  "data": {
   "shadows": "torch.zeros"
  },
  "type": "import"
 },
 "tensorly.backend.pytorch_backend.zeros_like": {
  "data": {
   "shadows": "torch.zeros_like"
  },
  "type": "import"
 },
 "tensorly.backend.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorly.backend.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "tensorly.base": {
  "data": {},
  "type": "module"
 },
 "tensorly.base.T": {
  "data": {
   "shadows": "backend"
  },
  "type": "import"
 },
 "tensorly.base.fold": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "tensorly.base.partial_fold": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "tensorly.base.partial_tensor_to_vec": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "tensorly.base.partial_unfold"
   ]
  },
  "type": "function"
 },
 "tensorly.base.partial_unfold": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "tensorly.base.partial_vec_to_tensor": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "tensorly.base.partial_fold"
   ]
  },
  "type": "function"
 },
 "tensorly.base.tensor_to_vec": {
  "data": {
   "lineno": 3
  },
  "type": "function"
 },
 "tensorly.base.unfold": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "tensorly.base.vec_to_tensor": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "tensorly.datasets": {
  "data": {},
  "type": "module"
 },
 "tensorly.datasets.synthetic": {
  "data": {},
  "type": "module"
 },
 "tensorly.datasets.synthetic.T": {
  "data": {
   "shadows": "backend"
  },
  "type": "import"
 },
 "tensorly.datasets.synthetic.gen_image": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.float",
    "numpy.ogrid",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "tensorly.datasets.synthetic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorly.datasets.tests": {
  "data": {},
  "type": "module"
 },
 "tensorly.datasets.tests.test_synthetic": {
  "data": {},
  "type": "module"
 },
 "tensorly.datasets.tests.test_synthetic.T": {
  "data": {
   "shadows": "backend"
  },
  "type": "import"
 },
 "tensorly.datasets.tests.test_synthetic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorly.datasets.tests.test_synthetic.test_gen_image": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "abs",
    "gen_image",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "tensorly.decomposition": {
  "data": {},
  "type": "module"
 },
 "tensorly.decomposition._tucker": {
  "data": {},
  "type": "module"
 },
 "tensorly.decomposition._tucker.T": {
  "data": {
   "shadows": "backend"
  },
  "type": "import"
 },
 "tensorly.decomposition._tucker.non_negative_tucker": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "DeprecationWarning",
    "abs",
    "check_random_state",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "mode_dot",
    "print",
    "range",
    "tensorly.decomposition._tucker.tucker",
    "tensorly.decomposition._tucker.warnings",
    "tucker_to_tensor",
    "unfold",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorly.decomposition._tucker.partial_tucker": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "DeprecationWarning",
    "abs",
    "check_random_state",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "math.sqrt",
    "multi_mode_dot",
    "print",
    "range",
    "tensorly.decomposition._tucker.warnings",
    "unfold"
   ]
  },
  "type": "function"
 },
 "tensorly.decomposition._tucker.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "tensorly.decomposition._tucker.tucker": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "list",
    "range",
    "tensorly.decomposition._tucker.partial_tucker"
   ]
  },
  "type": "function"
 },
 "tensorly.decomposition._tucker.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "tensorly.decomposition.candecomp_parafac": {
  "data": {},
  "type": "module"
 },
 "tensorly.decomposition.candecomp_parafac.T": {
  "data": {
   "shadows": "backend"
  },
  "type": "import"
 },
 "tensorly.decomposition.candecomp_parafac.initialize_factors": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "range",
    "unfold"
   ]
  },
  "type": "function"
 },
 "tensorly.decomposition.candecomp_parafac.non_negative_parafac": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "abs",
    "check_random_state",
    "enumerate",
    "khatri_rao",
    "kruskal_to_tensor",
    "len",
    "numpy.abs",
    "print",
    "range",
    "tensorly.decomposition.candecomp_parafac.parafac",
    "unfold"
   ]
  },
  "type": "function"
 },
 "tensorly.decomposition.candecomp_parafac.normalize_factors": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "tensorly.decomposition.candecomp_parafac.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorly.decomposition.candecomp_parafac.parafac": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "abs",
    "enumerate",
    "khatri_rao",
    "kruskal_to_tensor",
    "numpy.ones",
    "print",
    "range",
    "tensorly.decomposition.candecomp_parafac.initialize_factors",
    "unfold"
   ]
  },
  "type": "function"
 },
 "tensorly.decomposition.robust_decomposition": {
  "data": {},
  "type": "module"
 },
 "tensorly.decomposition.robust_decomposition.T": {
  "data": {
   "shadows": "backend"
  },
  "type": "import"
 },
 "tensorly.decomposition.robust_decomposition.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorly.decomposition.robust_decomposition.robust_pca": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "fold",
    "max",
    "min",
    "numpy.max",
    "print",
    "range",
    "soft_thresholding",
    "svd_thresholding",
    "unfold"
   ]
  },
  "type": "function"
 },
 "tensorly.decomposition.tests": {
  "data": {},
  "type": "module"
 },
 "tensorly.decomposition.tests.test_candecomp_parafac": {
  "data": {},
  "type": "module"
 },
 "tensorly.decomposition.tests.test_candecomp_parafac.T": {
  "data": {
   "shadows": "backend"
  },
  "type": "import"
 },
 "tensorly.decomposition.tests.test_candecomp_parafac.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorly.decomposition.tests.test_candecomp_parafac.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tensorly.decomposition.tests.test_candecomp_parafac.test_non_negative_parafac": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "check_random_state",
    "kruskal_to_tensor",
    "non_negative_parafac",
    "parafac"
   ]
  },
  "type": "function"
 },
 "tensorly.decomposition.tests.test_candecomp_parafac.test_parafac": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "initialize_factors",
    "kruskal_to_tensor",
    "numpy.testing.assert_raises",
    "parafac"
   ]
  },
  "type": "function"
 },
 "tensorly.decomposition.tests.test_robust_decomposition": {
  "data": {},
  "type": "module"
 },
 "tensorly.decomposition.tests.test_robust_decomposition.T": {
  "data": {
   "shadows": "backend"
  },
  "type": "import"
 },
 "tensorly.decomposition.tests.test_robust_decomposition.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorly.decomposition.tests.test_robust_decomposition.test_RPCA": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "check_random_state",
    "numpy.array",
    "numpy.copy",
    "numpy.vstack",
    "robust_pca"
   ]
  },
  "type": "function"
 },
 "tensorly.decomposition.tests.test_tucker": {
  "data": {},
  "type": "module"
 },
 "tensorly.decomposition.tests.test_tucker.T": {
  "data": {
   "shadows": "backend"
  },
  "type": "import"
 },
 "tensorly.decomposition.tests.test_tucker.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorly.decomposition.tests.test_tucker.test_non_negative_tucker": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "check_random_state",
    "non_negative_tucker",
    "tucker",
    "tucker_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.decomposition.tests.test_tucker.test_partial_tucker": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "check_random_state",
    "enumerate",
    "multi_mode_dot",
    "partial_tucker"
   ]
  },
  "type": "function"
 },
 "tensorly.decomposition.tests.test_tucker.test_tucker": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "check_random_state",
    "enumerate",
    "tucker",
    "tucker_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.default_backend": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "tensorly.get_backend": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "tensorly._BACKEND"
   ]
  },
  "type": "function"
 },
 "tensorly.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "tensorly.kruskal_tensor": {
  "data": {},
  "type": "module"
 },
 "tensorly.kruskal_tensor.T": {
  "data": {
   "shadows": "backend"
  },
  "type": "import"
 },
 "tensorly.kruskal_tensor.kruskal_to_tensor": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "fold",
    "khatri_rao"
   ]
  },
  "type": "function"
 },
 "tensorly.kruskal_tensor.kruskal_to_unfolded": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "khatri_rao"
   ]
  },
  "type": "function"
 },
 "tensorly.kruskal_tensor.kruskal_to_vec": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "tensor_to_vec",
    "tensorly.kruskal_tensor.kruskal_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.metrics": {
  "data": {},
  "type": "module"
 },
 "tensorly.metrics.regression": {
  "data": {},
  "type": "module"
 },
 "tensorly.metrics.regression.MSE": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "tensorly.metrics.regression.RMSE": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "tensorly.metrics.regression.MSE"
   ]
  },
  "type": "function"
 },
 "tensorly.metrics.regression.T": {
  "data": {
   "shadows": "backend"
  },
  "type": "import"
 },
 "tensorly.metrics.regression.correlation": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "tensorly.metrics.regression.covariance",
    "tensorly.metrics.regression.variance"
   ]
  },
  "type": "function"
 },
 "tensorly.metrics.regression.covariance": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "tensorly.metrics.regression.reflective_correlation_coefficient": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "tensorly.metrics.regression.standard_deviation": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "tensorly.metrics.regression.variance"
   ]
  },
  "type": "function"
 },
 "tensorly.metrics.regression.variance": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "tensorly.metrics.regression.covariance"
   ]
  },
  "type": "function"
 },
 "tensorly.metrics.tests": {
  "data": {},
  "type": "module"
 },
 "tensorly.metrics.tests.test_regression": {
  "data": {},
  "type": "module"
 },
 "tensorly.metrics.tests.test_regression.T": {
  "data": {
   "shadows": "backend"
  },
  "type": "import"
 },
 "tensorly.metrics.tests.test_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorly.metrics.tests.test_regression.test_MSE": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "MSE"
   ]
  },
  "type": "function"
 },
 "tensorly.metrics.tests.test_regression.test_RMSE": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "MSE"
   ]
  },
  "type": "function"
 },
 "tensorly.metrics.tests.test_regression.test_correlation": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "correlation",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "tensorly.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tensorly.random": {
  "data": {},
  "type": "module"
 },
 "tensorly.random.base": {
  "data": {},
  "type": "module"
 },
 "tensorly.random.base.T": {
  "data": {
   "shadows": "backend"
  },
  "type": "import"
 },
 "tensorly.random.base.check_random_state": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "tensorly.random.base.cp_tensor": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "kruskal_to_tensor",
    "min",
    "tensorly.random.base.check_random_state"
   ]
  },
  "type": "function"
 },
 "tensorly.random.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorly.random.base.qr": {
  "data": {
   "shadows": "numpy.linalg.qr"
  },
  "type": "import"
 },
 "tensorly.random.base.tucker_tensor": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "int",
    "isinstance",
    "numpy.linalg.qr",
    "tensorly.random.base.check_random_state",
    "tucker_to_tensor",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorly.random.tests": {
  "data": {},
  "type": "module"
 },
 "tensorly.random.tests.test_base": {
  "data": {},
  "type": "module"
 },
 "tensorly.random.tests.test_base.T": {
  "data": {
   "shadows": "backend"
  },
  "type": "import"
 },
 "tensorly.random.tests.test_base.matrix_rank": {
  "data": {
   "shadows": "numpy.linalg.matrix_rank"
  },
  "type": "import"
 },
 "tensorly.random.tests.test_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorly.random.tests.test_base.test_check_random_state": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "isinstance",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "tensorly.random.tests.test_base.test_cp_tensor": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "cp_tensor",
    "enumerate",
    "numpy.linalg.matrix_rank",
    "numpy.testing.assert_raises",
    "range",
    "unfold"
   ]
  },
  "type": "function"
 },
 "tensorly.random.tests.test_base.test_tucker_tensor": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "min",
    "multi_mode_dot",
    "numpy.eye",
    "numpy.linalg.matrix_rank",
    "range",
    "tucker_tensor",
    "tucker_to_tensor",
    "unfold"
   ]
  },
  "type": "function"
 },
 "tensorly.regression": {
  "data": {},
  "type": "module"
 },
 "tensorly.regression.kruskal_regression": {
  "data": {},
  "type": "module"
 },
 "tensorly.regression.kruskal_regression.KruskalRegressor": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "tensorly.regression.kruskal_regression.KruskalRegressor.__init__": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "tensorly.regression.kruskal_regression.KruskalRegressor.fit": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "abs",
    "check_random_state",
    "khatri_rao",
    "kruskal_to_tensor",
    "kruskal_to_vec",
    "len",
    "numpy.eye",
    "partial_unfold",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "tensorly.regression.kruskal_regression.KruskalRegressor.get_params": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "tensorly.regression.kruskal_regression.KruskalRegressor.predict": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "partial_tensor_to_vec"
   ]
  },
  "type": "function"
 },
 "tensorly.regression.kruskal_regression.KruskalRegressor.set_params": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "tensorly.regression.kruskal_regression.T": {
  "data": {
   "shadows": "backend"
  },
  "type": "import"
 },
 "tensorly.regression.kruskal_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorly.regression.tests": {
  "data": {},
  "type": "module"
 },
 "tensorly.regression.tests.test_kruskal_regression": {
  "data": {},
  "type": "module"
 },
 "tensorly.regression.tests.test_kruskal_regression.T": {
  "data": {
   "shadows": "backend"
  },
  "type": "import"
 },
 "tensorly.regression.tests.test_kruskal_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorly.regression.tests.test_kruskal_regression.test_KruskalRegressor": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "KruskalRegressor",
    "RMSE",
    "check_random_state",
    "numpy.zeros",
    "partial_tensor_to_vec",
    "tensor_to_vec"
   ]
  },
  "type": "function"
 },
 "tensorly.regression.tests.test_tucker_regression": {
  "data": {},
  "type": "module"
 },
 "tensorly.regression.tests.test_tucker_regression.T": {
  "data": {
   "shadows": "backend"
  },
  "type": "import"
 },
 "tensorly.regression.tests.test_tucker_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorly.regression.tests.test_tucker_regression.test_TuckerRegressor": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "RMSE",
    "TuckerRegressor",
    "numpy.random.normal",
    "numpy.zeros",
    "partial_tensor_to_vec",
    "tensor_to_vec"
   ]
  },
  "type": "function"
 },
 "tensorly.regression.tucker_regression": {
  "data": {},
  "type": "module"
 },
 "tensorly.regression.tucker_regression.T": {
  "data": {
   "shadows": "backend"
  },
  "type": "import"
 },
 "tensorly.regression.tucker_regression.TuckerRegressor": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "tensorly.regression.tucker_regression.TuckerRegressor.__init__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "tensorly.regression.tucker_regression.TuckerRegressor.fit": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "abs",
    "check_random_state",
    "kronecker",
    "len",
    "numpy.eye",
    "partial_tensor_to_vec",
    "partial_unfold",
    "print",
    "range",
    "tucker_to_tensor",
    "tucker_to_vec",
    "unfold",
    "vec_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.regression.tucker_regression.TuckerRegressor.get_params": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "tensorly.regression.tucker_regression.TuckerRegressor.predict": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "partial_tensor_to_vec"
   ]
  },
  "type": "function"
 },
 "tensorly.regression.tucker_regression.TuckerRegressor.set_params": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "tensorly.regression.tucker_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorly.set_backend": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "getattr",
    "globals",
    "hasattr",
    "tensorly._BACKEND",
    "tensorly.importlib"
   ]
  },
  "type": "function"
 },
 "tensorly.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tensorly.tenalg": {
  "data": {},
  "type": "module"
 },
 "tensorly.tenalg._khatri_rao": {
  "data": {},
  "type": "module"
 },
 "tensorly.tenalg._khatri_rao.T": {
  "data": {
   "shadows": "backend"
  },
  "type": "import"
 },
 "tensorly.tenalg._khatri_rao.khatri_rao": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "tensorly.tenalg._kronecker": {
  "data": {},
  "type": "module"
 },
 "tensorly.tenalg._kronecker.T": {
  "data": {
   "shadows": "backend"
  },
  "type": "import"
 },
 "tensorly.tenalg._kronecker.kronecker": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "tensorly.tenalg.generalised_inner_product": {
  "data": {},
  "type": "module"
 },
 "tensorly.tenalg.generalised_inner_product.T": {
  "data": {
   "shadows": "backend"
  },
  "type": "import"
 },
 "tensorly.tenalg.generalised_inner_product.inner": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "list",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "tensorly.tenalg.generalised_inner_product.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorly.tenalg.n_mode_product": {
  "data": {},
  "type": "module"
 },
 "tensorly.tenalg.n_mode_product.T": {
  "data": {
   "shadows": "backend"
  },
  "type": "import"
 },
 "tensorly.tenalg.n_mode_product.mode_dot": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "ValueError",
    "fold",
    "len",
    "list",
    "unfold"
   ]
  },
  "type": "function"
 },
 "tensorly.tenalg.n_mode_product.multi_mode_dot": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "range",
    "tensorly.tenalg.n_mode_product.mode_dot",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorly.tenalg.proximal": {
  "data": {},
  "type": "module"
 },
 "tensorly.tenalg.proximal.T": {
  "data": {
   "shadows": "backend"
  },
  "type": "import"
 },
 "tensorly.tenalg.proximal.procrustes": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "min"
   ]
  },
  "type": "function"
 },
 "tensorly.tenalg.proximal.soft_thresholding": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "tensorly.tenalg.proximal.svd_thresholding": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "min",
    "tensorly.tenalg.proximal.soft_thresholding"
   ]
  },
  "type": "function"
 },
 "tensorly.tenalg.tests": {
  "data": {},
  "type": "module"
 },
 "tensorly.tenalg.tests.test_generalised_inner_product": {
  "data": {},
  "type": "module"
 },
 "tensorly.tenalg.tests.test_generalised_inner_product.T": {
  "data": {
   "shadows": "backend"
  },
  "type": "import"
 },
 "tensorly.tenalg.tests.test_generalised_inner_product.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorly.tenalg.tests.test_generalised_inner_product.test_inner": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ValueError",
    "inner",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "tensorly.tenalg.tests.test_khatri_rao": {
  "data": {},
  "type": "module"
 },
 "tensorly.tenalg.tests.test_khatri_rao.T": {
  "data": {
   "shadows": "backend"
  },
  "type": "import"
 },
 "tensorly.tenalg.tests.test_khatri_rao.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorly.tenalg.tests.test_khatri_rao.test_khatri_rao": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ValueError",
    "khatri_rao",
    "numpy.arange",
    "numpy.eye",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "tensorly.tenalg.tests.test_kronecker": {
  "data": {},
  "type": "module"
 },
 "tensorly.tenalg.tests.test_kronecker.T": {
  "data": {
   "shadows": "backend"
  },
  "type": "import"
 },
 "tensorly.tenalg.tests.test_kronecker.inv": {
  "data": {
   "shadows": "scipy.linalg.inv"
  },
  "type": "import"
 },
 "tensorly.tenalg.tests.test_kronecker.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorly.tenalg.tests.test_kronecker.test_kronecker": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "enumerate",
    "khatri_rao",
    "kronecker",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "tensorly.tenalg.tests.test_n_mode_product": {
  "data": {},
  "type": "module"
 },
 "tensorly.tenalg.tests.test_n_mode_product.T": {
  "data": {
   "shadows": "backend"
  },
  "type": "import"
 },
 "tensorly.tenalg.tests.test_n_mode_product.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorly.tenalg.tests.test_n_mode_product.test_mode_dot": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ValueError",
    "fold",
    "mode_dot",
    "numpy.random.random",
    "unfold"
   ]
  },
  "type": "function"
 },
 "tensorly.tenalg.tests.test_n_mode_product.test_multi_mode_dot": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "kronecker",
    "multi_mode_dot",
    "numpy.arange",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.random.random",
    "range",
    "unfold"
   ]
  },
  "type": "function"
 },
 "tensorly.tenalg.tests.test_proximal": {
  "data": {},
  "type": "module"
 },
 "tensorly.tenalg.tests.test_proximal.T": {
  "data": {
   "shadows": "backend"
  },
  "type": "import"
 },
 "tensorly.tenalg.tests.test_proximal.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorly.tenalg.tests.test_proximal.test_procrustes": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "min",
    "numpy.random.rand",
    "procrustes"
   ]
  },
  "type": "function"
 },
 "tensorly.tenalg.tests.test_proximal.test_soft_thresholding": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "soft_thresholding"
   ]
  },
  "type": "function"
 },
 "tensorly.tenalg.tests.test_proximal.test_svd_thresholding": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "svd_thresholding"
   ]
  },
  "type": "function"
 },
 "tensorly.tests": {
  "data": {},
  "type": "module"
 },
 "tensorly.tests.test_backend": {
  "data": {},
  "type": "module"
 },
 "tensorly.tests.test_backend.T": {
  "data": {
   "shadows": "backend"
  },
  "type": "import"
 },
 "tensorly.tests.test_backend.cp": {
  "data": {
   "shadows": "cupy"
  },
  "type": "import"
 },
 "tensorly.tests.test_backend.mx": {
  "data": {
   "shadows": "mxnet"
  },
  "type": "import"
 },
 "tensorly.tests.test_backend.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorly.tests.test_backend.svd": {
  "data": {
   "shadows": "scipy.linalg.svd"
  },
  "type": "import"
 },
 "tensorly.tests.test_backend.svds": {
  "data": {
   "shadows": "scipy.sparse.linalg.svds"
  },
  "type": "import"
 },
 "tensorly.tests.test_backend.test_fold": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "fold",
    "numpy.random.random",
    "range",
    "unfold"
   ]
  },
  "type": "function"
 },
 "tensorly.tests.test_backend.test_ndim": {
  "data": {
   "lineno": 334
  },
  "type": "function"
 },
 "tensorly.tests.test_backend.test_norm": {
  "data": {
   "lineno": 347
  },
  "type": "function"
 },
 "tensorly.tests.test_backend.test_partial_fold": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "len",
    "numpy.random.random",
    "partial_fold",
    "partial_unfold",
    "range"
   ]
  },
  "type": "function"
 },
 "tensorly.tests.test_backend.test_partial_svd": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "numpy.random.random",
    "scipy.linalg.svd",
    "scipy.sparse.linalg.svds",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorly.tests.test_backend.test_partial_tensor_to_vec": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.concatenate",
    "partial_tensor_to_vec",
    "range",
    "tensor_to_vec"
   ]
  },
  "type": "function"
 },
 "tensorly.tests.test_backend.test_partial_unfold": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.concatenate",
    "partial_unfold",
    "range",
    "unfold"
   ]
  },
  "type": "function"
 },
 "tensorly.tests.test_backend.test_partial_vec_to_tensor": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.random",
    "partial_tensor_to_vec",
    "partial_vec_to_tensor",
    "range"
   ]
  },
  "type": "function"
 },
 "tensorly.tests.test_backend.test_prod": {
  "data": {
   "lineno": 449
  },
  "type": "function"
 },
 "tensorly.tests.test_backend.test_qr": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "abs",
    "numpy.random.random",
    "range"
   ]
  },
  "type": "function"
 },
 "tensorly.tests.test_backend.test_set_backend": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "cupy.ndarray",
    "isinstance",
    "mxnet.nd.NDArray",
    "numpy.arange",
    "numpy.ndarray",
    "print",
    "tensorflow.Tensor",
    "tensorly._BACKEND",
    "tensorly.tensor",
    "tensorly.tests.test_backend.torch",
    "type"
   ]
  },
  "type": "function"
 },
 "tensorly.tests.test_backend.test_shape": {
  "data": {
   "lineno": 322
  },
  "type": "function"
 },
 "tensorly.tests.test_backend.test_tensor_to_vec": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "tensor_to_vec"
   ]
  },
  "type": "function"
 },
 "tensorly.tests.test_backend.test_unfold": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "range",
    "unfold"
   ]
  },
  "type": "function"
 },
 "tensorly.tests.test_backend.test_vec_to_tensor": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "numpy.random.random",
    "tensor_to_vec",
    "vec_to_tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.tests.test_backend.test_where": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "map",
    "numpy.prod",
    "numpy.random.randn",
    "numpy.where",
    "range"
   ]
  },
  "type": "function"
 },
 "tensorly.tests.test_backend.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "tensorly.tests.test_backend.tl": {
  "data": {
   "shadows": "tensorly"
  },
  "type": "import"
 },
 "tensorly.tests.test_backend.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "tensorly.tests.test_kruskal_tensor": {
  "data": {},
  "type": "module"
 },
 "tensorly.tests.test_kruskal_tensor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorly.tests.test_kruskal_tensor.test_kruskal_to_tensor": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "khatri_rao",
    "kruskal_to_tensor",
    "len",
    "numpy.arange",
    "numpy.reshape",
    "range",
    "tensorly.assert_array_almost_equal",
    "tensorly.assert_array_equal",
    "tensorly.dot",
    "tensorly.tensor",
    "tensorly.transpose",
    "unfold"
   ]
  },
  "type": "function"
 },
 "tensorly.tests.test_kruskal_tensor.test_kruskal_to_tensor_with_weights": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "kruskal_to_tensor",
    "tensorly.arange",
    "tensorly.assert_array_equal",
    "tensorly.reshape",
    "tensorly.tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.tests.test_kruskal_tensor.test_kruskal_to_unfolded": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "kruskal_to_tensor",
    "kruskal_to_unfolded",
    "numpy.arange",
    "numpy.reshape",
    "range",
    "tensorly.assert_array_equal",
    "tensorly.tensor",
    "unfold"
   ]
  },
  "type": "function"
 },
 "tensorly.tests.test_kruskal_tensor.test_kruskal_to_vec": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "kruskal_to_tensor",
    "kruskal_to_vec",
    "numpy.arange",
    "numpy.reshape",
    "tensor_to_vec",
    "tensorly.assert_array_equal",
    "tensorly.tensor"
   ]
  },
  "type": "function"
 },
 "tensorly.tests.test_kruskal_tensor.tl": {
  "data": {
   "shadows": "tensorly"
  },
  "type": "import"
 },
 "tensorly.tests.test_tucker_tensor": {
  "data": {},
  "type": "module"
 },
 "tensorly.tests.test_tucker_tensor.T": {
  "data": {
   "shadows": "backend"
  },
  "type": "import"
 },
 "tensorly.tests.test_tucker_tensor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tensorly.tests.test_tucker_tensor.test_tucker_to_tensor": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "tucker_to_tensor",
    "zip"
   ]
  },
  "type": "function"
 },
 "tensorly.tests.test_tucker_tensor.test_tucker_to_unfolded": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "kronecker",
    "numpy.random.random",
    "range",
    "tucker_to_tensor",
    "tucker_to_unfolded",
    "unfold"
   ]
  },
  "type": "function"
 },
 "tensorly.tests.test_tucker_tensor.test_tucker_to_vec": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "kronecker",
    "numpy.random.random",
    "range",
    "tensor_to_vec",
    "tucker_to_tensor",
    "tucker_to_vec"
   ]
  },
  "type": "function"
 },
 "tensorly.tucker_tensor": {
  "data": {},
  "type": "module"
 },
 "tensorly.tucker_tensor.tucker_to_tensor": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "multi_mode_dot"
   ]
  },
  "type": "function"
 },
 "tensorly.tucker_tensor.tucker_to_unfolded": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "tensorly.tucker_tensor.tucker_to_tensor",
    "unfold"
   ]
  },
  "type": "function"
 },
 "tensorly.tucker_tensor.tucker_to_vec": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "tensor_to_vec",
    "tensorly.tucker_tensor.tucker_to_tensor"
   ]
  },
  "type": "function"
 }
}