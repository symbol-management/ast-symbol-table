{
 "tensorly": {
  "lineno": null,
  "symbols_in_volume": [
   "os.environ.get"
  ],
  "type": "module"
 },
 "tensorly.backend": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.stderr.write",
   "warnings.warn"
  ],
  "type": "module"
 },
 "tensorly.backend.cupy_backend": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "module"
 },
 "tensorly.backend.cupy_backend.assert_array_almost_equal": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.assert_array_equal": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.assert_equal": {
  "lineno": 58,
  "symbols_in_volume": [
   "cupy.ndarray",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.clip": {
  "lineno": 76,
  "symbols_in_volume": [
   "cupy.clip"
  ],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.context": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.kr": {
  "lineno": 112,
  "symbols_in_volume": [
   "cupy.reshape"
  ],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.kron": {
  "lineno": 155,
  "symbols_in_volume": [
   "cupy.reshape"
  ],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.ndim": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.norm": {
  "lineno": 79,
  "symbols_in_volume": [
   "cupy.abs",
   "cupy.max",
   "cupy.sqrt",
   "cupy.sum"
  ],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.partial_svd": {
  "lineno": 164,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.shape": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.solve": {
  "lineno": 223,
  "symbols_in_volume": [
   "cupy.cuda.cusolver.CUSOLVERError",
   "cupy.linalg.solve",
   "numpy.linalg.solve",
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.tensor": {
  "lineno": 37,
  "symbols_in_volume": [
   "cupy.array",
   "numpy.float64"
  ],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.to_numpy": {
  "lineno": 43,
  "symbols_in_volume": [
   "cupy.asnumpy",
   "cupy.ndarray"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "module"
 },
 "tensorly.backend.mxnet_backend.abs": {
  "lineno": 115,
  "symbols_in_volume": [
   "mxnet.nd.NDArray",
   "mxnet.nd.abs",
   "numpy.abs"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.all": {
  "lineno": 283,
  "symbols_in_volume": [
   "mxnet.nd.sum"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.assert_array_almost_equal": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.assert_array_equal": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.assert_equal": {
  "lineno": 73,
  "symbols_in_volume": [
   "mxnet.nd.NDArray",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.clip": {
  "lineno": 265,
  "symbols_in_volume": [
   "mxnet.nd.max",
   "mxnet.nd.maximum",
   "mxnet.nd.min",
   "mxnet.nd.minimum"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.concatenate": {
  "lineno": 313,
  "symbols_in_volume": [
   "mxnet.nd.concat"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.context": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.copy": {
  "lineno": 310,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.kr": {
  "lineno": 153,
  "symbols_in_volume": [
   "mxnet.ndarray.reshape"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.kron": {
  "lineno": 92,
  "symbols_in_volume": [
   "mxnet.nd.reshape"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.max": {
  "lineno": 109,
  "symbols_in_volume": [
   "mxnet.nd.NDArray",
   "mxnet.nd.max",
   "numpy.max"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.mean": {
  "lineno": 286,
  "symbols_in_volume": [
   "mxnet.nd.mean"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.min": {
  "lineno": 103,
  "symbols_in_volume": [
   "mxnet.nd.NDArray",
   "mxnet.nd.min",
   "numpy.min"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.ndim": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.norm": {
  "lineno": 121,
  "symbols_in_volume": [
   "mxnet.nd.abs",
   "mxnet.nd.max",
   "mxnet.nd.sqrt",
   "mxnet.nd.sum"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.partial_svd": {
  "lineno": 195,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.qr": {
  "lineno": 254,
  "symbols_in_volume": [
   "mxnet.nd.linalg.gelqf",
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.shape": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.solve": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.linalg.solve"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.sqrt": {
  "lineno": 304,
  "symbols_in_volume": [
   "math.sqrt",
   "mxnet.nd.NDArray",
   "mxnet.nd.sqrt"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.sum": {
  "lineno": 295,
  "symbols_in_volume": [
   "mxnet.nd.sum"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.tensor": {
  "lineno": 39,
  "symbols_in_volume": [
   "mxnet.cpu",
   "mxnet.nd.array",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.to_numpy": {
  "lineno": 46,
  "symbols_in_volume": [
   "mxnet.nd.NDArray",
   "numpy.array",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "tensorly.backend.numpy_backend": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "module"
 },
 "tensorly.backend.numpy_backend.assert_array_almost_equal": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "tensorly.backend.numpy_backend.assert_array_equal": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tensorly.backend.numpy_backend.clip": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.clip"
  ],
  "type": "function"
 },
 "tensorly.backend.numpy_backend.context": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.numpy_backend.kr": {
  "lineno": 125,
  "symbols_in_volume": [
   "numpy.einsum"
  ],
  "type": "function"
 },
 "tensorly.backend.numpy_backend.ndim": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.numpy_backend.norm": {
  "lineno": 98,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.max",
   "numpy.sqrt",
   "numpy.sum"
  ],
  "type": "function"
 },
 "tensorly.backend.numpy_backend.partial_svd": {
  "lineno": 174,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "tensorly.backend.numpy_backend.shape": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.numpy_backend.tensor": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64"
  ],
  "type": "function"
 },
 "tensorly.backend.numpy_backend.to_numpy": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.copy"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "numpy.testing.assert_",
   "numpy.testing.assert_raises",
   "torch.__version__",
   "torch.max"
  ],
  "type": "module"
 },
 "tensorly.backend.pytorch_backend.all": {
  "lineno": 118,
  "symbols_in_volume": [
   "torch.sum"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.arange": {
  "lineno": 102,
  "symbols_in_volume": [
   "torch.arange"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.assert_array_almost_equal": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.assert_array_equal": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.assert_equal": {
  "lineno": 87,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "torch.Tensor"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.clip": {
  "lineno": 108,
  "symbols_in_volume": [
   "torch.clamp",
   "torch.max",
   "torch.min"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.concatenate": {
  "lineno": 197,
  "symbols_in_volume": [
   "torch.cat"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.context": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.copy": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.kr": {
  "lineno": 200,
  "symbols_in_volume": [
   "torch.reshape"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.kron": {
  "lineno": 142,
  "symbols_in_volume": [
   "torch.reshape"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.mean": {
  "lineno": 185,
  "symbols_in_volume": [
   "torch.mean"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.moveaxis": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.ndim": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.norm": {
  "lineno": 156,
  "symbols_in_volume": [
   "torch.abs",
   "torch.max",
   "torch.norm"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.partial_svd": {
  "lineno": 243,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.sqrt",
   "torch.svd"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.shape": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.solve": {
  "lineno": 151,
  "symbols_in_volume": [
   "torch.gesv"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.sum": {
  "lineno": 191,
  "symbols_in_volume": [
   "torch.sum"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.tensor": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.ndarray",
   "torch.float32",
   "torch.tensor"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.to_numpy": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "torch.is_tensor"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.transpose": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.testing.assert_raises",
   "tensorflow.contrib.eager.DEVICE_PLACEMENT_SILENT",
   "tensorflow.contrib.eager.enable_eager_execution"
  ],
  "type": "module"
 },
 "tensorly.backend.tensorflow_backend.arange": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.float32",
   "tensorflow.range"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.assert_array_almost_equal": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.assert_array_equal": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.assert_equal": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "tensorflow.Tensor"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.clip": {
  "lineno": 108,
  "symbols_in_volume": [
   "tensorflow.clip_by_value",
   "tensorflow.reduce_max",
   "tensorflow.reduce_min"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.context": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.copy": {
  "lineno": 121,
  "symbols_in_volume": [
   "tensorflow.identity"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.dot": {
  "lineno": 273,
  "symbols_in_volume": [
   "tensorflow.tensordot"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.kr": {
  "lineno": 146,
  "symbols_in_volume": [
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.kron": {
  "lineno": 138,
  "symbols_in_volume": [
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.moveaxis": {
  "lineno": 124,
  "symbols_in_volume": [
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.ndim": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.norm": {
  "lineno": 250,
  "symbols_in_volume": [
   "numpy.inf",
   "tensorflow.norm"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.partial_svd": {
  "lineno": 189,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.sqrt",
   "tensorflow.svd",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.reshape": {
  "lineno": 99,
  "symbols_in_volume": [
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.shape": {
  "lineno": 276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.solve": {
  "lineno": 42,
  "symbols_in_volume": [
   "tensorflow.matrix_solve",
   "tensorflow.reshape",
   "tensorflow.squeeze"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.tensor": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.float32",
   "tensorflow.Tensor",
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.to_numpy": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.ndarray",
   "tensorflow.Tensor"
  ],
  "type": "function"
 },
 "tensorly.base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.base.fold": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.base.partial_fold": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.base.partial_tensor_to_vec": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.base.partial_unfold": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.base.partial_vec_to_tensor": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.base.tensor_to_vec": {
  "lineno": 3,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.base.unfold": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.base.vec_to_tensor": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.datasets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.datasets.synthetic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.datasets.synthetic.gen_image": {
  "lineno": 5,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.float",
   "numpy.ogrid",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tensorly.datasets.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.datasets.tests.test_synthetic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.datasets.tests.test_synthetic.test_gen_image": {
  "lineno": 6,
  "symbols_in_volume": [
   "numpy.pi"
  ],
  "type": "function"
 },
 "tensorly.decomposition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition._tucker": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition._tucker.non_negative_tucker": {
  "lineno": 136,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.decomposition._tucker.partial_tucker": {
  "lineno": 14,
  "symbols_in_volume": [
   "math.sqrt",
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.decomposition._tucker.tucker": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition.candecomp_parafac": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition.candecomp_parafac.initialize_factors": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition.candecomp_parafac.non_negative_parafac": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.abs"
  ],
  "type": "function"
 },
 "tensorly.decomposition.candecomp_parafac.normalize_factors": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition.candecomp_parafac.parafac": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "tensorly.decomposition.robust_decomposition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition.robust_decomposition.robust_pca": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.max"
  ],
  "type": "function"
 },
 "tensorly.decomposition.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition.tests.test_candecomp_parafac": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition.tests.test_candecomp_parafac.test_non_negative_parafac": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_candecomp_parafac.test_parafac": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_robust_decomposition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition.tests.test_robust_decomposition.test_RPCA": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.copy",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_tucker": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition.tests.test_tucker.test_non_negative_tucker": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_tucker.test_partial_tucker": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_tucker.test_tucker": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.get_backend": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.kruskal_tensor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.kruskal_tensor.kruskal_to_tensor": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.kruskal_tensor.kruskal_to_unfolded": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.kruskal_tensor.kruskal_to_vec": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.metrics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.metrics.regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.metrics.regression.MSE": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.metrics.regression.RMSE": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.metrics.regression.correlation": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.metrics.regression.covariance": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.metrics.regression.reflective_correlation_coefficient": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.metrics.regression.standard_deviation": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.metrics.regression.variance": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.metrics.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.metrics.tests.test_regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.metrics.tests.test_regression.test_MSE": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.metrics.tests.test_regression.test_RMSE": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.metrics.tests.test_regression.test_correlation": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.random.random"
  ],
  "type": "function"
 },
 "tensorly.random": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.random.base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.random.base.check_random_state": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "tensorly.random.base.cp_tensor": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.random.base.tucker_tensor": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.linalg.qr"
  ],
  "type": "function"
 },
 "tensorly.random.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.random.tests.test_base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.random.tests.test_base.test_check_random_state": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "tensorly.random.tests.test_base.test_cp_tensor": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.linalg.matrix_rank",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "tensorly.random.tests.test_base.test_tucker_tensor": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.linalg.matrix_rank"
  ],
  "type": "function"
 },
 "tensorly.regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.regression.kruskal_regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.regression.kruskal_regression.KruskalRegressor": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.regression.kruskal_regression.KruskalRegressor.__init__": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.regression.kruskal_regression.KruskalRegressor.fit": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.eye"
  ],
  "type": "function"
 },
 "tensorly.regression.kruskal_regression.KruskalRegressor.get_params": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.regression.kruskal_regression.KruskalRegressor.predict": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.regression.kruskal_regression.KruskalRegressor.set_params": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.regression.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.regression.tests.test_kruskal_regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.regression.tests.test_kruskal_regression.test_KruskalRegressor": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tensorly.regression.tests.test_tucker_regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.regression.tests.test_tucker_regression.test_TuckerRegressor": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.random.normal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tensorly.regression.tucker_regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.regression.tucker_regression.TuckerRegressor": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.regression.tucker_regression.TuckerRegressor.__init__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.regression.tucker_regression.TuckerRegressor.fit": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.eye"
  ],
  "type": "function"
 },
 "tensorly.regression.tucker_regression.TuckerRegressor.get_params": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.regression.tucker_regression.TuckerRegressor.predict": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.regression.tucker_regression.TuckerRegressor.set_params": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.set_backend": {
  "lineno": 15,
  "symbols_in_volume": [
   "importlib.reload"
  ],
  "type": "function"
 },
 "tensorly.tenalg": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg._khatri_rao": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg._khatri_rao.khatri_rao": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tenalg._kronecker": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg._kronecker.kronecker": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tenalg.generalised_inner_product": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.generalised_inner_product.inner": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.prod"
  ],
  "type": "function"
 },
 "tensorly.tenalg.n_mode_product": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.n_mode_product.mode_dot": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tenalg.n_mode_product.multi_mode_dot": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tenalg.proximal": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.proximal.procrustes": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tenalg.proximal.soft_thresholding": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tenalg.proximal.svd_thresholding": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tenalg.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.tests.test_generalised_inner_product": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.tests.test_generalised_inner_product.test_inner": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "tensorly.tenalg.tests.test_khatri_rao": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.tests.test_khatri_rao.test_khatri_rao": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.eye",
   "numpy.reshape"
  ],
  "type": "function"
 },
 "tensorly.tenalg.tests.test_kronecker": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.tests.test_kronecker.test_kronecker": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "tensorly.tenalg.tests.test_n_mode_product": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.tests.test_n_mode_product.test_mode_dot": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.random.random"
  ],
  "type": "function"
 },
 "tensorly.tenalg.tests.test_n_mode_product.test_multi_mode_dot": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.random.random"
  ],
  "type": "function"
 },
 "tensorly.tenalg.tests.test_proximal": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.tests.test_proximal.test_procrustes": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "tensorly.tenalg.tests.test_proximal.test_soft_thresholding": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tenalg.tests.test_proximal.test_svd_thresholding": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tests.test_backend": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tests.test_backend.test_fold": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.random.random"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_ndim": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_norm": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_partial_fold": {
  "lineno": 202,
  "symbols_in_volume": [
   "numpy.random.random"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_partial_svd": {
  "lineno": 288,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.random.random",
   "scipy.linalg.svd",
   "scipy.sparse.linalg.svds"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_partial_tensor_to_vec": {
  "lineno": 240,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_partial_unfold": {
  "lineno": 156,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_partial_vec_to_tensor": {
  "lineno": 265,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.random"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_prod": {
  "lineno": 449,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_qr": {
  "lineno": 429,
  "symbols_in_volume": [
   "numpy.random.random"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_set_backend": {
  "lineno": 17,
  "symbols_in_volume": [
   "cupy.ndarray",
   "mxnet.nd.NDArray",
   "numpy.arange",
   "numpy.ndarray",
   "tensorflow.Tensor",
   "tensorly._BACKEND",
   "tensorly.tensor",
   "torch.is_tensor"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_shape": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_tensor_to_vec": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_unfold": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_vec_to_tensor": {
  "lineno": 129,
  "symbols_in_volume": [
   "numpy.random.random"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_where": {
  "lineno": 376,
  "symbols_in_volume": [
   "numpy.prod",
   "numpy.random.randn",
   "numpy.where"
  ],
  "type": "function"
 },
 "tensorly.tests.test_kruskal_tensor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tests.test_kruskal_tensor.test_kruskal_to_tensor": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.reshape",
   "tensorly.assert_array_almost_equal",
   "tensorly.assert_array_equal",
   "tensorly.dot",
   "tensorly.tensor",
   "tensorly.transpose"
  ],
  "type": "function"
 },
 "tensorly.tests.test_kruskal_tensor.test_kruskal_to_tensor_with_weights": {
  "lineno": 70,
  "symbols_in_volume": [
   "tensorly.arange",
   "tensorly.assert_array_equal",
   "tensorly.reshape",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.tests.test_kruskal_tensor.test_kruskal_to_unfolded": {
  "lineno": 80,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.reshape",
   "tensorly.assert_array_equal",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.tests.test_kruskal_tensor.test_kruskal_to_vec": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.reshape",
   "tensorly.assert_array_equal",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.tests.test_tucker_tensor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tests.test_tucker_tensor.test_tucker_to_tensor": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array"
  ],
  "type": "function"
 },
 "tensorly.tests.test_tucker_tensor.test_tucker_to_unfolded": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.random.random"
  ],
  "type": "function"
 },
 "tensorly.tests.test_tucker_tensor.test_tucker_to_vec": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.random.random"
  ],
  "type": "function"
 },
 "tensorly.tucker_tensor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tucker_tensor.tucker_to_tensor": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tucker_tensor.tucker_to_unfolded": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tucker_tensor.tucker_to_vec": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 }
}