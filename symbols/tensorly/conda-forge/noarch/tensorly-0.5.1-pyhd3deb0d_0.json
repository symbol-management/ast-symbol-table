{
 "tensorly": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly._factorized_tensor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly._factorized_tensor.FactorizedTensor": {
  "lineno": 6,
  "symbols_in_volume": [
   "abc.ABCMeta",
   "collections.abc.Mapping"
  ],
  "type": "class"
 },
 "tensorly._factorized_tensor.FactorizedTensor.__init__": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly._factorized_tensor.FactorizedTensor.mode_dot": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly._factorized_tensor.FactorizedTensor.norm": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly._factorized_tensor.FactorizedTensor.to_tensor": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly._factorized_tensor.FactorizedTensor.to_unfolded": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly._factorized_tensor.FactorizedTensor.to_vec": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend": {
  "lineno": null,
  "symbols_in_volume": [
   "threading.local"
  ],
  "type": "module"
 },
 "tensorly.backend._get_backend_dir": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend._get_backend_method": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.backend_context": {
  "lineno": 100,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "tensorly.backend.core": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.backend.core.Backend": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.backend.core.Backend.SVD_FUNS": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.abs": {
  "lineno": 438,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.all": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.arange": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.argmax": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.argmin": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.clip": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.concatenate": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.conj": {
  "lineno": 550,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.context": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.copy": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.diag": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.dot": {
  "lineno": 483,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.einsum": {
  "lineno": 579,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.eps": {
  "lineno": 544,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.eye": {
  "lineno": 252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.finfo": {
  "lineno": 547,
  "symbols_in_volume": [
   "numpy.finfo"
  ],
  "type": "function"
 },
 "tensorly.backend.core.Backend.float32": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.float64": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.index_update": {
  "lineno": 838,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.int32": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.int64": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.is_tensor": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.kr": {
  "lineno": 646,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.kron": {
  "lineno": 628,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.max": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.mean": {
  "lineno": 376,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.min": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.moveaxis": {
  "lineno": 597,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.ndim": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.norm": {
  "lineno": 466,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.ones": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.partial_svd": {
  "lineno": 698,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.dot",
   "numpy.finfo",
   "numpy.ndarray",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "numpy.where",
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.backend.core.Backend.prod": {
  "lineno": 408,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.qr": {
  "lineno": 519,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.register_method": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.reshape": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.shape": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.sign": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.solve": {
  "lineno": 498,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.sort": {
  "lineno": 559,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.sqrt": {
  "lineno": 452,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.stack": {
  "lineno": 537,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.sum": {
  "lineno": 392,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.tensor": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.to_numpy": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.transpose": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.truncated_svd": {
  "lineno": 798,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.where": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.zeros": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.zeros_like": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Index": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.backend.core.Index.__getitem__": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.cupy_backend": {
  "lineno": null,
  "symbols_in_volume": [
   "cupy"
  ],
  "type": "module"
 },
 "tensorly.backend.cupy_backend.CupyBackend": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.backend.cupy_backend.CupyBackend.SVD_FUNS": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.CupyBackend.clip": {
  "lineno": 43,
  "symbols_in_volume": [
   "cupy.clip"
  ],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.CupyBackend.context": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.CupyBackend.is_tensor": {
  "lineno": 25,
  "symbols_in_volume": [
   "cupy.ndarray"
  ],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.CupyBackend.ndim": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.CupyBackend.norm": {
  "lineno": 47,
  "symbols_in_volume": [
   "cupy.abs",
   "cupy.max",
   "cupy.sqrt",
   "cupy.sum"
  ],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.CupyBackend.shape": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.CupyBackend.solve": {
  "lineno": 65,
  "symbols_in_volume": [
   "cupy.cuda.cusolver.CUSOLVERError",
   "cupy.linalg.solve",
   "numpy.linalg.solve",
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.CupyBackend.tensor": {
  "lineno": 21,
  "symbols_in_volume": [
   "cupy.array",
   "cupy.float32"
  ],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.CupyBackend.to_numpy": {
  "lineno": 29,
  "symbols_in_volume": [
   "cupy.asnumpy",
   "cupy.ndarray"
  ],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.CupyBackend.truncated_svd": {
  "lineno": 76,
  "symbols_in_volume": [
   "cupy.linalg.svd"
  ],
  "type": "function"
 },
 "tensorly.backend.dispatch": {
  "lineno": 156,
  "symbols_in_volume": [
   "inspect.signature"
  ],
  "type": "function"
 },
 "tensorly.backend.dispatch.inner": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.get_backend": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.initialize_backend": {
  "lineno": 21,
  "symbols_in_volume": [
   "os.environ.get",
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.backend.jax_backend": {
  "lineno": null,
  "symbols_in_volume": [
   "jax.config.config.update",
   "jax.numpy",
   "jax.numpy.linalg",
   "jax.ops"
  ],
  "type": "module"
 },
 "tensorly.backend.jax_backend.JaxBackend": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.backend.jax_backend.JaxBackend.SVD_FUNS": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.jax_backend.JaxBackend.context": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.jax_backend.JaxBackend.copy": {
  "lineno": 41,
  "symbols_in_volume": [
   "copy.copy"
  ],
  "type": "function"
 },
 "tensorly.backend.jax_backend.JaxBackend.dot": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.jax_backend.JaxBackend.is_tensor": {
  "lineno": 33,
  "symbols_in_volume": [
   "jax.numpy.ndarray"
  ],
  "type": "function"
 },
 "tensorly.backend.jax_backend.JaxBackend.kr": {
  "lineno": 72,
  "symbols_in_volume": [
   "jax.numpy.einsum"
  ],
  "type": "function"
 },
 "tensorly.backend.jax_backend.JaxBackend.ndim": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.jax_backend.JaxBackend.norm": {
  "lineno": 57,
  "symbols_in_volume": [
   "jax.numpy.abs",
   "jax.numpy.max",
   "jax.numpy.sqrt",
   "jax.numpy.sum"
  ],
  "type": "function"
 },
 "tensorly.backend.jax_backend.JaxBackend.shape": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.jax_backend.JaxBackend.sort": {
  "lineno": 94,
  "symbols_in_volume": [
   "jax.numpy.flip",
   "jax.numpy.sort"
  ],
  "type": "function"
 },
 "tensorly.backend.jax_backend.JaxBackend.tensor": {
  "lineno": 29,
  "symbols_in_volume": [
   "jax.numpy.array"
  ],
  "type": "function"
 },
 "tensorly.backend.jax_backend.JaxBackend.to_numpy": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend": {
  "lineno": null,
  "symbols_in_volume": [
   "mxnet.nd",
   "numpy"
  ],
  "type": "module"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.SVD_FUNS": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.abs": {
  "lineno": 96,
  "symbols_in_volume": [
   "mxnet.nd.NDArray",
   "mxnet.nd.abs",
   "numpy.abs"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.all": {
  "lineno": 155,
  "symbols_in_volume": [
   "mxnet.nd.sum"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.argmax": {
  "lineno": 80,
  "symbols_in_volume": [
   "mxnet.nd.argmax"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.argmin": {
  "lineno": 88,
  "symbols_in_volume": [
   "mxnet.nd.argmin"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.clip": {
  "lineno": 136,
  "symbols_in_volume": [
   "mxnet.nd.max",
   "mxnet.nd.maximum",
   "mxnet.nd.min",
   "mxnet.nd.minimum"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.concatenate": {
  "lineno": 214,
  "symbols_in_volume": [
   "mxnet.nd.concat"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.conj": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.context": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.copy": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.is_tensor": {
  "lineno": 32,
  "symbols_in_volume": [
   "mxnet.nd.NDArray"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.max": {
  "lineno": 73,
  "symbols_in_volume": [
   "mxnet.nd.NDArray",
   "mxnet.nd.max",
   "numpy.max"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.mean": {
  "lineno": 183,
  "symbols_in_volume": [
   "mxnet.nd.mean"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.min": {
  "lineno": 66,
  "symbols_in_volume": [
   "mxnet.nd.NDArray",
   "mxnet.nd.min",
   "numpy.min"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.moveaxis": {
  "lineno": 167,
  "symbols_in_volume": [
   "mxnet.ndarray.transpose"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.ndim": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.norm": {
  "lineno": 103,
  "symbols_in_volume": [
   "mxnet.nd.abs",
   "mxnet.nd.max",
   "mxnet.nd.sqrt",
   "mxnet.nd.sum"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.qr": {
  "lineno": 123,
  "symbols_in_volume": [
   "mxnet.nd.linalg.gelqf",
   "numpy.linalg.qr",
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.reshape": {
  "lineno": 53,
  "symbols_in_volume": [
   "mxnet.nd.reshape"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.shape": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.solve": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.linalg.solve"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.sort": {
  "lineno": 292,
  "symbols_in_volume": [
   "mxnet.ndarray.sort"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.sqrt": {
  "lineno": 203,
  "symbols_in_volume": [
   "math.sqrt",
   "mxnet.nd.NDArray",
   "mxnet.nd.sqrt"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.stack": {
  "lineno": 218,
  "symbols_in_volume": [
   "mxnet.nd.stack"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.sum": {
  "lineno": 193,
  "symbols_in_volume": [
   "mxnet.nd.sum"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.symeig_svd": {
  "lineno": 225,
  "symbols_in_volume": [
   "mxnet.nd.linalg.syevd",
   "mxnet.ndarray.dot",
   "mxnet.ndarray.reshape",
   "mxnet.ndarray.transpose",
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.tensor": {
  "lineno": 26,
  "symbols_in_volume": [
   "mxnet.cpu",
   "mxnet.nd.array",
   "numpy.float32",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.to_numpy": {
  "lineno": 36,
  "symbols_in_volume": [
   "mxnet.nd.NDArray",
   "numpy.array",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "tensorly.backend.numpy_backend": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy",
   "numpy.linalg"
  ],
  "type": "module"
 },
 "tensorly.backend.numpy_backend.NumpyBackend": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.backend.numpy_backend.NumpyBackend.SVD_FUNS": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.numpy_backend.NumpyBackend.clip": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.clip"
  ],
  "type": "function"
 },
 "tensorly.backend.numpy_backend.NumpyBackend.context": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.numpy_backend.NumpyBackend.dot": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.numpy_backend.NumpyBackend.is_tensor": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "tensorly.backend.numpy_backend.NumpyBackend.kr": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.einsum"
  ],
  "type": "function"
 },
 "tensorly.backend.numpy_backend.NumpyBackend.ndim": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.numpy_backend.NumpyBackend.norm": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.max",
   "numpy.sqrt",
   "numpy.sum"
  ],
  "type": "function"
 },
 "tensorly.backend.numpy_backend.NumpyBackend.shape": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.numpy_backend.NumpyBackend.sort": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.flip",
   "numpy.sort"
  ],
  "type": "function"
 },
 "tensorly.backend.numpy_backend.NumpyBackend.tensor": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "tensorly.backend.numpy_backend.NumpyBackend.to_numpy": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.copy"
  ],
  "type": "function"
 },
 "tensorly.backend.override_module_dispatch": {
  "lineno": 130,
  "symbols_in_volume": [
   "sys.modules.__class__",
   "sys.modules.__dir__",
   "sys.modules.__getattr__",
   "sys.version_info"
  ],
  "type": "function"
 },
 "tensorly.backend.override_module_dispatch.BackendAttributeModuleType": {
  "lineno": 143,
  "symbols_in_volume": [
   "types.ModuleType"
  ],
  "type": "class"
 },
 "tensorly.backend.override_module_dispatch.BackendAttributeModuleType.__dir__": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.override_module_dispatch.BackendAttributeModuleType.__getattr__": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "torch",
   "torch.__version__",
   "torch.matmul"
  ],
  "type": "module"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.SVD_FUNS": {
  "lineno": 307,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend._reverse": {
  "lineno": 185,
  "symbols_in_volume": [
   "torch.arange",
   "torch.int64"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.all": {
  "lineno": 77,
  "symbols_in_volume": [
   "torch.sum"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.arange": {
  "lineno": 59,
  "symbols_in_volume": [
   "torch.arange"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.argmax": {
  "lineno": 169,
  "symbols_in_volume": [
   "torch.argmax"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.argmin": {
  "lineno": 165,
  "symbols_in_volume": [
   "torch.argmin"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.clip": {
  "lineno": 66,
  "symbols_in_volume": [
   "torch.clamp",
   "torch.max",
   "torch.min"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.concatenate": {
  "lineno": 161,
  "symbols_in_volume": [
   "torch.cat"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.conj": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.context": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.copy": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.mean": {
  "lineno": 147,
  "symbols_in_volume": [
   "torch.mean"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.moveaxis": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.ndim": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.norm": {
  "lineno": 130,
  "symbols_in_volume": [
   "torch.abs",
   "torch.max",
   "torch.norm"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.shape": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.solve": {
  "lineno": 106,
  "symbols_in_volume": [
   "torch.solve"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.sort": {
  "lineno": 313,
  "symbols_in_volume": [
   "torch.sort"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.stack": {
  "lineno": 173,
  "symbols_in_volume": [
   "torch.stack"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.sum": {
  "lineno": 154,
  "symbols_in_volume": [
   "torch.sum"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.symeig_svd": {
  "lineno": 242,
  "symbols_in_volume": [
   "torch.sqrt",
   "torch.symeig",
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.tensor": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.ndarray",
   "torch.float32",
   "torch.tensor"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.to_numpy": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ndarray",
   "torch.is_tensor"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.transpose": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.truncated_svd": {
  "lineno": 203,
  "symbols_in_volume": [
   "torch.svd"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.update_index": {
  "lineno": 321,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.register_backend": {
  "lineno": 38,
  "symbols_in_volume": [
   "importlib.import_module"
  ],
  "type": "function"
 },
 "tensorly.backend.set_backend": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "tensorflow.abs",
   "tensorflow.argmax",
   "tensorflow.argmin",
   "tensorflow.concat",
   "tensorflow.einsum",
   "tensorflow.eye",
   "tensorflow.identity",
   "tensorflow.linalg.qr",
   "tensorflow.linalg.tensor_diag",
   "tensorflow.ones",
   "tensorflow.reduce_all",
   "tensorflow.reduce_max",
   "tensorflow.reduce_mean",
   "tensorflow.reduce_min",
   "tensorflow.reduce_prod",
   "tensorflow.reduce_sum",
   "tensorflow.reshape",
   "tensorflow.sign",
   "tensorflow.sqrt",
   "tensorflow.stack",
   "tensorflow.transpose",
   "tensorflow.where",
   "tensorflow.zeros",
   "tensorflow.zeros_like"
  ],
  "type": "module"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.SVD_FUNS": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.arange": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.float32",
   "tensorflow.range"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.clip": {
  "lineno": 59,
  "symbols_in_volume": [
   "tensorflow.clip_by_value",
   "tensorflow.reduce_max",
   "tensorflow.reduce_min"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.conj": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.context": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.dot": {
  "lineno": 94,
  "symbols_in_volume": [
   "tensorflow.tensordot"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.index_update": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.ones",
   "tensorflow.Variable",
   "tensorflow.constant",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.is_tensor": {
  "lineno": 29,
  "symbols_in_volume": [
   "tensorflow.Tensor",
   "tensorflow.Variable"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.moveaxis": {
  "lineno": 72,
  "symbols_in_volume": [
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.ndim": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.norm": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.inf",
   "tensorflow.norm"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.shape": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.solve": {
  "lineno": 105,
  "symbols_in_volume": [
   "tensorflow.linalg.solve",
   "tensorflow.reshape",
   "tensorflow.squeeze"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.sort": {
  "lineno": 160,
  "symbols_in_volume": [
   "tensorflow.reshape",
   "tensorflow.sort"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.tensor": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.float32",
   "tensorflow.Tensor",
   "tensorflow.Variable"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.to_numpy": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.ndarray",
   "tensorflow.Tensor",
   "tensorflow.Variable",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.truncated_svd": {
  "lineno": 116,
  "symbols_in_volume": [
   "tensorflow.linalg.svd",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "tensorly.base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.base.fold": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.base.partial_fold": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.base.partial_tensor_to_vec": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.base.partial_unfold": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.base.partial_vec_to_tensor": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.base.tensor_to_vec": {
  "lineno": 3,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.base.unfold": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.base.vec_to_tensor": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.contrib": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.contrib.decomposition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.contrib.decomposition._tt_cross": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.contrib.decomposition._tt_cross.left_right_ttcross_step": {
  "lineno": 196,
  "symbols_in_volume": [
   "numpy.unravel_index",
   "tensorly.ndim",
   "tensorly.qr",
   "tensorly.reshape",
   "tensorly.shape",
   "tensorly.transpose"
  ],
  "type": "function"
 },
 "tensorly.contrib.decomposition._tt_cross.maxvol": {
  "lineno": 341,
  "symbols_in_volume": [
   "tensorly.argmax",
   "tensorly.argmin",
   "tensorly.context",
   "tensorly.dot",
   "tensorly.eye",
   "tensorly.int64",
   "tensorly.reshape",
   "tensorly.shape",
   "tensorly.solve",
   "tensorly.sqrt",
   "tensorly.sum",
   "tensorly.tensor",
   "tensorly.to_numpy",
   "tensorly.transpose",
   "tensorly.zeros"
  ],
  "type": "function"
 },
 "tensorly.contrib.decomposition._tt_cross.right_left_ttcross_step": {
  "lineno": 270,
  "symbols_in_volume": [
   "numpy.unravel_index",
   "tensorly.dot",
   "tensorly.ndim",
   "tensorly.qr",
   "tensorly.reshape",
   "tensorly.shape",
   "tensorly.tensor",
   "tensorly.transpose"
  ],
  "type": "function"
 },
 "tensorly.contrib.decomposition._tt_cross.tensor_train_cross": {
  "lineno": 7,
  "symbols_in_volume": [
   "tensorly.context",
   "tensorly.ndim",
   "tensorly.norm",
   "tensorly.reshape",
   "tensorly.shape",
   "tensorly.tensor",
   "tensorly.transpose",
   "tensorly.zeros"
  ],
  "type": "function"
 },
 "tensorly.contrib.decomposition.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.contrib.decomposition.tests.test_mps_decomposition_cross": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.skipif",
   "tensorly.get_backend"
  ],
  "type": "module"
 },
 "tensorly.contrib.decomposition.tests.test_mps_decomposition_cross.test_tensor_train_cross_1": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.arange",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.contrib.decomposition.tests.test_mps_decomposition_cross.test_tensor_train_cross_2": {
  "lineno": 47,
  "symbols_in_volume": [
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.contrib.decomposition.tests.test_mps_decomposition_cross.test_tensor_train_cross_3": {
  "lineno": 72,
  "symbols_in_volume": [
   "tensorly.norm",
   "tensorly.tensor",
   "tensorly.testing.assert_"
  ],
  "type": "function"
 },
 "tensorly.contrib.decomposition.tests.test_mps_decomposition_cross.test_tensor_train_cross_4": {
  "lineno": 88,
  "symbols_in_volume": [
   "tensorly.norm",
   "tensorly.tensor",
   "tensorly.testing.assert_"
  ],
  "type": "function"
 },
 "tensorly.contrib.decomposition.tests.test_mps_decomposition_cross.test_tensor_train_cross_4.evaluateGrid": {
  "lineno": 107,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.array",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tensorly.contrib.decomposition.tests.test_mps_decomposition_cross.test_tensor_train_cross_4.func": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.contrib.decomposition.tests.test_mps_decomposition_cross.test_tensor_train_cross_4.getEquispaceGrid": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "tensorly.contrib.sparse": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.modules.__dict__.keys"
  ],
  "type": "module"
 },
 "tensorly.contrib.sparse.backend": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.contrib.sparse.backend._get_backend_dir": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend._get_backend_method": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.dispatch_sparse": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.dispatch_sparse.inner": {
  "lineno": 63,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.numpy_backend": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "numpy",
   "sparse",
   "sparse.__version__"
  ],
  "type": "module"
 },
 "tensorly.contrib.sparse.backend.numpy_backend.NumpySparseBackend": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.contrib.sparse.backend.numpy_backend.NumpySparseBackend.SVD_FUNS": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.numpy_backend.NumpySparseBackend.context": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.numpy_backend.NumpySparseBackend.copy": {
  "lineno": 50,
  "symbols_in_volume": [
   "copy.copy"
  ],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.numpy_backend.NumpySparseBackend.dot": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.dot",
   "sparse.dot"
  ],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.numpy_backend.NumpySparseBackend.is_tensor": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.numpy_backend.NumpySparseBackend.norm": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.max",
   "numpy.sqrt",
   "numpy.sum"
  ],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.numpy_backend.NumpySparseBackend.partial_svd": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.complexfloating",
   "numpy.issubdtype",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "numpy.zeros",
   "scipy.linalg.eigh",
   "scipy.linalg.svd",
   "scipy.sparse.linalg.eigsh",
   "sparse.eye"
  ],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.numpy_backend.NumpySparseBackend.solve": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.linalg.solve",
   "scipy.sparse.linalg.spsolve",
   "sparse.COO"
  ],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.numpy_backend.NumpySparseBackend.tensor": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "sparse.COO.from_numpy"
  ],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.numpy_backend.NumpySparseBackend.to_numpy": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.numpy_backend.is_sparse": {
  "lineno": 20,
  "symbols_in_volume": [
   "sparse.SparseArray"
  ],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.register_sparse_backend": {
  "lineno": 22,
  "symbols_in_volume": [
   "importlib.import_module"
  ],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.sparse_context": {
  "lineno": 13,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "tensorly.contrib.sparse.core": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.contrib.sparse.core.wrap": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.contrib.sparse.core.wrap.inner": {
  "lineno": 6,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "tensorly.contrib.sparse.cp_tensor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.contrib.sparse.decomposition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.contrib.sparse.sparse_dir": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.contrib.sparse.tenalg": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.contrib.sparse.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.contrib.sparse.tests.test_decomposition": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.importorskip",
   "pytest.skip"
  ],
  "type": "module"
 },
 "tensorly.contrib.sparse.tests.test_decomposition.test_sparse_parafac": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.ones",
   "sparse.random"
  ],
  "type": "function"
 },
 "tensorly.contrib.sparse.tests.test_tenalg": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.importorskip",
   "pytest.skip"
  ],
  "type": "module"
 },
 "tensorly.contrib.sparse.tests.test_tenalg.test_sparse_unfolding_times_cp": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.ones",
   "sparse.random",
   "tensorly.contrib.sparse.cp_tensor.unfolding_dot_khatri_rao",
   "tensorly.contrib.sparse.cp_to_tensor"
  ],
  "type": "function"
 },
 "tensorly.cp_tensor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.cp_tensor.CPTensor": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.cp_tensor.CPTensor.__getitem__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.cp_tensor.CPTensor.__init__": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.cp_tensor.CPTensor.__iter__": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.cp_tensor.CPTensor.__len__": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.cp_tensor.CPTensor.__repr__": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.cp_tensor.CPTensor.__setitem__": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.cp_tensor.CPTensor.mode_dot": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.cp_tensor.CPTensor.norm": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.cp_tensor.CPTensor.normalize": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.cp_tensor.CPTensor.to_tensor": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.cp_tensor.CPTensor.to_unfolded": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.cp_tensor.CPTensor.to_vec": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.cp_tensor._cp_n_param": {
  "lineno": 200,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "tensorly.cp_tensor._validate_cp_tensor": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.cp_tensor.cp_mode_dot": {
  "lineno": 407,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.cp_tensor.cp_norm": {
  "lineno": 548,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.cp_tensor.cp_normalize": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.cp_tensor.cp_to_tensor": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.cp_tensor.cp_to_unfolded": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.cp_tensor.cp_to_vec": {
  "lineno": 382,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.cp_tensor.unfolding_dot_khatri_rao": {
  "lineno": 472,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.cp_tensor.validate_cp_rank": {
  "lineno": 223,
  "symbols_in_volume": [
   "numpy.ceil",
   "numpy.floor",
   "numpy.prod",
   "numpy.round",
   "numpy.sum"
  ],
  "type": "function"
 },
 "tensorly.datasets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.datasets.synthetic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.datasets.synthetic.gen_image": {
  "lineno": 5,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.float",
   "numpy.ogrid",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tensorly.datasets.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.datasets.tests.test_synthetic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.datasets.tests.test_synthetic.test_gen_image": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.pi"
  ],
  "type": "function"
 },
 "tensorly.decomposition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition._base_decomposition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition._base_decomposition.DecompositionMixin": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.decomposition._base_decomposition.DecompositionMixin.__repr__": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition._base_decomposition.DecompositionMixin.fit": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition._cp": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition._cp.CP": {
  "lineno": 728,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.decomposition._cp.CP.__init__": {
  "lineno": 801,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition._cp.CP.__repr__": {
  "lineno": 859,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition._cp.CP.fit_transform": {
  "lineno": 829,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition._cp.CPNN": {
  "lineno": 864,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.decomposition._cp.CPNN.__init__": {
  "lineno": 937,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition._cp.CPNN.__repr__": {
  "lineno": 994,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition._cp.CPNN.fit_transform": {
  "lineno": 965,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition._cp.RandomizedCP": {
  "lineno": 998,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.decomposition._cp.RandomizedCP.__init__": {
  "lineno": 1034,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition._cp.RandomizedCP.fit_transform": {
  "lineno": 1046,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition._cp.error_calc": {
  "lineno": 121,
  "symbols_in_volume": [
   "tensorly.abs",
   "tensorly.norm",
   "tensorly.sqrt",
   "tensorly.sum"
  ],
  "type": "function"
 },
 "tensorly.decomposition._cp.initialize_cp": {
  "lineno": 19,
  "symbols_in_volume": [
   "tensorly.SVD_FUNS",
   "tensorly.abs",
   "tensorly.concatenate",
   "tensorly.context",
   "tensorly.get_backend",
   "tensorly.index",
   "tensorly.index_update",
   "tensorly.ndim",
   "tensorly.shape",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.decomposition._cp.non_negative_parafac": {
  "lineno": 423,
  "symbols_in_volume": [
   "tensorly.abs",
   "tensorly.clip",
   "tensorly.cp_to_tensor",
   "tensorly.dot",
   "tensorly.ndim",
   "tensorly.norm",
   "tensorly.qr",
   "tensorly.shape",
   "tensorly.sqrt",
   "tensorly.sum",
   "tensorly.transpose",
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.decomposition._cp.parafac": {
  "lineno": 185,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.prod",
   "tensorly.conj",
   "tensorly.context",
   "tensorly.copy",
   "tensorly.cp_to_tensor",
   "tensorly.dot",
   "tensorly.eye",
   "tensorly.ndim",
   "tensorly.norm",
   "tensorly.ones",
   "tensorly.qr",
   "tensorly.reshape",
   "tensorly.shape",
   "tensorly.solve",
   "tensorly.tensor",
   "tensorly.transpose",
   "tensorly.where",
   "tensorly.zeros_like",
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.decomposition._cp.randomised_parafac": {
  "lineno": 635,
  "symbols_in_volume": [
   "tensorly.context",
   "tensorly.dot",
   "tensorly.ndim",
   "tensorly.norm",
   "tensorly.ones",
   "tensorly.shape",
   "tensorly.solve",
   "tensorly.transpose"
  ],
  "type": "function"
 },
 "tensorly.decomposition._cp.sample_khatri_rao": {
  "lineno": 563,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.zeros",
   "tensorly.context",
   "tensorly.ones",
   "tensorly.shape",
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.decomposition._cp.sparsify_tensor": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.prod",
   "tensorly.abs",
   "tensorly.context",
   "tensorly.sort",
   "tensorly.where",
   "tensorly.zeros"
  ],
  "type": "function"
 },
 "tensorly.decomposition._cp_power": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition._cp_power.CPPower": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.decomposition._cp_power.CPPower.__init__": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition._cp_power.CPPower.__repr__": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition._cp_power.CPPower.fit_transform": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition._cp_power.parafac_power_iteration": {
  "lineno": 79,
  "symbols_in_volume": [
   "tensorly.ndim",
   "tensorly.shape",
   "tensorly.stack"
  ],
  "type": "function"
 },
 "tensorly.decomposition._cp_power.power_iteration": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.random.random_sample",
   "tensorly.context",
   "tensorly.ndim",
   "tensorly.norm",
   "tensorly.shape",
   "tensorly.tenalg.multi_mode_dot",
   "tensorly.tenalg.outer",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.decomposition._symmetric_cp": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition._symmetric_cp.SymmetricCP": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.decomposition._symmetric_cp.SymmetricCP.__init__": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition._symmetric_cp.SymmetricCP.fit_transform": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition._symmetric_cp.symmetric_parafac_power_iteration": {
  "lineno": 79,
  "symbols_in_volume": [
   "tensorly.ndim",
   "tensorly.shape",
   "tensorly.stack"
  ],
  "type": "function"
 },
 "tensorly.decomposition._symmetric_cp.symmetric_power_iteration": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.random.random_sample",
   "tensorly.context",
   "tensorly.ndim",
   "tensorly.norm",
   "tensorly.shape",
   "tensorly.tenalg.multi_mode_dot",
   "tensorly.tenalg.outer",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.decomposition._tt": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition._tt.TensorTrain": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.decomposition._tt.TensorTrain.__init__": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition._tt.TensorTrain.fit_transform": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition._tt.tensor_train": {
  "lineno": 7,
  "symbols_in_volume": [
   "tensorly.partial_svd",
   "tensorly.reshape",
   "tensorly.shape"
  ],
  "type": "function"
 },
 "tensorly.decomposition._tt.tensor_train_matrix": {
  "lineno": 70,
  "symbols_in_volume": [
   "tensorly.ndim",
   "tensorly.reshape",
   "tensorly.shape",
   "tensorly.transpose"
  ],
  "type": "function"
 },
 "tensorly.decomposition._tucker": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition._tucker.Tucker": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.decomposition._tucker.Tucker.__init__": {
  "lineno": 337,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition._tucker.Tucker.__repr__": {
  "lineno": 369,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition._tucker.Tucker.fit_transform": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition._tucker.TuckerNN": {
  "lineno": 373,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.decomposition._tucker.TuckerNN.__init__": {
  "lineno": 415,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition._tucker.TuckerNN.__repr__": {
  "lineno": 444,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition._tucker.TuckerNN.fit_transform": {
  "lineno": 426,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition._tucker.non_negative_tucker": {
  "lineno": 201,
  "symbols_in_volume": [
   "tensorly.abs",
   "tensorly.clip",
   "tensorly.context",
   "tensorly.dot",
   "tensorly.ndim",
   "tensorly.norm",
   "tensorly.shape",
   "tensorly.tensor",
   "tensorly.transpose"
  ],
  "type": "function"
 },
 "tensorly.decomposition._tucker.partial_tucker": {
  "lineno": 17,
  "symbols_in_volume": [
   "math.sqrt",
   "tensorly.SVD_FUNS",
   "tensorly.context",
   "tensorly.get_backend",
   "tensorly.norm",
   "tensorly.shape",
   "tensorly.tensor",
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.decomposition._tucker.tucker": {
  "lineno": 128,
  "symbols_in_volume": [
   "tensorly.ndim",
   "tensorly.shape"
  ],
  "type": "function"
 },
 "tensorly.decomposition.parafac2": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition.parafac2.Parafac2": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.decomposition.parafac2.Parafac2.__init__": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition.parafac2.Parafac2.fit_transform": {
  "lineno": 384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition.parafac2._compute_projections": {
  "lineno": 81,
  "symbols_in_volume": [
   "tensorly.backend.context",
   "tensorly.backend.dot",
   "tensorly.backend.shape",
   "tensorly.backend.transpose",
   "tensorly.backend.zeros",
   "tensorly.index",
   "tensorly.index_update"
  ],
  "type": "function"
 },
 "tensorly.decomposition.parafac2._get_svd": {
  "lineno": 112,
  "symbols_in_volume": [
   "tensorly.SVD_FUNS",
   "tensorly.get_backend"
  ],
  "type": "function"
 },
 "tensorly.decomposition.parafac2._pad_by_zeros": {
  "lineno": 66,
  "symbols_in_volume": [
   "tensorly.backend.context",
   "tensorly.backend.zeros",
   "tensorly.index",
   "tensorly.index_update"
  ],
  "type": "function"
 },
 "tensorly.decomposition.parafac2._parafac2_reconstruction_error": {
  "lineno": 121,
  "symbols_in_volume": [
   "tensorly.sqrt",
   "tensorly.sum"
  ],
  "type": "function"
 },
 "tensorly.decomposition.parafac2._project_tensor_slices": {
  "lineno": 99,
  "symbols_in_volume": [
   "tensorly.backend.context",
   "tensorly.backend.dot",
   "tensorly.backend.transpose",
   "tensorly.backend.zeros",
   "tensorly.index",
   "tensorly.index_update"
  ],
  "type": "function"
 },
 "tensorly.decomposition.parafac2.initialize_decomposition": {
  "lineno": 14,
  "symbols_in_volume": [
   "tensorly.SVD_FUNS",
   "tensorly.backend.eye",
   "tensorly.context",
   "tensorly.get_backend",
   "tensorly.random.random_parafac2"
  ],
  "type": "function"
 },
 "tensorly.decomposition.parafac2.parafac2": {
  "lineno": 130,
  "symbols_in_volume": [
   "tensorly.abs",
   "tensorly.backend.context",
   "tensorly.backend.norm",
   "tensorly.backend.ones",
   "tensorly.backend.reshape",
   "tensorly.context",
   "tensorly.eps",
   "tensorly.norm",
   "tensorly.ones",
   "tensorly.reshape",
   "tensorly.shape",
   "tensorly.sqrt",
   "tensorly.where",
   "tensorly.zeros"
  ],
  "type": "function"
 },
 "tensorly.decomposition.robust_decomposition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition.robust_decomposition.robust_pca": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.max"
  ],
  "type": "function"
 },
 "tensorly.decomposition.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition.tests.test_cp": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition.tests.test_cp.test_masked_parafac": {
  "lineno": 92,
  "symbols_in_volume": [
   "numpy.ones",
   "pytest.mark.parametrize",
   "tensorly.cp_to_tensor",
   "tensorly.norm",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_cp.test_non_negative_parafac": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_cp.test_parafac": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.diff",
   "numpy.testing.assert_raises",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_cp.test_parafac_linesearch": {
  "lineno": 117,
  "symbols_in_volume": [
   "tensorly.cp_to_tensor"
  ],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_cp.test_randomised_parafac": {
  "lineno": 211,
  "symbols_in_volume": [
   "pytest.mark.xfail",
   "tensorly.get_backend"
  ],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_cp.test_sample_khatri_rao": {
  "lineno": 185,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.min",
   "pytest.mark.xfail",
   "tensorly.get_backend"
  ],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_cp_power": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition.tests.test_cp_power.test_parafac_power_iteration": {
  "lineno": 8,
  "symbols_in_volume": [
   "tensorly.abs",
   "tensorly.cp_to_tensor",
   "tensorly.max",
   "tensorly.norm"
  ],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_parafac2": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition.tests.test_parafac2.best_correlation": {
  "lineno": 24,
  "symbols_in_volume": [
   "itertools.permutations"
  ],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_parafac2.corrcoef": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_parafac2.test_parafac2": {
  "lineno": 39,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_parafac2.test_parafac2_init_error": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_parafac2.test_parafac2_init_valid": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_parafac2.test_parafac2_normalize_factors": {
  "lineno": 103,
  "symbols_in_volume": [
   "tensorly.abs",
   "tensorly.max",
   "tensorly.min",
   "tensorly.norm",
   "tensorly.ones"
  ],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_parafac2.test_parafac2_slice_and_tensor_input": {
  "lineno": 83,
  "symbols_in_volume": [
   "tensorly.abs",
   "tensorly.max"
  ],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_parafac2.test_parafac2_to_tensor": {
  "lineno": 154,
  "symbols_in_volume": [
   "tensorly.abs",
   "tensorly.index",
   "tensorly.index_update",
   "tensorly.max"
  ],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_robust_decomposition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition.tests.test_robust_decomposition.test_RPCA": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.copy",
   "numpy.vstack",
   "tensorly.norm",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_symmetric_cp": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition.tests.test_symmetric_cp.test_symmetric_parafac_power_iteration": {
  "lineno": 8,
  "symbols_in_volume": [
   "tensorly.abs",
   "tensorly.cp_to_tensor",
   "tensorly.max",
   "tensorly.norm",
   "tensorly.ones",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_tt_decomposition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition.tests.test_tt_decomposition.test_tensor_train": {
  "lineno": 9,
  "symbols_in_volume": [
   "tensorly.norm",
   "tensorly.tensor",
   "tensorly.tt_to_tensor"
  ],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_tt_decomposition.test_tensor_train_matrix": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_tucker": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition.tests.test_tucker.test_masked_tucker": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.ones",
   "tensorly.index",
   "tensorly.index_update",
   "tensorly.norm",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_tucker.test_non_negative_tucker": {
  "lineno": 118,
  "symbols_in_volume": [
   "tensorly.all",
   "tensorly.ndim",
   "tensorly.norm",
   "tensorly.shape",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_tucker.test_partial_tucker": {
  "lineno": 10,
  "symbols_in_volume": [
   "tensorly.abs",
   "tensorly.max",
   "tensorly.norm",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_tucker.test_tucker": {
  "lineno": 44,
  "symbols_in_volume": [
   "tensorly.abs",
   "tensorly.copy",
   "tensorly.max",
   "tensorly.norm",
   "tensorly.shape",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.full_dir": {
  "lineno": 37,
  "symbols_in_volume": [
   "sys.modules.__dict__.keys"
  ],
  "type": "function"
 },
 "tensorly.metrics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.metrics.regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.metrics.regression.MSE": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.metrics.regression.RMSE": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.metrics.regression.correlation": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.metrics.regression.covariance": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.metrics.regression.reflective_correlation_coefficient": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.metrics.regression.standard_deviation": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.metrics.regression.variance": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.metrics.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.metrics.tests.test_regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.metrics.tests.test_regression.test_MSE": {
  "lineno": 7,
  "symbols_in_volume": [
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.metrics.tests.test_regression.test_RMSE": {
  "lineno": 15,
  "symbols_in_volume": [
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.metrics.tests.test_regression.test_correlation": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.random.random",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.parafac2_tensor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.parafac2_tensor.Parafac2Tensor": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.parafac2_tensor.Parafac2Tensor.__getitem__": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.parafac2_tensor.Parafac2Tensor.__init__": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.parafac2_tensor.Parafac2Tensor.__iter__": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.parafac2_tensor.Parafac2Tensor.__len__": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.parafac2_tensor.Parafac2Tensor.__repr__": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.parafac2_tensor.Parafac2Tensor.from_CPTensor": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.parafac2_tensor.Parafac2Tensor.to_tensor": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.parafac2_tensor.Parafac2Tensor.to_unfolded": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.parafac2_tensor.Parafac2Tensor.to_vec": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.parafac2_tensor._validate_parafac2_tensor": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.parafac2_tensor.apply_parafac2_projections": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.parafac2_tensor.parafac2_normalise": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.parafac2_tensor.parafac2_to_slice": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.parafac2_tensor.parafac2_to_slices": {
  "lineno": 301,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.parafac2_tensor.parafac2_to_tensor": {
  "lineno": 366,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.parafac2_tensor.parafac2_to_unfolded": {
  "lineno": 423,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.parafac2_tensor.parafac2_to_vec": {
  "lineno": 473,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.random": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.random.base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.random.base.check_random_state": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "tensorly.random.base.random_cp": {
  "lineno": 83,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.random.base.random_parafac2": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.random.base.random_tensor": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.random.base.random_tt": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.random.base.random_tt_matrix": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.random.base.random_tucker": {
  "lineno": 126,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.random.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.random.tests.test_base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.random.tests.test_base.test_check_random_state": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "tensorly.random.tests.test_base.test_random_cp": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.linalg.matrix_rank",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "tensorly.random.tests.test_base.test_random_tt": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "tensorly.random.tests.test_base.test_random_tucker": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.linalg.matrix_rank"
  ],
  "type": "function"
 },
 "tensorly.regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.regression.cp_regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.regression.cp_regression.CPRegressor": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.regression.cp_regression.CPRegressor.__init__": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.regression.cp_regression.CPRegressor.fit": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.eye"
  ],
  "type": "function"
 },
 "tensorly.regression.cp_regression.CPRegressor.get_params": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.regression.cp_regression.CPRegressor.predict": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.regression.cp_regression.CPRegressor.set_params": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.regression.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.regression.tests.test_cp_regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.regression.tests.test_cp_regression.test_CPRegressor": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tensorly.regression.tests.test_tucker_regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.regression.tests.test_tucker_regression.test_TuckerRegressor": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.random.normal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tensorly.regression.tucker_regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.regression.tucker_regression.TuckerRegressor": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.regression.tucker_regression.TuckerRegressor.__init__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.regression.tucker_regression.TuckerRegressor.fit": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.eye"
  ],
  "type": "function"
 },
 "tensorly.regression.tucker_regression.TuckerRegressor.get_params": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.regression.tucker_regression.TuckerRegressor.predict": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.regression.tucker_regression.TuckerRegressor.set_params": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tenalg": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.core_tenalg": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.core_tenalg._khatri_rao": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.core_tenalg._khatri_rao.khatri_rao": {
  "lineno": 10,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.tenalg.core_tenalg._kronecker": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.core_tenalg._kronecker.kronecker": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tenalg.core_tenalg._tt_matrix": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.core_tenalg._tt_matrix.tt_matrix_to_tensor": {
  "lineno": 5,
  "symbols_in_volume": [
   "tensorly.dot",
   "tensorly.reshape",
   "tensorly.shape",
   "tensorly.transpose"
  ],
  "type": "function"
 },
 "tensorly.tenalg.core_tenalg.contraction": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.core_tenalg.contraction.contract": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.prod"
  ],
  "type": "function"
 },
 "tensorly.tenalg.core_tenalg.generalised_inner_product": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.core_tenalg.generalised_inner_product.inner": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.prod"
  ],
  "type": "function"
 },
 "tensorly.tenalg.core_tenalg.moments": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.core_tenalg.moments.higher_order_moment": {
  "lineno": 4,
  "symbols_in_volume": [
   "tensorly.mean"
  ],
  "type": "function"
 },
 "tensorly.tenalg.core_tenalg.n_mode_product": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.core_tenalg.n_mode_product.mode_dot": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tenalg.core_tenalg.n_mode_product.multi_mode_dot": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tenalg.core_tenalg.outer_product": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.core_tenalg.outer_product.outer": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tenalg.core_tenalg.tensor_product": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.core_tenalg.tensor_product.batched_tensor_dot": {
  "lineno": 3,
  "symbols_in_volume": [
   "tensorly.reshape",
   "tensorly.shape"
  ],
  "type": "function"
 },
 "tensorly.tenalg.core_tenalg.tensor_product.tensor_dot": {
  "lineno": 35,
  "symbols_in_volume": [
   "tensorly.reshape",
   "tensorly.shape"
  ],
  "type": "function"
 },
 "tensorly.tenalg.dynamically_dispatch_tenalg": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tenalg.dynamically_dispatch_tenalg.dynamically_dispatched_fun": {
  "lineno": 76,
  "symbols_in_volume": [
   "functools.wraps",
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.tenalg.einsum_tenalg": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.einsum_tenalg._khatri_rao": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.einsum_tenalg._khatri_rao.khatri_rao": {
  "lineno": 9,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.tenalg.einsum_tenalg._kronecker": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.einsum_tenalg._kronecker.kronecker": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.prod"
  ],
  "type": "function"
 },
 "tensorly.tenalg.einsum_tenalg._tt_matrix": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.einsum_tenalg._tt_matrix.tt_matrix_to_tensor": {
  "lineno": 5,
  "symbols_in_volume": [
   "tensorly.einsum",
   "tensorly.tranpose"
  ],
  "type": "function"
 },
 "tensorly.tenalg.einsum_tenalg.contraction": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.einsum_tenalg.contraction.contract": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tenalg.einsum_tenalg.generalised_inner_product": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.einsum_tenalg.generalised_inner_product.inner": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tenalg.einsum_tenalg.n_mode_product": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.einsum_tenalg.n_mode_product.mode_dot": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tenalg.einsum_tenalg.n_mode_product.multi_mode_dot": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tenalg.einsum_tenalg.outer_product": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.einsum_tenalg.outer_product.outer": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tenalg.get_tenalg_backend": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tenalg.proximal": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.proximal.procrustes": {
  "lineno": 74,
  "symbols_in_volume": [
   "tensorly.dot",
   "tensorly.partial_svd"
  ],
  "type": "function"
 },
 "tensorly.tenalg.proximal.soft_thresholding": {
  "lineno": 9,
  "symbols_in_volume": [
   "tensorly.abs",
   "tensorly.clip",
   "tensorly.sign"
  ],
  "type": "function"
 },
 "tensorly.tenalg.proximal.svd_thresholding": {
  "lineno": 53,
  "symbols_in_volume": [
   "tensorly.dot",
   "tensorly.partial_svd",
   "tensorly.reshape"
  ],
  "type": "function"
 },
 "tensorly.tenalg.set_tenalg_backend": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tenalg.tenalg_backend_context": {
  "lineno": 43,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "tensorly.tenalg.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.tests.test_contraction": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.tests.test_contraction.test_contract": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.random.random_sample",
   "tensorly.tenalg.inner",
   "tensorly.tenalg.mode_dot",
   "tensorly.tenalg.multi_mode_dot",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.tenalg.tests.test_generalised_inner_product": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.tests.test_generalised_inner_product.test_inner": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "tensorly.tenalg.tests.test_khatri_rao": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.tests.test_khatri_rao.test_khatri_rao": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.eye",
   "numpy.reshape"
  ],
  "type": "function"
 },
 "tensorly.tenalg.tests.test_kronecker": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.tests.test_kronecker.test_kronecker": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "tensorly.tenalg.tests.test_n_mode_product": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.tests.test_n_mode_product.test_mode_dot": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.random"
  ],
  "type": "function"
 },
 "tensorly.tenalg.tests.test_n_mode_product.test_multi_mode_dot": {
  "lineno": 93,
  "symbols_in_volume": [
   "itertools.permutations",
   "numpy.arange",
   "numpy.prod",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.random.random"
  ],
  "type": "function"
 },
 "tensorly.tenalg.tests.test_outer_product": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.tests.test_outer_product.test_outer": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tenalg.tests.test_proximal": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.tests.test_proximal.test_procrustes": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "tensorly.tenalg.tests.test_proximal.test_soft_thresholding": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tenalg.tests.test_proximal.test_svd_thresholding": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tenalg.tests.test_tensor_product": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.tests.test_tensor_product.test_batched_tensor_product": {
  "lineno": 19,
  "symbols_in_volume": [
   "tensorly.random.check_random_state",
   "tensorly.tenalg.outer",
   "tensorly.tensor",
   "tensorly.tensor_to_vec",
   "tensorly.testing.assert_array_almost_equal",
   "tensorly.unfold"
  ],
  "type": "function"
 },
 "tensorly.tenalg.tests.test_tensor_product.test_tensor_product": {
  "lineno": 9,
  "symbols_in_volume": [
   "tensorly.random.check_random_state",
   "tensorly.tenalg.outer",
   "tensorly.tensor",
   "tensorly.tensor_to_vec",
   "tensorly.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "tensorly.testing": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "module"
 },
 "tensorly.testing.assert_array_almost_equal": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "tensorly.backend.to_numpy"
  ],
  "type": "function"
 },
 "tensorly.testing.assert_array_equal": {
  "lineno": 6,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "tensorly.backend.to_numpy"
  ],
  "type": "function"
 },
 "tensorly.testing.assert_equal": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "tensorly.testing.assert_equal._tensor_to_numpy": {
  "lineno": 17,
  "symbols_in_volume": [
   "tensorly.backend.is_tensor",
   "tensorly.backend.to_numpy"
  ],
  "type": "function"
 },
 "tensorly.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tests.test_backend": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tests.test_backend.test_backend_and_tensorly_module_attributes": {
  "lineno": 97,
  "symbols_in_volume": [
   "tensorly",
   "tensorly.not_a_real_attribute"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_fold": {
  "lineno": 156,
  "symbols_in_volume": [
   "numpy.random.random"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_index_update": {
  "lineno": 556,
  "symbols_in_volume": [
   "numpy.copy",
   "numpy.float32",
   "numpy.random.random",
   "tensorly.index",
   "tensorly.index_update",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_ndim": {
  "lineno": 436,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_norm": {
  "lineno": 449,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_partial_fold": {
  "lineno": 277,
  "symbols_in_volume": [
   "numpy.random.random"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_partial_tensor_to_vec": {
  "lineno": 314,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_partial_unfold": {
  "lineno": 231,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_partial_vec_to_tensor": {
  "lineno": 339,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.random"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_prod": {
  "lineno": 551,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_qr": {
  "lineno": 531,
  "symbols_in_volume": [
   "numpy.random.random"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_set_backend": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.ndarray",
   "pytest.importorskip",
   "tensorly.backend_context",
   "tensorly.float32",
   "tensorly.get_backend",
   "tensorly.set_backend",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_set_backend_local_threadsafe": {
  "lineno": 60,
  "symbols_in_volume": [
   "concurrent.futures.ThreadPoolExecutor",
   "pytest.importorskip",
   "tensorly.backend_context",
   "tensorly.get_backend",
   "tensorly.set_backend"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_set_backend_local_threadsafe.check": {
  "lineno": 82,
  "symbols_in_volume": [
   "tensorly.backend_context",
   "tensorly.get_backend"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_shape": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_svd": {
  "lineno": 362,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.dot",
   "numpy.random.RandomState",
   "numpy.random.random",
   "numpy.sum",
   "scipy.linalg.svd",
   "tensorly.dot",
   "tensorly.get_backend",
   "tensorly.partial_svd",
   "tensorly.reshape",
   "tensorly.sum"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_tensor_creation": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.arange",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_tensor_to_vec": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_unfold": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_vec_to_tensor": {
  "lineno": 204,
  "symbols_in_volume": [
   "numpy.random.random"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_where": {
  "lineno": 478,
  "symbols_in_volume": [
   "numpy.prod",
   "numpy.random.randn",
   "numpy.where"
  ],
  "type": "function"
 },
 "tensorly.tests.test_cp_tensor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tests.test_cp_tensor.test_cp_mode_dot": {
  "lineno": 164,
  "symbols_in_volume": [
   "tensorly.cp_to_tensor",
   "tensorly.random.check_random_state",
   "tensorly.random.random_cp",
   "tensorly.tensor",
   "tensorly.testing.assert_array_almost_equal",
   "tensorly.testing.assert_equal"
  ],
  "type": "function"
 },
 "tensorly.tests.test_cp_tensor.test_cp_norm": {
  "lineno": 224,
  "symbols_in_volume": [
   "tensorly.abs",
   "tensorly.cp_to_tensor",
   "tensorly.norm",
   "tensorly.random.random_cp",
   "tensorly.testing.assert_"
  ],
  "type": "function"
 },
 "tensorly.tests.test_cp_tensor.test_cp_normalize": {
  "lineno": 17,
  "symbols_in_volume": [
   "tensorly.norm",
   "tensorly.ones",
   "tensorly.random.random_cp",
   "tensorly.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "tensorly.tests.test_cp_tensor.test_cp_to_tensor": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.reshape",
   "tensorly.dot",
   "tensorly.ones",
   "tensorly.tensor",
   "tensorly.testing.assert_array_almost_equal",
   "tensorly.testing.assert_array_equal",
   "tensorly.transpose"
  ],
  "type": "function"
 },
 "tensorly.tests.test_cp_tensor.test_cp_to_tensor_with_weights": {
  "lineno": 117,
  "symbols_in_volume": [
   "tensorly.arange",
   "tensorly.context",
   "tensorly.diag",
   "tensorly.dot",
   "tensorly.fold",
   "tensorly.random.random_cp",
   "tensorly.reshape",
   "tensorly.tenalg.khatri_rao",
   "tensorly.tensor",
   "tensorly.testing.assert_array_almost_equal",
   "tensorly.testing.assert_array_equal",
   "tensorly.transpose"
  ],
  "type": "function"
 },
 "tensorly.tests.test_cp_tensor.test_cp_to_unfolded": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.reshape",
   "tensorly.ones",
   "tensorly.tensor",
   "tensorly.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tensorly.tests.test_cp_tensor.test_cp_to_vec": {
  "lineno": 151,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.reshape",
   "tensorly.ones",
   "tensorly.tensor",
   "tensorly.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tensorly.tests.test_cp_tensor.test_unfolding_dot_khatri_rao": {
  "lineno": 202,
  "symbols_in_volume": [
   "numpy.random.random",
   "tensorly.dot",
   "tensorly.ndim",
   "tensorly.random.random_cp",
   "tensorly.tensor",
   "tensorly.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "tensorly.tests.test_cp_tensor.test_validate_cp_tensor": {
  "lineno": 28,
  "symbols_in_volume": [
   "tensorly.random.check_random_state",
   "tensorly.random.random_cp",
   "tensorly.tensor",
   "tensorly.testing.assert_equal",
   "tensorly.testing.assert_raises"
  ],
  "type": "function"
 },
 "tensorly.tests.test_cp_tensor.testvalidate_cp_rank": {
  "lineno": 237,
  "symbols_in_volume": [
   "numpy.prod",
   "numpy.random.randint",
   "tensorly.testing.assert_"
  ],
  "type": "function"
 },
 "tensorly.tests.test_parafac2_tensor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tests.test_parafac2_tensor.test_apply_parafac2_projections": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tests.test_parafac2_tensor.test_parafac2_normalise": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tests.test_parafac2_tensor.test_parafac2_to_slices": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tests.test_parafac2_tensor.test_parafac2_to_tensor": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tests.test_parafac2_tensor.test_parafac2_to_unfolded": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tests.test_parafac2_tensor.test_parafac2_to_vec": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tests.test_parafac2_tensor.test_validate_parafac2_tensor": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tests.test_tt_matrix": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tests.test_tt_matrix.test_tt_matrix_manipulation": {
  "lineno": 5,
  "symbols_in_volume": [
   "tensorly.random.random_tt_matrix",
   "tensorly.shape"
  ],
  "type": "function"
 },
 "tensorly.tests.test_tt_tensor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tests.test_tt_tensor.test_tt_n_param": {
  "lineno": 124,
  "symbols_in_volume": [
   "numpy.prod",
   "numpy.sum",
   "tensorly.shape"
  ],
  "type": "function"
 },
 "tensorly.tests.test_tt_tensor.test_tt_to_tensor": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.zeros",
   "tensorly.tensor",
   "tensorly.tt_to_tensor"
  ],
  "type": "function"
 },
 "tensorly.tests.test_tt_tensor.test_tt_to_tensor_random": {
  "lineno": 98,
  "symbols_in_volume": [
   "numpy.random.rand",
   "tensorly.shape",
   "tensorly.tensor",
   "tensorly.tt_to_tensor"
  ],
  "type": "function"
 },
 "tensorly.tests.test_tt_tensor.test_validate_tt_tensor": {
  "lineno": 11,
  "symbols_in_volume": [
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.tests.test_tt_tensor.testvalidate_tt_rank": {
  "lineno": 133,
  "symbols_in_volume": [
   "numpy.prod",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "tensorly.tests.test_tucker_tensor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tests.test_tucker_tensor.test_n_param_tucker": {
  "lineno": 144,
  "symbols_in_volume": [
   "numpy.prod",
   "numpy.sum"
  ],
  "type": "function"
 },
 "tensorly.tests.test_tucker_tensor.test_tucker_mode_dot": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tests.test_tucker_tensor.test_tucker_to_tensor": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array"
  ],
  "type": "function"
 },
 "tensorly.tests.test_tucker_tensor.test_tucker_to_unfolded": {
  "lineno": 73,
  "symbols_in_volume": [
   "numpy.random.random"
  ],
  "type": "function"
 },
 "tensorly.tests.test_tucker_tensor.test_tucker_to_vec": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.random.random"
  ],
  "type": "function"
 },
 "tensorly.tests.test_tucker_tensor.test_validate_tucker_rank": {
  "lineno": 153,
  "symbols_in_volume": [
   "numpy.prod",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "tensorly.tests.test_tucker_tensor.test_validate_tucker_tensor": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tt_matrix": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tt_matrix.TTMatrix": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.tt_matrix.TTMatrix.__getitem__": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tt_matrix.TTMatrix.__init__": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tt_matrix.TTMatrix.__iter__": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tt_matrix.TTMatrix.__len__": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tt_matrix.TTMatrix.__repr__": {
  "lineno": 218,
  "symbols_in_volume": [
   "numpy.prod"
  ],
  "type": "function"
 },
 "tensorly.tt_matrix.TTMatrix.__setitem__": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tt_matrix.TTMatrix.to_matrix": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tt_matrix.TTMatrix.to_tensor": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tt_matrix.TTMatrix.to_unfolding": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tt_matrix.TTMatrix.to_vec": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tt_matrix._tt_matrix_n_param": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "tensorly.tt_matrix._validate_tt_matrix": {
  "lineno": 144,
  "symbols_in_volume": [
   "tensorly.ndim",
   "tensorly.shape"
  ],
  "type": "function"
 },
 "tensorly.tt_matrix.tt_matrix_to_matrix": {
  "lineno": 89,
  "symbols_in_volume": [
   "numpy.prod",
   "tensorly.reshape"
  ],
  "type": "function"
 },
 "tensorly.tt_matrix.tt_matrix_to_unfolded": {
  "lineno": 108,
  "symbols_in_volume": [
   "tensorly.unfold"
  ],
  "type": "function"
 },
 "tensorly.tt_matrix.tt_matrix_to_vec": {
  "lineno": 128,
  "symbols_in_volume": [
   "tensorly.tensor_to_vec"
  ],
  "type": "function"
 },
 "tensorly.tt_matrix.validate_tt_matrix_rank": {
  "lineno": 12,
  "symbols_in_volume": [
   "tensorly.tt_tensor.validate_tt_rank"
  ],
  "type": "function"
 },
 "tensorly.tt_tensor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tt_tensor.TTTensor": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.tt_tensor.TTTensor.__getitem__": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tt_tensor.TTTensor.__init__": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tt_tensor.TTTensor.__iter__": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tt_tensor.TTTensor.__len__": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tt_tensor.TTTensor.__repr__": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tt_tensor.TTTensor.__setitem__": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tt_tensor.TTTensor.to_tensor": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tt_tensor.TTTensor.to_unfolding": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tt_tensor.TTTensor.to_vec": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tt_tensor._tt_n_param": {
  "lineno": 121,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "tensorly.tt_tensor._validate_tt_tensor": {
  "lineno": 12,
  "symbols_in_volume": [
   "tensorly.ndim",
   "tensorly.shape"
  ],
  "type": "function"
 },
 "tensorly.tt_tensor.tt_to_tensor": {
  "lineno": 56,
  "symbols_in_volume": [
   "tensorly.dot",
   "tensorly.reshape"
  ],
  "type": "function"
 },
 "tensorly.tt_tensor.tt_to_unfolded": {
  "lineno": 84,
  "symbols_in_volume": [
   "tensorly.unfold"
  ],
  "type": "function"
 },
 "tensorly.tt_tensor.tt_to_vec": {
  "lineno": 105,
  "symbols_in_volume": [
   "tensorly.tensor_to_vec"
  ],
  "type": "function"
 },
 "tensorly.tt_tensor.validate_tt_rank": {
  "lineno": 143,
  "symbols_in_volume": [
   "numpy.ceil",
   "numpy.floor",
   "numpy.prod",
   "numpy.round",
   "numpy.sqrt",
   "numpy.sum",
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.tucker_tensor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tucker_tensor.TuckerTensor": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.tucker_tensor.TuckerTensor.__getitem__": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tucker_tensor.TuckerTensor.__init__": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tucker_tensor.TuckerTensor.__iter__": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tucker_tensor.TuckerTensor.__len__": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tucker_tensor.TuckerTensor.__repr__": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tucker_tensor.TuckerTensor.__setitem__": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tucker_tensor.TuckerTensor.mode_dot": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tucker_tensor.TuckerTensor.to_tensor": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tucker_tensor.TuckerTensor.to_unfolded": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tucker_tensor.TuckerTensor.to_vec": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tucker_tensor._tucker_n_param": {
  "lineno": 252,
  "symbols_in_volume": [
   "numpy.prod",
   "numpy.sum"
  ],
  "type": "function"
 },
 "tensorly.tucker_tensor._validate_tucker_tensor": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tucker_tensor.tucker_mode_dot": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tucker_tensor.tucker_to_tensor": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tucker_tensor.tucker_to_unfolded": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tucker_tensor.tucker_to_vec": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tucker_tensor.validate_tucker_rank": {
  "lineno": 273,
  "symbols_in_volume": [
   "numpy.ceil",
   "numpy.floor",
   "numpy.prod",
   "numpy.round",
   "numpy.sum",
   "scipy.optimize.brentq",
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.utils.deprecation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.utils.deprecation.DefineDeprecated": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.utils.deprecation.DefineDeprecated.__new__": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.utils.deprecation.DefineDeprecated._wrap_class": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.utils.deprecation.DefineDeprecated._wrap_class.Wrapped": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.utils.deprecation.DefineDeprecated._wrap_class.Wrapped.__init__": {
  "lineno": 110,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.utils.deprecation.DefineDeprecated._wrap_fun": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.utils.deprecation.DefineDeprecated._wrap_fun.wrapped": {
  "lineno": 95,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.utils.deprecation.deprecated": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.utils.deprecation.deprecated.DeprecatedBy": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.utils.deprecation.deprecated.DeprecatedBy.__call__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.utils.deprecation.deprecated.DeprecatedBy.__init__": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.utils.deprecation.deprecated.DeprecatedBy._wrap_class": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.utils.deprecation.deprecated.DeprecatedBy._wrap_class.Wrapped": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.utils.deprecation.deprecated.DeprecatedBy._wrap_class.Wrapped.__init__": {
  "lineno": 54,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.utils.deprecation.deprecated.DeprecatedBy._wrap_fun": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.utils.deprecation.deprecated.DeprecatedBy._wrap_fun.wrapped": {
  "lineno": 35,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.utils.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.utils.tests.test_deprecation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.utils.tests.test_deprecation.test_deprecated": {
  "lineno": 3,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.utils.tests.test_deprecation.test_deprecated.Deprecated": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.utils.tests.test_deprecation.test_deprecated.Deprecated.__init__": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.utils.tests.test_deprecation.test_deprecated.Dummy": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.utils.tests.test_deprecation.test_deprecated.Dummy.__init__": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.utils.tests.test_deprecation.test_deprecated.fun1": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.utils.tests.test_deprecation.test_deprecated.fun2": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 }
}