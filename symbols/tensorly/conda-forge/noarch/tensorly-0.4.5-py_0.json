{
 "tensorly": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.backend": {
  "lineno": null,
  "symbols_in_volume": [
   "threading.local"
  ],
  "type": "module"
 },
 "tensorly.backend._get_backend_dir": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend._get_backend_method": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.backend_context": {
  "lineno": 99,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "tensorly.backend.core": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.backend.core.Backend": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.backend.core.Backend.SVD_FUNS": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.abs": {
  "lineno": 450,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.all": {
  "lineno": 374,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.arange": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.argmax": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.argmin": {
  "lineno": 360,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.clip": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.concatenate": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.conj": {
  "lineno": 562,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.context": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.copy": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.diag": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.dot": {
  "lineno": 495,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.eps": {
  "lineno": 556,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.eye": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.finfo": {
  "lineno": 559,
  "symbols_in_volume": [
   "numpy.finfo"
  ],
  "type": "function"
 },
 "tensorly.backend.core.Backend.float32": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.float64": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.int32": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.int64": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.is_tensor": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.kr": {
  "lineno": 588,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.kron": {
  "lineno": 570,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.max": {
  "lineno": 317,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.mean": {
  "lineno": 388,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.min": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.moveaxis": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.ndim": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.norm": {
  "lineno": 478,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.ones": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.partial_svd": {
  "lineno": 640,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.dot",
   "numpy.finfo",
   "numpy.ndarray",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "numpy.where",
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.backend.core.Backend.prod": {
  "lineno": 420,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.qr": {
  "lineno": 531,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.register_method": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.reshape": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.shape": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.sign": {
  "lineno": 436,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.solve": {
  "lineno": 510,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.sqrt": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.stack": {
  "lineno": 549,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.sum": {
  "lineno": 404,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.tensor": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.to_numpy": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.transpose": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.where": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.zeros": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.core.Backend.zeros_like": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.cupy_backend": {
  "lineno": null,
  "symbols_in_volume": [
   "cupy"
  ],
  "type": "module"
 },
 "tensorly.backend.cupy_backend.CupyBackend": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.backend.cupy_backend.CupyBackend.SVD_FUNS": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.CupyBackend.clip": {
  "lineno": 43,
  "symbols_in_volume": [
   "cupy.clip"
  ],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.CupyBackend.context": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.CupyBackend.is_tensor": {
  "lineno": 25,
  "symbols_in_volume": [
   "cupy.ndarray"
  ],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.CupyBackend.ndim": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.CupyBackend.norm": {
  "lineno": 47,
  "symbols_in_volume": [
   "cupy.abs",
   "cupy.max",
   "cupy.sqrt",
   "cupy.sum"
  ],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.CupyBackend.shape": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.CupyBackend.solve": {
  "lineno": 65,
  "symbols_in_volume": [
   "cupy.cuda.cusolver.CUSOLVERError",
   "cupy.linalg.solve",
   "numpy.linalg.solve",
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.CupyBackend.tensor": {
  "lineno": 21,
  "symbols_in_volume": [
   "cupy.array",
   "cupy.float32"
  ],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.CupyBackend.to_numpy": {
  "lineno": 29,
  "symbols_in_volume": [
   "cupy.asnumpy",
   "cupy.ndarray"
  ],
  "type": "function"
 },
 "tensorly.backend.cupy_backend.CupyBackend.truncated_svd": {
  "lineno": 76,
  "symbols_in_volume": [
   "cupy.linalg.svd"
  ],
  "type": "function"
 },
 "tensorly.backend.dispatch": {
  "lineno": 155,
  "symbols_in_volume": [
   "inspect.signature"
  ],
  "type": "function"
 },
 "tensorly.backend.dispatch.inner": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.get_backend": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.initialize_backend": {
  "lineno": 20,
  "symbols_in_volume": [
   "os.environ.get",
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend": {
  "lineno": null,
  "symbols_in_volume": [
   "mxnet.nd",
   "numpy"
  ],
  "type": "module"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.SVD_FUNS": {
  "lineno": 288,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.abs": {
  "lineno": 96,
  "symbols_in_volume": [
   "mxnet.nd.NDArray",
   "mxnet.nd.abs",
   "numpy.abs"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.all": {
  "lineno": 159,
  "symbols_in_volume": [
   "mxnet.nd.sum"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.argmax": {
  "lineno": 80,
  "symbols_in_volume": [
   "mxnet.nd.argmax"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.argmin": {
  "lineno": 88,
  "symbols_in_volume": [
   "mxnet.nd.argmin"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.clip": {
  "lineno": 140,
  "symbols_in_volume": [
   "mxnet.nd.max",
   "mxnet.nd.maximum",
   "mxnet.nd.min",
   "mxnet.nd.minimum"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.concatenate": {
  "lineno": 218,
  "symbols_in_volume": [
   "mxnet.nd.concat"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.conj": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.context": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.copy": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.is_tensor": {
  "lineno": 32,
  "symbols_in_volume": [
   "mxnet.nd.NDArray"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.max": {
  "lineno": 73,
  "symbols_in_volume": [
   "mxnet.nd.NDArray",
   "mxnet.nd.max",
   "numpy.max"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.mean": {
  "lineno": 187,
  "symbols_in_volume": [
   "mxnet.nd.mean"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.min": {
  "lineno": 66,
  "symbols_in_volume": [
   "mxnet.nd.NDArray",
   "mxnet.nd.min",
   "numpy.min"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.moveaxis": {
  "lineno": 171,
  "symbols_in_volume": [
   "mxnet.ndarray.transpose"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.ndim": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.norm": {
  "lineno": 103,
  "symbols_in_volume": [
   "mxnet.nd.abs",
   "mxnet.nd.max",
   "mxnet.nd.sqrt",
   "mxnet.nd.sum"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.qr": {
  "lineno": 123,
  "symbols_in_volume": [
   "mxnet.nd.linalg.gelqf",
   "numpy.linalg.qr",
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.reshape": {
  "lineno": 53,
  "symbols_in_volume": [
   "mxnet.nd.reshape"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.shape": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.solve": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.linalg.solve"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.sqrt": {
  "lineno": 207,
  "symbols_in_volume": [
   "math.sqrt",
   "mxnet.nd.NDArray",
   "mxnet.nd.sqrt"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.stack": {
  "lineno": 222,
  "symbols_in_volume": [
   "mxnet.ndarray.stack"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.sum": {
  "lineno": 197,
  "symbols_in_volume": [
   "mxnet.nd.sum"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.symeig_svd": {
  "lineno": 226,
  "symbols_in_volume": [
   "mxnet.nd.linalg.syevd",
   "mxnet.ndarray.dot",
   "mxnet.ndarray.reshape",
   "mxnet.ndarray.transpose",
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.tensor": {
  "lineno": 26,
  "symbols_in_volume": [
   "mxnet.cpu",
   "mxnet.nd.array",
   "numpy.float32",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "tensorly.backend.mxnet_backend.MxnetBackend.to_numpy": {
  "lineno": 36,
  "symbols_in_volume": [
   "mxnet.nd.NDArray",
   "numpy.array",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "tensorly.backend.numpy_backend": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy",
   "numpy.linalg"
  ],
  "type": "module"
 },
 "tensorly.backend.numpy_backend.NumpyBackend": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.backend.numpy_backend.NumpyBackend.SVD_FUNS": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.numpy_backend.NumpyBackend.clip": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.clip"
  ],
  "type": "function"
 },
 "tensorly.backend.numpy_backend.NumpyBackend.context": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.numpy_backend.NumpyBackend.dot": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.numpy_backend.NumpyBackend.is_tensor": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "tensorly.backend.numpy_backend.NumpyBackend.kr": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.einsum"
  ],
  "type": "function"
 },
 "tensorly.backend.numpy_backend.NumpyBackend.ndim": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.numpy_backend.NumpyBackend.norm": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.max",
   "numpy.sqrt",
   "numpy.sum"
  ],
  "type": "function"
 },
 "tensorly.backend.numpy_backend.NumpyBackend.shape": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.numpy_backend.NumpyBackend.tensor": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "tensorly.backend.numpy_backend.NumpyBackend.to_numpy": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.copy"
  ],
  "type": "function"
 },
 "tensorly.backend.override_module_dispatch": {
  "lineno": 129,
  "symbols_in_volume": [
   "sys.modules.__class__",
   "sys.modules.__dir__",
   "sys.modules.__getattr__",
   "sys.version_info"
  ],
  "type": "function"
 },
 "tensorly.backend.override_module_dispatch.BackendAttributeModuleType": {
  "lineno": 142,
  "symbols_in_volume": [
   "types.ModuleType"
  ],
  "type": "class"
 },
 "tensorly.backend.override_module_dispatch.BackendAttributeModuleType.__dir__": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.override_module_dispatch.BackendAttributeModuleType.__getattr__": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "torch",
   "torch.__version__",
   "torch.matmul"
  ],
  "type": "module"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.SVD_FUNS": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend._reverse": {
  "lineno": 185,
  "symbols_in_volume": [
   "torch.arange",
   "torch.int64"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.all": {
  "lineno": 77,
  "symbols_in_volume": [
   "torch.sum"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.arange": {
  "lineno": 59,
  "symbols_in_volume": [
   "torch.arange"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.argmax": {
  "lineno": 169,
  "symbols_in_volume": [
   "torch.argmax"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.argmin": {
  "lineno": 165,
  "symbols_in_volume": [
   "torch.argmin"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.clip": {
  "lineno": 66,
  "symbols_in_volume": [
   "torch.clamp",
   "torch.max",
   "torch.min"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.concatenate": {
  "lineno": 161,
  "symbols_in_volume": [
   "torch.cat"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.conj": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.context": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.copy": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.mean": {
  "lineno": 147,
  "symbols_in_volume": [
   "torch.mean"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.moveaxis": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.ndim": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.norm": {
  "lineno": 130,
  "symbols_in_volume": [
   "torch.abs",
   "torch.max",
   "torch.norm"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.shape": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.solve": {
  "lineno": 106,
  "symbols_in_volume": [
   "torch.solve"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.stack": {
  "lineno": 173,
  "symbols_in_volume": [
   "torch.stack"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.sum": {
  "lineno": 154,
  "symbols_in_volume": [
   "torch.sum"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.symeig_svd": {
  "lineno": 242,
  "symbols_in_volume": [
   "torch.sqrt",
   "torch.symeig",
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.tensor": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.ndarray",
   "torch.float32",
   "torch.tensor"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.to_numpy": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ndarray",
   "torch.is_tensor"
  ],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.transpose": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.pytorch_backend.PyTorchBackend.truncated_svd": {
  "lineno": 203,
  "symbols_in_volume": [
   "torch.svd"
  ],
  "type": "function"
 },
 "tensorly.backend.register_backend": {
  "lineno": 37,
  "symbols_in_volume": [
   "importlib.import_module"
  ],
  "type": "function"
 },
 "tensorly.backend.set_backend": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "tensorflow.abs",
   "tensorflow.argmax",
   "tensorflow.argmin",
   "tensorflow.compat.v1.where",
   "tensorflow.concat",
   "tensorflow.eye",
   "tensorflow.identity",
   "tensorflow.linalg.qr",
   "tensorflow.linalg.tensor_diag",
   "tensorflow.ones",
   "tensorflow.reduce_all",
   "tensorflow.reduce_max",
   "tensorflow.reduce_mean",
   "tensorflow.reduce_min",
   "tensorflow.reduce_prod",
   "tensorflow.reduce_sum",
   "tensorflow.reshape",
   "tensorflow.sign",
   "tensorflow.sqrt",
   "tensorflow.stack",
   "tensorflow.transpose",
   "tensorflow.zeros",
   "tensorflow.zeros_like"
  ],
  "type": "module"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.SVD_FUNS": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.arange": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.float32",
   "tensorflow.range"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.clip": {
  "lineno": 60,
  "symbols_in_volume": [
   "tensorflow.clip_by_value",
   "tensorflow.reduce_max",
   "tensorflow.reduce_min"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.conj": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.context": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.dot": {
  "lineno": 99,
  "symbols_in_volume": [
   "tensorflow.tensordot"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.is_tensor": {
  "lineno": 32,
  "symbols_in_volume": [
   "tensorflow.Tensor"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.moveaxis": {
  "lineno": 73,
  "symbols_in_volume": [
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.ndim": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.norm": {
  "lineno": 89,
  "symbols_in_volume": [
   "numpy.inf",
   "tensorflow.norm"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.shape": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.solve": {
  "lineno": 110,
  "symbols_in_volume": [
   "tensorflow.linalg.solve",
   "tensorflow.reshape",
   "tensorflow.squeeze"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.tensor": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.float32",
   "tensorflow.Tensor",
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.to_numpy": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.ndarray",
   "tensorflow.Tensor"
  ],
  "type": "function"
 },
 "tensorly.backend.tensorflow_backend.TensorflowBackend.truncated_svd": {
  "lineno": 121,
  "symbols_in_volume": [
   "tensorflow.linalg.svd",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "tensorly.base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.base.fold": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.base.partial_fold": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.base.partial_tensor_to_vec": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.base.partial_unfold": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.base.partial_vec_to_tensor": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.base.tensor_to_vec": {
  "lineno": 3,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.base.unfold": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.base.vec_to_tensor": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.contrib": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.contrib.decomposition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.contrib.decomposition.mps_decomposition_cross": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.contrib.decomposition.mps_decomposition_cross.left_right_ttcross_step": {
  "lineno": 193,
  "symbols_in_volume": [
   "numpy.unravel_index",
   "tensorly.ndim",
   "tensorly.qr",
   "tensorly.reshape",
   "tensorly.shape",
   "tensorly.transpose"
  ],
  "type": "function"
 },
 "tensorly.contrib.decomposition.mps_decomposition_cross.matrix_product_state_cross": {
  "lineno": 6,
  "symbols_in_volume": [
   "tensorly.ndim",
   "tensorly.norm",
   "tensorly.reshape",
   "tensorly.shape",
   "tensorly.tensor",
   "tensorly.transpose",
   "tensorly.zeros"
  ],
  "type": "function"
 },
 "tensorly.contrib.decomposition.mps_decomposition_cross.maxvol": {
  "lineno": 338,
  "symbols_in_volume": [
   "tensorly.argmax",
   "tensorly.argmin",
   "tensorly.dot",
   "tensorly.eye",
   "tensorly.int64",
   "tensorly.reshape",
   "tensorly.shape",
   "tensorly.solve",
   "tensorly.sqrt",
   "tensorly.sum",
   "tensorly.tensor",
   "tensorly.to_numpy",
   "tensorly.transpose",
   "tensorly.zeros"
  ],
  "type": "function"
 },
 "tensorly.contrib.decomposition.mps_decomposition_cross.right_left_ttcross_step": {
  "lineno": 267,
  "symbols_in_volume": [
   "numpy.unravel_index",
   "tensorly.dot",
   "tensorly.ndim",
   "tensorly.qr",
   "tensorly.reshape",
   "tensorly.shape",
   "tensorly.tensor",
   "tensorly.transpose"
  ],
  "type": "function"
 },
 "tensorly.contrib.decomposition.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.contrib.decomposition.tests.test_mps_decomposition_cross": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.skipif",
   "tensorly.get_backend"
  ],
  "type": "module"
 },
 "tensorly.contrib.decomposition.tests.test_mps_decomposition_cross.test_matrix_product_state_cross_1": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.arange",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.contrib.decomposition.tests.test_mps_decomposition_cross.test_matrix_product_state_cross_2": {
  "lineno": 46,
  "symbols_in_volume": [
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.contrib.decomposition.tests.test_mps_decomposition_cross.test_matrix_product_state_cross_3": {
  "lineno": 71,
  "symbols_in_volume": [
   "tensorly.norm",
   "tensorly.tensor",
   "tensorly.testing.assert_"
  ],
  "type": "function"
 },
 "tensorly.contrib.decomposition.tests.test_mps_decomposition_cross.test_matrix_product_state_cross_4": {
  "lineno": 86,
  "symbols_in_volume": [
   "tensorly.norm",
   "tensorly.tensor",
   "tensorly.testing.assert_"
  ],
  "type": "function"
 },
 "tensorly.contrib.decomposition.tests.test_mps_decomposition_cross.test_matrix_product_state_cross_4.evaluateGrid": {
  "lineno": 104,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.array",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tensorly.contrib.decomposition.tests.test_mps_decomposition_cross.test_matrix_product_state_cross_4.func": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.contrib.decomposition.tests.test_mps_decomposition_cross.test_matrix_product_state_cross_4.getEquispaceGrid": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "tensorly.contrib.sparse": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.modules.__dict__.keys"
  ],
  "type": "module"
 },
 "tensorly.contrib.sparse.backend": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.contrib.sparse.backend._get_backend_dir": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend._get_backend_method": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.dispatch_sparse": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.dispatch_sparse.inner": {
  "lineno": 63,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.numpy_backend": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "numpy",
   "sparse",
   "sparse.__version__"
  ],
  "type": "module"
 },
 "tensorly.contrib.sparse.backend.numpy_backend.NumpySparseBackend": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.contrib.sparse.backend.numpy_backend.NumpySparseBackend.SVD_FUNS": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.numpy_backend.NumpySparseBackend.clip": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.clip"
  ],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.numpy_backend.NumpySparseBackend.context": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.numpy_backend.NumpySparseBackend.copy": {
  "lineno": 75,
  "symbols_in_volume": [
   "copy.copy"
  ],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.numpy_backend.NumpySparseBackend.dot": {
  "lineno": 98,
  "symbols_in_volume": [
   "numpy.dot",
   "sparse.dot"
  ],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.numpy_backend.NumpySparseBackend.is_tensor": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.numpy_backend.NumpySparseBackend.moveaxis": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.numpy_backend.NumpySparseBackend.norm": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.max",
   "numpy.sqrt",
   "numpy.sum"
  ],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.numpy_backend.NumpySparseBackend.partial_svd": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.complexfloating",
   "numpy.issubdtype",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "numpy.zeros",
   "scipy.linalg.eigh",
   "scipy.linalg.svd",
   "scipy.sparse.linalg.eigsh",
   "sparse.eye"
  ],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.numpy_backend.NumpySparseBackend.shape": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.numpy_backend.NumpySparseBackend.solve": {
  "lineno": 103,
  "symbols_in_volume": [
   "numpy.linalg.solve",
   "scipy.sparse.linalg.spsolve",
   "sparse.COO"
  ],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.numpy_backend.NumpySparseBackend.tensor": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "sparse.COO.from_numpy"
  ],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.numpy_backend.NumpySparseBackend.to_numpy": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.numpy_backend.is_sparse": {
  "lineno": 20,
  "symbols_in_volume": [
   "sparse.SparseArray"
  ],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.register_sparse_backend": {
  "lineno": 22,
  "symbols_in_volume": [
   "importlib.import_module"
  ],
  "type": "function"
 },
 "tensorly.contrib.sparse.backend.sparse_context": {
  "lineno": 13,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "tensorly.contrib.sparse.core": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.contrib.sparse.core.wrap": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.contrib.sparse.core.wrap.inner": {
  "lineno": 6,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "tensorly.contrib.sparse.decomposition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.contrib.sparse.kruskal_tensor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.contrib.sparse.sparse_dir": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.contrib.sparse.tenalg": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.contrib.sparse.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.contrib.sparse.tests.test_decomposition": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.importorskip",
   "pytest.skip"
  ],
  "type": "module"
 },
 "tensorly.contrib.sparse.tests.test_decomposition.test_sparse_parafac": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.ones",
   "sparse.random"
  ],
  "type": "function"
 },
 "tensorly.contrib.sparse.tests.test_tenalg": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.importorskip",
   "pytest.skip"
  ],
  "type": "module"
 },
 "tensorly.contrib.sparse.tests.test_tenalg.test_sparse_unfolding_times_kruskal": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.ones",
   "sparse.random",
   "tensorly.contrib.sparse.kruskal_tensor.unfolding_dot_khatri_rao",
   "tensorly.contrib.sparse.kruskal_to_tensor"
  ],
  "type": "function"
 },
 "tensorly.datasets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.datasets.synthetic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.datasets.synthetic.gen_image": {
  "lineno": 5,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.float",
   "numpy.ogrid",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tensorly.datasets.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.datasets.tests.test_synthetic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.datasets.tests.test_synthetic.test_gen_image": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.pi"
  ],
  "type": "function"
 },
 "tensorly.decomposition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition._tucker": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition._tucker.non_negative_tucker": {
  "lineno": 157,
  "symbols_in_volume": [
   "tensorly.abs",
   "tensorly.clip",
   "tensorly.context",
   "tensorly.dot",
   "tensorly.ndim",
   "tensorly.norm",
   "tensorly.shape",
   "tensorly.tensor",
   "tensorly.transpose",
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.decomposition._tucker.partial_tucker": {
  "lineno": 15,
  "symbols_in_volume": [
   "math.sqrt",
   "tensorly.SVD_FUNS",
   "tensorly.context",
   "tensorly.get_backend",
   "tensorly.norm",
   "tensorly.shape",
   "tensorly.tensor",
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.decomposition._tucker.tucker": {
  "lineno": 112,
  "symbols_in_volume": [
   "tensorly.ndim"
  ],
  "type": "function"
 },
 "tensorly.decomposition.candecomp_parafac": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition.candecomp_parafac.initialize_factors": {
  "lineno": 18,
  "symbols_in_volume": [
   "tensorly.SVD_FUNS",
   "tensorly.abs",
   "tensorly.concatenate",
   "tensorly.context",
   "tensorly.get_backend",
   "tensorly.ndim",
   "tensorly.norm",
   "tensorly.reshape",
   "tensorly.shape",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.decomposition.candecomp_parafac.non_negative_parafac": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition.candecomp_parafac.parafac": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.ones",
   "tensorly.abs",
   "tensorly.clip",
   "tensorly.conj",
   "tensorly.context",
   "tensorly.dot",
   "tensorly.eps",
   "tensorly.kruskal_to_tensor",
   "tensorly.ndim",
   "tensorly.norm",
   "tensorly.ones",
   "tensorly.qr",
   "tensorly.reshape",
   "tensorly.shape",
   "tensorly.solve",
   "tensorly.sqrt",
   "tensorly.sum",
   "tensorly.tensor",
   "tensorly.transpose",
   "tensorly.where"
  ],
  "type": "function"
 },
 "tensorly.decomposition.candecomp_parafac.randomised_parafac": {
  "lineno": 368,
  "symbols_in_volume": [
   "tensorly.context",
   "tensorly.dot",
   "tensorly.ndim",
   "tensorly.norm",
   "tensorly.ones",
   "tensorly.solve",
   "tensorly.transpose"
  ],
  "type": "function"
 },
 "tensorly.decomposition.candecomp_parafac.sample_khatri_rao": {
  "lineno": 296,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "numpy.zeros",
   "tensorly.context",
   "tensorly.ones",
   "tensorly.shape",
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.decomposition.mps_decomposition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition.mps_decomposition.matrix_product_state": {
  "lineno": 3,
  "symbols_in_volume": [
   "tensorly.partial_svd",
   "tensorly.reshape"
  ],
  "type": "function"
 },
 "tensorly.decomposition.robust_decomposition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition.robust_decomposition.robust_pca": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.max"
  ],
  "type": "function"
 },
 "tensorly.decomposition.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition.tests.test_candecomp_parafac": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition.tests.test_candecomp_parafac.test_non_negative_parafac": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_candecomp_parafac.test_parafac": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_candecomp_parafac.test_randomised_parafac": {
  "lineno": 134,
  "symbols_in_volume": [
   "pytest.mark.xfail",
   "tensorly.get_backend"
  ],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_candecomp_parafac.test_sample_khatri_rao": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.min",
   "pytest.mark.xfail",
   "tensorly.get_backend"
  ],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_mps_decomposition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition.tests.test_mps_decomposition.test_matrix_product_state": {
  "lineno": 8,
  "symbols_in_volume": [
   "tensorly.mps_to_tensor",
   "tensorly.norm",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_robust_decomposition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition.tests.test_robust_decomposition.test_RPCA": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.copy",
   "numpy.vstack",
   "tensorly.norm",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_tucker": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.decomposition.tests.test_tucker.test_non_negative_tucker": {
  "lineno": 85,
  "symbols_in_volume": [
   "tensorly.all",
   "tensorly.ndim",
   "tensorly.norm",
   "tensorly.shape",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_tucker.test_partial_tucker": {
  "lineno": 9,
  "symbols_in_volume": [
   "tensorly.abs",
   "tensorly.max",
   "tensorly.norm",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.decomposition.tests.test_tucker.test_tucker": {
  "lineno": 43,
  "symbols_in_volume": [
   "tensorly.abs",
   "tensorly.max",
   "tensorly.norm",
   "tensorly.shape",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.full_dir": {
  "lineno": 25,
  "symbols_in_volume": [
   "sys.modules.__dict__.keys"
  ],
  "type": "function"
 },
 "tensorly.kruskal_tensor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.kruskal_tensor.KruskalTensor": {
  "lineno": 16,
  "symbols_in_volume": [
   "collections.abc.Mapping"
  ],
  "type": "class"
 },
 "tensorly.kruskal_tensor.KruskalTensor.__getitem__": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.kruskal_tensor.KruskalTensor.__init__": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.kruskal_tensor.KruskalTensor.__iter__": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.kruskal_tensor.KruskalTensor.__len__": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.kruskal_tensor.KruskalTensor.__repr__": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.kruskal_tensor._validate_kruskal_tensor": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.kruskal_tensor.kruskal_mode_dot": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.kruskal_tensor.kruskal_norm": {
  "lineno": 388,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.kruskal_tensor.kruskal_normalise": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.kruskal_tensor.kruskal_to_tensor": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.kruskal_tensor.kruskal_to_unfolded": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.kruskal_tensor.kruskal_to_vec": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.kruskal_tensor.unfolding_dot_khatri_rao": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.metrics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.metrics.regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.metrics.regression.MSE": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.metrics.regression.RMSE": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.metrics.regression.correlation": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.metrics.regression.covariance": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.metrics.regression.reflective_correlation_coefficient": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.metrics.regression.standard_deviation": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.metrics.regression.variance": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.metrics.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.metrics.tests.test_regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.metrics.tests.test_regression.test_MSE": {
  "lineno": 7,
  "symbols_in_volume": [
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.metrics.tests.test_regression.test_RMSE": {
  "lineno": 15,
  "symbols_in_volume": [
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.metrics.tests.test_regression.test_correlation": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.random.random",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.mps_tensor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.mps_tensor._validate_mps_tensor": {
  "lineno": 8,
  "symbols_in_volume": [
   "tensorly.ndim",
   "tensorly.shape"
  ],
  "type": "function"
 },
 "tensorly.mps_tensor.mps_to_tensor": {
  "lineno": 52,
  "symbols_in_volume": [
   "tensorly.dot",
   "tensorly.reshape"
  ],
  "type": "function"
 },
 "tensorly.mps_tensor.mps_to_unfolded": {
  "lineno": 80,
  "symbols_in_volume": [
   "tensorly.unfold"
  ],
  "type": "function"
 },
 "tensorly.mps_tensor.mps_to_vec": {
  "lineno": 101,
  "symbols_in_volume": [
   "tensorly.tensor_to_vec"
  ],
  "type": "function"
 },
 "tensorly.random": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.random.base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.random.base.check_random_state": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "tensorly.random.base.cp_tensor": {
  "lineno": 10,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.random.base.random_kruskal": {
  "lineno": 43,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.random.base.random_mps": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.random.base.random_tucker": {
  "lineno": 85,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.random.base.tucker_tensor": {
  "lineno": 15,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.random.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.random.tests.test_base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.random.tests.test_base.test_check_random_state": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "tensorly.random.tests.test_base.test_random_kruskal": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.linalg.matrix_rank",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "tensorly.random.tests.test_base.test_random_mps": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "tensorly.random.tests.test_base.test_random_tucker": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.linalg.matrix_rank"
  ],
  "type": "function"
 },
 "tensorly.regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.regression.kruskal_regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.regression.kruskal_regression.KruskalRegressor": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.regression.kruskal_regression.KruskalRegressor.__init__": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.regression.kruskal_regression.KruskalRegressor.fit": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.eye"
  ],
  "type": "function"
 },
 "tensorly.regression.kruskal_regression.KruskalRegressor.get_params": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.regression.kruskal_regression.KruskalRegressor.predict": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.regression.kruskal_regression.KruskalRegressor.set_params": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.regression.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.regression.tests.test_kruskal_regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.regression.tests.test_kruskal_regression.test_KruskalRegressor": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tensorly.regression.tests.test_tucker_regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.regression.tests.test_tucker_regression.test_TuckerRegressor": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.random.normal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tensorly.regression.tucker_regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.regression.tucker_regression.TuckerRegressor": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tensorly.regression.tucker_regression.TuckerRegressor.__init__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.regression.tucker_regression.TuckerRegressor.fit": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.eye"
  ],
  "type": "function"
 },
 "tensorly.regression.tucker_regression.TuckerRegressor.get_params": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.regression.tucker_regression.TuckerRegressor.predict": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.regression.tucker_regression.TuckerRegressor.set_params": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tenalg": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg._khatri_rao": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg._khatri_rao.khatri_rao": {
  "lineno": 10,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "tensorly.tenalg._kronecker": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg._kronecker.kronecker": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tenalg.contraction": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.contraction.contract": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.prod",
   "tensorly.dot",
   "tensorly.ndim",
   "tensorly.reshape",
   "tensorly.shape",
   "tensorly.transpose"
  ],
  "type": "function"
 },
 "tensorly.tenalg.generalised_inner_product": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.generalised_inner_product.inner": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.prod"
  ],
  "type": "function"
 },
 "tensorly.tenalg.n_mode_product": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.n_mode_product.mode_dot": {
  "lineno": 6,
  "symbols_in_volume": [
   "tensorly.fold",
   "tensorly.unfold",
   "tensorly.vec_to_tensor"
  ],
  "type": "function"
 },
 "tensorly.tenalg.n_mode_product.multi_mode_dot": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tenalg.outer_product": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.outer_product.outer": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tenalg.proximal": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.proximal.procrustes": {
  "lineno": 74,
  "symbols_in_volume": [
   "tensorly.dot",
   "tensorly.partial_svd"
  ],
  "type": "function"
 },
 "tensorly.tenalg.proximal.soft_thresholding": {
  "lineno": 9,
  "symbols_in_volume": [
   "tensorly.abs",
   "tensorly.clip",
   "tensorly.sign"
  ],
  "type": "function"
 },
 "tensorly.tenalg.proximal.svd_thresholding": {
  "lineno": 53,
  "symbols_in_volume": [
   "tensorly.dot",
   "tensorly.partial_svd",
   "tensorly.reshape"
  ],
  "type": "function"
 },
 "tensorly.tenalg.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.tests.test_contraction": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.tests.test_contraction.test_contract": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.random.random_sample",
   "tensorly.tenalg.inner",
   "tensorly.tenalg.mode_dot",
   "tensorly.tenalg.multi_mode_dot",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.tenalg.tests.test_generalised_inner_product": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.tests.test_generalised_inner_product.test_inner": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "tensorly.tenalg.tests.test_khatri_rao": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.tests.test_khatri_rao.test_khatri_rao": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.eye",
   "numpy.reshape"
  ],
  "type": "function"
 },
 "tensorly.tenalg.tests.test_kronecker": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.tests.test_kronecker.test_kronecker": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "tensorly.tenalg.tests.test_n_mode_product": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.tests.test_n_mode_product.test_mode_dot": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.random"
  ],
  "type": "function"
 },
 "tensorly.tenalg.tests.test_n_mode_product.test_multi_mode_dot": {
  "lineno": 91,
  "symbols_in_volume": [
   "itertools.permutations",
   "numpy.arange",
   "numpy.prod",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.random.random"
  ],
  "type": "function"
 },
 "tensorly.tenalg.tests.test_outer_product": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.tests.test_outer_product.test_outer": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tenalg.tests.test_proximal": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tenalg.tests.test_proximal.test_procrustes": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "tensorly.tenalg.tests.test_proximal.test_soft_thresholding": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tenalg.tests.test_proximal.test_svd_thresholding": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.testing": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.testing.assert_",
   "numpy.testing.assert_raises"
  ],
  "type": "module"
 },
 "tensorly.testing.assert_array_almost_equal": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "tensorly.backend.to_numpy"
  ],
  "type": "function"
 },
 "tensorly.testing.assert_array_equal": {
  "lineno": 6,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "tensorly.backend.to_numpy"
  ],
  "type": "function"
 },
 "tensorly.testing.assert_equal": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "tensorly.testing.assert_equal._tensor_to_numpy": {
  "lineno": 17,
  "symbols_in_volume": [
   "tensorly.backend.is_tensor",
   "tensorly.backend.to_numpy"
  ],
  "type": "function"
 },
 "tensorly.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tests.test_backend": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tests.test_backend.test_backend_and_tensorly_module_attributes": {
  "lineno": 97,
  "symbols_in_volume": [
   "tensorly",
   "tensorly.not_a_real_attribute"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_fold": {
  "lineno": 156,
  "symbols_in_volume": [
   "numpy.random.random"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_ndim": {
  "lineno": 436,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_norm": {
  "lineno": 449,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_partial_fold": {
  "lineno": 277,
  "symbols_in_volume": [
   "numpy.random.random"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_partial_tensor_to_vec": {
  "lineno": 314,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_partial_unfold": {
  "lineno": 231,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_partial_vec_to_tensor": {
  "lineno": 339,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.random"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_prod": {
  "lineno": 551,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_qr": {
  "lineno": 531,
  "symbols_in_volume": [
   "numpy.random.random"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_set_backend": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.ndarray",
   "pytest.importorskip",
   "tensorly.backend_context",
   "tensorly.float32",
   "tensorly.get_backend",
   "tensorly.set_backend",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_set_backend_local_threadsafe": {
  "lineno": 60,
  "symbols_in_volume": [
   "concurrent.futures.ThreadPoolExecutor",
   "pytest.importorskip",
   "tensorly.backend_context",
   "tensorly.get_backend",
   "tensorly.set_backend"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_set_backend_local_threadsafe.check": {
  "lineno": 82,
  "symbols_in_volume": [
   "tensorly.backend_context",
   "tensorly.get_backend"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_shape": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_svd": {
  "lineno": 362,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.dot",
   "numpy.random.RandomState",
   "numpy.random.random",
   "numpy.sum",
   "scipy.linalg.svd",
   "tensorly.dot",
   "tensorly.get_backend",
   "tensorly.partial_svd",
   "tensorly.reshape",
   "tensorly.sum"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_tensor_creation": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.arange",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_tensor_to_vec": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_unfold": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_vec_to_tensor": {
  "lineno": 204,
  "symbols_in_volume": [
   "numpy.random.random"
  ],
  "type": "function"
 },
 "tensorly.tests.test_backend.test_where": {
  "lineno": 478,
  "symbols_in_volume": [
   "numpy.prod",
   "numpy.random.randn",
   "numpy.where"
  ],
  "type": "function"
 },
 "tensorly.tests.test_kruskal_tensor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tests.test_kruskal_tensor.test_kruskal_mode_dot": {
  "lineno": 163,
  "symbols_in_volume": [
   "tensorly.kruskal_to_tensor",
   "tensorly.random.check_random_state",
   "tensorly.random.random_kruskal",
   "tensorly.tensor",
   "tensorly.testing.assert_array_almost_equal",
   "tensorly.testing.assert_equal"
  ],
  "type": "function"
 },
 "tensorly.tests.test_kruskal_tensor.test_kruskal_norm": {
  "lineno": 223,
  "symbols_in_volume": [
   "tensorly.abs",
   "tensorly.kruskal_to_tensor",
   "tensorly.norm",
   "tensorly.random.random_kruskal",
   "tensorly.testing.assert_"
  ],
  "type": "function"
 },
 "tensorly.tests.test_kruskal_tensor.test_kruskal_normalise": {
  "lineno": 16,
  "symbols_in_volume": [
   "tensorly.norm",
   "tensorly.ones",
   "tensorly.random.random_kruskal",
   "tensorly.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "tensorly.tests.test_kruskal_tensor.test_kruskal_to_tensor": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.reshape",
   "tensorly.dot",
   "tensorly.ones",
   "tensorly.tensor",
   "tensorly.testing.assert_array_almost_equal",
   "tensorly.testing.assert_array_equal",
   "tensorly.transpose"
  ],
  "type": "function"
 },
 "tensorly.tests.test_kruskal_tensor.test_kruskal_to_tensor_with_weights": {
  "lineno": 116,
  "symbols_in_volume": [
   "tensorly.arange",
   "tensorly.diag",
   "tensorly.dot",
   "tensorly.fold",
   "tensorly.random.random_kruskal",
   "tensorly.reshape",
   "tensorly.tenalg.khatri_rao",
   "tensorly.tensor",
   "tensorly.testing.assert_array_almost_equal",
   "tensorly.testing.assert_array_equal",
   "tensorly.transpose"
  ],
  "type": "function"
 },
 "tensorly.tests.test_kruskal_tensor.test_kruskal_to_unfolded": {
  "lineno": 133,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.reshape",
   "tensorly.ones",
   "tensorly.tensor",
   "tensorly.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tensorly.tests.test_kruskal_tensor.test_kruskal_to_vec": {
  "lineno": 150,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.reshape",
   "tensorly.ones",
   "tensorly.tensor",
   "tensorly.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tensorly.tests.test_kruskal_tensor.test_unfolding_dot_khatri_rao": {
  "lineno": 201,
  "symbols_in_volume": [
   "numpy.random.random",
   "tensorly.dot",
   "tensorly.ndim",
   "tensorly.random.random_kruskal",
   "tensorly.tensor",
   "tensorly.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "tensorly.tests.test_kruskal_tensor.test_validate_kruskal_tensor": {
  "lineno": 27,
  "symbols_in_volume": [
   "tensorly.random.check_random_state",
   "tensorly.random.random_kruskal",
   "tensorly.tensor",
   "tensorly.testing.assert_equal",
   "tensorly.testing.assert_raises"
  ],
  "type": "function"
 },
 "tensorly.tests.test_mps_tensor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tests.test_mps_tensor.test_mps_to_tensor": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.zeros",
   "tensorly.mps_to_tensor",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.tests.test_mps_tensor.test_mps_to_tensor_random": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.random.rand",
   "tensorly.mps_to_tensor",
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.tests.test_mps_tensor.test_validate_mps_tensor": {
  "lineno": 10,
  "symbols_in_volume": [
   "tensorly.tensor"
  ],
  "type": "function"
 },
 "tensorly.tests.test_tucker_tensor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tests.test_tucker_tensor.test_tucker_mode_dot": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tests.test_tucker_tensor.test_tucker_to_tensor": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array"
  ],
  "type": "function"
 },
 "tensorly.tests.test_tucker_tensor.test_tucker_to_unfolded": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.random.random"
  ],
  "type": "function"
 },
 "tensorly.tests.test_tucker_tensor.test_tucker_to_vec": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.random.random"
  ],
  "type": "function"
 },
 "tensorly.tests.test_tucker_tensor.test_validate_tucker_tensor": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tucker_tensor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tensorly.tucker_tensor._validate_tucker_tensor": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tucker_tensor.tucker_mode_dot": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tucker_tensor.tucker_to_tensor": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tucker_tensor.tucker_to_unfolded": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tensorly.tucker_tensor.tucker_to_vec": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 }
}