{
 "d3rlpy": {
  "data": {},
  "type": "module"
 },
 "d3rlpy._version": {
  "data": {},
  "type": "module"
 },
 "d3rlpy._version.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "d3rlpy.algos": {
  "data": {
   "symbols_in_volume": [
    "str",
    "typing.Dict",
    "typing.Type"
   ]
  },
  "type": "module"
 },
 "d3rlpy.algos.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.algos.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "d3rlpy.algos.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "d3rlpy.algos.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "d3rlpy.algos.awac": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.algos.awac.AWAC": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "str",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.awac.AWAC.__init__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "AdamFactory",
    "bool",
    "check_augmentation",
    "check_encoder",
    "check_q_func",
    "check_use_gpu",
    "float",
    "int",
    "str",
    "super",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.awac.AWAC.create_impl": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "AWACImpl",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.awac.AWAC.get_loss_labels": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.awac.AWAC.update": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "float",
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.awac.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.algos.awac.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.algos.awac.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.algos.awac.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.algos.awr": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.algos.awr.AWR": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "d3rlpy.algos.awr._AWRBase",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.awr.AWR.create_impl": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "AWRImpl",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.awr.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.algos.awr.DiscreteAWR": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "d3rlpy.algos.awr._AWRBase",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.awr.DiscreteAWR.create_impl": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "DiscreteAWRImpl",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.awr.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.algos.awr.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.algos.awr.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.algos.awr.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "d3rlpy.algos.awr._AWRBase": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "float",
    "int",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.awr._AWRBase.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "SGDFactory",
    "check_augmentation",
    "check_encoder",
    "check_use_gpu",
    "float",
    "int",
    "super",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.awr._AWRBase._compute_advantages": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.ndarray",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.awr._AWRBase._compute_clipped_weights": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.minimum",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.awr._AWRBase._compute_lambda_returns": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "compute_lambda_return",
    "numpy.array",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.awr._AWRBase.create_impl": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.awr._AWRBase.get_loss_labels": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.awr._AWRBase.predict_value": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.ndarray",
    "typing.Any",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.awr._AWRBase.update": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.mean",
    "range",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.awr.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "d3rlpy.algos.awr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.algos.base": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.algos.base.AlgoBase": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "d3rlpy.algos.base.AlgoImplBase",
    "d3rlpy.algos.base.DataGenerator",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.base.AlgoBase.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "d3rlpy.algos.base.DataGenerator",
    "float",
    "int",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.base.AlgoBase._generate_new_data": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.base.AlgoBase.fit_batch_online": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "BatchReplayBuffer",
    "bool",
    "d3rlpy.algos.base.gym",
    "float",
    "int",
    "str",
    "train_batch_env",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.base.AlgoBase.fit_online": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "ReplayBuffer",
    "bool",
    "d3rlpy.algos.base.gym",
    "float",
    "int",
    "str",
    "train_single_env",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.base.AlgoBase.predict": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numpy.ndarray",
    "typing.Any",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.base.AlgoBase.predict_value": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "bool",
    "numpy.ndarray",
    "typing.Any",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.base.AlgoBase.sample_action": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "numpy.ndarray",
    "typing.Any",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.base.AlgoBase.save_policy": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.base.AlgoImplBase": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "d3rlpy.algos.base.AlgoImplBase.predict_best_action": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "numpy.ndarray",
    "typing.Any",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.base.AlgoImplBase.predict_value": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "bool",
    "numpy.ndarray",
    "typing.Any",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.base.AlgoImplBase.sample_action": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "numpy.ndarray",
    "typing.Any",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.base.AlgoImplBase.save_policy": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.base.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.algos.base.DataGenerator": {
  "data": {
   "lineno": 47
  },
  "type": "class"
 },
 "d3rlpy.algos.base.DataGenerator.generate": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.base.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.algos.base.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.algos.base.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "d3rlpy.algos.base.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "d3rlpy.algos.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "d3rlpy.algos.base.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "d3rlpy.algos.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.algos.bc": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.algos.bc.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.algos.bc.BC": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "d3rlpy.algos.bc._BCBase",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.bc.BC.create_impl": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "BCImpl",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.bc.DiscreteBC": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "d3rlpy.algos.bc._BCBase",
    "float",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.bc.DiscreteBC.__init__": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "AdamFactory",
    "float",
    "int",
    "super",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.bc.DiscreteBC.create_impl": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "DiscreteBCImpl",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.bc.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.algos.bc.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.algos.bc.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.algos.bc.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "d3rlpy.algos.bc._BCBase": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "float",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.bc._BCBase.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "AdamFactory",
    "check_augmentation",
    "check_encoder",
    "check_use_gpu",
    "float",
    "int",
    "super",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.bc._BCBase.create_impl": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.bc._BCBase.get_loss_labels": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.bc._BCBase.predict_value": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "numpy.ndarray",
    "typing.Any",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.bc._BCBase.sample_action": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.ndarray",
    "typing.Any",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.bc._BCBase.update": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "float",
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.bc.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "d3rlpy.algos.bc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.algos.bcq": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.algos.bcq.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.algos.bcq.BCQ": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.bcq.BCQ.__init__": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "AdamFactory",
    "bool",
    "check_augmentation",
    "check_encoder",
    "check_q_func",
    "check_use_gpu",
    "float",
    "int",
    "super",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.bcq.BCQ.create_impl": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "BCQImpl",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.bcq.BCQ.get_loss_labels": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.bcq.BCQ.sample_action": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.ndarray",
    "typing.Any",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.bcq.BCQ.update": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "float",
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.bcq.DiscreteBCQ": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "str",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.bcq.DiscreteBCQ.__init__": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "AdamFactory",
    "bool",
    "check_augmentation",
    "check_encoder",
    "check_q_func",
    "check_use_gpu",
    "float",
    "int",
    "str",
    "super",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.bcq.DiscreteBCQ.create_impl": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "DiscreteBCQImpl",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.bcq.DiscreteBCQ.get_loss_labels": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.bcq.DiscreteBCQ.update": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "float",
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.bcq.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.algos.bcq.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.algos.bcq.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.algos.bcq.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "d3rlpy.algos.bcq.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.algos.bear": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.algos.bear.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.algos.bear.BEAR": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "str",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.bear.BEAR.__init__": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "AdamFactory",
    "bool",
    "check_augmentation",
    "check_encoder",
    "check_q_func",
    "check_use_gpu",
    "float",
    "int",
    "str",
    "super",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.bear.BEAR.create_impl": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "BEARImpl",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.bear.BEAR.get_loss_labels": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.bear.BEAR.update": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "float",
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.bear.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.algos.bear.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.algos.bear.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.algos.cql": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.algos.cql.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.algos.cql.CQL": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "str",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.cql.CQL.__init__": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "AdamFactory",
    "bool",
    "check_augmentation",
    "check_encoder",
    "check_q_func",
    "check_use_gpu",
    "float",
    "int",
    "str",
    "super",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.cql.CQL.create_impl": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "CQLImpl",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.cql.CQL.get_loss_labels": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.cql.CQL.update": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "float",
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.cql.DiscreteCQL": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.cql.DiscreteCQL.create_impl": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "DiscreteCQLImpl",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.cql.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.algos.cql.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.algos.cql.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.algos.create_algo": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.algos.get_algo",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.ddpg": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.algos.ddpg.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.algos.ddpg.DDPG": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "str",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.ddpg.DDPG.__init__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "AdamFactory",
    "bool",
    "check_augmentation",
    "check_encoder",
    "check_q_func",
    "check_use_gpu",
    "float",
    "int",
    "str",
    "super",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.ddpg.DDPG.create_impl": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "DDPGImpl",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.ddpg.DDPG.get_loss_labels": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.ddpg.DDPG.update": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "float",
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.ddpg.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.algos.ddpg.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.algos.ddpg.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.algos.dqn": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.algos.dqn.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.algos.dqn.DQN": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "str",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.dqn.DQN.__init__": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "AdamFactory",
    "bool",
    "check_augmentation",
    "check_encoder",
    "check_q_func",
    "check_use_gpu",
    "float",
    "int",
    "str",
    "super",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.dqn.DQN.create_impl": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "DQNImpl",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.dqn.DQN.get_loss_labels": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.dqn.DQN.update": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "float",
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.dqn.DoubleDQN": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "d3rlpy.algos.dqn.DQN",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.dqn.DoubleDQN.create_impl": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "DoubleDQNImpl",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.dqn.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.algos.dqn.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.algos.dqn.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.algos.get_algo": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "str",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.plas": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.algos.plas.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.algos.plas.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.algos.plas.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.algos.plas.PLAS": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "str",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.plas.PLAS.__init__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "AdamFactory",
    "bool",
    "check_augmentation",
    "check_encoder",
    "check_q_func",
    "check_use_gpu",
    "float",
    "int",
    "str",
    "super",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.plas.PLAS.create_impl": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "PLASImpl",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.plas.PLAS.get_loss_labels": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.plas.PLAS.update": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "float",
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.plas.PLASWithPerturbation": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "d3rlpy.algos.plas.PLAS",
    "float",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.plas.PLASWithPerturbation.__init__": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "AdamFactory",
    "bool",
    "float",
    "int",
    "str",
    "super",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.plas.PLASWithPerturbation.create_impl": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "PLASWithPerturbationImpl",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.plas.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.algos.sac": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.algos.sac.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.algos.sac.DiscreteSAC": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.sac.DiscreteSAC.__init__": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "AdamFactory",
    "bool",
    "check_augmentation",
    "check_encoder",
    "check_q_func",
    "check_use_gpu",
    "float",
    "int",
    "super",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.sac.DiscreteSAC.create_impl": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "DiscreteSACImpl",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.sac.DiscreteSAC.get_loss_labels": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.sac.DiscreteSAC.update": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "float",
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.sac.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.algos.sac.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.algos.sac.SAC": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "str",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.sac.SAC.__init__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "AdamFactory",
    "bool",
    "check_augmentation",
    "check_encoder",
    "check_q_func",
    "check_use_gpu",
    "float",
    "int",
    "str",
    "super",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.sac.SAC.create_impl": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "SACImpl",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.sac.SAC.get_loss_labels": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.sac.SAC.update": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "float",
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.sac.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.algos.td3": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.algos.td3.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.algos.td3.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.algos.td3.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.algos.td3.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.algos.td3.TD3": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "str",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.td3.TD3.__init__": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "AdamFactory",
    "bool",
    "check_augmentation",
    "check_encoder",
    "check_q_func",
    "check_use_gpu",
    "float",
    "int",
    "str",
    "super",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.td3.TD3.create_impl": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "TD3Impl",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.td3.TD3.get_loss_labels": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.td3.TD3.update": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "float",
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.algos.torch.awac_impl": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.algos.torch.awac_impl.AWACImpl": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "float",
    "int"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.torch.awac_impl.AWACImpl.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "AdamFactory",
    "bool",
    "float",
    "int",
    "str",
    "super",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.awac_impl.AWACImpl._build_actor": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "create_normal_policy"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.awac_impl.AWACImpl._compute_actor_loss": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.awac_impl.torch",
    "squash_action"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.awac_impl.AWACImpl._compute_weights": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.awac_impl.torch",
    "torch.nn.functional.softmax"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.awac_impl.AWACImpl.compute_actor_loss": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "augmentation_api",
    "d3rlpy.algos.torch.awac_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.awac_impl.AWACImpl.update_actor": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.awac_impl.torch",
    "numpy.ndarray",
    "torch_api"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.awac_impl.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.awac_impl.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.awac_impl.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.awac_impl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.awac_impl.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.awr_impl": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.algos.torch.awr_impl.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.awr_impl.AWRBaseImpl": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "float",
    "torch.optim.Optimizer",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.torch.awr_impl.AWRBaseImpl.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "float",
    "int",
    "super",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.awr_impl.AWRBaseImpl._build_actor": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.awr_impl.AWRBaseImpl._build_actor_optim": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.awr_impl.AWRBaseImpl._build_critic": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "create_value_function"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.awr_impl.AWRBaseImpl._build_critic_optim": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.awr_impl.AWRBaseImpl._compute_actor_loss": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "d3rlpy.algos.torch.awr_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.awr_impl.AWRBaseImpl._predict_best_action": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.awr_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.awr_impl.AWRBaseImpl._sample_action": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.awr_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.awr_impl.AWRBaseImpl.build": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.awr_impl.AWRBaseImpl.compute_actor_loss": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "augmentation_api",
    "d3rlpy.algos.torch.awr_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.awr_impl.AWRBaseImpl.compute_critic_loss": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "augmentation_api",
    "d3rlpy.algos.torch.awr_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.awr_impl.AWRBaseImpl.predict_value": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.awr_impl.torch",
    "numpy.ndarray",
    "torch_api",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.awr_impl.AWRBaseImpl.update_actor": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.awr_impl.torch",
    "numpy.ndarray",
    "torch_api"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.awr_impl.AWRBaseImpl.update_critic": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.awr_impl.torch",
    "numpy.ndarray",
    "torch_api"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.awr_impl.AWRImpl": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.awr_impl.AWRBaseImpl",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.torch.awr_impl.AWRImpl._build_actor": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "create_normal_policy"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.awr_impl.AWRImpl._compute_actor_loss": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.awr_impl.torch",
    "squash_action"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.awr_impl.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.awr_impl.DiscreteAWRImpl": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.awr_impl.AWRBaseImpl",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.torch.awr_impl.DiscreteAWRImpl._build_actor": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "create_categorical_policy"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.awr_impl.DiscreteAWRImpl._compute_actor_loss": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.awr_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.awr_impl.Optimizer": {
  "data": {
   "shadows": "torch.optim.Optimizer"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.awr_impl.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.awr_impl.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.awr_impl.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.awr_impl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.awr_impl.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.base": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.algos.torch.base.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.base.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.base.TorchImplBase": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.torch.base.TorchImplBase.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "int",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.base.TorchImplBase._predict_best_action": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "NotImplementedError",
    "d3rlpy.algos.torch.base.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.base.TorchImplBase._sample_action": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "NotImplementedError",
    "d3rlpy.algos.torch.base.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.base.TorchImplBase.action_scaler": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.base.TorchImplBase.action_size": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.base.TorchImplBase.augmentation": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.base.TorchImplBase.device": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.base.TorchImplBase.load_model": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.base.torch",
    "map_location",
    "set_state_dict",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.base.TorchImplBase.observation_shape": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "int",
    "property",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.base.TorchImplBase.predict_best_action": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.base.torch",
    "numpy.ndarray",
    "torch_api"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.base.TorchImplBase.sample_action": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.base.torch",
    "numpy.ndarray",
    "torch_api"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.base.TorchImplBase.save_model": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.base.torch",
    "get_state_dict",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.base.TorchImplBase.save_policy": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.algos.torch.base.torch",
    "freeze",
    "str",
    "traced_script",
    "traced_script.save",
    "unfreeze"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.base.TorchImplBase.save_policy._func": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.base.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.base.TorchImplBase.scaler": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.base.TorchImplBase.to_cpu": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "to_cpu"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.base.TorchImplBase.to_gpu": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "Device",
    "to_cuda"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.base.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.bc_impl": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.algos.torch.bc_impl.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.bc_impl.BCBaseImpl": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "float",
    "torch.optim.Optimizer",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.torch.bc_impl.BCBaseImpl.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "float",
    "int",
    "super",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bc_impl.BCBaseImpl._build_network": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bc_impl.BCBaseImpl._build_optim": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bc_impl.BCBaseImpl._predict_best_action": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.bc_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bc_impl.BCBaseImpl.build": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bc_impl.BCBaseImpl.compute_loss": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "augmentation_api",
    "d3rlpy.algos.torch.bc_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bc_impl.BCBaseImpl.predict_value": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bc_impl.BCBaseImpl.update_imitator": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.bc_impl.torch",
    "numpy.ndarray",
    "torch_api"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bc_impl.BCImpl": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.bc_impl.BCBaseImpl",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.torch.bc_impl.BCImpl._build_network": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "create_deterministic_regressor"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bc_impl.DiscreteBCImpl": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.bc_impl.BCBaseImpl",
    "float",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.torch.bc_impl.DiscreteBCImpl.__init__": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "float",
    "int",
    "super",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bc_impl.DiscreteBCImpl._build_network": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "create_discrete_imitator"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bc_impl.DiscreteBCImpl._predict_best_action": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.bc_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bc_impl.DiscreteBCImpl.compute_loss": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "augmentation_api",
    "d3rlpy.algos.torch.bc_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bc_impl.Optimizer": {
  "data": {
   "shadows": "torch.optim.Optimizer"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.bc_impl.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.bc_impl.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.bc_impl.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.bc_impl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.bc_impl.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.bcq_impl": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.algos.torch.bcq_impl.BCQImpl": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "float",
    "int",
    "torch.optim.Optimizer",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.torch.bcq_impl.BCQImpl.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "super",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bcq_impl.BCQImpl._build_actor": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "create_deterministic_residual_policy"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bcq_impl.BCQImpl._build_imitator": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "create_conditional_vae"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bcq_impl.BCQImpl._build_imitator_optim": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bcq_impl.BCQImpl._compute_actor_loss": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.bcq_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bcq_impl.BCQImpl._predict_best_action": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.bcq_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bcq_impl.BCQImpl._predict_value": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.bcq_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bcq_impl.BCQImpl._repeat_observation": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.bcq_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bcq_impl.BCQImpl._sample_action": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "NotImplementedError",
    "d3rlpy.algos.torch.bcq_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bcq_impl.BCQImpl._sample_repeated_action": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.algos.torch.bcq_impl.torch",
    "policy"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bcq_impl.BCQImpl.build": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bcq_impl.BCQImpl.compute_imitator_loss": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "augmentation_api",
    "d3rlpy.algos.torch.bcq_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bcq_impl.BCQImpl.compute_target": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "augmentation_api",
    "compute_max_with_n_actions",
    "d3rlpy.algos.torch.bcq_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bcq_impl.BCQImpl.update_imitator": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.bcq_impl.torch",
    "numpy.ndarray",
    "torch_api"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bcq_impl.DiscreteBCQImpl": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "float",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.torch.bcq_impl.DiscreteBCQImpl.__init__": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "str",
    "super",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bcq_impl.DiscreteBCQImpl._build_network": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "DiscreteImitator",
    "create_discrete_imitator",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bcq_impl.DiscreteBCQImpl._build_optim": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bcq_impl.DiscreteBCQImpl._compute_loss": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.bcq_impl.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bcq_impl.DiscreteBCQImpl._predict_best_action": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.bcq_impl.math",
    "d3rlpy.algos.torch.bcq_impl.torch",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bcq_impl.Optimizer": {
  "data": {
   "shadows": "torch.optim.Optimizer"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.bcq_impl.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.bcq_impl.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.bcq_impl.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.bcq_impl.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.bcq_impl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.bcq_impl.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.bear_impl": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.algos.torch.bear_impl.BEARImpl": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "float",
    "int",
    "str",
    "torch.optim.Optimizer",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.torch.bear_impl.BEARImpl.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "str",
    "super",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bear_impl.BEARImpl._build_alpha": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "create_parameter",
    "d3rlpy.algos.torch.bear_impl.math"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bear_impl.BEARImpl._build_alpha_optim": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bear_impl.BEARImpl._build_imitator": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "create_probablistic_regressor"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bear_impl.BEARImpl._build_imitator_optim": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bear_impl.BEARImpl._compute_actor_loss": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.bear_impl.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bear_impl.BEARImpl._compute_mmd": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ValueError",
    "d3rlpy.algos.torch.bear_impl._gaussian_kernel",
    "d3rlpy.algos.torch.bear_impl._laplacian_kernel",
    "d3rlpy.algos.torch.bear_impl.torch",
    "kernel"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bear_impl.BEARImpl._compute_mmd_loss": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.bear_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bear_impl.BEARImpl.build": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bear_impl.BEARImpl.compute_imitator_loss": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "augmentation_api",
    "d3rlpy.algos.torch.bear_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bear_impl.BEARImpl.compute_mmd_loss": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "augmentation_api",
    "d3rlpy.algos.torch.bear_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bear_impl.BEARImpl.compute_target": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "augmentation_api",
    "compute_max_with_n_actions_and_indices",
    "d3rlpy.algos.torch.bear_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bear_impl.BEARImpl.update_alpha": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.bear_impl.torch",
    "numpy.ndarray",
    "torch_api"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bear_impl.BEARImpl.update_imitator": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.bear_impl.torch",
    "numpy.ndarray",
    "torch_api"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bear_impl.BEARImpl.warmup_actor": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.bear_impl.torch",
    "numpy.ndarray",
    "torch_api"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bear_impl.Optimizer": {
  "data": {
   "shadows": "torch.optim.Optimizer"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.bear_impl.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.bear_impl.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.bear_impl._gaussian_kernel": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.bear_impl.torch",
    "float"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bear_impl._laplacian_kernel": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.bear_impl.torch",
    "float"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.bear_impl.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.bear_impl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.bear_impl.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.cql_impl": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.algos.torch.cql_impl.CQLImpl": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "torch.optim.Optimizer",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.torch.cql_impl.CQLImpl.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "str",
    "super",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.cql_impl.CQLImpl._build_alpha": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "create_parameter",
    "d3rlpy.algos.torch.cql_impl.math"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.cql_impl.CQLImpl._build_alpha_optim": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.cql_impl.CQLImpl._compute_conservative_loss": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.cql_impl.math",
    "d3rlpy.algos.torch.cql_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.cql_impl.CQLImpl._compute_critic_loss": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.cql_impl.torch",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.cql_impl.CQLImpl.build": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.cql_impl.CQLImpl.compute_target": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "augmentation_api",
    "d3rlpy.algos.torch.cql_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.cql_impl.CQLImpl.update_alpha": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.cql_impl.torch",
    "numpy.ndarray",
    "torch_api"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.cql_impl.DiscreteCQLImpl": {
  "data": {
   "lineno": 225
  },
  "type": "class"
 },
 "d3rlpy.algos.torch.cql_impl.DiscreteCQLImpl._compute_conservative_loss": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.cql_impl.torch",
    "torch.nn.functional.one_hot"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.cql_impl.DiscreteCQLImpl._compute_loss": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.cql_impl.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.cql_impl.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.cql_impl.Optimizer": {
  "data": {
   "shadows": "torch.optim.Optimizer"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.cql_impl.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.cql_impl.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.cql_impl.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.cql_impl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.cql_impl.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.ddpg_impl": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.algos.torch.ddpg_impl.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.ddpg_impl.DDPGBaseImpl": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "bool",
    "float",
    "int",
    "str",
    "torch.optim.Optimizer",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.torch.ddpg_impl.DDPGBaseImpl.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "str",
    "super",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.ddpg_impl.DDPGBaseImpl._build_actor": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.ddpg_impl.DDPGBaseImpl._build_actor_optim": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.ddpg_impl.DDPGBaseImpl._build_critic": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "create_continuous_q_function"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.ddpg_impl.DDPGBaseImpl._build_critic_optim": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.ddpg_impl.DDPGBaseImpl._compute_actor_loss": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "d3rlpy.algos.torch.ddpg_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.ddpg_impl.DDPGBaseImpl._compute_critic_loss": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.ddpg_impl.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.ddpg_impl.DDPGBaseImpl._predict_best_action": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.ddpg_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.ddpg_impl.DDPGBaseImpl._sample_action": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.ddpg_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.ddpg_impl.DDPGBaseImpl.build": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.ddpg_impl.copy"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.ddpg_impl.DDPGBaseImpl.compute_actor_loss": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "augmentation_api",
    "d3rlpy.algos.torch.ddpg_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.ddpg_impl.DDPGBaseImpl.compute_critic_loss": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "augmentation_api",
    "d3rlpy.algos.torch.ddpg_impl.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.ddpg_impl.DDPGBaseImpl.compute_target": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "d3rlpy.algos.torch.ddpg_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.ddpg_impl.DDPGBaseImpl.update_actor": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.ddpg_impl.torch",
    "numpy.ndarray",
    "torch_api"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.ddpg_impl.DDPGBaseImpl.update_actor_target": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "soft_sync"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.ddpg_impl.DDPGBaseImpl.update_critic": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.ddpg_impl.torch",
    "numpy.ndarray",
    "torch_api",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.ddpg_impl.DDPGBaseImpl.update_critic_target": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "soft_sync"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.ddpg_impl.DDPGImpl": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.ddpg_impl.DDPGBaseImpl",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.torch.ddpg_impl.DDPGImpl._build_actor": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "create_deterministic_policy"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.ddpg_impl.DDPGImpl._compute_actor_loss": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.ddpg_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.ddpg_impl.DDPGImpl._sample_action": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.ddpg_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.ddpg_impl.DDPGImpl.compute_target": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "augmentation_api",
    "d3rlpy.algos.torch.ddpg_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.ddpg_impl.Optimizer": {
  "data": {
   "shadows": "torch.optim.Optimizer"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.ddpg_impl.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.ddpg_impl.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.ddpg_impl.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.ddpg_impl.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.ddpg_impl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.ddpg_impl.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.dqn_impl": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.algos.torch.dqn_impl.DQNImpl": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "str",
    "torch.optim.Optimizer",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.torch.dqn_impl.DQNImpl.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "str",
    "super",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.dqn_impl.DQNImpl._build_network": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "create_discrete_q_function"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.dqn_impl.DQNImpl._build_optim": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.dqn_impl.DQNImpl._compute_loss": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.dqn_impl.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.dqn_impl.DQNImpl._predict_best_action": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.dqn_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.dqn_impl.DQNImpl._sample_action": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.dqn_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.dqn_impl.DQNImpl.build": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.dqn_impl.copy"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.dqn_impl.DQNImpl.compute_loss": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "augmentation_api",
    "d3rlpy.algos.torch.dqn_impl.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.dqn_impl.DQNImpl.compute_target": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "augmentation_api",
    "d3rlpy.algos.torch.dqn_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.dqn_impl.DQNImpl.update": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.dqn_impl.torch",
    "numpy.ndarray",
    "torch_api",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.dqn_impl.DQNImpl.update_target": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "hard_sync"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.dqn_impl.DoubleDQNImpl": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.dqn_impl.DQNImpl"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.torch.dqn_impl.DoubleDQNImpl.compute_target": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "augmentation_api",
    "d3rlpy.algos.torch.dqn_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.dqn_impl.Optimizer": {
  "data": {
   "shadows": "torch.optim.Optimizer"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.dqn_impl.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.dqn_impl.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.dqn_impl.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.dqn_impl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.dqn_impl.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.plas_impl": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.algos.torch.plas_impl.Optimizer": {
  "data": {
   "shadows": "torch.optim.Optimizer"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.plas_impl.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.plas_impl.PLASImpl": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "float",
    "int",
    "torch.optim.Optimizer",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.torch.plas_impl.PLASImpl.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "str",
    "super",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.plas_impl.PLASImpl._build_actor": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "create_deterministic_policy"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.plas_impl.PLASImpl._build_imitator": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "create_conditional_vae"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.plas_impl.PLASImpl._build_imitator_optim": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.plas_impl.PLASImpl._compute_actor_loss": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.plas_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.plas_impl.PLASImpl._predict_best_action": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.plas_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.plas_impl.PLASImpl._sample_action": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.plas_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.plas_impl.PLASImpl.build": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.plas_impl.PLASImpl.compute_target": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.plas_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.plas_impl.PLASImpl.update_imitator": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.plas_impl.torch",
    "numpy.ndarray",
    "torch_api"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.plas_impl.PLASWithPerturbationImpl": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.plas_impl.PLASImpl",
    "float",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.torch.plas_impl.PLASWithPerturbationImpl.__init__": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "str",
    "super",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.plas_impl.PLASWithPerturbationImpl._build_actor": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "create_deterministic_residual_policy",
    "super"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.plas_impl.PLASWithPerturbationImpl._build_actor_optim": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.plas_impl.PLASWithPerturbationImpl._compute_actor_loss": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.plas_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.plas_impl.PLASWithPerturbationImpl._predict_best_action": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.plas_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.plas_impl.PLASWithPerturbationImpl._sample_action": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.plas_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.plas_impl.PLASWithPerturbationImpl.build": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.plas_impl.copy",
    "super"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.plas_impl.PLASWithPerturbationImpl.compute_target": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.plas_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.plas_impl.PLASWithPerturbationImpl.update_actor_target": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "soft_sync",
    "super"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.plas_impl.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.plas_impl.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.plas_impl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.plas_impl.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.sac_impl": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.algos.torch.sac_impl.DiscreteSACImpl": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "torch.optim.Optimizer",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.torch.sac_impl.DiscreteSACImpl.__init__": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "super",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.sac_impl.DiscreteSACImpl._build_actor": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "create_categorical_policy"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.sac_impl.DiscreteSACImpl._build_actor_optim": {
  "data": {
   "lineno": 290
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.sac_impl.DiscreteSACImpl._build_critic": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "create_discrete_q_function"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.sac_impl.DiscreteSACImpl._build_critic_optim": {
  "data": {
   "lineno": 277
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.sac_impl.DiscreteSACImpl._build_temperature": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "create_parameter",
    "d3rlpy.algos.torch.sac_impl.math"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.sac_impl.DiscreteSACImpl._build_temperature_optim": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.sac_impl.DiscreteSACImpl._compute_actor_loss": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.sac_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.sac_impl.DiscreteSACImpl._compute_critic_loss": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.sac_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.sac_impl.DiscreteSACImpl._predict_best_action": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.sac_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.sac_impl.DiscreteSACImpl._sample_action": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.sac_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.sac_impl.DiscreteSACImpl.build": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.sac_impl.copy"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.sac_impl.DiscreteSACImpl.compute_actor_loss": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "augmentation_api",
    "d3rlpy.algos.torch.sac_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.sac_impl.DiscreteSACImpl.compute_critic_loss": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "augmentation_api",
    "d3rlpy.algos.torch.sac_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.sac_impl.DiscreteSACImpl.compute_target": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "augmentation_api",
    "d3rlpy.algos.torch.sac_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.sac_impl.DiscreteSACImpl.update_actor": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.sac_impl.torch",
    "numpy.ndarray",
    "torch_api"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.sac_impl.DiscreteSACImpl.update_critic": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.sac_impl.torch",
    "numpy.ndarray",
    "torch_api"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.sac_impl.DiscreteSACImpl.update_target": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "hard_sync"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.sac_impl.DiscreteSACImpl.update_temp": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.sac_impl.math",
    "d3rlpy.algos.torch.sac_impl.torch",
    "numpy.ndarray",
    "torch_api"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.sac_impl.Optimizer": {
  "data": {
   "shadows": "torch.optim.Optimizer"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.sac_impl.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.sac_impl.SACImpl": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "float",
    "torch.optim.Optimizer",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.torch.sac_impl.SACImpl.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "str",
    "super",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.sac_impl.SACImpl._build_actor": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "create_normal_policy"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.sac_impl.SACImpl._build_temperature": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "create_parameter",
    "d3rlpy.algos.torch.sac_impl.math"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.sac_impl.SACImpl._build_temperature_optim": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.sac_impl.SACImpl._compute_actor_loss": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.sac_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.sac_impl.SACImpl.build": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.sac_impl.SACImpl.compute_target": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "augmentation_api",
    "d3rlpy.algos.torch.sac_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.sac_impl.SACImpl.update_temp": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "d3rlpy.algos.torch.sac_impl.torch",
    "numpy.ndarray",
    "torch_api",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.sac_impl.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.sac_impl.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.sac_impl.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.sac_impl.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.sac_impl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.sac_impl.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.td3_impl": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.algos.torch.td3_impl.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.td3_impl.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.td3_impl.TD3Impl": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.torch.td3_impl.TD3Impl.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "str",
    "super",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.td3_impl.TD3Impl.compute_target": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "augmentation_api",
    "d3rlpy.algos.torch.td3_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.td3_impl.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.utility": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.algos.torch.utility.ContinuousQFunctionMixin": {
  "data": {
   "lineno": 54
  },
  "type": "class"
 },
 "d3rlpy.algos.torch.utility.ContinuousQFunctionMixin.predict_value": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.algos.torch.utility._ContinuousQFunctionProtocol",
    "d3rlpy.algos.torch.utility.torch",
    "numpy.ndarray",
    "numpy.std",
    "numpy.transpose",
    "torch_api",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.utility.DiscreteQFunctionMixin": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "d3rlpy.algos.torch.utility.DiscreteQFunctionMixin.predict_value": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.algos.torch.utility._DiscreteQFunctionProtocol",
    "d3rlpy.algos.torch.utility.torch",
    "numpy.array",
    "numpy.ndarray",
    "numpy.std",
    "numpy.transpose",
    "torch_api",
    "typing.Tuple",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "d3rlpy.algos.torch.utility.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.utility.Protocol": {
  "data": {
   "shadows": "typing_extensions.Protocol"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.utility.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.utility.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.utility._ContinuousQFunctionProtocol": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "typing.Optional",
    "typing_extensions.Protocol"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.torch.utility._DiscreteQFunctionProtocol": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "typing.Optional",
    "typing_extensions.Protocol"
   ]
  },
  "type": "class"
 },
 "d3rlpy.algos.torch.utility.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.algos.torch.utility.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.argument_utility": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "d3rlpy.argument_utility.ActionScalerArg": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "d3rlpy.argument_utility.AugmentationArg": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "d3rlpy.argument_utility.EncoderArg": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "d3rlpy.argument_utility.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.argument_utility.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.argument_utility.QFuncArg": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "d3rlpy.argument_utility.ScalerArg": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "d3rlpy.argument_utility.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "d3rlpy.argument_utility.UseGPUArg": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "d3rlpy.argument_utility.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "d3rlpy.argument_utility.check_action_scaler": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ValueError",
    "create_action_scaler",
    "d3rlpy.argument_utility.ActionScalerArg",
    "isinstance",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.argument_utility.check_augmentation": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "DrQPipeline",
    "ValueError",
    "create_augmentation",
    "d3rlpy.argument_utility.AugmentationArg",
    "isinstance",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.argument_utility.check_encoder": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ValueError",
    "create_encoder_factory",
    "d3rlpy.argument_utility.EncoderArg",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.argument_utility.check_q_func": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "create_q_func_factory",
    "d3rlpy.argument_utility.QFuncArg",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.argument_utility.check_scaler": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "create_scaler",
    "d3rlpy.argument_utility.ScalerArg",
    "isinstance",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.argument_utility.check_use_gpu": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "Device",
    "ValueError",
    "bool",
    "d3rlpy.argument_utility.UseGPUArg",
    "int",
    "isinstance",
    "type",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation": {
  "data": {
   "symbols_in_volume": [
    "d3rlpy.augmentation.register_augmentation",
    "str",
    "typing.Dict",
    "typing.Type"
   ]
  },
  "type": "module"
 },
 "d3rlpy.augmentation.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "d3rlpy.augmentation.base": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.augmentation.base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.base.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.base.Augmentation": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "str",
    "typing.ClassVar"
   ]
  },
  "type": "class"
 },
 "d3rlpy.augmentation.base.Augmentation.get_params": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "bool",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.base.Augmentation.get_type": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.base.Augmentation.transform": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "d3rlpy.augmentation.base.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.base.ClassVar": {
  "data": {
   "shadows": "typing.ClassVar"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.base.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.base.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.create_augmentation": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.image": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.augmentation.image.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.image.ClassVar": {
  "data": {
   "shadows": "typing.ClassVar"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.image.ColorJitter": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "float",
    "str",
    "typing.ClassVar",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "d3rlpy.augmentation.image.ColorJitter.__init__": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "float",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.image.ColorJitter._transform_brightness": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "d3rlpy.augmentation.image.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.image.ColorJitter._transform_contrast": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "d3rlpy.augmentation.image.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.image.ColorJitter._transform_hue": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "d3rlpy.augmentation.image.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.image.ColorJitter._transform_saturate": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "d3rlpy.augmentation.image.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.image.ColorJitter.get_params": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.image.ColorJitter.transform": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "ValueError",
    "d3rlpy.augmentation.image.torch",
    "kornia.color.hsv.hsv_to_rgb",
    "kornia.color.hsv.rgb_to_hsv",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.image.Cutout": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "float",
    "kornia.augmentation.RandomErasing",
    "str",
    "typing.ClassVar"
   ]
  },
  "type": "class"
 },
 "d3rlpy.augmentation.image.Cutout.__init__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "float",
    "kornia.augmentation.RandomErasing"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.image.Cutout.get_params": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.image.Cutout.transform": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "d3rlpy.augmentation.image.torch",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.image.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.image.HorizontalFlip": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "float",
    "kornia.augmentation.RandomHorizontalFlip",
    "str",
    "typing.ClassVar"
   ]
  },
  "type": "class"
 },
 "d3rlpy.augmentation.image.HorizontalFlip.__init__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "float",
    "kornia.augmentation.RandomHorizontalFlip"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.image.HorizontalFlip.get_params": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.image.HorizontalFlip.transform": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "d3rlpy.augmentation.image.torch",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.image.Intensity": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "float",
    "str",
    "typing.ClassVar"
   ]
  },
  "type": "class"
 },
 "d3rlpy.augmentation.image.Intensity.__init__": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.image.Intensity.get_params": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.image.Intensity.transform": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "d3rlpy.augmentation.image.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.image.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.image.RandomRotation": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "float",
    "kornia.augmentation.RandomRotation",
    "str",
    "typing.ClassVar"
   ]
  },
  "type": "class"
 },
 "d3rlpy.augmentation.image.RandomRotation.__init__": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "float",
    "kornia.augmentation.RandomRotation"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.image.RandomRotation.get_params": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.image.RandomRotation.transform": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "d3rlpy.augmentation.image.torch",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.image.RandomShift": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "int",
    "str",
    "torch.nn.Sequential",
    "typing.ClassVar",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.augmentation.image.RandomShift.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.image.RandomShift._setup": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "d3rlpy.augmentation.image.torch",
    "kornia.augmentation.RandomCrop",
    "torch.nn.ReplicationPad2d",
    "torch.nn.Sequential"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.image.RandomShift.get_params": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.image.RandomShift.transform": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "d3rlpy.augmentation.image.torch",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.image.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.image.VerticalFlip": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "float",
    "kornia.augmentation.RandomVerticalFlip",
    "str",
    "typing.ClassVar"
   ]
  },
  "type": "class"
 },
 "d3rlpy.augmentation.image.VerticalFlip.__init__": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "float",
    "kornia.augmentation.RandomVerticalFlip"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.image.VerticalFlip.get_params": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.image.VerticalFlip.transform": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "d3rlpy.augmentation.image.torch",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.image.aug": {
  "data": {
   "shadows": "kornia.augmentation"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.image.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.image.hsv_to_rgb": {
  "data": {
   "shadows": "kornia.color.hsv.hsv_to_rgb"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.image.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.image.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.image.rgb_to_hsv": {
  "data": {
   "shadows": "kornia.color.hsv.rgb_to_hsv"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.image.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.pipeline": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.augmentation.pipeline.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.pipeline.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.pipeline.AugmentationPipeline": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "d3rlpy.augmentation.pipeline.AugmentationPipeline.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.pipeline.AugmentationPipeline.append": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "d3rlpy.augmentation.pipeline.AugmentationPipeline.augmentations": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "property",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.pipeline.AugmentationPipeline.get_augmentation_params": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.pipeline.AugmentationPipeline.get_augmentation_types": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.pipeline.AugmentationPipeline.get_params": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "bool",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.pipeline.AugmentationPipeline.process": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "d3rlpy.augmentation.pipeline.torch",
    "str",
    "typing.Callable",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.pipeline.AugmentationPipeline.transform": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "d3rlpy.augmentation.pipeline.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.pipeline.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.pipeline.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.pipeline.DrQPipeline": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "d3rlpy.augmentation.pipeline.AugmentationPipeline",
    "int"
   ]
  },
  "type": "class"
 },
 "d3rlpy.augmentation.pipeline.DrQPipeline.__init__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "int",
    "super",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.pipeline.DrQPipeline.get_params": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.pipeline.DrQPipeline.process": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "d3rlpy.augmentation.pipeline.torch",
    "dict",
    "func",
    "range",
    "str",
    "typing.Callable",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.pipeline.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.pipeline.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.pipeline.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.pipeline.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.register_augmentation": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.vector": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.augmentation.vector.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.vector.ClassVar": {
  "data": {
   "shadows": "typing.ClassVar"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.vector.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "d3rlpy.augmentation.vector.MultipleAmplitudeScaling": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "d3rlpy.augmentation.vector.SingleAmplitudeScaling",
    "str",
    "typing.ClassVar"
   ]
  },
  "type": "class"
 },
 "d3rlpy.augmentation.vector.MultipleAmplitudeScaling.transform": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "d3rlpy.augmentation.vector.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.vector.SingleAmplitudeScaling": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "float",
    "str",
    "typing.ClassVar"
   ]
  },
  "type": "class"
 },
 "d3rlpy.augmentation.vector.SingleAmplitudeScaling.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.vector.SingleAmplitudeScaling.get_params": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.vector.SingleAmplitudeScaling.transform": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "d3rlpy.augmentation.vector.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.augmentation.vector.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.base": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "d3rlpy.base.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.base.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "d3rlpy.base.DefaultDict": {
  "data": {
   "shadows": "typing.DefaultDict"
  },
  "type": "import"
 },
 "d3rlpy.base.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "d3rlpy.base.ImplBase": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "d3rlpy.base.ImplBase.action_size": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.base.ImplBase.load_model": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.base.ImplBase.observation_shape": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "int",
    "property",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.base.ImplBase.save_model": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.base.LearnableBase": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "d3rlpy.base.ImplBase",
    "float",
    "int",
    "str",
    "typing.DefaultDict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.base.LearnableBase.__init__": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "check_action_scaler",
    "check_scaler",
    "collections.defaultdict",
    "float",
    "int",
    "list"
   ]
  },
  "type": "function"
 },
 "d3rlpy.base.LearnableBase.__setattr__": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "hasattr",
    "setattr",
    "str",
    "super",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.base.LearnableBase._evaluate": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "D3RLPyLogger",
    "float",
    "scorer",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.base.LearnableBase._generate_new_data": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.base.LearnableBase._prepare_logger": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "D3RLPyLogger",
    "bool",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.base.LearnableBase._process_observation_shape": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "int",
    "len",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.base.LearnableBase.action_scaler": {
  "data": {
   "lineno": 723
  },
  "type": "function"
 },
 "d3rlpy.base.LearnableBase.action_size": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "int",
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.base.LearnableBase.batch_size": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "d3rlpy.base.LearnableBase.build_with_dataset": {
  "data": {
   "lineno": 496
  },
  "type": "function"
 },
 "d3rlpy.base.LearnableBase.build_with_env": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "d3rlpy.base.gym",
    "get_action_size_from_env"
   ]
  },
  "type": "function"
 },
 "d3rlpy.base.LearnableBase.create_impl": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.base.LearnableBase.fit": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "RoundIterator",
    "bool",
    "collections.defaultdict",
    "float",
    "int",
    "len",
    "list",
    "next",
    "numpy.mean",
    "range",
    "str",
    "tqdm.auto.tqdm",
    "tuple",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "zip"
   ]
  },
  "type": "function"
 },
 "d3rlpy.base.LearnableBase.from_json": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "d3rlpy.base._deseriealize_params",
    "d3rlpy.base.json",
    "open",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.base.LearnableBase.gamma": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "d3rlpy.base.LearnableBase.get_loss_labels": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "NotImplementedError",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.base.LearnableBase.get_params": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "bool",
    "callable",
    "d3rlpy.base.copy",
    "dir",
    "getattr",
    "isinstance",
    "numpy.isscalar",
    "object",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.base.LearnableBase.impl": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "d3rlpy.base.ImplBase"
   ]
  },
  "type": "function"
 },
 "d3rlpy.base.LearnableBase.load_model": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.base.LearnableBase.n_frames": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "d3rlpy.base.LearnableBase.n_steps": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "d3rlpy.base.LearnableBase.observation_shape": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "int",
    "property",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.base.LearnableBase.save_model": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.base.LearnableBase.save_params": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "D3RLPyLogger",
    "d3rlpy.base.ImplBase",
    "d3rlpy.base.LearnableBase",
    "d3rlpy.base._serialize_params",
    "disable_parallel",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "d3rlpy.base.LearnableBase.scaler": {
  "data": {
   "lineno": 709
  },
  "type": "function"
 },
 "d3rlpy.base.LearnableBase.set_params": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "setattr",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.base.LearnableBase.update": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "NotImplementedError",
    "float",
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.base.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.base.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.base.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.base._deseriealize_params": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "DrQPipeline",
    "OptimizerFactory",
    "create_action_scaler",
    "create_augmentation",
    "create_encoder_factory",
    "create_q_func_factory",
    "create_scaler",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.base._serialize_params": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "typing.Any",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "d3rlpy.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "d3rlpy.base.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "d3rlpy.base.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "d3rlpy.base.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "d3rlpy.base.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "d3rlpy.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.base.tqdm": {
  "data": {
   "shadows": "tqdm.auto.tqdm"
  },
  "type": "import"
 },
 "d3rlpy.cli": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "d3rlpy.cli.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.cli.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "d3rlpy.cli.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.cli.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.cli.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.cli.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "d3rlpy.cli.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "d3rlpy.cli._exec_to_create_env": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "RuntimeError",
    "d3rlpy.cli.gym",
    "exec",
    "globals",
    "print",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.cli._get_params_json_path": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "RuntimeError",
    "d3rlpy.cli.os",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.cli.cli": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "d3rlpy.cli.click",
    "print"
   ]
  },
  "type": "function"
 },
 "d3rlpy.cli.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "d3rlpy.cli.export": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "ValueError",
    "d3rlpy.cli._get_params_json_path",
    "d3rlpy.cli.cli",
    "d3rlpy.cli.click",
    "d3rlpy.cli.json",
    "d3rlpy.cli.os",
    "format",
    "getattr",
    "open",
    "print",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.cli.get_plt": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ImportError",
    "d3rlpy.cli.matplotlib.pyplot",
    "seaborn.set"
   ]
  },
  "type": "function"
 },
 "d3rlpy.cli.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "d3rlpy.cli.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "d3rlpy.cli.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "d3rlpy.cli.matplotlib.pyplot": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "d3rlpy.cli.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.cli.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "d3rlpy.cli.play": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "ValueError",
    "d3rlpy.cli._exec_to_create_env",
    "d3rlpy.cli._get_params_json_path",
    "d3rlpy.cli.cli",
    "d3rlpy.cli.click",
    "d3rlpy.cli.gym",
    "d3rlpy.cli.json",
    "evaluate_on_environment",
    "getattr",
    "int",
    "open",
    "print",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.cli.plot": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.cli.cli",
    "d3rlpy.cli.click",
    "d3rlpy.cli.get_plt",
    "d3rlpy.cli.matplotlib.pyplot",
    "d3rlpy.cli.os",
    "d3rlpy.cli.print_stats",
    "enumerate",
    "float",
    "int",
    "len",
    "numpy.loadtxt",
    "numpy.max",
    "numpy.min",
    "print",
    "scipy.ndimage.filters.uniform_filter1d",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Sequence",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.cli.plot_all": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "d3rlpy.cli.cli",
    "d3rlpy.cli.click",
    "d3rlpy.cli.get_plt",
    "d3rlpy.cli.glob",
    "d3rlpy.cli.json",
    "d3rlpy.cli.matplotlib.pyplot",
    "d3rlpy.cli.os",
    "int",
    "len",
    "list",
    "numpy.ceil",
    "numpy.loadtxt",
    "open",
    "print",
    "range",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.cli.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "d3rlpy.cli.print_stats": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.loadtxt",
    "numpy.max",
    "numpy.min",
    "numpy.std",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.cli.record": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "Monitor",
    "ValueError",
    "d3rlpy.cli._exec_to_create_env",
    "d3rlpy.cli._get_params_json_path",
    "d3rlpy.cli.cli",
    "d3rlpy.cli.click",
    "d3rlpy.cli.gym",
    "d3rlpy.cli.json",
    "evaluate_on_environment",
    "float",
    "getattr",
    "int",
    "open",
    "print",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.cli.sns": {
  "data": {
   "shadows": "seaborn"
  },
  "type": "import"
 },
 "d3rlpy.cli.stats": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "d3rlpy.cli.cli",
    "d3rlpy.cli.click",
    "d3rlpy.cli.print_stats",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.cli.uniform_filter1d": {
  "data": {
   "shadows": "scipy.ndimage.filters.uniform_filter1d"
  },
  "type": "import"
 },
 "d3rlpy.constants": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.constants.ALGO_NOT_GIVEN_ERROR": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "d3rlpy.constants.IMPL_NOT_INITIALIZED_ERROR": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "d3rlpy.context": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "typing.List"
   ]
  },
  "type": "module"
 },
 "d3rlpy.context.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "d3rlpy.context.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.context.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "d3rlpy.context.disable_parallel": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "d3rlpy.context.get_parallel_flag": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "d3rlpy.context.parallel": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "d3rlpy.datasets": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.datasets.CARTPOLE_URL": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "d3rlpy.datasets.DATA_DIRECTORY": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "d3rlpy.datasets.PENDULUM_URL": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "d3rlpy.datasets.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "d3rlpy.datasets.d4rl": {
  "data": {
   "shadows": "d4rl"
  },
  "type": "import"
 },
 "d3rlpy.datasets.d4rl_atari": {
  "data": {
   "shadows": "d4rl_atari"
  },
  "type": "import"
 },
 "d3rlpy.datasets.d4rl_pybullet": {
  "data": {
   "shadows": "d4rl_pybullet"
  },
  "type": "import"
 },
 "d3rlpy.datasets.get_atari": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "ChannelFirst",
    "ImportError",
    "MDPDataset",
    "bool",
    "d3rlpy.datasets.gym",
    "int",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.datasets.get_cartpole": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "MDPDataset",
    "bool",
    "d3rlpy.datasets.CARTPOLE_URL",
    "d3rlpy.datasets.DATA_DIRECTORY",
    "d3rlpy.datasets.gym",
    "d3rlpy.datasets.os",
    "d3rlpy.datasets.pickle",
    "int",
    "numpy.array",
    "numpy.float32",
    "open",
    "print",
    "typing.Tuple",
    "urllib.request.urlretrieve"
   ]
  },
  "type": "function"
 },
 "d3rlpy.datasets.get_d4rl": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "ImportError",
    "MDPDataset",
    "bool",
    "d3rlpy.datasets.gym",
    "int",
    "numpy.logical_and",
    "numpy.logical_not",
    "numpy.logical_or",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.datasets.get_pendulum": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "MDPDataset",
    "bool",
    "d3rlpy.datasets.DATA_DIRECTORY",
    "d3rlpy.datasets.PENDULUM_URL",
    "d3rlpy.datasets.gym",
    "d3rlpy.datasets.os",
    "d3rlpy.datasets.pickle",
    "int",
    "numpy.array",
    "numpy.float32",
    "open",
    "print",
    "typing.Tuple",
    "urllib.request.urlretrieve"
   ]
  },
  "type": "function"
 },
 "d3rlpy.datasets.get_pybullet": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "ImportError",
    "MDPDataset",
    "bool",
    "d3rlpy.datasets.gym",
    "int",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.datasets.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "d3rlpy.datasets.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.datasets.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "d3rlpy.datasets.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "d3rlpy.datasets.request": {
  "data": {
   "shadows": "urllib.request"
  },
  "type": "import"
 },
 "d3rlpy.dynamics": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.dynamics.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "d3rlpy.dynamics.base": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.dynamics.base.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.dynamics.base.DynamicsBase": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "d3rlpy.dynamics.base.DynamicsImplBase",
    "int",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.dynamics.base.DynamicsBase.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "d3rlpy.dynamics.base.DynamicsBase.generate": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "Transition",
    "TransitionMiniBatch",
    "float",
    "len",
    "numpy.random.randint",
    "range",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.dynamics.base.DynamicsBase.horizon": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.dynamics.base.DynamicsBase.n_transitions": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.dynamics.base.DynamicsBase.predict": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "bool",
    "numpy.ndarray",
    "typing.Any",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "d3rlpy.dynamics.base.DynamicsImplBase": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "d3rlpy.dynamics.base.DynamicsImplBase.generate": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "numpy.ndarray",
    "typing.Any",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "d3rlpy.dynamics.base.DynamicsImplBase.predict": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "numpy.ndarray",
    "typing.Any",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "d3rlpy.dynamics.base.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.dynamics.base.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.dynamics.base.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "d3rlpy.dynamics.base.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "d3rlpy.dynamics.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "d3rlpy.dynamics.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.dynamics.mopo": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.dynamics.mopo.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.dynamics.mopo.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.dynamics.mopo.MOPO": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.dynamics.mopo.MOPO.__init__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "AdamFactory",
    "bool",
    "check_encoder",
    "check_use_gpu",
    "float",
    "int",
    "super",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.dynamics.mopo.MOPO.create_impl": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "MOPOImpl",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.dynamics.mopo.MOPO.get_loss_labels": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.dynamics.mopo.MOPO.update": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "float",
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.dynamics.mopo.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.dynamics.mopo.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.dynamics.torch": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.dynamics.torch.base": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.dynamics.torch.base.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.dynamics.torch.base.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.dynamics.torch.base.TorchImplBase": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "d3rlpy.dynamics.torch.base.TorchImplBase.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "int",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.dynamics.torch.base.TorchImplBase._generate": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "d3rlpy.dynamics.torch.base.torch",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.dynamics.torch.base.TorchImplBase._predict": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "d3rlpy.dynamics.torch.base.torch",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.dynamics.torch.base.TorchImplBase.action_scaler": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.dynamics.torch.base.TorchImplBase.action_size": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.dynamics.torch.base.TorchImplBase.device": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.dynamics.torch.base.TorchImplBase.generate": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "d3rlpy.dynamics.torch.base.torch",
    "numpy.ndarray",
    "torch_api",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.dynamics.torch.base.TorchImplBase.load_model": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "d3rlpy.dynamics.torch.base.torch",
    "map_location",
    "set_state_dict",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.dynamics.torch.base.TorchImplBase.observation_shape": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "int",
    "property",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.dynamics.torch.base.TorchImplBase.predict": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "d3rlpy.dynamics.torch.base.torch",
    "numpy.ndarray",
    "torch_api",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.dynamics.torch.base.TorchImplBase.save_model": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "d3rlpy.dynamics.torch.base.torch",
    "get_state_dict",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.dynamics.torch.base.TorchImplBase.scaler": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.dynamics.torch.base.TorchImplBase.to_cpu": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "to_cpu"
   ]
  },
  "type": "function"
 },
 "d3rlpy.dynamics.torch.base.TorchImplBase.to_gpu": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "Device",
    "to_cuda"
   ]
  },
  "type": "function"
 },
 "d3rlpy.dynamics.torch.base.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "d3rlpy.dynamics.torch.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "d3rlpy.dynamics.torch.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.dynamics.torch.base.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.dynamics.torch.mopo_impl": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.dynamics.torch.mopo_impl.MOPOImpl": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "torch.optim.Optimizer",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.dynamics.torch.mopo_impl.MOPOImpl.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "super",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.dynamics.torch.mopo_impl.MOPOImpl._build_dynamics": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "create_probablistic_dynamics"
   ]
  },
  "type": "function"
 },
 "d3rlpy.dynamics.torch.mopo_impl.MOPOImpl._build_optim": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "d3rlpy.dynamics.torch.mopo_impl.MOPOImpl._generate": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "d3rlpy.dynamics.torch.mopo_impl.torch",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.dynamics.torch.mopo_impl.MOPOImpl._predict": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "d3rlpy.dynamics.torch.mopo_impl.torch",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.dynamics.torch.mopo_impl.MOPOImpl.build": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "d3rlpy.dynamics.torch.mopo_impl.MOPOImpl.update": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "d3rlpy.dynamics.torch.mopo_impl.torch",
    "numpy.ndarray",
    "torch_api"
   ]
  },
  "type": "function"
 },
 "d3rlpy.dynamics.torch.mopo_impl.Optimizer": {
  "data": {
   "shadows": "torch.optim.Optimizer"
  },
  "type": "import"
 },
 "d3rlpy.dynamics.torch.mopo_impl.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.dynamics.torch.mopo_impl.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.dynamics.torch.mopo_impl.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "d3rlpy.dynamics.torch.mopo_impl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.dynamics.torch.mopo_impl.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.envs": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.envs.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "d3rlpy.envs.batch": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.envs.batch.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.envs.batch.AsyncBatchEnv": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "d3rlpy.envs.batch.BatchEnv",
    "d3rlpy.envs.batch.SubprocEnv",
    "int",
    "numpy.ndarray",
    "typing.List",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "d3rlpy.envs.batch.AsyncBatchEnv.__init__": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "d3rlpy.envs.batch.SubprocEnv",
    "d3rlpy.envs.batch.gym",
    "d3rlpy.envs.batch.tempfile",
    "get_action_size_from_env",
    "len",
    "numpy.ones",
    "typing.Callable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.batch.AsyncBatchEnv.n_envs": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "int",
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.batch.AsyncBatchEnv.reset": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.empty",
    "numpy.float32",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.uint8",
    "tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.batch.AsyncBatchEnv.step": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.empty",
    "numpy.float32",
    "numpy.ndarray",
    "numpy.uint8",
    "str",
    "tuple",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.batch.BatchEnv": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "d3rlpy.envs.batch.gym"
   ]
  },
  "type": "class"
 },
 "d3rlpy.envs.batch.BatchEnv.__len__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.batch.BatchEnv.close": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "d3rlpy.envs.batch.BatchEnv.n_envs": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.batch.BatchEnv.render": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "NotImplementedError",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.batch.BatchEnv.reset": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.batch.BatchEnv.step": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.ndarray",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.batch.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "d3rlpy.envs.batch.Connection": {
  "data": {
   "shadows": "multiprocessing.connection.Connection"
  },
  "type": "import"
 },
 "d3rlpy.envs.batch.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "d3rlpy.envs.batch.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.envs.batch.Process": {
  "data": {
   "shadows": "multiprocessing.Process"
  },
  "type": "import"
 },
 "d3rlpy.envs.batch.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.envs.batch.SubprocEnv": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "multiprocessing.Process",
    "multiprocessing.connection.Connection"
   ]
  },
  "type": "class"
 },
 "d3rlpy.envs.batch.SubprocEnv.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "d3rlpy.envs.batch._subproc",
    "d3rlpy.envs.batch.cloudpickle",
    "d3rlpy.envs.batch.gym",
    "d3rlpy.envs.batch.os",
    "d3rlpy.envs.batch.uuid",
    "multiprocessing.get_context",
    "open",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.batch.SubprocEnv.close": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "d3rlpy.envs.batch.SubprocEnv.reset_get": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.batch.SubprocEnv.reset_send": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "d3rlpy.envs.batch.SubprocEnv.step_get": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "bool",
    "float",
    "numpy.ndarray",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.batch.SubprocEnv.step_send": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.batch.SubprocEnv.wait_for_ready": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.batch.SyncBatchEnv": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "d3rlpy.envs.batch.BatchEnv",
    "d3rlpy.envs.batch.gym",
    "int",
    "numpy.ndarray",
    "typing.List",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "d3rlpy.envs.batch.SyncBatchEnv.__init__": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "d3rlpy.envs.batch.gym",
    "get_action_size_from_env",
    "len",
    "numpy.ones",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.batch.SyncBatchEnv.n_envs": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "int",
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.batch.SyncBatchEnv.reset": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.empty",
    "numpy.float32",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.uint8",
    "tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.batch.SyncBatchEnv.step": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.empty",
    "numpy.float32",
    "numpy.ndarray",
    "numpy.uint8",
    "str",
    "tuple",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.batch.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "d3rlpy.envs.batch._subproc": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ValueError",
    "d3rlpy.envs.batch.cloudpickle",
    "multiprocessing.connection.Connection",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.batch.cloudpickle": {
  "data": {
   "shadows": "cloudpickle"
  },
  "type": "import"
 },
 "d3rlpy.envs.batch.get_context": {
  "data": {
   "shadows": "multiprocessing.get_context"
  },
  "type": "import"
 },
 "d3rlpy.envs.batch.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "d3rlpy.envs.batch.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.envs.batch.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "d3rlpy.envs.batch.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "d3rlpy.envs.batch.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "d3rlpy.envs.wrappers": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "d3rlpy.envs.wrappers.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.envs.wrappers.Atari": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "d3rlpy.envs.wrappers.gym"
   ]
  },
  "type": "class"
 },
 "d3rlpy.envs.wrappers.Atari.__init__": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.envs.wrappers.AtariPreprocessing",
    "d3rlpy.envs.wrappers.ChannelFirst",
    "d3rlpy.envs.wrappers.gym",
    "gym.wrappers.TransformReward",
    "numpy.clip",
    "super"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.wrappers.AtariPreprocessing": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "d3rlpy.envs.wrappers.gym"
   ]
  },
  "type": "class"
 },
 "d3rlpy.envs.wrappers.AtariPreprocessing.__init__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.envs.wrappers.cv2",
    "d3rlpy.envs.wrappers.gym",
    "gym.spaces.Box",
    "int",
    "numpy.empty",
    "numpy.float32",
    "numpy.uint8",
    "super"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.wrappers.AtariPreprocessing._get_obs": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "d3rlpy.envs.wrappers.cv2",
    "numpy.asarray",
    "numpy.expand_dims",
    "numpy.float32",
    "numpy.maximum",
    "numpy.ndarray",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.wrappers.AtariPreprocessing.reset": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "numpy.ndarray",
    "range",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.wrappers.AtariPreprocessing.step": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.ndarray",
    "range",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.wrappers.Box": {
  "data": {
   "shadows": "gym.spaces.Box"
  },
  "type": "import"
 },
 "d3rlpy.envs.wrappers.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "d3rlpy.envs.wrappers.ChannelFirst": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "d3rlpy.envs.wrappers.gym",
    "gym.spaces.Box"
   ]
  },
  "type": "class"
 },
 "d3rlpy.envs.wrappers.ChannelFirst.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "d3rlpy.envs.wrappers.gym",
    "gym.spaces.Box",
    "len",
    "numpy.reshape",
    "numpy.transpose",
    "super"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.wrappers.ChannelFirst.reset": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.ndarray",
    "numpy.reshape",
    "numpy.transpose",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.wrappers.ChannelFirst.step": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "numpy.ndarray",
    "numpy.reshape",
    "numpy.transpose",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.wrappers.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "d3rlpy.envs.wrappers.Monitor": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.envs.wrappers.gym",
    "float",
    "int",
    "numpy.ndarray",
    "str",
    "typing.Callable"
   ]
  },
  "type": "class"
 },
 "d3rlpy.envs.wrappers.Monitor.__init__": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "d3rlpy.envs.wrappers.gym",
    "d3rlpy.envs.wrappers.os",
    "float",
    "int",
    "str",
    "super",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.wrappers.Monitor._save_stats": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "d3rlpy.envs.wrappers.json",
    "d3rlpy.envs.wrappers.os",
    "open"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.wrappers.Monitor._save_video": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "d3rlpy.envs.wrappers.cv2",
    "d3rlpy.envs.wrappers.os",
    "enumerate",
    "print"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.wrappers.Monitor.reset": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "numpy.ndarray",
    "super",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.wrappers.Monitor.step": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.envs.wrappers.cv2",
    "float",
    "int",
    "numpy.ndarray",
    "str",
    "super",
    "typing.Any",
    "typing.Dict",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "d3rlpy.envs.wrappers.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.envs.wrappers.TransformReward": {
  "data": {
   "shadows": "gym.wrappers.TransformReward"
  },
  "type": "import"
 },
 "d3rlpy.envs.wrappers.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "d3rlpy.envs.wrappers.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "d3rlpy.envs.wrappers.cv2": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "d3rlpy.envs.wrappers.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "d3rlpy.envs.wrappers.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "d3rlpy.envs.wrappers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.envs.wrappers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "d3rlpy.gpu": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.gpu.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.gpu.Device": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "class"
 },
 "d3rlpy.gpu.Device.__deepcopy__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "d3rlpy.gpu.get_gpu_count",
    "get_parallel_flag",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.gpu.Device.__eq__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "d3rlpy.gpu.Device",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.gpu.Device.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "d3rlpy.gpu.Device.__ne__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "bool",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.gpu.Device.get_id": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "d3rlpy.gpu.GPUtil": {
  "data": {
   "shadows": "GPUtil"
  },
  "type": "import"
 },
 "d3rlpy.gpu.get_gpu_count": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "d3rlpy.gpu.GPUtil",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "d3rlpy.iterators": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.iterators.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "d3rlpy.iterators.base": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.iterators.base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "d3rlpy.iterators.base.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "d3rlpy.iterators.base.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "d3rlpy.iterators.base.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.iterators.base.TransitionIterator": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "float",
    "int",
    "numpy.ndarray",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "d3rlpy.iterators.base.TransitionIterator.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "float",
    "int",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.iterators.base.TransitionIterator.__iter__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "d3rlpy.iterators.base.TransitionIterator.__len__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "d3rlpy.iterators.base.TransitionIterator.__next__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "TransitionMiniBatch",
    "range"
   ]
  },
  "type": "function"
 },
 "d3rlpy.iterators.base.TransitionIterator._has_finished": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "bool"
   ]
  },
  "type": "function"
 },
 "d3rlpy.iterators.base.TransitionIterator._next": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "d3rlpy.iterators.base.TransitionIterator._reset": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "d3rlpy.iterators.base.TransitionIterator.episodes": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "property",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.iterators.base.TransitionIterator.get_next": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "StopIteration"
   ]
  },
  "type": "function"
 },
 "d3rlpy.iterators.base.TransitionIterator.reset": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "d3rlpy.iterators.base.TransitionIterator.set_ephemeral_transitions": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.iterators.base.TransitionIterator.size": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "d3rlpy.iterators.base.TransitionIterator.transitions": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "property",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.iterators.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "d3rlpy.iterators.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.iterators.random_iterator": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.iterators.random_iterator.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.iterators.random_iterator.RandomIterator": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "class"
 },
 "d3rlpy.iterators.random_iterator.RandomIterator.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "float",
    "int",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.iterators.random_iterator.RandomIterator._has_finished": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "d3rlpy.iterators.random_iterator.RandomIterator._next": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "int",
    "numpy.random.randint",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.iterators.random_iterator.RandomIterator._reset": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "d3rlpy.iterators.random_iterator.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "d3rlpy.iterators.random_iterator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.iterators.round_iterator": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.iterators.round_iterator.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.iterators.round_iterator.RoundIterator": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "bool",
    "int",
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "d3rlpy.iterators.round_iterator.RoundIterator.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "numpy.arange",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.iterators.round_iterator.RoundIterator._has_finished": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "d3rlpy.iterators.round_iterator.RoundIterator._next": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "int",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.iterators.round_iterator.RoundIterator._reset": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.shuffle"
   ]
  },
  "type": "function"
 },
 "d3rlpy.iterators.round_iterator.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "d3rlpy.iterators.round_iterator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.logger": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.logger.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.logger.D3RLPyLogger": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.logger.structlog",
    "float",
    "str",
    "tensorboardX.SummaryWriter",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.logger.D3RLPyLogger.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "d3rlpy.logger.os",
    "d3rlpy.logger.structlog",
    "d3rlpy.logger.time",
    "datetime.datetime.now",
    "str",
    "tensorboardX.SummaryWriter"
   ]
  },
  "type": "function"
 },
 "d3rlpy.logger.D3RLPyLogger.add_metric": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.logger.D3RLPyLogger.add_params": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "d3rlpy.logger.default_json_encoder",
    "d3rlpy.logger.json",
    "d3rlpy.logger.os",
    "numpy.isscalar",
    "open",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.logger.D3RLPyLogger.commit": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "d3rlpy.logger.os",
    "float",
    "int",
    "len",
    "open",
    "print",
    "str",
    "sum",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.logger.D3RLPyLogger.debug": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.logger.D3RLPyLogger.experiment_name": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.logger.D3RLPyLogger.info": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.logger.D3RLPyLogger.logdir": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.logger.D3RLPyLogger.measure_time": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "d3rlpy.logger.time",
    "str",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "d3rlpy.logger.D3RLPyLogger.save_model": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "d3rlpy.logger._SaveProtocol",
    "d3rlpy.logger.os",
    "int"
   ]
  },
  "type": "function"
 },
 "d3rlpy.logger.D3RLPyLogger.warning": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.logger.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "d3rlpy.logger.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "d3rlpy.logger.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.logger.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.logger.Protocol": {
  "data": {
   "shadows": "typing_extensions.Protocol"
  },
  "type": "import"
 },
 "d3rlpy.logger.SummaryWriter": {
  "data": {
   "shadows": "tensorboardX.SummaryWriter"
  },
  "type": "import"
 },
 "d3rlpy.logger._SaveProtocol": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "typing_extensions.Protocol"
   ]
  },
  "type": "class"
 },
 "d3rlpy.logger._SaveProtocol.save_model": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.logger.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "d3rlpy.logger.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "d3rlpy.logger.default_json_encoder": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "int",
    "isinstance",
    "numpy.floating",
    "numpy.integer",
    "numpy.ndarray",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.logger.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "d3rlpy.logger.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.logger.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "d3rlpy.logger.structlog": {
  "data": {
   "shadows": "structlog"
  },
  "type": "import"
 },
 "d3rlpy.logger.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "d3rlpy.metrics": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.metrics.comparer": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.metrics.comparer.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "d3rlpy.metrics.comparer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.metrics.comparer.compare_continuous_action_diff": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "float",
    "typing.Callable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.metrics.comparer.compare_continuous_action_diff.scorer": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "_make_batches",
    "float",
    "numpy.mean",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.metrics.comparer.compare_discrete_action_match": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "float",
    "typing.Callable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.metrics.comparer.compare_discrete_action_match.scorer": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "_make_batches",
    "float",
    "numpy.mean",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.metrics.comparer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.metrics.scorer": {
  "data": {
   "symbols_in_volume": [
    "d3rlpy.metrics.scorer.average_value_estimation_scorer",
    "d3rlpy.metrics.scorer.continuous_action_diff_scorer",
    "d3rlpy.metrics.scorer.discounted_sum_of_advantage_scorer",
    "d3rlpy.metrics.scorer.dynamics_observation_prediction_error_scorer",
    "d3rlpy.metrics.scorer.dynamics_prediction_variance_scorer",
    "d3rlpy.metrics.scorer.dynamics_reward_prediction_error_scorer",
    "d3rlpy.metrics.scorer.td_error_scorer",
    "d3rlpy.metrics.scorer.value_estimation_std_scorer",
    "float",
    "typing.Any",
    "typing.Callable",
    "typing.List"
   ]
  },
  "type": "module"
 },
 "d3rlpy.metrics.scorer.AlgoProtocol": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "typing_extensions.Protocol"
   ]
  },
  "type": "class"
 },
 "d3rlpy.metrics.scorer.AlgoProtocol.gamma": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.metrics.scorer.AlgoProtocol.n_frames": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.metrics.scorer.AlgoProtocol.predict": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.ndarray",
    "typing.Any",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "d3rlpy.metrics.scorer.AlgoProtocol.predict_value": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "bool",
    "numpy.ndarray",
    "typing.Any",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "d3rlpy.metrics.scorer.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.metrics.scorer.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "d3rlpy.metrics.scorer.DynamicsProtocol": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "typing_extensions.Protocol"
   ]
  },
  "type": "class"
 },
 "d3rlpy.metrics.scorer.DynamicsProtocol.n_frames": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.metrics.scorer.DynamicsProtocol.predict": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "bool",
    "numpy.ndarray",
    "typing.Any",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "d3rlpy.metrics.scorer.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "d3rlpy.metrics.scorer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.metrics.scorer.Protocol": {
  "data": {
   "shadows": "typing_extensions.Protocol"
  },
  "type": "import"
 },
 "d3rlpy.metrics.scorer.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "d3rlpy.metrics.scorer.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "d3rlpy.metrics.scorer.WINDOW_SIZE": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "d3rlpy.metrics.scorer._make_batches": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "TransitionMiniBatch",
    "int",
    "len",
    "min",
    "range",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "d3rlpy.metrics.scorer.average_value_estimation_scorer": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "d3rlpy.metrics.scorer.AlgoProtocol",
    "d3rlpy.metrics.scorer.WINDOW_SIZE",
    "d3rlpy.metrics.scorer._make_batches",
    "float",
    "numpy.mean",
    "numpy.ndarray",
    "typing.List",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.metrics.scorer.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "d3rlpy.metrics.scorer.continuous_action_diff_scorer": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "d3rlpy.metrics.scorer.AlgoProtocol",
    "d3rlpy.metrics.scorer.WINDOW_SIZE",
    "d3rlpy.metrics.scorer._make_batches",
    "float",
    "numpy.mean",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.metrics.scorer.discounted_sum_of_advantage_scorer": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "d3rlpy.metrics.scorer.AlgoProtocol",
    "d3rlpy.metrics.scorer.WINDOW_SIZE",
    "d3rlpy.metrics.scorer._make_batches",
    "float",
    "numpy.mean",
    "numpy.ndarray",
    "reversed",
    "typing.List",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.metrics.scorer.discrete_action_match_scorer": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "d3rlpy.metrics.scorer.AlgoProtocol",
    "d3rlpy.metrics.scorer.WINDOW_SIZE",
    "d3rlpy.metrics.scorer._make_batches",
    "float",
    "numpy.mean",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.metrics.scorer.dynamics_observation_prediction_error_scorer": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "d3rlpy.metrics.scorer.DynamicsProtocol",
    "d3rlpy.metrics.scorer.WINDOW_SIZE",
    "d3rlpy.metrics.scorer._make_batches",
    "float",
    "numpy.mean",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.metrics.scorer.dynamics_prediction_variance_scorer": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "d3rlpy.metrics.scorer.DynamicsProtocol",
    "d3rlpy.metrics.scorer.WINDOW_SIZE",
    "d3rlpy.metrics.scorer._make_batches",
    "float",
    "numpy.mean",
    "numpy.ndarray",
    "typing.List",
    "typing.Tuple",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.metrics.scorer.dynamics_reward_prediction_error_scorer": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "d3rlpy.metrics.scorer.DynamicsProtocol",
    "d3rlpy.metrics.scorer.WINDOW_SIZE",
    "d3rlpy.metrics.scorer._make_batches",
    "float",
    "numpy.mean",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.metrics.scorer.evaluate_on_environment": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.metrics.scorer.gym",
    "float",
    "int",
    "len",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "d3rlpy.metrics.scorer.evaluate_on_environment.scorer": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "StackedObservation",
    "d3rlpy.metrics.scorer.AlgoProtocol",
    "float",
    "numpy.mean",
    "numpy.random.random",
    "range",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.metrics.scorer.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "d3rlpy.metrics.scorer.initial_state_value_estimation_scorer": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "d3rlpy.metrics.scorer.AlgoProtocol",
    "d3rlpy.metrics.scorer.WINDOW_SIZE",
    "d3rlpy.metrics.scorer._make_batches",
    "float",
    "numpy.mean",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.metrics.scorer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.metrics.scorer.soft_opc_scorer": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "d3rlpy.metrics.scorer.AlgoProtocol",
    "float",
    "typing.Callable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.metrics.scorer.soft_opc_scorer.scorer": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "d3rlpy.metrics.scorer.AlgoProtocol",
    "d3rlpy.metrics.scorer.WINDOW_SIZE",
    "d3rlpy.metrics.scorer._make_batches",
    "float",
    "numpy.mean",
    "numpy.ndarray",
    "typing.List",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.metrics.scorer.td_error_scorer": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "d3rlpy.metrics.scorer.AlgoProtocol",
    "d3rlpy.metrics.scorer.WINDOW_SIZE",
    "d3rlpy.metrics.scorer._make_batches",
    "float",
    "numpy.asarray",
    "numpy.mean",
    "numpy.ndarray",
    "typing.List",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.metrics.scorer.value_estimation_std_scorer": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "d3rlpy.metrics.scorer.AlgoProtocol",
    "d3rlpy.metrics.scorer.WINDOW_SIZE",
    "d3rlpy.metrics.scorer._make_batches",
    "float",
    "numpy.mean",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.models.builders": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.models.builders.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.models.builders.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "d3rlpy.models.builders.create_categorical_policy": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "CategoricalPolicy",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.builders.create_conditional_vae": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ConditionalVAE",
    "float",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.builders.create_continuous_q_function": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "EnsembleContinuousQFunction",
    "bool",
    "int",
    "range",
    "torch.nn.Module",
    "typing.Sequence",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.builders.create_deterministic_policy": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "DeterministicPolicy",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.builders.create_deterministic_regressor": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "DeterministicRegressor",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.builders.create_deterministic_residual_policy": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "DeterministicResidualPolicy",
    "float",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.builders.create_discrete_imitator": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "DiscreteImitator",
    "float",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.builders.create_discrete_q_function": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "EnsembleDiscreteQFunction",
    "bool",
    "int",
    "range",
    "torch.nn.Module",
    "typing.Sequence",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.builders.create_normal_policy": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "NormalPolicy",
    "bool",
    "float",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.builders.create_parameter": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "Parameter",
    "d3rlpy.models.builders.torch",
    "float",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.builders.create_probablistic_dynamics": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "EnsembleDynamics",
    "ProbablisticDynamics",
    "bool",
    "int",
    "range",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.builders.create_probablistic_regressor": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "ProbablisticRegressor",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.builders.create_value_function": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ValueFunction",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.builders.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "d3rlpy.models.builders.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.models.encoders": {
  "data": {
   "symbols_in_volume": [
    "d3rlpy.models.encoders.DefaultEncoderFactory",
    "d3rlpy.models.encoders.DenseEncoderFactory",
    "d3rlpy.models.encoders.EncoderFactory",
    "d3rlpy.models.encoders.PixelEncoderFactory",
    "d3rlpy.models.encoders.VectorEncoderFactory",
    "d3rlpy.models.encoders.register_encoder_factory",
    "str",
    "typing.Dict",
    "typing.Type"
   ]
  },
  "type": "module"
 },
 "d3rlpy.models.encoders.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.models.encoders.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "d3rlpy.models.encoders.ClassVar": {
  "data": {
   "shadows": "typing.ClassVar"
  },
  "type": "import"
 },
 "d3rlpy.models.encoders.DefaultEncoderFactory": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.models.encoders.EncoderFactory",
    "str",
    "typing.ClassVar"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.encoders.DefaultEncoderFactory.__init__": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.encoders.DefaultEncoderFactory.create": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "d3rlpy.models.encoders.PixelEncoderFactory",
    "d3rlpy.models.encoders.VectorEncoderFactory",
    "int",
    "len",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.encoders.DefaultEncoderFactory.create_with_action": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.models.encoders.PixelEncoderFactory",
    "d3rlpy.models.encoders.VectorEncoderFactory",
    "int",
    "len",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.encoders.DefaultEncoderFactory.get_params": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.encoders.DenseEncoderFactory": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.models.encoders.EncoderFactory",
    "str",
    "typing.ClassVar"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.encoders.DenseEncoderFactory.__init__": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.encoders.DenseEncoderFactory.create": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "NotImplementedError",
    "VectorEncoder",
    "d3rlpy.models.encoders.VectorEncoderFactory",
    "int",
    "len",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.encoders.DenseEncoderFactory.create_with_action": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "NotImplementedError",
    "VectorEncoderWithAction",
    "bool",
    "d3rlpy.models.encoders.VectorEncoderFactory",
    "int",
    "len",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.encoders.DenseEncoderFactory.get_params": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.encoders.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "d3rlpy.models.encoders.EncoderFactory": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "str",
    "typing.ClassVar"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.encoders.EncoderFactory.create": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.encoders.EncoderFactory.create_with_action": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.encoders.EncoderFactory.get_params": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.encoders.EncoderFactory.get_type": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.encoders.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.models.encoders.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.models.encoders.PixelEncoderFactory": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.models.encoders.EncoderFactory",
    "int",
    "str",
    "typing.ClassVar",
    "typing.List",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.encoders.PixelEncoderFactory.__init__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.encoders.PixelEncoderFactory.create": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "PixelEncoder",
    "d3rlpy.models.encoders._create_activation",
    "int",
    "len",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.encoders.PixelEncoderFactory.create_with_action": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "PixelEncoderWithAction",
    "bool",
    "d3rlpy.models.encoders._create_activation",
    "int",
    "len",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.encoders.PixelEncoderFactory.get_params": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.models.encoders.copy",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.encoders.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.models.encoders.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "d3rlpy.models.encoders.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "d3rlpy.models.encoders.VectorEncoderFactory": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.models.encoders.EncoderFactory",
    "int",
    "str",
    "typing.ClassVar",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.encoders.VectorEncoderFactory.__init__": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.encoders.VectorEncoderFactory.create": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "VectorEncoder",
    "d3rlpy.models.encoders._create_activation",
    "int",
    "len",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.encoders.VectorEncoderFactory.create_with_action": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "VectorEncoderWithAction",
    "bool",
    "d3rlpy.models.encoders._create_activation",
    "int",
    "len",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.encoders.VectorEncoderFactory.get_params": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.models.encoders.copy",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.encoders._create_activation": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "d3rlpy.models.encoders.torch",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.encoders.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "d3rlpy.models.encoders.create_encoder_factory": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "d3rlpy.models.encoders.EncoderFactory",
    "isinstance",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.encoders.register_encoder_factory": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "d3rlpy.models.encoders.EncoderFactory",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.encoders.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.models.optimizers": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.models.optimizers.Adam": {
  "data": {
   "shadows": "torch.optim.Adam"
  },
  "type": "import"
 },
 "d3rlpy.models.optimizers.AdamFactory": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "d3rlpy.models.optimizers.OptimizerFactory"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.optimizers.AdamFactory.__init__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "bool",
    "float",
    "super",
    "torch.optim.Adam",
    "typing.Any",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.optimizers.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.models.optimizers.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "d3rlpy.models.optimizers.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "d3rlpy.models.optimizers.Optimizer": {
  "data": {
   "shadows": "torch.optim.Optimizer"
  },
  "type": "import"
 },
 "d3rlpy.models.optimizers.OptimizerFactory": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "str",
    "torch.optim.Optimizer",
    "typing.Any",
    "typing.Dict",
    "typing.Type"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.optimizers.OptimizerFactory.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "str",
    "torch.optim",
    "torch.optim.Optimizer",
    "typing.Any",
    "typing.Type",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.optimizers.OptimizerFactory.create": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "float",
    "torch.nn.Parameter",
    "torch.optim.Optimizer",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.optimizers.OptimizerFactory.get_params": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.models.optimizers.copy",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.optimizers.RMSprop": {
  "data": {
   "shadows": "torch.optim.RMSprop"
  },
  "type": "import"
 },
 "d3rlpy.models.optimizers.RMSpropFactory": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "d3rlpy.models.optimizers.OptimizerFactory"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.optimizers.RMSpropFactory.__init__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "bool",
    "float",
    "super",
    "torch.optim.RMSprop",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.optimizers.SGD": {
  "data": {
   "shadows": "torch.optim.SGD"
  },
  "type": "import"
 },
 "d3rlpy.models.optimizers.SGDFactory": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "d3rlpy.models.optimizers.OptimizerFactory"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.optimizers.SGDFactory.__init__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "bool",
    "float",
    "super",
    "torch.optim.SGD",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.optimizers.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "d3rlpy.models.optimizers.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "d3rlpy.models.optimizers.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "d3rlpy.models.optimizers.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "d3rlpy.models.optimizers.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "d3rlpy.models.optimizers.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "d3rlpy.models.optimizers.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "d3rlpy.models.q_functions": {
  "data": {
   "symbols_in_volume": [
    "d3rlpy.models.q_functions.FQFQFunctionFactory",
    "d3rlpy.models.q_functions.IQNQFunctionFactory",
    "d3rlpy.models.q_functions.MeanQFunctionFactory",
    "d3rlpy.models.q_functions.QFunctionFactory",
    "d3rlpy.models.q_functions.QRQFunctionFactory",
    "d3rlpy.models.q_functions.register_q_func_factory",
    "str",
    "typing.Dict",
    "typing.Type"
   ]
  },
  "type": "module"
 },
 "d3rlpy.models.q_functions.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "d3rlpy.models.q_functions.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.models.q_functions.ClassVar": {
  "data": {
   "shadows": "typing.ClassVar"
  },
  "type": "import"
 },
 "d3rlpy.models.q_functions.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "d3rlpy.models.q_functions.FQFQFunctionFactory": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "d3rlpy.models.q_functions.QFunctionFactory",
    "float",
    "int",
    "str",
    "typing.ClassVar"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.q_functions.FQFQFunctionFactory.__init__": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.q_functions.FQFQFunctionFactory.create_continuous": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "ContinuousFQFQFunction"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.q_functions.FQFQFunctionFactory.create_discrete": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "DiscreteFQFQFunction",
    "int"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.q_functions.FQFQFunctionFactory.embed_size": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.q_functions.FQFQFunctionFactory.entropy_coeff": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.q_functions.FQFQFunctionFactory.get_params": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.q_functions.FQFQFunctionFactory.n_quantiles": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.q_functions.IQNQFunctionFactory": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "d3rlpy.models.q_functions.QFunctionFactory",
    "int",
    "str",
    "typing.ClassVar"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.q_functions.IQNQFunctionFactory.__init__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.q_functions.IQNQFunctionFactory.create_continuous": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "ContinuousIQNQFunction"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.q_functions.IQNQFunctionFactory.create_discrete": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "DiscreteIQNQFunction",
    "int"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.q_functions.IQNQFunctionFactory.embed_size": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.q_functions.IQNQFunctionFactory.get_params": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.q_functions.IQNQFunctionFactory.n_greedy_quantiles": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.q_functions.IQNQFunctionFactory.n_quantiles": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.q_functions.MeanQFunctionFactory": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "d3rlpy.models.q_functions.QFunctionFactory",
    "str",
    "typing.ClassVar"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.q_functions.MeanQFunctionFactory.create_continuous": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ContinuousMeanQFunction"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.q_functions.MeanQFunctionFactory.create_discrete": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "DiscreteMeanQFunction",
    "int"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.q_functions.MeanQFunctionFactory.get_params": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.q_functions.QFunctionFactory": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "str",
    "typing.ClassVar"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.q_functions.QFunctionFactory.create_continuous": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.q_functions.QFunctionFactory.create_discrete": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "int"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.q_functions.QFunctionFactory.get_params": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "bool",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.q_functions.QFunctionFactory.get_type": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.q_functions.QRQFunctionFactory": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "d3rlpy.models.q_functions.QFunctionFactory",
    "int",
    "str",
    "typing.ClassVar"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.q_functions.QRQFunctionFactory.__init__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.q_functions.QRQFunctionFactory.create_continuous": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ContinuousQRQFunction"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.q_functions.QRQFunctionFactory.create_discrete": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "DiscreteQRQFunction",
    "int"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.q_functions.QRQFunctionFactory.get_params": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.q_functions.QRQFunctionFactory.n_quantiles": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.q_functions.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "d3rlpy.models.q_functions.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "d3rlpy.models.q_functions.create_q_func_factory": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "d3rlpy.models.q_functions.QFunctionFactory",
    "isinstance",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.q_functions.register_q_func_factory": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "d3rlpy.models.q_functions.QFunctionFactory",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.models.torch.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "d3rlpy.models.torch.dynamics": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.models.torch.dynamics.EnsembleDynamics": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "torch.nn.Module",
    "torch.nn.ModuleList"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.dynamics.EnsembleDynamics.__call__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "d3rlpy.models.torch.dynamics.torch",
    "super",
    "typing.Tuple",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.dynamics.EnsembleDynamics.__init__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "d3rlpy.models.torch.dynamics.ProbablisticDynamics",
    "super",
    "torch.nn.ModuleList",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.dynamics.EnsembleDynamics.compute_error": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "d3rlpy.models.torch.dynamics.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.dynamics.EnsembleDynamics.forward": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "d3rlpy.models.torch.dynamics.torch",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.dynamics.EnsembleDynamics.models": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "property",
    "torch.nn.ModuleList"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.dynamics.EnsembleDynamics.predict_with_variance": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "d3rlpy.models.torch.dynamics._compute_ensemble_variance",
    "d3rlpy.models.torch.dynamics.torch",
    "len",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.dynamics.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.dynamics.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.dynamics.Normal": {
  "data": {
   "shadows": "torch.distributions.Normal"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.dynamics.ProbablisticDynamics": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "torch.nn.Linear",
    "torch.nn.Module",
    "torch.nn.Parameter"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.dynamics.ProbablisticDynamics.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "d3rlpy.models.torch.dynamics._apply_spectral_norm_recursively",
    "d3rlpy.models.torch.dynamics.torch",
    "super",
    "torch.nn.Linear",
    "torch.nn.Module",
    "torch.nn.Parameter",
    "torch.nn.utils.spectral_norm",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.dynamics.ProbablisticDynamics.compute_error": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "d3rlpy.models.torch.dynamics._gaussian_likelihood",
    "d3rlpy.models.torch.dynamics.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.dynamics.ProbablisticDynamics.compute_stats": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "d3rlpy.models.torch.dynamics.torch",
    "torch.nn.functional.softplus",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.dynamics.ProbablisticDynamics.forward": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "d3rlpy.models.torch.dynamics.torch",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.dynamics.ProbablisticDynamics.predict_with_variance": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "d3rlpy.models.torch.dynamics.torch",
    "torch.distributions.Normal",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.dynamics.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.dynamics._apply_spectral_norm_recursively": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "isinstance",
    "torch.nn.Module",
    "torch.nn.ModuleList",
    "torch.nn.utils.spectral_norm"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.dynamics._compute_ensemble_variance": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ValueError",
    "d3rlpy.models.torch.dynamics.torch",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.dynamics._gaussian_likelihood": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "d3rlpy.models.torch.dynamics.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.dynamics.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.dynamics.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.dynamics.spectral_norm": {
  "data": {
   "shadows": "torch.nn.utils.spectral_norm"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.dynamics.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.encoders": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.models.torch.encoders.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.encoders.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.encoders.Encoder": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.encoders.Encoder.__call__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "d3rlpy.models.torch.encoders.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.encoders.Encoder.forward": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "d3rlpy.models.torch.encoders.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.encoders.Encoder.get_feature_size": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "int"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.encoders.Encoder.observation_shape": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "int",
    "property",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.encoders.EncoderWithAction": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.encoders.EncoderWithAction.__call__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "d3rlpy.models.torch.encoders.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.encoders.EncoderWithAction.action_size": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.encoders.EncoderWithAction.forward": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "d3rlpy.models.torch.encoders.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.encoders.EncoderWithAction.get_feature_size": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "int"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.encoders.EncoderWithAction.observation_shape": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "int",
    "property",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.encoders.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.encoders.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.encoders.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.encoders.PixelEncoder": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "d3rlpy.models.torch.encoders.Encoder",
    "d3rlpy.models.torch.encoders._PixelEncoder"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.encoders.PixelEncoder.forward": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "d3rlpy.models.torch.encoders.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.encoders.PixelEncoderWithAction": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.models.torch.encoders.EncoderWithAction",
    "d3rlpy.models.torch.encoders._PixelEncoder",
    "int"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.encoders.PixelEncoderWithAction.__init__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.models.torch.encoders.torch",
    "int",
    "super",
    "typing.Callable",
    "typing.List",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.encoders.PixelEncoderWithAction._get_linear_input_size": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.encoders.PixelEncoderWithAction.action_size": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.encoders.PixelEncoderWithAction.forward": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "d3rlpy.models.torch.encoders.torch",
    "torch.nn.functional.one_hot"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.encoders.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.encoders.VectorEncoder": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "d3rlpy.models.torch.encoders.Encoder",
    "d3rlpy.models.torch.encoders._VectorEncoder"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.encoders.VectorEncoder.forward": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "d3rlpy.models.torch.encoders.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.encoders.VectorEncoderWithAction": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.models.torch.encoders.EncoderWithAction",
    "d3rlpy.models.torch.encoders._VectorEncoder",
    "int"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.encoders.VectorEncoderWithAction.__init__": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.models.torch.encoders.torch",
    "int",
    "super",
    "typing.Callable",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.encoders.VectorEncoderWithAction.action_size": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.encoders.VectorEncoderWithAction.forward": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "d3rlpy.models.torch.encoders.torch",
    "torch.nn.functional.one_hot"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.encoders._PixelEncoder": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.models.torch.encoders.torch",
    "int",
    "torch.nn.BatchNorm1d",
    "torch.nn.Linear",
    "torch.nn.Module",
    "torch.nn.ModuleList",
    "typing.Callable",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.encoders._PixelEncoder.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.models.torch.encoders.torch",
    "int",
    "super",
    "torch.nn.BatchNorm1d",
    "torch.nn.BatchNorm2d",
    "torch.nn.Conv2d",
    "torch.nn.Linear",
    "torch.nn.ModuleList",
    "typing.Callable",
    "typing.List",
    "typing.Optional",
    "typing.Sequence",
    "zip"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.encoders._PixelEncoder._conv_encode": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "d3rlpy.models.torch.encoders.torch",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.encoders._PixelEncoder._get_linear_input_size": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "d3rlpy.models.torch.encoders.torch",
    "int",
    "tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.encoders._PixelEncoder.get_feature_size": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.encoders._PixelEncoder.observation_shape": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "int",
    "property",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.encoders._VectorEncoder": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.models.torch.encoders.torch",
    "int",
    "torch.nn.Module",
    "torch.nn.ModuleList",
    "typing.Callable",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.encoders._VectorEncoder.__init__": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.models.torch.encoders.torch",
    "enumerate",
    "int",
    "list",
    "super",
    "torch.nn.BatchNorm1d",
    "torch.nn.Linear",
    "torch.nn.ModuleList",
    "typing.Callable",
    "typing.Optional",
    "typing.Sequence",
    "zip"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.encoders._VectorEncoder._fc_encode": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "d3rlpy.models.torch.encoders.torch",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.encoders._VectorEncoder.get_feature_size": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.encoders._VectorEncoder.observation_shape": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "int",
    "property",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.encoders.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.encoders.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.encoders.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.imitators": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.models.torch.imitators.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.imitators.ConditionalVAE": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "float",
    "int",
    "torch.nn.Linear",
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.imitators.ConditionalVAE.__call__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "d3rlpy.models.torch.imitators.torch",
    "super",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.imitators.ConditionalVAE.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "float",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.imitators.ConditionalVAE.compute_error": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "d3rlpy.models.torch.imitators.torch",
    "torch.distributions.Normal",
    "torch.distributions.kl.kl_divergence",
    "torch.nn.functional.mse_loss",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.imitators.ConditionalVAE.decode": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "d3rlpy.models.torch.imitators.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.imitators.ConditionalVAE.encode": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "d3rlpy.models.torch.imitators.torch",
    "torch.distributions.Normal"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.imitators.ConditionalVAE.forward": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "d3rlpy.models.torch.imitators.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.imitators.DeterministicRegressor": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "d3rlpy.models.torch.imitators.Imitator",
    "torch.nn.Linear"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.imitators.DeterministicRegressor.__init__": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "int",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.imitators.DeterministicRegressor.compute_error": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "d3rlpy.models.torch.imitators.torch",
    "torch.nn.functional.mse_loss"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.imitators.DeterministicRegressor.forward": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "d3rlpy.models.torch.imitators.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.imitators.DiscreteImitator": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "d3rlpy.models.torch.imitators.Imitator",
    "float",
    "torch.nn.Linear"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.imitators.DiscreteImitator.__init__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "float",
    "int",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.imitators.DiscreteImitator.compute_error": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "d3rlpy.models.torch.imitators.torch",
    "torch.nn.functional.nll_loss"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.imitators.DiscreteImitator.compute_log_probs_with_logits": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "d3rlpy.models.torch.imitators.torch",
    "torch.nn.functional.log_softmax",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.imitators.DiscreteImitator.forward": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "d3rlpy.models.torch.imitators.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.imitators.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.imitators.Imitator": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.imitators.Imitator.__call__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "d3rlpy.models.torch.imitators.torch",
    "super",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.imitators.Imitator.compute_error": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "d3rlpy.models.torch.imitators.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.imitators.Imitator.forward": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "d3rlpy.models.torch.imitators.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.imitators.Normal": {
  "data": {
   "shadows": "torch.distributions.Normal"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.imitators.ProbablisticRegressor": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "d3rlpy.models.torch.imitators.Imitator",
    "torch.nn.Linear"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.imitators.ProbablisticRegressor.__init__": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "int",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.imitators.ProbablisticRegressor.compute_error": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "d3rlpy.models.torch.imitators.torch",
    "torch.nn.functional.mse_loss"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.imitators.ProbablisticRegressor.dist": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "d3rlpy.models.torch.imitators.torch",
    "torch.distributions.Normal"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.imitators.ProbablisticRegressor.forward": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "d3rlpy.models.torch.imitators.torch",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.imitators.ProbablisticRegressor.sample_n": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "d3rlpy.models.torch.imitators.torch",
    "int",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.imitators.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.imitators.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.imitators.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.imitators.kl_divergence": {
  "data": {
   "shadows": "torch.distributions.kl.kl_divergence"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.imitators.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.imitators.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.parameters": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.models.torch.parameters.Parameter": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "torch.nn.Module",
    "torch.nn.Parameter"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.parameters.Parameter.__call__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "d3rlpy.models.torch.parameters.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.parameters.Parameter.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "d3rlpy.models.torch.parameters.torch",
    "super",
    "torch.nn.Parameter"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.parameters.Parameter.data": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "d3rlpy.models.torch.parameters.torch",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.parameters.Parameter.forward": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "d3rlpy.models.torch.parameters.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.parameters.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.parameters.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.policies": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.models.torch.policies.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.policies.Categorical": {
  "data": {
   "shadows": "torch.distributions.Categorical"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.policies.CategoricalPolicy": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "d3rlpy.models.torch.policies.Policy",
    "torch.nn.Linear"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.policies.CategoricalPolicy.__init__": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "int",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.CategoricalPolicy.best_action": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "d3rlpy.models.torch.policies.torch",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.CategoricalPolicy.dist": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "d3rlpy.models.torch.policies.torch",
    "torch.distributions.Categorical"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.CategoricalPolicy.forward": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.models.torch.policies.torch",
    "typing.Tuple",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.CategoricalPolicy.log_probs": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "d3rlpy.models.torch.policies.torch",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.CategoricalPolicy.sample_n_with_log_prob": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "d3rlpy.models.torch.policies.torch",
    "int",
    "typing.Tuple",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.CategoricalPolicy.sample_with_log_prob": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "d3rlpy.models.torch.policies.torch",
    "typing.Tuple",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.DeterministicPolicy": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "d3rlpy.models.torch.policies.Policy",
    "torch.nn.Linear"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.policies.DeterministicPolicy.__call__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "d3rlpy.models.torch.policies.torch",
    "super",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.DeterministicPolicy.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "int",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.DeterministicPolicy.best_action": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "d3rlpy.models.torch.policies.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.DeterministicPolicy.forward": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "d3rlpy.models.torch.policies.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.DeterministicPolicy.sample_n_with_log_prob": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "NotImplementedError",
    "d3rlpy.models.torch.policies.torch",
    "int",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.DeterministicPolicy.sample_with_log_prob": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "NotImplementedError",
    "d3rlpy.models.torch.policies.torch",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.DeterministicResidualPolicy": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "d3rlpy.models.torch.policies.Policy",
    "float",
    "torch.nn.Linear"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.policies.DeterministicResidualPolicy.__call__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "d3rlpy.models.torch.policies.torch",
    "super",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.DeterministicResidualPolicy.__init__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "float",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.DeterministicResidualPolicy.best_action": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "NotImplementedError",
    "d3rlpy.models.torch.policies.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.DeterministicResidualPolicy.best_residual_action": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "d3rlpy.models.torch.policies.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.DeterministicResidualPolicy.forward": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "d3rlpy.models.torch.policies.torch",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.DeterministicResidualPolicy.sample_n_with_log_prob": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "NotImplementedError",
    "d3rlpy.models.torch.policies.torch",
    "int",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.DeterministicResidualPolicy.sample_with_log_prob": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "NotImplementedError",
    "d3rlpy.models.torch.policies.torch",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.policies.Normal": {
  "data": {
   "shadows": "torch.distributions.Normal"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.policies.NormalPolicy": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.models.torch.policies.Policy",
    "float",
    "int",
    "torch.nn.Linear",
    "torch.nn.Parameter",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.policies.NormalPolicy.__init__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.models.torch.policies.torch",
    "float",
    "int",
    "super",
    "torch.nn.Linear",
    "torch.nn.Parameter"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.NormalPolicy.best_action": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "d3rlpy.models.torch.policies.torch",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.NormalPolicy.dist": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "d3rlpy.models.torch.policies.torch",
    "torch.distributions.Normal",
    "torch.nn.Linear",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.NormalPolicy.forward": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.models.torch.policies.squash_action",
    "d3rlpy.models.torch.policies.torch",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.NormalPolicy.get_logstd_parameter": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "d3rlpy.models.torch.policies.torch",
    "torch.nn.Parameter",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.NormalPolicy.sample_n_with_log_prob": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "d3rlpy.models.torch.policies.squash_action",
    "d3rlpy.models.torch.policies.torch",
    "int",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.NormalPolicy.sample_with_log_prob": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "d3rlpy.models.torch.policies.torch",
    "typing.Tuple",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.Policy": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.policies.Policy.best_action": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "d3rlpy.models.torch.policies.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.Policy.sample": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "d3rlpy.models.torch.policies.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.Policy.sample_n": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "d3rlpy.models.torch.policies.torch",
    "int"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.Policy.sample_n_with_log_prob": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "d3rlpy.models.torch.policies.torch",
    "int",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.Policy.sample_with_log_prob": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "d3rlpy.models.torch.policies.torch",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.policies.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.policies.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.policies.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.policies.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.policies.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.policies.squash_action": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "d3rlpy.models.torch.policies.math",
    "d3rlpy.models.torch.policies.torch",
    "torch.nn.functional.softplus",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.policies.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.q_functions": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.models.torch.q_functions.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.q_functions.ContinuousFQFQFunction": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.ContinuousQFunction",
    "d3rlpy.models.torch.q_functions.FQFQFunction",
    "float",
    "int",
    "torch.nn.Linear"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.q_functions.ContinuousFQFQFunction.__init__": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "float",
    "int",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.ContinuousFQFQFunction._compute_proposal_loss": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.ContinuousFQFQFunction._compute_quantiles": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.torch",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.ContinuousFQFQFunction.action_size": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.ContinuousFQFQFunction.compute_error": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions._reduce",
    "d3rlpy.models.torch.q_functions.torch",
    "float",
    "list",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.ContinuousFQFQFunction.compute_target": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.ContinuousFQFQFunction.encoder": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.ContinuousFQFQFunction.forward": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.ContinuousIQNQFunction": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.ContinuousQFunction",
    "d3rlpy.models.torch.q_functions.IQNQFunction",
    "int",
    "torch.nn.Linear"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.q_functions.ContinuousIQNQFunction.__init__": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "int",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.ContinuousIQNQFunction._compute_quantiles": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.torch",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.ContinuousIQNQFunction.action_size": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.ContinuousIQNQFunction.compute_error": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions._reduce",
    "d3rlpy.models.torch.q_functions.torch",
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.ContinuousIQNQFunction.compute_target": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.ContinuousIQNQFunction.encoder": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.ContinuousIQNQFunction.forward": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.ContinuousMeanQFunction": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.ContinuousQFunction",
    "int",
    "torch.nn.Linear",
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.q_functions.ContinuousMeanQFunction.__init__": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.ContinuousMeanQFunction.action_size": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.ContinuousMeanQFunction.compute_error": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions._reduce",
    "d3rlpy.models.torch.q_functions.torch",
    "float",
    "str",
    "torch.nn.functional.mse_loss"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.ContinuousMeanQFunction.compute_target": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.ContinuousMeanQFunction.encoder": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.ContinuousMeanQFunction.forward": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.torch",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.ContinuousQFunction": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.QFunction"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.q_functions.ContinuousQFunction.__call__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "d3rlpy.models.torch.q_functions.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.ContinuousQFunction.compute_target": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "d3rlpy.models.torch.q_functions.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.ContinuousQFunction.encoder": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.ContinuousQFunction.forward": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "d3rlpy.models.torch.q_functions.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.ContinuousQRQFunction": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.ContinuousQFunction",
    "d3rlpy.models.torch.q_functions.QRQFunction",
    "int",
    "torch.nn.Linear"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.q_functions.ContinuousQRQFunction.__init__": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "int",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.ContinuousQRQFunction._compute_quantiles": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.torch",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.ContinuousQRQFunction.action_size": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.ContinuousQRQFunction.compute_error": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions._reduce",
    "d3rlpy.models.torch.q_functions.torch",
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.ContinuousQRQFunction.compute_target": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.ContinuousQRQFunction.encoder": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.ContinuousQRQFunction.forward": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteFQFQFunction": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.DiscreteQFunction",
    "d3rlpy.models.torch.q_functions.FQFQFunction",
    "float",
    "int",
    "torch.nn.Linear"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.q_functions.DiscreteFQFQFunction.__init__": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "float",
    "int",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteFQFQFunction._compute_proposal_loss": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteFQFQFunction._compute_quantiles": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.torch",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteFQFQFunction.action_size": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteFQFQFunction.compute_error": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions._pick_value_by_action",
    "d3rlpy.models.torch.q_functions._reduce",
    "d3rlpy.models.torch.q_functions.torch",
    "float",
    "list",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteFQFQFunction.compute_target": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions._pick_value_by_action",
    "d3rlpy.models.torch.q_functions.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteFQFQFunction.encoder": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteFQFQFunction.forward": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteIQNQFunction": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.DiscreteQFunction",
    "d3rlpy.models.torch.q_functions.IQNQFunction",
    "int",
    "torch.nn.Linear"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.q_functions.DiscreteIQNQFunction.__init__": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "int",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteIQNQFunction._compute_quantiles": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.torch",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteIQNQFunction.action_size": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteIQNQFunction.compute_error": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions._pick_value_by_action",
    "d3rlpy.models.torch.q_functions._reduce",
    "d3rlpy.models.torch.q_functions.torch",
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteIQNQFunction.compute_target": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions._pick_value_by_action",
    "d3rlpy.models.torch.q_functions.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteIQNQFunction.encoder": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteIQNQFunction.forward": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteMeanQFunction": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.DiscreteQFunction",
    "int",
    "torch.nn.Linear",
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.q_functions.DiscreteMeanQFunction.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "int",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteMeanQFunction.action_size": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteMeanQFunction.compute_error": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions._huber_loss",
    "d3rlpy.models.torch.q_functions._reduce",
    "d3rlpy.models.torch.q_functions.torch",
    "float",
    "str",
    "torch.nn.functional.one_hot"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteMeanQFunction.compute_target": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions._pick_value_by_action",
    "d3rlpy.models.torch.q_functions.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteMeanQFunction.encoder": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteMeanQFunction.forward": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.torch",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteQFunction": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.QFunction"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.q_functions.DiscreteQFunction.__call__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "d3rlpy.models.torch.q_functions.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteQFunction.compute_target": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "d3rlpy.models.torch.q_functions.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteQFunction.encoder": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteQFunction.forward": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "d3rlpy.models.torch.q_functions.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteQRQFunction": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.DiscreteQFunction",
    "d3rlpy.models.torch.q_functions.QRQFunction",
    "int",
    "torch.nn.Linear"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.q_functions.DiscreteQRQFunction.__init__": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "int",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteQRQFunction._compute_quantiles": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.torch",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteQRQFunction.action_size": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteQRQFunction.compute_error": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions._pick_value_by_action",
    "d3rlpy.models.torch.q_functions._reduce",
    "d3rlpy.models.torch.q_functions.torch",
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteQRQFunction.compute_target": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions._pick_value_by_action",
    "d3rlpy.models.torch.q_functions.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteQRQFunction.encoder": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.DiscreteQRQFunction.forward": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.EnsembleContinuousQFunction": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.EnsembleQFunction"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.q_functions.EnsembleContinuousQFunction.__call__": {
  "data": {
   "lineno": 1011,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.torch",
    "str",
    "super",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.EnsembleContinuousQFunction.compute_target": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.torch",
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.EnsembleContinuousQFunction.forward": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions._reduce_ensemble",
    "d3rlpy.models.torch.q_functions.torch",
    "q_func",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.EnsembleDiscreteQFunction": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.EnsembleQFunction"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.q_functions.EnsembleDiscreteQFunction.__call__": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.torch",
    "str",
    "super",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.EnsembleDiscreteQFunction.compute_target": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.torch",
    "float",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.EnsembleDiscreteQFunction.forward": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions._reduce_ensemble",
    "d3rlpy.models.torch.q_functions.torch",
    "q_func",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.EnsembleQFunction": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "bool",
    "int",
    "torch.nn.Module",
    "torch.nn.ModuleList"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.q_functions.EnsembleQFunction.__init__": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.models.torch.q_functions.ContinuousQFunction",
    "d3rlpy.models.torch.q_functions.DiscreteQFunction",
    "len",
    "super",
    "torch.nn.ModuleList",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.EnsembleQFunction._compute_target": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions._reduce_ensemble",
    "d3rlpy.models.torch.q_functions._reduce_quantile_ensemble",
    "d3rlpy.models.torch.q_functions.torch",
    "float",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.EnsembleQFunction.compute_error": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.models.torch.q_functions.torch",
    "enumerate",
    "float",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.EnsembleQFunction.q_funcs": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "property",
    "torch.nn.ModuleList"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.q_functions.FQFQFunction": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.IQNQFunction",
    "torch.nn.Linear"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.q_functions.FQFQFunction.__init__": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "int",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.FQFQFunction._make_fqf_taus": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.torch",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.IQNQFunction": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.QRQFunction",
    "int",
    "torch.nn.Linear"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.q_functions.IQNQFunction.__init__": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "int",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.IQNQFunction._compute_last_feature": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.math",
    "d3rlpy.models.torch.q_functions.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.IQNQFunction._make_taus": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.q_functions.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.q_functions.QFunction": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.q_functions.QFunction.action_size": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.QFunction.compute_error": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "d3rlpy.models.torch.q_functions.torch",
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.QRQFunction": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "int",
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.q_functions.QRQFunction.__init__": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.QRQFunction._compute_quantile_loss": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions._quantile_huber_loss",
    "d3rlpy.models.torch.q_functions.torch",
    "float"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.QRQFunction._make_taus": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.q_functions.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.q_functions._gather_quantiles_by_indices": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "ValueError",
    "d3rlpy.models.torch.q_functions.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions._huber_loss": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.torch",
    "float"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions._pick_value_by_action": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.models.torch.q_functions.torch",
    "torch.nn.functional.one_hot",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions._quantile_huber_loss": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions._huber_loss",
    "d3rlpy.models.torch.q_functions.torch",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions._reduce": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "d3rlpy.models.torch.q_functions.torch",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions._reduce_ensemble": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "ValueError",
    "d3rlpy.models.torch.q_functions.torch",
    "float",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions._reduce_quantile_ensemble": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "ValueError",
    "d3rlpy.models.torch.q_functions._gather_quantiles_by_indices",
    "d3rlpy.models.torch.q_functions.torch",
    "float",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.q_functions.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.q_functions.compute_max_with_n_actions": {
  "data": {
   "lineno": 1087,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.EnsembleContinuousQFunction",
    "d3rlpy.models.torch.q_functions.compute_max_with_n_actions_and_indices",
    "d3rlpy.models.torch.q_functions.torch",
    "float",
    "q_func"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.compute_max_with_n_actions_and_indices": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": [
    "d3rlpy.models.torch.q_functions.EnsembleContinuousQFunction",
    "d3rlpy.models.torch.q_functions.torch",
    "float",
    "len",
    "q_func.compute_target",
    "q_func.q_funcs",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.q_functions.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.q_functions.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.q_functions.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.v_functions": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.models.torch.v_functions.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.v_functions.ValueFunction": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "torch.nn.Linear",
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "d3rlpy.models.torch.v_functions.ValueFunction.__call__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "d3rlpy.models.torch.v_functions.torch",
    "super",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.v_functions.ValueFunction.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.v_functions.ValueFunction.compute_error": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "d3rlpy.models.torch.v_functions.torch",
    "torch.nn.functional.mse_loss"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.v_functions.ValueFunction.forward": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "d3rlpy.models.torch.v_functions.torch",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.models.torch.v_functions.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.v_functions.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "d3rlpy.models.torch.v_functions.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.online": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.online.buffers": {
  "data": {
   "symbols_in_volume": [
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "d3rlpy.online.buffers.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "d3rlpy.online.buffers.BasicSampleMixin": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "d3rlpy.online.buffers.FIFOQueue"
   ]
  },
  "type": "class"
 },
 "d3rlpy.online.buffers.BasicSampleMixin.sample": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "TransitionMiniBatch",
    "float",
    "int",
    "len",
    "numpy.random.choice"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.buffers.BatchBuffer": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "d3rlpy.online.buffers._Buffer"
   ]
  },
  "type": "class"
 },
 "d3rlpy.online.buffers.BatchBuffer.append": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "numpy.ndarray",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.buffers.BatchReplayBuffer": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "Transition",
    "d3rlpy.online.buffers.BasicSampleMixin",
    "d3rlpy.online.buffers.BatchBuffer",
    "int",
    "numpy.ndarray",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.online.buffers.BatchReplayBuffer.__init__": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "bool",
    "int",
    "len",
    "range",
    "super",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.buffers.BatchReplayBuffer.append": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "Transition",
    "float",
    "numpy.all",
    "numpy.ndarray",
    "numpy.random.randint",
    "range",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.buffers.Buffer": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "d3rlpy.online.buffers._Buffer"
   ]
  },
  "type": "class"
 },
 "d3rlpy.online.buffers.Buffer.append": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "bool",
    "float",
    "numpy.ndarray",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.buffers.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "d3rlpy.online.buffers.FIFOQueue": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "d3rlpy.online.buffers.T",
    "int",
    "typing.Callable",
    "typing.Generic",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.online.buffers.FIFOQueue.__getitem__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "d3rlpy.online.buffers.T",
    "int"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.buffers.FIFOQueue.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "d3rlpy.online.buffers.T",
    "int",
    "range",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.buffers.FIFOQueue.__iter__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "d3rlpy.online.buffers.T",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.buffers.FIFOQueue.__len__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.buffers.FIFOQueue.__next__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "StopIteration",
    "d3rlpy.online.buffers.T"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.buffers.FIFOQueue.append": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "d3rlpy.online.buffers.T",
    "min"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.buffers.Generic": {
  "data": {
   "shadows": "typing.Generic"
  },
  "type": "import"
 },
 "d3rlpy.online.buffers.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "d3rlpy.online.buffers.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.online.buffers.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.online.buffers.ReplayBuffer": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "d3rlpy.online.buffers.BasicSampleMixin",
    "d3rlpy.online.buffers.Buffer",
    "float",
    "numpy.ndarray",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.online.buffers.ReplayBuffer.__init__": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "bool",
    "d3rlpy.online.buffers.gym",
    "int",
    "super",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.buffers.ReplayBuffer.append": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "Transition",
    "bool",
    "float",
    "int",
    "isinstance",
    "numpy.ndarray",
    "numpy.random.randint",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.buffers.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.online.buffers.T": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "d3rlpy.online.buffers.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "d3rlpy.online.buffers._Buffer": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "bool",
    "d3rlpy.online.buffers.FIFOQueue",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "d3rlpy.online.buffers._Buffer.__init__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "d3rlpy.online.buffers.FIFOQueue",
    "d3rlpy.online.buffers.gym",
    "get_action_size_from_env",
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.buffers._Buffer.__init__.drop_callback": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "trace_back_and_clear"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.buffers._Buffer.__len__": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.buffers._Buffer.append_episode": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.buffers._Buffer.sample": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.buffers._Buffer.size": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.buffers._Buffer.to_mdp_dataset": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "MDPDataset",
    "len",
    "numpy.asarray",
    "numpy.float32",
    "numpy.uint8",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.buffers._Buffer.transitions": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "d3rlpy.online.buffers.FIFOQueue",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.buffers.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "d3rlpy.online.buffers.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "d3rlpy.online.buffers.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "d3rlpy.online.buffers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.online.explorers": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.online.explorers.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "d3rlpy.online.explorers.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.online.explorers.ConstantEpsilonGreedy": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "d3rlpy.online.explorers.Explorer",
    "float"
   ]
  },
  "type": "class"
 },
 "d3rlpy.online.explorers.ConstantEpsilonGreedy.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.explorers.ConstantEpsilonGreedy.sample": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "d3rlpy.online.explorers._ActionProtocol",
    "int",
    "numpy.ndarray",
    "numpy.random.randint",
    "numpy.random.random",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.explorers.Explorer": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "d3rlpy.online.explorers.Explorer.sample": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "d3rlpy.online.explorers._ActionProtocol",
    "int",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.explorers.LinearDecayEpsilonGreedy": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "d3rlpy.online.explorers.Explorer",
    "float",
    "int"
   ]
  },
  "type": "class"
 },
 "d3rlpy.online.explorers.LinearDecayEpsilonGreedy.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.explorers.LinearDecayEpsilonGreedy.compute_epsilon": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.explorers.LinearDecayEpsilonGreedy.sample": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "d3rlpy.online.explorers._ActionProtocol",
    "int",
    "numpy.ndarray",
    "numpy.random.randint",
    "numpy.random.random",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.explorers.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.online.explorers.NormalNoise": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "d3rlpy.online.explorers.Explorer",
    "float"
   ]
  },
  "type": "class"
 },
 "d3rlpy.online.explorers.NormalNoise.__init__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.explorers.NormalNoise.sample": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "d3rlpy.online.explorers._ActionProtocol",
    "int",
    "numpy.clip",
    "numpy.ndarray",
    "numpy.random.normal"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.explorers.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.online.explorers.Protocol": {
  "data": {
   "shadows": "typing_extensions.Protocol"
  },
  "type": "import"
 },
 "d3rlpy.online.explorers.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "d3rlpy.online.explorers._ActionProtocol": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "typing_extensions.Protocol"
   ]
  },
  "type": "class"
 },
 "d3rlpy.online.explorers._ActionProtocol.action_size": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "int",
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.explorers._ActionProtocol.predict": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.ndarray",
    "typing.Any",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.explorers._ActionProtocol.sample_action": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.ndarray",
    "typing.Any",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.explorers.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "d3rlpy.online.explorers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.online.iterators": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.online.iterators.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.online.iterators.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "d3rlpy.online.iterators.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.online.iterators.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.online.iterators.Protocol": {
  "data": {
   "shadows": "typing_extensions.Protocol"
  },
  "type": "import"
 },
 "d3rlpy.online.iterators.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "d3rlpy.online.iterators._AlgoProtocol": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "typing_extensions.Protocol"
   ]
  },
  "type": "class"
 },
 "d3rlpy.online.iterators._AlgoProtocol.action_scaler": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.iterators._AlgoProtocol.action_size": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "int",
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.iterators._AlgoProtocol.batch_size": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.iterators._AlgoProtocol.build_with_env": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "d3rlpy.online.iterators.gym"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.iterators._AlgoProtocol.gamma": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.iterators._AlgoProtocol.get_loss_labels": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.iterators._AlgoProtocol.impl": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "property",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.iterators._AlgoProtocol.n_frames": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.iterators._AlgoProtocol.n_steps": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.iterators._AlgoProtocol.predict": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.ndarray",
    "typing.Any",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.iterators._AlgoProtocol.sample_action": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.ndarray",
    "typing.Any",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.iterators._AlgoProtocol.save_model": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.iterators._AlgoProtocol.save_params": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "d3rlpy.online.iterators._AlgoProtocol.scaler": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.iterators._AlgoProtocol.update": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "float",
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.iterators._setup_algo": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "d3rlpy.online.iterators._AlgoProtocol",
    "d3rlpy.online.iterators.gym"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.iterators.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "d3rlpy.online.iterators.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.online.iterators.train_batch_env": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "BatchStackedObservation",
    "D3RLPyLogger",
    "bool",
    "d3rlpy.online.iterators._AlgoProtocol",
    "d3rlpy.online.iterators._setup_algo",
    "d3rlpy.online.iterators.gym",
    "enumerate",
    "eval_scorer",
    "evaluate_on_environment",
    "float",
    "int",
    "len",
    "numpy.zeros",
    "range",
    "str",
    "tqdm.trange",
    "typing.Callable",
    "typing.Optional",
    "xrange",
    "zip"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.iterators.train_single_env": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "D3RLPyLogger",
    "StackedObservation",
    "bool",
    "d3rlpy.online.iterators._AlgoProtocol",
    "d3rlpy.online.iterators._setup_algo",
    "d3rlpy.online.iterators.gym",
    "eval_scorer",
    "evaluate_on_environment",
    "float",
    "int",
    "len",
    "range",
    "str",
    "tqdm.trange",
    "typing.Callable",
    "typing.Optional",
    "xrange",
    "zip"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.iterators.trange": {
  "data": {
   "shadows": "tqdm.trange"
  },
  "type": "import"
 },
 "d3rlpy.online.utility": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.online.utility.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "d3rlpy.online.utility.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "d3rlpy.online.utility.get_action_size_from_env": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "d3rlpy.online.utility.gym",
    "gym.spaces.Discrete",
    "int",
    "isinstance",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "d3rlpy.online.utility.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "d3rlpy.ope": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.ope.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "d3rlpy.ope.fqe": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.ope.fqe.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.ope.fqe.DiscreteFQE": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "d3rlpy.ope.fqe._FQEBase",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.ope.fqe.DiscreteFQE.create_impl": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "DiscreteFQEImpl",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.ope.fqe.FQE": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "d3rlpy.ope.fqe._FQEBase",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.ope.fqe.FQE.create_impl": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "FQEImpl",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.ope.fqe.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.ope.fqe.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.ope.fqe.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.ope.fqe.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "d3rlpy.ope.fqe._FQEBase": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.ope.fqe._FQEBase.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "AdamFactory",
    "bool",
    "check_encoder",
    "check_q_func",
    "check_use_gpu",
    "float",
    "int",
    "super",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.ope.fqe._FQEBase.create_impl": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "int",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.ope.fqe._FQEBase.get_loss_labels": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.ope.fqe._FQEBase.predict": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.ndarray",
    "typing.Any",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "d3rlpy.ope.fqe._FQEBase.sample_action": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "numpy.ndarray",
    "typing.Any",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "d3rlpy.ope.fqe._FQEBase.save_policy": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.ope.fqe._FQEBase.update": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "float",
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.ope.fqe.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "d3rlpy.ope.fqe.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.ope.torch": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.ope.torch.fqe_impl": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.ope.torch.fqe_impl.DiscreteFQEImpl": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "d3rlpy.ope.torch.fqe_impl.FQEBaseImpl",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.ope.torch.fqe_impl.DiscreteFQEImpl._build_network": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "create_discrete_q_function"
   ]
  },
  "type": "function"
 },
 "d3rlpy.ope.torch.fqe_impl.DiscreteFQEImpl._compute_loss": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "d3rlpy.ope.torch.fqe_impl.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "d3rlpy.ope.torch.fqe_impl.DiscreteFQEImpl.compute_target": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "d3rlpy.ope.torch.fqe_impl.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "d3rlpy.ope.torch.fqe_impl.FQEBaseImpl": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "torch.optim.Optimizer",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.ope.torch.fqe_impl.FQEBaseImpl.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "DrQPipeline",
    "bool",
    "float",
    "int",
    "super",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.ope.torch.fqe_impl.FQEBaseImpl._build_network": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "d3rlpy.ope.torch.fqe_impl.FQEBaseImpl._build_optim": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "d3rlpy.ope.torch.fqe_impl.FQEBaseImpl._compute_loss": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "d3rlpy.ope.torch.fqe_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.ope.torch.fqe_impl.FQEBaseImpl.build": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "d3rlpy.ope.torch.fqe_impl.copy"
   ]
  },
  "type": "function"
 },
 "d3rlpy.ope.torch.fqe_impl.FQEBaseImpl.compute_target": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "d3rlpy.ope.torch.fqe_impl.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.ope.torch.fqe_impl.FQEBaseImpl.save_policy": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.ope.torch.fqe_impl.FQEBaseImpl.update": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "d3rlpy.ope.torch.fqe_impl.torch",
    "numpy.ndarray",
    "torch_api"
   ]
  },
  "type": "function"
 },
 "d3rlpy.ope.torch.fqe_impl.FQEBaseImpl.update_target": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "hard_sync"
   ]
  },
  "type": "function"
 },
 "d3rlpy.ope.torch.fqe_impl.FQEImpl": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "d3rlpy.ope.torch.fqe_impl.FQEBaseImpl",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.ope.torch.fqe_impl.FQEImpl._build_network": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "create_continuous_q_function"
   ]
  },
  "type": "function"
 },
 "d3rlpy.ope.torch.fqe_impl.Optimizer": {
  "data": {
   "shadows": "torch.optim.Optimizer"
  },
  "type": "import"
 },
 "d3rlpy.ope.torch.fqe_impl.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.ope.torch.fqe_impl.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.ope.torch.fqe_impl.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "d3rlpy.ope.torch.fqe_impl.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "d3rlpy.ope.torch.fqe_impl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.ope.torch.fqe_impl.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.preprocessing": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.preprocessing.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "d3rlpy.preprocessing.action_scalers": {
  "data": {
   "symbols_in_volume": [
    "d3rlpy.preprocessing.action_scalers.ActionScaler",
    "d3rlpy.preprocessing.action_scalers.MinMaxActionScaler",
    "d3rlpy.preprocessing.action_scalers.register_action_scaler",
    "str",
    "typing.Dict",
    "typing.Type"
   ]
  },
  "type": "module"
 },
 "d3rlpy.preprocessing.action_scalers.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "d3rlpy.preprocessing.action_scalers.ActionScaler": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "str",
    "typing.ClassVar"
   ]
  },
  "type": "class"
 },
 "d3rlpy.preprocessing.action_scalers.ActionScaler.fit": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.action_scalers.ActionScaler.fit_with_env": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "d3rlpy.preprocessing.action_scalers.gym"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.action_scalers.ActionScaler.get_params": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "bool",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.action_scalers.ActionScaler.get_type": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.action_scalers.ActionScaler.reverse_transform": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "d3rlpy.preprocessing.action_scalers.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.action_scalers.ActionScaler.transform": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "d3rlpy.preprocessing.action_scalers.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.action_scalers.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.preprocessing.action_scalers.ClassVar": {
  "data": {
   "shadows": "typing.ClassVar"
  },
  "type": "import"
 },
 "d3rlpy.preprocessing.action_scalers.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "d3rlpy.preprocessing.action_scalers.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.preprocessing.action_scalers.MinMaxActionScaler": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "d3rlpy.preprocessing.action_scalers.ActionScaler",
    "numpy.ndarray",
    "str",
    "typing.ClassVar",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.preprocessing.action_scalers.MinMaxActionScaler.__init__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.ndarray",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.action_scalers.MinMaxActionScaler.fit": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "enumerate",
    "numpy.asarray",
    "numpy.maximum",
    "numpy.minimum",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.action_scalers.MinMaxActionScaler.fit_with_env": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "d3rlpy.preprocessing.action_scalers.gym",
    "isinstance",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.action_scalers.MinMaxActionScaler.get_params": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.action_scalers.MinMaxActionScaler.reverse_transform": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "d3rlpy.preprocessing.action_scalers.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.action_scalers.MinMaxActionScaler.transform": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "d3rlpy.preprocessing.action_scalers.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.action_scalers.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.preprocessing.action_scalers.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "d3rlpy.preprocessing.action_scalers.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "d3rlpy.preprocessing.action_scalers.create_action_scaler": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "d3rlpy.preprocessing.action_scalers.ActionScaler",
    "isinstance",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.action_scalers.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "d3rlpy.preprocessing.action_scalers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.preprocessing.action_scalers.register_action_scaler": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "d3rlpy.preprocessing.action_scalers.ActionScaler",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.action_scalers.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.preprocessing.scalers": {
  "data": {
   "symbols_in_volume": [
    "d3rlpy.preprocessing.scalers.MinMaxScaler",
    "d3rlpy.preprocessing.scalers.PixelScaler",
    "d3rlpy.preprocessing.scalers.Scaler",
    "d3rlpy.preprocessing.scalers.StandardScaler",
    "d3rlpy.preprocessing.scalers.register_scaler",
    "str",
    "typing.Dict",
    "typing.Type"
   ]
  },
  "type": "module"
 },
 "d3rlpy.preprocessing.scalers.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "d3rlpy.preprocessing.scalers.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.preprocessing.scalers.ClassVar": {
  "data": {
   "shadows": "typing.ClassVar"
  },
  "type": "import"
 },
 "d3rlpy.preprocessing.scalers.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "d3rlpy.preprocessing.scalers.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.preprocessing.scalers.MinMaxScaler": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "d3rlpy.preprocessing.scalers.Scaler",
    "numpy.ndarray",
    "str",
    "typing.ClassVar",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.preprocessing.scalers.MinMaxScaler.__init__": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.ndarray",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.scalers.MinMaxScaler.fit": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "enumerate",
    "numpy.asarray",
    "numpy.maximum",
    "numpy.minimum",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.scalers.MinMaxScaler.fit_with_env": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "d3rlpy.preprocessing.scalers.gym",
    "isinstance",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.scalers.MinMaxScaler.get_params": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.scalers.MinMaxScaler.reverse_transform": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "d3rlpy.preprocessing.scalers.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.scalers.MinMaxScaler.transform": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "d3rlpy.preprocessing.scalers.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.scalers.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.preprocessing.scalers.PixelScaler": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "d3rlpy.preprocessing.scalers.Scaler",
    "str",
    "typing.ClassVar"
   ]
  },
  "type": "class"
 },
 "d3rlpy.preprocessing.scalers.PixelScaler.fit": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.scalers.PixelScaler.fit_with_env": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "d3rlpy.preprocessing.scalers.gym"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.scalers.PixelScaler.get_params": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.scalers.PixelScaler.reverse_transform": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "d3rlpy.preprocessing.scalers.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.scalers.PixelScaler.transform": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "d3rlpy.preprocessing.scalers.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.scalers.Scaler": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "str",
    "typing.ClassVar"
   ]
  },
  "type": "class"
 },
 "d3rlpy.preprocessing.scalers.Scaler.fit": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.scalers.Scaler.fit_with_env": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "d3rlpy.preprocessing.scalers.gym"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.scalers.Scaler.get_params": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "bool",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.scalers.Scaler.get_type": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.scalers.Scaler.reverse_transform": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "d3rlpy.preprocessing.scalers.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.scalers.Scaler.transform": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "d3rlpy.preprocessing.scalers.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.scalers.StandardScaler": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "d3rlpy.preprocessing.scalers.Scaler",
    "numpy.ndarray",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "d3rlpy.preprocessing.scalers.StandardScaler.__init__": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.ndarray",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.scalers.StandardScaler.fit": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.sqrt",
    "numpy.zeros",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.scalers.StandardScaler.fit_with_env": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "NotImplementedError",
    "d3rlpy.preprocessing.scalers.gym"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.scalers.StandardScaler.get_params": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.scalers.StandardScaler.reverse_transform": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "d3rlpy.preprocessing.scalers.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.scalers.StandardScaler.transform": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "d3rlpy.preprocessing.scalers.torch"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.scalers.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "d3rlpy.preprocessing.scalers.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "d3rlpy.preprocessing.scalers.create_scaler": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "d3rlpy.preprocessing.scalers.Scaler",
    "isinstance",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.scalers.gym": {
  "data": {
   "shadows": "gym"
  },
  "type": "import"
 },
 "d3rlpy.preprocessing.scalers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.preprocessing.scalers.register_scaler": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "d3rlpy.preprocessing.scalers.Scaler",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.scalers.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.preprocessing.stack": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.preprocessing.stack.BatchStackedObservation": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "int",
    "numpy.dtype",
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "d3rlpy.preprocessing.stack.BatchStackedObservation.__init__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "int",
    "numpy.dtype",
    "numpy.uint8",
    "numpy.zeros",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.stack.BatchStackedObservation.append": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.ndarray",
    "numpy.roll"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.stack.BatchStackedObservation.clear": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.stack.BatchStackedObservation.clear_by_index": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.stack.BatchStackedObservation.eval": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.stack.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "d3rlpy.preprocessing.stack.StackedObservation": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "int",
    "numpy.dtype",
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "d3rlpy.preprocessing.stack.StackedObservation.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "int",
    "numpy.dtype",
    "numpy.uint8",
    "numpy.zeros",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.stack.StackedObservation.append": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.ndarray",
    "numpy.roll"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.stack.StackedObservation.clear": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.stack.StackedObservation.eval": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "d3rlpy.preprocessing.stack.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "d3rlpy.seed": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "d3rlpy.random",
    "d3rlpy.torch",
    "int",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "d3rlpy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.torch_utility": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.torch_utility.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.torch_utility.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "d3rlpy.torch_utility.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "d3rlpy.torch_utility.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.torch_utility.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "d3rlpy.torch_utility.Protocol": {
  "data": {
   "shadows": "typing_extensions.Protocol"
  },
  "type": "import"
 },
 "d3rlpy.torch_utility._WithAugmentationProtocol": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "typing_extensions.Protocol"
   ]
  },
  "type": "class"
 },
 "d3rlpy.torch_utility._WithAugmentationProtocol.augmentation": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "d3rlpy.torch_utility._WithDeviceAndScalerProtocol": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "typing_extensions.Protocol"
   ]
  },
  "type": "class"
 },
 "d3rlpy.torch_utility._WithDeviceAndScalerProtocol.action_scaler": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.torch_utility._WithDeviceAndScalerProtocol.device": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "d3rlpy.torch_utility._WithDeviceAndScalerProtocol.scaler": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.torch_utility.augmentation_api": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "d3rlpy.torch_utility.torch",
    "str",
    "typing.Callable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "d3rlpy.torch_utility.augmentation_api._augmentation_api": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "d3rlpy.torch_utility.torch",
    "f",
    "inspect.signature",
    "list",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "d3rlpy.torch_utility.augmentation_api._augmentation_api.wrapper": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "d3rlpy.torch_utility._WithAugmentationProtocol",
    "d3rlpy.torch_utility.torch",
    "f",
    "str",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "d3rlpy.torch_utility.default_collate": {
  "data": {
   "shadows": "torch.utils.data._utils.collate.default_collate"
  },
  "type": "import"
 },
 "d3rlpy.torch_utility.eval_api": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "numpy.ndarray",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "d3rlpy.torch_utility.eval_api.wrapper": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "d3rlpy.torch_utility.set_eval_mode",
    "f",
    "numpy.ndarray",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.torch_utility.freeze": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "d3rlpy.torch_utility.torch",
    "dir",
    "getattr",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.torch_utility.get_state_dict": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "d3rlpy.torch_utility.torch",
    "dir",
    "getattr",
    "isinstance",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.torch_utility.hard_sync": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "d3rlpy.torch_utility.torch",
    "torch.nn.Module",
    "zip"
   ]
  },
  "type": "function"
 },
 "d3rlpy.torch_utility.map_location": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.torch_utility.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "d3rlpy.torch_utility.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.torch_utility.set_eval_mode": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "d3rlpy.torch_utility.torch",
    "dir",
    "getattr",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.torch_utility.set_state_dict": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "d3rlpy.torch_utility.torch",
    "dir",
    "getattr",
    "isinstance",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "d3rlpy.torch_utility.set_train_mode": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "d3rlpy.torch_utility.torch",
    "dir",
    "getattr",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.torch_utility.signature": {
  "data": {
   "shadows": "inspect.signature"
  },
  "type": "import"
 },
 "d3rlpy.torch_utility.soft_sync": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "d3rlpy.torch_utility.torch",
    "float",
    "torch.nn.Module",
    "zip"
   ]
  },
  "type": "function"
 },
 "d3rlpy.torch_utility.to_cpu": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "d3rlpy.torch_utility.torch",
    "dir",
    "getattr",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.torch_utility.to_cuda": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "d3rlpy.torch_utility.torch",
    "dir",
    "getattr",
    "isinstance",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.torch_utility.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "d3rlpy.torch_utility.torch_api": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.ndarray",
    "str",
    "typing.Callable",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "d3rlpy.torch_utility.torch_api._torch_api": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "inspect.signature",
    "list",
    "numpy.ndarray",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "d3rlpy.torch_utility.torch_api._torch_api.wrapper": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "d3rlpy.torch_utility._WithDeviceAndScalerProtocol",
    "d3rlpy.torch_utility.torch",
    "enumerate",
    "f",
    "isinstance",
    "list",
    "numpy.ndarray",
    "numpy.uint8",
    "torch.utils.data._utils.collate.default_collate",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.torch_utility.train_api": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "numpy.ndarray",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "d3rlpy.torch_utility.train_api.wrapper": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "d3rlpy.torch_utility.set_train_mode",
    "f",
    "numpy.ndarray",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.torch_utility.unfreeze": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "d3rlpy.torch_utility.torch",
    "dir",
    "getattr",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.wrappers": {
  "data": {},
  "type": "module"
 },
 "d3rlpy.wrappers.sb3": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "d3rlpy.wrappers.sb3.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "d3rlpy.wrappers.sb3.Discrete": {
  "data": {
   "shadows": "gym.spaces.Discrete"
  },
  "type": "import"
 },
 "d3rlpy.wrappers.sb3.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "d3rlpy.wrappers.sb3.ReplayBuffer": {
  "data": {
   "shadows": "stable_baselines3.common.buffers.ReplayBuffer"
  },
  "type": "import"
 },
 "d3rlpy.wrappers.sb3.SB3Wrapper": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "d3rlpy.wrappers.sb3.SB3Wrapper.__getattr__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "getattr",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.wrappers.sb3.SB3Wrapper.__init__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "d3rlpy.wrappers.sb3.SB3Wrapper.__setattr__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "d3rlpy.wrappers.sb3.SB3Wrapper.predict": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "bool",
    "numpy.ndarray",
    "typing.Any",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "d3rlpy.wrappers.sb3.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "d3rlpy.wrappers.sb3.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "d3rlpy.wrappers.sb3.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "d3rlpy.wrappers.sb3.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "d3rlpy.wrappers.sb3.to_mdp_dataset": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "MDPDataset",
    "gym.spaces.Discrete",
    "isinstance"
   ]
  },
  "type": "function"
 }
}