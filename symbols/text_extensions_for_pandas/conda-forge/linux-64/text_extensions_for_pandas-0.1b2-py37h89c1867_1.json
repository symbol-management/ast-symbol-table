{
 "*": {
  "data": {
   "imports": [
    "text_extensions_for_pandas.array.span"
   ]
  },
  "type": "star-import"
 },
 "text_extensions_for_pandas": {
  "data": {},
  "type": "module"
 },
 "text_extensions_for_pandas.Span": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.span.Span"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.SpanArray": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.span.SpanArray"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.SpanDtype": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.span.SpanDtype"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.TensorArray": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.tensor.TensorArray"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.TensorDtype": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.tensor.TensorDtype"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.TensorElement": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.tensor.TensorElement"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.TokenSpan": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.token_span.TokenSpan"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.TokenSpanArray": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.token_span.TokenSpanArray"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.TokenSpanDtype": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.token_span.TokenSpanDtype"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.__all__": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.array": {
  "data": {},
  "type": "module"
 },
 "text_extensions_for_pandas.array.accessor": {
  "data": {},
  "type": "module"
 },
 "text_extensions_for_pandas.array.accessor.SpanAccessor": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pandas.api.extensions.register_series_accessor"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.accessor.SpanAccessor.__init__": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.accessor.SpanAccessor._validate": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "isinstance",
    "staticmethod",
    "text_extensions_for_pandas.array.span.SpanDtype"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.accessor.SpanAccessor.begin": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "pandas.Series",
    "property"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.accessor.SpanAccessor.covered_text": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "pandas.Series",
    "property"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.accessor.SpanAccessor.end": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "pandas.Series",
    "property"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.accessor.SpanDtype": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.span.SpanDtype"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.accessor.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.arrow_conversion": {
  "data": {},
  "type": "module"
 },
 "text_extensions_for_pandas.array.arrow_conversion.ArrowSpanType": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pyarrow.PyExtensionType"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.arrow_conversion.ArrowSpanType.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "pyarrow.PyExtensionType.__init__",
    "pyarrow.field",
    "pyarrow.struct",
    "pyarrow.types.is_integer"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.arrow_conversion.ArrowSpanType.__reduce__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.arrow_conversion.ArrowSpanType"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.arrow_conversion.ArrowTensorArray": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "pyarrow.ExtensionArray"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.arrow_conversion.ArrowTensorArray.__init__": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.arrow_conversion.ArrowTensorArray.from_numpy": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "iter_gen",
    "len",
    "list",
    "list_gen",
    "numpy.ascontiguousarray",
    "numpy.int32",
    "numpy.isscalar",
    "numpy.ndarray",
    "numpy.prod",
    "numpy.stack",
    "pyarrow.Array.from_buffers",
    "pyarrow.ExtensionArray.from_storage",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.Table.from_batches",
    "pyarrow.array",
    "pyarrow.from_numpy_dtype",
    "pyarrow.list_",
    "pyarrow.py_buffer",
    "range",
    "staticmethod",
    "text_extensions_for_pandas.array.arrow_conversion.ArrowTensorArray",
    "text_extensions_for_pandas.array.arrow_conversion.ArrowTensorType",
    "tuple"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.arrow_conversion.ArrowTensorArray.from_numpy.iter_gen": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "len",
    "numpy.stack",
    "range",
    "text_extensions_for_pandas.array.arrow_conversion.ArrowTensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.arrow_conversion.ArrowTensorArray.from_numpy.list_gen": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "len",
    "range",
    "text_extensions_for_pandas.array.arrow_conversion.ArrowTensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.arrow_conversion.ArrowTensorArray.to_numpy": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "len",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.arrow_conversion.ArrowTensorType": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "pyarrow.PyExtensionType"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.arrow_conversion.ArrowTensorType.__arrow_ext_class__": {
  "data": {
   "lineno": 325
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.arrow_conversion.ArrowTensorType.__init__": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "pyarrow.PyExtensionType.__init__",
    "pyarrow.list_"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.arrow_conversion.ArrowTensorType.__reduce__": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.arrow_conversion.ArrowTensorType"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.arrow_conversion.ArrowTensorType.shape": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.arrow_conversion.ArrowTokenSpanType": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "pyarrow.PyExtensionType",
    "text_extensions_for_pandas.array.arrow_conversion.ArrowSpanType"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.arrow_conversion.ArrowTokenSpanType.__init__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "pyarrow.PyExtensionType.__init__",
    "pyarrow.field",
    "pyarrow.struct",
    "pyarrow.types.is_integer",
    "range",
    "text_extensions_for_pandas.array.arrow_conversion.ArrowSpanType"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.arrow_conversion.ArrowTokenSpanType.__reduce__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.arrow_conversion.ArrowTokenSpanType"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.arrow_conversion.SpanArray": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.span.SpanArray"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.arrow_conversion.TensorArray": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.tensor.TensorArray"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.arrow_conversion.TokenSpanArray": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.token_span.TokenSpanArray"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.arrow_conversion.arrow_to_span": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "ValueError",
    "bytes",
    "isinstance",
    "pyarrow.ChunkedArray",
    "pyarrow.ExtensionArray",
    "pyarrow.types.is_struct",
    "text_extensions_for_pandas.array.arrow_conversion.ArrowSpanType",
    "text_extensions_for_pandas.array.span.SpanArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.arrow_conversion.arrow_to_tensor_array": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "isinstance",
    "numpy.concatenate",
    "pyarrow.ChunkedArray",
    "pyarrow.ExtensionArray",
    "text_extensions_for_pandas.array.tensor.TensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.arrow_conversion.arrow_to_token_span": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "ValueError",
    "bytes",
    "isinstance",
    "pyarrow.ChunkedArray",
    "pyarrow.ExtensionArray",
    "pyarrow.concat_arrays",
    "pyarrow.types.is_struct",
    "range",
    "text_extensions_for_pandas.array.arrow_conversion.ArrowSpanType",
    "text_extensions_for_pandas.array.arrow_conversion.ArrowTokenSpanType",
    "text_extensions_for_pandas.array.span.SpanArray",
    "text_extensions_for_pandas.array.token_span.TokenSpanArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.arrow_conversion.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.arrow_conversion.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.arrow_conversion.span_to_arrow": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "list",
    "pyarrow.ExtensionArray",
    "pyarrow.ExtensionArray.from_storage",
    "pyarrow.StructArray.from_arrays",
    "pyarrow.array",
    "text_extensions_for_pandas.array.arrow_conversion.ArrowSpanType",
    "text_extensions_for_pandas.array.span.SpanArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.arrow_conversion.token_span_to_arrow": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.append",
    "numpy.full",
    "numpy.zeros",
    "pyarrow.ExtensionArray",
    "pyarrow.ExtensionArray.from_storage",
    "pyarrow.StructArray.from_arrays",
    "pyarrow.array",
    "text_extensions_for_pandas.array.arrow_conversion.ArrowTokenSpanType",
    "text_extensions_for_pandas.array.token_span.TokenSpanArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor": {
  "data": {
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.tensor.TensorArray",
    "text_extensions_for_pandas.array.tensor.TensorElement"
   ]
  },
  "type": "module"
 },
 "text_extensions_for_pandas.array.tensor.ABCDataFrame": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCDataFrame"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.tensor.ABCIndexClass": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCIndexClass"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.tensor.ABCSeries": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCSeries"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.tensor.ArrowTensorArray": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.arrow_conversion.ArrowTensorArray"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.tensor.TensorArray": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "pandas.api.extensions.ExtensionArray",
    "text_extensions_for_pandas.array.tensor.TensorOpsMixin"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.tensor.TensorArray.__array__": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorArray.__arrow_array__": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.arrow_conversion.ArrowTensorArray.from_numpy"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorArray.__contains__": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "numpy.asarray",
    "numpy.isnan",
    "super",
    "text_extensions_for_pandas.array.tensor.TensorElement"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorArray.__getitem__": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "numpy.asarray",
    "numpy.isscalar",
    "pandas.core.indexers.check_array_indexer",
    "text_extensions_for_pandas.array.tensor.TensorArray",
    "text_extensions_for_pandas.array.tensor.TensorElement"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorArray.__init__": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.isscalar",
    "numpy.ndarray",
    "numpy.object_",
    "numpy.stack",
    "text_extensions_for_pandas.array.tensor.TensorArray",
    "text_extensions_for_pandas.array.tensor.TensorElement",
    "type"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorArray.__len__": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorArray.__repr__": {
  "data": {
   "lineno": 440
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorArray.__setitem__": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.asarray",
    "numpy.full_like",
    "numpy.isscalar",
    "numpy.nan",
    "numpy.ndarray",
    "pandas.core.dtypes.generic.ABCSeries",
    "pandas.core.indexers.check_array_indexer",
    "slice",
    "text_extensions_for_pandas.array.tensor.TensorDtype",
    "text_extensions_for_pandas.array.tensor.TensorElement",
    "type"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorArray.__str__": {
  "data": {
   "lineno": 447
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorArray._concat_same_type": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "classmethod",
    "numpy.concatenate",
    "text_extensions_for_pandas.array.tensor.TensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorArray._from_factorized": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorArray._from_sequence": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "classmethod",
    "isinstance",
    "numpy.ndarray",
    "text_extensions_for_pandas.array.tensor.TensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorArray._reduce": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.all",
    "numpy.any",
    "numpy.sum",
    "text_extensions_for_pandas.array.tensor.TensorElement"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorArray._values_for_factorize": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorArray.all": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.tensor.TensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorArray.any": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.tensor.TensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorArray.astype": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "pandas.StringDtype",
    "pandas.api.types.is_object_dtype",
    "pandas.api.types.is_string_dtype",
    "pandas.api.types.pandas_dtype",
    "str",
    "text_extensions_for_pandas.array.tensor.TensorArray",
    "text_extensions_for_pandas.array.tensor.TensorDtype"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorArray.copy": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.tensor.TensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorArray.dtype": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "pandas.api.extensions.ExtensionDtype",
    "property",
    "text_extensions_for_pandas.array.tensor.TensorDtype"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorArray.inferred_type": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "pandas.api.types.infer_dtype",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorArray.isna": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.isnan",
    "numpy.object_",
    "numpy.str_"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorArray.nbytes": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorArray.numpy_dtype": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorArray.numpy_ndim": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorArray.numpy_shape": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorArray.take": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "bool",
    "enumerate",
    "int",
    "len",
    "numpy.any",
    "numpy.asarray",
    "numpy.full",
    "numpy.intp",
    "numpy.nan",
    "pandas.core.indexers.validate_indices",
    "text_extensions_for_pandas.array.tensor.TensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorArray.to_numpy": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.api.extensions.no_default",
    "pandas.api.types.pandas_dtype"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorDtype": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pandas.api.extensions.ExtensionDtype",
    "pandas.api.extensions.register_extension_dtype"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.tensor.TensorDtype.__from_arrow__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.arrow_conversion.arrow_to_tensor_array"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorDtype.construct_array_type": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorDtype.construct_from_string": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "TypeError",
    "classmethod",
    "cls",
    "cls.__name__",
    "isinstance",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorDtype.name": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorDtype.type": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorElement": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.tensor.TensorOpsMixin"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.tensor.TensorElement.__array__": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorElement.__init__": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorElement.__repr__": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorElement.__str__": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorElement.to_numpy": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorOpsMixin": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "pandas.api.extensions.ExtensionScalarOpsMixin"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.tensor.TensorOpsMixin._create_method": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "op.__name__",
    "pandas.compat.set_function_name"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.TensorOpsMixin._create_method._binop": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "NotImplemented",
    "NotImplementedError",
    "cls",
    "isinstance",
    "numpy.isscalar",
    "op",
    "pandas.core.dtypes.generic.ABCDataFrame",
    "pandas.core.dtypes.generic.ABCIndexClass",
    "pandas.core.dtypes.generic.ABCSeries",
    "text_extensions_for_pandas.array.tensor.TensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.tensor.arrow_to_tensor_array": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.arrow_conversion.arrow_to_tensor_array"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.tensor.check_array_indexer": {
  "data": {
   "shadows": "pandas.core.indexers.check_array_indexer"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.tensor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.tensor.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.tensor.set_function_name": {
  "data": {
   "shadows": "pandas.compat.set_function_name"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.tensor.validate_indices": {
  "data": {
   "shadows": "pandas.core.indexers.validate_indices"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_arrow_conversion": {
  "data": {},
  "type": "module"
 },
 "text_extensions_for_pandas.array.test_arrow_conversion.ArrowTensorArray": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.arrow_conversion.ArrowTensorArray"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_arrow_conversion.TestArrowTensor": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_arrow_conversion.unittest"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_arrow_conversion.TestArrowTensor.test_batch_size": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.concatenate",
    "numpy.stack",
    "numpy.testing.assert_array_equal",
    "pyarrow.RecordBatch.from_arrays",
    "range",
    "text_extensions_for_pandas.array.arrow_conversion.ArrowTensorArray.from_numpy",
    "text_extensions_for_pandas.array.test_arrow_conversion._roundtrip_batch"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_arrow_conversion.TestArrowTensor.test_list_of_numpy_roundtrip": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.stack",
    "numpy.testing.assert_array_equal",
    "pyarrow.RecordBatch.from_arrays",
    "range",
    "text_extensions_for_pandas.array.arrow_conversion.ArrowTensorArray.from_numpy",
    "text_extensions_for_pandas.array.test_arrow_conversion._roundtrip_batch"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_arrow_conversion.TestArrowTensor.test_ndarray_dict": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "numpy.concatenate",
    "range",
    "text_extensions_for_pandas.array.arrow_conversion.ArrowTensorArray.from_numpy",
    "text_extensions_for_pandas.array.test_arrow_conversion._roundtrip_table"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_arrow_conversion.TestArrowTensor.test_numpy_roundtrip": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "pyarrow.RecordBatch.from_arrays",
    "text_extensions_for_pandas.array.arrow_conversion.ArrowTensorArray.from_numpy",
    "text_extensions_for_pandas.array.test_arrow_conversion._roundtrip_batch"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_arrow_conversion._ipc_read_batches": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pyarrow.RecordBatchStreamReader"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_arrow_conversion._ipc_write_batches": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "len",
    "pyarrow.BufferOutputStream",
    "pyarrow.RecordBatchStreamWriter"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_arrow_conversion._roundtrip_batch": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "len",
    "text_extensions_for_pandas.array.test_arrow_conversion._ipc_read_batches",
    "text_extensions_for_pandas.array.test_arrow_conversion._ipc_write_batches"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_arrow_conversion._roundtrip_table": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "pyarrow.Table.from_batches",
    "text_extensions_for_pandas.array.test_arrow_conversion._ipc_read_batches",
    "text_extensions_for_pandas.array.test_arrow_conversion._ipc_write_batches"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_arrow_conversion.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_arrow_conversion.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_arrow_conversion.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_arrow_conversion.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_span": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "text_extensions_for_pandas.array.test_span.unittest"
   ]
  },
  "type": "module"
 },
 "text_extensions_for_pandas.array.test_span.ABCPandasArray": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCPandasArray"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_span.ArrayTestBase": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "text_extensions_for_pandas.util.TestBase"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_span.ArrayTestBase._make_spans_of_tokens": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "SpanArray",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.CharSpanArrayIOTests": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_span.ArrayTestBase"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_span.CharSpanArrayIOTests.test_feather": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.read_feather",
    "pandas.testing.assert_frame_equal",
    "text_extensions_for_pandas.array.test_span.os",
    "text_extensions_for_pandas.array.test_span.tempfile"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.CharSpanArrayTest": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_span.ArrayTestBase"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_span.CharSpanArrayTest.test_as_frame": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.CharSpanArrayTest.test_as_tuples": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "SpanArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.CharSpanArrayTest.test_contains": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "Span",
    "SpanArray._from_sequence",
    "len"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.CharSpanArrayTest.test_copy": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "Span"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.CharSpanArrayTest.test_create": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "SpanArray",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.CharSpanArrayTest.test_dtype": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "SpanArray",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.CharSpanArrayTest.test_equals": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.CharSpanArrayTest.test_getitem": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.CharSpanArrayTest.test_len": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.CharSpanArrayTest.test_less_than": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "Span",
    "SpanArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.CharSpanArrayTest.test_normalized_covered_text": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.CharSpanArrayTest.test_not_equals": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.CharSpanArrayTest.test_nulls": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "Span",
    "Span.NULL_OFFSET_VALUE"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.CharSpanArrayTest.test_overlaps": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "Span",
    "SpanArray._from_sequence",
    "len"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.CharSpanArrayTest.test_reduce": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "Span",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.CharSpanArrayTest.test_setitem": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.CharSpanArrayTest.test_take": {
  "data": {
   "lineno": 258
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.SpanTest": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_span.unittest"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_span.SpanTest.test_contains": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "Span"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.SpanTest.test_context": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "Span"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.SpanTest.test_create": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "Span",
    "Span.NULL_OFFSET_VALUE",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.SpanTest.test_equals": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "Span"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.SpanTest.test_hash": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "Span"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.SpanTest.test_less_than": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "Span"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.SpanTest.test_overlaps": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "Span"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.SpanTest.test_repr": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "Span",
    "repr"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.TestBase": {
  "data": {
   "shadows": "text_extensions_for_pandas.util.TestBase"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasArithmeticOps": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseArithmeticOpsTests",
    "text_extensions_for_pandas.array.test_span.pytest"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasBooleanReduce": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseBooleanReduceTests",
    "text_extensions_for_pandas.array.test_span.pytest"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasCasting": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseCastingTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasComparisonOps": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseComparisonOpsTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasComparisonOps._compare_other": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "int",
    "isinstance",
    "op",
    "text_extensions_for_pandas.array.test_span.data",
    "text_extensions_for_pandas.array.test_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasConstructors": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseConstructorsTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasConstructors.test_series_constructor_no_data_with_index": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasDtype": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseDtypeTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasGetitem": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseGetitemTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasGroupby": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseGroupbyTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasInterface": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseInterfaceTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasMethods": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseMethodsTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasMethods.test_combine_add": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasMethods.test_container_shift": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasMethods.test_equals": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.array",
    "pandas.core.dtypes.generic.ABCPandasArray",
    "text_extensions_for_pandas.array.test_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasMethods.test_not_hashable": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasMethods.test_searchsorted": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "pandas.tests.extension.conftest.as_series",
    "super",
    "text_extensions_for_pandas.array.test_span.data_for_sorting",
    "text_extensions_for_pandas.array.test_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasMethods.test_shift_non_empty_array": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasMethods.test_value_counts": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasMethods.test_value_counts_with_normalize": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasMethods.test_where_series": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasMissing": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseMissingTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasNumericReduce": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseNumericReduceTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasNumericReduce.check_reduce": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "Span",
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasParsing": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseParsingTests",
    "text_extensions_for_pandas.array.test_span.pytest"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasPrinting": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BasePrintingTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasReshaping": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseReshapingTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasReshaping.test_concat_with_reindex": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasReshaping.test_unstack": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasSetitem": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseSetitemTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasUnaryOps": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseUnaryOpsTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_span.TestPandasUnaryOps.test_invert": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span._gen_spans": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "Span",
    "len",
    "range",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.all_compare_operators": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.all_data": {
  "data": {
   "shadows": "pandas.tests.extension.conftest.all_data"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_span.all_numeric_reductions": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.as_array": {
  "data": {
   "shadows": "pandas.tests.extension.conftest.as_array"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_span.as_frame": {
  "data": {
   "shadows": "pandas.tests.extension.conftest.as_frame"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_span.as_series": {
  "data": {
   "shadows": "pandas.tests.extension.conftest.as_series"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_span.base": {
  "data": {
   "shadows": "pandas.tests.extension.base"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_span.box_in_series": {
  "data": {
   "shadows": "pandas.tests.extension.conftest.box_in_series"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_span.data": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "list",
    "pandas.array",
    "text_extensions_for_pandas.array.test_span._gen_spans",
    "text_extensions_for_pandas.array.test_span.dtype",
    "text_extensions_for_pandas.array.test_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.data_for_grouping": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "Span",
    "Span.NULL_OFFSET_VALUE",
    "pandas.array",
    "range",
    "text_extensions_for_pandas.array.test_span._gen_spans",
    "text_extensions_for_pandas.array.test_span.dtype",
    "text_extensions_for_pandas.array.test_span.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.data_for_sorting": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "len",
    "pandas.array",
    "range",
    "text_extensions_for_pandas.array.test_span._gen_spans",
    "text_extensions_for_pandas.array.test_span.dtype",
    "text_extensions_for_pandas.array.test_span.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.data_missing": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "Span",
    "Span.NULL_OFFSET_VALUE",
    "pandas.array",
    "range",
    "text_extensions_for_pandas.array.test_span._gen_spans",
    "text_extensions_for_pandas.array.test_span.dtype",
    "text_extensions_for_pandas.array.test_span.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.data_missing_for_sorting": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "Span",
    "Span.NULL_OFFSET_VALUE",
    "len",
    "pandas.array",
    "range",
    "text_extensions_for_pandas.array.test_span._gen_spans",
    "text_extensions_for_pandas.array.test_span.dtype",
    "text_extensions_for_pandas.array.test_span.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.data_repeated": {
  "data": {
   "shadows": "pandas.tests.extension.conftest.data_repeated"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_span.dtype": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "SpanDtype",
    "text_extensions_for_pandas.array.test_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.fillna_method": {
  "data": {
   "shadows": "pandas.tests.extension.conftest.fillna_method"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_span.groupby_apply_op": {
  "data": {
   "shadows": "pandas.tests.extension.conftest.groupby_apply_op"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_span.na_cmp": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "Span.NULL_OFFSET_VALUE",
    "text_extensions_for_pandas.array.test_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.na_value": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "Span",
    "Span.NULL_OFFSET_VALUE",
    "range",
    "text_extensions_for_pandas.array.test_span._gen_spans",
    "text_extensions_for_pandas.array.test_span.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_span.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_span.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_span.sort_by_key": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_span.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_span.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_span.use_numpy": {
  "data": {
   "shadows": "pandas.tests.extension.conftest.use_numpy"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_tensor": {
  "data": {},
  "type": "module"
 },
 "text_extensions_for_pandas.array.test_tensor.ABCSeries": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCSeries"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_tensor.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_tensor.TensorArray": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.tensor.TensorArray"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_tensor.TensorArrayDataFrameTests": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_tensor.TensorArrayDataFrameTests.test_bool_indexing_dataframe": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "text_extensions_for_pandas.array.tensor.TensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TensorArrayDataFrameTests.test_bool_indexing_series": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "text_extensions_for_pandas.array.tensor.TensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TensorArrayDataFrameTests.test_create": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.array",
    "pandas.DataFrame",
    "range",
    "text_extensions_for_pandas.array.tensor.TensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TensorArrayDataFrameTests.test_large_display_numeric": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "repr",
    "text_extensions_for_pandas.array.tensor.TensorArray",
    "text_extensions_for_pandas.array.test_tensor.textwrap"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TensorArrayDataFrameTests.test_large_display_string": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "numpy.array",
    "pandas.DataFrame",
    "pandas.__version__",
    "repr",
    "text_extensions_for_pandas.array.tensor.TensorArray",
    "text_extensions_for_pandas.array.test_tensor.pytest",
    "text_extensions_for_pandas.array.test_tensor.textwrap"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TensorArrayDataFrameTests.test_sort": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "pandas.DataFrame",
    "pandas.date_range",
    "text_extensions_for_pandas.array.tensor.TensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TensorArrayDataFrameTests.test_sum": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "pandas.DataFrame",
    "repr",
    "text_extensions_for_pandas.array.tensor.TensorArray",
    "text_extensions_for_pandas.array.test_tensor.textwrap"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TensorArrayIOTests": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_tensor.TensorArrayIOTests.test_feather": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.read_feather",
    "pandas.testing.assert_frame_equal",
    "range",
    "text_extensions_for_pandas.array.tensor.TensorArray",
    "text_extensions_for_pandas.array.test_tensor.os",
    "text_extensions_for_pandas.array.test_tensor.tempfile"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TensorArrayIOTests.test_feather_auto_chunked": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.read_feather",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.feather.read_table",
    "pyarrow.feather.write_feather",
    "range",
    "text_extensions_for_pandas.array.tensor.TensorArray",
    "text_extensions_for_pandas.array.test_tensor.os",
    "text_extensions_for_pandas.array.test_tensor.tempfile"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TensorArrayIOTests.test_feather_chunked": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.concat",
    "pandas.read_feather",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.concat_tables",
    "pyarrow.feather.write_feather",
    "range",
    "text_extensions_for_pandas.array.tensor.TensorArray",
    "text_extensions_for_pandas.array.test_tensor.os",
    "text_extensions_for_pandas.array.test_tensor.tempfile"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TensorArrayIOTests.test_parquet": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "len",
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.read_parquet",
    "pandas.testing.assert_frame_equal",
    "pyarrow.__version__",
    "range",
    "text_extensions_for_pandas.array.tensor.TensorArray",
    "text_extensions_for_pandas.array.test_tensor.os",
    "text_extensions_for_pandas.array.test_tensor.pytest",
    "text_extensions_for_pandas.array.test_tensor.tempfile"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TensorDtype": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.tensor.TensorDtype"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_tensor.TensorElement": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.tensor.TensorElement"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_tensor.TestPandasArithmeticOps": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.tests.extension.base.BaseArithmeticOpsTests",
    "pandas.tests.extension.base.BaseArithmeticOpsTests.divmod_exc",
    "pandas.tests.extension.base.BaseArithmeticOpsTests.frame_scalar_exc",
    "pandas.tests.extension.base.BaseArithmeticOpsTests.series_array_exc",
    "pandas.tests.extension.base.BaseArithmeticOpsTests.series_scalar_exc"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_tensor.TestPandasArithmeticOps.test_arith_series_with_array": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "len",
    "pandas.Series",
    "text_extensions_for_pandas.array.tensor.TensorDtype",
    "text_extensions_for_pandas.array.test_tensor.all_arithmetic_operators",
    "text_extensions_for_pandas.array.test_tensor.data"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestPandasArithmeticOps.test_arith_series_with_scalar": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "pandas.Series",
    "text_extensions_for_pandas.array.test_tensor.all_arithmetic_operators",
    "text_extensions_for_pandas.array.test_tensor.data"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestPandasArithmeticOps.test_error": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_tensor.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestPandasBooleanReduce": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseBooleanReduceTests",
    "text_extensions_for_pandas.array.test_tensor.pytest"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_tensor.TestPandasCasting": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseCastingTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_tensor.TestPandasComparisonOps": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseComparisonOpsTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_tensor.TestPandasComparisonOps._compare_other": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "op"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestPandasComparisonOps.test_compare_array": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": [
    "len",
    "pandas.Series",
    "text_extensions_for_pandas.array.tensor.TensorDtype",
    "text_extensions_for_pandas.array.test_tensor.all_compare_operators",
    "text_extensions_for_pandas.array.test_tensor.data"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestPandasComparisonOps.test_compare_scalar": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "pandas.Series",
    "text_extensions_for_pandas.array.test_tensor.all_compare_operators",
    "text_extensions_for_pandas.array.test_tensor.data"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestPandasConstructors": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseConstructorsTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_tensor.TestPandasConstructors.test_pandas_array_dtype": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_tensor.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestPandasDtype": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseDtypeTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_tensor.TestPandasGetitem": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseGetitemTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_tensor.TestPandasGetitem.test_reindex": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "numpy.array",
    "super",
    "text_extensions_for_pandas.array.test_tensor.data",
    "text_extensions_for_pandas.array.test_tensor.na_value"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestPandasGroupby": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseGroupbyTests",
    "text_extensions_for_pandas.array.test_tensor.pytest"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_tensor.TestPandasInterface": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseInterfaceTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_tensor.TestPandasInterface.test_array_interface": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "numpy.testing.assert_array_equal",
    "text_extensions_for_pandas.array.test_tensor.data"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestPandasMethods": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseMethodsTests",
    "text_extensions_for_pandas.array.test_tensor.pytest"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_tensor.TestPandasMissing": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseMissingTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_tensor.TestPandasMissing.test_fillna_limit_backfill": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "super",
    "text_extensions_for_pandas.array.test_tensor.data_missing",
    "text_extensions_for_pandas.array.test_tensor.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestPandasMissing.test_fillna_limit_pad": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "super",
    "text_extensions_for_pandas.array.test_tensor.data_missing",
    "text_extensions_for_pandas.array.test_tensor.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestPandasMissing.test_fillna_series_method": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": [
    "pandas.tests.extension.conftest.fillna_method",
    "super",
    "text_extensions_for_pandas.array.test_tensor.data_missing",
    "text_extensions_for_pandas.array.test_tensor.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestPandasNumericReduce": {
  "data": {
   "lineno": 995,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseNumericReduceTests",
    "text_extensions_for_pandas.array.test_tensor.pytest"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_tensor.TestPandasParsing": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseParsingTests",
    "text_extensions_for_pandas.array.test_tensor.pytest"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_tensor.TestPandasPrinting": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BasePrintingTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_tensor.TestPandasPrinting.test_array_repr": {
  "data": {
   "lineno": 1007,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_tensor.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestPandasReshaping": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseReshapingTests",
    "text_extensions_for_pandas.array.test_tensor.pytest"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_tensor.TestPandasSetitem": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseSetitemTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_tensor.TestPandasUnaryOps": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseUnaryOpsTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_tensor.TestPandasUnaryOps.test_invert": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_tensor.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestTensor": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_tensor.TestTensor.setUp": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pandas.set_option"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestTensor.tearDown": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pandas.reset_option"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestTensor.test_2d_int_tensor_selection": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "distutils.version.LooseVersion",
    "numpy.array",
    "numpy.asarray",
    "numpy.testing.assert_array_equal",
    "pandas.Series",
    "pandas.__version__",
    "text_extensions_for_pandas.array.tensor.TensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestTensor.test_all": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "pandas.Series",
    "text_extensions_for_pandas.array.tensor.TensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestTensor.test_any": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "pandas.Series",
    "text_extensions_for_pandas.array.tensor.TensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestTensor.test_array_interface": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "numpy.stack",
    "numpy.testing.assert_array_equal",
    "text_extensions_for_pandas.array.tensor.TensorArray",
    "text_extensions_for_pandas.array.tensor.TensorElement"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestTensor.test_asarray": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "numpy.testing.assert_array_equal",
    "text_extensions_for_pandas.array.tensor.TensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestTensor.test_bool_indexing": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.empty",
    "numpy.testing.assert_array_equal",
    "text_extensions_for_pandas.array.tensor.TensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestTensor.test_bool_tensor_selection": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "Exception",
    "distutils.version.LooseVersion",
    "numpy.array",
    "numpy.asarray",
    "numpy.testing.assert_array_equal",
    "pandas.Series",
    "pandas.__version__",
    "text_extensions_for_pandas.array.tensor.TensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestTensor.test_concat": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "numpy.arange",
    "str",
    "text_extensions_for_pandas.array.tensor.TensorArray",
    "text_extensions_for_pandas.array.tensor.TensorArray._concat_same_type",
    "text_extensions_for_pandas.array.test_tensor.textwrap"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestTensor.test_create": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.empty",
    "numpy.ones",
    "text_extensions_for_pandas.array.tensor.TensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestTensor.test_create_from_scalar": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.int64",
    "text_extensions_for_pandas.array.tensor.TensorArray",
    "text_extensions_for_pandas.array.tensor.TensorElement"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestTensor.test_create_from_scalar_list": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "numpy.array",
    "numpy.nan",
    "numpy.testing.assert_array_equal",
    "pandas.Series",
    "pandas.array",
    "text_extensions_for_pandas.array.tensor.TensorArray",
    "text_extensions_for_pandas.array.tensor.TensorDtype",
    "text_extensions_for_pandas.array.tensor.TensorElement"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestTensor.test_create_series": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "text_extensions_for_pandas.array.tensor.TensorArray",
    "text_extensions_for_pandas.array.tensor.TensorDtype"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestTensor.test_factorize": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.array",
    "text_extensions_for_pandas.array.tensor.TensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestTensor.test_inferred_type": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.tensor.TensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestTensor.test_int_tensor_selection": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "numpy.testing.assert_array_equal",
    "pandas.Series",
    "text_extensions_for_pandas.array.tensor.TensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestTensor.test_isna": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.testing.assert_equal",
    "object",
    "text_extensions_for_pandas.array.tensor.TensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestTensor.test_numpy_properties": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "numpy.arange",
    "text_extensions_for_pandas.array.tensor.TensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestTensor.test_operations": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all",
    "numpy.any",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "text_extensions_for_pandas.array.tensor.TensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestTensor.test_repr": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Series",
    "repr",
    "text_extensions_for_pandas.array.tensor.TensorArray",
    "text_extensions_for_pandas.array.test_tensor.textwrap"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestTensor.test_series_to_str": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Series",
    "text_extensions_for_pandas.array.tensor.TensorArray",
    "text_extensions_for_pandas.array.test_tensor.textwrap"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestTensor.test_setitem": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal",
    "text_extensions_for_pandas.array.tensor.TensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestTensor.test_slice": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "text_extensions_for_pandas.array.tensor.TensorArray",
    "text_extensions_for_pandas.array.tensor.TensorElement"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestTensor.test_sum": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "pandas.DataFrame",
    "text_extensions_for_pandas.array.tensor.TensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestTensor.test_take": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.testing.assert_array_equal",
    "text_extensions_for_pandas.array.tensor.TensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.TestTensor.test_to_str": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "numpy.array",
    "str",
    "text_extensions_for_pandas.array.tensor.TensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor._all_arithmetic_operators": {
  "data": {
   "lineno": 818
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.array.test_tensor.all_arithmetic_operators": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_tensor._all_arithmetic_operators",
    "text_extensions_for_pandas.array.test_tensor.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.all_compare_operators": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_tensor.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.all_data": {
  "data": {
   "shadows": "pandas.tests.extension.conftest.all_data"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_tensor.all_numeric_reductions": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_tensor.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.as_array": {
  "data": {
   "shadows": "pandas.tests.extension.conftest.as_array"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_tensor.as_frame": {
  "data": {
   "shadows": "pandas.tests.extension.conftest.as_frame"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_tensor.as_series": {
  "data": {
   "shadows": "pandas.tests.extension.conftest.as_series"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_tensor.base": {
  "data": {
   "shadows": "pandas.tests.extension.base"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_tensor.box_in_series": {
  "data": {
   "shadows": "pandas.tests.extension.conftest.box_in_series"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_tensor.data": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.array",
    "range",
    "text_extensions_for_pandas.array.test_tensor.dtype",
    "text_extensions_for_pandas.array.test_tensor.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.data_for_grouping": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.array",
    "text_extensions_for_pandas.array.test_tensor.dtype",
    "text_extensions_for_pandas.array.test_tensor.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.data_for_sorting": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.array",
    "text_extensions_for_pandas.array.test_tensor.dtype",
    "text_extensions_for_pandas.array.test_tensor.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.data_for_twos": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "numpy.ones",
    "pandas.array",
    "text_extensions_for_pandas.array.test_tensor.dtype",
    "text_extensions_for_pandas.array.test_tensor.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.data_missing": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.array",
    "text_extensions_for_pandas.array.test_tensor.dtype",
    "text_extensions_for_pandas.array.test_tensor.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.data_missing_for_sorting": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.array",
    "text_extensions_for_pandas.array.test_tensor.dtype",
    "text_extensions_for_pandas.array.test_tensor.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.data_repeated": {
  "data": {
   "shadows": "pandas.tests.extension.conftest.data_repeated"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_tensor.dtype": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.tensor.TensorDtype",
    "text_extensions_for_pandas.array.test_tensor.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.fillna_method": {
  "data": {
   "shadows": "pandas.tests.extension.conftest.fillna_method"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_tensor.groupby_apply_op": {
  "data": {
   "shadows": "pandas.tests.extension.conftest.groupby_apply_op"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_tensor.na_cmp": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.isnan",
    "text_extensions_for_pandas.array.test_tensor.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.na_value": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "numpy.nan",
    "text_extensions_for_pandas.array.test_tensor.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_tensor.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_tensor.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_tensor.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_tensor.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_tensor.pdt": {
  "data": {
   "shadows": "pandas.testing"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_tensor.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_tensor.read_table": {
  "data": {
   "shadows": "pyarrow.feather.read_table"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_tensor.sort_by_key": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_tensor.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_tensor.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_tensor.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_tensor.use_numpy": {
  "data": {
   "shadows": "pandas.tests.extension.conftest.use_numpy"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_tensor.write_feather": {
  "data": {
   "shadows": "pyarrow.feather.write_feather"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_token_span": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "text_extensions_for_pandas.array.test_token_span.unittest"
   ]
  },
  "type": "module"
 },
 "text_extensions_for_pandas.array.test_token_span.ABCPandasArray": {
  "data": {
   "shadows": "pandas.core.dtypes.generic.ABCPandasArray"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_token_span.ArrayTestBase": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.test_span.ArrayTestBase"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasArithmeticOps": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseArithmeticOpsTests",
    "text_extensions_for_pandas.array.test_token_span.pytest"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasBooleanReduce": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseBooleanReduceTests",
    "text_extensions_for_pandas.array.test_token_span.pytest"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasCasting": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseCastingTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasComparisonOps": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseComparisonOpsTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasComparisonOps._compare_other": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "int",
    "isinstance",
    "op",
    "text_extensions_for_pandas.array.test_token_span.data",
    "text_extensions_for_pandas.array.test_token_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasConstructors": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseConstructorsTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasConstructors.test_construct_empty_dataframe": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "super",
    "text_extensions_for_pandas.array.test_token_span.dtype",
    "text_extensions_for_pandas.array.test_token_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasConstructors.test_series_constructor_no_data_with_index": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_token_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasDtype": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseDtypeTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasGetitem": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseGetitemTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasGroupby": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseGroupbyTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasInterface": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseInterfaceTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasMethods": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseMethodsTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasMethods.test_combine_add": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_token_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasMethods.test_container_shift": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_token_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasMethods.test_equals": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.array",
    "pandas.core.dtypes.generic.ABCPandasArray",
    "text_extensions_for_pandas.array.test_token_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasMethods.test_factorize_empty": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "TypeError",
    "super",
    "text_extensions_for_pandas.array.test_token_span.data",
    "text_extensions_for_pandas.array.test_token_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasMethods.test_not_hashable": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_token_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasMethods.test_repeat": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "TypeError",
    "pandas.tests.extension.conftest.as_series",
    "pandas.tests.extension.conftest.use_numpy",
    "super",
    "text_extensions_for_pandas.array.test_token_span.data",
    "text_extensions_for_pandas.array.test_token_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasMethods.test_searchsorted": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "pandas.tests.extension.conftest.as_series",
    "super",
    "text_extensions_for_pandas.array.test_token_span.data_for_sorting",
    "text_extensions_for_pandas.array.test_token_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasMethods.test_shift_non_empty_array": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_token_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasMethods.test_value_counts": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_token_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasMethods.test_value_counts_with_normalize": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_token_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasMethods.test_where_series": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_token_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasMissing": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseMissingTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasNumericReduce": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseNumericReduceTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasNumericReduce.check_reduce": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "TokenSpan",
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasParsing": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseParsingTests",
    "text_extensions_for_pandas.array.test_token_span.pytest"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasPrinting": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BasePrintingTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasReshaping": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseReshapingTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasReshaping.test_concat_with_reindex": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_token_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasReshaping.test_unstack": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_token_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasSetitem": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseSetitemTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasUnaryOps": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "pandas.tests.extension.base.BaseUnaryOpsTests"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_token_span.TestPandasUnaryOps.test_invert": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_token_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanArrayIOTests": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_span.ArrayTestBase"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanArrayIOTests.do_roundtrip": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "pandas.read_feather",
    "pandas.testing.assert_frame_equal",
    "text_extensions_for_pandas.array.test_token_span.os",
    "text_extensions_for_pandas.array.test_token_span.tempfile"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanArrayIOTests.test_feather": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "TokenSpanArray",
    "len",
    "pandas.DataFrame",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanArrayTest": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_span.ArrayTestBase"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanArrayTest._make_spans": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "TokenSpanArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanArrayTest.test_add": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "Span",
    "SpanArray._from_sequence",
    "TokenSpan",
    "TokenSpanArray._from_sequence"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanArrayTest.test_as_frame": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanArrayTest.test_begin_and_end": {
  "data": {
   "lineno": 348
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanArrayTest.test_concat_same_type": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "TokenSpanArray._concat_same_type"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanArrayTest.test_copy": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "TokenSpan.make_null"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanArrayTest.test_create": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "TokenSpanArray",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanArrayTest.test_dtype": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanArrayTest.test_equals": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "SpanArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanArrayTest.test_from_factorized": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "TokenSpanArray._from_factorized",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanArrayTest.test_from_sequence": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "TokenSpanArray._from_sequence",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanArrayTest.test_getitem": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanArrayTest.test_len": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanArrayTest.test_less_than": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "TokenSpan",
    "TokenSpanArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanArrayTest.test_make_array": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "TokenSpanArray.make_array",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanArrayTest.test_normalized_covered_text": {
  "data": {
   "lineno": 353
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanArrayTest.test_not_equals": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanArrayTest.test_nulls": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "TokenSpan.make_null"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanArrayTest.test_reduce": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "TokenSpan",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanArrayTest.test_setitem": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanArrayTest.test_take": {
  "data": {
   "lineno": 249
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanTest": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_span.ArrayTestBase"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanTest.test_add": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "Span",
    "TokenSpan"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanTest.test_create": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "TokenSpan",
    "TokenSpan.NULL_OFFSET_VALUE",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanTest.test_equals": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "Span",
    "TokenSpan"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanTest.test_hash": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "TokenSpan"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanTest.test_less_than": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "TokenSpan"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.TokenSpanTest.test_repr": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "SpanArray",
    "TokenSpan",
    "repr"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span._gen_spans": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "Span",
    "SpanDtype",
    "TokenSpan",
    "len",
    "pandas.array",
    "range",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.all_compare_operators": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_token_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.all_data": {
  "data": {
   "shadows": "pandas.tests.extension.conftest.all_data"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_token_span.all_numeric_reductions": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_token_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.as_array": {
  "data": {
   "shadows": "pandas.tests.extension.conftest.as_array"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_token_span.as_frame": {
  "data": {
   "shadows": "pandas.tests.extension.conftest.as_frame"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_token_span.as_series": {
  "data": {
   "shadows": "pandas.tests.extension.conftest.as_series"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_token_span.base": {
  "data": {
   "shadows": "pandas.tests.extension.base"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_token_span.box_in_series": {
  "data": {
   "shadows": "pandas.tests.extension.conftest.box_in_series"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_token_span.data": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "list",
    "pandas.array",
    "text_extensions_for_pandas.array.test_token_span._gen_spans",
    "text_extensions_for_pandas.array.test_token_span.dtype",
    "text_extensions_for_pandas.array.test_token_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.data_for_grouping": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "TokenSpan",
    "TokenSpan.NULL_OFFSET_VALUE",
    "pandas.array",
    "range",
    "text_extensions_for_pandas.array.test_token_span._gen_spans",
    "text_extensions_for_pandas.array.test_token_span.dtype",
    "text_extensions_for_pandas.array.test_token_span.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.data_for_sorting": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "len",
    "pandas.array",
    "range",
    "text_extensions_for_pandas.array.test_token_span._gen_spans",
    "text_extensions_for_pandas.array.test_token_span.dtype",
    "text_extensions_for_pandas.array.test_token_span.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.data_missing": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "TokenSpan",
    "TokenSpan.NULL_OFFSET_VALUE",
    "pandas.array",
    "range",
    "text_extensions_for_pandas.array.test_token_span._gen_spans",
    "text_extensions_for_pandas.array.test_token_span.dtype",
    "text_extensions_for_pandas.array.test_token_span.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.data_missing_for_sorting": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "TokenSpan",
    "TokenSpan.NULL_OFFSET_VALUE",
    "len",
    "pandas.array",
    "range",
    "text_extensions_for_pandas.array.test_token_span._gen_spans",
    "text_extensions_for_pandas.array.test_token_span.dtype",
    "text_extensions_for_pandas.array.test_token_span.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.data_repeated": {
  "data": {
   "shadows": "pandas.tests.extension.conftest.data_repeated"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_token_span.dtype": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "TokenSpanDtype",
    "text_extensions_for_pandas.array.test_token_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.fillna_method": {
  "data": {
   "shadows": "pandas.tests.extension.conftest.fillna_method"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_token_span.groupby_apply_op": {
  "data": {
   "shadows": "pandas.tests.extension.conftest.groupby_apply_op"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_token_span.na_cmp": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "TokenSpan.NULL_OFFSET_VALUE",
    "text_extensions_for_pandas.array.test_token_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.na_value": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "TokenSpan",
    "TokenSpan.NULL_OFFSET_VALUE",
    "range",
    "text_extensions_for_pandas.array.test_token_span._gen_spans",
    "text_extensions_for_pandas.array.test_token_span.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_token_span.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_token_span.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_token_span.sort_by_key": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.test_token_span.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.array.test_token_span.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_token_span.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.array.test_token_span.use_numpy": {
  "data": {
   "shadows": "pandas.tests.extension.conftest.use_numpy"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io": {
  "data": {},
  "type": "module"
 },
 "text_extensions_for_pandas.io.__all__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.io.bert": {
  "data": {
   "shadows": "text_extensions_for_pandas.io.bert"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.conll": {
  "data": {
   "shadows": "text_extensions_for_pandas.io.conll"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.conll.SpanArray": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.span.SpanArray"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.conll.SpanDtype": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.span.SpanDtype"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.conll.TokenSpan": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.token_span.TokenSpan"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.conll.TokenSpanArray": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.token_span.TokenSpanArray"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.conll._CONLL_DOC_SEPARATOR": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.io.conll._LEFT_PAREN_REGEX": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.io.conll._PUNCT_OR_RIGHT_PAREN_REGEX": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.io.conll._SPACE_AFTER_MATCH_FN": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.io.conll._SPACE_BEFORE_MATCH_FN": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.io.conll._SentenceData": {
  "data": {
   "lineno": 75
  },
  "type": "class"
 },
 "text_extensions_for_pandas.io.conll._SentenceData.__init__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "bool",
    "str",
    "text_extensions_for_pandas.io.conll._make_empty_meta_values"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.conll._SentenceData.add_line": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.conll._SentenceData.line_nums": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.conll._SentenceData.num_tokens": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "int",
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.conll._SentenceData.token_metadata": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.conll._SentenceData.tokens": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.conll._doc_to_df": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "bool",
    "len",
    "numpy.array",
    "numpy.bool",
    "numpy.concatenate",
    "numpy.cumsum",
    "numpy.logical_or",
    "numpy.ravel",
    "numpy.repeat",
    "numpy.roll",
    "numpy.where",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.Series",
    "range",
    "str",
    "text_extensions_for_pandas.array.span.SpanArray",
    "text_extensions_for_pandas.array.token_span.TokenSpanArray",
    "text_extensions_for_pandas.io.conll._SPACE_AFTER_MATCH_FN",
    "text_extensions_for_pandas.io.conll._SPACE_BEFORE_MATCH_FN",
    "text_extensions_for_pandas.io.conll._SentenceData",
    "text_extensions_for_pandas.io.conll._make_empty_meta_values"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.conll._iob_to_iob2": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "bool",
    "len",
    "pandas.DataFrame",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.conll._make_empty_meta_values": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "bool",
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.conll._output_doc_to_df": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.conll._parse_conll_file": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "bool",
    "len",
    "open",
    "range",
    "str",
    "text_extensions_for_pandas.io.conll._CONLL_DOC_SEPARATOR",
    "text_extensions_for_pandas.io.conll._SentenceData"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.conll._parse_conll_output_file": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "open",
    "pandas.DataFrame",
    "print",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.conll._prep_for_stacking": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "object",
    "pandas.DataFrame",
    "str",
    "text_extensions_for_pandas.array.span.SpanDtype"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.conll.add_token_classes": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "len",
    "list",
    "pandas.Categorical",
    "pandas.CategoricalDtype",
    "pandas.DataFrame",
    "range",
    "str",
    "text_extensions_for_pandas.io.conll.make_iob_tag_categories"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.conll.combine_folds": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.concat",
    "range",
    "str",
    "text_extensions_for_pandas.io.conll._prep_for_stacking"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.conll.compute_accuracy_by_document": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "isinstance",
    "len",
    "list",
    "pandas.DataFrame",
    "range",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.conll.compute_global_accuracy": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.conll.conll_2003_output_to_dataframes": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "bool",
    "pandas.DataFrame",
    "str",
    "text_extensions_for_pandas.io.conll._iob_to_iob2",
    "text_extensions_for_pandas.io.conll._output_doc_to_df",
    "text_extensions_for_pandas.io.conll._parse_conll_output_file",
    "zip"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.conll.conll_2003_to_dataframes": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "bool",
    "pandas.DataFrame",
    "str",
    "text_extensions_for_pandas.io.conll._doc_to_df",
    "text_extensions_for_pandas.io.conll._iob_to_iob2",
    "text_extensions_for_pandas.io.conll._parse_conll_file"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.conll.decode_class_labels": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.conll.iob_to_spans": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "len",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "str",
    "text_extensions_for_pandas.array.token_span.TokenSpanArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.conll.make_iob_tag_categories": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "int",
    "len",
    "pandas.CategoricalDtype",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.conll.maybe_download_conll_data": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "download_file",
    "str",
    "text_extensions_for_pandas.io.conll.os"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.conll.maybe_download_conll_data.download_file": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "open",
    "text_extensions_for_pandas.io.conll.requests"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.conll.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.conll.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.conll.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.conll.regex": {
  "data": {
   "shadows": "regex"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.conll.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.conll.spans_to_iob": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.full",
    "numpy.int64",
    "numpy.ndarray",
    "numpy.zeros_like",
    "object",
    "pandas.Categorical.from_codes",
    "pandas.CategoricalDtype",
    "pandas.DataFrame",
    "pandas.Series",
    "str",
    "text_extensions_for_pandas.array.token_span.TokenSpan",
    "text_extensions_for_pandas.array.token_span.TokenSpanArray",
    "text_extensions_for_pandas.array.token_span.TokenSpanArray.make_array",
    "zip"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.spacy": {
  "data": {
   "shadows": "text_extensions_for_pandas.io.spacy"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.spacy.SpanArray": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.span.SpanArray"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.spacy.SpanDtype": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.span.SpanDtype"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.spacy.TokenSpanArray": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.token_span.TokenSpanArray"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.spacy.TokenSpanDtype": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.token_span.TokenSpanDtype"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.spacy._make_sentences_series": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "len",
    "numpy.full",
    "numpy.int",
    "pandas.Series",
    "text_extensions_for_pandas.array.span.SpanArray",
    "text_extensions_for_pandas.array.token_span.TokenSpanArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.spacy.make_tokens": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "pandas.Series",
    "str",
    "text_extensions_for_pandas.array.span.SpanArray",
    "tokenizer"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.spacy.make_tokens_and_features": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "language_model",
    "len",
    "list",
    "numpy.array",
    "pandas.Categorical",
    "pandas.CategoricalDtype",
    "pandas.DataFrame",
    "pandas.Int32Dtype",
    "pandas.Series",
    "pandas.array",
    "range",
    "str",
    "text_extensions_for_pandas.array.span.SpanArray",
    "text_extensions_for_pandas.array.token_span.TokenSpanArray.from_char_offsets",
    "text_extensions_for_pandas.io.spacy._make_sentences_series"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.spacy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.spacy.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.spacy.render_parse_tree": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "str",
    "text_extensions_for_pandas.io.spacy.token_features_to_tree"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.spacy.spacy.displacy": {
  "data": {
   "shadows": "spacy.displacy"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.spacy.token_features_to_tree": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "_get_text",
    "len",
    "pandas.DataFrame",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.spacy.token_features_to_tree._get_text": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.zeros",
    "str",
    "text_extensions_for_pandas.array.span.SpanDtype",
    "text_extensions_for_pandas.array.token_span.TokenSpanDtype"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.test_bert": {
  "data": {},
  "type": "module"
 },
 "text_extensions_for_pandas.io.test_bert.BertModel": {
  "data": {
   "shadows": "transformers.BertModel"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.test_bert.BertTokenizerFast": {
  "data": {
   "shadows": "transformers.BertTokenizerFast"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.test_bert.TensorArray": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.tensor.TensorArray"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.test_bert.TestTokenize": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "text_extensions_for_pandas.io.test_bert.unittest"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.io.test_bert.TestTokenize._embedding_to_int": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "int",
    "pandas.DataFrame",
    "staticmethod",
    "str",
    "text_extensions_for_pandas.array.tensor.TensorArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.test_bert.TestTokenize.setUp": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pandas.set_option"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.test_bert.TestTokenize.setUpClass": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "classmethod",
    "transformers.BertModel.from_pretrained",
    "transformers.BertTokenizerFast.from_pretrained"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.test_bert.TestTokenize.tearDown": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "pandas.reset_option"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.test_bert.TestTokenize.test_add_embeddings": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "add_embeddings",
    "make_bert_tokens",
    "str",
    "text_extensions_for_pandas.io.test_bert.textwrap"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.test_bert.TestTokenize.test_conll_to_bert": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "align_bert_tokens_to_corpus_tokens",
    "conll_to_bert",
    "str",
    "text_extensions_for_pandas.io.conll.conll_2003_to_dataframes",
    "text_extensions_for_pandas.io.conll.make_iob_tag_categories",
    "text_extensions_for_pandas.io.test_bert.textwrap"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.test_bert.TestTokenize.test_make_bert_tokens": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "any",
    "len",
    "make_bert_tokens",
    "pandas.DataFrame",
    "set"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.test_bert.TestTokenize.test_seq_to_windows": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "numpy.arange",
    "range",
    "seq_to_windows",
    "windows_to_seq"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.test_bert.conll_2003_to_dataframes": {
  "data": {
   "shadows": "text_extensions_for_pandas.io.conll.conll_2003_to_dataframes"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.test_bert.make_iob_tag_categories": {
  "data": {
   "shadows": "text_extensions_for_pandas.io.conll.make_iob_tag_categories"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.test_bert.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.test_bert.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.test_bert.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.test_bert.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.test_conll": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "text_extensions_for_pandas.io.test_conll.spacy",
    "text_extensions_for_pandas.io.test_conll.unittest"
   ]
  },
  "type": "module"
 },
 "text_extensions_for_pandas.io.test_conll.CoNLLTest": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "text_extensions_for_pandas.io.test_conll.unittest"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.io.test_conll.CoNLLTest.setUp": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.test_conll.CoNLLTest.tearDown": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.test_conll.CoNLLTest.test_add_token_classes": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "add_token_classes",
    "str",
    "text_extensions_for_pandas.io.spacy.make_tokens_and_features",
    "text_extensions_for_pandas.io.test_conll._SPACY_LANGUAGE_MODEL",
    "text_extensions_for_pandas.io.test_conll.textwrap"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.test_conll.CoNLLTest.test_combine_folds": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "SpanArray",
    "combine_folds",
    "str",
    "text_extensions_for_pandas.io.test_conll.textwrap"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.test_conll.CoNLLTest.test_compute_accuracy": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "compute_accuracy_by_document",
    "compute_global_accuracy",
    "conll_2003_output_to_dataframes",
    "conll_2003_to_dataframes",
    "str",
    "text_extensions_for_pandas.io.test_conll.textwrap"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.test_conll.CoNLLTest.test_conll_2003_output_to_dataframes": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "conll_2003_output_to_dataframes",
    "conll_2003_to_dataframes",
    "len",
    "repr",
    "text_extensions_for_pandas.io.test_conll.textwrap"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.test_conll.CoNLLTest.test_conll_2003_to_dataframes": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "conll_2003_to_dataframes",
    "len",
    "repr",
    "text_extensions_for_pandas.io.test_conll.textwrap"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.test_conll.CoNLLTest.test_conll_2003_to_dataframes_multi_field": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "conll_2003_to_dataframes",
    "repr",
    "text_extensions_for_pandas.io.test_conll.textwrap"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.test_conll.CoNLLTest.test_iob_to_spans": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "iob_to_spans",
    "str",
    "text_extensions_for_pandas.io.spacy.make_tokens_and_features",
    "text_extensions_for_pandas.io.test_conll._SPACY_LANGUAGE_MODEL",
    "text_extensions_for_pandas.io.test_conll.textwrap"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.test_conll.CoNLLTest.test_spans_to_iob": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "iob_to_spans",
    "spans_to_iob",
    "text_extensions_for_pandas.io.spacy.make_tokens_and_features",
    "text_extensions_for_pandas.io.test_conll._SPACY_LANGUAGE_MODEL",
    "text_extensions_for_pandas.io.test_conll.textwrap"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.test_conll._SPACY_LANGUAGE_MODEL": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.io.test_conll.make_tokens_and_features": {
  "data": {
   "shadows": "text_extensions_for_pandas.io.spacy.make_tokens_and_features"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.test_conll.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.test_conll.spacy": {
  "data": {
   "shadows": "spacy"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.test_conll.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.test_conll.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.test_spacy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "text_extensions_for_pandas.io.test_spacy.spacy",
    "text_extensions_for_pandas.io.test_spacy.unittest"
   ]
  },
  "type": "module"
 },
 "text_extensions_for_pandas.io.test_spacy.English": {
  "data": {
   "shadows": "spacy.lang.en.English"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.test_spacy.IOTest": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "text_extensions_for_pandas.io.test_spacy.unittest"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.io.test_spacy.IOTest.test_make_tokens": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "make_tokens",
    "repr",
    "spacy.lang.en.English",
    "text_extensions_for_pandas.io.test_spacy.textwrap"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.test_spacy.IOTest.test_make_tokens_and_features": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "make_tokens_and_features",
    "str",
    "text_extensions_for_pandas.io.test_spacy._SPACY_LANGUAGE_MODEL",
    "text_extensions_for_pandas.io.test_spacy.textwrap"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.test_spacy.IOTest.test_token_features_to_tree": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "make_tokens_and_features",
    "text_extensions_for_pandas.io.test_spacy._SPACY_LANGUAGE_MODEL",
    "token_features_to_tree"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.test_spacy._SPACY_LANGUAGE_MODEL": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.io.test_spacy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.test_spacy.spacy": {
  "data": {
   "shadows": "spacy"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.test_spacy.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.test_spacy.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson": {
  "data": {},
  "type": "module"
 },
 "text_extensions_for_pandas.io.watson.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.io.watson.nlu": {
  "data": {
   "shadows": "text_extensions_for_pandas.io.watson.nlu"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.nlu.Span": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.span.Span"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.nlu.SpanArray": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.span.SpanArray"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.nlu.TokenSpanArray": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.token_span.TokenSpanArray"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.nlu._entities_schema": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.io.watson.nlu._entity_mentions_schema": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.io.watson.nlu._keywords_schema": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.io.watson.nlu._make_entity_dataframes": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.DataFrame",
    "pyarrow.Table.from_arrays",
    "pyarrow.concat_arrays",
    "str",
    "text_extensions_for_pandas.io.watson.util.find_column",
    "text_extensions_for_pandas.io.watson.util.make_char_span",
    "text_extensions_for_pandas.io.watson.util.make_table",
    "zip"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.nlu._make_relations_dataframe": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "all",
    "enumerate",
    "len",
    "list",
    "pandas.DataFrame",
    "pyarrow.array",
    "pyarrow.concat_arrays",
    "pyarrow.types.is_list",
    "range",
    "text_extensions_for_pandas.io.watson.nlu.warnings",
    "text_extensions_for_pandas.io.watson.util.find_column",
    "text_extensions_for_pandas.io.watson.util.make_char_span",
    "text_extensions_for_pandas.io.watson.util.make_table"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.nlu._make_relations_dataframe_zero_copy": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "len",
    "numpy.cumsum",
    "numpy.insert",
    "numpy.unique",
    "pandas.DataFrame",
    "pyarrow.ListArray.from_arrays",
    "pyarrow.array",
    "pyarrow.concat_arrays",
    "pyarrow.types.is_list",
    "range",
    "text_extensions_for_pandas.io.watson.util.make_table"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.nlu._make_syntax_dataframes": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "text_extensions_for_pandas.array.token_span.TokenSpanArray.align_to_tokens",
    "text_extensions_for_pandas.io.watson.util.find_column",
    "text_extensions_for_pandas.io.watson.util.make_char_span",
    "text_extensions_for_pandas.io.watson.util.make_table"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.nlu._merge_syntax_dataframes": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "text_extensions_for_pandas.spanner.contain_join"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.nlu._relations_schema": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.io.watson.nlu._semantic_roles_schema": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.io.watson.nlu._syntax_schema": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.io.watson.nlu.contain_join": {
  "data": {
   "shadows": "text_extensions_for_pandas.spanner.contain_join"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.nlu.make_span_from_entities": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "any",
    "len",
    "pandas.DataFrame",
    "str",
    "text_extensions_for_pandas.array.span.SpanArray",
    "text_extensions_for_pandas.array.token_span.TokenSpanArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.nlu.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.nlu.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.nlu.parse_response": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "pandas.DataFrame",
    "pandas.concat",
    "str",
    "text_extensions_for_pandas.array.span.SpanArray",
    "text_extensions_for_pandas.io.watson.nlu._entities_schema",
    "text_extensions_for_pandas.io.watson.nlu._entity_mentions_schema",
    "text_extensions_for_pandas.io.watson.nlu._keywords_schema",
    "text_extensions_for_pandas.io.watson.nlu._make_entity_dataframes",
    "text_extensions_for_pandas.io.watson.nlu._make_relations_dataframe",
    "text_extensions_for_pandas.io.watson.nlu._make_syntax_dataframes",
    "text_extensions_for_pandas.io.watson.nlu._merge_syntax_dataframes",
    "text_extensions_for_pandas.io.watson.nlu._relations_schema",
    "text_extensions_for_pandas.io.watson.nlu._semantic_roles_schema",
    "text_extensions_for_pandas.io.watson.nlu._syntax_schema",
    "text_extensions_for_pandas.io.watson.nlu.warnings",
    "text_extensions_for_pandas.io.watson.util.apply_schema",
    "text_extensions_for_pandas.io.watson.util.make_dataframe"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.nlu.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.nlu.util": {
  "data": {
   "shadows": "text_extensions_for_pandas.io.watson.util"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.nlu.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.tables": {
  "data": {
   "shadows": "text_extensions_for_pandas.io.watson.tables"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.test_nlu": {
  "data": {},
  "type": "module"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.CategoriesOptions": {
  "data": {
   "shadows": "ibm_watson.natural_language_understanding_v1.CategoriesOptions"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.ConceptsOptions": {
  "data": {
   "shadows": "ibm_watson.natural_language_understanding_v1.ConceptsOptions"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.EmotionOptions": {
  "data": {
   "shadows": "ibm_watson.natural_language_understanding_v1.EmotionOptions"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.EntitiesOptions": {
  "data": {
   "shadows": "ibm_watson.natural_language_understanding_v1.EntitiesOptions"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.Features": {
  "data": {
   "shadows": "ibm_watson.natural_language_understanding_v1.Features"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.IAMAuthenticator": {
  "data": {
   "shadows": "ibm_cloud_sdk_core.authenticators.IAMAuthenticator"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.KeywordsOptions": {
  "data": {
   "shadows": "ibm_watson.natural_language_understanding_v1.KeywordsOptions"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.NaturalLanguageUnderstandingV1": {
  "data": {
   "shadows": "ibm_watson.NaturalLanguageUnderstandingV1"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.RelationsOptions": {
  "data": {
   "shadows": "ibm_watson.natural_language_understanding_v1.RelationsOptions"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.SemanticRolesOptions": {
  "data": {
   "shadows": "ibm_watson.natural_language_understanding_v1.SemanticRolesOptions"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.SentimentOptions": {
  "data": {
   "shadows": "ibm_watson.natural_language_understanding_v1.SentimentOptions"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.SyntaxOptions": {
  "data": {
   "shadows": "ibm_watson.natural_language_understanding_v1.SyntaxOptions"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.SyntaxOptionsTokens": {
  "data": {
   "shadows": "ibm_watson.natural_language_understanding_v1.SyntaxOptionsTokens"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.TestWatson": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "text_extensions_for_pandas.io.watson.test_nlu.unittest"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.TestWatson.load_response_file": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "open",
    "staticmethod",
    "text_extensions_for_pandas.io.watson.test_nlu.json"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.TestWatson.parse_response_file": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "parse_response"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.TestWatson.setUp": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pandas.set_option",
    "text_extensions_for_pandas.io.watson.test_nlu.textwrap",
    "text_extensions_for_pandas.io.watson.test_nlu.warnings"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.TestWatson.tearDown": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pandas.reset_option",
    "text_extensions_for_pandas.io.watson.test_nlu.warnings"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.TestWatson.test_check_basic_response": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "len",
    "repr",
    "sorted",
    "text_extensions_for_pandas.io.watson.test_nlu.textwrap"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.TestWatson.test_empty_frames": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "UserWarning",
    "len",
    "list",
    "pandas.DataFrame",
    "parse_response",
    "str"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.TestWatson.test_entity_mentions": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "parse_response",
    "repr",
    "text_extensions_for_pandas.io.watson.test_nlu.textwrap"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.TestWatson.test_large_response": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.TestWatson.test_make_span_from_entities": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "len",
    "make_span_from_entities"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.TestWatson.test_response_entities": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "parse_response",
    "sorted"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.TestWatson.test_response_entities_with_emotion": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "parse_response",
    "repr",
    "text_extensions_for_pandas.io.watson.test_nlu.json",
    "text_extensions_for_pandas.io.watson.test_nlu.textwrap"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.TestWatson.test_response_keywords": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "parse_response",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.TestWatson.test_response_relations": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "parse_response"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.TestWatson.test_response_syntax": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "parse_response"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.TestWatsonApiHandling": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "text_extensions_for_pandas.io.watson.test_nlu.os",
    "text_extensions_for_pandas.io.watson.test_nlu.unittest"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.TestWatsonApiHandling._make_request": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "ValueError",
    "ibm_cloud_sdk_core.authenticators.IAMAuthenticator",
    "ibm_watson.NaturalLanguageUnderstandingV1",
    "ibm_watson.natural_language_understanding_v1.EntitiesOptions",
    "ibm_watson.natural_language_understanding_v1.Features",
    "ibm_watson.natural_language_understanding_v1.KeywordsOptions",
    "ibm_watson.natural_language_understanding_v1.RelationsOptions",
    "ibm_watson.natural_language_understanding_v1.SemanticRolesOptions",
    "ibm_watson.natural_language_understanding_v1.SyntaxOptions",
    "ibm_watson.natural_language_understanding_v1.SyntaxOptionsTokens",
    "staticmethod",
    "text_extensions_for_pandas.io.watson.test_nlu.os"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.TestWatsonApiHandling.setUpClass": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "classmethod",
    "text_extensions_for_pandas.io.watson.test_nlu.TestWatsonApiHandling"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.TestWatsonApiHandling.test_analyzed_text_present": {
  "data": {
   "lineno": 482
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.TestWatsonApiHandling.test_expected_features": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "dict",
    "list"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.TestWatsonApiHandling.test_expected_relations_response": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "all",
    "int",
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.TestWatsonApiHandling.test_expected_syntax_response": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "all",
    "int",
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.test_nlu.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.test_tables": {
  "data": {},
  "type": "module"
 },
 "text_extensions_for_pandas.io.watson.test_tables.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.test_tables.TestTables": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "text_extensions_for_pandas.io.watson.test_tables.unittest"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.io.watson.test_tables.TestTables.setUp": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "open",
    "pandas.set_option",
    "text_extensions_for_pandas.io.watson.test_tables.json"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.test_tables.TestTables.tearDown": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "pandas.reset_option"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.test_tables.TestTables.test_make_exploded_df": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "make_exploded_df",
    "parse_response",
    "repr"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.test_tables.TestTables.test_make_table": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "make_table",
    "pandas.__version__",
    "parse_response",
    "repr",
    "text_extensions_for_pandas.io.watson.test_tables.pytest"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.test_tables.TestTables.test_parse_response": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "len",
    "parse_response",
    "repr",
    "sorted"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.test_tables.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.test_tables.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.test_tables.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.test_tables.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.util": {
  "data": {},
  "type": "module"
 },
 "text_extensions_for_pandas.io.watson.util.SpanArray": {
  "data": {
   "shadows": "text_extensions_for_pandas.SpanArray"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.util.apply_schema": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "text_extensions_for_pandas.io.watson.util.schema_to_names"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.util.build_original_text": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "len",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.util.find_column": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.util.flatten_struct": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "pyarrow.ListArray.from_arrays",
    "pyarrow.types.is_list",
    "pyarrow.types.is_struct",
    "zip"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.util.make_char_span": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pyarrow.ChunkedArray",
    "pyarrow.concat_arrays",
    "pyarrow.types.is_list",
    "pyarrow.types.is_primitive",
    "text_extensions_for_pandas.SpanArray",
    "text_extensions_for_pandas.io.watson.util.build_original_text",
    "text_extensions_for_pandas.io.watson.util.warnings"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.util.make_dataframe": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "text_extensions_for_pandas.io.watson.util.make_table"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.util.make_table": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.types.is_struct",
    "text_extensions_for_pandas.io.watson.util.flatten_struct",
    "zip"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.util.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.util.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.io.watson.util.schema_to_names": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "text_extensions_for_pandas.io.watson.util.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.jupyter": {
  "data": {},
  "type": "module"
 },
 "text_extensions_for_pandas.jupyter.display": {
  "data": {
   "shadows": "IPython.display.display"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.jupyter.ipywidgets": {
  "data": {
   "shadows": "ipywidgets"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.jupyter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.jupyter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.jupyter.pretty_print_html": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "bool",
    "len",
    "numpy.bool",
    "numpy.zeros",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.jupyter.run_with_progress_bar": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "IPython.display.display",
    "fn",
    "int",
    "pandas.DataFrame",
    "range",
    "str",
    "text_extensions_for_pandas.jupyter.ipywidgets",
    "text_extensions_for_pandas.jupyter.time"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.jupyter.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner": {
  "data": {},
  "type": "module"
 },
 "text_extensions_for_pandas.spanner.__all__": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.spanner.adjacent_join": {
  "data": {
   "shadows": "text_extensions_for_pandas.spanner.join.adjacent_join"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.consolidate": {
  "data": {
   "shadows": "text_extensions_for_pandas.spanner.consolidate.consolidate"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.consolidate.SpanArray": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.span.SpanArray"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.consolidate.consolidate": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "len",
    "pandas.DataFrame",
    "range",
    "str",
    "text_extensions_for_pandas.array.span.SpanArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.spanner.consolidate.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.contain_join": {
  "data": {
   "shadows": "text_extensions_for_pandas.spanner.join.contain_join"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.extract": {
  "data": {},
  "type": "module"
 },
 "text_extensions_for_pandas.spanner.extract.SpanArray": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.span.SpanArray"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.extract.TokenSpanArray": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.token_span.TokenSpanArray"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.extract._SPARSE_DICT_ENTRIES": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.spanner.extract.extract_dict": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numpy.concatenate",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.isna",
    "pandas.merge",
    "range",
    "str",
    "text_extensions_for_pandas.array.span.SpanArray",
    "text_extensions_for_pandas.array.token_span.TokenSpanArray"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.spanner.extract.extract_regex_tok": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "matches_regex_f",
    "numpy.arange",
    "numpy.vectorize",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "range",
    "str",
    "text_extensions_for_pandas.array.span.SpanArray",
    "text_extensions_for_pandas.array.token_span.TokenSpanArray",
    "text_extensions_for_pandas.spanner.extract.regex"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.spanner.extract.load_dict": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "len",
    "max",
    "open",
    "pandas.DataFrame",
    "pandas.SparseArray",
    "range",
    "str",
    "text_extensions_for_pandas.spanner.extract._SPARSE_DICT_ENTRIES",
    "tokenizer"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.spanner.extract.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.extract.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.extract.regex": {
  "data": {
   "shadows": "regex"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.extract_dict": {
  "data": {
   "shadows": "text_extensions_for_pandas.spanner.extract.extract_dict"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.extract_regex_tok": {
  "data": {
   "shadows": "text_extensions_for_pandas.spanner.extract.extract_regex_tok"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.join": {
  "data": {},
  "type": "module"
 },
 "text_extensions_for_pandas.spanner.join.SpanDtype": {
  "data": {
   "shadows": "text_extensions_for_pandas.SpanDtype"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.join.TokenSpanDtype": {
  "data": {
   "shadows": "text_extensions_for_pandas.TokenSpanDtype"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.join.adjacent_join": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "int",
    "numpy.concatenate",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.spanner.join.contain_join": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "pandas.Series",
    "str",
    "text_extensions_for_pandas.spanner.join.overlap_join"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.spanner.join.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.join.overlap_join": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "_get_char_offsets",
    "_make_table",
    "int",
    "isinstance",
    "len",
    "max",
    "numpy.floor",
    "numpy.sum",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.merge",
    "str",
    "text_extensions_for_pandas.SpanDtype",
    "text_extensions_for_pandas.SpanDtype.name",
    "text_extensions_for_pandas.TokenSpanDtype",
    "text_extensions_for_pandas.TokenSpanDtype.name"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.spanner.join.overlap_join._get_char_offsets": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.spanner.join.overlap_join._make_table": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.spanner.join.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.lemmatize": {
  "data": {
   "shadows": "text_extensions_for_pandas.spanner.project.lemmatize"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.overlap_join": {
  "data": {
   "shadows": "text_extensions_for_pandas.spanner.join.overlap_join"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.project": {
  "data": {},
  "type": "module"
 },
 "text_extensions_for_pandas.spanner.project.Span": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.span.Span"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.project.SpanArray": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.span.SpanArray"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.project.TokenSpanArray": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.token_span.TokenSpanArray"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.project.lemmatize": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.Series",
    "range",
    "str",
    "text_extensions_for_pandas.array.span.Span",
    "text_extensions_for_pandas.array.span.SpanArray",
    "text_extensions_for_pandas.array.span.SpanArray.make_array",
    "text_extensions_for_pandas.array.token_span.TokenSpanArray.align_to_tokens"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.spanner.project.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.test_consolidate": {
  "data": {},
  "type": "module"
 },
 "text_extensions_for_pandas.spanner.test_consolidate.ConsolidateTest": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "text_extensions_for_pandas.util.TestBase"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.spanner.test_consolidate.ConsolidateTest.test_left_to_right": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "consolidate",
    "len",
    "list",
    "pandas.DataFrame",
    "range",
    "text_extensions_for_pandas.array.span.Span",
    "text_extensions_for_pandas.array.span.SpanArray._from_sequence"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.spanner.test_consolidate.Span": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.span.Span"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.test_consolidate.SpanArray": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.span.SpanArray"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.test_consolidate.TestBase": {
  "data": {
   "shadows": "text_extensions_for_pandas.util.TestBase"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.test_consolidate.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.test_consolidate.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.test_consolidate.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.test_extract": {
  "data": {},
  "type": "module"
 },
 "text_extensions_for_pandas.spanner.test_extract.English": {
  "data": {
   "shadows": "spacy.lang.en.English"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.test_extract.ExtractTest": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "text_extensions_for_pandas.util.TestBase"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.spanner.test_extract.ExtractTest._make_tokenizer": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "spacy.lang.en.English",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.spanner.test_extract.ExtractTest._read_file": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "len",
    "open",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.spanner.test_extract.ExtractTest.test_extract_dict": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "extract_dict",
    "load_dict",
    "repr",
    "text_extensions_for_pandas.io.spacy.make_tokens",
    "text_extensions_for_pandas.spanner.test_extract.textwrap"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.spanner.test_extract.ExtractTest.test_extract_regex_tok": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "extract_regex_tok",
    "repr",
    "text_extensions_for_pandas.io.spacy.make_tokens",
    "text_extensions_for_pandas.spanner.test_extract.re",
    "text_extensions_for_pandas.spanner.test_extract.textwrap"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.spanner.test_extract.ExtractTest.test_extract_regex_tok_len_2": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "extract_regex_tok",
    "repr",
    "text_extensions_for_pandas.io.spacy.make_tokens",
    "text_extensions_for_pandas.spanner.test_extract.re",
    "text_extensions_for_pandas.spanner.test_extract.textwrap"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.spanner.test_extract.ExtractTest.test_load_dict": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "load_dict",
    "spacy.lang.en.English",
    "str",
    "text_extensions_for_pandas.spanner.test_extract.textwrap"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.spanner.test_extract.TestBase": {
  "data": {
   "shadows": "text_extensions_for_pandas.util.TestBase"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.test_extract.make_tokens": {
  "data": {
   "shadows": "text_extensions_for_pandas.io.spacy.make_tokens"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.test_extract.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.test_extract.spacy": {
  "data": {
   "shadows": "spacy"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.test_extract.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.test_join": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "spacy.lang.en.English",
    "text_extensions_for_pandas.array.token_span.TokenSpanArray.from_char_offsets",
    "text_extensions_for_pandas.io.spacy.make_tokens",
    "text_extensions_for_pandas.spanner.extract.extract_regex_tok",
    "text_extensions_for_pandas.spanner.test_join._TEXT",
    "text_extensions_for_pandas.spanner.test_join._TOKENS_ARRAY",
    "text_extensions_for_pandas.spanner.test_join._TOKENS_SERIES",
    "text_extensions_for_pandas.spanner.test_join._tokenizer",
    "text_extensions_for_pandas.spanner.test_join.nlp",
    "text_extensions_for_pandas.spanner.test_join.regex",
    "text_extensions_for_pandas.spanner.test_join.unittest"
   ]
  },
  "type": "module"
 },
 "text_extensions_for_pandas.spanner.test_join.English": {
  "data": {
   "shadows": "spacy.lang.en.English"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.test_join.JoinTest": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "text_extensions_for_pandas.util.TestBase"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.spanner.test_join.JoinTest._make_empty_series": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "pandas.Series",
    "staticmethod",
    "text_extensions_for_pandas.array.token_span.TokenSpanArray",
    "text_extensions_for_pandas.spanner.test_join._TOKENS_ARRAY"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.spanner.test_join.JoinTest._make_empty_series_span_array": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "pandas.Series",
    "staticmethod",
    "text_extensions_for_pandas.SpanArray",
    "text_extensions_for_pandas.spanner.test_join._TEXT"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.spanner.test_join.JoinTest._make_join_arg": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "pandas.Series",
    "text_extensions_for_pandas.array.token_span.TokenSpan",
    "text_extensions_for_pandas.array.token_span.TokenSpanArray._from_sequence",
    "text_extensions_for_pandas.spanner.test_join._TOKENS_ARRAY"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.spanner.test_join.JoinTest._make_join_arg_span_array": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "pandas.Series",
    "text_extensions_for_pandas.SpanArray",
    "text_extensions_for_pandas.spanner.test_join._TEXT"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.spanner.test_join.JoinTest.setUp": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.token_span.TokenSpan.USE_TOKEN_OFFSETS_IN_REPR"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.spanner.test_join.JoinTest.tearDown": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "text_extensions_for_pandas.array.token_span.TokenSpan.USE_TOKEN_OFFSETS_IN_REPR"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.spanner.test_join.JoinTest.test_adjacent_join": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "str",
    "text_extensions_for_pandas.spanner.join.adjacent_join",
    "text_extensions_for_pandas.spanner.test_join._CAPS_WORD",
    "text_extensions_for_pandas.spanner.test_join._THE",
    "text_extensions_for_pandas.spanner.test_join.textwrap"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.spanner.test_join.JoinTest.test_contain_join": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "pandas.Series",
    "str",
    "text_extensions_for_pandas.array.token_span.TokenSpan",
    "text_extensions_for_pandas.array.token_span.TokenSpanArray._from_sequence",
    "text_extensions_for_pandas.spanner.join.contain_join",
    "text_extensions_for_pandas.spanner.test_join._CAPS_WORD",
    "text_extensions_for_pandas.spanner.test_join._TOKENS_ARRAY",
    "text_extensions_for_pandas.spanner.test_join.textwrap"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.spanner.test_join.JoinTest.test_overlaps_join_empty_input": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "len",
    "text_extensions_for_pandas.array.token_span.TokenSpanDtype",
    "text_extensions_for_pandas.spanner.join.overlap_join"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.spanner.test_join.JoinTest.test_overlaps_join_empty_input_span_array": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "len",
    "text_extensions_for_pandas.SpanDtype",
    "text_extensions_for_pandas.array.token_span.TokenSpanDtype",
    "text_extensions_for_pandas.spanner.join.overlap_join"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.spanner.test_join.JoinTest.test_overlaps_join_left_char_spans": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "str",
    "text_extensions_for_pandas.spanner.join.overlap_join",
    "text_extensions_for_pandas.spanner.test_join._CAPS_WORD",
    "text_extensions_for_pandas.spanner.test_join.textwrap"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.spanner.test_join.JoinTest.test_overlaps_join_left_spans_longer": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "str",
    "text_extensions_for_pandas.spanner.join.overlap_join",
    "text_extensions_for_pandas.spanner.test_join._CAPS_WORD",
    "text_extensions_for_pandas.spanner.test_join.textwrap"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.spanner.test_join.JoinTest.test_overlaps_join_right_spans_longer": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "str",
    "text_extensions_for_pandas.spanner.join.overlap_join",
    "text_extensions_for_pandas.spanner.test_join._CAPS_WORD",
    "text_extensions_for_pandas.spanner.test_join.textwrap"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.spanner.test_join.SpanArray": {
  "data": {
   "shadows": "text_extensions_for_pandas.SpanArray"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.test_join.SpanDtype": {
  "data": {
   "shadows": "text_extensions_for_pandas.SpanDtype"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.test_join.TestBase": {
  "data": {
   "shadows": "text_extensions_for_pandas.util.TestBase"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.test_join.TokenSpan": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.token_span.TokenSpan"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.test_join.TokenSpanArray": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.token_span.TokenSpanArray"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.test_join.TokenSpanDtype": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.token_span.TokenSpanDtype"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.test_join._CAPS_WORD": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.spanner.test_join._CAPS_WORDS": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.spanner.test_join._TEXT": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.spanner.test_join._THE": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.spanner.test_join._TOKENS_ARRAY": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.spanner.test_join._TOKENS_SERIES": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.spanner.test_join._TOKEN_SPANS_ARRAY": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.spanner.test_join._tokenizer": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.spanner.test_join.adjacent_join": {
  "data": {
   "shadows": "text_extensions_for_pandas.spanner.join.adjacent_join"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.test_join.contain_join": {
  "data": {
   "shadows": "text_extensions_for_pandas.spanner.join.contain_join"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.test_join.extract_regex_tok": {
  "data": {
   "shadows": "text_extensions_for_pandas.spanner.extract.extract_regex_tok"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.test_join.make_tokens": {
  "data": {
   "shadows": "text_extensions_for_pandas.io.spacy.make_tokens"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.test_join.nlp": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.spanner.test_join.overlap_join": {
  "data": {
   "shadows": "text_extensions_for_pandas.spanner.join.overlap_join"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.test_join.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.test_join.regex": {
  "data": {
   "shadows": "regex"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.test_join.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.test_join.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.test_project": {
  "data": {
   "symbols_in_volume": [
    "text_extensions_for_pandas.spanner.test_project.spacy"
   ]
  },
  "type": "module"
 },
 "text_extensions_for_pandas.spanner.test_project.ProjectTest": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "text_extensions_for_pandas.util.TestBase"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.spanner.test_project.ProjectTest.test_lemmatize": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "lemmatize",
    "text_extensions_for_pandas.io.spacy.make_tokens_and_features",
    "text_extensions_for_pandas.spanner.test_project._SPACY_LANGUAGE_MODEL"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.spanner.test_project.TestBase": {
  "data": {
   "shadows": "text_extensions_for_pandas.util.TestBase"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.test_project._SPACY_LANGUAGE_MODEL": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.spanner.test_project.make_tokens_and_features": {
  "data": {
   "shadows": "text_extensions_for_pandas.io.spacy.make_tokens_and_features"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.spanner.test_project.spacy": {
  "data": {
   "shadows": "spacy"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.test_jupyter": {
  "data": {
   "symbols_in_volume": [
    "text_extensions_for_pandas.io.spacy.make_tokens_and_features",
    "text_extensions_for_pandas.test_jupyter._SPACY_LANGUAGE_MODEL",
    "text_extensions_for_pandas.test_jupyter._TEST_TEXT",
    "text_extensions_for_pandas.test_jupyter.spacy"
   ]
  },
  "type": "module"
 },
 "text_extensions_for_pandas.test_jupyter.TestBase": {
  "data": {
   "shadows": "text_extensions_for_pandas.util.TestBase"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.test_jupyter.UtilTest": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "text_extensions_for_pandas.util.TestBase"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.test_jupyter.UtilTest.test_pretty_print_html": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "text_extensions_for_pandas.jupyter.pretty_print_html",
    "text_extensions_for_pandas.test_jupyter._TEST_TOKS"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.test_jupyter._SPACY_LANGUAGE_MODEL": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.test_jupyter._TEST_TEXT": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.test_jupyter._TEST_TOKS": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.test_jupyter.make_tokens_and_features": {
  "data": {
   "shadows": "text_extensions_for_pandas.io.spacy.make_tokens_and_features"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.test_jupyter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.test_jupyter.pretty_print_html": {
  "data": {
   "shadows": "text_extensions_for_pandas.jupyter.pretty_print_html"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.test_jupyter.spacy": {
  "data": {
   "shadows": "spacy"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.test_jupyter.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.test_jupyter.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.test_util": {
  "data": {},
  "type": "module"
 },
 "text_extensions_for_pandas.test_util.TestBase": {
  "data": {
   "shadows": "text_extensions_for_pandas.util.TestBase"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.test_util.UtilTest": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "text_extensions_for_pandas.util.TestBase"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.test_util.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.text_extensions_for_pandas.array.accessor": {
  "data": {
   "shadows": "text_extensions_for_pandas.array.accessor"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.util": {
  "data": {
   "symbols_in_volume": [
    "len",
    "text_extensions_for_pandas.util._ELLIPSIS"
   ]
  },
  "type": "module"
 },
 "text_extensions_for_pandas.util.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.util.TestBase": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "text_extensions_for_pandas.util.unittest"
   ]
  },
  "type": "class"
 },
 "text_extensions_for_pandas.util.TestBase._assertArrayEquals": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.all",
    "numpy.argwhere",
    "numpy.array",
    "numpy.ndarray",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.util._ELLIPSIS": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.util._ELLIPSIS_LEN": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "text_extensions_for_pandas.util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "text_extensions_for_pandas.util.to_int_array": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.int",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.ndarray",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "text_extensions_for_pandas.util.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 }
}