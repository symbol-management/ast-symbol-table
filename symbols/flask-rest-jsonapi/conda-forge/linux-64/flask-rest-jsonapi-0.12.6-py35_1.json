{
 "flask_rest_jsonapi": {
  "data": {},
  "type": "module"
 },
 "flask_rest_jsonapi.Api": {
  "data": {
   "shadows": "flask_rest_jsonapi.api.Api"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.JsonApiException": {
  "data": {
   "shadows": "flask_rest_jsonapi.exceptions.JsonApiException"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.ResourceDetail": {
  "data": {
   "shadows": "flask_rest_jsonapi.resource.ResourceDetail"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.ResourceList": {
  "data": {
   "shadows": "flask_rest_jsonapi.resource.ResourceList"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.ResourceRelationship": {
  "data": {
   "shadows": "flask_rest_jsonapi.resource.ResourceRelationship"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "flask_rest_jsonapi.api": {
  "data": {},
  "type": "module"
 },
 "flask_rest_jsonapi.api.Api": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "flask_rest_jsonapi.api.Api.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.api.Api.check_permissions": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "NotImplementedError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.api.Api.get_scope": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "flask_rest_jsonapi.api.inspect",
    "flask_rest_jsonapi.resource.ResourceList",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.api.Api.has_permission": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "flask_rest_jsonapi.api.Api.has_permission.wrapper": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.api.Api.has_permission.wrapper.decorated": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "functools.wraps",
    "view"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.api.Api.init_app": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "flask_rest_jsonapi.api.Api.oauth_manager": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.api.Api.permission_manager": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.api.Api.route": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "dict",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.api.Api.scope_setter": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "flask_rest_jsonapi.api.ResourceList": {
  "data": {
   "shadows": "flask_rest_jsonapi.resource.ResourceList"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.api.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.api.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.constants": {
  "data": {},
  "type": "module"
 },
 "flask_rest_jsonapi.constants.DEFAULT_PAGE_SIZE": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "flask_rest_jsonapi.data_layers": {
  "data": {},
  "type": "module"
 },
 "flask_rest_jsonapi.data_layers.alchemy": {
  "data": {},
  "type": "module"
 },
 "flask_rest_jsonapi.data_layers.alchemy.BaseDataLayer": {
  "data": {
   "shadows": "flask_rest_jsonapi.data_layers.base.BaseDataLayer"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.data_layers.alchemy.DEFAULT_PAGE_SIZE": {
  "data": {
   "shadows": "flask_rest_jsonapi.constants.DEFAULT_PAGE_SIZE"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.data_layers.alchemy.InstrumentedList": {
  "data": {
   "shadows": "sqlalchemy.orm.collections.InstrumentedList"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.data_layers.alchemy.InvalidSort": {
  "data": {
   "shadows": "flask_rest_jsonapi.exceptions.InvalidSort"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.data_layers.alchemy.JsonApiException": {
  "data": {
   "shadows": "flask_rest_jsonapi.exceptions.JsonApiException"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.data_layers.alchemy.NoResultFound": {
  "data": {
   "shadows": "sqlalchemy.orm.exc.NoResultFound"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.data_layers.alchemy.ObjectNotFound": {
  "data": {
   "shadows": "flask_rest_jsonapi.exceptions.ObjectNotFound"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.data_layers.alchemy.RelatedObjectNotFound": {
  "data": {
   "shadows": "flask_rest_jsonapi.exceptions.RelatedObjectNotFound"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.data_layers.alchemy.RelationNotFound": {
  "data": {
   "shadows": "flask_rest_jsonapi.exceptions.RelationNotFound"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "flask_rest_jsonapi.data_layers.base.BaseDataLayer"
   ]
  },
  "type": "class"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "Exception",
    "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer",
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.after_create_object": {
  "data": {
   "lineno": 466
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.after_create_relationship": {
  "data": {
   "lineno": 552
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.after_delete_object": {
  "data": {
   "lineno": 533
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.after_delete_relationship": {
  "data": {
   "lineno": 624
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.after_get_collection": {
  "data": {
   "lineno": 498
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.after_get_object": {
  "data": {
   "lineno": 482
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.after_get_relationship": {
  "data": {
   "lineno": 576
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.after_update_object": {
  "data": {
   "lineno": 516
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.after_update_relationship": {
  "data": {
   "lineno": 601
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.apply_relationships": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "flask_rest_jsonapi.schema.get_relationships",
    "getattr",
    "isinstance",
    "list",
    "setattr"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.before_create_object": {
  "data": {
   "lineno": 458
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.before_create_relationship": {
  "data": {
   "lineno": 541
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.before_delete_object": {
  "data": {
   "lineno": 525
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.before_delete_relationship": {
  "data": {
   "lineno": 614
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.before_get_collection": {
  "data": {
   "lineno": 490
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.before_get_object": {
  "data": {
   "lineno": 475
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.before_get_relationship": {
  "data": {
   "lineno": 565
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.before_update_object": {
  "data": {
   "lineno": 507
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.before_update_relationship": {
  "data": {
   "lineno": 590
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.create_object": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "Exception",
    "flask_rest_jsonapi.exceptions.JsonApiException",
    "flask_rest_jsonapi.schema.get_relationships",
    "str"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.create_relationship": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "Exception",
    "flask_rest_jsonapi.exceptions.JsonApiException",
    "flask_rest_jsonapi.exceptions.ObjectNotFound",
    "flask_rest_jsonapi.exceptions.RelationNotFound",
    "getattr",
    "hasattr",
    "isinstance",
    "list",
    "setattr",
    "str"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.delete_object": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "Exception",
    "flask_rest_jsonapi.exceptions.JsonApiException",
    "flask_rest_jsonapi.exceptions.ObjectNotFound",
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.delete_relationship": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "Exception",
    "flask_rest_jsonapi.exceptions.JsonApiException",
    "flask_rest_jsonapi.exceptions.ObjectNotFound",
    "flask_rest_jsonapi.exceptions.RelationNotFound",
    "getattr",
    "hasattr",
    "isinstance",
    "list",
    "setattr",
    "str"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.filter_query": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "flask_rest_jsonapi.data_layers.filtering.alchemy.create_filters"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.get_collection": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.get_object": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "Exception",
    "getattr",
    "sqlalchemy.inspection.inspect",
    "sqlalchemy.orm.exc.NoResultFound"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.get_related_object": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "flask_rest_jsonapi.exceptions.RelatedObjectNotFound",
    "getattr",
    "sqlalchemy.orm.exc.NoResultFound"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.get_relationship": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "flask_rest_jsonapi.exceptions.ObjectNotFound",
    "flask_rest_jsonapi.exceptions.RelationNotFound",
    "getattr",
    "hasattr",
    "isinstance",
    "sqlalchemy.orm.collections.InstrumentedList"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.paginate_query": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "flask_rest_jsonapi.constants.DEFAULT_PAGE_SIZE",
    "int"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.query": {
  "data": {
   "lineno": 451
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.sort_query": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "flask_rest_jsonapi.exceptions.InvalidSort",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.update_object": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "Exception",
    "flask_rest_jsonapi.exceptions.JsonApiException",
    "flask_rest_jsonapi.exceptions.ObjectNotFound",
    "flask_rest_jsonapi.schema.get_relationships",
    "getattr",
    "hasattr",
    "setattr",
    "str"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer.update_relationship": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "Exception",
    "flask_rest_jsonapi.exceptions.JsonApiException",
    "flask_rest_jsonapi.exceptions.ObjectNotFound",
    "flask_rest_jsonapi.exceptions.RelationNotFound",
    "getattr",
    "hasattr",
    "isinstance",
    "list",
    "setattr",
    "str"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.alchemy.create_filters": {
  "data": {
   "shadows": "flask_rest_jsonapi.data_layers.filtering.alchemy.create_filters"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.data_layers.alchemy.get_relationships": {
  "data": {
   "shadows": "flask_rest_jsonapi.schema.get_relationships"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.data_layers.alchemy.inspect": {
  "data": {
   "shadows": "sqlalchemy.inspection.inspect"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.data_layers.base": {
  "data": {},
  "type": "module"
 },
 "flask_rest_jsonapi.data_layers.base.BaseDataLayer": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "flask_rest_jsonapi.data_layers.base.BaseDataLayer.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.base.BaseDataLayer.after_create_object": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.base.BaseDataLayer.after_create_relationship": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.base.BaseDataLayer.after_delete_object": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.base.BaseDataLayer.after_delete_relationship": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.base.BaseDataLayer.after_get_collection": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.base.BaseDataLayer.after_get_object": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.base.BaseDataLayer.after_get_relationship": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.base.BaseDataLayer.after_update_object": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.base.BaseDataLayer.after_update_relationship": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.base.BaseDataLayer.before_create_object": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.base.BaseDataLayer.before_create_relationship": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.base.BaseDataLayer.before_delete_object": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.base.BaseDataLayer.before_delete_relationship": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.base.BaseDataLayer.before_get_collection": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.base.BaseDataLayer.before_get_object": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.base.BaseDataLayer.before_get_relationship": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.base.BaseDataLayer.before_update_object": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.base.BaseDataLayer.before_update_relationship": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.base.BaseDataLayer.bound_additional_methods": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "flask_rest_jsonapi.data_layers.base.types",
    "setattr"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.base.BaseDataLayer.create_object": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.base.BaseDataLayer.create_relationship": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.base.BaseDataLayer.delete_object": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.base.BaseDataLayer.delete_relationship": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.base.BaseDataLayer.get_collection": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.base.BaseDataLayer.get_object": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.base.BaseDataLayer.get_relationship": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.base.BaseDataLayer.query": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.base.BaseDataLayer.update_object": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.base.BaseDataLayer.update_relationship": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.base.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.data_layers.filtering": {
  "data": {},
  "type": "module"
 },
 "flask_rest_jsonapi.data_layers.filtering.alchemy": {
  "data": {},
  "type": "module"
 },
 "flask_rest_jsonapi.data_layers.filtering.alchemy.InvalidFilters": {
  "data": {
   "shadows": "flask_rest_jsonapi.exceptions.InvalidFilters"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.data_layers.filtering.alchemy.Node": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "flask_rest_jsonapi.data_layers.filtering.alchemy.Node.__init__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.filtering.alchemy.Node.column": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "AttributeError",
    "flask_rest_jsonapi.exceptions.InvalidFilters",
    "flask_rest_jsonapi.schema.get_model_field",
    "getattr",
    "property"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.filtering.alchemy.Node.name": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "flask_rest_jsonapi.exceptions.InvalidFilters",
    "property"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.filtering.alchemy.Node.op": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "KeyError",
    "flask_rest_jsonapi.exceptions.InvalidFilters",
    "property"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.filtering.alchemy.Node.operator": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "flask_rest_jsonapi.exceptions.InvalidFilters",
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.filtering.alchemy.Node.related_model": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "flask_rest_jsonapi.exceptions.InvalidFilters",
    "flask_rest_jsonapi.schema.get_model_field",
    "flask_rest_jsonapi.schema.get_relationships",
    "getattr",
    "property"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.filtering.alchemy.Node.related_schema": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "flask_rest_jsonapi.exceptions.InvalidFilters",
    "flask_rest_jsonapi.schema.get_relationships",
    "property"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.filtering.alchemy.Node.resolve": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "dict",
    "flask_rest_jsonapi.data_layers.filtering.alchemy.Node",
    "getattr",
    "isinstance",
    "sqlalchemy.and_",
    "sqlalchemy.not_",
    "sqlalchemy.or_"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.filtering.alchemy.Node.value": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "AttributeError",
    "flask_rest_jsonapi.exceptions.InvalidFilters",
    "getattr",
    "property"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.filtering.alchemy.and_": {
  "data": {
   "shadows": "sqlalchemy.and_"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.data_layers.filtering.alchemy.create_filters": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "flask_rest_jsonapi.data_layers.filtering.alchemy.Node"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.data_layers.filtering.alchemy.get_model_field": {
  "data": {
   "shadows": "flask_rest_jsonapi.schema.get_model_field"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.data_layers.filtering.alchemy.get_relationships": {
  "data": {
   "shadows": "flask_rest_jsonapi.schema.get_relationships"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.data_layers.filtering.alchemy.not_": {
  "data": {
   "shadows": "sqlalchemy.not_"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.data_layers.filtering.alchemy.or_": {
  "data": {
   "shadows": "sqlalchemy.or_"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.decorators": {
  "data": {},
  "type": "module"
 },
 "flask_rest_jsonapi.decorators.check_headers": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "flask_rest_jsonapi.decorators.check_headers.wrapper": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "flask.make_response",
    "flask.request.accept_mimetypes",
    "flask.request.headers",
    "flask.request.headers.get",
    "flask.request.method",
    "flask_rest_jsonapi.decorators.json",
    "flask_rest_jsonapi.errors.jsonapi_errors",
    "func",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.decorators.check_method_requirements": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "flask_rest_jsonapi.decorators.check_method_requirements.wrapper": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "Exception",
    "flask.request.method",
    "flask.request.method.lower",
    "func",
    "functools.wraps",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.decorators.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.decorators.jsonapi_errors": {
  "data": {
   "shadows": "flask_rest_jsonapi.errors.jsonapi_errors"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.decorators.make_response": {
  "data": {
   "shadows": "flask.make_response"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.decorators.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.decorators.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.errors": {
  "data": {},
  "type": "module"
 },
 "flask_rest_jsonapi.errors.jsonapi_errors": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "flask_rest_jsonapi.exceptions": {
  "data": {},
  "type": "module"
 },
 "flask_rest_jsonapi.exceptions.BadRequest": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "flask_rest_jsonapi.exceptions.JsonApiException"
   ]
  },
  "type": "class"
 },
 "flask_rest_jsonapi.exceptions.InvalidField": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "flask_rest_jsonapi.exceptions.BadRequest"
   ]
  },
  "type": "class"
 },
 "flask_rest_jsonapi.exceptions.InvalidField.__init__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "flask_rest_jsonapi.exceptions.InvalidFilters": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "flask_rest_jsonapi.exceptions.BadRequest"
   ]
  },
  "type": "class"
 },
 "flask_rest_jsonapi.exceptions.InvalidFilters.__init__": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "flask_rest_jsonapi.exceptions.InvalidInclude": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "flask_rest_jsonapi.exceptions.BadRequest"
   ]
  },
  "type": "class"
 },
 "flask_rest_jsonapi.exceptions.InvalidInclude.__init__": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "flask_rest_jsonapi.exceptions.InvalidSort": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "flask_rest_jsonapi.exceptions.BadRequest"
   ]
  },
  "type": "class"
 },
 "flask_rest_jsonapi.exceptions.InvalidSort.__init__": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "flask_rest_jsonapi.exceptions.InvalidType": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "flask_rest_jsonapi.exceptions.JsonApiException"
   ]
  },
  "type": "class"
 },
 "flask_rest_jsonapi.exceptions.JsonApiException": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "flask_rest_jsonapi.exceptions.JsonApiException.__init__": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "flask_rest_jsonapi.exceptions.JsonApiException.to_dict": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "flask_rest_jsonapi.exceptions.ObjectNotFound": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "flask_rest_jsonapi.exceptions.JsonApiException"
   ]
  },
  "type": "class"
 },
 "flask_rest_jsonapi.exceptions.RelatedObjectNotFound": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "flask_rest_jsonapi.exceptions.ObjectNotFound"
   ]
  },
  "type": "class"
 },
 "flask_rest_jsonapi.exceptions.RelationNotFound": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "flask_rest_jsonapi.exceptions.JsonApiException"
   ]
  },
  "type": "class"
 },
 "flask_rest_jsonapi.pagination": {
  "data": {},
  "type": "module"
 },
 "flask_rest_jsonapi.pagination.DEFAULT_PAGE_SIZE": {
  "data": {
   "shadows": "flask_rest_jsonapi.constants.DEFAULT_PAGE_SIZE"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.pagination.add_pagination_links": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "copy.copy",
    "flask_rest_jsonapi.constants.DEFAULT_PAGE_SIZE",
    "int",
    "math.ceil",
    "six.moves.urllib.parse.urlencode"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.pagination.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.pagination.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.pagination.urlencode": {
  "data": {
   "shadows": "six.moves.urllib.parse.urlencode"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.querystring": {
  "data": {},
  "type": "module"
 },
 "flask_rest_jsonapi.querystring.BadRequest": {
  "data": {
   "shadows": "flask_rest_jsonapi.exceptions.BadRequest"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.querystring.InvalidFilters": {
  "data": {
   "shadows": "flask_rest_jsonapi.exceptions.InvalidFilters"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.querystring.InvalidSort": {
  "data": {
   "shadows": "flask_rest_jsonapi.exceptions.InvalidSort"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.querystring.QueryStringManager": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "flask_rest_jsonapi.querystring.QueryStringManager.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.querystring.QueryStringManager._get_key_values": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "Exception",
    "flask_rest_jsonapi.exceptions.BadRequest"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.querystring.QueryStringManager.fields": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "property"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.querystring.QueryStringManager.filters": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "flask_rest_jsonapi.exceptions.InvalidFilters",
    "flask_rest_jsonapi.querystring.json",
    "property"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.querystring.QueryStringManager.include": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.querystring.QueryStringManager.pagination": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ValueError",
    "flask_rest_jsonapi.exceptions.BadRequest",
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.querystring.QueryStringManager.querystring": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.querystring.QueryStringManager.sorting": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "flask_rest_jsonapi.exceptions.InvalidSort",
    "flask_rest_jsonapi.schema.get_model_field",
    "flask_rest_jsonapi.schema.get_relationships",
    "property"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.querystring.get_model_field": {
  "data": {
   "shadows": "flask_rest_jsonapi.schema.get_model_field"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.querystring.get_relationships": {
  "data": {
   "shadows": "flask_rest_jsonapi.schema.get_relationships"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.querystring.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.resource": {
  "data": {},
  "type": "module"
 },
 "flask_rest_jsonapi.resource.BadRequest": {
  "data": {
   "shadows": "flask_rest_jsonapi.exceptions.BadRequest"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.resource.BaseDataLayer": {
  "data": {
   "shadows": "flask_rest_jsonapi.data_layers.base.BaseDataLayer"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.resource.IncorrectTypeError": {
  "data": {
   "shadows": "marshmallow_jsonapi.exceptions.IncorrectTypeError"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.resource.InvalidType": {
  "data": {
   "shadows": "flask_rest_jsonapi.exceptions.InvalidType"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.resource.JsonApiException": {
  "data": {
   "shadows": "flask_rest_jsonapi.exceptions.JsonApiException"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.resource.MethodView": {
  "data": {
   "shadows": "flask.views.MethodView"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.resource.MethodViewType": {
  "data": {
   "shadows": "flask.views.MethodViewType"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.resource.QSManager": {
  "data": {
   "shadows": "flask_rest_jsonapi.querystring.QueryStringManager"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.resource.RelationNotFound": {
  "data": {
   "shadows": "flask_rest_jsonapi.exceptions.RelationNotFound"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.resource.Resource": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "flask.views.MethodView"
   ]
  },
  "type": "class"
 },
 "flask_rest_jsonapi.resource.Resource.__new__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "flask_rest_jsonapi.resource.Resource",
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.resource.Resource.dispatch_request": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "dict",
    "flask.current_app.config",
    "flask.make_response",
    "flask.request.method",
    "flask.request.method.lower",
    "flask_rest_jsonapi.errors.jsonapi_errors",
    "flask_rest_jsonapi.exceptions.JsonApiException",
    "flask_rest_jsonapi.resource.json",
    "getattr",
    "isinstance",
    "method",
    "str",
    "tuple",
    "werkzeug.wrappers.Response"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.resource.ResourceDetail": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "flask_rest_jsonapi.resource.Resource",
    "flask_rest_jsonapi.resource.ResourceMeta",
    "six.with_metaclass"
   ]
  },
  "type": "class"
 },
 "flask_rest_jsonapi.resource.ResourceDetail.after_delete": {
  "data": {
   "lineno": 292
  },
  "type": "function"
 },
 "flask_rest_jsonapi.resource.ResourceDetail.after_get": {
  "data": {
   "lineno": 280
  },
  "type": "function"
 },
 "flask_rest_jsonapi.resource.ResourceDetail.after_patch": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "flask_rest_jsonapi.resource.ResourceDetail.before_delete": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "flask_rest_jsonapi.resource.ResourceDetail.before_get": {
  "data": {
   "lineno": 277
  },
  "type": "function"
 },
 "flask_rest_jsonapi.resource.ResourceDetail.before_patch": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "flask_rest_jsonapi.resource.ResourceDetail.delete": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "flask_rest_jsonapi.decorators.check_method_requirements"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.resource.ResourceDetail.get": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "dict",
    "flask.request.args",
    "flask_rest_jsonapi.decorators.check_method_requirements",
    "flask_rest_jsonapi.querystring.QueryStringManager",
    "flask_rest_jsonapi.schema.compute_schema",
    "getattr"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.resource.ResourceDetail.patch": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "dict",
    "flask.request.args",
    "flask.request.get_json",
    "flask_rest_jsonapi.decorators.check_method_requirements",
    "flask_rest_jsonapi.exceptions.BadRequest",
    "flask_rest_jsonapi.querystring.QueryStringManager",
    "flask_rest_jsonapi.schema.compute_schema",
    "getattr",
    "marshmallow.ValidationError",
    "marshmallow_jsonapi.exceptions.IncorrectTypeError",
    "str"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.resource.ResourceList": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "flask_rest_jsonapi.resource.Resource",
    "flask_rest_jsonapi.resource.ResourceMeta",
    "six.with_metaclass"
   ]
  },
  "type": "class"
 },
 "flask_rest_jsonapi.resource.ResourceList.after_get": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "flask_rest_jsonapi.resource.ResourceList.after_post": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "flask_rest_jsonapi.resource.ResourceList.before_get": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "flask_rest_jsonapi.resource.ResourceList.before_post": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "flask_rest_jsonapi.resource.ResourceList.get": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "dict",
    "flask.request.args",
    "flask.request.view_args",
    "flask.url_for",
    "flask_rest_jsonapi.decorators.check_method_requirements",
    "flask_rest_jsonapi.pagination.add_pagination_links",
    "flask_rest_jsonapi.querystring.QueryStringManager",
    "flask_rest_jsonapi.schema.compute_schema",
    "getattr"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.resource.ResourceList.post": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "dict",
    "flask.request.args",
    "flask.request.get_json",
    "flask_rest_jsonapi.decorators.check_method_requirements",
    "flask_rest_jsonapi.querystring.QueryStringManager",
    "flask_rest_jsonapi.schema.compute_schema",
    "getattr",
    "marshmallow.ValidationError",
    "marshmallow_jsonapi.exceptions.IncorrectTypeError"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.resource.ResourceMeta": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "flask.views.MethodViewType"
   ]
  },
  "type": "class"
 },
 "flask_rest_jsonapi.resource.ResourceMeta.__new__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "Exception",
    "data_layer_cls",
    "dict",
    "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer",
    "flask_rest_jsonapi.data_layers.base.BaseDataLayer",
    "flask_rest_jsonapi.decorators.check_headers",
    "flask_rest_jsonapi.resource.ResourceMeta",
    "flask_rest_jsonapi.resource.inspect",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.resource.ResourceRelationship": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "flask_rest_jsonapi.resource.Resource",
    "flask_rest_jsonapi.resource.ResourceMeta",
    "six.with_metaclass"
   ]
  },
  "type": "class"
 },
 "flask_rest_jsonapi.resource.ResourceRelationship._get_relationship_data": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "flask.request.path.split",
    "flask_rest_jsonapi.exceptions.RelationNotFound",
    "flask_rest_jsonapi.schema.get_model_field",
    "flask_rest_jsonapi.schema.get_relationships"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.resource.ResourceRelationship.after_delete": {
  "data": {
   "lineno": 502
  },
  "type": "function"
 },
 "flask_rest_jsonapi.resource.ResourceRelationship.after_get": {
  "data": {
   "lineno": 484
  },
  "type": "function"
 },
 "flask_rest_jsonapi.resource.ResourceRelationship.after_patch": {
  "data": {
   "lineno": 496
  },
  "type": "function"
 },
 "flask_rest_jsonapi.resource.ResourceRelationship.after_post": {
  "data": {
   "lineno": 490
  },
  "type": "function"
 },
 "flask_rest_jsonapi.resource.ResourceRelationship.before_delete": {
  "data": {
   "lineno": 499
  },
  "type": "function"
 },
 "flask_rest_jsonapi.resource.ResourceRelationship.before_get": {
  "data": {
   "lineno": 481
  },
  "type": "function"
 },
 "flask_rest_jsonapi.resource.ResourceRelationship.before_patch": {
  "data": {
   "lineno": 493
  },
  "type": "function"
 },
 "flask_rest_jsonapi.resource.ResourceRelationship.before_post": {
  "data": {
   "lineno": 487
  },
  "type": "function"
 },
 "flask_rest_jsonapi.resource.ResourceRelationship.delete": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "dict",
    "flask.request.args",
    "flask.request.get_json",
    "flask.request.path",
    "flask_rest_jsonapi.decorators.check_method_requirements",
    "flask_rest_jsonapi.exceptions.BadRequest",
    "flask_rest_jsonapi.exceptions.InvalidType",
    "flask_rest_jsonapi.querystring.QueryStringManager",
    "flask_rest_jsonapi.schema.compute_schema",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.resource.ResourceRelationship.get": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "dict",
    "flask.request.args",
    "flask.request.path",
    "flask_rest_jsonapi.decorators.check_method_requirements",
    "flask_rest_jsonapi.querystring.QueryStringManager",
    "flask_rest_jsonapi.schema.compute_schema"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.resource.ResourceRelationship.patch": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "dict",
    "flask.request.args",
    "flask.request.get_json",
    "flask.request.path",
    "flask_rest_jsonapi.decorators.check_method_requirements",
    "flask_rest_jsonapi.exceptions.BadRequest",
    "flask_rest_jsonapi.exceptions.InvalidType",
    "flask_rest_jsonapi.querystring.QueryStringManager",
    "flask_rest_jsonapi.schema.compute_schema",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.resource.ResourceRelationship.post": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "dict",
    "flask.request.args",
    "flask.request.get_json",
    "flask.request.path",
    "flask_rest_jsonapi.decorators.check_method_requirements",
    "flask_rest_jsonapi.exceptions.BadRequest",
    "flask_rest_jsonapi.exceptions.InvalidType",
    "flask_rest_jsonapi.querystring.QueryStringManager",
    "flask_rest_jsonapi.schema.compute_schema",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.resource.Response": {
  "data": {
   "shadows": "werkzeug.wrappers.Response"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.resource.SqlalchemyDataLayer": {
  "data": {
   "shadows": "flask_rest_jsonapi.data_layers.alchemy.SqlalchemyDataLayer"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.resource.ValidationError": {
  "data": {
   "shadows": "marshmallow.ValidationError"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.resource.add_pagination_links": {
  "data": {
   "shadows": "flask_rest_jsonapi.pagination.add_pagination_links"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.resource.check_headers": {
  "data": {
   "shadows": "flask_rest_jsonapi.decorators.check_headers"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.resource.check_method_requirements": {
  "data": {
   "shadows": "flask_rest_jsonapi.decorators.check_method_requirements"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.resource.compute_schema": {
  "data": {
   "shadows": "flask_rest_jsonapi.schema.compute_schema"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.resource.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.resource.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.resource.get_model_field": {
  "data": {
   "shadows": "flask_rest_jsonapi.schema.get_model_field"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.resource.get_relationships": {
  "data": {
   "shadows": "flask_rest_jsonapi.schema.get_relationships"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.resource.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.resource.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.resource.jsonapi_errors": {
  "data": {
   "shadows": "flask_rest_jsonapi.errors.jsonapi_errors"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.resource.make_response": {
  "data": {
   "shadows": "flask.make_response"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.resource.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.resource.url_for": {
  "data": {
   "shadows": "flask.url_for"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.resource.with_metaclass": {
  "data": {
   "shadows": "six.with_metaclass"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.schema": {
  "data": {},
  "type": "module"
 },
 "flask_rest_jsonapi.schema.InvalidField": {
  "data": {
   "shadows": "flask_rest_jsonapi.exceptions.InvalidField"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.schema.InvalidInclude": {
  "data": {
   "shadows": "flask_rest_jsonapi.exceptions.InvalidInclude"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.schema.Relationship": {
  "data": {
   "shadows": "marshmallow_jsonapi.fields.Relationship"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.schema.SchemaABC": {
  "data": {
   "shadows": "marshmallow.base.SchemaABC"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.schema.class_registry": {
  "data": {
   "shadows": "marshmallow.class_registry"
  },
  "type": "import"
 },
 "flask_rest_jsonapi.schema.compute_schema": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "flask_rest_jsonapi.exceptions.InvalidField",
    "flask_rest_jsonapi.exceptions.InvalidInclude",
    "isinstance",
    "marshmallow.base.SchemaABC",
    "marshmallow.class_registry.get_class",
    "marshmallow_jsonapi.fields.Relationship",
    "schema_cls",
    "set",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "flask_rest_jsonapi.schema.get_model_field": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "flask_rest_jsonapi.schema.get_relationships": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "flask_rest_jsonapi.schema.get_model_field",
    "isinstance",
    "marshmallow_jsonapi.fields.Relationship"
   ]
  },
  "type": "function"
 }
}