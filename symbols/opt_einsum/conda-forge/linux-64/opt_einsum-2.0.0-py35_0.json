{
 "opt_einsum": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opt_einsum._version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opt_einsum._version.get_versions": {
  "lineno": 20,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "opt_einsum.backends": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.einsum",
   "numpy.tensordot",
   "numpy.transpose"
  ],
  "type": "module"
 },
 "opt_einsum.backends._import_func": {
  "lineno": 13,
  "symbols_in_volume": [
   "importlib.import_module"
  ],
  "type": "function"
 },
 "opt_einsum.backends.build_cupy_expression": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.backends.build_cupy_expression.cupy_contract": {
  "lineno": 123,
  "symbols_in_volume": [
   "cupy.asnumpy"
  ],
  "type": "function"
 },
 "opt_einsum.backends.build_expression": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.backends.build_tensorflow_expression": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.backends.build_tensorflow_expression.tensorflow_contract": {
  "lineno": 79,
  "symbols_in_volume": [
   "tensorflow.get_default_session"
  ],
  "type": "function"
 },
 "opt_einsum.backends.build_theano_expression": {
  "lineno": 95,
  "symbols_in_volume": [
   "theano.function"
  ],
  "type": "function"
 },
 "opt_einsum.backends.build_theano_expression.theano_contract": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.backends.convert_arrays_to_cupy": {
  "lineno": 111,
  "symbols_in_volume": [
   "cupy.asarray"
  ],
  "type": "function"
 },
 "opt_einsum.backends.convert_arrays_to_tensorflow": {
  "lineno": 65,
  "symbols_in_volume": [
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "opt_einsum.backends.convert_arrays_to_theano": {
  "lineno": 88,
  "symbols_in_volume": [
   "theano.tensor.TensorType"
  ],
  "type": "function"
 },
 "opt_einsum.backends.get_func": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.backends.has_einsum": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.blas": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opt_einsum.blas.can_blas": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.blas.tensor_blas": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.einsum",
   "numpy.squeeze",
   "numpy.tensordot"
  ],
  "type": "function"
 },
 "opt_einsum.contract": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opt_einsum.contract.ContractExpression": {
  "lineno": 496,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opt_einsum.contract.ContractExpression.__call__": {
  "lineno": 532,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "opt_einsum.contract.ContractExpression.__init__": {
  "lineno": 501,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.contract.ContractExpression.__repr__": {
  "lineno": 573,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.contract.ContractExpression.__str__": {
  "lineno": 576,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.contract.ContractExpression._convert_contract": {
  "lineno": 513,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.contract.ContractExpression._normal_contract": {
  "lineno": 507,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.contract._ShapeOnly": {
  "lineno": 586,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "opt_einsum.contract._ShapeOnly.__init__": {
  "lineno": 591,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.contract._core_contract": {
  "lineno": 426,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.contract._einsum": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.contract._tensordot": {
  "lineno": 310,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.contract._transpose": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.contract.contract": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.contract.contract_expression": {
  "lineno": 595,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.contract.contract_path": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.helpers": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "module"
 },
 "opt_einsum.helpers.build_views": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "opt_einsum.helpers.compute_size_by_dict": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.helpers.find_contraction": {
  "lineno": 77,
  "symbols_in_volume": [
   "itertools.chain"
  ],
  "type": "function"
 },
 "opt_einsum.helpers.flop_count": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.parser": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "opt_einsum.parser.convert_to_valid_einsum_chars": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.parser.find_output_str": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.parser.has_valid_einsum_chars_only": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.parser.is_valid_einsum_char": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.parser.parse_einsum_input": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.parser.possibly_convert_to_numpy": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "opt_einsum.paths": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opt_einsum.paths._parse_possible_contraction": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.paths._update_other_results": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.paths.greedy": {
  "lineno": 181,
  "symbols_in_volume": [
   "itertools.combinations"
  ],
  "type": "function"
 },
 "opt_einsum.paths.optimal": {
  "lineno": 9,
  "symbols_in_volume": [
   "itertools.combinations"
  ],
  "type": "function"
 },
 "opt_einsum.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opt_einsum.tests.test_backends": {
  "lineno": null,
  "symbols_in_volume": [
   "os.environ"
  ],
  "type": "module"
 },
 "opt_einsum.tests.test_backends.test_cupy": {
  "lineno": 71,
  "symbols_in_volume": [
   "cupy.asnumpy",
   "cupy.ndarray",
   "numpy.allclose",
   "opt_einsum.backends.convert_arrays_to_cupy",
   "opt_einsum.contract",
   "opt_einsum.contract_expression",
   "opt_einsum.helpers.build_views",
   "pytest.mark.parametrize",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_dask": {
  "lineno": 108,
  "symbols_in_volume": [
   "dask.array.Array",
   "dask.array.from_array",
   "numpy.allclose",
   "numpy.array",
   "opt_einsum.contract",
   "opt_einsum.contract_expression",
   "opt_einsum.helpers.build_views",
   "pytest.mark.parametrize",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_sparse": {
  "lineno": 131,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.random.choice",
   "numpy.random.seed",
   "opt_einsum.contract",
   "opt_einsum.contract_expression",
   "opt_einsum.helpers.build_views",
   "pytest.mark.parametrize",
   "pytest.mark.skipif",
   "sparse.COO",
   "sparse.COO.from_numpy"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_tensorflow": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.empty_like",
   "opt_einsum.backends.convert_arrays_to_tensorflow",
   "opt_einsum.contract",
   "opt_einsum.contract_expression",
   "opt_einsum.helpers.build_views",
   "pytest.mark.parametrize",
   "pytest.mark.skipif",
   "tensorflow.Session"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_theano": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.allclose",
   "opt_einsum.backends.convert_arrays_to_theano",
   "opt_einsum.contract",
   "opt_einsum.contract_expression",
   "opt_einsum.helpers.build_views",
   "pytest.mark.parametrize",
   "pytest.mark.skipif",
   "theano.tensor.TensorVariable"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_blas": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opt_einsum.tests.test_blas.test_blas_out": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.dot",
   "numpy.empty",
   "numpy.random.rand",
   "opt_einsum.contract"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_blas.test_can_blas": {
  "lineno": 66,
  "symbols_in_volume": [
   "opt_einsum.blas.can_blas",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_blas.test_tensor_blas": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.einsum",
   "opt_einsum.blas.tensor_blas",
   "opt_einsum.helpers.build_views",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_contract": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opt_einsum.tests.test_contract.test_broadcasting_contraction": {
  "lineno": 247,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.random.rand",
   "opt_einsum.contract"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_broadcasting_contraction2": {
  "lineno": 266,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.random.rand",
   "opt_einsum.contract"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_broadcasting_contraction3": {
  "lineno": 285,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.random.rand",
   "opt_einsum.contract"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_compare": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.allclose",
   "opt_einsum.contract",
   "opt_einsum.helpers.build_views",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_compare_blas": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.allclose",
   "opt_einsum.contract",
   "opt_einsum.helpers.build_views",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_compare_blas_greek": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.allclose",
   "opt_einsum.contract",
   "opt_einsum.helpers.build_views",
   "pytest.mark.parametrize",
   "pytest.mark.skipif",
   "sys.version_info"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_compare_greek": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.allclose",
   "opt_einsum.contract",
   "opt_einsum.helpers.build_views",
   "pytest.mark.parametrize",
   "pytest.mark.skipif",
   "sys.version_info"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_contract_expression_checks": {
  "lineno": 202,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.random.rand",
   "opt_einsum.contract_expression",
   "pytest.raises"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_contract_expressions": {
  "lineno": 177,
  "symbols_in_volume": [
   "numpy.allclose",
   "opt_einsum.contract",
   "opt_einsum.contract_expression",
   "opt_einsum.helpers.build_views",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_printing": {
  "lineno": 169,
  "symbols_in_volume": [
   "opt_einsum.contract_path",
   "opt_einsum.helpers.build_views"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_some_non_alphabet_maintains_order": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.random.rand",
   "opt_einsum.contract",
   "pytest.mark.skipif",
   "sys.version_info"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_input": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opt_einsum.tests.test_input.build_views": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_compare": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.allclose",
   "opt_einsum.contract",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_ellipse_input1": {
  "lineno": 179,
  "symbols_in_volume": [
   "numpy.allclose",
   "opt_einsum.contract"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_ellipse_input2": {
  "lineno": 187,
  "symbols_in_volume": [
   "numpy.allclose",
   "opt_einsum.contract"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_ellipse_input3": {
  "lineno": 195,
  "symbols_in_volume": [
   "numpy.allclose",
   "opt_einsum.contract"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_ellipse_input4": {
  "lineno": 203,
  "symbols_in_volume": [
   "numpy.allclose",
   "opt_einsum.contract"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_singleton_dimension_broadcast": {
  "lineno": 211,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.full",
   "numpy.ones",
   "opt_einsum.contract"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_type_errors": {
  "lineno": 26,
  "symbols_in_volume": [
   "opt_einsum.contract",
   "pytest.raises"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_value_errors": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.arange",
   "opt_einsum.contract",
   "pytest.raises"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_paths": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opt_einsum.tests.test_paths.assert_contract_order": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.tests.test_paths.check_path": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_can_optimize_outer_products": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.random.randn",
   "opt_einsum.contract_path"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_flop_cost": {
  "lineno": 78,
  "symbols_in_volume": [
   "opt_einsum.helpers.flop_count"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_greedy_edge_cases": {
  "lineno": 160,
  "symbols_in_volume": [
   "opt_einsum.contract_path",
   "opt_einsum.helpers.build_views"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_memory_paths": {
  "lineno": 118,
  "symbols_in_volume": [
   "opt_einsum.contract_path",
   "opt_einsum.helpers.build_views"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_optimal_edge_cases": {
  "lineno": 148,
  "symbols_in_volume": [
   "opt_einsum.contract_path",
   "opt_einsum.helpers.build_views"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_path_edge_cases": {
  "lineno": 139,
  "symbols_in_volume": [
   "opt_einsum.contract_path",
   "opt_einsum.helpers.build_views",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_path_greedy": {
  "lineno": 109,
  "symbols_in_volume": [
   "opt_einsum.paths.greedy"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_path_optimal": {
  "lineno": 100,
  "symbols_in_volume": [
   "opt_einsum.paths.optimal"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_size_by_dict": {
  "lineno": 58,
  "symbols_in_volume": [
   "opt_einsum.helpers.compute_size_by_dict"
  ],
  "type": "function"
 }
}