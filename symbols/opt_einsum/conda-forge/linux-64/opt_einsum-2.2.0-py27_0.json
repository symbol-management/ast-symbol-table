{
 "opt_einsum": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opt_einsum._version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opt_einsum._version.get_versions": {
  "lineno": 20,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "opt_einsum.backends": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opt_einsum.backends.cupy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opt_einsum.backends.cupy.build_expression": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.backends.cupy.build_expression.cupy_contract": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.backends.cupy.evaluate_constants": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.backends.cupy.to_cupy": {
  "lineno": 14,
  "symbols_in_volume": [
   "cupy.asarray",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "opt_einsum.backends.dispatch": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.einsum",
   "numpy.tensordot",
   "numpy.transpose"
  ],
  "type": "module"
 },
 "opt_einsum.backends.dispatch._import_func": {
  "lineno": 26,
  "symbols_in_volume": [
   "importlib.import_module"
  ],
  "type": "function"
 },
 "opt_einsum.backends.dispatch.build_expression": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.backends.dispatch.evaluate_constants": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.backends.dispatch.get_func": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.backends.dispatch.has_backend": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.backends.dispatch.has_einsum": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.backends.tensorflow": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opt_einsum.backends.tensorflow._get_tensorflow_and_device": {
  "lineno": 17,
  "symbols_in_volume": [
   "tensorflow",
   "tensorflow.contrib.eager.in_eager_mode",
   "tensorflow.test.gpu_device_name"
  ],
  "type": "function"
 },
 "opt_einsum.backends.tensorflow.build_expression": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.backends.tensorflow.build_expression_eager": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.backends.tensorflow.build_expression_eager.tensorflow_eager_contract": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.backends.tensorflow.build_expression_graph": {
  "lineno": 62,
  "symbols_in_volume": [
   "tensorflow"
  ],
  "type": "function"
 },
 "opt_einsum.backends.tensorflow.build_expression_graph.tensorflow_contract": {
  "lineno": 70,
  "symbols_in_volume": [
   "tensorflow.get_default_session"
  ],
  "type": "function"
 },
 "opt_einsum.backends.tensorflow.evaluate_constants": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.backends.tensorflow.evaluate_constants_eager": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.backends.tensorflow.evaluate_constants_graph": {
  "lineno": 79,
  "symbols_in_volume": [
   "tensorflow",
   "tensorflow.get_default_session"
  ],
  "type": "function"
 },
 "opt_einsum.backends.tensorflow.to_tensorflow": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.ndarray",
   "tensorflow",
   "tensorflow.convert_to_tensor",
   "tensorflow.device",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "opt_einsum.backends.theano": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opt_einsum.backends.theano.build_expression": {
  "lineno": 29,
  "symbols_in_volume": [
   "theano.function",
   "theano.tensor.TensorConstant"
  ],
  "type": "function"
 },
 "opt_einsum.backends.theano.build_expression.theano_contract": {
  "lineno": 41,
  "symbols_in_volume": [
   "theano.tensor.TensorConstant"
  ],
  "type": "function"
 },
 "opt_einsum.backends.theano.evaluate_constants": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.backends.theano.to_theano": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.ndarray",
   "theano.tensor.TensorType",
   "theano.tensor.constant"
  ],
  "type": "function"
 },
 "opt_einsum.backends.torch": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opt_einsum.backends.torch._get_torch_and_device": {
  "lineno": 19,
  "symbols_in_volume": [
   "torch",
   "torch.cuda.is_available"
  ],
  "type": "function"
 },
 "opt_einsum.backends.torch.build_expression": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.backends.torch.build_expression.torch_contract": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.backends.torch.einsum": {
  "lineno": 36,
  "symbols_in_volume": [
   "torch",
   "torch.einsum"
  ],
  "type": "function"
 },
 "opt_einsum.backends.torch.evaluate_constants": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.backends.torch.tensordot": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.backends.torch.to_torch": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.ndarray",
   "torch",
   "torch.from_numpy"
  ],
  "type": "function"
 },
 "opt_einsum.backends.torch.transpose": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.blas": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opt_einsum.blas.can_blas": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.blas.tensor_blas": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.einsum",
   "numpy.squeeze",
   "numpy.tensordot"
  ],
  "type": "function"
 },
 "opt_einsum.compat": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opt_einsum.contract": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opt_einsum.contract.ContractExpression": {
  "lineno": 524,
  "symbols_in_volume": [],
  "type": "class"
 },
 "opt_einsum.contract.ContractExpression.__call__": {
  "lineno": 613,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "opt_einsum.contract.ContractExpression.__init__": {
  "lineno": 529,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.contract.ContractExpression.__repr__": {
  "lineno": 664,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.contract.ContractExpression.__str__": {
  "lineno": 671,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.contract.ContractExpression._contract": {
  "lineno": 579,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.contract.ContractExpression._contract_with_conversion": {
  "lineno": 592,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.contract.ContractExpression._get_backend_expression": {
  "lineno": 571,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.contract.ContractExpression._get_evaluated_constants": {
  "lineno": 560,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.contract.ContractExpression.evaluate_constants": {
  "lineno": 545,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.contract._core_contract": {
  "lineno": 426,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.contract._einsum": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.contract._tensordot": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.contract._transpose": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.contract.contract": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.contract.contract_expression": {
  "lineno": 688,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.contract.contract_path": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.contract.format_const_einsum_str": {
  "lineno": 498,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.contract.shape_only": {
  "lineno": 681,
  "symbols_in_volume": [
   "numpy.broadcast_to",
   "numpy.nan"
  ],
  "type": "function"
 },
 "opt_einsum.helpers": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "module"
 },
 "opt_einsum.helpers.build_views": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "opt_einsum.helpers.compute_size_by_dict": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.helpers.find_contraction": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.helpers.flop_count": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.parser": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opt_einsum.parser.alpha_canonicalize": {
  "lineno": 103,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "opt_einsum.parser.convert_to_valid_einsum_chars": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.parser.find_output_shape": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.parser.find_output_str": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.parser.gen_unused_symbols": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.parser.get_symbol": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.parser.has_valid_einsum_chars_only": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.parser.is_valid_einsum_char": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.parser.parse_einsum_input": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.parser.possibly_convert_to_numpy": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "opt_einsum.paths": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opt_einsum.paths._parse_possible_contraction": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.paths._update_other_results": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.paths.greedy": {
  "lineno": 184,
  "symbols_in_volume": [
   "itertools.combinations"
  ],
  "type": "function"
 },
 "opt_einsum.paths.optimal": {
  "lineno": 10,
  "symbols_in_volume": [
   "itertools.combinations"
  ],
  "type": "function"
 },
 "opt_einsum.sharing": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.defaultdict",
   "threading.get_ident"
  ],
  "type": "module"
 },
 "opt_einsum.sharing._add_sharing_cache": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.sharing._memoize": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.sharing._remove_sharing_cache": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.sharing._save_tensors": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.sharing.count_cached_ops": {
  "lineno": 84,
  "symbols_in_volume": [
   "collections.Counter"
  ],
  "type": "function"
 },
 "opt_einsum.sharing.currently_sharing": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.sharing.einsum_cache_wrap": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.sharing.einsum_cache_wrap.cached_einsum": {
  "lineno": 158,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "opt_einsum.sharing.get_sharing_cache": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.sharing.get_thread_id": {
  "lineno": 26,
  "symbols_in_volume": [
   "threading.current_thread"
  ],
  "type": "function"
 },
 "opt_einsum.sharing.shared_intermediates": {
  "lineno": 53,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "opt_einsum.sharing.tensordot_cache_wrap": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.sharing.tensordot_cache_wrap.cached_tensordot": {
  "lineno": 137,
  "symbols_in_volume": [
   "functools.wraps",
   "numbers.Number"
  ],
  "type": "function"
 },
 "opt_einsum.sharing.to_backend_cache_wrap": {
  "lineno": 183,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "opt_einsum.sharing.to_backend_cache_wrap.cached_to_backend": {
  "lineno": 204,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "opt_einsum.sharing.transpose_cache_wrap": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.sharing.transpose_cache_wrap.cached_transpose": {
  "lineno": 118,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "opt_einsum.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opt_einsum.tests.test_backends": {
  "lineno": null,
  "symbols_in_volume": [
   "os.environ",
   "tensorflow.ConfigProto"
  ],
  "type": "module"
 },
 "opt_einsum.tests.test_backends.test_cupy": {
  "lineno": 185,
  "symbols_in_volume": [
   "numpy.allclose",
   "opt_einsum.backends.to_cupy",
   "opt_einsum.contract",
   "opt_einsum.contract_expression",
   "opt_einsum.helpers.build_views",
   "pytest.importorskip",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_cupy_with_constants": {
  "lineno": 205,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.random.rand",
   "opt_einsum.contract",
   "opt_einsum.contract_expression",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_dask": {
  "lineno": 233,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "opt_einsum.contract",
   "opt_einsum.contract_expression",
   "opt_einsum.helpers.build_views",
   "pytest.importorskip",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_sparse": {
  "lineno": 257,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.random.choice",
   "numpy.random.seed",
   "opt_einsum.contract",
   "opt_einsum.contract_expression",
   "opt_einsum.helpers.build_views",
   "pytest.importorskip",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_tensorflow": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.empty_like",
   "opt_einsum.backends.to_tensorflow",
   "opt_einsum.contract",
   "opt_einsum.contract_expression",
   "opt_einsum.helpers.build_views",
   "pytest.mark.parametrize",
   "pytest.mark.skipif",
   "tensorflow.Session"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_tensorflow_with_constants": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.random.rand",
   "opt_einsum.backends.to_tensorflow",
   "opt_einsum.contract",
   "opt_einsum.contract_expression",
   "pytest.mark.skipif",
   "tensorflow.Session",
   "tensorflow.Tensor"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_tensorflow_with_sharing": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.allclose",
   "opt_einsum.contract",
   "opt_einsum.contract_expression",
   "opt_einsum.helpers.build_views",
   "opt_einsum.sharing.get_sharing_cache",
   "opt_einsum.sharing.shared_intermediates",
   "pytest.mark.parametrize",
   "pytest.mark.skipif",
   "tensorflow.Session",
   "tensorflow.Tensor"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_theano": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.allclose",
   "opt_einsum.backends.to_theano",
   "opt_einsum.contract",
   "opt_einsum.contract_expression",
   "opt_einsum.helpers.build_views",
   "pytest.mark.parametrize",
   "pytest.mark.skipif",
   "theano.tensor.TensorVariable"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_theano_with_constants": {
  "lineno": 136,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.random.rand",
   "opt_einsum.backends.to_theano",
   "opt_einsum.contract",
   "opt_einsum.contract_expression",
   "pytest.mark.skipif",
   "theano.tensor.TensorVariable"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_theano_with_sharing": {
  "lineno": 162,
  "symbols_in_volume": [
   "numpy.allclose",
   "opt_einsum.contract",
   "opt_einsum.contract_expression",
   "opt_einsum.helpers.build_views",
   "opt_einsum.sharing.get_sharing_cache",
   "opt_einsum.sharing.shared_intermediates",
   "pytest.mark.parametrize",
   "pytest.mark.skipif",
   "theano.tensor.TensorVariable"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_torch": {
  "lineno": 288,
  "symbols_in_volume": [
   "numpy.allclose",
   "opt_einsum.backends.to_torch",
   "opt_einsum.contract",
   "opt_einsum.contract_expression",
   "opt_einsum.helpers.build_views",
   "pytest.mark.parametrize",
   "pytest.mark.skipif",
   "torch.Tensor"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_torch_with_constants": {
  "lineno": 308,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.random.rand",
   "opt_einsum.backends.to_torch",
   "opt_einsum.contract",
   "opt_einsum.contract_expression",
   "pytest.mark.skipif",
   "torch.Tensor"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_blas": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opt_einsum.tests.test_blas.test_blas_out": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.dot",
   "numpy.empty",
   "numpy.random.rand",
   "opt_einsum.contract"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_blas.test_can_blas": {
  "lineno": 66,
  "symbols_in_volume": [
   "opt_einsum.blas.can_blas",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_blas.test_tensor_blas": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.einsum",
   "opt_einsum.blas.tensor_blas",
   "opt_einsum.helpers.build_views",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_contract": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opt_einsum.tests.test_contract.test_compare": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.allclose",
   "opt_einsum.contract",
   "opt_einsum.helpers.build_views",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_compare_blas": {
  "lineno": 136,
  "symbols_in_volume": [
   "numpy.allclose",
   "opt_einsum.contract",
   "opt_einsum.helpers.build_views",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_compare_blas_greek": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.allclose",
   "opt_einsum.compat.get_char",
   "opt_einsum.contract",
   "opt_einsum.helpers.build_views",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_compare_greek": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.allclose",
   "opt_einsum.compat.get_char",
   "opt_einsum.contract",
   "opt_einsum.helpers.build_views",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_contract_expression_with_constants": {
  "lineno": 206,
  "symbols_in_volume": [
   "numpy.allclose",
   "opt_einsum.contract",
   "opt_einsum.contract_expression",
   "opt_einsum.helpers.build_views",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_contract_expressions": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.allclose",
   "opt_einsum.contract",
   "opt_einsum.contract_expression",
   "opt_einsum.helpers.build_views",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_drop_in_replacement": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.einsum",
   "opt_einsum.contract",
   "opt_einsum.helpers.build_views",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_printing": {
  "lineno": 173,
  "symbols_in_volume": [
   "opt_einsum.contract_path",
   "opt_einsum.helpers.build_views"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_some_non_alphabet_maintains_order": {
  "lineno": 164,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.random.rand",
   "opt_einsum.compat.get_char",
   "opt_einsum.contract"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_edge_cases": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opt_einsum.tests.test_edge_cases.test_broadcasting_contraction": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.random.rand",
   "opt_einsum.contract"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_edge_cases.test_broadcasting_contraction2": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.random.rand",
   "opt_einsum.contract"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_edge_cases.test_broadcasting_contraction3": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.random.rand",
   "opt_einsum.contract"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_edge_cases.test_broadcasting_contraction4": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.arange",
   "opt_einsum.contract"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_edge_cases.test_can_blas_on_healed_broadcast_dimensions": {
  "lineno": 117,
  "symbols_in_volume": [
   "opt_einsum.contract_expression"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_edge_cases.test_contract_expression_checks": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.random.rand",
   "opt_einsum.contract_expression",
   "pytest.raises"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_input": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opt_einsum.tests.test_input.build_views": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_compare": {
  "lineno": 162,
  "symbols_in_volume": [
   "numpy.allclose",
   "opt_einsum.contract",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_ellipse_input1": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.allclose",
   "opt_einsum.contract"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_ellipse_input2": {
  "lineno": 189,
  "symbols_in_volume": [
   "numpy.allclose",
   "opt_einsum.contract"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_ellipse_input3": {
  "lineno": 197,
  "symbols_in_volume": [
   "numpy.allclose",
   "opt_einsum.contract"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_ellipse_input4": {
  "lineno": 205,
  "symbols_in_volume": [
   "numpy.allclose",
   "opt_einsum.contract"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_large_int_input_format": {
  "lineno": 233,
  "symbols_in_volume": [
   "numpy.allclose",
   "opt_einsum.contract"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_singleton_dimension_broadcast": {
  "lineno": 213,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.full",
   "numpy.ones",
   "opt_einsum.contract"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_type_errors": {
  "lineno": 28,
  "symbols_in_volume": [
   "opt_einsum.contract",
   "pytest.raises"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_value_errors": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.arange",
   "opt_einsum.contract",
   "pytest.raises"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_paths": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "opt_einsum.tests.test_paths.assert_contract_order": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.tests.test_paths.check_path": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_can_optimize_outer_products": {
  "lineno": 175,
  "symbols_in_volume": [
   "numpy.random.randn",
   "opt_einsum.contract_path"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_flop_cost": {
  "lineno": 80,
  "symbols_in_volume": [
   "opt_einsum.helpers.flop_count"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_greedy_edge_cases": {
  "lineno": 162,
  "symbols_in_volume": [
   "opt_einsum.contract_path",
   "opt_einsum.helpers.build_views"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_large_path": {
  "lineno": 181,
  "symbols_in_volume": [
   "itertools.cycle",
   "opt_einsum.contract_path",
   "opt_einsum.get_symbol",
   "opt_einsum.helpers.build_views",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_memory_paths": {
  "lineno": 120,
  "symbols_in_volume": [
   "opt_einsum.contract_path",
   "opt_einsum.helpers.build_views"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_optimal_edge_cases": {
  "lineno": 150,
  "symbols_in_volume": [
   "opt_einsum.contract_path",
   "opt_einsum.helpers.build_views"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_path_edge_cases": {
  "lineno": 141,
  "symbols_in_volume": [
   "opt_einsum.contract_path",
   "opt_einsum.helpers.build_views",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_path_greedy": {
  "lineno": 111,
  "symbols_in_volume": [
   "opt_einsum.paths.greedy"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_path_optimal": {
  "lineno": 102,
  "symbols_in_volume": [
   "opt_einsum.paths.optimal"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_size_by_dict": {
  "lineno": 60,
  "symbols_in_volume": [
   "opt_einsum.helpers.compute_size_by_dict"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_sharing": {
  "lineno": null,
  "symbols_in_volume": [
   "opt_einsum.backends.to_cupy",
   "opt_einsum.backends.to_torch",
   "pytest.mark.skip",
   "pytest.param"
  ],
  "type": "module"
 },
 "opt_einsum.tests.test_sharing._compute_cost": {
  "lineno": 304,
  "symbols_in_volume": [
   "opt_einsum.sharing.count_cached_ops"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_chain": {
  "lineno": 262,
  "symbols_in_volume": [
   "numpy.random.rand",
   "opt_einsum.contract_expression",
   "opt_einsum.contract_path",
   "opt_einsum.get_symbol",
   "opt_einsum.shared_intermediates",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_chain_2": {
  "lineno": 283,
  "symbols_in_volume": [
   "numpy.random.rand",
   "opt_einsum.contract_expression",
   "opt_einsum.contract_path",
   "opt_einsum.get_symbol",
   "opt_einsum.shared_intermediates",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_chain_2_growth": {
  "lineno": 309,
  "symbols_in_volume": [
   "numpy.random.rand",
   "opt_einsum.contract_expression",
   "opt_einsum.get_symbol",
   "opt_einsum.shared_intermediates",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_chain_sharing": {
  "lineno": 333,
  "symbols_in_volume": [
   "numpy.random.rand",
   "opt_einsum.contract_expression",
   "opt_einsum.contract_path",
   "opt_einsum.get_symbol",
   "opt_einsum.shared_intermediates",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_complete_sharing": {
  "lineno": 60,
  "symbols_in_volume": [
   "opt_einsum.contract_expression",
   "opt_einsum.helpers.build_views",
   "opt_einsum.shared_intermediates",
   "opt_einsum.sharing.count_cached_ops",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_multithreaded_sharing": {
  "lineno": 367,
  "symbols_in_volume": [
   "multiprocessing.pool.ThreadPool",
   "opt_einsum.sharing.currently_sharing"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_multithreaded_sharing.fn": {
  "lineno": 370,
  "symbols_in_volume": [
   "opt_einsum.contract",
   "opt_einsum.helpers.build_views",
   "opt_einsum.shared_intermediates",
   "opt_einsum.sharing.get_sharing_cache"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_no_sharing_separate_cache": {
  "lineno": 111,
  "symbols_in_volume": [
   "opt_einsum.contract_expression",
   "opt_einsum.helpers.build_views",
   "opt_einsum.shared_intermediates",
   "opt_einsum.sharing.count_cached_ops",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_partial_sharing": {
  "lineno": 211,
  "symbols_in_volume": [
   "collections.Counter",
   "opt_einsum.contract_expression",
   "opt_einsum.helpers.build_views",
   "opt_einsum.shared_intermediates",
   "opt_einsum.sharing.count_cached_ops",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_sharing_modulo_commutativity": {
  "lineno": 181,
  "symbols_in_volume": [
   "itertools.permutations",
   "opt_einsum.contract._einsum",
   "opt_einsum.helpers.build_views",
   "opt_einsum.parser.parse_einsum_input",
   "opt_einsum.shared_intermediates",
   "opt_einsum.sharing.count_cached_ops",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_sharing_nesting": {
  "lineno": 139,
  "symbols_in_volume": [
   "opt_einsum.helpers.build_views",
   "pytest.mark.parametrize",
   "weakref.WeakValueDictionary"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_sharing_nesting.method1": {
  "lineno": 149,
  "symbols_in_volume": [
   "opt_einsum.contract_expression",
   "opt_einsum.shared_intermediates"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_sharing_nesting.method2": {
  "lineno": 163,
  "symbols_in_volume": [
   "opt_einsum.contract_expression",
   "opt_einsum.shared_intermediates"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_sharing_reused_cache": {
  "lineno": 85,
  "symbols_in_volume": [
   "opt_einsum.contract_expression",
   "opt_einsum.helpers.build_views",
   "opt_einsum.shared_intermediates",
   "opt_einsum.sharing.count_cached_ops",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_sharing_value": {
  "lineno": 46,
  "symbols_in_volume": [
   "opt_einsum.contract_expression",
   "opt_einsum.helpers.build_views",
   "opt_einsum.shared_intermediates",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_sharing_with_constants": {
  "lineno": 241,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.random.rand",
   "opt_einsum.contract_expression",
   "opt_einsum.shared_intermediates",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 }
}