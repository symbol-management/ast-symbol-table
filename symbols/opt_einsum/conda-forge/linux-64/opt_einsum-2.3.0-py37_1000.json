{
 "opt_einsum": {
  "data": {
   "symbols_in_volume": [
    "get_versions",
    "opt_einsum.versions"
   ]
  },
  "type": "module"
 },
 "opt_einsum.__git_revision__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "opt_einsum.__version__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "opt_einsum._version": {
  "data": {},
  "type": "module"
 },
 "opt_einsum._version.get_versions": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "opt_einsum._version.json",
    "opt_einsum._version.version_json"
   ]
  },
  "type": "function"
 },
 "opt_einsum._version.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "opt_einsum._version.version_json": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "opt_einsum.backends": {
  "data": {},
  "type": "module"
 },
 "opt_einsum.backends.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "opt_einsum.backends.cupy": {
  "data": {},
  "type": "module"
 },
 "opt_einsum.backends.cupy.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "opt_einsum.backends.cupy.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "opt_einsum.backends.cupy.build_expression": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "opt_einsum.backends.cupy.build_expression.cupy_contract": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "opt_einsum.backends.cupy.to_cupy"
   ]
  },
  "type": "function"
 },
 "opt_einsum.backends.cupy.cupy": {
  "data": {
   "shadows": "cupy"
  },
  "type": "import"
 },
 "opt_einsum.backends.cupy.evaluate_constants": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "expr",
    "opt_einsum.backends.cupy.to_cupy"
   ]
  },
  "type": "function"
 },
 "opt_einsum.backends.cupy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.backends.cupy.to_cupy": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "opt_einsum.backends.cupy.cupy"
   ]
  },
  "type": "function"
 },
 "opt_einsum.backends.dispatch": {
  "data": {
   "symbols_in_volume": [
    "opt_einsum.backends.dispatch.numpy"
   ]
  },
  "type": "module"
 },
 "opt_einsum.backends.dispatch.CONVERT_BACKENDS": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "opt_einsum.backends.dispatch.EVAL_CONSTS_BACKENDS": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "opt_einsum.backends.dispatch.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "opt_einsum.backends.dispatch._aliases": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "opt_einsum.backends.dispatch._cached_funcs": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "opt_einsum.backends.dispatch._cupy": {
  "data": {
   "shadows": "cupy"
  },
  "type": "import"
 },
 "opt_einsum.backends.dispatch._has_einsum": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "opt_einsum.backends.dispatch._import_func": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "opt_einsum.backends.dispatch._aliases",
    "opt_einsum.backends.dispatch.importlib"
   ]
  },
  "type": "function"
 },
 "opt_einsum.backends.dispatch._tensorflow": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "opt_einsum.backends.dispatch._theano": {
  "data": {
   "shadows": "theano"
  },
  "type": "import"
 },
 "opt_einsum.backends.dispatch._torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "opt_einsum.backends.dispatch.build_expression": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "opt_einsum.backends.dispatch.CONVERT_BACKENDS"
   ]
  },
  "type": "function"
 },
 "opt_einsum.backends.dispatch.evaluate_constants": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "opt_einsum.backends.dispatch.EVAL_CONSTS_BACKENDS"
   ]
  },
  "type": "function"
 },
 "opt_einsum.backends.dispatch.get_func": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "KeyError",
    "opt_einsum.backends.dispatch._cached_funcs",
    "opt_einsum.backends.dispatch._import_func"
   ]
  },
  "type": "function"
 },
 "opt_einsum.backends.dispatch.has_backend": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "opt_einsum.backends.dispatch.CONVERT_BACKENDS"
   ]
  },
  "type": "function"
 },
 "opt_einsum.backends.dispatch.has_einsum": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "opt_einsum.backends.dispatch._has_einsum",
    "opt_einsum.backends.dispatch.get_func"
   ]
  },
  "type": "function"
 },
 "opt_einsum.backends.dispatch.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "opt_einsum.backends.dispatch.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.backends.tensorflow": {
  "data": {},
  "type": "module"
 },
 "opt_einsum.backends.tensorflow._CACHED_TF_DEVICE": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "opt_einsum.backends.tensorflow.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "opt_einsum.backends.tensorflow._get_tensorflow_and_device": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "AttributeError",
    "opt_einsum.backends.tensorflow._CACHED_TF_DEVICE",
    "tensorflow",
    "tensorflow.contrib.eager.in_eager_mode",
    "tensorflow.test.gpu_device_name"
   ]
  },
  "type": "function"
 },
 "opt_einsum.backends.tensorflow.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "opt_einsum.backends.tensorflow.build_expression": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "expr",
    "fn",
    "opt_einsum.backends.tensorflow._get_tensorflow_and_device",
    "opt_einsum.backends.tensorflow.build_expression_eager",
    "opt_einsum.backends.tensorflow.build_expression_graph"
   ]
  },
  "type": "function"
 },
 "opt_einsum.backends.tensorflow.build_expression_eager": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "opt_einsum.backends.tensorflow.build_expression_eager.tensorflow_eager_contract": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "expr._contract",
    "opt_einsum.backends.tensorflow.to_tensorflow"
   ]
  },
  "type": "function"
 },
 "opt_einsum.backends.tensorflow.build_expression_graph": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "opt_einsum.backends.tensorflow._get_tensorflow_and_device",
    "opt_einsum.backends.tensorflow.to_tensorflow",
    "tensorflow"
   ]
  },
  "type": "function"
 },
 "opt_einsum.backends.tensorflow.build_expression_graph.tensorflow_contract": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "tensorflow.get_default_session",
    "zip"
   ]
  },
  "type": "function"
 },
 "opt_einsum.backends.tensorflow.evaluate_constants": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "expr",
    "fn",
    "opt_einsum.backends.tensorflow._get_tensorflow_and_device",
    "opt_einsum.backends.tensorflow.evaluate_constants_eager",
    "opt_einsum.backends.tensorflow.evaluate_constants_graph"
   ]
  },
  "type": "function"
 },
 "opt_einsum.backends.tensorflow.evaluate_constants_eager": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "expr",
    "opt_einsum.backends.tensorflow.to_tensorflow"
   ]
  },
  "type": "function"
 },
 "opt_einsum.backends.tensorflow.evaluate_constants_graph": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "expr",
    "iter",
    "next",
    "opt_einsum.backends.tensorflow._get_tensorflow_and_device",
    "opt_einsum.backends.tensorflow.to_tensorflow",
    "tensorflow",
    "tensorflow.get_default_session"
   ]
  },
  "type": "function"
 },
 "opt_einsum.backends.tensorflow.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.backends.tensorflow.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "opt_einsum.backends.tensorflow.to_tensorflow": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "opt_einsum.backends.tensorflow._get_tensorflow_and_device",
    "tensorflow",
    "tensorflow.convert_to_tensor",
    "tensorflow.device",
    "tensorflow.placeholder",
    "to_backend_cache_wrap"
   ]
  },
  "type": "function"
 },
 "opt_einsum.backends.theano": {
  "data": {},
  "type": "module"
 },
 "opt_einsum.backends.theano.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "opt_einsum.backends.theano.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "opt_einsum.backends.theano.build_expression": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "isinstance",
    "opt_einsum.backends.theano.theano",
    "opt_einsum.backends.theano.to_theano"
   ]
  },
  "type": "function"
 },
 "opt_einsum.backends.theano.build_expression.theano_contract": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "graph",
    "isinstance",
    "opt_einsum.backends.theano.theano"
   ]
  },
  "type": "function"
 },
 "opt_einsum.backends.theano.evaluate_constants": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "expr",
    "opt_einsum.backends.theano.to_theano"
   ]
  },
  "type": "function"
 },
 "opt_einsum.backends.theano.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.backends.theano.theano": {
  "data": {
   "shadows": "theano"
  },
  "type": "import"
 },
 "opt_einsum.backends.theano.to_theano": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.ndarray",
    "opt_einsum.backends.theano.theano",
    "to_backend_cache_wrap"
   ]
  },
  "type": "function"
 },
 "opt_einsum.backends.torch": {
  "data": {},
  "type": "module"
 },
 "opt_einsum.backends.torch._TORCH_DEVICE": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "opt_einsum.backends.torch._TORCH_HAS_TENSORDOT": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "opt_einsum.backends.torch.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "opt_einsum.backends.torch._get_torch_and_device": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "hasattr",
    "opt_einsum.backends.torch._TORCH_DEVICE",
    "opt_einsum.backends.torch._TORCH_HAS_TENSORDOT",
    "opt_einsum.backends.torch.torch"
   ]
  },
  "type": "function"
 },
 "opt_einsum.backends.torch._torch_symbols_base": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "opt_einsum.backends.torch.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "opt_einsum.backends.torch.build_expression": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "opt_einsum.backends.torch.build_expression.torch_contract": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "opt_einsum.backends.torch.to_torch"
   ]
  },
  "type": "function"
 },
 "opt_einsum.backends.torch.einsum": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "convert_to_valid_einsum_chars",
    "opt_einsum.backends.torch._get_torch_and_device",
    "opt_einsum.backends.torch.torch"
   ]
  },
  "type": "function"
 },
 "opt_einsum.backends.torch.evaluate_constants": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "expr",
    "opt_einsum.backends.torch.to_torch"
   ]
  },
  "type": "function"
 },
 "opt_einsum.backends.torch.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.backends.torch.tensordot": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "iter",
    "map",
    "next",
    "opt_einsum.backends.torch._TORCH_HAS_TENSORDOT",
    "opt_einsum.backends.torch._get_torch_and_device",
    "opt_einsum.backends.torch._torch_symbols_base",
    "opt_einsum.backends.torch.einsum",
    "opt_einsum.backends.torch.torch",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "opt_einsum.backends.torch.to_torch": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "opt_einsum.backends.torch._get_torch_and_device",
    "opt_einsum.backends.torch.torch"
   ]
  },
  "type": "function"
 },
 "opt_einsum.backends.torch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "opt_einsum.backends.torch.transpose": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "opt_einsum.blas": {
  "data": {},
  "type": "module"
 },
 "opt_einsum.blas.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "opt_einsum.blas.can_blas": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "int",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "opt_einsum.blas.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.blas.tensor_blas": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "numpy.einsum",
    "numpy.squeeze",
    "numpy.tensordot",
    "set",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "opt_einsum.compat": {
  "data": {
   "symbols_in_volume": [
    "NameError",
    "chr",
    "opt_einsum.compat.get_char",
    "str",
    "type"
   ]
  },
  "type": "module"
 },
 "opt_einsum.compat.get_char": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "opt_einsum.compat.strings": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "opt_einsum.contract": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "opt_einsum.contract.ContractExpression": {
  "data": {
   "lineno": 597
  },
  "type": "class"
 },
 "opt_einsum.contract.ContractExpression.__call__": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "isinstance",
    "iter",
    "len",
    "next",
    "numpy.ndarray",
    "self._constants_dict",
    "self._contract",
    "self._contract_with_conversion",
    "self._full_num_args",
    "self._get_evaluated_constants",
    "self.num_args",
    "str"
   ]
  },
  "type": "function"
 },
 "opt_einsum.contract.ContractExpression.__init__": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "len",
    "opt_einsum.contract.format_const_einsum_str"
   ]
  },
  "type": "function"
 },
 "opt_einsum.contract.ContractExpression.__repr__": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "self._constants_dict",
    "self.contraction",
    "sorted"
   ]
  },
  "type": "function"
 },
 "opt_einsum.contract.ContractExpression.__str__": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "enumerate",
    "self.__repr__",
    "self.contraction_list",
    "self.einsum_kwargs"
   ]
  },
  "type": "function"
 },
 "opt_einsum.contract.ContractExpression._contract": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "list",
    "opt_einsum.contract._core_contract",
    "self._full_contraction_list",
    "self.contraction_list",
    "self.einsum_kwargs"
   ]
  },
  "type": "function"
 },
 "opt_einsum.contract.ContractExpression._contract_with_conversion": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "self",
    "self._get_backend_expression"
   ]
  },
  "type": "function"
 },
 "opt_einsum.contract.ContractExpression._get_backend_expression": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "KeyError",
    "fn",
    "self",
    "self._backend_expressions"
   ]
  },
  "type": "function"
 },
 "opt_einsum.contract.ContractExpression._get_evaluated_constants": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "KeyError",
    "self._evaluated_constants",
    "self.evaluate_constants"
   ]
  },
  "type": "function"
 },
 "opt_einsum.contract.ContractExpression.evaluate_constants": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "range",
    "self",
    "self._evaluated_constants",
    "self.contraction_list"
   ]
  },
  "type": "function"
 },
 "opt_einsum.contract.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "opt_einsum.contract.PathInfo": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "opt_einsum.contract.PathInfo.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "opt_einsum.contract.PathInfo.__repr__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "decimal.Decimal",
    "enumerate",
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "opt_einsum.contract.Shaped": {
  "data": {
   "lineno": 754
  },
  "type": "constant"
 },
 "opt_einsum.contract.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "opt_einsum.contract._choose_memory_arg": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "max"
   ]
  },
  "type": "function"
 },
 "opt_einsum.contract._core_contract": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "any",
    "enumerate",
    "len",
    "map",
    "opt_einsum.contract._einsum",
    "opt_einsum.contract._tensordot",
    "opt_einsum.contract._transpose",
    "tuple"
   ]
  },
  "type": "function"
 },
 "opt_einsum.contract._default_transpose": {
  "data": {
   "lineno": 359
  },
  "type": "function"
 },
 "opt_einsum.contract._einsum": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "fn",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "opt_einsum.contract._tensordot": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "opt_einsum.contract._transpose": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "fn",
    "opt_einsum.contract._default_transpose"
   ]
  },
  "type": "function"
 },
 "opt_einsum.contract.contract": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "opt_einsum.contract.ContractExpression",
    "opt_einsum.contract._core_contract",
    "opt_einsum.contract._einsum",
    "opt_einsum.contract.contract_path"
   ]
  },
  "type": "function"
 },
 "opt_einsum.contract.contract_expression": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "isinstance",
    "opt_einsum.contract.contract",
    "opt_einsum.contract.shape_only"
   ]
  },
  "type": "function"
 },
 "opt_einsum.contract.contract_path": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "DeprecationWarning",
    "KeyError",
    "TypeError",
    "ValueError",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "opt_einsum.contract.PathInfo",
    "opt_einsum.contract._choose_memory_arg",
    "opt_einsum.contract.warnings",
    "set",
    "sorted",
    "sum",
    "tuple"
   ]
  },
  "type": "function"
 },
 "opt_einsum.contract.format_const_einsum_str": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "opt_einsum.contract.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "opt_einsum.contract.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.contract.shape_only": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "opt_einsum.contract.Shaped"
   ]
  },
  "type": "function"
 },
 "opt_einsum.contract.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "opt_einsum.helpers": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "opt_einsum.helpers._sizes",
    "opt_einsum.helpers._valid_chars",
    "zip"
   ]
  },
  "type": "module"
 },
 "opt_einsum.helpers.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "opt_einsum.helpers._default_dim_dict": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "opt_einsum.helpers._sizes": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "opt_einsum.helpers._valid_chars": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "opt_einsum.helpers.build_views": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.random.rand",
    "opt_einsum.helpers._default_dim_dict"
   ]
  },
  "type": "function"
 },
 "opt_einsum.helpers.compute_size_by_dict": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "opt_einsum.helpers.find_contraction": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "list",
    "set.union",
    "sorted"
   ]
  },
  "type": "function"
 },
 "opt_einsum.helpers.flop_count": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "max",
    "opt_einsum.helpers.compute_size_by_dict"
   ]
  },
  "type": "function"
 },
 "opt_einsum.helpers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.helpers.rand_equation": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "enumerate",
    "gen",
    "get_symbol",
    "list",
    "numpy.random.permutation",
    "numpy.random.randint",
    "numpy.random.seed",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "opt_einsum.helpers.rand_equation.gen": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "opt_einsum.parser": {
  "data": {},
  "type": "module"
 },
 "opt_einsum.parser.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "opt_einsum.parser.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "opt_einsum.parser._einsum_symbols_base": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "opt_einsum.parser.alpha_canonicalize": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "len",
    "opt_einsum.parser.get_symbol"
   ]
  },
  "type": "function"
 },
 "opt_einsum.parser.convert_interleaved_input": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "Ellipsis",
    "TypeError",
    "enumerate",
    "len",
    "list",
    "opt_einsum.parser.convert_subscripts",
    "opt_einsum.parser.get_symbol",
    "opt_einsum.parser.itertools",
    "opt_einsum.parser.possibly_convert_to_numpy",
    "range",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "opt_einsum.parser.convert_subscripts": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "Ellipsis"
   ]
  },
  "type": "function"
 },
 "opt_einsum.parser.convert_to_valid_einsum_chars": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "enumerate",
    "opt_einsum.parser.get_symbol",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "opt_einsum.parser.find_output_shape": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "max",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "opt_einsum.parser.find_output_str": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "opt_einsum.parser.gen_unused_symbols": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "opt_einsum.parser.get_symbol"
   ]
  },
  "type": "function"
 },
 "opt_einsum.parser.get_symbol": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "opt_einsum.parser._einsum_symbols_base"
   ]
  },
  "type": "function"
 },
 "opt_einsum.parser.has_valid_einsum_chars_only": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "all",
    "map",
    "opt_einsum.parser.is_valid_einsum_char"
   ]
  },
  "type": "function"
 },
 "opt_einsum.parser.is_valid_einsum_char": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "opt_einsum.parser._einsum_symbols_base"
   ]
  },
  "type": "function"
 },
 "opt_einsum.parser.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "opt_einsum.parser.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.parser.parse_einsum_input": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "isinstance",
    "len",
    "max",
    "opt_einsum.parser.convert_interleaved_input",
    "opt_einsum.parser.find_output_str",
    "opt_einsum.parser.gen_unused_symbols",
    "opt_einsum.parser.possibly_convert_to_numpy",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "opt_einsum.parser.possibly_convert_to_numpy": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "hasattr",
    "numpy.asanyarray"
   ]
  },
  "type": "function"
 },
 "opt_einsum.paths": {
  "data": {
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "module"
 },
 "opt_einsum.paths._UNLIMITED_MEM": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "opt_einsum.paths.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "opt_einsum.paths._calc_k12_flops": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "frozenset.union",
    "map"
   ]
  },
  "type": "function"
 },
 "opt_einsum.paths._compute_oversize_flops": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "frozenset.union",
    "len",
    "map"
   ]
  },
  "type": "function"
 },
 "opt_einsum.paths._get_candidate": {
  "data": {
   "lineno": 338
  },
  "type": "function"
 },
 "opt_einsum.paths._push_candidate": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "min",
    "opt_einsum.paths._get_candidate",
    "opt_einsum.paths.heapq"
   ]
  },
  "type": "function"
 },
 "opt_einsum.paths._ssa_optimize": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "collections.defaultdict",
    "enumerate",
    "frozenset",
    "frozenset.intersection",
    "len",
    "list",
    "map",
    "max",
    "min",
    "next",
    "opt_einsum.paths._push_candidate",
    "opt_einsum.paths._update_ref_counts",
    "opt_einsum.paths.heapq",
    "opt_einsum.paths.itertools",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "opt_einsum.paths._update_ref_counts": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "opt_einsum.paths.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "opt_einsum.paths.branch": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "_branch_iterate",
    "collections.defaultdict",
    "float",
    "frozenset",
    "len",
    "map",
    "opt_einsum.paths.ssa_to_linear",
    "range",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "opt_einsum.paths.branch._branch_iterate": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "_assess_candidate",
    "_branch_iterate",
    "len",
    "opt_einsum.paths.heapq",
    "opt_einsum.paths.itertools"
   ]
  },
  "type": "function"
 },
 "opt_einsum.paths.branch._branch_iterate._assess_candidate": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "opt_einsum.paths._UNLIMITED_MEM",
    "opt_einsum.paths._calc_k12_flops",
    "opt_einsum.paths._compute_oversize_flops",
    "tuple"
   ]
  },
  "type": "function"
 },
 "opt_einsum.paths.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "opt_einsum.paths.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "opt_einsum.paths.greedy": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "opt_einsum.paths._UNLIMITED_MEM",
    "opt_einsum.paths._ssa_optimize",
    "opt_einsum.paths.branch",
    "opt_einsum.paths.ssa_to_linear"
   ]
  },
  "type": "function"
 },
 "opt_einsum.paths.heapq": {
  "data": {
   "shadows": "heapq"
  },
  "type": "import"
 },
 "opt_einsum.paths.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "opt_einsum.paths.linear_to_ssa": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "len",
    "list",
    "map",
    "next",
    "opt_einsum.paths.itertools",
    "range",
    "sorted",
    "sum",
    "tuple"
   ]
  },
  "type": "function"
 },
 "opt_einsum.paths.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.paths.optimal": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "_optimal_iterate",
    "float",
    "frozenset",
    "len",
    "map",
    "opt_einsum.paths.ssa_to_linear",
    "range",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "opt_einsum.paths.optimal._optimal_iterate": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "KeyError",
    "_optimal_iterate",
    "len",
    "opt_einsum.paths._UNLIMITED_MEM",
    "opt_einsum.paths._calc_k12_flops",
    "opt_einsum.paths._compute_oversize_flops",
    "opt_einsum.paths.itertools",
    "tuple"
   ]
  },
  "type": "function"
 },
 "opt_einsum.paths.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "opt_einsum.paths.ssa_to_linear": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "int",
    "map",
    "max",
    "numpy.arange",
    "numpy.int32",
    "tuple"
   ]
  },
  "type": "function"
 },
 "opt_einsum.sharing": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "collections.defaultdict",
    "list",
    "opt_einsum.sharing.threading"
   ]
  },
  "type": "module"
 },
 "opt_einsum.sharing.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "opt_einsum.sharing._SHARING_STACK": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "opt_einsum.sharing.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "opt_einsum.sharing._add_sharing_cache": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "opt_einsum.sharing._SHARING_STACK",
    "opt_einsum.sharing.get_thread_id"
   ]
  },
  "type": "function"
 },
 "opt_einsum.sharing._memoize": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "fn",
    "opt_einsum.sharing.get_sharing_cache"
   ]
  },
  "type": "function"
 },
 "opt_einsum.sharing._remove_sharing_cache": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "opt_einsum.sharing._SHARING_STACK",
    "opt_einsum.sharing.get_thread_id"
   ]
  },
  "type": "function"
 },
 "opt_einsum.sharing._save_tensors": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "id",
    "opt_einsum.sharing.get_sharing_cache"
   ]
  },
  "type": "function"
 },
 "opt_einsum.sharing.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "opt_einsum.sharing.count_cached_ops": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "collections.Counter"
   ]
  },
  "type": "function"
 },
 "opt_einsum.sharing.currently_sharing": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "opt_einsum.sharing._SHARING_STACK",
    "opt_einsum.sharing.get_thread_id"
   ]
  },
  "type": "function"
 },
 "opt_einsum.sharing.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "opt_einsum.sharing.einsum_cache_wrap": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "opt_einsum.sharing.einsum_cache_wrap.cached_einsum": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "alpha_canonicalize",
    "einsum",
    "id",
    "map",
    "opt_einsum.sharing._memoize",
    "opt_einsum.sharing._save_tensors",
    "opt_einsum.sharing.currently_sharing",
    "opt_einsum.sharing.functools",
    "parse_einsum_input",
    "sorted",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "opt_einsum.sharing.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "opt_einsum.sharing.get_sharing_cache": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "opt_einsum.sharing._SHARING_STACK",
    "opt_einsum.sharing.get_thread_id"
   ]
  },
  "type": "function"
 },
 "opt_einsum.sharing.get_thread_id": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "opt_einsum.sharing.threading"
   ]
  },
  "type": "function"
 },
 "opt_einsum.sharing.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "opt_einsum.sharing.shared_intermediates": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "opt_einsum.sharing._add_sharing_cache",
    "opt_einsum.sharing._remove_sharing_cache",
    "opt_einsum.sharing.contextlib"
   ]
  },
  "type": "function"
 },
 "opt_einsum.sharing.tensordot_cache_wrap": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "opt_einsum.sharing.tensordot_cache_wrap.cached_tensordot": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "id",
    "isinstance",
    "len",
    "list",
    "opt_einsum.sharing._memoize",
    "opt_einsum.sharing._save_tensors",
    "opt_einsum.sharing.currently_sharing",
    "opt_einsum.sharing.functools",
    "opt_einsum.sharing.numbers",
    "range",
    "tensordot",
    "tuple"
   ]
  },
  "type": "function"
 },
 "opt_einsum.sharing.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "opt_einsum.sharing.to_backend_cache_wrap": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "opt_einsum.sharing.functools"
   ]
  },
  "type": "function"
 },
 "opt_einsum.sharing.to_backend_cache_wrap.cached_to_backend": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "id",
    "opt_einsum.sharing._memoize",
    "opt_einsum.sharing.currently_sharing",
    "opt_einsum.sharing.functools",
    "to_backend",
    "to_backend.__name__"
   ]
  },
  "type": "function"
 },
 "opt_einsum.sharing.transpose_cache_wrap": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "opt_einsum.sharing.transpose_cache_wrap.cached_transpose": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "id",
    "opt_einsum.sharing._memoize",
    "opt_einsum.sharing._save_tensors",
    "opt_einsum.sharing.currently_sharing",
    "opt_einsum.sharing.functools",
    "transpose",
    "tuple"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests": {
  "data": {},
  "type": "module"
 },
 "opt_einsum.tests.test_backends": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "opt_einsum.tests.test_backends._TF_CONFIG",
    "opt_einsum.tests.test_backends.os",
    "tensorflow.ConfigProto"
   ]
  },
  "type": "module"
 },
 "opt_einsum.tests.test_backends._TF_CONFIG": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_backends.backends": {
  "data": {
   "shadows": "opt_einsum.backends"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_backends.contract": {
  "data": {
   "shadows": "opt_einsum.contract"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_backends.contract_expression": {
  "data": {
   "shadows": "opt_einsum.contract_expression"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_backends.cupy": {
  "data": {
   "shadows": "cupy"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_backends.found_cupy": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_backends.found_tensorflow": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_backends.found_theano": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_backends.found_torch": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_backends.helpers": {
  "data": {
   "shadows": "opt_einsum.helpers"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_backends.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_backends.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_backends.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_backends.sharing": {
  "data": {
   "shadows": "opt_einsum.sharing"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_backends.test_cupy": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "expr",
    "isinstance",
    "numpy.allclose",
    "opt_einsum.backends.to_cupy",
    "opt_einsum.contract",
    "opt_einsum.contract_expression",
    "opt_einsum.helpers.build_views",
    "opt_einsum.tests.test_backends.cupy",
    "opt_einsum.tests.test_backends.found_cupy",
    "opt_einsum.tests.test_backends.pytest",
    "opt_einsum.tests.test_backends.tests"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_cupy_with_constants": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "enumerate",
    "expr",
    "expr._evaluated_constants",
    "isinstance",
    "numpy.allclose",
    "numpy.random.rand",
    "opt_einsum.contract",
    "opt_einsum.contract_expression",
    "opt_einsum.tests.test_backends.cupy",
    "opt_einsum.tests.test_backends.found_cupy",
    "opt_einsum.tests.test_backends.pytest"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_dask": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "expr",
    "isinstance",
    "numpy.allclose",
    "numpy.array",
    "opt_einsum.contract",
    "opt_einsum.contract_expression",
    "opt_einsum.helpers.build_views",
    "opt_einsum.tests.test_backends.pytest",
    "opt_einsum.tests.test_backends.tests"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_sparse": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "expr",
    "isinstance",
    "numpy.allclose",
    "numpy.random.choice",
    "numpy.random.seed",
    "opt_einsum.contract",
    "opt_einsum.contract_expression",
    "opt_einsum.helpers.build_views",
    "opt_einsum.tests.test_backends.pytest",
    "opt_einsum.tests.test_backends.tests"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_tensorflow": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "expr",
    "numpy.allclose",
    "numpy.empty_like",
    "opt_einsum.backends.to_tensorflow",
    "opt_einsum.contract",
    "opt_einsum.contract_expression",
    "opt_einsum.helpers.build_views",
    "opt_einsum.tests.test_backends._TF_CONFIG",
    "opt_einsum.tests.test_backends.found_tensorflow",
    "opt_einsum.tests.test_backends.pytest",
    "opt_einsum.tests.test_backends.tests",
    "tensorflow.Session"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_tensorflow_with_constants": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "enumerate",
    "expr",
    "expr._evaluated_constants",
    "isinstance",
    "numpy.allclose",
    "numpy.random.rand",
    "opt_einsum.backends.to_tensorflow",
    "opt_einsum.contract",
    "opt_einsum.contract_expression",
    "opt_einsum.tests.test_backends._TF_CONFIG",
    "opt_einsum.tests.test_backends.found_tensorflow",
    "opt_einsum.tests.test_backends.pytest",
    "tensorflow.Session",
    "tensorflow.Tensor"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_tensorflow_with_sharing": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "all",
    "expr",
    "isinstance",
    "len",
    "numpy.allclose",
    "opt_einsum.contract",
    "opt_einsum.contract_expression",
    "opt_einsum.helpers.build_views",
    "opt_einsum.sharing.get_sharing_cache",
    "opt_einsum.sharing.shared_intermediates",
    "opt_einsum.tests.test_backends._TF_CONFIG",
    "opt_einsum.tests.test_backends.found_tensorflow",
    "opt_einsum.tests.test_backends.pytest",
    "opt_einsum.tests.test_backends.tests",
    "tensorflow.Session",
    "tensorflow.Tensor"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_theano": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "expr",
    "isinstance",
    "numpy.allclose",
    "opt_einsum.backends.to_theano",
    "opt_einsum.contract",
    "opt_einsum.contract_expression",
    "opt_einsum.helpers.build_views",
    "opt_einsum.tests.test_backends.found_theano",
    "opt_einsum.tests.test_backends.pytest",
    "opt_einsum.tests.test_backends.tests",
    "opt_einsum.tests.test_backends.theano"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_theano_with_constants": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "enumerate",
    "expr",
    "expr._evaluated_constants",
    "isinstance",
    "numpy.allclose",
    "numpy.random.rand",
    "opt_einsum.backends.to_theano",
    "opt_einsum.contract",
    "opt_einsum.contract_expression",
    "opt_einsum.tests.test_backends.found_theano",
    "opt_einsum.tests.test_backends.pytest",
    "opt_einsum.tests.test_backends.theano"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_theano_with_sharing": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "all",
    "expr",
    "isinstance",
    "len",
    "numpy.allclose",
    "opt_einsum.contract",
    "opt_einsum.contract_expression",
    "opt_einsum.helpers.build_views",
    "opt_einsum.sharing.get_sharing_cache",
    "opt_einsum.sharing.shared_intermediates",
    "opt_einsum.tests.test_backends.found_theano",
    "opt_einsum.tests.test_backends.pytest",
    "opt_einsum.tests.test_backends.tests",
    "opt_einsum.tests.test_backends.theano"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_torch": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "expr",
    "isinstance",
    "numpy.allclose",
    "opt_einsum.backends.to_torch",
    "opt_einsum.contract",
    "opt_einsum.contract_expression",
    "opt_einsum.helpers.build_views",
    "opt_einsum.tests.test_backends.found_torch",
    "opt_einsum.tests.test_backends.pytest",
    "opt_einsum.tests.test_backends.tests",
    "opt_einsum.tests.test_backends.torch"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_torch_with_constants": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "enumerate",
    "expr",
    "expr._evaluated_constants",
    "isinstance",
    "numpy.allclose",
    "numpy.random.rand",
    "opt_einsum.backends.to_torch",
    "opt_einsum.contract",
    "opt_einsum.contract_expression",
    "opt_einsum.tests.test_backends.found_torch",
    "opt_einsum.tests.test_backends.pytest",
    "opt_einsum.tests.test_backends.torch"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_backends.tests": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_backends.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_backends.theano": {
  "data": {
   "shadows": "theano"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_backends.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_blas": {
  "data": {
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "module"
 },
 "opt_einsum.tests.test_blas.blas": {
  "data": {
   "shadows": "opt_einsum.blas"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_blas.blas_tests": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_blas.contract": {
  "data": {
   "shadows": "opt_einsum.contract"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_blas.helpers": {
  "data": {
   "shadows": "opt_einsum.helpers"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_blas.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_blas.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_blas.test_blas_out": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.dot",
    "numpy.empty",
    "numpy.random.rand",
    "opt_einsum.contract"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_blas.test_can_blas": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "opt_einsum.blas.can_blas",
    "opt_einsum.tests.test_blas.blas_tests",
    "opt_einsum.tests.test_blas.pytest"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_blas.test_tensor_blas": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "len",
    "numpy.allclose",
    "numpy.einsum",
    "opt_einsum.blas.tensor_blas",
    "opt_einsum.helpers.build_views",
    "opt_einsum.tests.test_blas.blas_tests",
    "opt_einsum.tests.test_blas.pytest"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_contract": {
  "data": {},
  "type": "module"
 },
 "opt_einsum.tests.test_contract.all_optimizers": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_contract.compat": {
  "data": {
   "shadows": "opt_einsum.compat"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_contract.contract": {
  "data": {
   "shadows": "opt_einsum.contract"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_contract.contract_expression": {
  "data": {
   "shadows": "opt_einsum.contract_expression"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_contract.contract_path": {
  "data": {
   "shadows": "opt_einsum.contract_path"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_contract.helpers": {
  "data": {
   "shadows": "opt_einsum.helpers"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_contract.linear_to_ssa": {
  "data": {
   "shadows": "opt_einsum.paths.linear_to_ssa"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_contract.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_contract.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_contract.ssa_to_linear": {
  "data": {
   "shadows": "opt_einsum.paths.ssa_to_linear"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_contract.test_compare": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "numpy.allclose",
    "opt_einsum.contract",
    "opt_einsum.helpers.build_views",
    "opt_einsum.tests.test_contract.all_optimizers",
    "opt_einsum.tests.test_contract.pytest",
    "opt_einsum.tests.test_contract.tests"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_compare_blas": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "numpy.allclose",
    "opt_einsum.contract",
    "opt_einsum.helpers.build_views",
    "opt_einsum.tests.test_contract.all_optimizers",
    "opt_einsum.tests.test_contract.pytest",
    "opt_einsum.tests.test_contract.tests"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_compare_blas_greek": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "numpy.allclose",
    "opt_einsum.compat.get_char",
    "opt_einsum.contract",
    "opt_einsum.helpers.build_views",
    "opt_einsum.tests.test_contract.all_optimizers",
    "opt_einsum.tests.test_contract.pytest",
    "opt_einsum.tests.test_contract.tests",
    "ord"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_compare_greek": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.allclose",
    "opt_einsum.compat.get_char",
    "opt_einsum.contract",
    "opt_einsum.helpers.build_views",
    "opt_einsum.tests.test_contract.all_optimizers",
    "opt_einsum.tests.test_contract.pytest",
    "opt_einsum.tests.test_contract.tests",
    "ord"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_contract_expression_interleaved_input": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "expr",
    "numpy.allclose",
    "numpy.einsum",
    "numpy.random.randn",
    "opt_einsum.contract_expression"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_contract_expression_with_constants": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "enumerate",
    "expr",
    "numpy.allclose",
    "opt_einsum.contract",
    "opt_einsum.contract_expression",
    "opt_einsum.helpers.build_views",
    "opt_einsum.tests.test_contract.pytest",
    "print",
    "zip"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_contract_expressions": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "expr",
    "expr.__repr__",
    "expr.__str__",
    "numpy.allclose",
    "opt_einsum.contract",
    "opt_einsum.contract_expression",
    "opt_einsum.helpers.build_views",
    "opt_einsum.tests.test_contract.all_optimizers",
    "opt_einsum.tests.test_contract.pytest",
    "opt_einsum.tests.test_contract.tests"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_drop_in_replacement": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.einsum",
    "opt_einsum.contract",
    "opt_einsum.helpers.build_views",
    "opt_einsum.tests.test_contract.pytest",
    "opt_einsum.tests.test_contract.tests"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_linear_vs_ssa": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "opt_einsum.contract_path",
    "opt_einsum.helpers.build_views",
    "opt_einsum.paths.linear_to_ssa",
    "opt_einsum.paths.ssa_to_linear",
    "opt_einsum.tests.test_contract.pytest",
    "opt_einsum.tests.test_contract.tests"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_printing": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "len",
    "opt_einsum.contract_path",
    "opt_einsum.helpers.build_views",
    "str"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_rand_equation": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "numpy.allclose",
    "opt_einsum.contract",
    "opt_einsum.helpers.build_views",
    "opt_einsum.helpers.rand_equation",
    "opt_einsum.tests.test_contract.pytest"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_some_non_alphabet_maintains_order": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.random.rand",
    "opt_einsum.compat.get_char",
    "opt_einsum.contract",
    "ord"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_contract.tests": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_edge_cases": {
  "data": {},
  "type": "module"
 },
 "opt_einsum.tests.test_edge_cases.contract": {
  "data": {
   "shadows": "opt_einsum.contract"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_edge_cases.contract_expression": {
  "data": {
   "shadows": "opt_einsum.contract_expression"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_edge_cases.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_edge_cases.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_edge_cases.test_broadcasting_contraction": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.random.rand",
    "opt_einsum.contract"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_edge_cases.test_broadcasting_contraction2": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.random.rand",
    "opt_einsum.contract"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_edge_cases.test_broadcasting_contraction3": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.random.rand",
    "opt_einsum.contract"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_edge_cases.test_broadcasting_contraction4": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.arange",
    "opt_einsum.contract"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_edge_cases.test_can_blas_on_healed_broadcast_dimensions": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "expr",
    "expr.contraction_list",
    "opt_einsum.contract_expression"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_edge_cases.test_contract_expression_checks": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ValueError",
    "expr",
    "numpy.empty",
    "numpy.random.rand",
    "opt_einsum.contract_expression",
    "opt_einsum.tests.test_edge_cases.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_input": {
  "data": {},
  "type": "module"
 },
 "opt_einsum.tests.test_input.build_views": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.rand",
    "zip"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_input.contract": {
  "data": {
   "shadows": "opt_einsum.contract"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_input.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_input.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_input.test_compare": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.allclose",
    "opt_einsum.contract",
    "opt_einsum.tests.test_input.build_views",
    "opt_einsum.tests.test_input.pytest"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_ellipse_input1": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "Ellipsis",
    "numpy.allclose",
    "opt_einsum.contract",
    "opt_einsum.tests.test_input.build_views"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_ellipse_input2": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "Ellipsis",
    "numpy.allclose",
    "opt_einsum.contract",
    "opt_einsum.tests.test_input.build_views"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_ellipse_input3": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "Ellipsis",
    "numpy.allclose",
    "opt_einsum.contract",
    "opt_einsum.tests.test_input.build_views"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_ellipse_input4": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "Ellipsis",
    "numpy.allclose",
    "opt_einsum.contract",
    "opt_einsum.tests.test_input.build_views"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_hashable_object_input_format": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "numpy.allclose",
    "opt_einsum.contract",
    "opt_einsum.tests.test_input.build_views",
    "range"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_large_int_input_format": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "numpy.allclose",
    "opt_einsum.contract",
    "opt_einsum.tests.test_input.build_views",
    "range"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_singleton_dimension_broadcast": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.full",
    "numpy.ones",
    "opt_einsum.contract"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_type_errors": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "Ellipsis",
    "TypeError",
    "ValueError",
    "dict",
    "opt_einsum.contract",
    "opt_einsum.tests.test_input.build_views",
    "opt_einsum.tests.test_input.pytest"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_value_errors": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.arange",
    "opt_einsum.contract",
    "opt_einsum.tests.test_input.pytest"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_paths": {
  "data": {
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "module"
 },
 "opt_einsum.tests.test_paths.assert_contract_order": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "func",
    "opt_einsum.tests.test_paths.check_path"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_paths.check_path": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_paths.explicit_path_tests": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_paths.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_paths.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_paths.oe": {
  "data": {
   "shadows": "opt_einsum"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_paths.path_edge_tests": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_paths.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_paths.test_can_optimize_outer_products": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "numpy.random.randn",
    "opt_einsum.contract_path",
    "opt_einsum.tests.test_paths.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_flop_cost": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "opt_einsum.helpers.flop_count"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_greedy_edge_cases": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "opt_einsum.contract_path",
    "opt_einsum.helpers.build_views",
    "opt_einsum.tests.test_paths.check_path"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_large_path": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "dict",
    "opt_einsum.contract_path",
    "opt_einsum.get_symbol",
    "opt_einsum.helpers.build_views",
    "opt_einsum.tests.test_paths.itertools",
    "opt_einsum.tests.test_paths.pytest",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_memory_paths": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "opt_einsum.contract_path",
    "opt_einsum.helpers.build_views",
    "opt_einsum.tests.test_paths.check_path"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_optimal_edge_cases": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "opt_einsum.contract_path",
    "opt_einsum.helpers.build_views",
    "opt_einsum.tests.test_paths.check_path"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_path_edge_cases": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "opt_einsum.contract_path",
    "opt_einsum.helpers.build_views",
    "opt_einsum.tests.test_paths.check_path",
    "opt_einsum.tests.test_paths.path_edge_tests",
    "opt_einsum.tests.test_paths.pytest"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_path_greedy": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "opt_einsum.paths.greedy",
    "opt_einsum.tests.test_paths.assert_contract_order",
    "opt_einsum.tests.test_paths.explicit_path_tests"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_path_optimal": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "opt_einsum.paths.optimal",
    "opt_einsum.tests.test_paths.assert_contract_order",
    "opt_einsum.tests.test_paths.explicit_path_tests"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_size_by_dict": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "opt_einsum.helpers.compute_size_by_dict",
    "path_func",
    "zip"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "opt_einsum.backends.to_cupy",
    "opt_einsum.backends.to_torch",
    "opt_einsum.tests.test_sharing.cupy_if_found",
    "opt_einsum.tests.test_sharing.pytest",
    "opt_einsum.tests.test_sharing.torch_if_found"
   ]
  },
  "type": "module"
 },
 "opt_einsum.tests.test_sharing.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.ThreadPool": {
  "data": {
   "shadows": "multiprocessing.pool.ThreadPool"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing._compute_cost": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "opt_einsum.sharing.count_cached_ops"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing._einsum": {
  "data": {
   "shadows": "opt_einsum.contract._einsum"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.backends": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_sharing.contract": {
  "data": {
   "shadows": "opt_einsum.contract"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.contract_expression": {
  "data": {
   "shadows": "opt_einsum.contract_expression"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.contract_path": {
  "data": {
   "shadows": "opt_einsum.contract_path"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.count_cached_ops": {
  "data": {
   "shadows": "opt_einsum.sharing.count_cached_ops"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.cupy": {
  "data": {
   "shadows": "cupy"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.cupy_if_found": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_sharing.currently_sharing": {
  "data": {
   "shadows": "opt_einsum.sharing.currently_sharing"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.equations": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_sharing.get_sharing_cache": {
  "data": {
   "shadows": "opt_einsum.sharing.get_sharing_cache"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.get_symbol": {
  "data": {
   "shadows": "opt_einsum.get_symbol"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.helpers": {
  "data": {
   "shadows": "opt_einsum.helpers"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.parse_einsum_input": {
  "data": {
   "shadows": "opt_einsum.parser.parse_einsum_input"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.shared_intermediates": {
  "data": {
   "shadows": "opt_einsum.shared_intermediates"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.test_chain": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "expr",
    "numpy.random.rand",
    "opt_einsum.contract_expression",
    "opt_einsum.contract_path",
    "opt_einsum.get_symbol",
    "opt_einsum.shared_intermediates",
    "opt_einsum.tests.test_sharing.backends",
    "opt_einsum.tests.test_sharing.pytest",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_chain_2": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "expr",
    "numpy.random.rand",
    "opt_einsum.contract_expression",
    "opt_einsum.contract_path",
    "opt_einsum.get_symbol",
    "opt_einsum.shared_intermediates",
    "opt_einsum.tests.test_sharing.backends",
    "opt_einsum.tests.test_sharing.pytest",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_chain_2_growth": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "expr",
    "list",
    "numpy.random.rand",
    "opt_einsum.contract_expression",
    "opt_einsum.get_symbol",
    "opt_einsum.shared_intermediates",
    "opt_einsum.tests.test_sharing._compute_cost",
    "opt_einsum.tests.test_sharing.backends",
    "opt_einsum.tests.test_sharing.pytest",
    "print",
    "range",
    "repr",
    "zip"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_chain_sharing": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "expr",
    "numpy.random.rand",
    "opt_einsum.contract_expression",
    "opt_einsum.contract_path",
    "opt_einsum.get_symbol",
    "opt_einsum.shared_intermediates",
    "opt_einsum.tests.test_sharing._compute_cost",
    "opt_einsum.tests.test_sharing.backends",
    "opt_einsum.tests.test_sharing.pytest",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_complete_sharing": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "expr",
    "opt_einsum.contract_expression",
    "opt_einsum.helpers.build_views",
    "opt_einsum.shared_intermediates",
    "opt_einsum.sharing.count_cached_ops",
    "opt_einsum.tests.test_sharing.backends",
    "opt_einsum.tests.test_sharing.pytest",
    "print"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_multithreaded_sharing": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "fn",
    "multiprocessing.pool.ThreadPool",
    "opt_einsum.sharing.currently_sharing",
    "range"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_multithreaded_sharing.fn": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "len",
    "opt_einsum.contract",
    "opt_einsum.helpers.build_views",
    "opt_einsum.shared_intermediates",
    "opt_einsum.sharing.get_sharing_cache"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_no_sharing_separate_cache": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "expr",
    "opt_einsum.contract_expression",
    "opt_einsum.helpers.build_views",
    "opt_einsum.shared_intermediates",
    "opt_einsum.sharing.count_cached_ops",
    "opt_einsum.tests.test_sharing.backends",
    "opt_einsum.tests.test_sharing.pytest",
    "print"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_partial_sharing": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "collections.Counter",
    "expr",
    "opt_einsum.contract_expression",
    "opt_einsum.helpers.build_views",
    "opt_einsum.shared_intermediates",
    "opt_einsum.sharing.count_cached_ops",
    "opt_einsum.tests.test_sharing.backends",
    "opt_einsum.tests.test_sharing.pytest",
    "print"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_sharing_modulo_commutativity": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "opt_einsum.contract._einsum",
    "opt_einsum.helpers.build_views",
    "opt_einsum.parser.parse_einsum_input",
    "opt_einsum.shared_intermediates",
    "opt_einsum.sharing.count_cached_ops",
    "opt_einsum.tests.test_sharing.backends",
    "opt_einsum.tests.test_sharing.equations",
    "opt_einsum.tests.test_sharing.itertools",
    "opt_einsum.tests.test_sharing.pytest",
    "opt_einsum.tests.test_sharing.to_backend",
    "print",
    "zip"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_sharing_nesting": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "method1",
    "method2",
    "opt_einsum.helpers.build_views",
    "opt_einsum.tests.test_sharing.backends",
    "opt_einsum.tests.test_sharing.pytest",
    "opt_einsum.tests.test_sharing.weakref"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_sharing_nesting.method1": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "opt_einsum.contract_expression",
    "opt_einsum.shared_intermediates"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_sharing_nesting.method2": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "method1",
    "opt_einsum.contract_expression",
    "opt_einsum.shared_intermediates"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_sharing_reused_cache": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "expr",
    "opt_einsum.contract_expression",
    "opt_einsum.helpers.build_views",
    "opt_einsum.shared_intermediates",
    "opt_einsum.sharing.count_cached_ops",
    "opt_einsum.tests.test_sharing.backends",
    "opt_einsum.tests.test_sharing.pytest",
    "print"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_sharing_value": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "expr",
    "opt_einsum.contract_expression",
    "opt_einsum.helpers.build_views",
    "opt_einsum.shared_intermediates",
    "opt_einsum.tests.test_sharing.backends",
    "opt_einsum.tests.test_sharing.equations",
    "opt_einsum.tests.test_sharing.pytest"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_sharing_with_constants": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "enumerate",
    "numpy.allclose",
    "numpy.random.rand",
    "opt_einsum.contract_expression",
    "opt_einsum.shared_intermediates",
    "opt_einsum.tests.test_sharing.backends",
    "opt_einsum.tests.test_sharing.equations",
    "opt_einsum.tests.test_sharing.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.to_backend": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_sharing.to_cupy": {
  "data": {
   "shadows": "opt_einsum.backends.to_cupy"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.to_torch": {
  "data": {
   "shadows": "opt_einsum.backends.to_torch"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.torch_if_found": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_sharing.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "opt_einsum.versions": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 }
}