{
 "opt_einsum": {
  "data": {
   "symbols_in_volume": {
    "get_versions": {
     "line number": [
      14,
      17
     ]
    },
    "opt_einsum.versions": {
     "line number": [
      15,
      16,
      17
     ]
    }
   }
  },
  "type": "module"
 },
 "opt_einsum.__git_revision__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "opt_einsum.__version__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "opt_einsum._version": {
  "data": {},
  "type": "module"
 },
 "opt_einsum._version.get_versions": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "opt_einsum._version.json": {
     "line number": [
      21
     ]
    },
    "opt_einsum._version.version_json": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum._version.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "opt_einsum._version.version_json": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "opt_einsum.backends": {
  "data": {},
  "type": "module"
 },
 "opt_einsum.backends.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "opt_einsum.backends.cupy": {
  "data": {},
  "type": "module"
 },
 "opt_einsum.backends.cupy.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "opt_einsum.backends.cupy.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "opt_einsum.backends.cupy.build_expression": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "opt_einsum.backends.cupy.build_expression.cupy_contract": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "opt_einsum.backends.cupy.to_cupy": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.backends.cupy.cupy": {
  "data": {
   "shadows": "cupy"
  },
  "type": "import"
 },
 "opt_einsum.backends.cupy.evaluate_constants": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "expr": {
     "line number": [
      38
     ]
    },
    "opt_einsum.backends.cupy.to_cupy": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.backends.cupy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.backends.cupy.to_cupy": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      18
     ]
    },
    "numpy.ndarray": {
     "line number": [
      18
     ]
    },
    "opt_einsum.backends.cupy.cupy": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.backends.dispatch": {
  "data": {
   "symbols_in_volume": {
    "opt_einsum.backends.dispatch.numpy": {
     "line number": [
      42,
      43,
      44
     ]
    }
   }
  },
  "type": "module"
 },
 "opt_einsum.backends.dispatch.CONVERT_BACKENDS": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "opt_einsum.backends.dispatch.EVAL_CONSTS_BACKENDS": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "opt_einsum.backends.dispatch.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "opt_einsum.backends.dispatch._aliases": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "opt_einsum.backends.dispatch._cached_funcs": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "opt_einsum.backends.dispatch._cupy": {
  "data": {
   "shadows": "cupy"
  },
  "type": "import"
 },
 "opt_einsum.backends.dispatch._has_einsum": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "opt_einsum.backends.dispatch._import_func": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      35,
      36
     ]
    },
    "getattr": {
     "line number": [
      34,
      34
     ]
    },
    "opt_einsum.backends.dispatch._aliases": {
     "line number": [
      33
     ]
    },
    "opt_einsum.backends.dispatch.importlib": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.backends.dispatch._tensorflow": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "opt_einsum.backends.dispatch._theano": {
  "data": {
   "shadows": "theano"
  },
  "type": "import"
 },
 "opt_einsum.backends.dispatch._torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "opt_einsum.backends.dispatch.build_expression": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "opt_einsum.backends.dispatch.CONVERT_BACKENDS": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.backends.dispatch.evaluate_constants": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "opt_einsum.backends.dispatch.EVAL_CONSTS_BACKENDS": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.backends.dispatch.get_func": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      54
     ]
    },
    "opt_einsum.backends.dispatch._cached_funcs": {
     "line number": [
      53,
      56
     ]
    },
    "opt_einsum.backends.dispatch._import_func": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.backends.dispatch.has_backend": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "opt_einsum.backends.dispatch.CONVERT_BACKENDS": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.backends.dispatch.has_einsum": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      73
     ]
    },
    "KeyError": {
     "line number": [
      69
     ]
    },
    "opt_einsum.backends.dispatch._has_einsum": {
     "line number": [
      68,
      72,
      74,
      76
     ]
    },
    "opt_einsum.backends.dispatch.get_func": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.backends.dispatch.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "opt_einsum.backends.dispatch.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.backends.tensorflow": {
  "data": {},
  "type": "module"
 },
 "opt_einsum.backends.tensorflow._CACHED_TF_DEVICE": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "opt_einsum.backends.tensorflow.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "opt_einsum.backends.tensorflow._get_tensorflow_and_device": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      25
     ]
    },
    "opt_einsum.backends.tensorflow._CACHED_TF_DEVICE": {
     "line number": [
      20,
      32,
      34
     ]
    },
    "tensorflow": {
     "line number": [
      32
     ]
    },
    "tensorflow.contrib.eager.in_eager_mode": {
     "line number": [
      24
     ]
    },
    "tensorflow.test.gpu_device_name": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.backends.tensorflow.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "opt_einsum.backends.tensorflow.build_expression": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "expr": {
     "line number": [
      123
     ]
    },
    "fn": {
     "line number": [
      123
     ]
    },
    "opt_einsum.backends.tensorflow._get_tensorflow_and_device": {
     "line number": [
      121
     ]
    },
    "opt_einsum.backends.tensorflow.build_expression_eager": {
     "line number": [
      122
     ]
    },
    "opt_einsum.backends.tensorflow.build_expression_graph": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.backends.tensorflow.build_expression_eager": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "opt_einsum.backends.tensorflow.build_expression_eager.tensorflow_eager_contract": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "expr._contract": {
     "line number": [
      105
     ]
    },
    "opt_einsum.backends.tensorflow.to_tensorflow": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.backends.tensorflow.build_expression_graph": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "opt_einsum.backends.tensorflow._get_tensorflow_and_device": {
     "line number": [
      65
     ]
    },
    "opt_einsum.backends.tensorflow.to_tensorflow": {
     "line number": [
      67
     ]
    },
    "tensorflow": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.backends.tensorflow.build_expression_graph.tensorflow_contract": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "tensorflow.get_default_session": {
     "line number": [
      71
     ]
    },
    "zip": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.backends.tensorflow.evaluate_constants": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "expr": {
     "line number": [
      129
     ]
    },
    "fn": {
     "line number": [
      128,
      129
     ]
    },
    "opt_einsum.backends.tensorflow._get_tensorflow_and_device": {
     "line number": [
      127
     ]
    },
    "opt_einsum.backends.tensorflow.evaluate_constants_eager": {
     "line number": [
      128
     ]
    },
    "opt_einsum.backends.tensorflow.evaluate_constants_graph": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.backends.tensorflow.evaluate_constants_eager": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "expr": {
     "line number": [
      114
     ]
    },
    "opt_einsum.backends.tensorflow.to_tensorflow": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.backends.tensorflow.evaluate_constants_graph": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "expr": {
     "line number": [
      87
     ]
    },
    "iter": {
     "line number": [
      91
     ]
    },
    "next": {
     "line number": [
      92
     ]
    },
    "opt_einsum.backends.tensorflow._get_tensorflow_and_device": {
     "line number": [
      83
     ]
    },
    "opt_einsum.backends.tensorflow.to_tensorflow": {
     "line number": [
      86,
      92
     ]
    },
    "tensorflow": {
     "line number": [
      83
     ]
    },
    "tensorflow.get_default_session": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.backends.tensorflow.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.backends.tensorflow.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "opt_einsum.backends.tensorflow.to_tensorflow": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      44,
      50
     ]
    },
    "numpy.ndarray": {
     "line number": [
      44,
      50
     ]
    },
    "opt_einsum.backends.tensorflow._get_tensorflow_and_device": {
     "line number": [
      41
     ]
    },
    "tensorflow": {
     "line number": [
      41
     ]
    },
    "tensorflow.convert_to_tensor": {
     "line number": [
      46,
      52
     ]
    },
    "tensorflow.device": {
     "line number": [
      45
     ]
    },
    "tensorflow.placeholder": {
     "line number": [
      54
     ]
    },
    "to_backend_cache_wrap": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.backends.theano": {
  "data": {},
  "type": "module"
 },
 "opt_einsum.backends.theano.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "opt_einsum.backends.theano.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "opt_einsum.backends.theano.build_expression": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      38
     ]
    },
    "opt_einsum.backends.theano.theano": {
     "line number": [
      38,
      39
     ]
    },
    "opt_einsum.backends.theano.to_theano": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.backends.theano.build_expression.theano_contract": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "graph": {
     "line number": [
      42
     ]
    },
    "isinstance": {
     "line number": [
      42
     ]
    },
    "opt_einsum.backends.theano.theano": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.backends.theano.evaluate_constants": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "expr": {
     "line number": [
      50
     ]
    },
    "opt_einsum.backends.theano.to_theano": {
     "line number": [
      49,
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.backends.theano.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.backends.theano.theano": {
  "data": {
   "shadows": "theano"
  },
  "type": "import"
 },
 "opt_einsum.backends.theano.to_theano": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      20
     ]
    },
    "len": {
     "line number": [
      24
     ]
    },
    "numpy.ndarray": {
     "line number": [
      20
     ]
    },
    "opt_einsum.backends.theano.theano": {
     "line number": [
      22,
      24
     ]
    },
    "to_backend_cache_wrap": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.backends.torch": {
  "data": {},
  "type": "module"
 },
 "opt_einsum.backends.torch._TORCH_DEVICE": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "opt_einsum.backends.torch._TORCH_HAS_TENSORDOT": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "opt_einsum.backends.torch.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "opt_einsum.backends.torch._get_torch_and_device": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      28
     ]
    },
    "opt_einsum.backends.torch._TORCH_DEVICE": {
     "line number": [
      24,
      27,
      30
     ]
    },
    "opt_einsum.backends.torch._TORCH_HAS_TENSORDOT": {
     "line number": [
      28
     ]
    },
    "opt_einsum.backends.torch.torch": {
     "line number": [
      26,
      27,
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.backends.torch._torch_symbols_base": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "opt_einsum.backends.torch.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "opt_einsum.backends.torch.build_expression": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "opt_einsum.backends.torch.build_expression.torch_contract": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "opt_einsum.backends.torch.to_torch": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.backends.torch.einsum": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "convert_to_valid_einsum_chars": {
     "line number": [
      44
     ]
    },
    "opt_einsum.backends.torch._get_torch_and_device": {
     "line number": [
      46
     ]
    },
    "opt_einsum.backends.torch.torch": {
     "line number": [
      46,
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.backends.torch.evaluate_constants": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "expr": {
     "line number": [
      131
     ]
    },
    "opt_einsum.backends.torch.to_torch": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.backends.torch.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.backends.torch.tensordot": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "int": {
     "line number": [
      62,
      66,
      68
     ]
    },
    "isinstance": {
     "line number": [
      62,
      66,
      68
     ]
    },
    "iter": {
     "line number": [
      77
     ]
    },
    "map": {
     "line number": [
      96
     ]
    },
    "next": {
     "line number": [
      79,
      86,
      91
     ]
    },
    "opt_einsum.backends.torch._TORCH_HAS_TENSORDOT": {
     "line number": [
      55
     ]
    },
    "opt_einsum.backends.torch._get_torch_and_device": {
     "line number": [
      53
     ]
    },
    "opt_einsum.backends.torch._torch_symbols_base": {
     "line number": [
      77
     ]
    },
    "opt_einsum.backends.torch.einsum": {
     "line number": [
      97
     ]
    },
    "opt_einsum.backends.torch.torch": {
     "line number": [
      53,
      56
     ]
    },
    "range": {
     "line number": [
      63,
      63,
      84,
      89
     ]
    },
    "zip": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.backends.torch.to_torch": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      104
     ]
    },
    "numpy.ndarray": {
     "line number": [
      104
     ]
    },
    "opt_einsum.backends.torch._get_torch_and_device": {
     "line number": [
      102
     ]
    },
    "opt_einsum.backends.torch.torch": {
     "line number": [
      102,
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.backends.torch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "opt_einsum.backends.torch.transpose": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "opt_einsum.blas": {
  "data": {},
  "type": "module"
 },
 "opt_einsum.blas.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "opt_einsum.blas.can_blas": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "int": {
     "line number": [
      69
     ]
    },
    "len": {
     "line number": [
      55,
      81,
      88,
      115,
      115
     ]
    },
    "set": {
     "line number": [
      60,
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.blas.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.blas.tensor_blas": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "len": {
     "line number": [
      193,
      235
     ]
    },
    "numpy.dot": {
     "line number": [
      204,
      209,
      213,
      217,
      221
     ]
    },
    "numpy.einsum": {
     "line number": [
      241
     ]
    },
    "numpy.squeeze": {
     "line number": [
      238
     ]
    },
    "numpy.tensordot": {
     "line number": [
      230
     ]
    },
    "set": {
     "line number": [
      168,
      169,
      170
     ]
    },
    "tuple": {
     "line number": [
      233
     ]
    },
    "zip": {
     "line number": [
      174,
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.compat": {
  "data": {
   "symbols_in_volume": {
    "NameError": {
     "line number": [
      9
     ]
    },
    "chr": {
     "line number": [
      11
     ]
    },
    "opt_einsum.compat.get_char": {
     "line number": [
      8
     ]
    },
    "str": {
     "line number": [
      8,
      12
     ]
    },
    "type": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "module"
 },
 "opt_einsum.compat.get_char": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "opt_einsum.compat.strings": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "opt_einsum.contract": {
  "data": {
   "symbols_in_volume": {
    "collections.namedtuple": {
     "line number": [
      754
     ]
    }
   }
  },
  "type": "module"
 },
 "opt_einsum.contract.ContractExpression": {
  "data": {
   "lineno": 597
  },
  "type": "class"
 },
 "opt_einsum.contract.ContractExpression.__call__": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      705,
      711,
      729
     ]
    },
    "any": {
     "line number": [
      724
     ]
    },
    "isinstance": {
     "line number": [
      724
     ]
    },
    "iter": {
     "line number": [
      716
     ]
    },
    "len": {
     "line number": [
      710,
      712
     ]
    },
    "next": {
     "line number": [
      717
     ]
    },
    "numpy.ndarray": {
     "line number": [
      724
     ]
    },
    "self._constants_dict": {
     "line number": [
      714
     ]
    },
    "self._contract": {
     "line number": [
      727
     ]
    },
    "self._contract_with_conversion": {
     "line number": [
      725
     ]
    },
    "self._full_num_args": {
     "line number": [
      708
     ]
    },
    "self._get_evaluated_constants": {
     "line number": [
      716
     ]
    },
    "self.num_args": {
     "line number": [
      708,
      712
     ]
    },
    "str": {
     "line number": [
      730
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.contract.ContractExpression.__init__": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": {
    "len": {
     "line number": [
      609
     ]
    },
    "opt_einsum.contract.format_const_einsum_str": {
     "line number": [
      605
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.contract.ContractExpression.__repr__": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": {
    "self._constants_dict": {
     "line number": [
      738,
      739
     ]
    },
    "self.contraction": {
     "line number": [
      742
     ]
    },
    "sorted": {
     "line number": [
      739
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.contract.ContractExpression.__str__": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      746
     ]
    },
    "self.__repr__": {
     "line number": [
      745
     ]
    },
    "self.contraction_list": {
     "line number": [
      746
     ]
    },
    "self.einsum_kwargs": {
     "line number": [
      749,
      750
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.contract.ContractExpression._contract": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": {
    "list": {
     "line number": [
      658
     ]
    },
    "opt_einsum.contract._core_contract": {
     "line number": [
      657
     ]
    },
    "self._full_contraction_list": {
     "line number": [
      655
     ]
    },
    "self.contraction_list": {
     "line number": [
      655
     ]
    },
    "self.einsum_kwargs": {
     "line number": [
      663
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.contract.ContractExpression._contract_with_conversion": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": {
    "self": {
     "line number": [
      676
     ]
    },
    "self._get_backend_expression": {
     "line number": [
      678
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.contract.ContractExpression._get_backend_expression": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      647
     ]
    },
    "fn": {
     "line number": [
      648,
      649,
      650
     ]
    },
    "self": {
     "line number": [
      648
     ]
    },
    "self._backend_expressions": {
     "line number": [
      646,
      649
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.contract.ContractExpression._get_evaluated_constants": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      640
     ]
    },
    "self._evaluated_constants": {
     "line number": [
      639,
      642
     ]
    },
    "self.evaluate_constants": {
     "line number": [
      641
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.contract.ContractExpression.evaluate_constants": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": {
    "range": {
     "line number": [
      626
     ]
    },
    "self": {
     "line number": [
      629
     ]
    },
    "self._evaluated_constants": {
     "line number": [
      630
     ]
    },
    "self.contraction_list": {
     "line number": [
      631
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.contract.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "opt_einsum.contract.PathInfo": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "object": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "class"
 },
 "opt_einsum.contract.PathInfo.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "max": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.contract.PathInfo.__repr__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "decimal.Decimal": {
     "line number": [
      49,
      50,
      52
     ]
    },
    "enumerate": {
     "line number": [
      71
     ]
    },
    "len": {
     "line number": [
      60
     ]
    },
    "max": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.contract.Shaped": {
  "data": {
   "lineno": 754
  },
  "type": "constant"
 },
 "opt_einsum.contract.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "opt_einsum.contract._choose_memory_arg": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      91
     ]
    },
    "int": {
     "line number": [
      93
     ]
    },
    "max": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.contract._core_contract": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": {
    "any": {
     "line number": [
      517
     ]
    },
    "enumerate": {
     "line number": [
      512
     ]
    },
    "len": {
     "line number": [
      523
     ]
    },
    "map": {
     "line number": [
      546
     ]
    },
    "opt_einsum.contract._einsum": {
     "line number": [
      559
     ]
    },
    "opt_einsum.contract._tensordot": {
     "line number": [
      541
     ]
    },
    "opt_einsum.contract._transpose": {
     "line number": [
      547
     ]
    },
    "tuple": {
     "line number": [
      541,
      541,
      546
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.contract._default_transpose": {
  "data": {
   "lineno": 359
  },
  "type": "function"
 },
 "opt_einsum.contract._einsum": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": {
    "fn": {
     "line number": [
      343,
      356
     ]
    },
    "isinstance": {
     "line number": [
      342
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.contract._tensordot": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "fn": {
     "line number": [
      376,
      377
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.contract._transpose": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": {
    "fn": {
     "line number": [
      368,
      369
     ]
    },
    "opt_einsum.contract._default_transpose": {
     "line number": [
      368
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.contract.contract": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      483
     ]
    },
    "len": {
     "line number": [
      482
     ]
    },
    "opt_einsum.contract.ContractExpression": {
     "line number": [
      494
     ]
    },
    "opt_einsum.contract._core_contract": {
     "line number": [
      496
     ]
    },
    "opt_einsum.contract._einsum": {
     "line number": [
      471
     ]
    },
    "opt_einsum.contract.contract_path": {
     "line number": [
      489
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.contract.contract_expression": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      826,
      830
     ]
    },
    "enumerate": {
     "line number": [
      844
     ]
    },
    "isinstance": {
     "line number": [
      833
     ]
    },
    "opt_einsum.contract.contract": {
     "line number": [
      846
     ]
    },
    "opt_einsum.contract.shape_only": {
     "line number": [
      844
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.contract.contract_path": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      203
     ]
    },
    "KeyError": {
     "line number": [
      278
     ]
    },
    "TypeError": {
     "line number": [
      199
     ]
    },
    "ValueError": {
     "line number": [
      230,
      240
     ]
    },
    "enumerate": {
     "line number": [
      226,
      232,
      286
     ]
    },
    "isinstance": {
     "line number": [
      259
     ]
    },
    "len": {
     "line number": [
      198,
      229,
      229,
      249,
      255,
      255,
      294,
      296,
      308
     ]
    },
    "list": {
     "line number": [
      288
     ]
    },
    "opt_einsum.contract.PathInfo": {
     "line number": [
      330
     ]
    },
    "opt_einsum.contract._choose_memory_arg": {
     "line number": [
      247
     ]
    },
    "opt_einsum.contract.warnings": {
     "line number": [
      203
     ]
    },
    "set": {
     "line number": [
      219,
      221,
      222
     ]
    },
    "sorted": {
     "line number": [
      288,
      313
     ]
    },
    "sum": {
     "line number": [
      255,
      325
     ]
    },
    "tuple": {
     "line number": [
      288
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.contract.format_const_einsum_str": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      588
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.contract.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "opt_einsum.contract.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.contract.shape_only": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": {
    "opt_einsum.contract.Shaped": {
     "line number": [
      761
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.contract.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "opt_einsum.helpers": {
  "data": {
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      12
     ]
    },
    "opt_einsum.helpers._sizes": {
     "line number": [
      13
     ]
    },
    "opt_einsum.helpers._valid_chars": {
     "line number": [
      13
     ]
    },
    "zip": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "module"
 },
 "opt_einsum.helpers.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "opt_einsum.helpers._default_dim_dict": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "opt_einsum.helpers._sizes": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "opt_einsum.helpers._valid_chars": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "opt_einsum.helpers.build_views": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "numpy.random.rand": {
     "line number": [
      47
     ]
    },
    "opt_einsum.helpers._default_dim_dict": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.helpers.compute_size_by_dict": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "opt_einsum.helpers.find_contraction": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "list": {
     "line number": [
      123
     ]
    },
    "set.union": {
     "line number": [
      125
     ]
    },
    "sorted": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.helpers.flop_count": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "max": {
     "line number": [
      167
     ]
    },
    "opt_einsum.helpers.compute_size_by_dict": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.helpers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.helpers.rand_equation": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      253
     ]
    },
    "gen": {
     "line number": [
      253
     ]
    },
    "get_symbol": {
     "line number": [
      236,
      267
     ]
    },
    "list": {
     "line number": [
      253
     ]
    },
    "numpy.random.permutation": {
     "line number": [
      253,
      274
     ]
    },
    "numpy.random.randint": {
     "line number": [
      236,
      259,
      261,
      268
     ]
    },
    "numpy.random.seed": {
     "line number": [
      228
     ]
    },
    "range": {
     "line number": [
      232,
      237,
      269
     ]
    },
    "tuple": {
     "line number": [
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.helpers.rand_equation.gen": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      242
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.parser": {
  "data": {},
  "type": "module"
 },
 "opt_einsum.parser.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "opt_einsum.parser.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "opt_einsum.parser._einsum_symbols_base": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "opt_einsum.parser.alpha_canonicalize": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "collections.OrderedDict": {
     "line number": [
      115
     ]
    },
    "len": {
     "line number": [
      120
     ]
    },
    "opt_einsum.parser.get_symbol": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.parser.convert_interleaved_input": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "Ellipsis": {
     "line number": [
      231
     ]
    },
    "TypeError": {
     "line number": [
      236,
      237
     ]
    },
    "enumerate": {
     "line number": [
      234
     ]
    },
    "len": {
     "line number": [
      217,
      221
     ]
    },
    "list": {
     "line number": [
      214
     ]
    },
    "opt_einsum.parser.convert_subscripts": {
     "line number": [
      240,
      243
     ]
    },
    "opt_einsum.parser.get_symbol": {
     "line number": [
      234
     ]
    },
    "opt_einsum.parser.itertools": {
     "line number": [
      228
     ]
    },
    "opt_einsum.parser.possibly_convert_to_numpy": {
     "line number": [
      222
     ]
    },
    "range": {
     "line number": [
      217
     ]
    },
    "set": {
     "line number": [
      228
     ]
    },
    "sorted": {
     "line number": [
      234
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.parser.convert_subscripts": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "Ellipsis": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.parser.convert_to_valid_einsum_chars": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      100
     ]
    },
    "opt_einsum.parser.get_symbol": {
     "line number": [
      100
     ]
    },
    "set": {
     "line number": [
      99,
      99
     ]
    },
    "sorted": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.parser.find_output_shape": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "max": {
     "line number": [
      157
     ]
    },
    "tuple": {
     "line number": [
      156
     ]
    },
    "zip": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.parser.find_output_str": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "set": {
     "line number": [
      140
     ]
    },
    "sorted": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.parser.gen_unused_symbols": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "opt_einsum.parser.get_symbol": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.parser.get_symbol": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "opt_einsum.parser._einsum_symbols_base": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.parser.has_valid_einsum_chars_only": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "all": {
     "line number": [
      48
     ]
    },
    "map": {
     "line number": [
      48
     ]
    },
    "opt_einsum.parser.is_valid_einsum_char": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.parser.is_valid_einsum_char": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "opt_einsum.parser._einsum_symbols_base": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.parser.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "opt_einsum.parser.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.parser.parse_einsum_input": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      275,
      288,
      308,
      320,
      352,
      356
     ]
    },
    "enumerate": {
     "line number": [
      305
     ]
    },
    "isinstance": {
     "line number": [
      277
     ]
    },
    "len": {
     "line number": [
      274,
      293,
      314,
      314,
      355,
      355
     ]
    },
    "max": {
     "line number": [
      293,
      314
     ]
    },
    "opt_einsum.parser.convert_interleaved_input": {
     "line number": [
      282
     ]
    },
    "opt_einsum.parser.find_output_str": {
     "line number": [
      338,
      347
     ]
    },
    "opt_einsum.parser.gen_unused_symbols": {
     "line number": [
      293
     ]
    },
    "opt_einsum.parser.possibly_convert_to_numpy": {
     "line number": [
      279
     ]
    },
    "set": {
     "line number": [
      339,
      339
     ]
    },
    "sorted": {
     "line number": [
      339
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.parser.possibly_convert_to_numpy": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      185
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.paths": {
  "data": {
   "symbols_in_volume": {
    "float": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "module"
 },
 "opt_einsum.paths._UNLIMITED_MEM": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "opt_einsum.paths.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "opt_einsum.paths._calc_k12_flops": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "frozenset.union": {
     "line number": [
      90
     ]
    },
    "map": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.paths._compute_oversize_flops": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "frozenset.union": {
     "line number": [
      103
     ]
    },
    "len": {
     "line number": [
      105
     ]
    },
    "map": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.paths._get_candidate": {
  "data": {
   "lineno": 338
  },
  "type": "function"
 },
 "opt_einsum.paths._push_candidate": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": {
    "min": {
     "line number": [
      353
     ]
    },
    "opt_einsum.paths._get_candidate": {
     "line number": [
      353
     ]
    },
    "opt_einsum.paths.heapq": {
     "line number": [
      355
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.paths._ssa_optimize": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "collections.defaultdict": {
     "line number": [
      401
     ]
    },
    "enumerate": {
     "line number": [
      393,
      420
     ]
    },
    "frozenset": {
     "line number": [
      386,
      387
     ]
    },
    "frozenset.intersection": {
     "line number": [
      387
     ]
    },
    "len": {
     "line number": [
      378,
      391,
      410
     ]
    },
    "list": {
     "line number": [
      386
     ]
    },
    "map": {
     "line number": [
      386
     ]
    },
    "max": {
     "line number": [
      460
     ]
    },
    "min": {
     "line number": [
      460
     ]
    },
    "next": {
     "line number": [
      396,
      438,
      442,
      463
     ]
    },
    "opt_einsum.paths._push_candidate": {
     "line number": [
      422,
      451
     ]
    },
    "opt_einsum.paths._update_ref_counts": {
     "line number": [
      443
     ]
    },
    "opt_einsum.paths.heapq": {
     "line number": [
      426,
      456,
      457,
      459,
      464
     ]
    },
    "opt_einsum.paths.itertools": {
     "line number": [
      391
     ]
    },
    "set": {
     "line number": [
      401,
      410,
      448
     ]
    },
    "sorted": {
     "line number": [
      419
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.paths._update_ref_counts": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": {
    "len": {
     "line number": [
      360
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.paths.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "opt_einsum.paths.branch": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "_branch_iterate": {
     "line number": [
      330
     ]
    },
    "collections.defaultdict": {
     "line number": [
      242
     ]
    },
    "float": {
     "line number": [
      241,
      242
     ]
    },
    "frozenset": {
     "line number": [
      238,
      239
     ]
    },
    "len": {
     "line number": [
      241,
      332
     ]
    },
    "map": {
     "line number": [
      238
     ]
    },
    "opt_einsum.paths.ssa_to_linear": {
     "line number": [
      335
     ]
    },
    "range": {
     "line number": [
      241,
      332
     ]
    },
    "set": {
     "line number": [
      332
     ]
    },
    "tuple": {
     "line number": [
      238,
      241
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.paths.branch._branch_iterate": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "_assess_candidate": {
     "line number": [
      305,
      313
     ]
    },
    "_branch_iterate": {
     "line number": [
      324
     ]
    },
    "len": {
     "line number": [
      250,
      326
     ]
    },
    "opt_einsum.paths.heapq": {
     "line number": [
      307,
      315,
      323
     ]
    },
    "opt_einsum.paths.itertools": {
     "line number": [
      296,
      311
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.paths.branch._branch_iterate._assess_candidate": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      259,
      278
     ]
    },
    "len": {
     "line number": [
      268,
      269,
      271
     ]
    },
    "opt_einsum.paths._UNLIMITED_MEM": {
     "line number": [
      282
     ]
    },
    "opt_einsum.paths._calc_k12_flops": {
     "line number": [
      260
     ]
    },
    "opt_einsum.paths._compute_oversize_flops": {
     "line number": [
      284
     ]
    },
    "tuple": {
     "line number": [
      287
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.paths.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "opt_einsum.paths.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "opt_einsum.paths.greedy": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": {
    "opt_einsum.paths._UNLIMITED_MEM": {
     "line number": [
      504
     ]
    },
    "opt_einsum.paths._ssa_optimize": {
     "line number": [
      507
     ]
    },
    "opt_einsum.paths.branch": {
     "line number": [
      505
     ]
    },
    "opt_einsum.paths.ssa_to_linear": {
     "line number": [
      508
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.paths.heapq": {
  "data": {
   "shadows": "heapq"
  },
  "type": "import"
 },
 "opt_einsum.paths.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "opt_einsum.paths.linear_to_ssa": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "len": {
     "line number": [
      45,
      45
     ]
    },
    "list": {
     "line number": [
      46
     ]
    },
    "map": {
     "line number": [
      45
     ]
    },
    "next": {
     "line number": [
      53
     ]
    },
    "opt_einsum.paths.itertools": {
     "line number": [
      47
     ]
    },
    "range": {
     "line number": [
      46
     ]
    },
    "sorted": {
     "line number": [
      51
     ]
    },
    "sum": {
     "line number": [
      45
     ]
    },
    "tuple": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.paths.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.paths.optimal": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "_optimal_iterate": {
     "line number": [
      191
     ]
    },
    "float": {
     "line number": [
      143
     ]
    },
    "frozenset": {
     "line number": [
      140,
      141
     ]
    },
    "len": {
     "line number": [
      143,
      193
     ]
    },
    "map": {
     "line number": [
      140
     ]
    },
    "opt_einsum.paths.ssa_to_linear": {
     "line number": [
      196
     ]
    },
    "range": {
     "line number": [
      143,
      193
     ]
    },
    "set": {
     "line number": [
      193
     ]
    },
    "tuple": {
     "line number": [
      140,
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.paths.optimal._optimal_iterate": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      162,
      174
     ]
    },
    "_optimal_iterate": {
     "line number": [
      186
     ]
    },
    "len": {
     "line number": [
      150,
      188
     ]
    },
    "opt_einsum.paths._UNLIMITED_MEM": {
     "line number": [
      171
     ]
    },
    "opt_einsum.paths._calc_k12_flops": {
     "line number": [
      163
     ]
    },
    "opt_einsum.paths._compute_oversize_flops": {
     "line number": [
      179
     ]
    },
    "opt_einsum.paths.itertools": {
     "line number": [
      156
     ]
    },
    "tuple": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.paths.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "opt_einsum.paths.ssa_to_linear": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "int": {
     "line number": [
      31
     ]
    },
    "map": {
     "line number": [
      28
     ]
    },
    "max": {
     "line number": [
      28,
      28
     ]
    },
    "numpy.arange": {
     "line number": [
      28
     ]
    },
    "numpy.int32": {
     "line number": [
      28
     ]
    },
    "tuple": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.sharing": {
  "data": {
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      24
     ]
    },
    "collections.defaultdict": {
     "line number": [
      20
     ]
    },
    "list": {
     "line number": [
      20
     ]
    },
    "opt_einsum.sharing.threading": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "module"
 },
 "opt_einsum.sharing.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "opt_einsum.sharing._SHARING_STACK": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "opt_einsum.sharing.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "opt_einsum.sharing._add_sharing_cache": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "opt_einsum.sharing._SHARING_STACK": {
     "line number": [
      43
     ]
    },
    "opt_einsum.sharing.get_thread_id": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.sharing._memoize": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "fn": {
     "line number": [
      108
     ]
    },
    "opt_einsum.sharing.get_sharing_cache": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.sharing._remove_sharing_cache": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "opt_einsum.sharing._SHARING_STACK": {
     "line number": [
      48,
      49,
      50
     ]
    },
    "opt_einsum.sharing.get_thread_id": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.sharing._save_tensors": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "id": {
     "line number": [
      97
     ]
    },
    "opt_einsum.sharing.get_sharing_cache": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.sharing.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "opt_einsum.sharing.count_cached_ops": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "collections.Counter": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.sharing.currently_sharing": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "opt_einsum.sharing._SHARING_STACK": {
     "line number": [
      33
     ]
    },
    "opt_einsum.sharing.get_thread_id": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.sharing.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "opt_einsum.sharing.einsum_cache_wrap": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "opt_einsum.sharing.einsum_cache_wrap.cached_einsum": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "alpha_canonicalize": {
     "line number": [
      175
     ]
    },
    "einsum": {
     "line number": [
      161,
      178,
      158
     ]
    },
    "id": {
     "line number": [
      172
     ]
    },
    "map": {
     "line number": [
      172
     ]
    },
    "opt_einsum.sharing._memoize": {
     "line number": [
      178
     ]
    },
    "opt_einsum.sharing._save_tensors": {
     "line number": [
      169
     ]
    },
    "opt_einsum.sharing.currently_sharing": {
     "line number": [
      160
     ]
    },
    "opt_einsum.sharing.functools": {
     "line number": [
      158
     ]
    },
    "parse_einsum_input": {
     "line number": [
      166
     ]
    },
    "sorted": {
     "line number": [
      172
     ]
    },
    "tuple": {
     "line number": [
      173
     ]
    },
    "zip": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.sharing.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "opt_einsum.sharing.get_sharing_cache": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "opt_einsum.sharing._SHARING_STACK": {
     "line number": [
      39
     ]
    },
    "opt_einsum.sharing.get_thread_id": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.sharing.get_thread_id": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "opt_einsum.sharing.threading": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.sharing.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "opt_einsum.sharing.shared_intermediates": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "opt_einsum.sharing._add_sharing_cache": {
     "line number": [
      77
     ]
    },
    "opt_einsum.sharing._remove_sharing_cache": {
     "line number": [
      81
     ]
    },
    "opt_einsum.sharing.contextlib": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.sharing.tensordot_cache_wrap": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "opt_einsum.sharing.tensordot_cache_wrap.cached_tensordot": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "id": {
     "line number": [
      147,
      147
     ]
    },
    "isinstance": {
     "line number": [
      144
     ]
    },
    "len": {
     "line number": [
      145,
      145,
      145
     ]
    },
    "list": {
     "line number": [
      145,
      145
     ]
    },
    "opt_einsum.sharing._memoize": {
     "line number": [
      148
     ]
    },
    "opt_einsum.sharing._save_tensors": {
     "line number": [
      143
     ]
    },
    "opt_einsum.sharing.currently_sharing": {
     "line number": [
      139
     ]
    },
    "opt_einsum.sharing.functools": {
     "line number": [
      137
     ]
    },
    "opt_einsum.sharing.numbers": {
     "line number": [
      144
     ]
    },
    "range": {
     "line number": [
      145,
      145
     ]
    },
    "tensordot": {
     "line number": [
      140,
      148,
      137
     ]
    },
    "tuple": {
     "line number": [
      146,
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.sharing.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "opt_einsum.sharing.to_backend_cache_wrap": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "opt_einsum.sharing.functools": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.sharing.to_backend_cache_wrap.cached_to_backend": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "id": {
     "line number": [
      210
     ]
    },
    "opt_einsum.sharing._memoize": {
     "line number": [
      211
     ]
    },
    "opt_einsum.sharing.currently_sharing": {
     "line number": [
      206
     ]
    },
    "opt_einsum.sharing.functools": {
     "line number": [
      204
     ]
    },
    "to_backend": {
     "line number": [
      207,
      211,
      204
     ]
    },
    "to_backend.__name__": {
     "line number": [
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.sharing.transpose_cache_wrap": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "opt_einsum.sharing.transpose_cache_wrap.cached_transpose": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "id": {
     "line number": [
      126
     ]
    },
    "opt_einsum.sharing._memoize": {
     "line number": [
      127
     ]
    },
    "opt_einsum.sharing._save_tensors": {
     "line number": [
      124
     ]
    },
    "opt_einsum.sharing.currently_sharing": {
     "line number": [
      120
     ]
    },
    "opt_einsum.sharing.functools": {
     "line number": [
      118
     ]
    },
    "transpose": {
     "line number": [
      121,
      127,
      118
     ]
    },
    "tuple": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests": {
  "data": {},
  "type": "module"
 },
 "opt_einsum.tests.test_backends": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      9,
      18,
      26,
      32
     ]
    },
    "opt_einsum.tests.test_backends._TF_CONFIG": {
     "line number": [
      16
     ]
    },
    "opt_einsum.tests.test_backends.os": {
     "line number": [
      23
     ]
    },
    "tensorflow.ConfigProto": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "module"
 },
 "opt_einsum.tests.test_backends._TF_CONFIG": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_backends.backends": {
  "data": {
   "shadows": "opt_einsum.backends"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_backends.contract": {
  "data": {
   "shadows": "opt_einsum.contract"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_backends.contract_expression": {
  "data": {
   "shadows": "opt_einsum.contract_expression"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_backends.cupy": {
  "data": {
   "shadows": "cupy"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_backends.found_cupy": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_backends.found_tensorflow": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_backends.found_theano": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_backends.found_torch": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_backends.helpers": {
  "data": {
   "shadows": "opt_einsum.helpers"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_backends.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_backends.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_backends.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_backends.sharing": {
  "data": {
   "shadows": "opt_einsum.sharing"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_backends.test_cupy": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "expr": {
     "line number": [
      198,
      200,
      205
     ]
    },
    "isinstance": {
     "line number": [
      206
     ]
    },
    "numpy.allclose": {
     "line number": [
      201,
      207
     ]
    },
    "opt_einsum.backends.to_cupy": {
     "line number": [
      204
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      195
     ]
    },
    "opt_einsum.contract_expression": {
     "line number": [
      198
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      194
     ]
    },
    "opt_einsum.tests.test_backends.cupy": {
     "line number": [
      206,
      207
     ]
    },
    "opt_einsum.tests.test_backends.found_cupy": {
     "line number": [
      191
     ]
    },
    "opt_einsum.tests.test_backends.pytest": {
     "line number": [
      191,
      192
     ]
    },
    "opt_einsum.tests.test_backends.tests": {
     "line number": [
      192
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_cupy_with_constants": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      216
     ]
    },
    "expr": {
     "line number": [
      221,
      224,
      229,
      233
     ]
    },
    "expr._evaluated_constants": {
     "line number": [
      225
     ]
    },
    "isinstance": {
     "line number": [
      234
     ]
    },
    "numpy.allclose": {
     "line number": [
      226,
      230,
      235
     ]
    },
    "numpy.random.rand": {
     "line number": [
      216,
      217
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      219
     ]
    },
    "opt_einsum.contract_expression": {
     "line number": [
      221
     ]
    },
    "opt_einsum.tests.test_backends.cupy": {
     "line number": [
      233,
      234
     ]
    },
    "opt_einsum.tests.test_backends.found_cupy": {
     "line number": [
      210
     ]
    },
    "opt_einsum.tests.test_backends.pytest": {
     "line number": [
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_dask": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": {
    "expr": {
     "line number": [
      245,
      249
     ]
    },
    "isinstance": {
     "line number": [
      252,
      258
     ]
    },
    "numpy.allclose": {
     "line number": [
      254,
      259
     ]
    },
    "numpy.array": {
     "line number": [
      254,
      259
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      243,
      257
     ]
    },
    "opt_einsum.contract_expression": {
     "line number": [
      245
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      242
     ]
    },
    "opt_einsum.tests.test_backends.pytest": {
     "line number": [
      240,
      238
     ]
    },
    "opt_einsum.tests.test_backends.tests": {
     "line number": [
      238
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_sparse": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "expr": {
     "line number": [
      276,
      280
     ]
    },
    "isinstance": {
     "line number": [
      283,
      289
     ]
    },
    "numpy.allclose": {
     "line number": [
      285,
      290
     ]
    },
    "numpy.random.choice": {
     "line number": [
      271
     ]
    },
    "numpy.random.seed": {
     "line number": [
      270
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      274,
      288
     ]
    },
    "opt_einsum.contract_expression": {
     "line number": [
      276
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      266
     ]
    },
    "opt_einsum.tests.test_backends.pytest": {
     "line number": [
      264,
      262
     ]
    },
    "opt_einsum.tests.test_backends.tests": {
     "line number": [
      262
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_tensorflow": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "expr": {
     "line number": [
      60,
      67
     ]
    },
    "numpy.allclose": {
     "line number": [
      63
     ]
    },
    "numpy.empty_like": {
     "line number": [
      53
     ]
    },
    "opt_einsum.backends.to_tensorflow": {
     "line number": [
      66
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      52
     ]
    },
    "opt_einsum.contract_expression": {
     "line number": [
      56
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      51
     ]
    },
    "opt_einsum.tests.test_backends._TF_CONFIG": {
     "line number": [
      58
     ]
    },
    "opt_einsum.tests.test_backends.found_tensorflow": {
     "line number": [
      48
     ]
    },
    "opt_einsum.tests.test_backends.pytest": {
     "line number": [
      48,
      49
     ]
    },
    "opt_einsum.tests.test_backends.tests": {
     "line number": [
      49
     ]
    },
    "tensorflow.Session": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_tensorflow_with_constants": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      75
     ]
    },
    "expr": {
     "line number": [
      80,
      85,
      91,
      95
     ]
    },
    "expr._evaluated_constants": {
     "line number": [
      87
     ]
    },
    "isinstance": {
     "line number": [
      96
     ]
    },
    "numpy.allclose": {
     "line number": [
      88,
      92
     ]
    },
    "numpy.random.rand": {
     "line number": [
      75,
      76
     ]
    },
    "opt_einsum.backends.to_tensorflow": {
     "line number": [
      95
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      78
     ]
    },
    "opt_einsum.contract_expression": {
     "line number": [
      80
     ]
    },
    "opt_einsum.tests.test_backends._TF_CONFIG": {
     "line number": [
      83
     ]
    },
    "opt_einsum.tests.test_backends.found_tensorflow": {
     "line number": [
      70
     ]
    },
    "opt_einsum.tests.test_backends.pytest": {
     "line number": [
      70
     ]
    },
    "tensorflow.Session": {
     "line number": [
      83
     ]
    },
    "tensorflow.Tensor": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_tensorflow_with_sharing": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "all": {
     "line number": [
      118
     ]
    },
    "expr": {
     "line number": [
      106,
      111,
      115
     ]
    },
    "isinstance": {
     "line number": [
      118
     ]
    },
    "len": {
     "line number": [
      113,
      116
     ]
    },
    "numpy.allclose": {
     "line number": [
      120,
      121
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      103
     ]
    },
    "opt_einsum.contract_expression": {
     "line number": [
      106
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      102
     ]
    },
    "opt_einsum.sharing.get_sharing_cache": {
     "line number": [
      112
     ]
    },
    "opt_einsum.sharing.shared_intermediates": {
     "line number": [
      110
     ]
    },
    "opt_einsum.tests.test_backends._TF_CONFIG": {
     "line number": [
      108
     ]
    },
    "opt_einsum.tests.test_backends.found_tensorflow": {
     "line number": [
      99
     ]
    },
    "opt_einsum.tests.test_backends.pytest": {
     "line number": [
      99,
      100
     ]
    },
    "opt_einsum.tests.test_backends.tests": {
     "line number": [
      100
     ]
    },
    "tensorflow.Session": {
     "line number": [
      108
     ]
    },
    "tensorflow.Tensor": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_theano": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "expr": {
     "line number": [
      131,
      133,
      138
     ]
    },
    "isinstance": {
     "line number": [
      139
     ]
    },
    "numpy.allclose": {
     "line number": [
      134
     ]
    },
    "opt_einsum.backends.to_theano": {
     "line number": [
      137
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      128
     ]
    },
    "opt_einsum.contract_expression": {
     "line number": [
      131
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      127
     ]
    },
    "opt_einsum.tests.test_backends.found_theano": {
     "line number": [
      124
     ]
    },
    "opt_einsum.tests.test_backends.pytest": {
     "line number": [
      124,
      125
     ]
    },
    "opt_einsum.tests.test_backends.tests": {
     "line number": [
      125
     ]
    },
    "opt_einsum.tests.test_backends.theano": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_theano_with_constants": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      147
     ]
    },
    "expr": {
     "line number": [
      152,
      155,
      160,
      164
     ]
    },
    "expr._evaluated_constants": {
     "line number": [
      156
     ]
    },
    "isinstance": {
     "line number": [
      165
     ]
    },
    "numpy.allclose": {
     "line number": [
      157,
      161
     ]
    },
    "numpy.random.rand": {
     "line number": [
      147,
      148
     ]
    },
    "opt_einsum.backends.to_theano": {
     "line number": [
      164
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      150
     ]
    },
    "opt_einsum.contract_expression": {
     "line number": [
      152
     ]
    },
    "opt_einsum.tests.test_backends.found_theano": {
     "line number": [
      142
     ]
    },
    "opt_einsum.tests.test_backends.pytest": {
     "line number": [
      142
     ]
    },
    "opt_einsum.tests.test_backends.theano": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_theano_with_sharing": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "all": {
     "line number": [
      185
     ]
    },
    "expr": {
     "line number": [
      175,
      178,
      182
     ]
    },
    "isinstance": {
     "line number": [
      185
     ]
    },
    "len": {
     "line number": [
      180,
      183
     ]
    },
    "numpy.allclose": {
     "line number": [
      187,
      188
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      172
     ]
    },
    "opt_einsum.contract_expression": {
     "line number": [
      175
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      171
     ]
    },
    "opt_einsum.sharing.get_sharing_cache": {
     "line number": [
      179
     ]
    },
    "opt_einsum.sharing.shared_intermediates": {
     "line number": [
      177
     ]
    },
    "opt_einsum.tests.test_backends.found_theano": {
     "line number": [
      168
     ]
    },
    "opt_einsum.tests.test_backends.pytest": {
     "line number": [
      168,
      169
     ]
    },
    "opt_einsum.tests.test_backends.tests": {
     "line number": [
      169
     ]
    },
    "opt_einsum.tests.test_backends.theano": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_torch": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": {
    "expr": {
     "line number": [
      301,
      303,
      308
     ]
    },
    "isinstance": {
     "line number": [
      309
     ]
    },
    "numpy.allclose": {
     "line number": [
      304,
      310
     ]
    },
    "opt_einsum.backends.to_torch": {
     "line number": [
      307
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      298
     ]
    },
    "opt_einsum.contract_expression": {
     "line number": [
      301
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      297
     ]
    },
    "opt_einsum.tests.test_backends.found_torch": {
     "line number": [
      293
     ]
    },
    "opt_einsum.tests.test_backends.pytest": {
     "line number": [
      293,
      294
     ]
    },
    "opt_einsum.tests.test_backends.tests": {
     "line number": [
      294
     ]
    },
    "opt_einsum.tests.test_backends.torch": {
     "line number": [
      309
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_backends.test_torch_with_constants": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      319
     ]
    },
    "expr": {
     "line number": [
      324,
      327,
      332,
      336
     ]
    },
    "expr._evaluated_constants": {
     "line number": [
      328
     ]
    },
    "isinstance": {
     "line number": [
      337
     ]
    },
    "numpy.allclose": {
     "line number": [
      329,
      333,
      339
     ]
    },
    "numpy.random.rand": {
     "line number": [
      319,
      320
     ]
    },
    "opt_einsum.backends.to_torch": {
     "line number": [
      336
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      322
     ]
    },
    "opt_einsum.contract_expression": {
     "line number": [
      324
     ]
    },
    "opt_einsum.tests.test_backends.found_torch": {
     "line number": [
      313
     ]
    },
    "opt_einsum.tests.test_backends.pytest": {
     "line number": [
      313
     ]
    },
    "opt_einsum.tests.test_backends.torch": {
     "line number": [
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_backends.tests": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_backends.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_backends.theano": {
  "data": {
   "shadows": "theano"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_backends.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_blas": {
  "data": {
   "symbols_in_volume": {
    "set": {
     "line number": [
      12,
      13,
      18,
      19,
      20,
      21,
      22,
      23,
      24,
      25,
      28,
      29,
      30,
      31,
      32,
      33,
      34,
      35,
      38,
      39,
      40,
      41,
      42,
      43,
      44,
      45,
      48,
      49,
      50,
      51,
      52,
      53,
      54,
      55,
      58,
      59,
      60,
      61,
      62,
      63
     ]
    }
   }
  },
  "type": "module"
 },
 "opt_einsum.tests.test_blas.blas": {
  "data": {
   "shadows": "opt_einsum.blas"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_blas.blas_tests": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_blas.contract": {
  "data": {
   "shadows": "opt_einsum.contract"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_blas.helpers": {
  "data": {
   "shadows": "opt_einsum.helpers"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_blas.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_blas.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_blas.test_blas_out": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      101,
      104
     ]
    },
    "numpy.dot": {
     "line number": [
      101,
      104
     ]
    },
    "numpy.empty": {
     "line number": [
      98
     ]
    },
    "numpy.random.rand": {
     "line number": [
      95,
      96,
      97
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      100,
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_blas.test_can_blas": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "opt_einsum.blas.can_blas": {
     "line number": [
      68
     ]
    },
    "opt_einsum.tests.test_blas.blas_tests": {
     "line number": [
      66
     ]
    },
    "opt_einsum.tests.test_blas.pytest": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_blas.test_tensor_blas": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "len": {
     "line number": [
      83
     ]
    },
    "numpy.allclose": {
     "line number": [
      91
     ]
    },
    "numpy.einsum": {
     "line number": [
      88
     ]
    },
    "opt_einsum.blas.tensor_blas": {
     "line number": [
      89
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      86
     ]
    },
    "opt_einsum.tests.test_blas.blas_tests": {
     "line number": [
      72
     ]
    },
    "opt_einsum.tests.test_blas.pytest": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_contract": {
  "data": {},
  "type": "module"
 },
 "opt_einsum.tests.test_contract.all_optimizers": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_contract.compat": {
  "data": {
   "shadows": "opt_einsum.compat"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_contract.contract": {
  "data": {
   "shadows": "opt_einsum.contract"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_contract.contract_expression": {
  "data": {
   "shadows": "opt_einsum.contract_expression"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_contract.contract_path": {
  "data": {
   "shadows": "opt_einsum.contract_path"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_contract.helpers": {
  "data": {
   "shadows": "opt_einsum.helpers"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_contract.linear_to_ssa": {
  "data": {
   "shadows": "opt_einsum.paths.linear_to_ssa"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_contract.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_contract.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_contract.ssa_to_linear": {
  "data": {
   "shadows": "opt_einsum.paths.ssa_to_linear"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_contract.test_compare": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      109
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      107,
      108
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      105
     ]
    },
    "opt_einsum.tests.test_contract.all_optimizers": {
     "line number": [
      103
     ]
    },
    "opt_einsum.tests.test_contract.pytest": {
     "line number": [
      102,
      103
     ]
    },
    "opt_einsum.tests.test_contract.tests": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_compare_blas": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      140
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      138,
      139
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      136
     ]
    },
    "opt_einsum.tests.test_contract.all_optimizers": {
     "line number": [
      134
     ]
    },
    "opt_einsum.tests.test_contract.pytest": {
     "line number": [
      133,
      134
     ]
    },
    "opt_einsum.tests.test_contract.tests": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_compare_blas_greek": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      154
     ]
    },
    "opt_einsum.compat.get_char": {
     "line number": [
      151
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      148,
      153
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      146
     ]
    },
    "opt_einsum.tests.test_contract.all_optimizers": {
     "line number": [
      144
     ]
    },
    "opt_einsum.tests.test_contract.pytest": {
     "line number": [
      143,
      144
     ]
    },
    "opt_einsum.tests.test_contract.tests": {
     "line number": [
      143
     ]
    },
    "ord": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_compare_greek": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      130
     ]
    },
    "opt_einsum.compat.get_char": {
     "line number": [
      127
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      124,
      129
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      122
     ]
    },
    "opt_einsum.tests.test_contract.all_optimizers": {
     "line number": [
      120
     ]
    },
    "opt_einsum.tests.test_contract.pytest": {
     "line number": [
      119,
      120
     ]
    },
    "opt_einsum.tests.test_contract.tests": {
     "line number": [
      119
     ]
    },
    "ord": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_contract_expression_interleaved_input": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "expr": {
     "line number": [
      202,
      203
     ]
    },
    "numpy.allclose": {
     "line number": [
      204
     ]
    },
    "numpy.einsum": {
     "line number": [
      200
     ]
    },
    "numpy.random.randn": {
     "line number": [
      199
     ]
    },
    "opt_einsum.contract_expression": {
     "line number": [
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_contract_expression_with_constants": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      224
     ]
    },
    "expr": {
     "line number": [
      231,
      232,
      233
     ]
    },
    "numpy.allclose": {
     "line number": [
      234
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      218
     ]
    },
    "opt_einsum.contract_expression": {
     "line number": [
      231
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      217
     ]
    },
    "opt_einsum.tests.test_contract.pytest": {
     "line number": [
      207
     ]
    },
    "print": {
     "line number": [
      232
     ]
    },
    "zip": {
     "line number": [
      224
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_contract_expressions": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "expr": {
     "line number": [
      187,
      189
     ]
    },
    "expr.__repr__": {
     "line number": [
      194
     ]
    },
    "expr.__str__": {
     "line number": [
      195
     ]
    },
    "numpy.allclose": {
     "line number": [
      191
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      181
     ]
    },
    "opt_einsum.contract_expression": {
     "line number": [
      183
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      179,
      186
     ]
    },
    "opt_einsum.tests.test_contract.all_optimizers": {
     "line number": [
      175
     ]
    },
    "opt_einsum.tests.test_contract.pytest": {
     "line number": [
      174,
      175,
      176,
      177
     ]
    },
    "opt_einsum.tests.test_contract.tests": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_drop_in_replacement": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      116
     ]
    },
    "numpy.einsum": {
     "line number": [
      116
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      115
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      114
     ]
    },
    "opt_einsum.tests.test_contract.pytest": {
     "line number": [
      112
     ]
    },
    "opt_einsum.tests.test_contract.tests": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_linear_vs_ssa": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": {
    "opt_einsum.contract_path": {
     "line number": [
      255
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      254
     ]
    },
    "opt_einsum.paths.linear_to_ssa": {
     "line number": [
      256
     ]
    },
    "opt_einsum.paths.ssa_to_linear": {
     "line number": [
      257
     ]
    },
    "opt_einsum.tests.test_contract.pytest": {
     "line number": [
      252
     ]
    },
    "opt_einsum.tests.test_contract.tests": {
     "line number": [
      252
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_printing": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "len": {
     "line number": [
      171
     ]
    },
    "opt_einsum.contract_path": {
     "line number": [
      170
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      168
     ]
    },
    "str": {
     "line number": [
      171
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_rand_equation": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      249
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      246,
      247
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      244
     ]
    },
    "opt_einsum.helpers.rand_equation": {
     "line number": [
      243
     ]
    },
    "opt_einsum.tests.test_contract.pytest": {
     "line number": [
      237,
      238,
      239,
      240,
      241
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_contract.test_some_non_alphabet_maintains_order": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      163
     ]
    },
    "numpy.random.rand": {
     "line number": [
      162
     ]
    },
    "opt_einsum.compat.get_char": {
     "line number": [
      159
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      163,
      163
     ]
    },
    "ord": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_contract.tests": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_edge_cases": {
  "data": {},
  "type": "module"
 },
 "opt_einsum.tests.test_edge_cases.contract": {
  "data": {
   "shadows": "opt_einsum.contract"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_edge_cases.contract_expression": {
  "data": {
   "shadows": "opt_einsum.contract_expression"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_edge_cases.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_edge_cases.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_edge_cases.test_broadcasting_contraction": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      64,
      71,
      72
     ]
    },
    "numpy.random.rand": {
     "line number": [
      57,
      58,
      59,
      60
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      62,
      63,
      68,
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_edge_cases.test_broadcasting_contraction2": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      84,
      91,
      92
     ]
    },
    "numpy.random.rand": {
     "line number": [
      77,
      78,
      79,
      80
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      82,
      83,
      88,
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_edge_cases.test_broadcasting_contraction3": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      105
     ]
    },
    "numpy.random.rand": {
     "line number": [
      97,
      98,
      99,
      100
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      102,
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_edge_cases.test_broadcasting_contraction4": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      114
     ]
    },
    "numpy.arange": {
     "line number": [
      110
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      111,
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_edge_cases.test_can_blas_on_healed_broadcast_dimensions": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "expr": {
     "line number": [
      119
     ]
    },
    "expr.contraction_list": {
     "line number": [
      121,
      122,
      124,
      125
     ]
    },
    "opt_einsum.contract_expression": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_edge_cases.test_contract_expression_checks": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      13,
      17,
      22,
      29,
      34,
      39,
      42,
      45,
      50
     ]
    },
    "expr": {
     "line number": [
      30,
      35,
      40,
      43,
      46,
      51
     ]
    },
    "numpy.empty": {
     "line number": [
      21
     ]
    },
    "numpy.random.rand": {
     "line number": [
      30,
      35,
      35,
      35,
      40,
      40,
      43,
      43,
      46,
      46,
      46,
      51,
      51
     ]
    },
    "opt_einsum.contract_expression": {
     "line number": [
      14,
      18,
      23,
      26
     ]
    },
    "opt_einsum.tests.test_edge_cases.pytest": {
     "line number": [
      13,
      17,
      22,
      29,
      34,
      39,
      42,
      45,
      50
     ]
    },
    "str": {
     "line number": [
      31,
      36,
      41,
      44,
      47,
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_input": {
  "data": {},
  "type": "module"
 },
 "opt_einsum.tests.test_input.build_views": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      13
     ]
    },
    "numpy.random.rand": {
     "line number": [
      23
     ]
    },
    "zip": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_input.contract": {
  "data": {
   "shadows": "opt_einsum.contract"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_input.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_input.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_input.test_compare": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      175,
      178
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      173,
      174,
      177
     ]
    },
    "opt_einsum.tests.test_input.build_views": {
     "line number": [
      171
     ]
    },
    "opt_einsum.tests.test_input.pytest": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_ellipse_input1": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "Ellipsis": {
     "line number": [
      185,
      185
     ]
    },
    "numpy.allclose": {
     "line number": [
      186
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      184,
      185
     ]
    },
    "opt_einsum.tests.test_input.build_views": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_ellipse_input2": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "Ellipsis": {
     "line number": [
      193
     ]
    },
    "numpy.allclose": {
     "line number": [
      194
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      192,
      193
     ]
    },
    "opt_einsum.tests.test_input.build_views": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_ellipse_input3": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "Ellipsis": {
     "line number": [
      201,
      201
     ]
    },
    "numpy.allclose": {
     "line number": [
      202
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      200,
      201
     ]
    },
    "opt_einsum.tests.test_input.build_views": {
     "line number": [
      198
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_ellipse_input4": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "Ellipsis": {
     "line number": [
      209,
      209,
      209
     ]
    },
    "numpy.allclose": {
     "line number": [
      210
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      208,
      209
     ]
    },
    "opt_einsum.tests.test_input.build_views": {
     "line number": [
      206
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_hashable_object_input_format": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      249,
      250,
      253
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      246,
      247,
      248,
      252
     ]
    },
    "opt_einsum.tests.test_input.build_views": {
     "line number": [
      245
     ]
    },
    "range": {
     "line number": [
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_large_int_input_format": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      237,
      240
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      235,
      236,
      239
     ]
    },
    "opt_einsum.tests.test_input.build_views": {
     "line number": [
      234
     ]
    },
    "range": {
     "line number": [
      238
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_singleton_dimension_broadcast": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      219,
      220,
      228,
      229
     ]
    },
    "numpy.full": {
     "line number": [
      229
     ]
    },
    "numpy.ones": {
     "line number": [
      214,
      215,
      222,
      223
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      217,
      218,
      226,
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_type_errors": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "Ellipsis": {
     "line number": [
      76,
      76,
      79,
      79
     ]
    },
    "TypeError": {
     "line number": [
      28,
      32,
      36,
      44,
      48,
      52,
      75,
      78
     ]
    },
    "ValueError": {
     "line number": [
      40,
      56,
      60,
      64,
      67
     ]
    },
    "dict": {
     "line number": [
      79
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      29,
      33,
      37,
      41,
      45,
      49,
      53,
      57,
      61,
      65,
      68,
      76,
      79
     ]
    },
    "opt_einsum.tests.test_input.build_views": {
     "line number": [
      72
     ]
    },
    "opt_einsum.tests.test_input.pytest": {
     "line number": [
      28,
      32,
      36,
      40,
      44,
      48,
      52,
      56,
      60,
      64,
      67,
      75,
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_input.test_value_errors": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      87
     ]
    },
    "ValueError": {
     "line number": [
      83,
      91,
      93,
      95,
      98,
      101,
      103,
      105,
      109,
      111,
      113,
      115,
      117,
      119,
      123,
      125,
      127,
      129,
      133,
      135,
      137,
      141,
      145,
      149,
      151,
      155,
      157
     ]
    },
    "numpy.arange": {
     "line number": [
      150,
      152,
      156,
      158
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      84,
      88,
      92,
      94,
      96,
      99,
      102,
      104,
      106,
      110,
      112,
      114,
      116,
      118,
      120,
      124,
      126,
      128,
      130,
      134,
      136,
      138,
      142,
      146,
      150,
      152,
      156,
      158
     ]
    },
    "opt_einsum.tests.test_input.pytest": {
     "line number": [
      83,
      87,
      91,
      93,
      95,
      98,
      101,
      103,
      105,
      109,
      111,
      113,
      115,
      117,
      119,
      123,
      125,
      127,
      129,
      133,
      135,
      137,
      141,
      145,
      149,
      151,
      155,
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_paths": {
  "data": {
   "symbols_in_volume": {
    "set": {
     "line number": [
      14,
      14,
      14,
      14,
      20,
      20,
      20,
      20
     ]
    }
   }
  },
  "type": "module"
 },
 "opt_einsum.tests.test_paths.assert_contract_order": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "func": {
     "line number": [
      64
     ]
    },
    "opt_einsum.tests.test_paths.check_path": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_paths.check_path": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      49,
      57
     ]
    },
    "len": {
     "line number": [
      52,
      52,
      56
     ]
    },
    "list": {
     "line number": [
      49
     ]
    },
    "range": {
     "line number": [
      56
     ]
    },
    "tuple": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_paths.explicit_path_tests": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_paths.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_paths.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_paths.oe": {
  "data": {
   "shadows": "opt_einsum"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_paths.path_edge_tests": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_paths.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_paths.test_can_optimize_outer_products": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "numpy.random.randn": {
     "line number": [
      185,
      186
     ]
    },
    "opt_einsum.contract_path": {
     "line number": [
      187
     ]
    },
    "opt_einsum.tests.test_paths.pytest": {
     "line number": [
      183
     ]
    },
    "range": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_flop_cost": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "opt_einsum.helpers.flop_count": {
     "line number": [
      93,
      96,
      97,
      100,
      101,
      104,
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_greedy_edge_cases": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "opt_einsum.contract_path": {
     "line number": [
      176,
      179
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      174
     ]
    },
    "opt_einsum.tests.test_paths.check_path": {
     "line number": [
      177,
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_large_path": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      193
     ]
    },
    "opt_einsum.contract_path": {
     "line number": [
      198
     ]
    },
    "opt_einsum.get_symbol": {
     "line number": [
      192
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      195
     ]
    },
    "opt_einsum.tests.test_paths.itertools": {
     "line number": [
      193
     ]
    },
    "opt_einsum.tests.test_paths.pytest": {
     "line number": [
      190
     ]
    },
    "range": {
     "line number": [
      192,
      194
     ]
    },
    "zip": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_memory_paths": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "opt_einsum.contract_path": {
     "line number": [
      135,
      138,
      142,
      145
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      132
     ]
    },
    "opt_einsum.tests.test_paths.check_path": {
     "line number": [
      136,
      139,
      143,
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_optimal_edge_cases": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "opt_einsum.contract_path": {
     "line number": [
      163,
      166
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      162
     ]
    },
    "opt_einsum.tests.test_paths.check_path": {
     "line number": [
      164,
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_path_edge_cases": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "opt_einsum.contract_path": {
     "line number": [
      154
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      151
     ]
    },
    "opt_einsum.tests.test_paths.check_path": {
     "line number": [
      155
     ]
    },
    "opt_einsum.tests.test_paths.path_edge_tests": {
     "line number": [
      149
     ]
    },
    "opt_einsum.tests.test_paths.pytest": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_path_greedy": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "opt_einsum.paths.greedy": {
     "line number": [
      121
     ]
    },
    "opt_einsum.tests.test_paths.assert_contract_order": {
     "line number": [
      124,
      125
     ]
    },
    "opt_einsum.tests.test_paths.explicit_path_tests": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_path_optimal": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "opt_einsum.paths.optimal": {
     "line number": [
      112
     ]
    },
    "opt_einsum.tests.test_paths.assert_contract_order": {
     "line number": [
      115,
      116
     ]
    },
    "opt_einsum.tests.test_paths.explicit_path_tests": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_paths.test_size_by_dict": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "opt_einsum.helpers.compute_size_by_dict": {
     "line number": [
      74
     ]
    },
    "path_func": {
     "line number": [
      76,
      77,
      78,
      80,
      81,
      82,
      84,
      85
     ]
    },
    "zip": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      18,
      24
     ]
    },
    "opt_einsum.backends.to_cupy": {
     "line number": [
      42
     ]
    },
    "opt_einsum.backends.to_torch": {
     "line number": [
      41
     ]
    },
    "opt_einsum.tests.test_sharing.cupy_if_found": {
     "line number": [
      27
     ]
    },
    "opt_einsum.tests.test_sharing.pytest": {
     "line number": [
      19,
      19,
      25,
      25
     ]
    },
    "opt_einsum.tests.test_sharing.torch_if_found": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "module"
 },
 "opt_einsum.tests.test_sharing.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.ThreadPool": {
  "data": {
   "shadows": "multiprocessing.pool.ThreadPool"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing._compute_cost": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": {
    "opt_einsum.sharing.count_cached_ops": {
     "line number": [
      305
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing._einsum": {
  "data": {
   "shadows": "opt_einsum.contract._einsum"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.backends": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_sharing.contract": {
  "data": {
   "shadows": "opt_einsum.contract"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.contract_expression": {
  "data": {
   "shadows": "opt_einsum.contract_expression"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.contract_path": {
  "data": {
   "shadows": "opt_einsum.contract_path"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.count_cached_ops": {
  "data": {
   "shadows": "opt_einsum.sharing.count_cached_ops"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.cupy": {
  "data": {
   "shadows": "cupy"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.cupy_if_found": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_sharing.currently_sharing": {
  "data": {
   "shadows": "opt_einsum.sharing.currently_sharing"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.equations": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_sharing.get_sharing_cache": {
  "data": {
   "shadows": "opt_einsum.sharing.get_sharing_cache"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.get_symbol": {
  "data": {
   "shadows": "opt_einsum.get_symbol"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.helpers": {
  "data": {
   "shadows": "opt_einsum.helpers"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.parse_einsum_input": {
  "data": {
   "shadows": "opt_einsum.parser.parse_einsum_input"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.shared_intermediates": {
  "data": {
   "shadows": "opt_einsum.shared_intermediates"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.test_chain": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "expr": {
     "line number": [
      278,
      279
     ]
    },
    "numpy.random.rand": {
     "line number": [
      265
     ]
    },
    "opt_einsum.contract_expression": {
     "line number": [
      278
     ]
    },
    "opt_einsum.contract_path": {
     "line number": [
      276
     ]
    },
    "opt_einsum.get_symbol": {
     "line number": [
      267
     ]
    },
    "opt_einsum.shared_intermediates": {
     "line number": [
      271
     ]
    },
    "opt_einsum.tests.test_sharing.backends": {
     "line number": [
      263
     ]
    },
    "opt_einsum.tests.test_sharing.pytest": {
     "line number": [
      262,
      263
     ]
    },
    "print": {
     "line number": [
      272,
      277,
      280
     ]
    },
    "range": {
     "line number": [
      265,
      267,
      268,
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_chain_2": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": {
    "expr": {
     "line number": [
      299,
      300
     ]
    },
    "numpy.random.rand": {
     "line number": [
      286
     ]
    },
    "opt_einsum.contract_expression": {
     "line number": [
      299
     ]
    },
    "opt_einsum.contract_path": {
     "line number": [
      297
     ]
    },
    "opt_einsum.get_symbol": {
     "line number": [
      288
     ]
    },
    "opt_einsum.shared_intermediates": {
     "line number": [
      292
     ]
    },
    "opt_einsum.tests.test_sharing.backends": {
     "line number": [
      284
     ]
    },
    "opt_einsum.tests.test_sharing.pytest": {
     "line number": [
      283,
      284
     ]
    },
    "print": {
     "line number": [
      293,
      298,
      301
     ]
    },
    "range": {
     "line number": [
      286,
      288,
      289,
      294
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_chain_2_growth": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": {
    "expr": {
     "line number": [
      323,
      324
     ]
    },
    "list": {
     "line number": [
      311
     ]
    },
    "numpy.random.rand": {
     "line number": [
      314
     ]
    },
    "opt_einsum.contract_expression": {
     "line number": [
      323
     ]
    },
    "opt_einsum.get_symbol": {
     "line number": [
      315
     ]
    },
    "opt_einsum.shared_intermediates": {
     "line number": [
      319
     ]
    },
    "opt_einsum.tests.test_sharing._compute_cost": {
     "line number": [
      325
     ]
    },
    "opt_einsum.tests.test_sharing.backends": {
     "line number": [
      309
     ]
    },
    "opt_einsum.tests.test_sharing.pytest": {
     "line number": [
      309
     ]
    },
    "print": {
     "line number": [
      327,
      328,
      330
     ]
    },
    "range": {
     "line number": [
      311,
      314,
      315,
      316,
      320
     ]
    },
    "repr": {
     "line number": [
      327,
      328
     ]
    },
    "zip": {
     "line number": [
      329
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_chain_sharing": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": {
    "expr": {
     "line number": [
      346,
      347,
      357,
      358
     ]
    },
    "numpy.random.rand": {
     "line number": [
      336
     ]
    },
    "opt_einsum.contract_expression": {
     "line number": [
      346,
      357
     ]
    },
    "opt_einsum.contract_path": {
     "line number": [
      355
     ]
    },
    "opt_einsum.get_symbol": {
     "line number": [
      337
     ]
    },
    "opt_einsum.shared_intermediates": {
     "line number": [
      343,
      350
     ]
    },
    "opt_einsum.tests.test_sharing._compute_cost": {
     "line number": [
      348,
      359
     ]
    },
    "opt_einsum.tests.test_sharing.backends": {
     "line number": [
      334
     ]
    },
    "opt_einsum.tests.test_sharing.pytest": {
     "line number": [
      333,
      334
     ]
    },
    "print": {
     "line number": [
      351,
      356,
      361,
      362,
      363
     ]
    },
    "range": {
     "line number": [
      336,
      337,
      338,
      342,
      352
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_complete_sharing": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "expr": {
     "line number": [
      64,
      69,
      75,
      76
     ]
    },
    "opt_einsum.contract_expression": {
     "line number": [
      64
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      63
     ]
    },
    "opt_einsum.shared_intermediates": {
     "line number": [
      68,
      74
     ]
    },
    "opt_einsum.sharing.count_cached_ops": {
     "line number": [
      70,
      77
     ]
    },
    "opt_einsum.tests.test_sharing.backends": {
     "line number": [
      60
     ]
    },
    "opt_einsum.tests.test_sharing.pytest": {
     "line number": [
      60
     ]
    },
    "print": {
     "line number": [
      66,
      67,
      72,
      73,
      79,
      80,
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_multithreaded_sharing": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": {
    "fn": {
     "line number": [
      379,
      381
     ]
    },
    "multiprocessing.pool.ThreadPool": {
     "line number": [
      380
     ]
    },
    "opt_einsum.sharing.currently_sharing": {
     "line number": [
      382
     ]
    },
    "range": {
     "line number": [
      381
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_multithreaded_sharing.fn": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": {
    "len": {
     "line number": [
      377
     ]
    },
    "opt_einsum.contract": {
     "line number": [
      374,
      375
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      371
     ]
    },
    "opt_einsum.shared_intermediates": {
     "line number": [
      373
     ]
    },
    "opt_einsum.sharing.get_sharing_cache": {
     "line number": [
      377
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_no_sharing_separate_cache": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "expr": {
     "line number": [
      115,
      120,
      127,
      130
     ]
    },
    "opt_einsum.contract_expression": {
     "line number": [
      115
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      114
     ]
    },
    "opt_einsum.shared_intermediates": {
     "line number": [
      119,
      126,
      129
     ]
    },
    "opt_einsum.sharing.count_cached_ops": {
     "line number": [
      121,
      122,
      128,
      131
     ]
    },
    "opt_einsum.tests.test_sharing.backends": {
     "line number": [
      111
     ]
    },
    "opt_einsum.tests.test_sharing.pytest": {
     "line number": [
      111
     ]
    },
    "print": {
     "line number": [
      117,
      118,
      124,
      125,
      133,
      134,
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_partial_sharing": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "collections.Counter": {
     "line number": [
      220
     ]
    },
    "expr": {
     "line number": [
      216,
      222,
      225,
      231,
      232
     ]
    },
    "opt_einsum.contract_expression": {
     "line number": [
      216
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      214
     ]
    },
    "opt_einsum.shared_intermediates": {
     "line number": [
      221,
      224,
      230
     ]
    },
    "opt_einsum.sharing.count_cached_ops": {
     "line number": [
      223,
      226,
      233
     ]
    },
    "opt_einsum.tests.test_sharing.backends": {
     "line number": [
      211
     ]
    },
    "opt_einsum.tests.test_sharing.pytest": {
     "line number": [
      211
     ]
    },
    "print": {
     "line number": [
      218,
      219,
      228,
      229,
      235,
      236,
      237
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_sharing_modulo_commutativity": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "opt_einsum.contract._einsum": {
     "line number": [
      192,
      202
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      184
     ]
    },
    "opt_einsum.parser.parse_einsum_input": {
     "line number": [
      186
     ]
    },
    "opt_einsum.shared_intermediates": {
     "line number": [
      191,
      197
     ]
    },
    "opt_einsum.sharing.count_cached_ops": {
     "line number": [
      193,
      203
     ]
    },
    "opt_einsum.tests.test_sharing.backends": {
     "line number": [
      182
     ]
    },
    "opt_einsum.tests.test_sharing.equations": {
     "line number": [
      181
     ]
    },
    "opt_einsum.tests.test_sharing.itertools": {
     "line number": [
      198
     ]
    },
    "opt_einsum.tests.test_sharing.pytest": {
     "line number": [
      181,
      182
     ]
    },
    "opt_einsum.tests.test_sharing.to_backend": {
     "line number": [
      185
     ]
    },
    "print": {
     "line number": [
      189,
      190,
      195,
      196,
      205,
      206,
      207
     ]
    },
    "zip": {
     "line number": [
      198
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_sharing_nesting": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "method1": {
     "line number": [
      177
     ]
    },
    "method2": {
     "line number": [
      178
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      145
     ]
    },
    "opt_einsum.tests.test_sharing.backends": {
     "line number": [
      139
     ]
    },
    "opt_einsum.tests.test_sharing.pytest": {
     "line number": [
      139
     ]
    },
    "opt_einsum.tests.test_sharing.weakref": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_sharing_nesting.method1": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "opt_einsum.contract_expression": {
     "line number": [
      151,
      152,
      153
     ]
    },
    "opt_einsum.shared_intermediates": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_sharing_nesting.method2": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "method1": {
     "line number": [
      170
     ]
    },
    "opt_einsum.contract_expression": {
     "line number": [
      165,
      166,
      169
     ]
    },
    "opt_einsum.shared_intermediates": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_sharing_reused_cache": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "expr": {
     "line number": [
      89,
      94,
      100,
      102
     ]
    },
    "opt_einsum.contract_expression": {
     "line number": [
      89
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      88
     ]
    },
    "opt_einsum.shared_intermediates": {
     "line number": [
      93,
      99,
      101
     ]
    },
    "opt_einsum.sharing.count_cached_ops": {
     "line number": [
      95,
      103
     ]
    },
    "opt_einsum.tests.test_sharing.backends": {
     "line number": [
      85
     ]
    },
    "opt_einsum.tests.test_sharing.pytest": {
     "line number": [
      85
     ]
    },
    "print": {
     "line number": [
      91,
      92,
      97,
      98,
      105,
      106,
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_sharing_value": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "expr": {
     "line number": [
      53,
      55
     ]
    },
    "opt_einsum.contract_expression": {
     "line number": [
      51
     ]
    },
    "opt_einsum.helpers.build_views": {
     "line number": [
      49
     ]
    },
    "opt_einsum.shared_intermediates": {
     "line number": [
      54
     ]
    },
    "opt_einsum.tests.test_sharing.backends": {
     "line number": [
      47
     ]
    },
    "opt_einsum.tests.test_sharing.equations": {
     "line number": [
      46
     ]
    },
    "opt_einsum.tests.test_sharing.pytest": {
     "line number": [
      46,
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.test_sharing_with_constants": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      248
     ]
    },
    "numpy.allclose": {
     "line number": [
      259
     ]
    },
    "numpy.random.rand": {
     "line number": [
      248,
      249
     ]
    },
    "opt_einsum.contract_expression": {
     "line number": [
      251,
      255
     ]
    },
    "opt_einsum.shared_intermediates": {
     "line number": [
      254
     ]
    },
    "opt_einsum.tests.test_sharing.backends": {
     "line number": [
      241
     ]
    },
    "opt_einsum.tests.test_sharing.equations": {
     "line number": [
      245,
      252,
      256
     ]
    },
    "opt_einsum.tests.test_sharing.pytest": {
     "line number": [
      241
     ]
    },
    "zip": {
     "line number": [
      258
     ]
    }
   }
  },
  "type": "function"
 },
 "opt_einsum.tests.test_sharing.to_backend": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_sharing.to_cupy": {
  "data": {
   "shadows": "opt_einsum.backends.to_cupy"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.to_torch": {
  "data": {
   "shadows": "opt_einsum.backends.to_torch"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "opt_einsum.tests.test_sharing.torch_if_found": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "opt_einsum.tests.test_sharing.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "opt_einsum.versions": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 }
}