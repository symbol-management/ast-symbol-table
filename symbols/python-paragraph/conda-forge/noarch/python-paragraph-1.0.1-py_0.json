{
 "paragraph": {
  "data": {},
  "type": "module"
 },
 "paragraph.session": {
  "data": {},
  "type": "module"
 },
 "paragraph.session.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "paragraph.session.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "paragraph.session.Executor": {
  "data": {
   "shadows": "concurrent.futures.Executor"
  },
  "type": "import"
 },
 "paragraph.session.Future": {
  "data": {
   "shadows": "concurrent.futures.Future"
  },
  "type": "import"
 },
 "paragraph.session.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "paragraph.session.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "paragraph.session.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "paragraph.session.Op": {
  "data": {
   "shadows": "paragraph.types.Op"
  },
  "type": "import"
 },
 "paragraph.session.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "paragraph.session.Requirement": {
  "data": {
   "shadows": "paragraph.types.Requirement"
  },
  "type": "import"
 },
 "paragraph.session.Variable": {
  "data": {
   "shadows": "paragraph.types.Variable"
  },
  "type": "import"
 },
 "paragraph.session._count_usages": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "collections.defaultdict",
    "int",
    "paragraph.session.traverse_fw",
    "paragraph.types.Variable",
    "typing.Dict",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "paragraph.session.apply": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError",
    "concurrent.futures.Executor",
    "dict",
    "isinstance",
    "paragraph.session.evaluate",
    "paragraph.types.Variable",
    "typing.Any",
    "typing.Dict",
    "typing.Generator",
    "typing.Iterable",
    "typing.List",
    "typing.Optional",
    "zip"
   ]
  },
  "type": "function"
 },
 "paragraph.session.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "paragraph.session.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "paragraph.session.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "paragraph.session.eager_mode": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "paragraph.types.Op.__call__"
   ]
  },
  "type": "function"
 },
 "paragraph.session.evaluate": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "concurrent.futures.Executor",
    "concurrent.futures.Future",
    "isinstance",
    "len",
    "paragraph.session._count_usages",
    "paragraph.session.traverse_fw",
    "paragraph.types.Op.split_args",
    "paragraph.types.Variable",
    "typing.Any",
    "typing.Dict",
    "typing.Iterable",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "paragraph.session.filterfalse": {
  "data": {
   "shadows": "itertools.filterfalse"
  },
  "type": "import"
 },
 "paragraph.session.solve_requirements": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "list",
    "paragraph.session.traverse_bw",
    "paragraph.types.Requirement",
    "paragraph.types.Variable",
    "type",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "paragraph.session.traverse_bw": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "collections.deque",
    "itertools.filterfalse",
    "len",
    "paragraph.session._count_usages",
    "paragraph.types.Variable",
    "typing.Generator",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "paragraph.session.traverse_fw": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "paragraph.types.Variable",
    "typing.Generator",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "paragraph.types": {
  "data": {},
  "type": "module"
 },
 "paragraph.types.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "paragraph.types.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "paragraph.types.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "paragraph.types.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "paragraph.types.Future": {
  "data": {
   "shadows": "concurrent.futures.Future"
  },
  "type": "import"
 },
 "paragraph.types.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "paragraph.types.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "paragraph.types.Op": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "abc.ABC",
    "bool",
    "paragraph.types.attr"
   ]
  },
  "type": "class"
 },
 "paragraph.types.Op.__call__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "paragraph.types.Op",
    "paragraph.types.Variable"
   ]
  },
  "type": "function"
 },
 "paragraph.types.Op.__repr__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "paragraph.types.Op._collect_args": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "concurrent.futures.Future",
    "enumerate",
    "int",
    "isinstance",
    "itertools.chain",
    "staticmethod",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Iterable",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "paragraph.types.Op._run": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "paragraph.types.Op.arg_requirements": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "paragraph.types.Requirement",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "paragraph.types.Op.split_args": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "filter",
    "int",
    "isinstance",
    "sorted",
    "staticmethod",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "paragraph.types.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "paragraph.types.Requirement": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "abc.ABC",
    "paragraph.types.attr"
   ]
  },
  "type": "class"
 },
 "paragraph.types.Requirement.merge": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "paragraph.types.Requirement.new": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "paragraph.types.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "paragraph.types.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "paragraph.types.Variable": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "dict",
    "paragraph.types.attr",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "paragraph.types.Variable.__repr__": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "paragraph.types.Variable._name_only_independent_variable": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "paragraph.types.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "paragraph.types.attr": {
  "data": {
   "shadows": "attr"
  },
  "type": "import"
 },
 "paragraph.types.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "paragraph.types.op": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "Wrapper",
    "func",
    "functools.wraps",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "paragraph.types.op.Wrapper": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "paragraph.types.Op"
   ]
  },
  "type": "class"
 },
 "paragraph.types.op.Wrapper.__repr__": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "paragraph.types.op.Wrapper._run": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "paragraph.types.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 }
}