{
 "pandas_gbq": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_gbq._load": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_gbq._load.encode_chunk": {
  "lineno": 9,
  "symbols_in_volume": [
   "six.BytesIO",
   "six.StringIO"
  ],
  "type": "function"
 },
 "pandas_gbq._load.encode_chunks": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq._load.load_chunks": {
  "lineno": 46,
  "symbols_in_volume": [
   "google.cloud.bigquery.LoadJobConfig",
   "google.cloud.bigquery.SchemaField.from_api_repr",
   "pandas_gbq._schema.generate_bq_schema"
  ],
  "type": "function"
 },
 "pandas_gbq._query": {
  "lineno": null,
  "symbols_in_volume": [
   "pkg_resources.parse_version"
  ],
  "type": "module"
 },
 "pandas_gbq._query.query_config": {
  "lineno": 22,
  "symbols_in_volume": [
   "google.cloud.bigquery.QueryJobConfig.from_api_repr"
  ],
  "type": "function"
 },
 "pandas_gbq._query.query_config_old_version": {
  "lineno": 10,
  "symbols_in_volume": [
   "google.cloud.bigquery.QueryJobConfig.from_api_repr"
  ],
  "type": "function"
 },
 "pandas_gbq._schema": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_gbq._schema.generate_bq_schema": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq._version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_gbq._version.get_versions": {
  "lineno": 20,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "pandas_gbq.gbq.AccessDenied": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_gbq.gbq.DatasetCreationError": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_gbq.gbq.GbqConnector": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_gbq.gbq.GbqConnector.__init__": {
  "lineno": 168,
  "symbols_in_volume": [
   "google.api_core.exceptions.ClientError",
   "google.api_core.exceptions.GoogleAPIError"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector._clean_schema_fields": {
  "lineno": 596,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector._start_timer": {
  "lineno": 415,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.delete_and_recreate_table": {
  "lineno": 663,
  "symbols_in_volume": [
   "time.sleep"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.get_application_default_credentials": {
  "lineno": 197,
  "symbols_in_volume": [
   "google.auth.exceptions.DefaultCredentialsError"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.get_client": {
  "lineno": 437,
  "symbols_in_volume": [
   "google.cloud.bigquery.Client"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.get_credentials": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.get_default_credentials_path": {
  "lineno": 284,
  "symbols_in_volume": [
   "os.environ",
   "os.makedirs",
   "os.name",
   "os.path.exists",
   "os.path.expanduser",
   "os.path.join"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.get_elapsed_seconds": {
  "lineno": 418,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.get_service_account_credentials": {
  "lineno": 379,
  "symbols_in_volume": [
   "google.oauth2.service_account.Credentials.from_service_account_info",
   "json.loads",
   "os.path.isfile",
   "pandas.compat.PY3"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.get_user_account_credentials": {
  "lineno": 331,
  "symbols_in_volume": [
   "google_auth_oauthlib.flow.InstalledAppFlow.from_client_config",
   "oauthlib.oauth2.rfc6749.errors.OAuth2Error"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.load_data": {
  "lineno": 543,
  "symbols_in_volume": [
   "pandas_gbq._load.load_chunks"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.load_user_account_credentials": {
  "lineno": 227,
  "symbols_in_volume": [
   "google.oauth2.credentials.Credentials",
   "json.load",
   "os.path.isfile",
   "os.rename"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.log_elapsed_seconds": {
  "lineno": 421,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.process_http_error": {
  "lineno": 442,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.run_query": {
  "lineno": 449,
  "symbols_in_volume": [
   "concurrent.futures.TimeoutError",
   "google.auth.exceptions.RefreshError",
   "pandas_gbq._query.query_config"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.save_user_account_credentials": {
  "lineno": 311,
  "symbols_in_volume": [
   "json.dump"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.schema": {
  "lineno": 562,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.schema_is_subset": {
  "lineno": 634,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.sizeof_fmt": {
  "lineno": 428,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.verify_schema": {
  "lineno": 605,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.gbq.GenericGBQException": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_gbq.gbq.InvalidColumnOrder": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_gbq.gbq.InvalidIndexColumn": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_gbq.gbq.InvalidPageToken": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_gbq.gbq.InvalidPrivateKeyFormat": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_gbq.gbq.InvalidSchema": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_gbq.gbq.NotFoundException": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_gbq.gbq.QueryTimeout": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_gbq.gbq.TableCreationError": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_gbq.gbq._Dataset": {
  "lineno": 1093,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_gbq.gbq._Dataset.__init__": {
  "lineno": 1095,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.gbq._Dataset.create": {
  "lineno": 1147,
  "symbols_in_volume": [
   "google.cloud.bigquery.Dataset"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq._Dataset.datasets": {
  "lineno": 1121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.gbq._Dataset.delete": {
  "lineno": 1168,
  "symbols_in_volume": [
   "google.api_core.exceptions.NotFound"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq._Dataset.exists": {
  "lineno": 1098,
  "symbols_in_volume": [
   "google.api_core.exceptions.NotFound"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq._Dataset.tables": {
  "lineno": 1191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.gbq._Table": {
  "lineno": 997,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_gbq.gbq._Table.__init__": {
  "lineno": 999,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.gbq._Table.create": {
  "lineno": 1027,
  "symbols_in_volume": [
   "google.cloud.bigquery.SchemaField.from_api_repr",
   "google.cloud.bigquery.Table"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq._Table.delete": {
  "lineno": 1070,
  "symbols_in_volume": [
   "google.api_core.exceptions.NotFound"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq._Table.exists": {
  "lineno": 1003,
  "symbols_in_volume": [
   "google.api_core.exceptions.NotFound"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq._check_google_client_version": {
  "lineno": 19,
  "symbols_in_volume": [
   "pkg_resources.get_distribution",
   "pkg_resources.parse_version"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq._generate_bq_schema": {
  "lineno": 992,
  "symbols_in_volume": [
   "pandas_gbq._schema.generate_bq_schema"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq._get_credentials_file": {
  "lineno": 684,
  "symbols_in_volume": [
   "os.environ.get"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq._parse_data": {
  "lineno": 689,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas.compat.lzip"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq._test_google_api_imports": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.gbq._try_credentials": {
  "lineno": 63,
  "symbols_in_volume": [
   "google.cloud.bigquery.Client"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq.generate_bq_schema": {
  "lineno": 974,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq.read_gbq": {
  "lineno": 714,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "numpy.int64",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq.to_gbq": {
  "lineno": 852,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas_gbq.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_gbq.tests.test__load": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_gbq.tests.test__load.test_encode_chunk_with_unicode": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas_gbq._load.encode_chunk"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test__load.test_encode_chunks_splits_dataframe": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas_gbq._load.encode_chunks"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test__load.test_encode_chunks_with_chunksize_none": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas_gbq._load.encode_chunks"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test__query": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_gbq.tests.test__query.test_query_config_w_dev_bq_version": {
  "lineno": 16,
  "symbols_in_volume": [
   "mock.patch",
   "pandas_gbq._query.query_config",
   "pkg_resources.parse_version"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test__query.test_query_config_w_new_bq_version": {
  "lineno": 38,
  "symbols_in_volume": [
   "mock.patch",
   "pandas_gbq._query.query_config",
   "pkg_resources.parse_version"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test__query.test_query_config_w_old_bq_version": {
  "lineno": 7,
  "symbols_in_volume": [
   "mock.patch",
   "pandas_gbq._query.query_config",
   "pkg_resources.parse_version"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test__schema": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_gbq.tests.test__schema.test_generate_bq_schema": {
  "lineno": 10,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "pandas.DataFrame",
   "pandas_gbq._schema.generate_bq_schema",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegration": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegration.test_should_be_able_to_get_a_bigquery_client": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegration.test_should_be_able_to_get_results_from_query": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegration.test_should_be_able_to_get_schema_from_query": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegration.test_should_be_able_to_get_valid_credentials": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegration.test_should_be_able_to_make_a_connector": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegrationWithLocalUserAccountAuth": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegrationWithLocalUserAccountAuth.setup": {
  "lineno": 243,
  "symbols_in_volume": [
   "pandas_gbq.gbq.GbqConnector",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegrationWithLocalUserAccountAuth.test_get_application_default_credentials_does_not_throw_error": {
  "lineno": 250,
  "symbols_in_volume": [
   "google.auth.exceptions.DefaultCredentialsError",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegrationWithLocalUserAccountAuth.test_get_application_default_credentials_returns_credentials": {
  "lineno": 262,
  "symbols_in_volume": [
   "google.auth.credentials.Credentials",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegrationWithLocalUserAccountAuth.test_get_user_account_credentials_bad_file_returns_credentials": {
  "lineno": 270,
  "symbols_in_volume": [
   "google.auth.credentials.Credentials",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegrationWithLocalUserAccountAuth.test_get_user_account_credentials_returns_credentials": {
  "lineno": 277,
  "symbols_in_volume": [
   "google.auth.credentials.Credentials"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQUnit": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_gbq.tests.test_gbq.TestGBQUnit.test_read_gbq_with_corrupted_private_key_json_should_fail": {
  "lineno": 354,
  "symbols_in_volume": [
   "pandas_gbq.gbq.InvalidPrivateKeyFormat",
   "pandas_gbq.gbq.read_gbq",
   "pytest.raises",
   "re.sub"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQUnit.test_read_gbq_with_empty_private_key_file_should_fail": {
  "lineno": 348,
  "symbols_in_volume": [
   "pandas.util.testing.ensure_clean",
   "pandas_gbq.gbq.InvalidPrivateKeyFormat",
   "pandas_gbq.gbq.read_gbq",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQUnit.test_read_gbq_with_empty_private_key_json_should_fail": {
  "lineno": 338,
  "symbols_in_volume": [
   "pandas_gbq.gbq.InvalidPrivateKeyFormat",
   "pandas_gbq.gbq.read_gbq",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQUnit.test_read_gbq_with_invalid_private_key_json_should_fail": {
  "lineno": 334,
  "symbols_in_volume": [
   "pandas_gbq.gbq.InvalidPrivateKeyFormat",
   "pandas_gbq.gbq.read_gbq",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQUnit.test_read_gbq_with_no_project_id_given_should_fail": {
  "lineno": 317,
  "symbols_in_volume": [
   "pandas_gbq.gbq.read_gbq",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQUnit.test_read_gbq_with_private_key_json_wrong_types_should_fail": {
  "lineno": 342,
  "symbols_in_volume": [
   "pandas_gbq.gbq.InvalidPrivateKeyFormat",
   "pandas_gbq.gbq.read_gbq",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQUnit.test_should_return_bigquery_correctly_typed": {
  "lineno": 291,
  "symbols_in_volume": [
   "pandas.compat.numpy.np_datetime64_compat",
   "pandas_gbq.gbq._parse_data",
   "pytest.mark.parametrize",
   "pytest.mark.xfail",
   "pytest.param"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQUnit.test_should_return_credentials_path_set_by_env_var": {
  "lineno": 285,
  "symbols_in_volume": [
   "pandas_gbq.gbq._get_credentials_file",
   "unittest.mock.patch.dict"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQUnit.test_that_parse_data_works_properly": {
  "lineno": 321,
  "symbols_in_volume": [
   "google.cloud.bigquery.table.Row",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq._parse_data"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQUnit.test_to_gbq_should_fail_if_invalid_table_name_passed": {
  "lineno": 309,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas_gbq.gbq.NotFoundException",
   "pandas_gbq.gbq.to_gbq",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQUnit.test_to_gbq_with_no_project_id_given_should_fail": {
  "lineno": 313,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas_gbq.gbq.to_gbq",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration": {
  "lineno": 370,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.setup": {
  "lineno": 372,
  "symbols_in_volume": [
   "pandas_gbq.gbq.GbqConnector",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_array": {
  "lineno": 826,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_array_agg": {
  "lineno": 850,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_array_length_zero": {
  "lineno": 834,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_array_of_floats": {
  "lineno": 868,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_bad_project_id": {
  "lineno": 599,
  "symbols_in_volume": [
   "pandas_gbq.gbq.GenericGBQException",
   "pandas_gbq.gbq.read_gbq",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_bad_table_name": {
  "lineno": 604,
  "symbols_in_volume": [
   "pandas_gbq.gbq.GenericGBQException",
   "pandas_gbq.gbq.read_gbq",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_column_order": {
  "lineno": 551,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_column_order_plus_index": {
  "lineno": 571,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_configuration_raises_value_error_with_multiple_config": {
  "lineno": 770,
  "symbols_in_volume": [
   "pandas_gbq.gbq.read_gbq",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_configuration_without_query": {
  "lineno": 747,
  "symbols_in_volume": [
   "pandas_gbq.gbq.read_gbq",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_download_dataset_larger_than_200k_rows": {
  "lineno": 610,
  "symbols_in_volume": [
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_index_column": {
  "lineno": 542,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_invalid_option_for_sql_dialect": {
  "lineno": 670,
  "symbols_in_volume": [
   "pandas_gbq.gbq.read_gbq",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_legacy_sql": {
  "lineno": 636,
  "symbols_in_volume": [
   "pandas_gbq.gbq.GenericGBQException",
   "pandas_gbq.gbq.read_gbq",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_malformed_query": {
  "lineno": 593,
  "symbols_in_volume": [
   "pandas_gbq.gbq.GenericGBQException",
   "pandas_gbq.gbq.read_gbq",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_query_inside_configuration": {
  "lineno": 726,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_query_response_bytes": {
  "lineno": 801,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_query_with_parameters": {
  "lineno": 685,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_read_gbq_raises_invalid_column_order": {
  "lineno": 561,
  "symbols_in_volume": [
   "pandas_gbq.gbq.InvalidColumnOrder",
   "pandas_gbq.gbq.read_gbq",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_read_gbq_raises_invalid_index_column": {
  "lineno": 583,
  "symbols_in_volume": [
   "pandas_gbq.gbq.InvalidIndexColumn",
   "pandas_gbq.gbq.read_gbq",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_arbitrary_timestamp": {
  "lineno": 485,
  "symbols_in_volume": [
   "numpy.datetime64",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_empty_strings": {
  "lineno": 387,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_false_boolean": {
  "lineno": 505,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_null_boolean": {
  "lineno": 511,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_null_floats": {
  "lineno": 472,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_null_integers": {
  "lineno": 430,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_null_strings": {
  "lineno": 393,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_null_timestamp": {
  "lineno": 493,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_nullable_booleans": {
  "lineno": 517,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_nullable_doubles": {
  "lineno": 462,
  "symbols_in_volume": [
   "math.pi",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_nullable_floats": {
  "lineno": 444,
  "symbols_in_volume": [
   "math.pi",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_nullable_integers": {
  "lineno": 405,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_nullable_longs": {
  "lineno": 421,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_timestamp_unix_epoch": {
  "lineno": 478,
  "symbols_in_volume": [
   "numpy.datetime64",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_true_boolean": {
  "lineno": 499,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_valid_doubles": {
  "lineno": 454,
  "symbols_in_volume": [
   "math.pi",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_valid_floats": {
  "lineno": 436,
  "symbols_in_volume": [
   "math.pi",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_valid_integers": {
  "lineno": 399,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_valid_longs": {
  "lineno": 414,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_should_properly_handle_valid_strings": {
  "lineno": 381,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_standard_sql": {
  "lineno": 653,
  "symbols_in_volume": [
   "pandas_gbq.gbq.GenericGBQException",
   "pandas_gbq.gbq.read_gbq",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_struct": {
  "lineno": 816,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_timeout_configuration": {
  "lineno": 788,
  "symbols_in_volume": [
   "pandas_gbq.gbq.QueryTimeout",
   "pandas_gbq.gbq.read_gbq",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_unicode_string_conversion_and_normalization": {
  "lineno": 526,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.PY3",
   "pandas.compat.u",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_zero_rows": {
  "lineno": 621,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration": {
  "lineno": 877,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.create_table_data_dataset_does_not_exist": {
  "lineno": 1475,
  "symbols_in_volume": [
   "pandas_gbq.gbq._Table",
   "pandas_gbq.gbq._generate_bq_schema"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.setup": {
  "lineno": 884,
  "symbols_in_volume": [
   "pandas_gbq.gbq.GbqConnector",
   "pandas_gbq.gbq._Dataset",
   "pandas_gbq.gbq._Table",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_create_dataset": {
  "lineno": 1448,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_create_dataset_already_exists": {
  "lineno": 1453,
  "symbols_in_volume": [
   "pandas_gbq.gbq.DatasetCreationError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_create_table": {
  "lineno": 1135,
  "symbols_in_volume": [
   "pandas.util.testing.makeMixedDataFrame",
   "pandas_gbq.gbq._generate_bq_schema"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_create_table_already_exists": {
  "lineno": 1141,
  "symbols_in_volume": [
   "pandas.util.testing.makeMixedDataFrame",
   "pandas_gbq.gbq.TableCreationError",
   "pandas_gbq.gbq._generate_bq_schema",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_dataset_does_not_exist": {
  "lineno": 1484,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_dataset_exists": {
  "lineno": 1470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_delete_dataset": {
  "lineno": 1459,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_delete_dataset_not_found": {
  "lineno": 1465,
  "symbols_in_volume": [
   "pandas_gbq.gbq.NotFoundException",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_delete_table": {
  "lineno": 1152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_delete_table_not_found": {
  "lineno": 1163,
  "symbols_in_volume": [
   "pandas_gbq.gbq.NotFoundException",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_generate_schema": {
  "lineno": 1124,
  "symbols_in_volume": [
   "pandas.util.testing.makeMixedDataFrame",
   "pandas_gbq.gbq._generate_bq_schema"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_google_upload_errors_should_raise_exception": {
  "lineno": 1026,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas_gbq.gbq.StreamingInsertError",
   "pandas_gbq.gbq.to_gbq",
   "pytest.raises",
   "pytest.skip",
   "pytz.timezone"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_list_dataset": {
  "lineno": 1436,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_list_table": {
  "lineno": 1167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_list_table_zero_results": {
  "lineno": 1440,
  "symbols_in_volume": [
   "pandas_gbq.gbq._Dataset"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_retrieve_schema": {
  "lineno": 1264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_schema_is_subset_fails_if_not_subset": {
  "lineno": 1331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_schema_is_subset_passes_if_subset": {
  "lineno": 1307,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_table_does_not_exist": {
  "lineno": 1148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_upload_chinese_unicode_data": {
  "lineno": 1040,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas_gbq.gbq.read_gbq",
   "pandas_gbq.gbq.to_gbq",
   "pytest.skip",
   "sys.version_info.major"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_upload_data": {
  "lineno": 905,
  "symbols_in_volume": [
   "pandas_gbq.gbq.read_gbq",
   "pandas_gbq.gbq.to_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_upload_data_flexible_column_order": {
  "lineno": 1222,
  "symbols_in_volume": [
   "pandas_gbq.gbq.to_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_upload_data_if_table_exists_append": {
  "lineno": 935,
  "symbols_in_volume": [
   "pandas.util.testing.makeMixedDataFrame",
   "pandas_gbq.gbq.InvalidSchema",
   "pandas_gbq.gbq.read_gbq",
   "pandas_gbq.gbq.to_gbq",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_upload_data_if_table_exists_fail": {
  "lineno": 919,
  "symbols_in_volume": [
   "pandas_gbq.gbq.TableCreationError",
   "pandas_gbq.gbq._generate_bq_schema",
   "pandas_gbq.gbq.to_gbq",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_upload_data_if_table_exists_raises_value_error": {
  "lineno": 1016,
  "symbols_in_volume": [
   "pandas_gbq.gbq.to_gbq",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_upload_data_if_table_exists_replace": {
  "lineno": 994,
  "symbols_in_volume": [
   "pandas.util.testing.makeMixedDataFrame",
   "pandas_gbq.gbq.read_gbq",
   "pandas_gbq.gbq.to_gbq",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_upload_data_with_different_df_and_user_schema": {
  "lineno": 1419,
  "symbols_in_volume": [
   "pandas.util.testing.makeMixedDataFrame",
   "pandas_gbq.gbq.to_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_upload_data_with_invalid_user_schema_raises_error": {
  "lineno": 1371,
  "symbols_in_volume": [
   "pandas.util.testing.makeMixedDataFrame",
   "pandas_gbq.gbq.GenericGBQException",
   "pandas_gbq.gbq.to_gbq",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_upload_data_with_missing_schema_fields_raises_error": {
  "lineno": 1384,
  "symbols_in_volume": [
   "pandas.util.testing.makeMixedDataFrame",
   "pandas_gbq.gbq.GenericGBQException",
   "pandas_gbq.gbq.to_gbq",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_upload_data_with_timestamp": {
  "lineno": 1396,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas_gbq.gbq.read_gbq",
   "pandas_gbq.gbq.to_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_upload_data_with_valid_user_schema": {
  "lineno": 1354,
  "symbols_in_volume": [
   "pandas.util.testing.makeMixedDataFrame",
   "pandas_gbq.gbq.to_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_upload_mixed_float_and_int": {
  "lineno": 1101,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas_gbq.gbq.read_gbq",
   "pandas_gbq.gbq.to_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_upload_other_unicode_data": {
  "lineno": 1068,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_numpy_array_equal",
   "pandas_gbq.gbq.read_gbq",
   "pandas_gbq.gbq.to_gbq",
   "pytest.skip",
   "sys.version_info.major"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_upload_subset_columns_if_table_exists_append": {
  "lineno": 961,
  "symbols_in_volume": [
   "pandas_gbq.gbq.read_gbq",
   "pandas_gbq.gbq.to_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_verify_schema_allows_flexible_column_order": {
  "lineno": 1177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_verify_schema_fails_different_data_type": {
  "lineno": 1192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_verify_schema_fails_different_structure": {
  "lineno": 1207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegration.test_verify_schema_ignores_field_mode": {
  "lineno": 1237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq._check_if_can_get_correct_default_credentials": {
  "lineno": 95,
  "symbols_in_volume": [
   "google.auth.exceptions.DefaultCredentialsError",
   "pandas_gbq.gbq.GbqConnector.scope",
   "pandas_gbq.gbq._try_credentials"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq._get_dataset_prefix_random": {
  "lineno": 50,
  "symbols_in_volume": [
   "random.randint"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq._get_private_key_contents": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq._get_private_key_path": {
  "lineno": 63,
  "symbols_in_volume": [
   "os.environ.get",
   "os.path.join"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq._get_project_id": {
  "lineno": 54,
  "symbols_in_volume": [
   "os.environ.get",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq._in_travis_environment": {
  "lineno": 45,
  "symbols_in_volume": [
   "os.environ"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq._skip_if_no_private_key_contents": {
  "lineno": 39,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq._skip_if_no_private_key_path": {
  "lineno": 33,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq._skip_local_auth_if_in_travis_env": {
  "lineno": 28,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq._test_imports": {
  "lineno": 80,
  "symbols_in_volume": [
   "pandas_gbq.gbq._test_google_api_imports",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.auth_type": {
  "lineno": 176,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.clean_gbq_environment": {
  "lineno": 111,
  "symbols_in_volume": [
   "pandas.compat.range",
   "pandas_gbq.gbq.GenericGBQException",
   "pandas_gbq.gbq.NotFoundException",
   "pandas_gbq.gbq._Dataset",
   "pandas_gbq.gbq._Table",
   "time.sleep"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.credentials": {
  "lineno": 199,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.gbq_connector": {
  "lineno": 213,
  "symbols_in_volume": [
   "pandas_gbq.gbq.GbqConnector",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.make_mixed_dataframe_v2": {
  "lineno": 153,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pytz.timezone"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.project": {
  "lineno": 90,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.test_generate_bq_schema_deprecated": {
  "lineno": 169,
  "symbols_in_volume": [
   "pandas_gbq.gbq.generate_bq_schema",
   "pytest.warns"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.test_should_read": {
  "lineno": 363,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 }
}