{
 "pandas_gbq": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_gbq._version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_gbq._version.get_versions": {
  "lineno": 20,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_gbq.gbq.AccessDenied": {
  "lineno": 68,
  "symbols_in_volume": [
   "pandas.core.common.PandasError"
  ],
  "type": "class"
 },
 "pandas_gbq.gbq.DatasetCreationError": {
  "lineno": 75,
  "symbols_in_volume": [
   "pandas.core.common.PandasError"
  ],
  "type": "class"
 },
 "pandas_gbq.gbq.GbqConnector": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_gbq.gbq.GbqConnector.__init__": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector._print": {
  "lineno": 299,
  "symbols_in_volume": [
   "sys.stdout.flush",
   "sys.stdout.write"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector._start_timer": {
  "lineno": 304,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.delete_and_recreate_table": {
  "lineno": 586,
  "symbols_in_volume": [
   "time.sleep"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.get_application_default_credentials": {
  "lineno": 172,
  "symbols_in_volume": [
   "apiclient.discovery.build",
   "httplib2.Http",
   "oauth2client.client.GoogleCredentials.get_application_default"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.get_credentials": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.get_elapsed_seconds": {
  "lineno": 307,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.get_service": {
  "lineno": 326,
  "symbols_in_volume": [
   "apiclient.discovery.build",
   "httplib2.Http"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.get_service_account_credentials": {
  "lineno": 239,
  "symbols_in_volume": [
   "json.loads",
   "oauth2client.client.SignedJwtAssertionCredentials",
   "oauth2client.service_account.ServiceAccountCredentials.from_json_keyfile_dict",
   "os.path.isfile",
   "pandas.compat.PY3"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.get_user_account_credentials": {
  "lineno": 219,
  "symbols_in_volume": [
   "oauth2client.client.OAuth2WebServerFlow",
   "oauth2client.file.Storage",
   "oauth2client.tools.argparser.parse_args",
   "oauth2client.tools.run_flow"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.load_data": {
  "lineno": 505,
  "symbols_in_volume": [
   "apiclient.errors.HttpError",
   "json.loads",
   "time.sleep",
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.print_elapsed_seconds": {
  "lineno": 310,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.process_http_error": {
  "lineno": 339,
  "symbols_in_volume": [
   "json.loads",
   "pandas.compat.bytes_to_str"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.process_insert_errors": {
  "lineno": 357,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.run_query": {
  "lineno": 379,
  "symbols_in_volume": [
   "apiclient.errors.HttpError",
   "oauth2client.client.AccessTokenRefreshError"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.sizeof_fmt": {
  "lineno": 317,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.gbq.GbqConnector.verify_schema": {
  "lineno": 561,
  "symbols_in_volume": [
   "apiclient.errors.HttpError",
   "json.dumps"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq.GenericGBQException": {
  "lineno": 82,
  "symbols_in_volume": [
   "pandas.core.common.PandasError"
  ],
  "type": "class"
 },
 "pandas_gbq.gbq.InvalidColumnOrder": {
  "lineno": 89,
  "symbols_in_volume": [
   "pandas.core.common.PandasError"
  ],
  "type": "class"
 },
 "pandas_gbq.gbq.InvalidIndexColumn": {
  "lineno": 98,
  "symbols_in_volume": [
   "pandas.core.common.PandasError"
  ],
  "type": "class"
 },
 "pandas_gbq.gbq.InvalidPageToken": {
  "lineno": 107,
  "symbols_in_volume": [
   "pandas.core.common.PandasError"
  ],
  "type": "class"
 },
 "pandas_gbq.gbq.InvalidPrivateKeyFormat": {
  "lineno": 61,
  "symbols_in_volume": [
   "pandas.core.common.PandasError"
  ],
  "type": "class"
 },
 "pandas_gbq.gbq.InvalidSchema": {
  "lineno": 115,
  "symbols_in_volume": [
   "pandas.core.common.PandasError"
  ],
  "type": "class"
 },
 "pandas_gbq.gbq.NotFoundException": {
  "lineno": 124,
  "symbols_in_volume": [
   "pandas.core.common.PandasError"
  ],
  "type": "class"
 },
 "pandas_gbq.gbq.StreamingInsertError": {
  "lineno": 132,
  "symbols_in_volume": [
   "pandas.core.common.PandasError"
  ],
  "type": "class"
 },
 "pandas_gbq.gbq.TableCreationError": {
  "lineno": 140,
  "symbols_in_volume": [
   "pandas.core.common.PandasError"
  ],
  "type": "class"
 },
 "pandas_gbq.gbq._Dataset": {
  "lineno": 994,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_gbq.gbq._Dataset.__init__": {
  "lineno": 996,
  "symbols_in_volume": [
   "apiclient.errors.HttpError"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq._Dataset.create": {
  "lineno": 1068,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.gbq._Dataset.datasets": {
  "lineno": 1031,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.gbq._Dataset.delete": {
  "lineno": 1095,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.gbq._Dataset.exists": {
  "lineno": 1006,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.gbq._Dataset.tables": {
  "lineno": 1118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.gbq._Table": {
  "lineno": 895,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_gbq.gbq._Table.__init__": {
  "lineno": 897,
  "symbols_in_volume": [
   "apiclient.errors.HttpError"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq._Table.create": {
  "lineno": 933,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.gbq._Table.delete": {
  "lineno": 971,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.gbq._Table.exists": {
  "lineno": 907,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.gbq._check_google_client_version": {
  "lineno": 17,
  "symbols_in_volume": [
   "distutils.version.StrictVersion",
   "pandas.compat.PY3",
   "pkg_resources.get_distribution"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq._generate_bq_schema": {
  "lineno": 866,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.gbq._parse_data": {
  "lineno": 607,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas.compat.lzip"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq._parse_entry": {
  "lineno": 629,
  "symbols_in_volume": [
   "datetime.datetime.utcfromtimestamp",
   "numpy.datetime64"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq._test_google_api_imports": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.gbq.generate_bq_schema": {
  "lineno": 858,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq.read_gbq": {
  "lineno": 644,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "pandas.concat"
  ],
  "type": "function"
 },
 "pandas_gbq.gbq.to_gbq": {
  "lineno": 771,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_gbq.tests.test_gbq": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_gbq.tests.test_gbq.GBQUnitTests": {
  "lineno": 373,
  "symbols_in_volume": [
   "pandas.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_gbq.tests.test_gbq.GBQUnitTests.setUp": {
  "lineno": 375,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.GBQUnitTests.test_import_google_api_python_client": {
  "lineno": 378,
  "symbols_in_volume": [
   "pandas.compat.PY2",
   "pandas.util.testing.assertRaises",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.GBQUnitTests.test_read_gbq_with_corrupted_private_key_json_should_fail": {
  "lineno": 455,
  "symbols_in_volume": [
   "pandas.util.testing.assertRaises",
   "pandas_gbq.gbq.InvalidPrivateKeyFormat",
   "pandas_gbq.gbq.read_gbq",
   "re.sub"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.GBQUnitTests.test_read_gbq_with_empty_private_key_file_should_fail": {
  "lineno": 449,
  "symbols_in_volume": [
   "pandas.util.testing.assertRaises",
   "pandas.util.testing.ensure_clean",
   "pandas_gbq.gbq.InvalidPrivateKeyFormat",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.GBQUnitTests.test_read_gbq_with_empty_private_key_json_should_fail": {
  "lineno": 439,
  "symbols_in_volume": [
   "pandas.util.testing.assertRaises",
   "pandas_gbq.gbq.InvalidPrivateKeyFormat",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.GBQUnitTests.test_read_gbq_with_invalid_private_key_json_should_fail": {
  "lineno": 435,
  "symbols_in_volume": [
   "pandas.util.testing.assertRaises",
   "pandas_gbq.gbq.InvalidPrivateKeyFormat",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.GBQUnitTests.test_read_gbq_with_no_project_id_given_should_fail": {
  "lineno": 422,
  "symbols_in_volume": [
   "pandas.util.testing.assertRaises",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.GBQUnitTests.test_read_gbq_with_private_key_json_wrong_types_should_fail": {
  "lineno": 443,
  "symbols_in_volume": [
   "pandas.util.testing.assertRaises",
   "pandas_gbq.gbq.InvalidPrivateKeyFormat",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.GBQUnitTests.test_should_return_bigquery_booleans_as_python_booleans": {
  "lineno": 406,
  "symbols_in_volume": [
   "pandas.util.testing.assert_equal",
   "pandas_gbq.gbq._parse_entry"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.GBQUnitTests.test_should_return_bigquery_floats_as_python_floats": {
  "lineno": 398,
  "symbols_in_volume": [
   "pandas.util.testing.assert_equal",
   "pandas_gbq.gbq._parse_entry"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.GBQUnitTests.test_should_return_bigquery_integers_as_python_ints": {
  "lineno": 394,
  "symbols_in_volume": [
   "pandas.util.testing.assert_equal",
   "pandas_gbq.gbq._parse_entry"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.GBQUnitTests.test_should_return_bigquery_strings_as_python_strings": {
  "lineno": 410,
  "symbols_in_volume": [
   "pandas.util.testing.assert_equal",
   "pandas_gbq.gbq._parse_entry"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.GBQUnitTests.test_should_return_bigquery_timestamps_as_numpy_datetime": {
  "lineno": 402,
  "symbols_in_volume": [
   "pandas.compat.numpy.np_datetime64_compat",
   "pandas.util.testing.assert_equal",
   "pandas_gbq.gbq._parse_entry"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.GBQUnitTests.test_that_parse_data_works_properly": {
  "lineno": 426,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq._parse_data"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.GBQUnitTests.test_to_gbq_should_fail_if_invalid_table_name_passed": {
  "lineno": 414,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assertRaises",
   "pandas_gbq.gbq.NotFoundException",
   "pandas_gbq.gbq.to_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.GBQUnitTests.test_to_gbq_with_no_project_id_given_should_fail": {
  "lineno": 418,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assertRaises",
   "pandas_gbq.gbq.to_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegrationWithLocalUserAccountAuth": {
  "lineno": 266,
  "symbols_in_volume": [
   "pandas.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegrationWithLocalUserAccountAuth.setUp": {
  "lineno": 268,
  "symbols_in_volume": [
   "pandas_gbq.gbq.GbqConnector"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegrationWithLocalUserAccountAuth.test_get_application_default_credentials_does_not_throw_error": {
  "lineno": 295,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegrationWithLocalUserAccountAuth.test_get_application_default_credentials_returns_credentials": {
  "lineno": 302,
  "symbols_in_volume": [
   "oauth2client.client.GoogleCredentials",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegrationWithLocalUserAccountAuth.test_should_be_able_to_get_a_bigquery_service": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegrationWithLocalUserAccountAuth.test_should_be_able_to_get_results_from_query": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegrationWithLocalUserAccountAuth.test_should_be_able_to_get_schema_from_query": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegrationWithLocalUserAccountAuth.test_should_be_able_to_get_valid_credentials": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegrationWithLocalUserAccountAuth.test_should_be_able_to_make_a_connector": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegrationWithServiceAccountKeyContents": {
  "lineno": 342,
  "symbols_in_volume": [
   "pandas.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegrationWithServiceAccountKeyContents.setUp": {
  "lineno": 343,
  "symbols_in_volume": [
   "pandas_gbq.gbq.GbqConnector"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegrationWithServiceAccountKeyContents.test_should_be_able_to_get_a_bigquery_service": {
  "lineno": 360,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegrationWithServiceAccountKeyContents.test_should_be_able_to_get_results_from_query": {
  "lineno": 368,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegrationWithServiceAccountKeyContents.test_should_be_able_to_get_schema_from_query": {
  "lineno": 364,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegrationWithServiceAccountKeyContents.test_should_be_able_to_get_valid_credentials": {
  "lineno": 356,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegrationWithServiceAccountKeyContents.test_should_be_able_to_make_a_connector": {
  "lineno": 352,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegrationWithServiceAccountKeyPath": {
  "lineno": 311,
  "symbols_in_volume": [
   "pandas.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegrationWithServiceAccountKeyPath.setUp": {
  "lineno": 312,
  "symbols_in_volume": [
   "pandas_gbq.gbq.GbqConnector"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegrationWithServiceAccountKeyPath.test_should_be_able_to_get_a_bigquery_service": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegrationWithServiceAccountKeyPath.test_should_be_able_to_get_results_from_query": {
  "lineno": 337,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegrationWithServiceAccountKeyPath.test_should_be_able_to_get_schema_from_query": {
  "lineno": 333,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegrationWithServiceAccountKeyPath.test_should_be_able_to_get_valid_credentials": {
  "lineno": 325,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestGBQConnectorIntegrationWithServiceAccountKeyPath.test_should_be_able_to_make_a_connector": {
  "lineno": 321,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration": {
  "lineno": 464,
  "symbols_in_volume": [
   "pandas.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.setUp": {
  "lineno": 476,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.setUpClass": {
  "lineno": 466,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.tearDown": {
  "lineno": 489,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.tearDownClass": {
  "lineno": 482,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_should_read_as_service_account_with_key_contents": {
  "lineno": 509,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_should_read_as_service_account_with_key_path": {
  "lineno": 502,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegration.test_should_read_as_user_account": {
  "lineno": 495,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath": {
  "lineno": 517,
  "symbols_in_volume": [
   "pandas.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.setUp": {
  "lineno": 530,
  "symbols_in_volume": [
   "pandas_gbq.gbq.GbqConnector"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.setUpClass": {
  "lineno": 519,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.tearDown": {
  "lineno": 544,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.tearDownClass": {
  "lineno": 537,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_bad_project_id": {
  "lineno": 768,
  "symbols_in_volume": [
   "pandas.util.testing.assertRaises",
   "pandas_gbq.gbq.GenericGBQException",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_bad_table_name": {
  "lineno": 773,
  "symbols_in_volume": [
   "pandas.util.testing.assertRaises",
   "pandas_gbq.gbq.GenericGBQException",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_column_order": {
  "lineno": 720,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_column_order_plus_index": {
  "lineno": 740,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_configuration_raises_value_error_with_multiple_config": {
  "lineno": 939,
  "symbols_in_volume": [
   "pandas.util.testing.assertRaises",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_configuration_without_query": {
  "lineno": 916,
  "symbols_in_volume": [
   "pandas.util.testing.assertRaises",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_download_dataset_larger_than_200k_rows": {
  "lineno": 779,
  "symbols_in_volume": [
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_index_column": {
  "lineno": 711,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_invalid_option_for_sql_dialect": {
  "lineno": 839,
  "symbols_in_volume": [
   "pandas.util.testing.assertRaises",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_legacy_sql": {
  "lineno": 805,
  "symbols_in_volume": [
   "pandas.util.testing.assertRaises",
   "pandas_gbq.gbq.GenericGBQException",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_malformed_query": {
  "lineno": 762,
  "symbols_in_volume": [
   "pandas.util.testing.assertRaises",
   "pandas_gbq.gbq.GenericGBQException",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_query_inside_configuration": {
  "lineno": 895,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assertRaises",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_query_response_bytes": {
  "lineno": 957,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_query_with_parameters": {
  "lineno": 854,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assertRaises",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_read_gbq_raises_invalid_column_order": {
  "lineno": 730,
  "symbols_in_volume": [
   "pandas.util.testing.assertRaises",
   "pandas_gbq.gbq.InvalidColumnOrder",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_read_gbq_raises_invalid_index_column": {
  "lineno": 752,
  "symbols_in_volume": [
   "pandas.util.testing.assertRaises",
   "pandas_gbq.gbq.InvalidIndexColumn",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_should_properly_handle_arbitrary_timestamp": {
  "lineno": 654,
  "symbols_in_volume": [
   "numpy.datetime64",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_should_properly_handle_empty_strings": {
  "lineno": 556,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_should_properly_handle_false_boolean": {
  "lineno": 674,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_should_properly_handle_null_boolean": {
  "lineno": 680,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_should_properly_handle_null_floats": {
  "lineno": 641,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_should_properly_handle_null_integers": {
  "lineno": 599,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_should_properly_handle_null_strings": {
  "lineno": 562,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_should_properly_handle_null_timestamp": {
  "lineno": 662,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_should_properly_handle_nullable_booleans": {
  "lineno": 686,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_should_properly_handle_nullable_doubles": {
  "lineno": 631,
  "symbols_in_volume": [
   "math.pi",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_should_properly_handle_nullable_floats": {
  "lineno": 613,
  "symbols_in_volume": [
   "math.pi",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_should_properly_handle_nullable_integers": {
  "lineno": 574,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_should_properly_handle_nullable_longs": {
  "lineno": 590,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_should_properly_handle_timestamp_unix_epoch": {
  "lineno": 647,
  "symbols_in_volume": [
   "numpy.datetime64",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_should_properly_handle_true_boolean": {
  "lineno": 668,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_should_properly_handle_valid_doubles": {
  "lineno": 623,
  "symbols_in_volume": [
   "math.pi",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_should_properly_handle_valid_floats": {
  "lineno": 605,
  "symbols_in_volume": [
   "math.pi",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_should_properly_handle_valid_integers": {
  "lineno": 568,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_should_properly_handle_valid_longs": {
  "lineno": 583,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_should_properly_handle_valid_strings": {
  "lineno": 550,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_standard_sql": {
  "lineno": 822,
  "symbols_in_volume": [
   "pandas.util.testing.assertRaises",
   "pandas_gbq.gbq.GenericGBQException",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_unicode_string_conversion_and_normalization": {
  "lineno": 695,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.compat.PY3",
   "pandas.compat.u",
   "pandas.util.testing.assert_frame_equal",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestReadGBQIntegrationWithServiceAccountKeyPath.test_zero_rows": {
  "lineno": 790,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas_gbq.gbq.read_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithLocalUserAccountAuth": {
  "lineno": 1340,
  "symbols_in_volume": [
   "pandas.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithLocalUserAccountAuth.setUp": {
  "lineno": 1359,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithLocalUserAccountAuth.setUpClass": {
  "lineno": 1348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithLocalUserAccountAuth.tearDown": {
  "lineno": 1376,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithLocalUserAccountAuth.tearDownClass": {
  "lineno": 1369,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithLocalUserAccountAuth.test_upload_data": {
  "lineno": 1382,
  "symbols_in_volume": [
   "pandas_gbq.gbq.read_gbq",
   "pandas_gbq.gbq.to_gbq",
   "time.sleep"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyContents": {
  "lineno": 1399,
  "symbols_in_volume": [
   "pandas.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyContents.setUp": {
  "lineno": 1418,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyContents.setUpClass": {
  "lineno": 1407,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyContents.tearDown": {
  "lineno": 1434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyContents.tearDownClass": {
  "lineno": 1427,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyContents.test_upload_data": {
  "lineno": 1440,
  "symbols_in_volume": [
   "pandas_gbq.gbq.read_gbq",
   "pandas_gbq.gbq.to_gbq",
   "time.sleep"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath": {
  "lineno": 975,
  "symbols_in_volume": [
   "pandas.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.create_table_data_dataset_does_not_exist": {
  "lineno": 1323,
  "symbols_in_volume": [
   "pandas_gbq.gbq._Table",
   "pandas_gbq.gbq._generate_bq_schema"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.setUp": {
  "lineno": 993,
  "symbols_in_volume": [
   "pandas_gbq.gbq.GbqConnector",
   "pandas_gbq.gbq._Dataset",
   "pandas_gbq.gbq._Table"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.setUpClass": {
  "lineno": 982,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.tearDown": {
  "lineno": 1017,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.tearDownClass": {
  "lineno": 1010,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.test_create_dataset": {
  "lineno": 1293,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.test_create_dataset_already_exists": {
  "lineno": 1299,
  "symbols_in_volume": [
   "pandas.util.testing.assertRaises",
   "pandas_gbq.gbq.DatasetCreationError"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.test_create_table": {
  "lineno": 1141,
  "symbols_in_volume": [
   "pandas.util.testing.makeMixedDataFrame",
   "pandas_gbq.gbq._generate_bq_schema"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.test_create_table_already_exists": {
  "lineno": 1148,
  "symbols_in_volume": [
   "pandas.util.testing.assertRaises",
   "pandas.util.testing.makeMixedDataFrame",
   "pandas_gbq.gbq.TableCreationError",
   "pandas_gbq.gbq._generate_bq_schema"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.test_dataset_does_not_exist": {
  "lineno": 1334,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.test_dataset_exists": {
  "lineno": 1317,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.test_delete_dataset": {
  "lineno": 1305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.test_delete_dataset_not_found": {
  "lineno": 1312,
  "symbols_in_volume": [
   "pandas.util.testing.assertRaises",
   "pandas_gbq.gbq.NotFoundException"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.test_delete_table": {
  "lineno": 1160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.test_delete_table_not_found": {
  "lineno": 1171,
  "symbols_in_volume": [
   "pandas.util.testing.assertRaises",
   "pandas_gbq.gbq.NotFoundException"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.test_generate_schema": {
  "lineno": 1130,
  "symbols_in_volume": [
   "pandas.util.testing.makeMixedDataFrame",
   "pandas_gbq.gbq._generate_bq_schema"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.test_google_upload_errors_should_raise_exception": {
  "lineno": 1116,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pandas.util.testing.assertRaises",
   "pandas_gbq.gbq.StreamingInsertError",
   "pandas_gbq.gbq.to_gbq",
   "pytest.skip",
   "pytz.timezone"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.test_list_dataset": {
  "lineno": 1278,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.test_list_table": {
  "lineno": 1175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.test_list_table_zero_results": {
  "lineno": 1284,
  "symbols_in_volume": [
   "pandas_gbq.gbq._Dataset"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.test_table_does_not_exist": {
  "lineno": 1155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.test_upload_data": {
  "lineno": 1023,
  "symbols_in_volume": [
   "pandas_gbq.gbq.read_gbq",
   "pandas_gbq.gbq.to_gbq",
   "time.sleep"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.test_upload_data_flexible_column_order": {
  "lineno": 1235,
  "symbols_in_volume": [
   "pandas_gbq.gbq.to_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.test_upload_data_if_table_exists_append": {
  "lineno": 1055,
  "symbols_in_volume": [
   "pandas.util.testing.assertRaises",
   "pandas.util.testing.makeMixedDataFrame",
   "pandas_gbq.gbq.InvalidSchema",
   "pandas_gbq.gbq.read_gbq",
   "pandas_gbq.gbq.to_gbq",
   "time.sleep"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.test_upload_data_if_table_exists_fail": {
  "lineno": 1039,
  "symbols_in_volume": [
   "pandas.util.testing.assertRaises",
   "pandas_gbq.gbq.TableCreationError",
   "pandas_gbq.gbq._generate_bq_schema",
   "pandas_gbq.gbq.to_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.test_upload_data_if_table_exists_raises_value_error": {
  "lineno": 1106,
  "symbols_in_volume": [
   "pandas.util.testing.assertRaises",
   "pandas_gbq.gbq.to_gbq"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.test_upload_data_if_table_exists_replace": {
  "lineno": 1083,
  "symbols_in_volume": [
   "pandas.util.testing.makeMixedDataFrame",
   "pandas_gbq.gbq.read_gbq",
   "pandas_gbq.gbq.to_gbq",
   "time.sleep"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.test_verify_schema_allows_flexible_column_order": {
  "lineno": 1187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.test_verify_schema_fails_different_data_type": {
  "lineno": 1203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.test_verify_schema_fails_different_structure": {
  "lineno": 1219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.TestToGBQIntegrationWithServiceAccountKeyPath.test_verify_schema_ignores_field_mode": {
  "lineno": 1250,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq._check_if_can_get_correct_default_credentials": {
  "lineno": 191,
  "symbols_in_volume": [
   "apiclient.discovery.build",
   "httplib2.Http",
   "oauth2client.client.GoogleCredentials.get_application_default"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq._get_dataset_prefix_random": {
  "lineno": 64,
  "symbols_in_volume": [
   "random.randint"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq._get_private_key_contents": {
  "lineno": 83,
  "symbols_in_volume": [
   "os.environ.get",
   "os.path.join"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq._get_private_key_path": {
  "lineno": 75,
  "symbols_in_volume": [
   "os.environ.get",
   "os.path.join"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq._get_project_id": {
  "lineno": 68,
  "symbols_in_volume": [
   "os.environ.get"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq._in_travis_environment": {
  "lineno": 59,
  "symbols_in_volume": [
   "os.environ"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq._setup_common": {
  "lineno": 180,
  "symbols_in_volume": [
   "logging.ERROR",
   "logging.getLogger",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq._skip_if_no_private_key_contents": {
  "lineno": 53,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq._skip_if_no_private_key_path": {
  "lineno": 47,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq._skip_if_no_project_id": {
  "lineno": 36,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq._skip_local_auth_if_in_travis_env": {
  "lineno": 42,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq._test_imports": {
  "lineno": 92,
  "symbols_in_volume": [
   "distutils.version.StrictVersion",
   "pandas.compat.PY3",
   "pkg_resources.get_distribution"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.clean_gbq_environment": {
  "lineno": 215,
  "symbols_in_volume": [
   "pandas.compat.range",
   "pandas_gbq.gbq.GenericGBQException",
   "pandas_gbq.gbq._Dataset",
   "pandas_gbq.gbq._Table"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.make_mixed_dataframe_v2": {
  "lineno": 243,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.compat.range",
   "pytz.timezone"
  ],
  "type": "function"
 },
 "pandas_gbq.tests.test_gbq.test_generate_bq_schema_deprecated": {
  "lineno": 259,
  "symbols_in_volume": [
   "pandas.util.testing.assert_produces_warning",
   "pandas_gbq.gbq.generate_bq_schema"
  ],
  "type": "function"
 }
}