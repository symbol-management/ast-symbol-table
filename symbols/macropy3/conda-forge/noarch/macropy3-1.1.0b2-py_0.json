{
 "macropy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "macropy.activate": {
  "lineno": 8,
  "symbols_in_volume": [
   "sys.meta_path.insert"
  ],
  "type": "function"
 },
 "macropy.case_classes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "macropy.case_classes.CaseClass": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.case_classes.CaseClass.__eq__": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.case_classes.CaseClass.__iter__": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.case_classes.CaseClass.__ne__": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.case_classes.CaseClass.__repr__": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.case_classes.CaseClass.__str__": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.case_classes.CaseClass.copy": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.case_classes.Enum": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.case_classes.Enum.__iter__": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.case_classes.Enum.__new__": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.case_classes.Enum.__repr__": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.case_classes.Enum.__str__": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.case_classes.Enum.next": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.case_classes.Enum.prev": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.case_classes.apply": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.case_classes.case": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.case_classes.case_transform": {
  "lineno": 233,
  "symbols_in_volume": [
   "ast.FunctionDef",
   "ast.arguments"
  ],
  "type": "function"
 },
 "macropy.case_classes.enum": {
  "lineno": 254,
  "symbols_in_volume": [
   "ast.Call",
   "ast.Expr",
   "ast.FunctionDef",
   "ast.Name",
   "ast.Pass",
   "ast.Tuple"
  ],
  "type": "function"
 },
 "macropy.case_classes.enum.handle": {
  "lineno": 261,
  "symbols_in_volume": [
   "ast.Assign",
   "ast.Attribute",
   "ast.Call",
   "ast.Name",
   "ast.Num",
   "ast.Store",
   "ast.Str",
   "ast.stmt.value"
  ],
  "type": "function"
 },
 "macropy.case_classes.enum_new": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.case_classes.extract_args": {
  "lineno": 98,
  "symbols_in_volume": [
   "ast.BinOp",
   "ast.BitOr",
   "ast.List",
   "ast.Name",
   "ast.Set"
  ],
  "type": "function"
 },
 "macropy.case_classes.find_members": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.case_classes.find_members.find_member_assignments": {
  "lineno": 129,
  "symbols_in_volume": [
   "ast.Assign",
   "ast.Attribute",
   "ast.Name"
  ],
  "type": "function"
 },
 "macropy.case_classes.noop_init": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.case_classes.prep_initialization": {
  "lineno": 168,
  "symbols_in_volume": [
   "ast.arg",
   "ast.arguments"
  ],
  "type": "function"
 },
 "macropy.case_classes.shared_transform": {
  "lineno": 191,
  "symbols_in_volume": [
   "ast.FunctionDef",
   "ast.Name",
   "ast.Str"
  ],
  "type": "function"
 },
 "macropy.case_classes.shared_transform.__init__": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.case_classes.split_body": {
  "lineno": 146,
  "symbols_in_volume": [
   "ast.ClassDef",
   "ast.FunctionDef",
   "ast.Name"
  ],
  "type": "function"
 },
 "macropy.console": {
  "lineno": 22,
  "symbols_in_volume": [
   "macropy.core.console.MacroConsole"
  ],
  "type": "function"
 },
 "macropy.core": {
  "lineno": null,
  "symbols_in_volume": [
   "ast.Add",
   "ast.And",
   "ast.AnnAssign",
   "ast.Assert",
   "ast.Assign",
   "ast.AsyncFor",
   "ast.AsyncFunctionDef",
   "ast.AsyncWith",
   "ast.Attribute",
   "ast.AugAssign",
   "ast.Await",
   "ast.BinOp",
   "ast.BitAnd",
   "ast.BitOr",
   "ast.BitXor",
   "ast.BoolOp",
   "ast.Break",
   "ast.Bytes",
   "ast.Call",
   "ast.ClassDef",
   "ast.Compare",
   "ast.Continue",
   "ast.Delete",
   "ast.Dict",
   "ast.DictComp",
   "ast.Div",
   "ast.Ellipsis",
   "ast.Eq",
   "ast.ExceptHandler",
   "ast.Expr",
   "ast.ExtSlice",
   "ast.FloorDiv",
   "ast.For",
   "ast.FormattedValue",
   "ast.FunctionDef",
   "ast.GeneratorExp",
   "ast.Global",
   "ast.Gt",
   "ast.GtE",
   "ast.If",
   "ast.IfExp",
   "ast.Import",
   "ast.ImportFrom",
   "ast.In",
   "ast.Index",
   "ast.Invert",
   "ast.Is",
   "ast.IsNot",
   "ast.JoinedStr",
   "ast.LShift",
   "ast.Lambda",
   "ast.List",
   "ast.ListComp",
   "ast.Lt",
   "ast.LtE",
   "ast.MatMult",
   "ast.Mod",
   "ast.Module",
   "ast.Mult",
   "ast.Name",
   "ast.NameConstant",
   "ast.Nonlocal",
   "ast.Not",
   "ast.NotEq",
   "ast.NotIn",
   "ast.Num",
   "ast.Or",
   "ast.Pass",
   "ast.Pow",
   "ast.RShift",
   "ast.Raise",
   "ast.Return",
   "ast.Set",
   "ast.SetComp",
   "ast.Slice",
   "ast.Starred",
   "ast.Str",
   "ast.Sub",
   "ast.Subscript",
   "ast.Try",
   "ast.Tuple",
   "ast.UAdd",
   "ast.USub",
   "ast.UnaryOp",
   "ast.While",
   "ast.With",
   "ast.Yield",
   "ast.YieldFrom",
   "ast.alias",
   "ast.arg",
   "ast.arguments",
   "ast.comprehension",
   "ast.keyword",
   "ast.withitem",
   "sys.float_info.max_10_exp"
  ],
  "type": "module"
 },
 "macropy.core.Captured": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.core.Captured.__init__": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.Literal": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.core.Literal.__init__": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.Literal.__repr__": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core._ast_leftovers": {
  "lineno": 435,
  "symbols_in_volume": [
   "ast",
   "ast.AST",
   "ast.AugLoad",
   "ast.AugStore",
   "ast.Const",
   "ast.Constant",
   "ast.Del",
   "ast.Expression",
   "ast.Interactive",
   "ast.Load",
   "ast.Module",
   "ast.Param",
   "ast.Store",
   "ast.Suite"
  ],
  "type": "function"
 },
 "macropy.core.analysis": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "macropy.core.analysis.Scoped": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.core.analysis.Scoped.__init__": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.analysis.Scoped.func": {
  "lineno": 67,
  "symbols_in_volume": [
   "ast.ClassDef",
   "ast.DictComp",
   "ast.ExceptHandler",
   "ast.For",
   "ast.GeneratorExp",
   "ast.Lambda",
   "ast.ListComp",
   "ast.SetComp",
   "ast.With"
  ],
  "type": "function"
 },
 "macropy.core.analysis.Scoped.func.extend_scope": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.analysis.Scoped.recurse_collect": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.analysis.extract_arg_names": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.analysis.find_assignments": {
  "lineno": 22,
  "symbols_in_volume": [
   "ast.Assign"
  ],
  "type": "function"
 },
 "macropy.core.analysis.find_names": {
  "lineno": 14,
  "symbols_in_volume": [
   "ast.Attribute",
   "ast.Name",
   "ast.Subscript"
  ],
  "type": "function"
 },
 "macropy.core.ast_repr": {
  "lineno": 55,
  "symbols_in_volume": [
   "ast.AST",
   "ast.Attribute",
   "ast.Bytes",
   "ast.Dict",
   "ast.List",
   "ast.Load",
   "ast.Name",
   "ast.NameConstant",
   "ast.Num",
   "ast.Set",
   "ast.Str",
   "ast.iter_fields",
   "ast.keyword"
  ],
  "type": "function"
 },
 "macropy.core.cleanup": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "macropy.core.cleanup.ast_ctx_fixer": {
  "lineno": 17,
  "symbols_in_volume": [
   "ast.Assign",
   "ast.Attribute",
   "ast.AugAssign",
   "ast.AugStore",
   "ast.Del",
   "ast.Delete",
   "ast.Load",
   "ast.Store"
  ],
  "type": "function"
 },
 "macropy.core.cleanup.fill_line_numbers": {
  "lineno": 40,
  "symbols_in_volume": [
   "ast.AST",
   "ast.iter_fields"
  ],
  "type": "function"
 },
 "macropy.core.cleanup.fix_ctx": {
  "lineno": 12,
  "symbols_in_volume": [
   "ast.Load"
  ],
  "type": "function"
 },
 "macropy.core.compat": {
  "lineno": null,
  "symbols_in_volume": [
   "ast.AsyncFunctionDef",
   "ast.ClassDef",
   "ast.FunctionDef",
   "sys.implementation.name",
   "sys.version_info"
  ],
  "type": "module"
 },
 "macropy.core.compat.Call": {
  "lineno": 24,
  "symbols_in_volume": [
   "ast.Call",
   "ast.Starred"
  ],
  "type": "function"
 },
 "macropy.core.console": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "macropy.core.console.MacroConsole": {
  "lineno": 12,
  "symbols_in_volume": [
   "code.InteractiveConsole"
  ],
  "type": "class"
 },
 "macropy.core.console.MacroConsole.__init__": {
  "lineno": 14,
  "symbols_in_volume": [
   "code.InteractiveConsole.__init__"
  ],
  "type": "function"
 },
 "macropy.core.console.MacroConsole.runsource": {
  "lineno": 18,
  "symbols_in_volume": [
   "ast.Interactive",
   "ast.parse",
   "code",
   "importlib.import_module"
  ],
  "type": "function"
 },
 "macropy.core.else_rec": {
  "lineno": 140,
  "symbols_in_volume": [
   "ast.If"
  ],
  "type": "function"
 },
 "macropy.core.exact_src": {
  "lineno": null,
  "symbols_in_volume": [
   "ast.DictComp",
   "ast.GeneratorExp",
   "ast.ListComp",
   "ast.SetComp"
  ],
  "type": "module"
 },
 "macropy.core.exact_src.ExactSrcException": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.core.exact_src.exact_src": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.exact_src.exact_src.exact_src_imp": {
  "lineno": 50,
  "symbols_in_volume": [
   "ast.expr",
   "ast.parse",
   "ast.stmt"
  ],
  "type": "function"
 },
 "macropy.core.exact_src.indexer": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.exact_src.linear_index": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.exporters": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "macropy.core.exporters.NullExporter": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.core.exporters.NullExporter.export_transformed": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.exporters.NullExporter.find": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.exporters.PycExporter": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.core.exporters.PycExporter.__init__": {
  "lineno": 65,
  "symbols_in_volume": [
   "os.getcwd"
  ],
  "type": "function"
 },
 "macropy.core.exporters.PycExporter.export_transformed": {
  "lineno": 68,
  "symbols_in_volume": [
   "imp.get_magic",
   "marshal.dump",
   "os.fstat"
  ],
  "type": "function"
 },
 "macropy.core.exporters.PycExporter.find": {
  "lineno": 80,
  "symbols_in_volume": [
   "imp.load_compiled",
   "os.fstat"
  ],
  "type": "function"
 },
 "macropy.core.exporters.SaveExporter": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.core.exporters.SaveExporter.__init__": {
  "lineno": 35,
  "symbols_in_volume": [
   "os.getcwd",
   "os.path.abspath",
   "shutil.copytree",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "macropy.core.exporters.SaveExporter.export_transformed": {
  "lineno": 41,
  "symbols_in_volume": [
   "os.path.commonprefix",
   "os.path.join",
   "os.path.relpath"
  ],
  "type": "function"
 },
 "macropy.core.exporters.SaveExporter.find": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.exporters.wr_long": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.failure": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "macropy.core.failure.MacroExpansionError": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.core.failure.MacroExpansionError.__init__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.failure.clear_errors": {
  "lineno": 21,
  "symbols_in_volume": [
   "traceback.format_tb"
  ],
  "type": "function"
 },
 "macropy.core.failure.raise_error": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.gen_sym": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "macropy.core.gen_sym.gen_sym": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.gen_sym.gen_sym.name_finder": {
  "lineno": 21,
  "symbols_in_volume": [
   "ast.Import",
   "ast.ImportFrom",
   "ast.Name",
   "ast.arg"
  ],
  "type": "function"
 },
 "macropy.core.gen_sym.gen_sym.name_for": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.hquotes": {
  "lineno": null,
  "symbols_in_volume": [
   "ast",
   "pickle",
   "pickle._Pickler.dispatch",
   "pickle._Pickler.save_global"
  ],
  "type": "module"
 },
 "macropy.core.hquotes.captured_registry": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.hquotes.hq": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.hquotes.hygienate": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.hquotes.hygienate.hygienator": {
  "lineno": 74,
  "symbols_in_volume": [
   "ast.Load",
   "ast.Name"
  ],
  "type": "function"
 },
 "macropy.core.hquotes.hygienator": {
  "lineno": 118,
  "symbols_in_volume": [
   "ast.Load",
   "ast.Name"
  ],
  "type": "function"
 },
 "macropy.core.hquotes.post_proc": {
  "lineno": 42,
  "symbols_in_volume": [
   "ast.Name",
   "ast.fix_missing_locations",
   "pickle._dumps"
  ],
  "type": "function"
 },
 "macropy.core.hquotes.unhygienic": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.import_hooks": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "macropy.core.import_hooks.MacroFinder": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.core.import_hooks.MacroFinder._find_spec_nomacro": {
  "lineno": 70,
  "symbols_in_volume": [
   "importlib.util.spec_from_loader",
   "sys.meta_path"
  ],
  "type": "function"
 },
 "macropy.core.import_hooks.MacroFinder.expand_macros": {
  "lineno": 90,
  "symbols_in_volume": [
   "ast.parse",
   "importlib.import_module"
  ],
  "type": "function"
 },
 "macropy.core.import_hooks.MacroFinder.find_spec": {
  "lineno": 118,
  "symbols_in_volume": [
   "importlib.util.spec_from_loader",
   "logging.debug",
   "logging.exception"
  ],
  "type": "function"
 },
 "macropy.core.import_hooks.MacroLoader": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.core.import_hooks.MacroLoader.__init__": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.import_hooks.MacroLoader.create_module": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.import_hooks.MacroLoader.exec_module": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.import_hooks.MacroLoader.export": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.import_hooks.MacroLoader.get_filename": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.import_hooks.MacroLoader.is_package": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.import_hooks._MacroLoader": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.core.import_hooks._MacroLoader.__init__": {
  "lineno": 24,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "function"
 },
 "macropy.core.import_hooks._MacroLoader.load_module": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.jmap": {
  "lineno": 421,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.macros": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "macropy.core.macros.Block": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.core.macros.Block.detect_macro": {
  "lineno": 130,
  "symbols_in_volume": [
   "ast.Expr",
   "ast.With",
   "ast.expr"
  ],
  "type": "function"
 },
 "macropy.core.macros.Decorator": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.core.macros.Decorator.detect_macro": {
  "lineno": 166,
  "symbols_in_volume": [
   "ast.Expr",
   "ast.expr"
  ],
  "type": "function"
 },
 "macropy.core.macros.ExpansionContext": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.core.macros.ExpansionContext.__init__": {
  "lineno": 337,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.macros.ExpansionContext.expand_macros": {
  "lineno": 345,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.macros.ExpansionContext.macro_expand": {
  "lineno": 357,
  "symbols_in_volume": [
   "inspect.isgenerator",
   "inspect.isgeneratorfunction"
  ],
  "type": "function"
 },
 "macropy.core.macros.ExpansionContext.walk_children": {
  "lineno": 444,
  "symbols_in_volume": [
   "ast.AST",
   "ast.iter_fields"
  ],
  "type": "function"
 },
 "macropy.core.macros.ExpansionContext.walk_tree": {
  "lineno": 466,
  "symbols_in_volume": [
   "ast.AST"
  ],
  "type": "function"
 },
 "macropy.core.macros.Expr": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.core.macros.Expr.detect_macro": {
  "lineno": 107,
  "symbols_in_volume": [
   "ast.Expr",
   "ast.Index",
   "ast.Subscript",
   "ast.expr"
  ],
  "type": "function"
 },
 "macropy.core.macros.MacroType": {
  "lineno": 62,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "macropy.core.macros.MacroType.__init__": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.macros.MacroType.detect_macro": {
  "lineno": 84,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "macropy.core.macros.MacroType.get_macro_details": {
  "lineno": 73,
  "symbols_in_volume": [
   "ast.Call",
   "ast.Name"
  ],
  "type": "function"
 },
 "macropy.core.macros.Macros": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.core.macros.Macros.Registry": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.core.macros.Macros.Registry.__call__": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.macros.Macros.Registry.__init__": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.macros.Macros.__init__": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.macros.Macros.add_macro_type": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.macros.ModuleExpansionContext": {
  "lineno": 493,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.core.macros.ModuleExpansionContext.__init__": {
  "lineno": 504,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.macros.ModuleExpansionContext.expand_macros": {
  "lineno": 526,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.macros.ModuleExpansionContext.post_process": {
  "lineno": 568,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.macros.ModuleExpansionContext.pre_process": {
  "lineno": 541,
  "symbols_in_volume": [
   "ast.Expr",
   "ast.ImportFrom",
   "ast.Module"
  ],
  "type": "function"
 },
 "macropy.core.macros.WrappedFunction": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.core.macros.WrappedFunction.__call__": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.macros.WrappedFunction.__getitem__": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.macros.WrappedFunction.__init__": {
  "lineno": 23,
  "symbols_in_volume": [
   "functools.update_wrapper"
  ],
  "type": "function"
 },
 "macropy.core.macros.check_annotated": {
  "lineno": 625,
  "symbols_in_volume": [
   "ast.Index",
   "ast.Name",
   "ast.Subscript"
  ],
  "type": "function"
 },
 "macropy.core.macros.detect_macros": {
  "lineno": 584,
  "symbols_in_volume": [
   "ast.ImportFrom",
   "ast.alias",
   "importlib.import_module",
   "importlib.util.resolve_name"
  ],
  "type": "function"
 },
 "macropy.core.macros.macro_function": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.macros.macro_stub": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.macros.preserve_line_numbers": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.mix": {
  "lineno": 411,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.parse_expr": {
  "lineno": 89,
  "symbols_in_volume": [
   "ast.parse"
  ],
  "type": "function"
 },
 "macropy.core.parse_stmt": {
  "lineno": 94,
  "symbols_in_volume": [
   "ast.parse"
  ],
  "type": "function"
 },
 "macropy.core.quotes": {
  "lineno": null,
  "symbols_in_volume": [
   "ast"
  ],
  "type": "module"
 },
 "macropy.core.quotes.ast_list": {
  "lineno": 76,
  "symbols_in_volume": [
   "ast.Attribute",
   "ast.Load",
   "ast.Name",
   "ast.keyword"
  ],
  "type": "function"
 },
 "macropy.core.quotes.ast_literal": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.quotes.name": {
  "lineno": 61,
  "symbols_in_volume": [
   "ast.Attribute",
   "ast.Load",
   "ast.Name",
   "ast.keyword"
  ],
  "type": "function"
 },
 "macropy.core.quotes.q": {
  "lineno": 40,
  "symbols_in_volume": [
   "ast.Assign"
  ],
  "type": "function"
 },
 "macropy.core.quotes.u": {
  "lineno": 54,
  "symbols_in_volume": [
   "ast.Name"
  ],
  "type": "function"
 },
 "macropy.core.quotes.unquote_search": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.real_repr": {
  "lineno": 99,
  "symbols_in_volume": [
   "ast.AST",
   "ast.iter_fields"
  ],
  "type": "function"
 },
 "macropy.core.rec": {
  "lineno": 416,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.tabs": {
  "lineno": 426,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.unparse": {
  "lineno": 430,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "macropy.core.util.Lazy": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.core.util.Lazy.__call__": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.util.Lazy.__init__": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.util.box": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.util.distinct": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.util.flatten": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.util.flatten.loop": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.util.merge_dicts": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.util.register": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.util.register.x": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.util.singleton": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.walkers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "macropy.core.walkers.Walker": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.core.walkers.Walker.__init__": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.walkers.Walker.collect": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.walkers.Walker.recurse": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.walkers.Walker.recurse_collect": {
  "lineno": 107,
  "symbols_in_volume": [
   "ast.AST"
  ],
  "type": "function"
 },
 "macropy.core.walkers.Walker.recurse_collect.set_ctx": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.walkers.Walker.recurse_collect.set_ctx_for": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.walkers.Walker.recurse_collect.stop": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.core.walkers.Walker.walk_children": {
  "lineno": 60,
  "symbols_in_volume": [
   "ast.AST",
   "ast.iter_fields"
  ],
  "type": "function"
 },
 "macropy.experimental": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "macropy.experimental.js_snippets": {
  "lineno": null,
  "symbols_in_volume": [
   "macropy.core.quotes.macros",
   "os.path.dirname",
   "pjs.__file__"
  ],
  "type": "module"
 },
 "macropy.experimental.js_snippets.js": {
  "lineno": 27,
  "symbols_in_volume": [
   "macropy.core.quotes.ast.Str",
   "macropy.core.quotes.macros.expr",
   "pjs.converter.Converter",
   "pjs.converter.Scope"
  ],
  "type": "function"
 },
 "macropy.experimental.js_snippets.pyjs": {
  "lineno": 33,
  "symbols_in_volume": [
   "macropy.core.quotes.macros.expr",
   "macropy.core.quotes.q",
   "macropy.core.quotes.u",
   "pjs.converter.Converter",
   "pjs.converter.Scope"
  ],
  "type": "function"
 },
 "macropy.experimental.pattern": {
  "lineno": null,
  "symbols_in_volume": [
   "ast"
  ],
  "type": "module"
 },
 "macropy.experimental.pattern.ClassMatcher": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.experimental.pattern.ClassMatcher.__init__": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pattern.ClassMatcher.default_unapply": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pattern.ClassMatcher.default_unapply.genPosValues": {
  "lineno": 201,
  "symbols_in_volume": [
   "inspect.getargspec"
  ],
  "type": "function"
 },
 "macropy.experimental.pattern.ClassMatcher.match": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pattern.ClassMatcher.var_names": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pattern.ListMatcher": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.experimental.pattern.ListMatcher.__init__": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pattern.ListMatcher.match": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pattern.ListMatcher.var_names": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pattern.LiteralMatcher": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.experimental.pattern.LiteralMatcher.__init__": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pattern.LiteralMatcher.match": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pattern.LiteralMatcher.var_names": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pattern.Matcher": {
  "lineno": 37,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "macropy.experimental.pattern.Matcher._match_value": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pattern.Matcher.get_var": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pattern.Matcher.match": {
  "lineno": 47,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "macropy.experimental.pattern.Matcher.var_names": {
  "lineno": 39,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "macropy.experimental.pattern.NameMatcher": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.experimental.pattern.NameMatcher.__init__": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pattern.NameMatcher.match": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pattern.NameMatcher.var_names": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pattern.OptionalMatcher": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.experimental.pattern.OptionalMatcher.__init__": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pattern.OptionalMatcher.match": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pattern.OptionalMatcher.var_names": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pattern.ParallelMatcher": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.experimental.pattern.ParallelMatcher.__init__": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pattern.ParallelMatcher.match": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pattern.ParallelMatcher.var_names": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pattern.PatternException": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.experimental.pattern.PatternMatchException": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.experimental.pattern.PatternVarConflict": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.experimental.pattern.PatternVarMismatch": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.experimental.pattern.TupleMatcher": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.experimental.pattern.TupleMatcher.__init__": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pattern.TupleMatcher.match": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pattern.TupleMatcher.var_names": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pattern.WildcardMatcher": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.experimental.pattern.WildcardMatcher.__init__": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pattern.WildcardMatcher.match": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pattern.WildcardMatcher.var_names": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pattern._is_pattern_match_expr": {
  "lineno": 321,
  "symbols_in_volume": [
   "ast.BinOp",
   "ast.LShift"
  ],
  "type": "function"
 },
 "macropy.experimental.pattern._is_pattern_match_stmt": {
  "lineno": 316,
  "symbols_in_volume": [
   "ast.Expr"
  ],
  "type": "function"
 },
 "macropy.experimental.pattern._matching": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pattern._matching_walker": {
  "lineno": 326,
  "symbols_in_volume": [
   "ast.Assign",
   "ast.Expr",
   "ast.Name",
   "ast.Store"
  ],
  "type": "function"
 },
 "macropy.experimental.pattern._rewrite_if": {
  "lineno": 359,
  "symbols_in_volume": [
   "ast.BinOp",
   "ast.ExceptHandler",
   "ast.Expr",
   "ast.If",
   "ast.LShift",
   "ast.Load",
   "ast.Name",
   "ast.Pass",
   "ast.Try"
  ],
  "type": "function"
 },
 "macropy.experimental.pattern._vars_are_disjoint": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pattern.build_matcher": {
  "lineno": 264,
  "symbols_in_volume": [
   "ast.BinOp",
   "ast.BitAnd",
   "ast.BitOr",
   "ast.Call",
   "ast.List",
   "ast.Load",
   "ast.Name",
   "ast.NameConstant",
   "ast.Num",
   "ast.Str",
   "ast.Tuple",
   "ast.keyword"
  ],
  "type": "function"
 },
 "macropy.experimental.pattern.patterns": {
  "lineno": 429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pattern.switch": {
  "lineno": 412,
  "symbols_in_volume": [
   "ast.Assign",
   "ast.Name",
   "ast.Store"
  ],
  "type": "function"
 },
 "macropy.experimental.pinq": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "macropy.experimental.pinq._find_let_bindings": {
  "lineno": 116,
  "symbols_in_volume": [
   "ast.Call",
   "ast.DictComp",
   "ast.GeneratorExp",
   "ast.Lambda",
   "ast.ListComp",
   "ast.SetComp"
  ],
  "type": "function"
 },
 "macropy.experimental.pinq.expand_let_bindings": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pinq.fix_columns": {
  "lineno": 139,
  "symbols_in_volume": [
   "ast.Attribute",
   "ast.Load",
   "ast.Name"
  ],
  "type": "function"
 },
 "macropy.experimental.pinq.generate_schema": {
  "lineno": 104,
  "symbols_in_volume": [
   "sqlalchemy.MetaData"
  ],
  "type": "function"
 },
 "macropy.experimental.pinq.generate_schema.Db": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.experimental.pinq.process": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pinq.process.recurse": {
  "lineno": 39,
  "symbols_in_volume": [
   "ast.Compare",
   "ast.GeneratorExp",
   "ast.In",
   "ast.Load",
   "ast.Name",
   "ast.Tuple",
   "ast.arg",
   "sqlalchemy.select",
   "sqlalchemy.sql.Alias"
  ],
  "type": "function"
 },
 "macropy.experimental.pinq.query": {
  "lineno": 25,
  "symbols_in_volume": [
   "ast.arg",
   "ast.arguments"
  ],
  "type": "function"
 },
 "macropy.experimental.pinq.sql": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.pyxl_strings": {
  "lineno": null,
  "symbols_in_volume": [
   "macropy.core.macros.Macros",
   "pyxl.html",
   "pyxl.html.rawhtml"
  ],
  "type": "module"
 },
 "macropy.experimental.pyxl_strings.p": {
  "lineno": 18,
  "symbols_in_volume": [
   "ast.parse",
   "io.StringIO",
   "pyxl.codec.tokenizer.pyxl_tokenize",
   "tokenize.untokenize"
  ],
  "type": "function"
 },
 "macropy.experimental.tco": {
  "lineno": null,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "module"
 },
 "macropy.experimental.tco.tco": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.tco.tco.replace_tc_pos": {
  "lineno": 110,
  "symbols_in_volume": [
   "ast.Call",
   "ast.Dict",
   "ast.Expr",
   "ast.If",
   "ast.List",
   "ast.Load",
   "ast.Starred"
  ],
  "type": "function"
 },
 "macropy.experimental.tco.tco.return_replacer": {
  "lineno": 75,
  "symbols_in_volume": [
   "ast.Call",
   "ast.Dict",
   "ast.List",
   "ast.Load",
   "ast.Return",
   "ast.Starred"
  ],
  "type": "function"
 },
 "macropy.experimental.tco.trampoline": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.tco.trampoline_decorator": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.experimental.tco.trampoline_decorator.trampolined": {
  "lineno": 60,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "macropy.logging": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.DEBUG",
   "logging.basicConfig",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "macropy.peg": {
  "lineno": null,
  "symbols_in_volume": [
   "macropy.case_classes.macros"
  ],
  "type": "module"
 },
 "macropy.peg.Failure": {
  "lineno": 130,
  "symbols_in_volume": [
   "macropy.case_classes.case"
  ],
  "type": "class"
 },
 "macropy.peg.Failure.index": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Failure.msg": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Failure.trace": {
  "lineno": 143,
  "symbols_in_volume": [
   "macropy.quick_lambda.f",
   "macropy.quick_lambda.f.trace_name"
  ],
  "type": "function"
 },
 "macropy.peg.Input": {
  "lineno": 115,
  "symbols_in_volume": [
   "macropy.case_classes.case"
  ],
  "type": "class"
 },
 "macropy.peg.ParseError": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.peg.ParseError.__init__": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser": {
  "lineno": 180,
  "symbols_in_volume": [
   "macropy.case_classes.case"
  ],
  "type": "class"
 },
 "macropy.peg.Parser.And": {
  "lineno": 327,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.peg.Parser.And.__and__": {
  "lineno": 337,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.And.parse_input": {
  "lineno": 328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.And.short_str": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.Fail": {
  "lineno": 448,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.peg.Parser.Fail.parse_input": {
  "lineno": 449,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.Fail.short_str": {
  "lineno": 452,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.Full": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.peg.Parser.Full.parse_input": {
  "lineno": 250,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.Full.short_str": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.Named": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.peg.Parser.Named.parse_input": {
  "lineno": 433,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.Named.parser": {
  "lineno": 427,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.Named.short_str": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.Not": {
  "lineno": 342,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.peg.Parser.Not.parse_input": {
  "lineno": 343,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.Not.short_str": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.Or": {
  "lineno": 310,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.peg.Parser.Or.__or__": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.Or.parse_input": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.Or.short_str": {
  "lineno": 324,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.Raw": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.peg.Parser.Raw.parse_input": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.Raw.short_str": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.Regex": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.peg.Parser.Regex.parse_input": {
  "lineno": 270,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "macropy.peg.Parser.Regex.short_str": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.Rep": {
  "lineno": 352,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.peg.Parser.Rep.parse_input": {
  "lineno": 353,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "macropy.peg.Parser.RepN": {
  "lineno": 374,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.peg.Parser.RepN.parse_input": {
  "lineno": 375,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "macropy.peg.Parser.RepN.short_str": {
  "lineno": 395,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.Seq": {
  "lineno": 282,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.peg.Parser.Seq.parse_input": {
  "lineno": 283,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "macropy.peg.Parser.Seq.short_str": {
  "lineno": 307,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.Succeed": {
  "lineno": 444,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.peg.Parser.Succeed.parse_input": {
  "lineno": 445,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.Transform": {
  "lineno": 398,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.peg.Parser.Transform.parse_input": {
  "lineno": 399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.Transform.short_str": {
  "lineno": 408,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.TransformBound": {
  "lineno": 411,
  "symbols_in_volume": [],
  "type": "class"
 },
 "macropy.peg.Parser.TransformBound.parse_input": {
  "lineno": 412,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.TransformBound.short_str": {
  "lineno": 421,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.__and__": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.__floordiv__": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.__mul__": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.__neg__": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.__or__": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.__pow__": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.__rshift__": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.bind_to": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.join": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.opt": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.parse": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.parse_input": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.parse_partial": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.parse_string": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.r": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.rep": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.rep1": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.rep1_with": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.rep_with": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Parser.trace_name": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.Success": {
  "lineno": 120,
  "symbols_in_volume": [
   "macropy.case_classes.case"
  ],
  "type": "class"
 },
 "macropy.peg.cut": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.peg": {
  "lineno": 53,
  "symbols_in_volume": [
   "macropy.case_classes.macros.expr"
  ],
  "type": "function"
 },
 "macropy.peg.process": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.peg.process.PegWalker": {
  "lineno": 60,
  "symbols_in_volume": [
   "ast.BinOp",
   "ast.Compare",
   "ast.FloorDiv",
   "ast.Is",
   "ast.Name",
   "ast.RShift",
   "ast.Str",
   "ast.Tuple",
   "ast.arg",
   "macropy.core.hquotes.ast_literal",
   "macropy.core.hquotes.ast_literal.bind_to",
   "macropy.core.hquotes.hq",
   "macropy.core.hquotes.u",
   "macropy.quick_lambda.f"
  ],
  "type": "function"
 },
 "macropy.quick_lambda": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "macropy.quick_lambda._": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.quick_lambda.f": {
  "lineno": 20,
  "symbols_in_volume": [
   "ast.arg"
  ],
  "type": "function"
 },
 "macropy.quick_lambda.f.underscore_search": {
  "lineno": 24,
  "symbols_in_volume": [
   "ast.Name"
  ],
  "type": "function"
 },
 "macropy.quick_lambda.get_interned": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.quick_lambda.interned": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.quick_lambda.interned_count": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.quick_lambda.interned_name": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.quick_lambda.interned_processing": {
  "lineno": 64,
  "symbols_in_volume": [
   "ast.fix_missing_locations"
  ],
  "type": "function"
 },
 "macropy.quick_lambda.lazy": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.string_interp": {
  "lineno": null,
  "symbols_in_volume": [
   "macropy.core.hquotes.macros"
  ],
  "type": "module"
 },
 "macropy.string_interp.s": {
  "lineno": 13,
  "symbols_in_volume": [
   "macropy.core.hquotes.hq",
   "macropy.core.hquotes.macros.expr",
   "macropy.core.quotes.ast_list",
   "macropy.core.quotes.u",
   "re.split"
  ],
  "type": "function"
 },
 "macropy.tracing": {
  "lineno": null,
  "symbols_in_volume": [
   "macropy.core.hquotes.macros"
  ],
  "type": "module"
 },
 "macropy.tracing.literal_eval": {
  "lineno": 16,
  "symbols_in_volume": [
   "ast.Expression",
   "ast.parse"
  ],
  "type": "function"
 },
 "macropy.tracing.literal_eval._convert": {
  "lineno": 29,
  "symbols_in_volume": [
   "ast.Add",
   "ast.BinOp",
   "ast.Dict",
   "ast.List",
   "ast.Name",
   "ast.Num",
   "ast.Str",
   "ast.Sub",
   "ast.Tuple"
  ],
  "type": "function"
 },
 "macropy.tracing.log": {
  "lineno": 182,
  "symbols_in_volume": [
   "macropy.core.hquotes.macros.expose_unhygienic"
  ],
  "type": "function"
 },
 "macropy.tracing.require": {
  "lineno": 171,
  "symbols_in_volume": [
   "macropy.core.hquotes.macros.block"
  ],
  "type": "function"
 },
 "macropy.tracing.require_transform": {
  "lineno": 150,
  "symbols_in_volume": [
   "copy.deepcopy",
   "macropy.core.hquotes.hq",
   "macropy.core.quotes.ast_literal"
  ],
  "type": "function"
 },
 "macropy.tracing.show_expanded": {
  "lineno": 90,
  "symbols_in_volume": [
   "macropy.core.hquotes.hq",
   "macropy.core.hquotes.macros.block",
   "macropy.core.hquotes.unhygienic",
   "macropy.core.quotes.u"
  ],
  "type": "function"
 },
 "macropy.tracing.trace": {
  "lineno": 142,
  "symbols_in_volume": [
   "macropy.core.hquotes.macros.block"
  ],
  "type": "function"
 },
 "macropy.tracing.trace_walk_func": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.tracing.trace_walk_func.trace_walk": {
  "lineno": 105,
  "symbols_in_volume": [
   "ast.Name",
   "ast.expr",
   "ast.stmt",
   "macropy.core.hquotes.hq",
   "macropy.core.hquotes.unhygienic",
   "macropy.core.quotes.ast_literal",
   "macropy.core.quotes.u"
  ],
  "type": "function"
 },
 "macropy.tracing.wrap": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.tracing.wrap_require": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "macropy.tracing.wrap_simple": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 }
}