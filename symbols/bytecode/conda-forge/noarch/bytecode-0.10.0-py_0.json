{
 "bytecode": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bytecode.bytecode": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bytecode.bytecode.BaseBytecode": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bytecode.bytecode.BaseBytecode.__eq__": {
  "lineno": 38,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "function"
 },
 "bytecode.bytecode.BaseBytecode.__init__": {
  "lineno": 10,
  "symbols_in_volume": [
   "bytecode.CompilerFlags",
   "bytecode.instr.UNSET",
   "sys.version_info"
  ],
  "type": "function"
 },
 "bytecode.bytecode.BaseBytecode._copy_attr_from": {
  "lineno": 25,
  "symbols_in_volume": [
   "bytecode.argcount",
   "bytecode.cellvars",
   "bytecode.docstring",
   "bytecode.filename",
   "bytecode.first_lineno",
   "bytecode.flags",
   "bytecode.freevars",
   "bytecode.kwonlyargcount",
   "bytecode.name",
   "bytecode.posonlyargcount",
   "sys.version_info"
  ],
  "type": "function"
 },
 "bytecode.bytecode.BaseBytecode.flags": {
  "lineno": 72,
  "symbols_in_volume": [
   "bytecode.CompilerFlags"
  ],
  "type": "function"
 },
 "bytecode.bytecode.BaseBytecode.update_flags": {
  "lineno": 78,
  "symbols_in_volume": [
   "bytecode.flags.infer_flags"
  ],
  "type": "function"
 },
 "bytecode.bytecode.Bytecode": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bytecode.bytecode.Bytecode.__init__": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.bytecode.Bytecode.__iter__": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.bytecode.Bytecode._check_instr": {
  "lineno": 183,
  "symbols_in_volume": [
   "bytecode.ConcreteInstr",
   "bytecode.instr.Instr",
   "bytecode.instr.Label",
   "bytecode.instr.SetLineno"
  ],
  "type": "function"
 },
 "bytecode.bytecode.Bytecode._copy_attr_from": {
  "lineno": 191,
  "symbols_in_volume": [
   "bytecode",
   "bytecode.argnames"
  ],
  "type": "function"
 },
 "bytecode.bytecode.Bytecode.compute_stacksize": {
  "lineno": 201,
  "symbols_in_volume": [
   "bytecode.ControlFlowGraph.from_bytecode"
  ],
  "type": "function"
 },
 "bytecode.bytecode.Bytecode.from_code": {
  "lineno": 196,
  "symbols_in_volume": [
   "bytecode.ConcreteBytecode.from_code"
  ],
  "type": "function"
 },
 "bytecode.bytecode.Bytecode.to_code": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.bytecode.Bytecode.to_concrete_bytecode": {
  "lineno": 210,
  "symbols_in_volume": [
   "bytecode._ConvertBytecodeToConcrete"
  ],
  "type": "function"
 },
 "bytecode.bytecode._BaseBytecodeList": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bytecode.bytecode._BaseBytecodeList.__getitem__": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.bytecode._BaseBytecodeList.__iter__": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.bytecode._BaseBytecodeList._check_instr": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.bytecode._BaseBytecodeList.copy": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.bytecode._BaseBytecodeList.legalize": {
  "lineno": 99,
  "symbols_in_volume": [
   "bytecode.instr.Instr",
   "bytecode.instr.SetLineno"
  ],
  "type": "function"
 },
 "bytecode.bytecode._InstrList": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bytecode.bytecode._InstrList.__eq__": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.bytecode._InstrList._flat": {
  "lineno": 137,
  "symbols_in_volume": [
   "bytecode.ConcreteInstr",
   "bytecode.instr.Instr",
   "bytecode.instr.Label"
  ],
  "type": "function"
 },
 "bytecode.cfg": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bytecode.cfg.BasicBlock": {
  "lineno": 7,
  "symbols_in_volume": [
   "bytecode._InstrList"
  ],
  "type": "class"
 },
 "bytecode.cfg.BasicBlock.__getitem__": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.cfg.BasicBlock.__init__": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.cfg.BasicBlock.__iter__": {
  "lineno": 15,
  "symbols_in_volume": [
   "bytecode.concrete.ConcreteInstr",
   "bytecode.instr.Instr",
   "bytecode.instr.SetLineno"
  ],
  "type": "function"
 },
 "bytecode.cfg.BasicBlock.copy": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.cfg.BasicBlock.get_jump": {
  "lineno": 76,
  "symbols_in_volume": [
   "bytecode.instr.Instr"
  ],
  "type": "function"
 },
 "bytecode.cfg.BasicBlock.legalize": {
  "lineno": 51,
  "symbols_in_volume": [
   "bytecode.instr.SetLineno"
  ],
  "type": "function"
 },
 "bytecode.cfg.ControlFlowGraph": {
  "lineno": 129,
  "symbols_in_volume": [
   "bytecode.BaseBytecode"
  ],
  "type": "class"
 },
 "bytecode.cfg.ControlFlowGraph.__delitem__": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.cfg.ControlFlowGraph.__eq__": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.cfg.ControlFlowGraph.__getitem__": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.cfg.ControlFlowGraph.__init__": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.cfg.ControlFlowGraph.__iter__": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.cfg.ControlFlowGraph.__len__": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.cfg.ControlFlowGraph.__repr__": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.cfg.ControlFlowGraph._add_block": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.cfg.ControlFlowGraph.add_block": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.cfg.ControlFlowGraph.compute_stacksize": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.cfg.ControlFlowGraph.from_bytecode": {
  "lineno": 266,
  "symbols_in_volume": [
   "bytecode",
   "bytecode.ControlFlowGraph",
   "bytecode.argnames",
   "bytecode.concrete.ConcreteInstr",
   "bytecode.instr.Instr",
   "bytecode.instr.Label"
  ],
  "type": "function"
 },
 "bytecode.cfg.ControlFlowGraph.get_block_index": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.cfg.ControlFlowGraph.get_instructions": {
  "lineno": 176,
  "symbols_in_volume": [
   "bytecode.concrete.ConcreteInstr"
  ],
  "type": "function"
 },
 "bytecode.cfg.ControlFlowGraph.legalize": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.cfg.ControlFlowGraph.split_block": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.cfg.ControlFlowGraph.to_bytecode": {
  "lineno": 325,
  "symbols_in_volume": [
   "bytecode",
   "bytecode.Bytecode",
   "bytecode._copy_attr_from",
   "bytecode.argnames",
   "bytecode.concrete.ConcreteInstr",
   "bytecode.instr.Instr",
   "bytecode.instr.Label"
  ],
  "type": "function"
 },
 "bytecode.cfg.ControlFlowGraph.to_code": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.cfg._compute_stack_size": {
  "lineno": 89,
  "symbols_in_volume": [
   "bytecode.instr.SetLineno"
  ],
  "type": "function"
 },
 "bytecode.cfg._compute_stack_size.update_size": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.concrete": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "bytecode.concrete.ConcreteBytecode": {
  "lineno": 135,
  "symbols_in_volume": [
   "bytecode._BaseBytecodeList"
  ],
  "type": "class"
 },
 "bytecode.concrete.ConcreteBytecode.__eq__": {
  "lineno": 169,
  "symbols_in_volume": [
   "bytecode.instr.const_key"
  ],
  "type": "function"
 },
 "bytecode.concrete.ConcreteBytecode.__init__": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.concrete.ConcreteBytecode.__iter__": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.concrete.ConcreteBytecode.__repr__": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.concrete.ConcreteBytecode._assemble_code": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.concrete.ConcreteBytecode._assemble_lnotab": {
  "lineno": 286,
  "symbols_in_volume": [
   "struct.pack",
   "sys.version_info"
  ],
  "type": "function"
 },
 "bytecode.concrete.ConcreteBytecode._check_instr": {
  "lineno": 152,
  "symbols_in_volume": [
   "bytecode.instr.SetLineno"
  ],
  "type": "function"
 },
 "bytecode.concrete.ConcreteBytecode._copy_attr_from": {
  "lineno": 159,
  "symbols_in_volume": [
   "bytecode",
   "bytecode.consts",
   "bytecode.names",
   "bytecode.varnames"
  ],
  "type": "function"
 },
 "bytecode.concrete.ConcreteBytecode._normalize_lineno": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.concrete.ConcreteBytecode.compute_stacksize": {
  "lineno": 323,
  "symbols_in_volume": [
   "bytecode",
   "bytecode.ControlFlowGraph.from_bytecode"
  ],
  "type": "function"
 },
 "bytecode.concrete.ConcreteBytecode.from_code": {
  "lineno": 185,
  "symbols_in_volume": [
   "bytecode",
   "bytecode.argcount",
   "bytecode.cellvars",
   "bytecode.consts",
   "bytecode.filename",
   "bytecode.first_lineno",
   "bytecode.flags",
   "bytecode.freevars",
   "bytecode.kwonlyargcount",
   "bytecode.name",
   "bytecode.names",
   "bytecode.posonlyargcount",
   "bytecode.varnames",
   "dis.findlinestarts",
   "sys.version_info"
  ],
  "type": "function"
 },
 "bytecode.concrete.ConcreteBytecode.to_bytecode": {
  "lineno": 369,
  "symbols_in_volume": [
   "bytecode",
   "bytecode.Bytecode",
   "bytecode._copy_attr_from",
   "bytecode.argcount",
   "bytecode.argnames",
   "bytecode.extend",
   "bytecode.flags",
   "bytecode.instr.CellVar",
   "bytecode.instr.Compare",
   "bytecode.instr.FreeVar",
   "bytecode.instr.Instr",
   "bytecode.instr.Label",
   "bytecode.instr.SetLineno",
   "bytecode.kwonlyargcount",
   "bytecode.posonlyargcount",
   "inspect.CO_VARARGS",
   "inspect.CO_VARKEYWORDS",
   "opcode.hascompare",
   "opcode.hasconst",
   "opcode.hasfree",
   "opcode.haslocal",
   "opcode.hasname",
   "sys.version_info"
  ],
  "type": "function"
 },
 "bytecode.concrete.ConcreteBytecode.to_code": {
  "lineno": 328,
  "symbols_in_volume": [
   "sys.version_info",
   "types.CodeType"
  ],
  "type": "function"
 },
 "bytecode.concrete.ConcreteInstr": {
  "lineno": 25,
  "symbols_in_volume": [
   "bytecode.instr.Instr"
  ],
  "type": "class"
 },
 "bytecode.concrete.ConcreteInstr.__init__": {
  "lineno": 35,
  "symbols_in_volume": [
   "bytecode.instr.UNSET"
  ],
  "type": "function"
 },
 "bytecode.concrete.ConcreteInstr._check_arg": {
  "lineno": 42,
  "symbols_in_volume": [
   "bytecode.instr.UNSET",
   "bytecode.instr._check_arg_int",
   "opcode",
   "opcode.HAVE_ARGUMENT"
  ],
  "type": "function"
 },
 "bytecode.concrete.ConcreteInstr._cmp_key": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.concrete.ConcreteInstr._set": {
  "lineno": 52,
  "symbols_in_volume": [
   "bytecode.instr.UNSET"
  ],
  "type": "function"
 },
 "bytecode.concrete.ConcreteInstr.assemble": {
  "lineno": 103,
  "symbols_in_volume": [
   "bytecode.instr.UNSET",
   "opcode.EXTENDED_ARG",
   "struct.pack"
  ],
  "type": "function"
 },
 "bytecode.concrete.ConcreteInstr.disassemble": {
  "lineno": 121,
  "symbols_in_volume": [
   "bytecode.instr.UNSET",
   "opcode.HAVE_ARGUMENT",
   "opcode.opname"
  ],
  "type": "function"
 },
 "bytecode.concrete.ConcreteInstr.get_jump_target": {
  "lineno": 79,
  "symbols_in_volume": [
   "opcode.hasjabs",
   "opcode.hasjrel"
  ],
  "type": "function"
 },
 "bytecode.concrete.ConcreteInstr.size": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.concrete._ConvertBytecodeToConcrete": {
  "lineno": 449,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bytecode.concrete._ConvertBytecodeToConcrete.__init__": {
  "lineno": 455,
  "symbols_in_volume": [
   "bytecode.Bytecode"
  ],
  "type": "function"
 },
 "bytecode.concrete._ConvertBytecodeToConcrete.add": {
  "lineno": 479,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.concrete._ConvertBytecodeToConcrete.add_const": {
  "lineno": 470,
  "symbols_in_volume": [
   "bytecode.instr.const_key"
  ],
  "type": "function"
 },
 "bytecode.concrete._ConvertBytecodeToConcrete.compute_jumps": {
  "lineno": 537,
  "symbols_in_volume": [
   "opcode.hasjrel"
  ],
  "type": "function"
 },
 "bytecode.concrete._ConvertBytecodeToConcrete.concrete_instructions": {
  "lineno": 488,
  "symbols_in_volume": [
   "bytecode.instr.CellVar",
   "bytecode.instr.Compare",
   "bytecode.instr.FreeVar",
   "bytecode.instr.Instr",
   "bytecode.instr.Label",
   "bytecode.instr.SetLineno",
   "opcode.hascompare",
   "opcode.hasconst",
   "opcode.hasfree",
   "opcode.haslocal",
   "opcode.hasname"
  ],
  "type": "function"
 },
 "bytecode.concrete._ConvertBytecodeToConcrete.to_concrete_bytecode": {
  "lineno": 564,
  "symbols_in_volume": [
   "bytecode.instr.UNSET"
  ],
  "type": "function"
 },
 "bytecode.concrete._set_docstring": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.dump_bytecode": {
  "lineno": 17,
  "symbols_in_volume": [
   "bytecode.bytecode.Bytecode",
   "bytecode.cfg.ControlFlowGraph",
   "bytecode.concrete.ConcreteBytecode",
   "bytecode.instr.Label"
  ],
  "type": "function"
 },
 "bytecode.dump_bytecode.format_instr": {
  "lineno": 31,
  "symbols_in_volume": [
   "bytecode.cfg.BasicBlock",
   "bytecode.instr.Label",
   "bytecode.instr.UNSET"
  ],
  "type": "function"
 },
 "bytecode.dump_bytecode.format_line": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.flags": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bytecode.flags.CompilerFlags": {
  "lineno": 9,
  "symbols_in_volume": [
   "aenum.IntFlag"
  ],
  "type": "class"
 },
 "bytecode.flags.infer_flags": {
  "lineno": 33,
  "symbols_in_volume": [
   "bytecode",
   "bytecode.Bytecode",
   "bytecode.ConcreteBytecode",
   "bytecode.ControlFlowGraph",
   "bytecode.Label",
   "bytecode.SetLineno",
   "bytecode.flags",
   "bytecode.get_instructions"
  ],
  "type": "function"
 },
 "bytecode.instr": {
  "lineno": null,
  "symbols_in_volume": [
   "opcode.opmap",
   "sys.version_info"
  ],
  "type": "module"
 },
 "bytecode.instr.CellVar": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bytecode.instr.Compare": {
  "lineno": 10,
  "symbols_in_volume": [
   "enum.IntEnum",
   "enum.unique"
  ],
  "type": "class"
 },
 "bytecode.instr.FreeVar": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bytecode.instr.Instr": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bytecode.instr.Instr.__eq__": {
  "lineno": 293,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.instr.Instr.__init__": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.instr.Instr.__repr__": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.instr.Instr._check_arg": {
  "lineno": 139,
  "symbols_in_volume": [
   "bytecode.BasicBlock",
   "opcode",
   "opcode.HAVE_ARGUMENT",
   "opcode.hascompare",
   "opcode.hasconst",
   "opcode.hasfree",
   "opcode.haslocal",
   "opcode.hasname"
  ],
  "type": "function"
 },
 "bytecode.instr.Instr._cmp_key": {
  "lineno": 285,
  "symbols_in_volume": [
   "opcode.hasconst"
  ],
  "type": "function"
 },
 "bytecode.instr.Instr._has_jump": {
  "lineno": 298,
  "symbols_in_volume": [
   "opcode",
   "opcode.hasjabs",
   "opcode.hasjrel"
  ],
  "type": "function"
 },
 "bytecode.instr.Instr._set": {
  "lineno": 183,
  "symbols_in_volume": [
   "opcode",
   "opcode.opmap"
  ],
  "type": "function"
 },
 "bytecode.instr.Instr.arg": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.instr.Instr.copy": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.instr.Instr.has_jump": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.instr.Instr.is_cond_jump": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.instr.Instr.is_final": {
  "lineno": 315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.instr.Instr.is_uncond_jump": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.instr.Instr.lineno": {
  "lineno": 252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.instr.Instr.name": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.instr.Instr.opcode": {
  "lineno": 226,
  "symbols_in_volume": [
   "opcode.opname",
   "opcode.setter"
  ],
  "type": "function"
 },
 "bytecode.instr.Instr.require_arg": {
  "lineno": 210,
  "symbols_in_volume": [
   "opcode.HAVE_ARGUMENT"
  ],
  "type": "function"
 },
 "bytecode.instr.Instr.set": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.instr.Instr.stack_effect": {
  "lineno": 256,
  "symbols_in_volume": [
   "dis.stack_effect",
   "opcode.HAVE_ARGUMENT",
   "opcode.hasconst",
   "sys.version_info"
  ],
  "type": "function"
 },
 "bytecode.instr.Label": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bytecode.instr.SetLineno": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bytecode.instr.SetLineno.__eq__": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.instr.SetLineno.__init__": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.instr.SetLineno.lineno": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.instr._Variable": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bytecode.instr._Variable.__eq__": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.instr._Variable.__init__": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.instr._Variable.__repr__": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.instr._Variable.__str__": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.instr._check_arg_int": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.instr._check_lineno": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.instr.const_key": {
  "lineno": 28,
  "symbols_in_volume": [
   "marshal.dumps"
  ],
  "type": "function"
 },
 "bytecode.peephole_opt": {
  "lineno": null,
  "symbols_in_volume": [
   "bytecode.Compare.IN",
   "bytecode.Compare.IS",
   "bytecode.Compare.IS_NOT",
   "bytecode.Compare.NOT_IN"
  ],
  "type": "module"
 },
 "bytecode.peephole_opt.CodeTransformer": {
  "lineno": 483,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bytecode.peephole_opt.CodeTransformer.code_transformer": {
  "lineno": 486,
  "symbols_in_volume": [
   "sys.flags.verbose"
  ],
  "type": "function"
 },
 "bytecode.peephole_opt.ExitUnchanged": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bytecode.peephole_opt.PeepholeOptimizer": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.__init__": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.binop": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.build_tuple": {
  "lineno": 236,
  "symbols_in_volume": [
   "bytecode.Compare.IN",
   "bytecode.Compare.NOT_IN"
  ],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.build_tuple_unpack_seq": {
  "lineno": 195,
  "symbols_in_volume": [
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.check_result": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.eval_BINARY_ADD": {
  "lineno": 151,
  "symbols_in_volume": [
   "operator.add"
  ],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.eval_BINARY_AND": {
  "lineno": 178,
  "symbols_in_volume": [
   "operator.and_"
  ],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.eval_BINARY_FLOOR_DIVIDE": {
  "lineno": 163,
  "symbols_in_volume": [
   "operator.floordiv"
  ],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.eval_BINARY_LSHIFT": {
  "lineno": 172,
  "symbols_in_volume": [
   "operator.lshift"
  ],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.eval_BINARY_MODULO": {
  "lineno": 166,
  "symbols_in_volume": [
   "operator.mod"
  ],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.eval_BINARY_MULTIPLY": {
  "lineno": 157,
  "symbols_in_volume": [
   "operator.mul"
  ],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.eval_BINARY_OR": {
  "lineno": 181,
  "symbols_in_volume": [
   "operator.or_"
  ],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.eval_BINARY_POWER": {
  "lineno": 169,
  "symbols_in_volume": [
   "operator.pow"
  ],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.eval_BINARY_RSHIFT": {
  "lineno": 175,
  "symbols_in_volume": [
   "operator.rshift"
  ],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.eval_BINARY_SUBSCR": {
  "lineno": 187,
  "symbols_in_volume": [
   "operator.getitem"
  ],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.eval_BINARY_SUBTRACT": {
  "lineno": 154,
  "symbols_in_volume": [
   "operator.sub"
  ],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.eval_BINARY_TRUE_DIVIDE": {
  "lineno": 160,
  "symbols_in_volume": [
   "operator.truediv"
  ],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.eval_BINARY_XOR": {
  "lineno": 184,
  "symbols_in_volume": [
   "operator.xor"
  ],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.eval_BUILD_LIST": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.eval_BUILD_SET": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.eval_BUILD_TUPLE": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.eval_COMPARE_OP": {
  "lineno": 272,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.eval_JUMP_IF_FALSE_OR_POP": {
  "lineno": 343,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.eval_JUMP_IF_TRUE_OR_POP": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.eval_LOAD_CONST": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.eval_NOP": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.eval_UNARY_INVERT": {
  "lineno": 111,
  "symbols_in_volume": [
   "operator.invert"
  ],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.eval_UNARY_NEGATIVE": {
  "lineno": 108,
  "symbols_in_volume": [
   "operator.neg"
  ],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.eval_UNARY_NOT": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.eval_UNARY_POSITIVE": {
  "lineno": 105,
  "symbols_in_volume": [
   "operator.pos"
  ],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.get_next_instr": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.iterblock": {
  "lineno": 407,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.jump_if_or_pop": {
  "lineno": 290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.optimize": {
  "lineno": 471,
  "symbols_in_volume": [
   "bytecode.Bytecode.from_code",
   "bytecode.ControlFlowGraph.from_bytecode"
  ],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.optimize_block": {
  "lineno": 415,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.optimize_cfg": {
  "lineno": 459,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.optimize_jump": {
  "lineno": 391,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.optimize_jump_to_cond_jump": {
  "lineno": 354,
  "symbols_in_volume": [
   "bytecode.BasicBlock",
   "opcode.hasjrel"
  ],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.remove_dead_blocks": {
  "lineno": 436,
  "symbols_in_volume": [
   "bytecode.BasicBlock",
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.replace_container_of_consts": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.replace_load_const": {
  "lineno": 71,
  "symbols_in_volume": [
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.peephole_opt.PeepholeOptimizer.unaryop": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "bytecode.tests.TestCase": {
  "lineno": 136,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "bytecode.tests.TestCase.assertBlocksEqual": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests._format_instr_list": {
  "lineno": 12,
  "symbols_in_volume": [
   "bytecode.BasicBlock",
   "bytecode.ConcreteInstr",
   "bytecode.Label",
   "bytecode.UNSET"
  ],
  "type": "function"
 },
 "bytecode.tests.disassemble": {
  "lineno": 131,
  "symbols_in_volume": [
   "bytecode.Bytecode.from_code"
  ],
  "type": "function"
 },
 "bytecode.tests.dump_bytecode": {
  "lineno": 45,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.ConcreteBytecode",
   "bytecode.ControlFlowGraph",
   "bytecode.Label",
   "sys.version_info"
  ],
  "type": "function"
 },
 "bytecode.tests.get_code": {
  "lineno": 119,
  "symbols_in_volume": [
   "textwrap.dedent",
   "types.CodeType"
  ],
  "type": "function"
 },
 "bytecode.tests.test_bytecode": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "bytecode.tests.test_bytecode.BytecodeTests": {
  "lineno": 8,
  "symbols_in_volume": [
   "bytecode.tests.TestCase"
  ],
  "type": "class"
 },
 "bytecode.tests.test_bytecode.BytecodeTests.test_constructor": {
  "lineno": 11,
  "symbols_in_volume": [
   "bytecode.Bytecode"
  ],
  "type": "function"
 },
 "bytecode.tests.test_bytecode.BytecodeTests.test_copy": {
  "lineno": 68,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Instr",
   "bytecode.SetLineno"
  ],
  "type": "function"
 },
 "bytecode.tests.test_bytecode.BytecodeTests.test_from_code": {
  "lineno": 88,
  "symbols_in_volume": [
   "bytecode.Bytecode.from_code",
   "bytecode.Instr",
   "bytecode.Label",
   "bytecode.tests.get_code"
  ],
  "type": "function"
 },
 "bytecode.tests.test_bytecode.BytecodeTests.test_from_code_freevars": {
  "lineno": 111,
  "symbols_in_volume": [
   "bytecode.Bytecode.from_code",
   "bytecode.FreeVar",
   "bytecode.Instr",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "bytecode.tests.test_bytecode.BytecodeTests.test_from_code_load_fast": {
  "lineno": 129,
  "symbols_in_volume": [
   "bytecode.Bytecode.from_code",
   "bytecode.Instr",
   "bytecode.tests.get_code"
  ],
  "type": "function"
 },
 "bytecode.tests.test_bytecode.BytecodeTests.test_invalid_types": {
  "lineno": 18,
  "symbols_in_volume": [
   "bytecode.Bytecode"
  ],
  "type": "function"
 },
 "bytecode.tests.test_bytecode.BytecodeTests.test_legalize": {
  "lineno": 28,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Instr",
   "bytecode.Label",
   "bytecode.SetLineno"
  ],
  "type": "function"
 },
 "bytecode.tests.test_bytecode.BytecodeTests.test_setlineno": {
  "lineno": 144,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.ConcreteInstr",
   "bytecode.Instr",
   "bytecode.SetLineno"
  ],
  "type": "function"
 },
 "bytecode.tests.test_bytecode.BytecodeTests.test_slice": {
  "lineno": 49,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Instr",
   "bytecode.SetLineno"
  ],
  "type": "function"
 },
 "bytecode.tests.test_bytecode.BytecodeTests.test_to_code": {
  "lineno": 169,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_cfg": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "bytecode.tests.test_cfg.BlockTests": {
  "lineno": 29,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "bytecode.tests.test_cfg.BlockTests.test_copy": {
  "lineno": 66,
  "symbols_in_volume": [
   "bytecode.BasicBlock",
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_cfg.BlockTests.test_iter_invalid_types": {
  "lineno": 31,
  "symbols_in_volume": [
   "bytecode.BasicBlock",
   "bytecode.Instr",
   "bytecode.Label"
  ],
  "type": "function"
 },
 "bytecode.tests.test_cfg.BlockTests.test_slice": {
  "lineno": 59,
  "symbols_in_volume": [
   "bytecode.BasicBlock",
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_cfg.BytecodeBlocksFunctionalTests": {
  "lineno": 372,
  "symbols_in_volume": [
   "bytecode.tests.TestCase"
  ],
  "type": "class"
 },
 "bytecode.tests.test_cfg.BytecodeBlocksFunctionalTests.check_getitem": {
  "lineno": 382,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_cfg.BytecodeBlocksFunctionalTests.sample_code": {
  "lineno": 389,
  "symbols_in_volume": [
   "bytecode.Instr",
   "bytecode.tests.disassemble"
  ],
  "type": "function"
 },
 "bytecode.tests.test_cfg.BytecodeBlocksFunctionalTests.test_eq": {
  "lineno": 374,
  "symbols_in_volume": [
   "bytecode.tests.disassemble"
  ],
  "type": "function"
 },
 "bytecode.tests.test_cfg.BytecodeBlocksFunctionalTests.test_get_block_index": {
  "lineno": 521,
  "symbols_in_volume": [
   "bytecode.BasicBlock",
   "bytecode.ControlFlowGraph"
  ],
  "type": "function"
 },
 "bytecode.tests.test_cfg.BytecodeBlocksFunctionalTests.test_split_block": {
  "lineno": 396,
  "symbols_in_volume": [
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_cfg.BytecodeBlocksFunctionalTests.test_split_block_dont_split": {
  "lineno": 437,
  "symbols_in_volume": [
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_cfg.BytecodeBlocksFunctionalTests.test_split_block_end": {
  "lineno": 416,
  "symbols_in_volume": [
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_cfg.BytecodeBlocksFunctionalTests.test_split_block_error": {
  "lineno": 447,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_cfg.BytecodeBlocksFunctionalTests.test_to_code": {
  "lineno": 454,
  "symbols_in_volume": [
   "bytecode.ControlFlowGraph",
   "bytecode.Instr",
   "bytecode.tests.WORDCODE",
   "sys.version_info"
  ],
  "type": "function"
 },
 "bytecode.tests.test_cfg.BytecodeBlocksTests": {
  "lineno": 74,
  "symbols_in_volume": [
   "bytecode.tests.TestCase"
  ],
  "type": "class"
 },
 "bytecode.tests.test_cfg.BytecodeBlocksTests.test_add_del_block": {
  "lineno": 112,
  "symbols_in_volume": [
   "bytecode.ControlFlowGraph",
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_cfg.BytecodeBlocksTests.test_attr": {
  "lineno": 84,
  "symbols_in_volume": [
   "bytecode.tests.disassemble",
   "sys.version_info"
  ],
  "type": "function"
 },
 "bytecode.tests.test_cfg.BytecodeBlocksTests.test_constructor": {
  "lineno": 77,
  "symbols_in_volume": [
   "bytecode.ControlFlowGraph"
  ],
  "type": "function"
 },
 "bytecode.tests.test_cfg.BytecodeBlocksTests.test_from_bytecode": {
  "lineno": 231,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.ControlFlowGraph.from_bytecode",
   "bytecode.Instr",
   "bytecode.Label"
  ],
  "type": "function"
 },
 "bytecode.tests.test_cfg.BytecodeBlocksTests.test_from_bytecode_loop": {
  "lineno": 262,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Compare.EQ",
   "bytecode.ControlFlowGraph.from_bytecode",
   "bytecode.Instr",
   "bytecode.Label",
   "sys.version_info"
  ],
  "type": "function"
 },
 "bytecode.tests.test_cfg.BytecodeBlocksTests.test_label_at_the_end": {
  "lineno": 213,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.ControlFlowGraph.from_bytecode",
   "bytecode.Instr",
   "bytecode.Label"
  ],
  "type": "function"
 },
 "bytecode.tests.test_cfg.BytecodeBlocksTests.test_legalize": {
  "lineno": 158,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.ControlFlowGraph.from_bytecode",
   "bytecode.Instr",
   "bytecode.SetLineno"
  ],
  "type": "function"
 },
 "bytecode.tests.test_cfg.BytecodeBlocksTests.test_setlineno": {
  "lineno": 132,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.ControlFlowGraph.from_bytecode",
   "bytecode.Instr",
   "bytecode.SetLineno"
  ],
  "type": "function"
 },
 "bytecode.tests.test_cfg.BytecodeBlocksTests.test_to_bytecode": {
  "lineno": 179,
  "symbols_in_volume": [
   "bytecode.ControlFlowGraph",
   "bytecode.Instr",
   "bytecode.Label"
  ],
  "type": "function"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests": {
  "lineno": 534,
  "symbols_in_volume": [
   "bytecode.tests.TestCase"
  ],
  "type": "class"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests.check_stack_size": {
  "lineno": 536,
  "symbols_in_volume": [
   "bytecode.Bytecode.from_code",
   "bytecode.ControlFlowGraph.from_bytecode"
  ],
  "type": "function"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests.test_empty_code": {
  "lineno": 542,
  "symbols_in_volume": [
   "bytecode.ControlFlowGraph"
  ],
  "type": "function"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests.test_handling_of_extended_arg": {
  "lineno": 558,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests.test_handling_of_set_lineno": {
  "lineno": 545,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Instr",
   "bytecode.SetLineno"
  ],
  "type": "function"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests.test_invalid_stacksize": {
  "lineno": 568,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests.test_stack_size_computation_and": {
  "lineno": 574,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests.test_stack_size_computation_and.test": {
  "lineno": 575,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests.test_stack_size_computation_for_loop_continue": {
  "lineno": 597,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests.test_stack_size_computation_for_loop_continue.test": {
  "lineno": 598,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests.test_stack_size_computation_if_else": {
  "lineno": 586,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests.test_stack_size_computation_if_else.test": {
  "lineno": 587,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests.test_stack_size_computation_nested_try_except_else_finally": {
  "lineno": 683,
  "symbols_in_volume": [
   "bytecode.Bytecode.from_code",
   "contextlib.redirect_stdout",
   "io.StringIO"
  ],
  "type": "function"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests.test_stack_size_computation_nested_try_except_else_finally.test": {
  "lineno": 684,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests.test_stack_size_computation_nested_try_except_finally": {
  "lineno": 664,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests.test_stack_size_computation_nested_try_except_finally.test": {
  "lineno": 665,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests.test_stack_size_computation_or": {
  "lineno": 580,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests.test_stack_size_computation_or.test": {
  "lineno": 581,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests.test_stack_size_computation_try_except": {
  "lineno": 622,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests.test_stack_size_computation_try_except.test": {
  "lineno": 623,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests.test_stack_size_computation_try_except_else_finally": {
  "lineno": 651,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests.test_stack_size_computation_try_except_else_finally.test": {
  "lineno": 652,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests.test_stack_size_computation_try_except_finally": {
  "lineno": 640,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests.test_stack_size_computation_try_except_finally.test": {
  "lineno": 641,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests.test_stack_size_computation_try_finally": {
  "lineno": 631,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests.test_stack_size_computation_try_finally.test": {
  "lineno": 632,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests.test_stack_size_computation_while_loop_break": {
  "lineno": 607,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests.test_stack_size_computation_while_loop_break.test": {
  "lineno": 608,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests.test_stack_size_computation_with": {
  "lineno": 615,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests.test_stack_size_computation_with.test": {
  "lineno": 616,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests.test_stack_size_with_dead_code": {
  "lineno": 720,
  "symbols_in_volume": [
   "bytecode.Bytecode.from_code"
  ],
  "type": "function"
 },
 "bytecode.tests.test_cfg.CFGStacksizeComputationTests.test_stack_size_with_dead_code.test": {
  "lineno": 722,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_cfg.disassemble": {
  "lineno": 11,
  "symbols_in_volume": [
   "bytecode.ControlFlowGraph.from_bytecode",
   "bytecode.tests.disassemble"
  ],
  "type": "function"
 },
 "bytecode.tests.test_code": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "bytecode.tests.test_code.CodeTests": {
  "lineno": 7,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "bytecode.tests.test_code.CodeTests.check": {
  "lineno": 10,
  "symbols_in_volume": [
   "bytecode.Bytecode.from_code",
   "bytecode.ConcreteBytecode.from_code",
   "bytecode.ControlFlowGraph.from_bytecode",
   "bytecode.tests.get_code"
  ],
  "type": "function"
 },
 "bytecode.tests.test_code.CodeTests.test_kwargs": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_code.CodeTests.test_kwonlyargs": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_code.CodeTests.test_loop": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_code.CodeTests.test_varargs": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_concrete": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "bytecode.tests.test_concrete.BytecodeToConcreteTests": {
  "lineno": 534,
  "symbols_in_volume": [
   "bytecode.tests.TestCase"
  ],
  "type": "class"
 },
 "bytecode.tests.test_concrete.BytecodeToConcreteTests.test_cellvars": {
  "lineno": 754,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.CellVar",
   "bytecode.ConcreteInstr",
   "bytecode.FreeVar",
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.BytecodeToConcreteTests.test_compute_jumps_convergence": {
  "lineno": 766,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Instr",
   "bytecode.Label",
   "bytecode.tests.WORDCODE"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.BytecodeToConcreteTests.test_dont_merge_constants": {
  "lineno": 738,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.ConcreteInstr",
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.BytecodeToConcreteTests.test_extended_jump": {
  "lineno": 670,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Instr",
   "bytecode.Label",
   "bytecode.tests.WORDCODE",
   "opcode.opmap"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.BytecodeToConcreteTests.test_extended_jump.BigInstr": {
  "lineno": 673,
  "symbols_in_volume": [
   "bytecode.ConcreteInstr"
  ],
  "type": "class"
 },
 "bytecode.tests.test_concrete.BytecodeToConcreteTests.test_extended_jump.BigInstr.__init__": {
  "lineno": 675,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_concrete.BytecodeToConcreteTests.test_extended_jump.BigInstr.assemble": {
  "lineno": 682,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_concrete.BytecodeToConcreteTests.test_extended_jump.BigInstr.copy": {
  "lineno": 679,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_concrete.BytecodeToConcreteTests.test_extreme_compute_jumps_convergence": {
  "lineno": 814,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Instr",
   "bytecode.Label",
   "bytecode.tests.WORDCODE"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.BytecodeToConcreteTests.test_general_constants": {
  "lineno": 873,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.BytecodeToConcreteTests.test_general_constants.CustomObject": {
  "lineno": 877,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bytecode.tests.test_concrete.BytecodeToConcreteTests.test_general_constants.UnHashableCustomObject": {
  "lineno": 880,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bytecode.tests.test_concrete.BytecodeToConcreteTests.test_general_constants.f": {
  "lineno": 896,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_concrete.BytecodeToConcreteTests.test_jumps": {
  "lineno": 701,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.ConcreteInstr",
   "bytecode.Instr",
   "bytecode.Label",
   "bytecode.tests.WORDCODE"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.BytecodeToConcreteTests.test_label": {
  "lineno": 536,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.ConcreteInstr",
   "bytecode.Instr",
   "bytecode.Label"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.BytecodeToConcreteTests.test_label2": {
  "lineno": 551,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.ConcreteInstr",
   "bytecode.Instr",
   "bytecode.Label",
   "bytecode.tests.WORDCODE"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.BytecodeToConcreteTests.test_label3": {
  "lineno": 582,
  "symbols_in_volume": [
   "bytecode.Bytecode.from_code",
   "bytecode.ConcreteBytecode",
   "bytecode.ConcreteBytecode.from_code",
   "bytecode.tests.get_code",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.BytecodeToConcreteTests.test_setlineno": {
  "lineno": 644,
  "symbols_in_volume": [
   "bytecode.ConcreteBytecode",
   "bytecode.ConcreteInstr",
   "bytecode.Instr",
   "bytecode.SetLineno"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.ConcreteBytecodeTests": {
  "lineno": 163,
  "symbols_in_volume": [
   "bytecode.tests.TestCase"
  ],
  "type": "class"
 },
 "bytecode.tests.test_concrete.ConcreteBytecodeTests.test_attr": {
  "lineno": 165,
  "symbols_in_volume": [
   "bytecode.ConcreteBytecode.from_code",
   "bytecode.ConcreteInstr",
   "bytecode.tests.get_code"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.ConcreteBytecodeTests.test_cellvar": {
  "lineno": 279,
  "symbols_in_volume": [
   "bytecode.CellVar",
   "bytecode.ConcreteBytecode",
   "bytecode.ConcreteBytecode.from_code",
   "bytecode.ConcreteInstr",
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.ConcreteBytecodeTests.test_cellvar_freevar": {
  "lineno": 313,
  "symbols_in_volume": [
   "bytecode.CellVar",
   "bytecode.ConcreteBytecode",
   "bytecode.ConcreteBytecode.from_code",
   "bytecode.ConcreteInstr",
   "bytecode.FreeVar",
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.ConcreteBytecodeTests.test_copy": {
  "lineno": 420,
  "symbols_in_volume": [
   "bytecode.ConcreteBytecode",
   "bytecode.ConcreteInstr",
   "bytecode.SetLineno"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.ConcreteBytecodeTests.test_explicit_stacksize": {
  "lineno": 364,
  "symbols_in_volume": [
   "bytecode.ConcreteBytecode.from_code",
   "bytecode.tests.get_code"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.ConcreteBytecodeTests.test_freevar": {
  "lineno": 296,
  "symbols_in_volume": [
   "bytecode.ConcreteBytecode",
   "bytecode.ConcreteBytecode.from_code",
   "bytecode.ConcreteInstr",
   "bytecode.FreeVar",
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.ConcreteBytecodeTests.test_invalid_types": {
  "lineno": 179,
  "symbols_in_volume": [
   "bytecode.ConcreteBytecode",
   "bytecode.Label"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.ConcreteBytecodeTests.test_legalize": {
  "lineno": 384,
  "symbols_in_volume": [
   "bytecode.ConcreteBytecode",
   "bytecode.ConcreteInstr",
   "bytecode.SetLineno"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.ConcreteBytecodeTests.test_load_classderef": {
  "lineno": 334,
  "symbols_in_volume": [
   "bytecode.ConcreteBytecode",
   "bytecode.ConcreteInstr",
   "bytecode.FreeVar",
   "bytecode.Instr",
   "bytecode.tests.WORDCODE"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.ConcreteBytecodeTests.test_negative_lnotab": {
  "lineno": 222,
  "symbols_in_volume": [
   "bytecode.ConcreteBytecode",
   "bytecode.ConcreteInstr",
   "bytecode.SetLineno",
   "sys.version_info"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.ConcreteBytecodeTests.test_slice": {
  "lineno": 405,
  "symbols_in_volume": [
   "bytecode.ConcreteBytecode",
   "bytecode.ConcreteInstr",
   "bytecode.SetLineno"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.ConcreteBytecodeTests.test_to_bytecode_consts": {
  "lineno": 250,
  "symbols_in_volume": [
   "bytecode.ConcreteBytecode",
   "bytecode.ConcreteInstr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.ConcreteBytecodeTests.test_to_code_lnotab": {
  "lineno": 189,
  "symbols_in_volume": [
   "bytecode.ConcreteBytecode",
   "bytecode.ConcreteInstr",
   "bytecode.SetLineno",
   "bytecode.tests.WORDCODE"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.ConcreteFromCodeTests": {
  "lineno": 436,
  "symbols_in_volume": [
   "bytecode.tests.TestCase"
  ],
  "type": "class"
 },
 "bytecode.tests.test_concrete.ConcreteFromCodeTests.test_extended_arg": {
  "lineno": 438,
  "symbols_in_volume": [
   "bytecode.ConcreteBytecode.from_code",
   "bytecode.ConcreteInstr",
   "bytecode.tests.WORDCODE",
   "bytecode.tests.get_code",
   "sys.version_info",
   "types.CodeType"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.ConcreteFromCodeTests.test_extended_arg_make_function": {
  "lineno": 481,
  "symbols_in_volume": [
   "bytecode.ConcreteBytecode.from_code",
   "bytecode.ConcreteInstr",
   "bytecode.tests.WORDCODE",
   "bytecode.tests.get_code"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.ConcreteInstrTests": {
  "lineno": 13,
  "symbols_in_volume": [
   "bytecode.tests.TestCase"
  ],
  "type": "class"
 },
 "bytecode.tests.test_concrete.ConcreteInstrTests.test_assemble": {
  "lineno": 136,
  "symbols_in_volume": [
   "bytecode.ConcreteInstr",
   "bytecode.tests.WORDCODE"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.ConcreteInstrTests.test_attr": {
  "lineno": 46,
  "symbols_in_volume": [
   "bytecode.ConcreteInstr",
   "bytecode.tests.WORDCODE"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.ConcreteInstrTests.test_constructor": {
  "lineno": 15,
  "symbols_in_volume": [
   "bytecode.ConcreteInstr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.ConcreteInstrTests.test_disassemble": {
  "lineno": 120,
  "symbols_in_volume": [
   "bytecode.ConcreteInstr",
   "bytecode.ConcreteInstr.disassemble",
   "bytecode.tests.WORDCODE"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.ConcreteInstrTests.test_get_jump_target": {
  "lineno": 154,
  "symbols_in_volume": [
   "bytecode.ConcreteInstr",
   "bytecode.tests.WORDCODE"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.ConcreteInstrTests.test_set": {
  "lineno": 54,
  "symbols_in_volume": [
   "bytecode.ConcreteInstr",
   "bytecode.UNSET"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.ConcreteInstrTests.test_set_attr": {
  "lineno": 73,
  "symbols_in_volume": [
   "bytecode.ConcreteInstr",
   "bytecode.tests.WORDCODE"
  ],
  "type": "function"
 },
 "bytecode.tests.test_concrete.ConcreteInstrTests.test_size": {
  "lineno": 113,
  "symbols_in_volume": [
   "bytecode.ConcreteInstr",
   "bytecode.tests.WORDCODE"
  ],
  "type": "function"
 },
 "bytecode.tests.test_flags": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bytecode.tests.test_flags.FlagsTests": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "bytecode.tests.test_flags.FlagsTests.test_flag_inference": {
  "lineno": 10,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.CompilerFlags",
   "bytecode.CompilerFlags.ASYNC_GENERATOR",
   "bytecode.CompilerFlags.COROUTINE",
   "bytecode.CompilerFlags.FUTURE_GENERATOR_STOP",
   "bytecode.CompilerFlags.GENERATOR",
   "bytecode.CompilerFlags.ITERABLE_COROUTINE",
   "bytecode.CompilerFlags.NESTED",
   "bytecode.CompilerFlags.NEWLOCALS",
   "bytecode.CompilerFlags.NOFREE",
   "bytecode.CompilerFlags.OPTIMIZED",
   "bytecode.CompilerFlags.VARARGS",
   "bytecode.CompilerFlags.VARKEYWORDS",
   "bytecode.ConcreteBytecode",
   "bytecode.ConcreteInstr",
   "bytecode.ControlFlowGraph",
   "bytecode.flags.infer_flags"
  ],
  "type": "function"
 },
 "bytecode.tests.test_instr": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "bytecode.tests.test_instr.InstrTests": {
  "lineno": 8,
  "symbols_in_volume": [
   "bytecode.tests.TestCase"
  ],
  "type": "class"
 },
 "bytecode.tests.test_instr.InstrTests.test_attr": {
  "lineno": 67,
  "symbols_in_volume": [
   "bytecode.Instr",
   "bytecode.UNSET"
  ],
  "type": "function"
 },
 "bytecode.tests.test_instr.InstrTests.test_code_object_containing_mutable_data": {
  "lineno": 237,
  "symbols_in_volume": [
   "bytecode.Bytecode.from_code",
   "bytecode.Instr",
   "types.CodeType"
  ],
  "type": "function"
 },
 "bytecode.tests.test_instr.InstrTests.test_code_object_containing_mutable_data.f": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_instr.InstrTests.test_code_object_containing_mutable_data.f.g": {
  "lineno": 242,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_instr.InstrTests.test_compare": {
  "lineno": 107,
  "symbols_in_volume": [
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_instr.InstrTests.test_const_key_equal": {
  "lineno": 162,
  "symbols_in_volume": [
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_instr.InstrTests.test_const_key_not_equal": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_instr.InstrTests.test_const_key_not_equal.check": {
  "lineno": 144,
  "symbols_in_volume": [
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_instr.InstrTests.test_const_key_not_equal.func": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_instr.InstrTests.test_constructor": {
  "lineno": 10,
  "symbols_in_volume": [
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_instr.InstrTests.test_extended_arg": {
  "lineno": 98,
  "symbols_in_volume": [
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_instr.InstrTests.test_has_jump": {
  "lineno": 119,
  "symbols_in_volume": [
   "bytecode.Instr",
   "bytecode.Label"
  ],
  "type": "function"
 },
 "bytecode.tests.test_instr.InstrTests.test_invalid_arg": {
  "lineno": 23,
  "symbols_in_volume": [
   "bytecode.BasicBlock",
   "bytecode.CellVar",
   "bytecode.FreeVar",
   "bytecode.Instr",
   "bytecode.Label"
  ],
  "type": "function"
 },
 "bytecode.tests.test_instr.InstrTests.test_is_cond_jump": {
  "lineno": 127,
  "symbols_in_volume": [
   "bytecode.Instr",
   "bytecode.Label"
  ],
  "type": "function"
 },
 "bytecode.tests.test_instr.InstrTests.test_is_uncond_jump": {
  "lineno": 135,
  "symbols_in_volume": [
   "bytecode.Instr",
   "bytecode.Label"
  ],
  "type": "function"
 },
 "bytecode.tests.test_instr.InstrTests.test_modify_op": {
  "lineno": 91,
  "symbols_in_volume": [
   "bytecode.Instr",
   "opcode.opmap"
  ],
  "type": "function"
 },
 "bytecode.tests.test_instr.InstrTests.test_slots": {
  "lineno": 102,
  "symbols_in_volume": [
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_instr.InstrTests.test_stack_effects": {
  "lineno": 194,
  "symbols_in_volume": [
   "bytecode.Instr",
   "bytecode.concrete.ConcreteInstr",
   "opcode.HAVE_ARGUMENT",
   "opcode.opmap.items"
  ],
  "type": "function"
 },
 "bytecode.tests.test_instr.InstrTests.test_stack_effects.check": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_misc": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "bytecode.tests.test_misc.DumpCodeTests": {
  "lineno": 12,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "bytecode.tests.test_misc.DumpCodeTests.check_dump_bytecode": {
  "lineno": 15,
  "symbols_in_volume": [
   "bytecode.dump_bytecode",
   "contextlib.redirect_stdout",
   "io.StringIO"
  ],
  "type": "function"
 },
 "bytecode.tests.test_misc.DumpCodeTests.test_blocks_broken_jump": {
  "lineno": 91,
  "symbols_in_volume": [
   "bytecode.BasicBlock",
   "bytecode.ControlFlowGraph",
   "bytecode.Instr",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "bytecode.tests.test_misc.DumpCodeTests.test_bytecode": {
  "lineno": 25,
  "symbols_in_volume": [
   "bytecode.tests.disassemble"
  ],
  "type": "function"
 },
 "bytecode.tests.test_misc.DumpCodeTests.test_bytecode_blocks": {
  "lineno": 103,
  "symbols_in_volume": [
   "bytecode.ControlFlowGraph.from_bytecode",
   "bytecode.tests.disassemble",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "bytecode.tests.test_misc.DumpCodeTests.test_bytecode_broken_label": {
  "lineno": 84,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Instr",
   "bytecode.Label"
  ],
  "type": "function"
 },
 "bytecode.tests.test_misc.DumpCodeTests.test_concrete_bytecode": {
  "lineno": 177,
  "symbols_in_volume": [
   "bytecode.tests.WORDCODE",
   "bytecode.tests.disassemble"
  ],
  "type": "function"
 },
 "bytecode.tests.test_misc.MiscTests": {
  "lineno": 264,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "bytecode.tests.test_misc.MiscTests.test_version": {
  "lineno": 266,
  "symbols_in_volume": [
   "bytecode.__version__",
   "setup.VERSION"
  ],
  "type": "function"
 },
 "bytecode.tests.test_peephole_opt": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "bytecode.tests.test_peephole_opt.Tests": {
  "lineno": 9,
  "symbols_in_volume": [
   "bytecode.tests.TestCase"
  ],
  "type": "class"
 },
 "bytecode.tests.test_peephole_opt.Tests.check": {
  "lineno": 19,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.ControlFlowGraph.from_bytecode",
   "bytecode.peephole_opt.PeepholeOptimizer",
   "bytecode.tests.dump_bytecode"
  ],
  "type": "function"
 },
 "bytecode.tests.test_peephole_opt.Tests.check_dont_optimize": {
  "lineno": 38,
  "symbols_in_volume": [
   "bytecode.ControlFlowGraph.from_bytecode"
  ],
  "type": "function"
 },
 "bytecode.tests.test_peephole_opt.Tests.optimize_blocks": {
  "lineno": 12,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.ControlFlowGraph.from_bytecode",
   "bytecode.peephole_opt.PeepholeOptimizer"
  ],
  "type": "function"
 },
 "bytecode.tests.test_peephole_opt.Tests.test_bin_op_dont_optimize": {
  "lineno": 168,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_peephole_opt.Tests.test_binary_op": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_peephole_opt.Tests.test_binary_op.check_bin_op": {
  "lineno": 60,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_peephole_opt.Tests.test_build_list": {
  "lineno": 216,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Compare.IN",
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_peephole_opt.Tests.test_build_list_unpack_seq": {
  "lineno": 232,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_peephole_opt.Tests.test_build_list_unpack_seq_const": {
  "lineno": 290,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_peephole_opt.Tests.test_build_set": {
  "lineno": 308,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Compare.IN",
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_peephole_opt.Tests.test_build_tuple": {
  "lineno": 205,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_peephole_opt.Tests.test_build_tuple_unpack_seq_const": {
  "lineno": 276,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_peephole_opt.Tests.test_combined_unary_bin_ops": {
  "lineno": 82,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_peephole_opt.Tests.test_compare_op_unary_not": {
  "lineno": 324,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Compare.IN",
   "bytecode.Compare.IS",
   "bytecode.Compare.IS_NOT",
   "bytecode.Compare.NOT_IN",
   "bytecode.Instr",
   "bytecode.Label"
  ],
  "type": "function"
 },
 "bytecode.tests.test_peephole_opt.Tests.test_dead_code_jump": {
  "lineno": 759,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Instr",
   "bytecode.Label"
  ],
  "type": "function"
 },
 "bytecode.tests.test_peephole_opt.Tests.test_dont_optimize": {
  "lineno": 357,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Compare.LT",
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_peephole_opt.Tests.test_jump_if_false_to_jump_if_false": {
  "lineno": 649,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Compare.GT",
   "bytecode.Instr",
   "bytecode.Label",
   "sys.version_info"
  ],
  "type": "function"
 },
 "bytecode.tests.test_peephole_opt.Tests.test_jump_if_true_to_jump_if_false": {
  "lineno": 615,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Instr",
   "bytecode.Label"
  ],
  "type": "function"
 },
 "bytecode.tests.test_peephole_opt.Tests.test_jump_to_return": {
  "lineno": 591,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Instr",
   "bytecode.Label"
  ],
  "type": "function"
 },
 "bytecode.tests.test_peephole_opt.Tests.test_max_size": {
  "lineno": 136,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Instr",
   "bytecode.peephole_opt",
   "unittest.mock.patch.object"
  ],
  "type": "function"
 },
 "bytecode.tests.test_peephole_opt.Tests.test_nop": {
  "lineno": 750,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_peephole_opt.Tests.test_not_jump_if_false": {
  "lineno": 473,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Instr",
   "bytecode.Label"
  ],
  "type": "function"
 },
 "bytecode.tests.test_peephole_opt.Tests.test_optimize_code_obj": {
  "lineno": 376,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Bytecode.from_code",
   "bytecode.Instr",
   "bytecode.peephole_opt.PeepholeOptimizer"
  ],
  "type": "function"
 },
 "bytecode.tests.test_peephole_opt.Tests.test_return_value": {
  "lineno": 398,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.ControlFlowGraph.from_bytecode",
   "bytecode.Instr",
   "bytecode.Label",
   "sys.version_info"
  ],
  "type": "function"
 },
 "bytecode.tests.test_peephole_opt.Tests.test_unary_op": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bytecode.tests.test_peephole_opt.Tests.test_unary_op.check_unary_op": {
  "lineno": 47,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Instr"
  ],
  "type": "function"
 },
 "bytecode.tests.test_peephole_opt.Tests.test_uncond_jump_to_uncond_jump": {
  "lineno": 773,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Instr",
   "bytecode.Label"
  ],
  "type": "function"
 },
 "bytecode.tests.test_peephole_opt.Tests.test_unconditional_jump_to_return": {
  "lineno": 495,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Instr",
   "bytecode.Label"
  ],
  "type": "function"
 },
 "bytecode.tests.test_peephole_opt.Tests.test_unconditional_jumps": {
  "lineno": 558,
  "symbols_in_volume": [
   "bytecode.Bytecode",
   "bytecode.Instr",
   "bytecode.Label"
  ],
  "type": "function"
 }
}