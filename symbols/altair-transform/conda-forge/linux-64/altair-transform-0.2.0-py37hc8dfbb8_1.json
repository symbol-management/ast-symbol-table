{
 "altair_transform": {
  "data": {},
  "type": "module"
 },
 "altair_transform.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "altair_transform.__version__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "altair_transform.apply": {
  "data": {
   "shadows": "altair_transform.core.apply"
  },
  "type": "import"
 },
 "altair_transform.core": {
  "data": {},
  "type": "module"
 },
 "altair_transform.core.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "altair_transform.core.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "altair_transform.core.alt": {
  "data": {
   "shadows": "altair"
  },
  "type": "import"
 },
 "altair_transform.core.apply": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "altair.Undefined",
    "altair_transform.transform.visit",
    "bool",
    "pandas.DataFrame",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "altair_transform.core.extract_data": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "altair.Chart",
    "altair_transform.core.apply",
    "altair_transform.extract.extract_transform",
    "altair_transform.utils.to_dataframe",
    "bool",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "altair_transform.core.extract_transform": {
  "data": {
   "shadows": "altair_transform.extract.extract_transform"
  },
  "type": "import"
 },
 "altair_transform.core.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "altair_transform.core.to_dataframe": {
  "data": {
   "shadows": "altair_transform.utils.to_dataframe"
  },
  "type": "import"
 },
 "altair_transform.core.transform_chart": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "altair.Chart",
    "altair.Undefined",
    "altair_transform.core.extract_data",
    "altair_transform.extract.extract_transform",
    "bool"
   ]
  },
  "type": "function"
 },
 "altair_transform.core.visit": {
  "data": {
   "shadows": "altair_transform.transform.visit"
  },
  "type": "import"
 },
 "altair_transform.extract": {
  "data": {
   "symbols_in_volume": [
    "altair_transform.extract._SpecType",
    "dict",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "module"
 },
 "altair_transform.extract.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "altair_transform.extract.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "altair_transform.extract.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "altair_transform.extract.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "altair_transform.extract._EncodingType": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "altair_transform.extract._SpecType": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "altair_transform.extract._TransformType": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "altair_transform.extract._encoding_to_transform": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "altair_transform.extract._EncodingType",
    "altair_transform.extract._SpecType",
    "altair_transform.extract._TransformType",
    "altair_transform.extract.copy",
    "bool",
    "collections.defaultdict",
    "dict",
    "list",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "altair_transform.extract.alt": {
  "data": {
   "shadows": "altair"
  },
  "type": "import"
 },
 "altair_transform.extract.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "altair_transform.extract.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "altair_transform.extract.extract_transform": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "altair.Chart",
    "altair.FacetedEncoding.from_dict",
    "altair.Transform.from_dict",
    "altair.Undefined",
    "altair_transform.extract._encoding_to_transform"
   ]
  },
  "type": "function"
 },
 "altair_transform.extract_data": {
  "data": {
   "shadows": "altair_transform.core.extract_data"
  },
  "type": "import"
 },
 "altair_transform.extract_transform": {
  "data": {
   "shadows": "altair_transform.core.extract_transform"
  },
  "type": "import"
 },
 "altair_transform.tests": {
  "data": {},
  "type": "module"
 },
 "altair_transform.tests.test_core": {
  "data": {},
  "type": "module"
 },
 "altair_transform.tests.test_core.alt": {
  "data": {
   "shadows": "altair"
  },
  "type": "import"
 },
 "altair_transform.tests.test_core.chart": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "altair.Chart",
    "altair_transform.tests.test_core.data",
    "altair_transform.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "altair_transform.tests.test_core.data": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "altair_transform.tests.test_core.pytest",
    "list",
    "numpy.random.RandomState",
    "pandas.DataFrame",
    "pandas.date_range",
    "range"
   ]
  },
  "type": "function"
 },
 "altair_transform.tests.test_core.extract_data": {
  "data": {
   "shadows": "altair_transform.extract_data"
  },
  "type": "import"
 },
 "altair_transform.tests.test_core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "altair_transform.tests.test_core.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "altair_transform.tests.test_core.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "altair_transform.tests.test_core.test_extract_data": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "altair_transform.extract_data",
    "altair_transform.tests.test_core.chart",
    "altair_transform.tests.test_core.data"
   ]
  },
  "type": "function"
 },
 "altair_transform.tests.test_core.test_transform_chart": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "altair.Undefined",
    "altair_transform.extract_data",
    "altair_transform.tests.test_core.chart",
    "altair_transform.transform_chart"
   ]
  },
  "type": "function"
 },
 "altair_transform.tests.test_core.test_transform_chart_with_aggregate": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "altair.Chart",
    "altair_transform.tests.test_core.chart",
    "altair_transform.tests.test_core.data",
    "altair_transform.transform_chart",
    "list",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "altair_transform.tests.test_core.transform_chart": {
  "data": {
   "shadows": "altair_transform.transform_chart"
  },
  "type": "import"
 },
 "altair_transform.tests.test_examples": {
  "data": {},
  "type": "module"
 },
 "altair_transform.tests.test_examples.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "altair_transform.tests.test_examples.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "altair_transform.tests.test_examples.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "altair_transform.tests.test_examples.readme": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ValueError",
    "altair_transform.tests.test_examples.os",
    "altair_transform.tests.test_examples.pytest",
    "open"
   ]
  },
  "type": "function"
 },
 "altair_transform.tests.test_examples.test_readme_snippets": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "altair_transform.tests.test_examples.re",
    "altair_transform.tests.test_examples.readme",
    "exec",
    "len"
   ]
  },
  "type": "function"
 },
 "altair_transform.tests.test_extract": {
  "data": {},
  "type": "module"
 },
 "altair_transform.tests.test_extract.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "altair_transform.tests.test_extract.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "altair_transform.tests.test_extract.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "altair_transform.tests.test_extract.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "altair_transform.tests.test_extract._TestCase": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "altair_transform.tests.test_extract._encoding_to_transform": {
  "data": {
   "shadows": "altair_transform.extract._encoding_to_transform"
  },
  "type": "import"
 },
 "altair_transform.tests.test_extract.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "altair_transform.tests.test_extract.test_extract_simple_aggregate": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "altair_transform.extract._encoding_to_transform",
    "altair_transform.tests.test_extract._TestCase",
    "altair_transform.tests.test_extract.pytest"
   ]
  },
  "type": "function"
 },
 "altair_transform.tests.test_vegaexpr": {
  "data": {
   "symbols_in_volume": [
    "altair_transform.vegaexpr.JSRegex",
    "altair_transform.vegaexpr.undefined",
    "datetime.datetime",
    "datetime.datetime.fromtimestamp",
    "numpy.e",
    "numpy.log",
    "numpy.log2",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "module"
 },
 "altair_transform.tests.test_vegaexpr.EXPRESSIONS": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "altair_transform.tests.test_vegaexpr.JSRegex": {
  "data": {
   "shadows": "altair_transform.vegaexpr.JSRegex"
  },
  "type": "import"
 },
 "altair_transform.tests.test_vegaexpr.dt": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "altair_transform.tests.test_vegaexpr.eval_vegajs": {
  "data": {
   "shadows": "altair_transform.vegaexpr.eval_vegajs"
  },
  "type": "import"
 },
 "altair_transform.tests.test_vegaexpr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "altair_transform.tests.test_vegaexpr.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "altair_transform.tests.test_vegaexpr.test_vegajs_expressions": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "altair_transform.tests.test_vegaexpr.EXPRESSIONS",
    "altair_transform.tests.test_vegaexpr.pytest",
    "altair_transform.vegaexpr.eval_vegajs",
    "float",
    "isinstance",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "altair_transform.tests.test_vegaexpr.undefined": {
  "data": {
   "shadows": "altair_transform.vegaexpr.undefined"
  },
  "type": "import"
 },
 "altair_transform.transform": {
  "data": {},
  "type": "module"
 },
 "altair_transform.transform.aggregate": {
  "data": {
   "symbols_in_volume": [
    "altair_transform.transform.aggregate.confidence_interval"
   ]
  },
  "type": "module"
 },
 "altair_transform.transform.aggregate.AGG_REPLACEMENTS": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "altair_transform.transform.aggregate.alt": {
  "data": {
   "shadows": "altair"
  },
  "type": "import"
 },
 "altair_transform.transform.aggregate.confidence_interval": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.ndarray",
    "scipy.stats.t.interval"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.aggregate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "altair_transform.transform.aggregate.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "altair_transform.transform.aggregate.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "altair_transform.transform.aggregate.visit_aggregate": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "altair.AggregateTransform",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.bin": {
  "data": {
   "symbols_in_volume": [
    "float",
    "int",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "altair_transform.transform.bin.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "altair_transform.transform.bin.Number": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "altair_transform.transform.bin.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "altair_transform.transform.bin.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "altair_transform.transform.bin.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "altair_transform.transform.bin._cut": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "bool",
    "int",
    "len",
    "numpy.ndarray",
    "pandas.Series",
    "pandas.cut"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.bin.alt": {
  "data": {
   "shadows": "altair"
  },
  "type": "import"
 },
 "altair_transform.transform.bin.calculate_bins": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "abs",
    "altair_transform.transform.bin.Number",
    "altair_transform.transform.bin.math",
    "bool",
    "max",
    "numpy.arange",
    "numpy.ndarray",
    "pow",
    "round",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.bin.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "altair_transform.transform.bin.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "altair_transform.transform.bin.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "altair_transform.transform.bin.visit_bin": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "altair.BinTransform",
    "altair_transform.transform.bin._cut",
    "altair_transform.transform.bin.calculate_bins",
    "bin",
    "dict",
    "isinstance",
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.calculate": {
  "data": {},
  "type": "module"
 },
 "altair_transform.transform.calculate.alt": {
  "data": {
   "shadows": "altair"
  },
  "type": "import"
 },
 "altair_transform.transform.calculate.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "altair_transform.transform.calculate.visit_calculate": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "altair.CalculateTransform",
    "eval_vegajs",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.flatten": {
  "data": {},
  "type": "module"
 },
 "altair_transform.transform.flatten.alt": {
  "data": {
   "shadows": "altair"
  },
  "type": "import"
 },
 "altair_transform.transform.flatten.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "altair_transform.transform.flatten.visit_flatten": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "altair.FlattenTransform",
    "flatten_row",
    "len",
    "pandas.DataFrame",
    "pandas.concat",
    "range"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.flatten.visit_flatten.flatten_row": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.fold": {
  "data": {},
  "type": "module"
 },
 "altair_transform.transform.fold.alt": {
  "data": {
   "shadows": "altair"
  },
  "type": "import"
 },
 "altair_transform.transform.fold.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "altair_transform.transform.fold.visit_fold": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "altair.FoldTransform",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.impute": {
  "data": {},
  "type": "module"
 },
 "altair_transform.transform.impute.alt": {
  "data": {
   "shadows": "altair"
  },
  "type": "import"
 },
 "altair_transform.transform.impute.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "altair_transform.transform.impute.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "altair_transform.transform.impute.visit_impute": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "_impute",
    "altair.ImputeTransform",
    "dict",
    "isinstance",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.sign",
    "numpy.sort",
    "numpy.unique",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.impute.visit_impute._impute": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pandas.merge"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.joinaggregate": {
  "data": {},
  "type": "module"
 },
 "altair_transform.transform.joinaggregate.alt": {
  "data": {
   "shadows": "altair"
  },
  "type": "import"
 },
 "altair_transform.transform.joinaggregate.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "altair_transform.transform.joinaggregate.visit_joinaggregate": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "altair.JoinAggregateTransform",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.lookup": {
  "data": {},
  "type": "module"
 },
 "altair_transform.transform.lookup.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "altair_transform.transform.lookup.alt": {
  "data": {
   "shadows": "altair"
  },
  "type": "import"
 },
 "altair_transform.transform.lookup.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "altair_transform.transform.lookup.visit_lookup": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "altair.LookupTransform",
    "altair.Undefined",
    "bool",
    "list",
    "pandas.DataFrame",
    "pandas.merge",
    "str",
    "to_dataframe",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.sample": {
  "data": {},
  "type": "module"
 },
 "altair_transform.transform.sample.alt": {
  "data": {
   "shadows": "altair"
  },
  "type": "import"
 },
 "altair_transform.transform.sample.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "altair_transform.transform.sample.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "altair_transform.transform.sample.visit_sample": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "altair.SampleTransform",
    "numpy.random.permutation",
    "numpy.sort",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.tests": {
  "data": {},
  "type": "module"
 },
 "altair_transform.transform.tests.test_transform": {
  "data": {},
  "type": "module"
 },
 "altair_transform.transform.tests.test_transform.AGGREGATES": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "altair_transform.transform.tests.test_transform.AGG_REPLACEMENTS": {
  "data": {
   "shadows": "altair_transform.transform.aggregate.AGG_REPLACEMENTS"
  },
  "type": "import"
 },
 "altair_transform.transform.tests.test_transform.AGG_SKIP": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "altair_transform.transform.tests.test_transform.FILTER_PREDICATES": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "altair_transform.transform.tests.test_transform.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "altair_transform.transform.tests.test_transform.alt": {
  "data": {
   "shadows": "altair"
  },
  "type": "import"
 },
 "altair_transform.transform.tests.test_transform.apply": {
  "data": {
   "shadows": "altair_transform.apply"
  },
  "type": "import"
 },
 "altair_transform.transform.tests.test_transform.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "altair_transform.transform.tests.test_transform.data": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "altair_transform.transform.tests.test_transform.pytest",
    "list",
    "numpy.random.RandomState",
    "pandas.DataFrame",
    "pandas.date_range",
    "range"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "altair_transform.transform.tests.test_transform.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "altair_transform.transform.tests.test_transform.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "altair_transform.transform.tests.test_transform.test_aggregate_transform": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "altair_transform.apply",
    "altair_transform.transform.aggregate.AGG_REPLACEMENTS.get",
    "altair_transform.transform.tests.test_transform.AGGREGATES",
    "altair_transform.transform.tests.test_transform.AGG_SKIP",
    "altair_transform.transform.tests.test_transform.data",
    "altair_transform.transform.tests.test_transform.pytest",
    "pandas.DataFrame",
    "set"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_bin_transform_maxbins": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "altair_transform.apply",
    "altair_transform.transform.tests.test_transform.data",
    "altair_transform.transform.tests.test_transform.pytest",
    "len",
    "numpy.arange",
    "numpy.sort",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_bin_transform_simple": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "altair_transform.apply",
    "altair_transform.transform.tests.test_transform.data"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_bin_transform_step": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "altair_transform.apply",
    "altair_transform.transform.tests.test_transform.data",
    "altair_transform.transform.tests.test_transform.pytest",
    "numpy.allclose",
    "numpy.arange",
    "numpy.sort",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_bin_transform_steps": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "altair_transform.apply",
    "altair_transform.transform.tests.test_transform.data",
    "altair_transform.transform.tests.test_transform.pytest",
    "numpy.sort",
    "pandas.DataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_calculate_transform": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "altair_transform.apply",
    "altair_transform.transform.tests.test_transform.data"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_filter_transform": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "altair_transform.apply",
    "altair_transform.transform.tests.test_transform.FILTER_PREDICATES",
    "altair_transform.transform.tests.test_transform.data",
    "altair_transform.transform.tests.test_transform.pytest",
    "calc",
    "filter"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_flatten_transform": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "altair_transform.apply",
    "altair_transform.transform.tests.test_transform.data",
    "list",
    "numpy.nan",
    "numpy.testing.assert_equal",
    "pandas.DataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_flatten_transform_with_as": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "altair.__version__",
    "altair_transform.apply",
    "altair_transform.transform.tests.test_transform.data",
    "altair_transform.transform.tests.test_transform.pytest",
    "distutils.version.LooseVersion",
    "list",
    "numpy.nan",
    "numpy.testing.assert_equal",
    "pandas.DataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_fold_transform": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "altair_transform.apply",
    "altair_transform.transform.tests.test_transform.data",
    "altair_transform.transform.tests.test_transform.pytest",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_impute_transform_no_groupby": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "altair.ImputeTransform",
    "altair_transform.apply",
    "altair_transform.transform.tests.test_transform.data",
    "altair_transform.transform.tests.test_transform.pytest",
    "numpy.testing.assert_equal",
    "pandas.DataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_impute_transform_with_groupby": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "altair.ImputeTransform",
    "altair_transform.apply",
    "altair_transform.transform.tests.test_transform.data",
    "list",
    "numpy.testing.assert_equal",
    "numpy.tile",
    "pandas.DataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_joinaggregate_transform": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "altair_transform.apply",
    "altair_transform.transform.aggregate.AGG_REPLACEMENTS.get",
    "altair_transform.transform.tests.test_transform.AGGREGATES",
    "altair_transform.transform.tests.test_transform.AGG_SKIP",
    "altair_transform.transform.tests.test_transform.data",
    "altair_transform.transform.tests.test_transform.pytest",
    "set",
    "validate"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_joinaggregate_transform.validate": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_lookup_transform": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "altair.utils.data.to_values",
    "altair_transform.apply",
    "altair_transform.transform.tests.test_transform.data",
    "altair_transform.transform.tests.test_transform.pytest",
    "list",
    "pandas.DataFrame",
    "pandas.merge"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_lookup_transform_default": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "altair.utils.data.to_values",
    "altair_transform.apply",
    "altair_transform.transform.tests.test_transform.data",
    "altair_transform.transform.tests.test_transform.pytest",
    "list",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_multiple_transforms": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "altair_transform.apply",
    "altair_transform.transform.tests.test_transform.data"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_sample_transform": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "altair_transform.apply",
    "altair_transform.transform.tests.test_transform.data",
    "altair_transform.transform.tests.test_transform.pytest",
    "min"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_timeunit_transform": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "altair_transform.apply",
    "altair_transform.transform.tests.test_transform.data",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_window_transform_basic": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "altair_transform.apply",
    "altair_transform.transform.tests.test_transform.data",
    "float"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_window_transform_grouped": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "altair_transform.apply",
    "altair_transform.transform.tests.test_transform.data",
    "len"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_window_transform_sorted": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "altair_transform.apply",
    "altair_transform.transform.tests.test_transform.data",
    "float"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.to_values": {
  "data": {
   "shadows": "altair.utils.data.to_values"
  },
  "type": "import"
 },
 "altair_transform.transform.timeunit": {
  "data": {},
  "type": "module"
 },
 "altair_transform.transform.timeunit.alt": {
  "data": {
   "shadows": "altair"
  },
  "type": "import"
 },
 "altair_transform.transform.timeunit.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "altair_transform.transform.timeunit.visit_timeunit": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "altair.TimeUnitTransform",
    "compute_timeunit",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.visitor": {
  "data": {},
  "type": "module"
 },
 "altair_transform.transform.visitor.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "altair_transform.transform.visitor.alt": {
  "data": {
   "shadows": "altair"
  },
  "type": "import"
 },
 "altair_transform.transform.visitor.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "altair_transform.transform.visitor.singledispatch": {
  "data": {
   "shadows": "functools.singledispatch"
  },
  "type": "import"
 },
 "altair_transform.transform.visitor.visit": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "NotImplementedError",
    "functools.singledispatch",
    "pandas.DataFrame",
    "type",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.visitor.visit_dict": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "altair.Transform.from_dict",
    "altair_transform.transform.visitor.visit",
    "dict",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.visitor.visit_list": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "altair_transform.transform.visitor.visit",
    "list",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform.window": {
  "data": {
   "symbols_in_volume": [
    "object",
    "str",
    "typing.Dict"
   ]
  },
  "type": "module"
 },
 "altair_transform.transform.window.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "altair_transform.transform.window.alt": {
  "data": {
   "shadows": "altair"
  },
  "type": "import"
 },
 "altair_transform.transform.window.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "altair_transform.transform.window.visit_window": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "NotImplementedError",
    "altair.WindowTransform",
    "len",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "altair_transform.transform_chart": {
  "data": {
   "shadows": "altair_transform.core.transform_chart"
  },
  "type": "import"
 },
 "altair_transform.utils": {
  "data": {},
  "type": "module"
 },
 "altair_transform.utils.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "altair_transform.utils._evaljs": {
  "data": {
   "symbols_in_volume": [
    "altair_transform.utils._evaljs._UndefinedType",
    "altair_transform.utils._evaljs.int_inputs",
    "altair_transform.utils._evaljs.operator",
    "altair_transform.utils._evaljs.zerofill_rshift"
   ]
  },
  "type": "module"
 },
 "altair_transform.utils._evaljs.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "altair_transform.utils._evaljs.BINARY_OPERATORS": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "altair_transform.utils._evaljs.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "altair_transform.utils._evaljs.JSRegex": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "altair_transform.utils._evaljs.re",
    "str",
    "typing.Dict"
   ]
  },
  "type": "class"
 },
 "altair_transform.utils._evaljs.JSRegex.__eq__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "altair_transform.utils._evaljs.JSRegex",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._evaljs.JSRegex.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "altair_transform.utils._evaljs.re",
    "str"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._evaljs.JSRegex._reflags": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "altair_transform.utils._evaljs.re"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._evaljs.JSRegex.replace": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._evaljs.JSRegex.test": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._evaljs.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "altair_transform.utils._evaljs.Parser": {
  "data": {
   "shadows": "altair_transform.utils.Parser"
  },
  "type": "import"
 },
 "altair_transform.utils._evaljs.TERNARY_OPERATORS": {
  "data": {
   "lineno": 223
  },
  "type": "constant"
 },
 "altair_transform.utils._evaljs.UNARY_OPERATORS": {
  "data": {
   "lineno": 189
  },
  "type": "constant"
 },
 "altair_transform.utils._evaljs.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "altair_transform.utils._evaljs._UndefinedType": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "altair_transform.utils._evaljs._UndefinedType.__repr__": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "altair_transform.utils._evaljs.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "altair_transform.utils._evaljs._visit_attr": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "altair_transform.utils._evaljs.undefined",
    "altair_transform.utils._evaljs.visit",
    "altair_transform.utils.ast.Attr",
    "dict",
    "getattr",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._evaljs._visit_binop": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "NotImplementedError",
    "altair_transform.utils._evaljs.visit",
    "altair_transform.utils.ast.BinOp",
    "dict",
    "op",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._evaljs._visit_expr": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "altair_transform.utils._evaljs.visit",
    "altair_transform.utils.ast.Expr",
    "dict",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._evaljs._visit_func": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "altair_transform.utils._evaljs.visit",
    "altair_transform.utils.ast.Func",
    "dict",
    "func",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._evaljs._visit_global": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "NameError",
    "altair_transform.utils._evaljs.visit",
    "altair_transform.utils.ast.Global",
    "dict",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._evaljs._visit_item": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "altair_transform.utils._evaljs.undefined",
    "altair_transform.utils._evaljs.visit",
    "altair_transform.utils.ast.Item",
    "dict",
    "float",
    "int",
    "isinstance",
    "list",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._evaljs._visit_list": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "altair_transform.utils._evaljs.visit",
    "altair_transform.utils.ast.List",
    "dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._evaljs._visit_name": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "altair_transform.utils._evaljs.visit",
    "altair_transform.utils.ast.Name",
    "dict",
    "str"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._evaljs._visit_number": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "altair_transform.utils._evaljs.visit",
    "altair_transform.utils.ast.Number",
    "dict",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._evaljs._visit_object": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "_visit",
    "altair_transform.utils._evaljs.visit",
    "altair_transform.utils.ast.Object",
    "dict",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._evaljs._visit_object._visit": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "altair_transform.utils._evaljs.visit",
    "altair_transform.utils.ast.Global",
    "altair_transform.utils.ast.Name",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._evaljs._visit_regex": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "altair_transform.utils._evaljs.JSRegex",
    "altair_transform.utils._evaljs.visit",
    "altair_transform.utils.ast.Regex",
    "dict"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._evaljs._visit_string": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "altair_transform.utils._evaljs.visit",
    "altair_transform.utils.ast.String",
    "dict",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._evaljs._visit_ternop": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "NotImplementedError",
    "altair_transform.utils._evaljs.visit",
    "altair_transform.utils.ast.TernOp",
    "dict",
    "op",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._evaljs._visit_unop": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "NotImplementedError",
    "altair_transform.utils._evaljs.visit",
    "altair_transform.utils.ast.UnOp",
    "dict",
    "op",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._evaljs.ast": {
  "data": {
   "shadows": "altair_transform.utils.ast"
  },
  "type": "import"
 },
 "altair_transform.utils._evaljs.evaljs": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "altair_transform.utils.Parser",
    "altair_transform.utils._evaljs.visit",
    "altair_transform.utils.ast.Expr",
    "dict",
    "isinstance",
    "str",
    "typing.Any",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._evaljs.int_inputs": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "altair_transform.utils._evaljs.int_inputs.wrapper": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "float",
    "func",
    "functools.wraps",
    "int",
    "map"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._evaljs.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "altair_transform.utils._evaljs.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "altair_transform.utils._evaljs.singledispatch": {
  "data": {
   "shadows": "functools.singledispatch"
  },
  "type": "import"
 },
 "altair_transform.utils._evaljs.undefined": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "altair_transform.utils._evaljs.visit": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "dict",
    "functools.singledispatch",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._evaljs.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "altair_transform.utils._evaljs.zerofill_rshift": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "altair_transform.utils._evaljs.int_inputs",
    "int"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._parser": {
  "data": {
   "symbols_in_volume": [
    "altair_transform.utils._parser.Parser"
   ]
  },
  "type": "module"
 },
 "altair_transform.utils._parser.Parser": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "altair_transform.utils._parser.ParserBase"
   ]
  },
  "type": "class"
 },
 "altair_transform.utils._parser.Parser.p_arglist": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_atom": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_attraccess": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "altair_transform.utils.ast.Attr"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_error": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_expression_atom": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_expression_binop": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "altair_transform.utils.ast.BinOp"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_expression_ternary": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "altair_transform.utils.ast.TernOp"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_expression_unaryop": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "altair_transform.utils.ast.UnOp"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_functioncall": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "altair_transform.utils.ast.Func",
    "len"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_global": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "altair_transform.utils.ast.Global"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_group": {
  "data": {
   "lineno": 329
  },
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_indexing": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "altair_transform.utils.ast.Item"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_list": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "altair_transform.utils.ast.List",
    "len"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_name": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "altair_transform.utils.ast.Name"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_number": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "altair_transform.utils.ast.Number"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_object": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "altair_transform.utils.ast.Object",
    "len"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_objectarg": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_objectarglist": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_objectkey": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_regex": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "altair_transform.utils.ast.Regex"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_string": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "altair_transform.utils.ast.String"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.t_BINARY": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.t_FLOAT": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.t_HEX": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.t_OCTAL": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.t_REGEX": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.t_STRING": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.t_error": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.t_newline": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "altair_transform.utils._parser.ParserBase": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "altair_transform.utils._parser.ParserBase.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "altair_transform.utils._parser.os",
    "ply.lex.lex",
    "ply.yacc.yacc"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._parser.ParserBase.parse": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ply.yacc.parse"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils._parser.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "altair_transform.utils._parser.ast": {
  "data": {
   "shadows": "altair_transform.utils.ast"
  },
  "type": "import"
 },
 "altair_transform.utils._parser.lex": {
  "data": {
   "shadows": "ply.lex"
  },
  "type": "import"
 },
 "altair_transform.utils._parser.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "altair_transform.utils._parser.parser": {
  "data": {
   "lineno": 368
  },
  "type": "constant"
 },
 "altair_transform.utils._parser.yacc": {
  "data": {
   "shadows": "ply.yacc"
  },
  "type": "import"
 },
 "altair_transform.utils._parser_Parser_parsetab": {
  "data": {
   "symbols_in_volume": [
    "altair_transform.utils._parser_Parser_parsetab._lr_action",
    "altair_transform.utils._parser_Parser_parsetab._lr_action_items",
    "altair_transform.utils._parser_Parser_parsetab._lr_goto",
    "altair_transform.utils._parser_Parser_parsetab._lr_goto_items",
    "zip"
   ]
  },
  "type": "module"
 },
 "altair_transform.utils._parser_Parser_parsetab._lr_action": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "altair_transform.utils._parser_Parser_parsetab._lr_action_items": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "altair_transform.utils._parser_Parser_parsetab._lr_goto": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "altair_transform.utils._parser_Parser_parsetab._lr_goto_items": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "altair_transform.utils._parser_Parser_parsetab._lr_method": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "altair_transform.utils._parser_Parser_parsetab._lr_productions": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "altair_transform.utils._parser_Parser_parsetab._lr_signature": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "altair_transform.utils._parser_Parser_parsetab._tabversion": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "altair_transform.utils.ast": {
  "data": {},
  "type": "module"
 },
 "altair_transform.utils.ast.Attr": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "altair_transform.utils.ast.Expr",
    "altair_transform.utils.ast.Name",
    "altair_transform.utils.ast.Node",
    "dataclasses.dataclass"
   ]
  },
  "type": "class"
 },
 "altair_transform.utils.ast.BinOp": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "altair_transform.utils.ast.Expr",
    "altair_transform.utils.ast.Node",
    "dataclasses.dataclass",
    "str"
   ]
  },
  "type": "class"
 },
 "altair_transform.utils.ast.Expr": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "altair_transform.utils.ast.Node",
    "dataclasses.dataclass"
   ]
  },
  "type": "class"
 },
 "altair_transform.utils.ast.Func": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "altair_transform.utils.ast.Expr",
    "altair_transform.utils.ast.Node",
    "altair_transform.utils.ast.typing",
    "dataclasses.dataclass"
   ]
  },
  "type": "class"
 },
 "altair_transform.utils.ast.Global": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "altair_transform.utils.ast.Node",
    "dataclasses.dataclass",
    "str"
   ]
  },
  "type": "class"
 },
 "altair_transform.utils.ast.Item": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "altair_transform.utils.ast.Expr",
    "altair_transform.utils.ast.Node",
    "dataclasses.dataclass"
   ]
  },
  "type": "class"
 },
 "altair_transform.utils.ast.List": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "altair_transform.utils.ast.Expr",
    "altair_transform.utils.ast.Node",
    "altair_transform.utils.ast.typing",
    "dataclasses.dataclass"
   ]
  },
  "type": "class"
 },
 "altair_transform.utils.ast.Name": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "altair_transform.utils.ast.Node",
    "dataclasses.dataclass",
    "str"
   ]
  },
  "type": "class"
 },
 "altair_transform.utils.ast.Node": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "altair_transform.utils.ast.Number": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "altair_transform.utils.ast.Node",
    "dataclasses.dataclass",
    "float"
   ]
  },
  "type": "class"
 },
 "altair_transform.utils.ast.Object": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "altair_transform.utils.ast.Expr",
    "altair_transform.utils.ast.Name",
    "altair_transform.utils.ast.Node",
    "altair_transform.utils.ast.typing",
    "dataclasses.dataclass"
   ]
  },
  "type": "class"
 },
 "altair_transform.utils.ast.Regex": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "altair_transform.utils.ast.Node",
    "altair_transform.utils.ast.typing",
    "dataclasses.dataclass",
    "str"
   ]
  },
  "type": "class"
 },
 "altair_transform.utils.ast.String": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "altair_transform.utils.ast.Node",
    "dataclasses.dataclass",
    "str"
   ]
  },
  "type": "class"
 },
 "altair_transform.utils.ast.TernOp": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "altair_transform.utils.ast.Expr",
    "altair_transform.utils.ast.Node",
    "altair_transform.utils.ast.typing",
    "dataclasses.dataclass",
    "str"
   ]
  },
  "type": "class"
 },
 "altair_transform.utils.ast.UnOp": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "altair_transform.utils.ast.Expr",
    "altair_transform.utils.ast.Node",
    "dataclasses.dataclass",
    "str"
   ]
  },
  "type": "class"
 },
 "altair_transform.utils.ast.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "altair_transform.utils.ast.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "altair_transform.utils.data": {
  "data": {
   "symbols_in_volume": [
    "altair.SchemaBase",
    "dict",
    "pandas.DataFrame",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "altair_transform.utils.data.ChartType": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "altair_transform.utils.data.DataType": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "altair_transform.utils.data.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "altair_transform.utils.data.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "altair_transform.utils.data.alt": {
  "data": {
   "shadows": "altair"
  },
  "type": "import"
 },
 "altair_transform.utils.data.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "altair_transform.utils.data.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "altair_transform.utils.data.to_dataframe": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "altair.Data.from_dict",
    "altair_transform.utils.data.ChartType",
    "altair_transform.utils.data.DataType",
    "dict",
    "isinstance",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.read_csv",
    "pandas.read_json",
    "type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils.tests": {
  "data": {},
  "type": "module"
 },
 "altair_transform.utils.tests._testcases": {
  "data": {
   "symbols_in_volume": [
    "altair_transform.utils.tests._testcases.Bunch",
    "altair_transform.utils.tests._testcases.functools",
    "altair_transform.utils.tests._testcases.operator",
    "sum"
   ]
  },
  "type": "module"
 },
 "altair_transform.utils.tests._testcases.BAD_EXPRESSIONS": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "altair_transform.utils.tests._testcases.Bunch": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "altair_transform.utils.tests._testcases.Bunch.__getitem__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils.tests._testcases.Bunch.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils.tests._testcases.EXPRESSIONS": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "altair_transform.utils.tests._testcases.JSONLY_EXPRESSIONS": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "altair_transform.utils.tests._testcases.NAMES": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "altair_transform.utils.tests._testcases.extract": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "altair_transform.utils.tests._testcases.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "altair_transform.utils.tests._testcases.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "altair_transform.utils.tests.test_data": {
  "data": {},
  "type": "module"
 },
 "altair_transform.utils.tests.test_data.alt": {
  "data": {
   "shadows": "altair"
  },
  "type": "import"
 },
 "altair_transform.utils.tests.test_data.chart": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "altair.Chart",
    "altair_transform.utils.tests.test_data.inline_data",
    "altair_transform.utils.tests.test_data.named_data",
    "altair_transform.utils.tests.test_data.pytest"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils.tests.test_data.csv_data": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "altair_transform.utils.tests.test_data.df",
    "altair_transform.utils.tests.test_data.pytest",
    "altair_transform.utils.tests.test_data.tempfile"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils.tests.test_data.df": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "altair_transform.utils.tests.test_data.pytest",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils.tests.test_data.inline_data": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "altair_transform.utils.tests.test_data.df",
    "altair_transform.utils.tests.test_data.pytest"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils.tests.test_data.json_data": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "altair_transform.utils.tests.test_data.df",
    "altair_transform.utils.tests.test_data.pytest",
    "altair_transform.utils.tests.test_data.tempfile"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils.tests.test_data.named_data": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "altair_transform.utils.tests.test_data.pytest"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils.tests.test_data.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "altair_transform.utils.tests.test_data.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "altair_transform.utils.tests.test_data.sequence_data": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "altair_transform.utils.tests.test_data.pytest"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils.tests.test_data.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "altair_transform.utils.tests.test_data.test_csv_to_dataframe": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "altair.Data",
    "altair_transform.utils.tests.test_data.csv_data",
    "altair_transform.utils.tests.test_data.df",
    "altair_transform.utils.tests.test_data.pytest",
    "altair_transform.utils.to_dataframe",
    "data_type",
    "dict"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils.tests.test_data.test_inline_to_dataframe": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "altair.Data",
    "altair_transform.utils.tests.test_data.df",
    "altair_transform.utils.tests.test_data.inline_data",
    "altair_transform.utils.tests.test_data.pytest",
    "altair_transform.utils.to_dataframe",
    "data_type",
    "dict"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils.tests.test_data.test_json_to_dataframe": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "altair.Data",
    "altair_transform.utils.tests.test_data.df",
    "altair_transform.utils.tests.test_data.json_data",
    "altair_transform.utils.tests.test_data.pytest",
    "altair_transform.utils.to_dataframe",
    "data_type",
    "dict"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils.tests.test_data.test_named_to_dataframe": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "altair.Data",
    "altair_transform.utils.tests.test_data.chart",
    "altair_transform.utils.tests.test_data.df",
    "altair_transform.utils.tests.test_data.named_data",
    "altair_transform.utils.tests.test_data.pytest",
    "altair_transform.utils.to_dataframe",
    "data_type",
    "dict"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils.tests.test_data.test_sequence_to_dataframe": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "altair.Data",
    "altair_transform.utils.tests.test_data.df",
    "altair_transform.utils.tests.test_data.pytest",
    "altair_transform.utils.tests.test_data.sequence_data",
    "altair_transform.utils.to_dataframe",
    "data_type",
    "dict"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils.tests.test_data.to_dataframe": {
  "data": {
   "shadows": "altair_transform.utils.to_dataframe"
  },
  "type": "import"
 },
 "altair_transform.utils.tests.test_evaljs": {
  "data": {},
  "type": "module"
 },
 "altair_transform.utils.tests.test_evaljs.evaljs": {
  "data": {
   "shadows": "altair_transform.utils.evaljs"
  },
  "type": "import"
 },
 "altair_transform.utils.tests.test_evaljs.names": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "altair_transform.utils.tests.test_evaljs.pytest"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils.tests.test_evaljs.parser": {
  "data": {
   "shadows": "altair_transform.utils.parser"
  },
  "type": "import"
 },
 "altair_transform.utils.tests.test_evaljs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "altair_transform.utils.tests.test_evaljs.test_expressions": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "altair_transform.utils.evaljs",
    "altair_transform.utils.tests.test_evaljs.names",
    "altair_transform.utils.tests.test_evaljs.pytest",
    "eval",
    "extract"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils.tests.test_evaljs.test_jsonly_expressions": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "altair_transform.utils.evaljs",
    "altair_transform.utils.tests.test_evaljs.names",
    "altair_transform.utils.tests.test_evaljs.pytest"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils.tests.test_evaljs.test_string_vs_ast": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "altair_transform.utils.evaljs",
    "altair_transform.utils.parser.parse"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils.tests.test_parser": {
  "data": {},
  "type": "module"
 },
 "altair_transform.utils.tests.test_parser.Parser": {
  "data": {
   "shadows": "altair_transform.utils.Parser"
  },
  "type": "import"
 },
 "altair_transform.utils.tests.test_parser.ast": {
  "data": {
   "shadows": "altair_transform.utils.ast"
  },
  "type": "import"
 },
 "altair_transform.utils.tests.test_parser.parser": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "altair_transform.utils.Parser",
    "altair_transform.utils.tests.test_parser.pytest"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils.tests.test_parser.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "altair_transform.utils.tests.test_parser.test_bad_expressions": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "altair_transform.utils.tests.test_parser.parser",
    "altair_transform.utils.tests.test_parser.pytest",
    "extract"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils.tests.test_parser.test_expressions": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "altair_transform.utils.ast.Node",
    "altair_transform.utils.tests.test_parser.parser",
    "altair_transform.utils.tests.test_parser.pytest",
    "extract",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils.tests.test_parser.test_jsonly_expressions": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "altair_transform.utils.ast.Node",
    "altair_transform.utils.tests.test_parser.parser",
    "altair_transform.utils.tests.test_parser.pytest",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils.tests.test_timeunit": {
  "data": {
   "symbols_in_volume": [
    "altair_transform.utils.tests.test_timeunit.TIMEUNITS",
    "dateutil.tz.tzlocal"
   ]
  },
  "type": "module"
 },
 "altair_transform.utils.tests.test_timeunit.TIMEUNITS": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "altair_transform.utils.tests.test_timeunit.TIMEZONES": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "altair_transform.utils.tests.test_timeunit.dates": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "altair_transform.utils.tests.test_timeunit.pytest",
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils.tests.test_timeunit.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "altair_transform.utils.tests.test_timeunit.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "altair_transform.utils.tests.test_timeunit.test_all_timeunits": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "altair_transform.utils.tests.test_timeunit.TIMEUNITS",
    "altair_transform.utils.tests.test_timeunit.TIMEZONES",
    "altair_transform.utils.tests.test_timeunit.dates",
    "altair_transform.utils.tests.test_timeunit.pytest",
    "altair_transform.utils.timeunit.compute_timeunit",
    "dateutil.tz.tzlocal",
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils.tests.test_timeunit.test_timeunit_input_types": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "altair_transform.utils.tests.test_timeunit.TIMEUNITS",
    "altair_transform.utils.tests.test_timeunit.TIMEZONES",
    "altair_transform.utils.tests.test_timeunit.dates",
    "altair_transform.utils.tests.test_timeunit.pytest",
    "altair_transform.utils.timeunit.compute_timeunit",
    "isinstance",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.Timestamp"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils.tests.test_timeunit.timeunit": {
  "data": {
   "shadows": "altair_transform.utils.timeunit"
  },
  "type": "import"
 },
 "altair_transform.utils.tests.test_timeunit.tzlocal": {
  "data": {
   "shadows": "dateutil.tz.tzlocal"
  },
  "type": "import"
 },
 "altair_transform.utils.timeunit": {
  "data": {
   "symbols_in_volume": [
    "altair_transform.utils.timeunit._elements",
    "altair_transform.utils.timeunit._simple_timeunits",
    "altair_transform.utils.timeunit.re",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.Timestamp",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "altair_transform.utils.timeunit.Date": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "altair_transform.utils.timeunit.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "altair_transform.utils.timeunit.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "altair_transform.utils.timeunit.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "altair_transform.utils.timeunit._compute_timeunit": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "altair_transform.utils.timeunit._parse_timeunit_string",
    "pandas.DatetimeIndex",
    "pandas.to_datetime",
    "pandas.to_timedelta",
    "quarter",
    "str"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils.timeunit._compute_timeunit.quarter": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "pandas.Int64Index"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils.timeunit._elements": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "altair_transform.utils.timeunit._parse_timeunit_string": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ValueError",
    "altair_transform.utils.timeunit._timeunit_regex",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils.timeunit._simple_timeunits": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "altair_transform.utils.timeunit._timeunit_regex": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "altair_transform.utils.timeunit.compute_timeunit": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "altair_transform.utils.timeunit.Date",
    "altair_transform.utils.timeunit._compute_timeunit",
    "dateutil.tz.tzlocal",
    "dt",
    "isinstance",
    "pandas.DatetimeIndex",
    "pandas.Series",
    "pandas.Timestamp",
    "str"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils.timeunit.compute_timeunit.dt": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "altair_transform.utils.timeunit.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "altair_transform.utils.timeunit.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "altair_transform.utils.timeunit.tzlocal": {
  "data": {
   "shadows": "dateutil.tz.tzlocal"
  },
  "type": "import"
 },
 "altair_transform.vegaexpr": {
  "data": {
   "symbols_in_volume": [
    "altair_transform.vegaexpr.clampRange",
    "altair_transform.vegaexpr.cumulativeLogNormal",
    "altair_transform.vegaexpr.cumulativeNormal",
    "altair_transform.vegaexpr.cumulativeUniform",
    "altair_transform.vegaexpr.date",
    "altair_transform.vegaexpr.datetime",
    "altair_transform.vegaexpr.day",
    "altair_transform.vegaexpr.dayAbbrevFormat",
    "altair_transform.vegaexpr.dayFormat",
    "altair_transform.vegaexpr.densityLogNormal",
    "altair_transform.vegaexpr.densityNormal",
    "altair_transform.vegaexpr.densityUniform",
    "altair_transform.vegaexpr.extent",
    "altair_transform.vegaexpr.hours",
    "altair_transform.vegaexpr.indexof",
    "altair_transform.vegaexpr.inrange",
    "altair_transform.vegaexpr.isArray",
    "altair_transform.vegaexpr.isBoolean",
    "altair_transform.vegaexpr.isDate",
    "altair_transform.vegaexpr.isDefined",
    "altair_transform.vegaexpr.isNumber",
    "altair_transform.vegaexpr.isObject",
    "altair_transform.vegaexpr.isRegExp",
    "altair_transform.vegaexpr.isString",
    "altair_transform.vegaexpr.isValid",
    "altair_transform.vegaexpr.join",
    "altair_transform.vegaexpr.lastindexof",
    "altair_transform.vegaexpr.length",
    "altair_transform.vegaexpr.lerp",
    "altair_transform.vegaexpr.lower",
    "altair_transform.vegaexpr.math",
    "altair_transform.vegaexpr.merge",
    "altair_transform.vegaexpr.milliseconds",
    "altair_transform.vegaexpr.minutes",
    "altair_transform.vegaexpr.month",
    "altair_transform.vegaexpr.monthAbbrevFormat",
    "altair_transform.vegaexpr.monthFormat",
    "altair_transform.vegaexpr.now",
    "altair_transform.vegaexpr.pad",
    "altair_transform.vegaexpr.parseFloat",
    "altair_transform.vegaexpr.parseInt",
    "altair_transform.vegaexpr.peek",
    "altair_transform.vegaexpr.quantileLogNormal",
    "altair_transform.vegaexpr.quantileNormal",
    "altair_transform.vegaexpr.quantileUniform",
    "altair_transform.vegaexpr.quarter",
    "altair_transform.vegaexpr.random",
    "altair_transform.vegaexpr.regexp",
    "altair_transform.vegaexpr.replace",
    "altair_transform.vegaexpr.reverse",
    "altair_transform.vegaexpr.sampleLogNormal",
    "altair_transform.vegaexpr.sampleNormal",
    "altair_transform.vegaexpr.sampleUniform",
    "altair_transform.vegaexpr.seconds",
    "altair_transform.vegaexpr.sequence",
    "altair_transform.vegaexpr.slice_",
    "altair_transform.vegaexpr.span",
    "altair_transform.vegaexpr.split",
    "altair_transform.vegaexpr.substring",
    "altair_transform.vegaexpr.sys",
    "altair_transform.vegaexpr.test",
    "altair_transform.vegaexpr.time",
    "altair_transform.vegaexpr.timezoneoffset",
    "altair_transform.vegaexpr.toBoolean",
    "altair_transform.vegaexpr.toDate",
    "altair_transform.vegaexpr.toNumber",
    "altair_transform.vegaexpr.toString",
    "altair_transform.vegaexpr.trim",
    "altair_transform.vegaexpr.truncate",
    "altair_transform.vegaexpr.upper",
    "altair_transform.vegaexpr.utc",
    "altair_transform.vegaexpr.utcdate",
    "altair_transform.vegaexpr.utcday",
    "altair_transform.vegaexpr.utchours",
    "altair_transform.vegaexpr.utcmilliseconds",
    "altair_transform.vegaexpr.utcminutes",
    "altair_transform.vegaexpr.utcmonth",
    "altair_transform.vegaexpr.utcquarter",
    "altair_transform.vegaexpr.utcseconds",
    "altair_transform.vegaexpr.utcyear",
    "altair_transform.vegaexpr.vectorize",
    "altair_transform.vegaexpr.year",
    "max",
    "min",
    "numpy.abs",
    "numpy.arccos",
    "numpy.arcsin",
    "numpy.arctan",
    "numpy.arctan2",
    "numpy.ceil",
    "numpy.clip",
    "numpy.cos",
    "numpy.exp",
    "numpy.floor",
    "numpy.isfinite",
    "numpy.isnan",
    "numpy.log",
    "numpy.power",
    "numpy.round",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.tan",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "module"
 },
 "altair_transform.vegaexpr.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "altair_transform.vegaexpr.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "altair_transform.vegaexpr.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "altair_transform.vegaexpr.JSRegex": {
  "data": {
   "shadows": "altair_transform.utils.JSRegex"
  },
  "type": "import"
 },
 "altair_transform.vegaexpr.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "altair_transform.vegaexpr.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "altair_transform.vegaexpr.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "altair_transform.vegaexpr.clampRange": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "float",
    "max",
    "min",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.cumulativeLogNormal": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "float",
    "numpy.exp",
    "scipy.stats.lognorm"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.cumulativeNormal": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "float",
    "scipy.stats.norm"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.cumulativeUniform": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "float",
    "max",
    "min",
    "scipy.stats.uniform"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.date": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.datetime",
    "altair_transform.vegaexpr.vectorize",
    "int"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.datetime": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "ValueError",
    "altair_transform.vegaexpr.vectorize",
    "int",
    "len",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.day": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.datetime",
    "altair_transform.vegaexpr.vectorize",
    "int"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.dayAbbrevFormat": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.day",
    "altair_transform.vegaexpr.vectorize",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.dayFormat": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.day",
    "altair_transform.vegaexpr.vectorize",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.densityLogNormal": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "float",
    "numpy.exp",
    "scipy.stats.lognorm"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.densityNormal": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "float",
    "scipy.stats.norm"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.densityUniform": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "float",
    "max",
    "min",
    "scipy.stats.uniform"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.dt": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "altair_transform.vegaexpr.eval_vegajs": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "altair_transform.utils.evaljs",
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.evaljs": {
  "data": {
   "shadows": "altair_transform.utils.evaljs"
  },
  "type": "import"
 },
 "altair_transform.vegaexpr.extent": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.isValid",
    "altair_transform.vegaexpr.vectorize",
    "float",
    "max",
    "min",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.format": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "NotImplementedError",
    "altair_transform.vegaexpr.vectorize"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.hours": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.datetime",
    "altair_transform.vegaexpr.vectorize",
    "int"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.indexof": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "ValueError",
    "altair_transform.vegaexpr.vectorize",
    "int",
    "isinstance",
    "list",
    "str",
    "typing.Any",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.inrange": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "bool",
    "float",
    "max",
    "min",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.isArray": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "bool",
    "isinstance",
    "list",
    "numpy.ndarray",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.isBoolean": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "bool",
    "isinstance",
    "numpy.bool_",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.isDate": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "bool",
    "datetime.datetime",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.isDefined": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "altair_transform.utils.undefined",
    "altair_transform.vegaexpr.vectorize",
    "bool",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.isNumber": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "bool",
    "numpy.issubdtype",
    "numpy.number",
    "type",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.isObject": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "bool",
    "dict",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.isRegExp": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "altair_transform.utils.JSRegex",
    "altair_transform.vegaexpr.vectorize",
    "bool",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.isString": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "bool",
    "isinstance",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.isValid": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "altair_transform.utils.undefined",
    "altair_transform.vegaexpr.vectorize",
    "bool",
    "pandas.isna",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "altair_transform.vegaexpr.join": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "map",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.lastindexof": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "ValueError",
    "altair_transform.vegaexpr.vectorize",
    "int",
    "isinstance",
    "len",
    "list",
    "str",
    "typing.Any",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.length": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "int",
    "len",
    "list",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.lerp": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "float",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.lognorm": {
  "data": {
   "shadows": "scipy.stats.lognorm"
  },
  "type": "import"
 },
 "altair_transform.vegaexpr.lower": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "str"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "altair_transform.vegaexpr.merge": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "dict"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.milliseconds": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.datetime",
    "altair_transform.vegaexpr.vectorize",
    "float"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.minutes": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.datetime",
    "altair_transform.vegaexpr.vectorize",
    "int"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.month": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.datetime",
    "altair_transform.vegaexpr.vectorize",
    "int"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.monthAbbrevFormat": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.month",
    "altair_transform.vegaexpr.vectorize",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.monthFormat": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.month",
    "altair_transform.vegaexpr.vectorize",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.norm": {
  "data": {
   "shadows": "scipy.stats.norm"
  },
  "type": "import"
 },
 "altair_transform.vegaexpr.now": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "float",
    "round",
    "time.time"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "altair_transform.vegaexpr.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "altair_transform.vegaexpr.overload": {
  "data": {
   "shadows": "typing.overload"
  },
  "type": "import"
 },
 "altair_transform.vegaexpr.pad": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.length",
    "altair_transform.vegaexpr.vectorize",
    "int",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.parseFloat": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "ValueError",
    "altair_transform.vegaexpr.vectorize",
    "float",
    "len",
    "range",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.parseInt": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "ValueError",
    "altair_transform.vegaexpr.vectorize",
    "int",
    "len",
    "range",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "altair_transform.vegaexpr.peek": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.quantileLogNormal": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "float",
    "numpy.exp",
    "scipy.stats.lognorm"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.quantileNormal": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "float",
    "scipy.stats.norm"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.quantileUniform": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "float",
    "max",
    "min",
    "scipy.stats.uniform"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.quarter": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.datetime",
    "altair_transform.vegaexpr.vectorize",
    "int"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "altair_transform.vegaexpr.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "altair_transform.vegaexpr.regexp": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": [
    "altair_transform.utils.JSRegex",
    "str"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.replace": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "altair_transform.utils.JSRegex",
    "altair_transform.vegaexpr.vectorize",
    "isinstance",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.reverse": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.sampleLogNormal": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "float",
    "numpy.exp",
    "scipy.stats.lognorm"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.sampleNormal": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "float",
    "scipy.stats.norm"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.sampleUniform": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "float",
    "max",
    "min",
    "scipy.stats.uniform"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.seconds": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.datetime",
    "altair_transform.vegaexpr.vectorize",
    "int"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.sequence": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "float",
    "len",
    "numpy.arange",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.slice_": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "int",
    "list",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.span": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.split": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.substring": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "int",
    "len",
    "max",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "altair_transform.vegaexpr.test": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "altair_transform.utils.JSRegex",
    "altair_transform.vegaexpr.regexp",
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.time": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.datetime",
    "altair_transform.vegaexpr.vectorize",
    "float"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.timeFormat": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "NotImplementedError",
    "altair_transform.vegaexpr.vectorize"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.timeParse": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "NotImplementedError",
    "altair_transform.vegaexpr.vectorize"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.timemod": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "altair_transform.vegaexpr.timezoneoffset": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "NotImplementedError",
    "altair_transform.vegaexpr.vectorize"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.toBoolean": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "bool",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.toDate": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "float",
    "int",
    "isinstance",
    "pandas.to_datetime",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.toNumber": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "float",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.toString": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "float",
    "int",
    "isinstance",
    "str",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.trim": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "str"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.truncate": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.length",
    "altair_transform.vegaexpr.vectorize",
    "int",
    "len",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.tz": {
  "data": {
   "shadows": "dateutil.tz"
  },
  "type": "import"
 },
 "altair_transform.vegaexpr.undefined": {
  "data": {
   "shadows": "altair_transform.utils.undefined"
  },
  "type": "import"
 },
 "altair_transform.vegaexpr.uniform": {
  "data": {
   "shadows": "scipy.stats.uniform"
  },
  "type": "import"
 },
 "altair_transform.vegaexpr.upper": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.vectorize",
    "str"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.utc": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.datetime",
    "altair_transform.vegaexpr.day",
    "altair_transform.vegaexpr.month",
    "altair_transform.vegaexpr.vectorize",
    "altair_transform.vegaexpr.year",
    "float",
    "int",
    "min"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.utcFormat": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "NotImplementedError",
    "altair_transform.vegaexpr.vectorize"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.utcParse": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "NotImplementedError",
    "altair_transform.vegaexpr.vectorize"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.utcdate": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.date",
    "altair_transform.vegaexpr.datetime",
    "altair_transform.vegaexpr.vectorize",
    "dateutil.tz.tzutc",
    "int"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.utcday": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.datetime",
    "altair_transform.vegaexpr.day",
    "altair_transform.vegaexpr.vectorize",
    "dateutil.tz.tzutc",
    "int"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.utchours": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.datetime",
    "altair_transform.vegaexpr.hours",
    "altair_transform.vegaexpr.vectorize",
    "dateutil.tz.tzutc",
    "int"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.utcmilliseconds": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.datetime",
    "altair_transform.vegaexpr.milliseconds",
    "dateutil.tz.tzutc",
    "float"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.utcminutes": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.datetime",
    "altair_transform.vegaexpr.minutes",
    "altair_transform.vegaexpr.vectorize",
    "dateutil.tz.tzutc",
    "int"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.utcmonth": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.datetime",
    "altair_transform.vegaexpr.month",
    "altair_transform.vegaexpr.vectorize",
    "dateutil.tz.tzutc",
    "int"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.utcquarter": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.datetime",
    "altair_transform.vegaexpr.quarter",
    "altair_transform.vegaexpr.vectorize",
    "dateutil.tz.tzutc",
    "int"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.utcseconds": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.datetime",
    "altair_transform.vegaexpr.seconds",
    "altair_transform.vegaexpr.vectorize",
    "dateutil.tz.tzutc",
    "int"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.utcyear": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.datetime",
    "altair_transform.vegaexpr.vectorize",
    "altair_transform.vegaexpr.year",
    "dateutil.tz.tzutc",
    "int"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.vectorize": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "func",
    "func.__annotations__.items",
    "hasattr",
    "pandas.Series",
    "typing.Callable",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.vectorize.wrapper": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "_get",
    "altair_transform.vegaexpr.itertools",
    "altair_transform.vegaexpr.operator",
    "func",
    "functools.reduce",
    "functools.wraps",
    "isinstance",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.vectorize.wrapper._get": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.math",
    "isinstance",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "altair_transform.vegaexpr.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "altair_transform.vegaexpr.year": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "altair_transform.vegaexpr.datetime",
    "altair_transform.vegaexpr.vectorize",
    "int"
   ]
  },
  "type": "function"
 }
}