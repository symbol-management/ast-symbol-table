{
 "altair_transform": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "altair_transform.core": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "altair_transform.core.apply": {
  "lineno": 15,
  "symbols_in_volume": [
   "altair.Undefined",
   "altair_transform.transform.visit",
   "pandas.DataFrame",
   "typing.Any"
  ],
  "type": "function"
 },
 "altair_transform.core.extract_data": {
  "lineno": 51,
  "symbols_in_volume": [
   "altair.Chart",
   "altair_transform.extract.extract_transform",
   "altair_transform.utils.to_dataframe",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "altair_transform.core.transform_chart": {
  "lineno": 90,
  "symbols_in_volume": [
   "altair.Chart",
   "altair.Undefined",
   "altair_transform.extract.extract_transform"
  ],
  "type": "function"
 },
 "altair_transform.extract": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict",
   "typing.List"
  ],
  "type": "module"
 },
 "altair_transform.extract._encoding_to_transform": {
  "lineno": 69,
  "symbols_in_volume": [
   "collections.defaultdict",
   "copy.deepcopy",
   "typing.Dict",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "altair_transform.extract.extract_transform": {
  "lineno": 13,
  "symbols_in_volume": [
   "altair.Chart",
   "altair.FacetedEncoding.from_dict",
   "altair.Transform.from_dict",
   "altair.Undefined"
  ],
  "type": "function"
 },
 "altair_transform.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "altair_transform.tests.test_core": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "altair_transform.tests.test_core.chart": {
  "lineno": 22,
  "symbols_in_volume": [
   "altair.Chart",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "altair_transform.tests.test_core.data": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pandas.DataFrame",
   "pandas.date_range",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "altair_transform.tests.test_core.test_extract_data": {
  "lineno": 32,
  "symbols_in_volume": [
   "altair_transform.extract_data"
  ],
  "type": "function"
 },
 "altair_transform.tests.test_core.test_transform_chart": {
  "lineno": 40,
  "symbols_in_volume": [
   "altair.Undefined",
   "altair_transform.extract_data",
   "altair_transform.transform_chart"
  ],
  "type": "function"
 },
 "altair_transform.tests.test_core.test_transform_chart_with_aggregate": {
  "lineno": 55,
  "symbols_in_volume": [
   "altair.Chart",
   "altair_transform.transform_chart",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "altair_transform.tests.test_examples": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "altair_transform.tests.test_examples.readme": {
  "lineno": 7,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.exists",
   "os.path.join",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "altair_transform.tests.test_examples.test_readme_snippets": {
  "lineno": 24,
  "symbols_in_volume": [
   "re.DOTALL",
   "re.MULTILINE",
   "re.compile"
  ],
  "type": "function"
 },
 "altair_transform.tests.test_extract": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "altair_transform.tests.test_extract._TestCase": {
  "lineno": 7,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict",
   "typing.List",
   "typing.NamedTuple"
  ],
  "type": "class"
 },
 "altair_transform.tests.test_extract.test_extract_simple_aggregate": {
  "lineno": 13,
  "symbols_in_volume": [
   "altair_transform.extract._encoding_to_transform",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "altair_transform.tests.test_vegaexpr": {
  "lineno": null,
  "symbols_in_volume": [
   "altair_transform.vegaexpr.JSRegex",
   "altair_transform.vegaexpr.undefined",
   "datetime.datetime",
   "datetime.datetime.fromtimestamp",
   "numpy.e",
   "numpy.log",
   "numpy.log2",
   "numpy.pi",
   "numpy.sqrt"
  ],
  "type": "module"
 },
 "altair_transform.tests.test_vegaexpr.test_vegajs_expressions": {
  "lineno": 128,
  "symbols_in_volume": [
   "altair_transform.vegaexpr.eval_vegajs",
   "numpy.allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "altair_transform.transform": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "altair_transform.transform.aggregate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "altair_transform.transform.aggregate.confidence_interval": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.ndarray",
   "scipy.stats.t.interval"
  ],
  "type": "function"
 },
 "altair_transform.transform.aggregate.visit_aggregate": {
  "lineno": 7,
  "symbols_in_volume": [
   "altair.AggregateTransform",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "altair_transform.transform.bin": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "module"
 },
 "altair_transform.transform.bin._cut": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.Series",
   "pandas.cut"
  ],
  "type": "function"
 },
 "altair_transform.transform.bin.calculate_bins": {
  "lineno": 46,
  "symbols_in_volume": [
   "math.ceil",
   "math.floor",
   "math.log",
   "numpy.arange",
   "numpy.ndarray",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "altair_transform.transform.bin.visit_bin": {
  "lineno": 28,
  "symbols_in_volume": [
   "altair.BinTransform",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "altair_transform.transform.calculate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "altair_transform.transform.calculate.visit_calculate": {
  "lineno": 7,
  "symbols_in_volume": [
   "altair.CalculateTransform",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "altair_transform.transform.filter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "altair_transform.transform.filter.eval_datetime": {
  "lineno": 102,
  "symbols_in_volume": [
   "altair.DateTime",
   "pandas.Series"
  ],
  "type": "function"
 },
 "altair_transform.transform.filter.eval_dict": {
  "lineno": 29,
  "symbols_in_volume": [
   "altair.FilterTrasform",
   "functools.singledispatch",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "altair_transform.transform.filter.eval_field_equal": {
  "lineno": 40,
  "symbols_in_volume": [
   "altair.FieldEqualPredicate",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "altair_transform.transform.filter.eval_field_gt": {
  "lineno": 72,
  "symbols_in_volume": [
   "altair.FieldGTPredicate",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "altair_transform.transform.filter.eval_field_gte": {
  "lineno": 77,
  "symbols_in_volume": [
   "altair.FieldGTEPredicate",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "altair_transform.transform.filter.eval_field_lt": {
  "lineno": 62,
  "symbols_in_volume": [
   "altair.FieldLTPredicate",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "altair_transform.transform.filter.eval_field_lte": {
  "lineno": 67,
  "symbols_in_volume": [
   "altair.FieldLTEPredicate",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "altair_transform.transform.filter.eval_field_oneof": {
  "lineno": 56,
  "symbols_in_volume": [
   "altair.FieldOneOfPredicate",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "altair_transform.transform.filter.eval_field_range": {
  "lineno": 45,
  "symbols_in_volume": [
   "altair.FieldRangePredicate",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "altair_transform.transform.filter.eval_logical_and": {
  "lineno": 87,
  "symbols_in_volume": [
   "altair.LogicalAndPredicate",
   "numpy.logical_and.reduce",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "altair_transform.transform.filter.eval_logical_not": {
  "lineno": 82,
  "symbols_in_volume": [
   "altair.LogicalNotPredicate",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "altair_transform.transform.filter.eval_logical_or": {
  "lineno": 92,
  "symbols_in_volume": [
   "altair.LogicalOrPredicate",
   "numpy.logical_or.reduce",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "altair_transform.transform.filter.eval_predicate": {
  "lineno": 24,
  "symbols_in_volume": [
   "functools.singledispatch",
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Any"
  ],
  "type": "function"
 },
 "altair_transform.transform.filter.eval_schemabase": {
  "lineno": 108,
  "symbols_in_volume": [
   "altair.SchemaBase"
  ],
  "type": "function"
 },
 "altair_transform.transform.filter.eval_string": {
  "lineno": 35,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "altair_transform.transform.filter.eval_value": {
  "lineno": 97,
  "symbols_in_volume": [
   "functools.singledispatch",
   "typing.Any"
  ],
  "type": "function"
 },
 "altair_transform.transform.filter.get_column": {
  "lineno": 17,
  "symbols_in_volume": [
   "altair.Undefined",
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Any"
  ],
  "type": "function"
 },
 "altair_transform.transform.filter.visit_filter": {
  "lineno": 11,
  "symbols_in_volume": [
   "altair.FilterTransform",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "altair_transform.transform.flatten": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "altair_transform.transform.flatten.visit_flatten": {
  "lineno": 6,
  "symbols_in_volume": [
   "altair.FlattenTransform",
   "pandas.DataFrame",
   "pandas.concat"
  ],
  "type": "function"
 },
 "altair_transform.transform.flatten.visit_flatten.flatten_row": {
  "lineno": 24,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "altair_transform.transform.fold": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "altair_transform.transform.fold.visit_fold": {
  "lineno": 6,
  "symbols_in_volume": [
   "altair.FoldTransform",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "altair_transform.transform.impute": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "altair_transform.transform.impute.visit_impute": {
  "lineno": 7,
  "symbols_in_volume": [
   "altair.ImputeTransform",
   "numpy.arange",
   "numpy.concatenate",
   "numpy.sign",
   "numpy.sort",
   "numpy.unique",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "altair_transform.transform.impute.visit_impute._impute": {
  "lineno": 37,
  "symbols_in_volume": [
   "pandas.merge"
  ],
  "type": "function"
 },
 "altair_transform.transform.joinaggregate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "altair_transform.transform.joinaggregate.visit_joinaggregate": {
  "lineno": 7,
  "symbols_in_volume": [
   "altair.JoinAggregateTransform",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "altair_transform.transform.lookup": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "altair_transform.transform.lookup.visit_lookup": {
  "lineno": 9,
  "symbols_in_volume": [
   "altair.LookupTransform",
   "altair.Undefined",
   "pandas.DataFrame",
   "pandas.merge",
   "typing.Union"
  ],
  "type": "function"
 },
 "altair_transform.transform.sample": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "altair_transform.transform.sample.visit_sample": {
  "lineno": 7,
  "symbols_in_volume": [
   "altair.SampleTransform",
   "numpy.random.permutation",
   "numpy.sort",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "altair_transform.transform.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "altair_transform.transform.tests.test_transform": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "altair_transform.transform.tests.test_transform.data": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pandas.DataFrame",
   "pandas.date_range",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_aggregate_transform": {
  "lineno": 158,
  "symbols_in_volume": [
   "altair_transform.apply",
   "altair_transform.transform.aggregate.AGG_REPLACEMENTS.get",
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_bin_transform_maxbins": {
  "lineno": 278,
  "symbols_in_volume": [
   "altair_transform.apply",
   "numpy.arange",
   "numpy.sort",
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_bin_transform_simple": {
  "lineno": 267,
  "symbols_in_volume": [
   "altair_transform.apply"
  ],
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_bin_transform_step": {
  "lineno": 289,
  "symbols_in_volume": [
   "altair_transform.apply",
   "numpy.allclose",
   "numpy.arange",
   "numpy.sort",
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_bin_transform_steps": {
  "lineno": 300,
  "symbols_in_volume": [
   "altair_transform.apply",
   "numpy.sort",
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_calculate_transform": {
  "lineno": 72,
  "symbols_in_volume": [
   "altair_transform.apply"
  ],
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_filter_transform": {
  "lineno": 82,
  "symbols_in_volume": [
   "altair_transform.apply",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_flatten_transform": {
  "lineno": 89,
  "symbols_in_volume": [
   "altair_transform.apply",
   "numpy.nan",
   "numpy.testing.assert_equal",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_flatten_transform_with_as": {
  "lineno": 112,
  "symbols_in_volume": [
   "altair.__version__",
   "altair_transform.apply",
   "distutils.version.LooseVersion",
   "numpy.nan",
   "numpy.testing.assert_equal",
   "pandas.DataFrame",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_fold_transform": {
  "lineno": 139,
  "symbols_in_volume": [
   "altair_transform.apply",
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_impute_transform_no_groupby": {
  "lineno": 182,
  "symbols_in_volume": [
   "altair.ImputeTransform",
   "altair_transform.apply",
   "numpy.testing.assert_equal",
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_impute_transform_with_groupby": {
  "lineno": 199,
  "symbols_in_volume": [
   "altair.ImputeTransform",
   "altair_transform.apply",
   "numpy.testing.assert_equal",
   "numpy.tile",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_joinaggregate_transform": {
  "lineno": 211,
  "symbols_in_volume": [
   "altair_transform.apply",
   "altair_transform.transform.aggregate.AGG_REPLACEMENTS.get",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_joinaggregate_transform.validate": {
  "lineno": 225,
  "symbols_in_volume": [
   "numpy.allclose"
  ],
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_lookup_transform": {
  "lineno": 234,
  "symbols_in_volume": [
   "altair.utils.data.to_values",
   "altair_transform.apply",
   "pandas.DataFrame",
   "pandas.merge",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_lookup_transform_default": {
  "lineno": 248,
  "symbols_in_volume": [
   "altair.utils.data.to_values",
   "altair_transform.apply",
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_multiple_transforms": {
  "lineno": 356,
  "symbols_in_volume": [
   "altair_transform.apply"
  ],
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_sample_transform": {
  "lineno": 310,
  "symbols_in_volume": [
   "altair_transform.apply",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_timeunit_transform": {
  "lineno": 322,
  "symbols_in_volume": [
   "altair_transform.apply",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_window_transform_basic": {
  "lineno": 328,
  "symbols_in_volume": [
   "altair_transform.apply"
  ],
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_window_transform_grouped": {
  "lineno": 345,
  "symbols_in_volume": [
   "altair_transform.apply"
  ],
  "type": "function"
 },
 "altair_transform.transform.tests.test_transform.test_window_transform_sorted": {
  "lineno": 335,
  "symbols_in_volume": [
   "altair_transform.apply"
  ],
  "type": "function"
 },
 "altair_transform.transform.timeunit": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "altair_transform.transform.timeunit.visit_timeunit": {
  "lineno": 7,
  "symbols_in_volume": [
   "altair.TimeUnitTransform",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "altair_transform.transform.visitor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "altair_transform.transform.visitor.visit": {
  "lineno": 8,
  "symbols_in_volume": [
   "functools.singledispatch",
   "pandas.DataFrame",
   "typing.Any"
  ],
  "type": "function"
 },
 "altair_transform.transform.visitor.visit_dict": {
  "lineno": 20,
  "symbols_in_volume": [
   "altair.Transform.from_dict",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "altair_transform.transform.visitor.visit_list": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "altair_transform.transform.window": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "module"
 },
 "altair_transform.transform.window.visit_window": {
  "lineno": 9,
  "symbols_in_volume": [
   "altair.WindowTransform",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "altair_transform.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "altair_transform.utils._evaljs": {
  "lineno": null,
  "symbols_in_volume": [
   "operator.add",
   "operator.and_",
   "operator.eq",
   "operator.ge",
   "operator.gt",
   "operator.inv",
   "operator.le",
   "operator.lshift",
   "operator.lt",
   "operator.mod",
   "operator.mul",
   "operator.ne",
   "operator.neg",
   "operator.not_",
   "operator.or_",
   "operator.pos",
   "operator.pow",
   "operator.rshift",
   "operator.sub",
   "operator.truediv",
   "operator.xor"
  ],
  "type": "module"
 },
 "altair_transform.utils._evaljs.JSRegex": {
  "lineno": 20,
  "symbols_in_volume": [
   "re.I",
   "re.M",
   "re.RegexFlag",
   "re.S",
   "re.U",
   "typing.Dict"
  ],
  "type": "class"
 },
 "altair_transform.utils._evaljs.JSRegex.__eq__": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.utils._evaljs.JSRegex.__init__": {
  "lineno": 28,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "altair_transform.utils._evaljs.JSRegex._reflags": {
  "lineno": 37,
  "symbols_in_volume": [
   "re.RegexFlag"
  ],
  "type": "function"
 },
 "altair_transform.utils._evaljs.JSRegex.replace": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.utils._evaljs.JSRegex.test": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.utils._evaljs._UndefinedType": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "altair_transform.utils._evaljs._UndefinedType.__repr__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.utils._evaljs._visit_attr": {
  "lineno": 144,
  "symbols_in_volume": [
   "altair_transform.utils.ast.Attr",
   "typing.Any"
  ],
  "type": "function"
 },
 "altair_transform.utils._evaljs._visit_binop": {
  "lineno": 75,
  "symbols_in_volume": [
   "altair_transform.utils.ast.BinOp",
   "typing.Any"
  ],
  "type": "function"
 },
 "altair_transform.utils._evaljs._visit_expr": {
  "lineno": 70,
  "symbols_in_volume": [
   "altair_transform.utils.ast.Expr",
   "typing.Any"
  ],
  "type": "function"
 },
 "altair_transform.utils._evaljs._visit_func": {
  "lineno": 166,
  "symbols_in_volume": [
   "altair_transform.utils.ast.Func",
   "typing.Any"
  ],
  "type": "function"
 },
 "altair_transform.utils._evaljs._visit_global": {
  "lineno": 116,
  "symbols_in_volume": [
   "altair_transform.utils.ast.Global",
   "typing.Any"
  ],
  "type": "function"
 },
 "altair_transform.utils._evaljs._visit_item": {
  "lineno": 154,
  "symbols_in_volume": [
   "altair_transform.utils.ast.Item",
   "typing.Any"
  ],
  "type": "function"
 },
 "altair_transform.utils._evaljs._visit_list": {
  "lineno": 128,
  "symbols_in_volume": [
   "altair_transform.utils.ast.List",
   "typing.List"
  ],
  "type": "function"
 },
 "altair_transform.utils._evaljs._visit_name": {
  "lineno": 123,
  "symbols_in_volume": [
   "altair_transform.utils.ast.Name"
  ],
  "type": "function"
 },
 "altair_transform.utils._evaljs._visit_number": {
  "lineno": 101,
  "symbols_in_volume": [
   "altair_transform.utils.ast.Number",
   "typing.Any"
  ],
  "type": "function"
 },
 "altair_transform.utils._evaljs._visit_object": {
  "lineno": 133,
  "symbols_in_volume": [
   "altair_transform.utils.ast.Object",
   "typing.Any"
  ],
  "type": "function"
 },
 "altair_transform.utils._evaljs._visit_object._visit": {
  "lineno": 135,
  "symbols_in_volume": [
   "altair_transform.utils.ast.Global",
   "altair_transform.utils.ast.Name"
  ],
  "type": "function"
 },
 "altair_transform.utils._evaljs._visit_regex": {
  "lineno": 111,
  "symbols_in_volume": [
   "altair_transform.utils.ast.Regex"
  ],
  "type": "function"
 },
 "altair_transform.utils._evaljs._visit_string": {
  "lineno": 106,
  "symbols_in_volume": [
   "altair_transform.utils.ast.String",
   "typing.Any"
  ],
  "type": "function"
 },
 "altair_transform.utils._evaljs._visit_ternop": {
  "lineno": 91,
  "symbols_in_volume": [
   "altair_transform.utils.ast.TernOp",
   "typing.Any"
  ],
  "type": "function"
 },
 "altair_transform.utils._evaljs._visit_unop": {
  "lineno": 83,
  "symbols_in_volume": [
   "altair_transform.utils.ast.UnOp",
   "typing.Any"
  ],
  "type": "function"
 },
 "altair_transform.utils._evaljs.evaljs": {
  "lineno": 57,
  "symbols_in_volume": [
   "altair_transform.utils.Parser",
   "altair_transform.utils.ast.Expr",
   "typing.Any",
   "typing.Union"
  ],
  "type": "function"
 },
 "altair_transform.utils._evaljs.int_inputs": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.utils._evaljs.int_inputs.wrapper": {
  "lineno": 174,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "altair_transform.utils._evaljs.visit": {
  "lineno": 65,
  "symbols_in_volume": [
   "functools.singledispatch",
   "typing.Any"
  ],
  "type": "function"
 },
 "altair_transform.utils._evaljs.zerofill_rshift": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.utils._parser": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "altair_transform.utils._parser.Parser": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "class"
 },
 "altair_transform.utils._parser.Parser.p_arglist": {
  "lineno": 351,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_atom": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_attraccess": {
  "lineno": 333,
  "symbols_in_volume": [
   "altair_transform.utils.ast.Attr"
  ],
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_error": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_expression_atom": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_expression_binop": {
  "lineno": 195,
  "symbols_in_volume": [
   "altair_transform.utils.ast.BinOp"
  ],
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_expression_ternary": {
  "lineno": 222,
  "symbols_in_volume": [
   "altair_transform.utils.ast.TernOp"
  ],
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_expression_unaryop": {
  "lineno": 226,
  "symbols_in_volume": [
   "altair_transform.utils.ast.UnOp"
  ],
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_functioncall": {
  "lineno": 341,
  "symbols_in_volume": [
   "altair_transform.utils.ast.Func"
  ],
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_global": {
  "lineno": 273,
  "symbols_in_volume": [
   "altair_transform.utils.ast.Global"
  ],
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_group": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_indexing": {
  "lineno": 337,
  "symbols_in_volume": [
   "altair_transform.utils.ast.Item"
  ],
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_list": {
  "lineno": 281,
  "symbols_in_volume": [
   "altair_transform.utils.ast.List"
  ],
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_name": {
  "lineno": 277,
  "symbols_in_volume": [
   "altair_transform.utils.ast.Name"
  ],
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_number": {
  "lineno": 256,
  "symbols_in_volume": [
   "altair_transform.utils.ast.Number"
  ],
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_object": {
  "lineno": 291,
  "symbols_in_volume": [
   "altair_transform.utils.ast.Object"
  ],
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_objectarg": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_objectarglist": {
  "lineno": 301,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_objectkey": {
  "lineno": 321,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_regex": {
  "lineno": 269,
  "symbols_in_volume": [
   "altair_transform.utils.ast.Regex"
  ],
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.p_string": {
  "lineno": 265,
  "symbols_in_volume": [
   "altair_transform.utils.ast.String"
  ],
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.t_BINARY": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.t_FLOAT": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.t_HEX": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.t_OCTAL": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.t_REGEX": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.t_STRING": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.t_error": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.utils._parser.Parser.t_newline": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.utils._parser.ParserBase": {
  "lineno": 18,
  "symbols_in_volume": [
   "typing.Tuple"
  ],
  "type": "class"
 },
 "altair_transform.utils._parser.ParserBase.__init__": {
  "lineno": 26,
  "symbols_in_volume": [
   "os.path.split",
   "os.path.splitext",
   "ply.lex.lex",
   "ply.yacc.yacc"
  ],
  "type": "function"
 },
 "altair_transform.utils._parser.ParserBase.parse": {
  "lineno": 48,
  "symbols_in_volume": [
   "ply.yacc.parse"
  ],
  "type": "function"
 },
 "altair_transform.utils._parser_Parser_parsetab": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "altair_transform.utils.ast": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "altair_transform.utils.ast.Attr": {
  "lineno": 71,
  "symbols_in_volume": [
   "dataclasses.dataclass"
  ],
  "type": "class"
 },
 "altair_transform.utils.ast.BinOp": {
  "lineno": 15,
  "symbols_in_volume": [
   "dataclasses.dataclass"
  ],
  "type": "class"
 },
 "altair_transform.utils.ast.Expr": {
  "lineno": 10,
  "symbols_in_volume": [
   "dataclasses.dataclass"
  ],
  "type": "class"
 },
 "altair_transform.utils.ast.Func": {
  "lineno": 83,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "typing.List"
  ],
  "type": "class"
 },
 "altair_transform.utils.ast.Global": {
  "lineno": 51,
  "symbols_in_volume": [
   "dataclasses.dataclass"
  ],
  "type": "class"
 },
 "altair_transform.utils.ast.Item": {
  "lineno": 77,
  "symbols_in_volume": [
   "dataclasses.dataclass"
  ],
  "type": "class"
 },
 "altair_transform.utils.ast.List": {
  "lineno": 61,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "typing.List"
  ],
  "type": "class"
 },
 "altair_transform.utils.ast.Name": {
  "lineno": 56,
  "symbols_in_volume": [
   "dataclasses.dataclass"
  ],
  "type": "class"
 },
 "altair_transform.utils.ast.Node": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "altair_transform.utils.ast.Number": {
  "lineno": 36,
  "symbols_in_volume": [
   "dataclasses.dataclass"
  ],
  "type": "class"
 },
 "altair_transform.utils.ast.Object": {
  "lineno": 66,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "typing.List",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "class"
 },
 "altair_transform.utils.ast.Regex": {
  "lineno": 46,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "typing.Dict"
  ],
  "type": "class"
 },
 "altair_transform.utils.ast.String": {
  "lineno": 41,
  "symbols_in_volume": [
   "dataclasses.dataclass"
  ],
  "type": "class"
 },
 "altair_transform.utils.ast.TernOp": {
  "lineno": 28,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "altair_transform.utils.ast.UnOp": {
  "lineno": 22,
  "symbols_in_volume": [
   "dataclasses.dataclass"
  ],
  "type": "class"
 },
 "altair_transform.utils.data": {
  "lineno": null,
  "symbols_in_volume": [
   "altair.SchemaBase",
   "pandas.DataFrame",
   "typing.Union"
  ],
  "type": "module"
 },
 "altair_transform.utils.data.to_dataframe": {
  "lineno": 11,
  "symbols_in_volume": [
   "altair.Data.from_dict",
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.read_csv",
   "pandas.read_json",
   "typing.Optional"
  ],
  "type": "function"
 },
 "altair_transform.utils.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "altair_transform.utils.tests._testcases": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.reduce",
   "operator.mul"
  ],
  "type": "module"
 },
 "altair_transform.utils.tests._testcases.Bunch": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "altair_transform.utils.tests._testcases.Bunch.__getitem__": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.utils.tests._testcases.Bunch.__init__": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.utils.tests._testcases.extract": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.utils.tests.test_data": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "altair_transform.utils.tests.test_data.chart": {
  "lineno": 44,
  "symbols_in_volume": [
   "altair.Chart",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "altair_transform.utils.tests.test_data.csv_data": {
  "lineno": 15,
  "symbols_in_volume": [
   "pytest.fixture",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "altair_transform.utils.tests.test_data.df": {
  "lineno": 10,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "altair_transform.utils.tests.test_data.inline_data": {
  "lineno": 29,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "altair_transform.utils.tests.test_data.json_data": {
  "lineno": 22,
  "symbols_in_volume": [
   "pytest.fixture",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "altair_transform.utils.tests.test_data.named_data": {
  "lineno": 34,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "altair_transform.utils.tests.test_data.sequence_data": {
  "lineno": 39,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "altair_transform.utils.tests.test_data.test_csv_to_dataframe": {
  "lineno": 53,
  "symbols_in_volume": [
   "altair.Data",
   "altair_transform.utils.to_dataframe",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "altair_transform.utils.tests.test_data.test_inline_to_dataframe": {
  "lineno": 65,
  "symbols_in_volume": [
   "altair.Data",
   "altair_transform.utils.to_dataframe",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "altair_transform.utils.tests.test_data.test_json_to_dataframe": {
  "lineno": 59,
  "symbols_in_volume": [
   "altair.Data",
   "altair_transform.utils.to_dataframe",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "altair_transform.utils.tests.test_data.test_named_to_dataframe": {
  "lineno": 71,
  "symbols_in_volume": [
   "altair.Data",
   "altair_transform.utils.to_dataframe",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "altair_transform.utils.tests.test_data.test_sequence_to_dataframe": {
  "lineno": 77,
  "symbols_in_volume": [
   "altair.Data",
   "altair_transform.utils.to_dataframe",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "altair_transform.utils.tests.test_evaljs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "altair_transform.utils.tests.test_evaljs.names": {
  "lineno": 8,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "altair_transform.utils.tests.test_evaljs.test_expressions": {
  "lineno": 13,
  "symbols_in_volume": [
   "altair_transform.utils.evaljs",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "altair_transform.utils.tests.test_evaljs.test_jsonly_expressions": {
  "lineno": 18,
  "symbols_in_volume": [
   "altair_transform.utils.evaljs",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "altair_transform.utils.tests.test_evaljs.test_string_vs_ast": {
  "lineno": 23,
  "symbols_in_volume": [
   "altair_transform.utils.evaljs",
   "altair_transform.utils.parser.parse"
  ],
  "type": "function"
 },
 "altair_transform.utils.tests.test_parser": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "altair_transform.utils.tests.test_parser.parser": {
  "lineno": 8,
  "symbols_in_volume": [
   "altair_transform.utils.Parser",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "altair_transform.utils.tests.test_parser.test_bad_expressions": {
  "lineno": 13,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "altair_transform.utils.tests.test_parser.test_expressions": {
  "lineno": 19,
  "symbols_in_volume": [
   "altair_transform.utils.ast.Node",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "altair_transform.utils.tests.test_parser.test_jsonly_expressions": {
  "lineno": 25,
  "symbols_in_volume": [
   "altair_transform.utils.ast.Node",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "altair_transform.utils.tests.test_timeunit": {
  "lineno": null,
  "symbols_in_volume": [
   "dateutil.tz.tzlocal"
  ],
  "type": "module"
 },
 "altair_transform.utils.tests.test_timeunit.dates": {
  "lineno": 38,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "altair_transform.utils.tests.test_timeunit.test_all_timeunits": {
  "lineno": 60,
  "symbols_in_volume": [
   "altair_transform.utils.timeunit.compute_timeunit",
   "dateutil.tz.tzlocal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "altair_transform.utils.tests.test_timeunit.test_timeunit_input_types": {
  "lineno": 44,
  "symbols_in_volume": [
   "altair_transform.utils.timeunit.compute_timeunit",
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.Timestamp",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "altair_transform.utils.timeunit": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.Timestamp",
   "re.compile",
   "typing.Union"
  ],
  "type": "module"
 },
 "altair_transform.utils.timeunit._compute_timeunit": {
  "lineno": 67,
  "symbols_in_volume": [
   "pandas.DatetimeIndex",
   "pandas.to_datetime",
   "pandas.to_timedelta"
  ],
  "type": "function"
 },
 "altair_transform.utils.timeunit._compute_timeunit.quarter": {
  "lineno": 79,
  "symbols_in_volume": [
   "pandas.Int64Index"
  ],
  "type": "function"
 },
 "altair_transform.utils.timeunit._parse_timeunit_string": {
  "lineno": 59,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "altair_transform.utils.timeunit.compute_timeunit": {
  "lineno": 12,
  "symbols_in_volume": [
   "dateutil.tz.tzlocal",
   "pandas.DatetimeIndex",
   "pandas.Series",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "altair_transform.utils.timeunit.compute_timeunit.dt": {
  "lineno": 28,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr": {
  "lineno": null,
  "symbols_in_volume": [
   "datetime",
   "math.e",
   "math.log",
   "math.log10",
   "math.log2",
   "math.nan",
   "math.pi",
   "math.sqrt",
   "numpy.abs",
   "numpy.arccos",
   "numpy.arcsin",
   "numpy.arctan",
   "numpy.arctan2",
   "numpy.ceil",
   "numpy.clip",
   "numpy.cos",
   "numpy.exp",
   "numpy.floor",
   "numpy.isfinite",
   "numpy.isnan",
   "numpy.log",
   "numpy.power",
   "numpy.round",
   "numpy.sin",
   "numpy.sqrt",
   "numpy.tan",
   "random.random",
   "sys.float_info.max",
   "sys.float_info.min",
   "time",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "module"
 },
 "altair_transform.vegaexpr.clampRange": {
  "lineno": 869,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.cumulativeLogNormal": {
  "lineno": 768,
  "symbols_in_volume": [
   "numpy.exp",
   "scipy.stats.lognorm"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.cumulativeNormal": {
  "lineno": 718,
  "symbols_in_volume": [
   "scipy.stats.norm"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.cumulativeUniform": {
  "lineno": 819,
  "symbols_in_volume": [
   "scipy.stats.uniform"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.date": {
  "lineno": 240,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.day"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.datetime": {
  "lineno": 212,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.datetime.fromtimestamp",
   "datetime.datetime.now"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.day": {
  "lineno": 248,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.weekday"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.dayAbbrevFormat": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.vegaexpr.dayFormat": {
  "lineno": 406,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.vegaexpr.densityLogNormal": {
  "lineno": 781,
  "symbols_in_volume": [
   "numpy.exp",
   "scipy.stats.lognorm"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.densityNormal": {
  "lineno": 731,
  "symbols_in_volume": [
   "scipy.stats.norm"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.densityUniform": {
  "lineno": 832,
  "symbols_in_volume": [
   "scipy.stats.uniform"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.eval_vegajs": {
  "lineno": 21,
  "symbols_in_volume": [
   "altair_transform.utils.evaljs",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.extent": {
  "lineno": 859,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.format": {
  "lineno": 434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.vegaexpr.hours": {
  "lineno": 279,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.hour"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.indexof": {
  "lineno": 505,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Union"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.inrange": {
  "lineno": 890,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.isArray": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.ndarray",
   "typing.Any"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.isBoolean": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.bool_",
   "typing.Any"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.isDate": {
  "lineno": 75,
  "symbols_in_volume": [
   "datetime.datetime",
   "typing.Any"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.isDefined": {
  "lineno": 85,
  "symbols_in_volume": [
   "altair_transform.utils.undefined",
   "typing.Any"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.isNumber": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.issubdtype",
   "numpy.number",
   "typing.Any"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.isObject": {
  "lineno": 104,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.isRegExp": {
  "lineno": 113,
  "symbols_in_volume": [
   "altair_transform.utils.JSRegex",
   "typing.Any"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.isString": {
  "lineno": 122,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.isValid": {
  "lineno": 128,
  "symbols_in_volume": [
   "altair_transform.utils.undefined",
   "pandas.isna",
   "typing.Any"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.join": {
  "lineno": 899,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.lastindexof": {
  "lineno": 521,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Union"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.length": {
  "lineno": 537,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.lerp": {
  "lineno": 908,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.lower": {
  "lineno": 543,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.vegaexpr.merge": {
  "lineno": 696,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.vegaexpr.milliseconds": {
  "lineno": 303,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.microsecond"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.minutes": {
  "lineno": 287,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.minute"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.month": {
  "lineno": 271,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.month"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.monthAbbrevFormat": {
  "lineno": 460,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.vegaexpr.monthFormat": {
  "lineno": 440,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.vegaexpr.now": {
  "lineno": 184,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.pad": {
  "lineno": 549,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.vegaexpr.parseFloat": {
  "lineno": 572,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.parseInt": {
  "lineno": 590,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.peek": {
  "lineno": 918,
  "symbols_in_volume": [
   "typing.Any",
   "typing.List"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.quantileLogNormal": {
  "lineno": 794,
  "symbols_in_volume": [
   "numpy.exp",
   "scipy.stats.lognorm"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.quantileNormal": {
  "lineno": 743,
  "symbols_in_volume": [
   "scipy.stats.norm"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.quantileUniform": {
  "lineno": 845,
  "symbols_in_volume": [
   "scipy.stats.uniform"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.quarter": {
  "lineno": 262,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.month"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.regexp": {
  "lineno": 982,
  "symbols_in_volume": [
   "altair_transform.utils.JSRegex"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.replace": {
  "lineno": 609,
  "symbols_in_volume": [
   "altair_transform.utils.JSRegex",
   "typing.Union"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.reverse": {
  "lineno": 928,
  "symbols_in_volume": [
   "typing.Any",
   "typing.List"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.sampleLogNormal": {
  "lineno": 756,
  "symbols_in_volume": [
   "numpy.exp",
   "scipy.stats.lognorm"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.sampleNormal": {
  "lineno": 706,
  "symbols_in_volume": [
   "scipy.stats.norm"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.sampleUniform": {
  "lineno": 807,
  "symbols_in_volume": [
   "scipy.stats.uniform"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.seconds": {
  "lineno": 295,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.second"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.sequence": {
  "lineno": 948,
  "symbols_in_volume": [
   "numpy.arange",
   "typing.List"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.slice_": {
  "lineno": 623,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.span": {
  "lineno": 972,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.vegaexpr.split": {
  "lineno": 638,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.vegaexpr.substring": {
  "lineno": 648,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.test": {
  "lineno": 990,
  "symbols_in_volume": [
   "altair_transform.utils.JSRegex"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.time": {
  "lineno": 312,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timestamp"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.timeFormat": {
  "lineno": 480,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.vegaexpr.timeParse": {
  "lineno": 486,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.vegaexpr.timezoneoffset": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.vegaexpr.toBoolean": {
  "lineno": 135,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.toDate": {
  "lineno": 144,
  "symbols_in_volume": [
   "pandas.to_datetime",
   "typing.Any",
   "typing.Optional"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.toNumber": {
  "lineno": 159,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Optional"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.toString": {
  "lineno": 170,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Optional"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.trim": {
  "lineno": 658,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.vegaexpr.truncate": {
  "lineno": 664,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.vegaexpr.upper": {
  "lineno": 689,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.vegaexpr.utc": {
  "lineno": 324,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timezone.utc"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.utcFormat": {
  "lineno": 492,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.vegaexpr.utcParse": {
  "lineno": 498,
  "symbols_in_volume": [],
  "type": "function"
 },
 "altair_transform.vegaexpr.utcdate": {
  "lineno": 353,
  "symbols_in_volume": [
   "datetime.astimezone",
   "datetime.datetime",
   "dateutil.tz.tzutc"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.utcday": {
  "lineno": 359,
  "symbols_in_volume": [
   "datetime.astimezone",
   "datetime.datetime",
   "dateutil.tz.tzutc"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.utchours": {
  "lineno": 383,
  "symbols_in_volume": [
   "datetime.astimezone",
   "datetime.datetime",
   "dateutil.tz.tzutc"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.utcmilliseconds": {
  "lineno": 401,
  "symbols_in_volume": [
   "datetime.astimezone",
   "datetime.datetime",
   "dateutil.tz.tzutc"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.utcminutes": {
  "lineno": 389,
  "symbols_in_volume": [
   "datetime.astimezone",
   "datetime.datetime",
   "dateutil.tz.tzutc"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.utcmonth": {
  "lineno": 377,
  "symbols_in_volume": [
   "datetime.astimezone",
   "datetime.datetime",
   "dateutil.tz.tzutc"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.utcquarter": {
  "lineno": 371,
  "symbols_in_volume": [
   "datetime.astimezone",
   "datetime.datetime",
   "dateutil.tz.tzutc"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.utcseconds": {
  "lineno": 395,
  "symbols_in_volume": [
   "datetime.astimezone",
   "datetime.datetime",
   "dateutil.tz.tzutc"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.utcyear": {
  "lineno": 365,
  "symbols_in_volume": [
   "datetime.astimezone",
   "datetime.datetime",
   "dateutil.tz.tzutc"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.vectorize": {
  "lineno": 28,
  "symbols_in_volume": [
   "pandas.Series",
   "typing.Callable",
   "typing.Union"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.vectorize.wrapper": {
  "lineno": 29,
  "symbols_in_volume": [
   "functools.reduce",
   "functools.wraps",
   "itertools.chain",
   "operator.or_",
   "pandas.Series"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.vectorize.wrapper._get": {
  "lineno": 41,
  "symbols_in_volume": [
   "math.nan",
   "pandas.Series"
  ],
  "type": "function"
 },
 "altair_transform.vegaexpr.year": {
  "lineno": 256,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.year"
  ],
  "type": "function"
 }
}