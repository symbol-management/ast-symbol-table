{
 "*": {
  "data": {
   "imports": [
    "graspy.datasets"
   ]
  },
  "type": "star-import"
 },
 "graspy": {
  "data": {
   "symbols_in_volume": [
    "PendingDeprecationWarning",
    "RuntimeWarning",
    "UserWarning",
    "graspy.warnings"
   ]
  },
  "type": "module"
 },
 "graspy.__version__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "graspy.cluster": {
  "data": {},
  "type": "module"
 },
 "graspy.cluster.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "graspy.cluster.autogmm": {
  "data": {},
  "type": "module"
 },
 "graspy.cluster.autogmm.AgglomerativeClustering": {
  "data": {
   "shadows": "sklearn.cluster.AgglomerativeClustering"
  },
  "type": "import"
 },
 "graspy.cluster.autogmm.AutoGMMCluster": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "graspy.cluster.autogmm.AutoGMMCluster.__init__": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "list",
    "numpy.argwhere",
    "numpy.array",
    "numpy.copy",
    "numpy.ndarray",
    "numpy.size",
    "numpy.unique",
    "range",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "graspy.cluster.autogmm.AutoGMMCluster._fit_cluster": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "any",
    "float",
    "graspy.cluster.autogmm._increase_reg",
    "graspy.cluster.autogmm._labels_to_onehot",
    "graspy.cluster.autogmm._onehot_to_initial_params",
    "numpy.arange",
    "numpy.inf",
    "numpy.random.choice",
    "range",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.metrics.adjusted_rand_score",
    "sklearn.mixture.GaussianMixture",
    "sum"
   ]
  },
  "type": "function"
 },
 "graspy.cluster.autogmm.AutoGMMCluster.fit": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "graspy.cluster.autogmm._process_paramgrid",
    "joblib.Parallel",
    "joblib.delayed",
    "list",
    "numpy.any",
    "numpy.where",
    "pandas.DataFrame",
    "range",
    "sklearn.model_selection.ParameterGrid"
   ]
  },
  "type": "function"
 },
 "graspy.cluster.autogmm.AutoGMMCluster.fit._fit_for_data": {
  "data": {
   "lineno": 528
  },
  "type": "function"
 },
 "graspy.cluster.autogmm.GaussianMixture": {
  "data": {
   "shadows": "sklearn.mixture.GaussianMixture"
  },
  "type": "import"
 },
 "graspy.cluster.autogmm.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "graspy.cluster.autogmm.ParameterGrid": {
  "data": {
   "shadows": "sklearn.model_selection.ParameterGrid"
  },
  "type": "import"
 },
 "graspy.cluster.autogmm._compute_precision_cholesky": {
  "data": {
   "shadows": "sklearn.mixture.gaussian_mixture._compute_precision_cholesky"
  },
  "type": "import"
 },
 "graspy.cluster.autogmm._estimate_gaussian_parameters": {
  "data": {
   "shadows": "sklearn.mixture.gaussian_mixture._estimate_gaussian_parameters"
  },
  "type": "import"
 },
 "graspy.cluster.autogmm._increase_reg": {
  "data": {
   "lineno": 553
  },
  "type": "function"
 },
 "graspy.cluster.autogmm._labels_to_onehot": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "len",
    "max",
    "numpy.arange",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "graspy.cluster.autogmm._onehot_to_initial_params": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "numpy.dot",
    "sklearn.mixture.gaussian_mixture._compute_precision_cholesky",
    "sklearn.mixture.gaussian_mixture._estimate_gaussian_parameters"
   ]
  },
  "type": "function"
 },
 "graspy.cluster.autogmm._process_paramgrid": {
  "data": {
   "lineno": 630
  },
  "type": "function"
 },
 "graspy.cluster.autogmm.adjusted_rand_score": {
  "data": {
   "shadows": "sklearn.metrics.adjusted_rand_score"
  },
  "type": "import"
 },
 "graspy.cluster.autogmm.delayed": {
  "data": {
   "shadows": "joblib.delayed"
  },
  "type": "import"
 },
 "graspy.cluster.autogmm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "graspy.cluster.autogmm.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "graspy.cluster.base": {
  "data": {},
  "type": "module"
 },
 "graspy.cluster.base.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "graspy.cluster.base.BaseCluster": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "abc.ABC",
    "sklearn.base.BaseEstimator",
    "sklearn.base.ClusterMixin"
   ]
  },
  "type": "class"
 },
 "graspy.cluster.base.BaseCluster.fit": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "graspy.cluster.base.BaseCluster.fit_predict": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "graspy.cluster.base.BaseCluster.predict": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "all",
    "sklearn.metrics.adjusted_rand_score",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "graspy.cluster.base.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "graspy.cluster.base.ClusterMixin": {
  "data": {
   "shadows": "sklearn.base.ClusterMixin"
  },
  "type": "import"
 },
 "graspy.cluster.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "graspy.cluster.base.adjusted_rand_score": {
  "data": {
   "shadows": "sklearn.metrics.adjusted_rand_score"
  },
  "type": "import"
 },
 "graspy.cluster.base.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "graspy.cluster.gclust": {
  "data": {},
  "type": "module"
 },
 "graspy.cluster.gclust.GaussianCluster": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "graspy.cluster.gclust.GaussianCluster.__init__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "list",
    "numpy.ndarray",
    "numpy.unique",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "graspy.cluster.gclust.GaussianCluster.fit": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "enumerate",
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "range",
    "sklearn.metrics.adjusted_rand_score",
    "sklearn.mixture.GaussianMixture",
    "sklearn.model_selection.ParameterGrid"
   ]
  },
  "type": "function"
 },
 "graspy.cluster.gclust.GaussianMixture": {
  "data": {
   "shadows": "sklearn.mixture.GaussianMixture"
  },
  "type": "import"
 },
 "graspy.cluster.gclust.ParameterGrid": {
  "data": {
   "shadows": "sklearn.model_selection.ParameterGrid"
  },
  "type": "import"
 },
 "graspy.cluster.gclust.adjusted_rand_score": {
  "data": {
   "shadows": "sklearn.metrics.adjusted_rand_score"
  },
  "type": "import"
 },
 "graspy.cluster.gclust.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "graspy.cluster.gclust.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "graspy.cluster.kclust": {
  "data": {},
  "type": "module"
 },
 "graspy.cluster.kclust.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "graspy.cluster.kclust.KMeansCluster": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "graspy.cluster.kclust.KMeansCluster.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "graspy.cluster.kclust.KMeansCluster.fit": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "numpy.argmax",
    "range",
    "sklearn.cluster.KMeans",
    "sklearn.metrics.adjusted_rand_score",
    "sklearn.metrics.silhouette_score"
   ]
  },
  "type": "function"
 },
 "graspy.cluster.kclust.adjusted_rand_score": {
  "data": {
   "shadows": "sklearn.metrics.adjusted_rand_score"
  },
  "type": "import"
 },
 "graspy.cluster.kclust.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "graspy.cluster.kclust.silhouette_score": {
  "data": {
   "shadows": "sklearn.metrics.silhouette_score"
  },
  "type": "import"
 },
 "graspy.datasets": {
  "data": {},
  "type": "module"
 },
 "graspy.datasets.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "graspy.datasets.base": {
  "data": {},
  "type": "module"
 },
 "graspy.datasets.base.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "graspy.datasets.base.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "graspy.datasets.base.load_drosophila_left": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "int",
    "numpy.loadtxt",
    "open",
    "os.path.dirname",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "graspy.datasets.base.load_drosophila_right": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "int",
    "numpy.loadtxt",
    "open",
    "os.path.dirname",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "graspy.datasets.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "graspy.embed": {
  "data": {},
  "type": "module"
 },
 "graspy.embed.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "graspy.embed.ase": {
  "data": {},
  "type": "module"
 },
 "graspy.embed.ase.AdjacencySpectralEmbed": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "graspy.embed.ase.AdjacencySpectralEmbed.__init__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "graspy.embed.ase.AdjacencySpectralEmbed.fit": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "UserWarning",
    "augment_diagonal",
    "graspy.embed.ase.warnings",
    "import_graph",
    "is_fully_connected"
   ]
  },
  "type": "function"
 },
 "graspy.embed.ase.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "graspy.embed.base": {
  "data": {},
  "type": "module"
 },
 "graspy.embed.base.BaseEmbed": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "graspy.embed.base.BaseEmbed.__init__": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "graspy.embed.base.BaseEmbed._fit_transform": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "graspy.embed.base.BaseEmbed._pairwise": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "graspy.embed.base.BaseEmbed._reduce_dim": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "is_almost_symmetric",
    "numpy.diag",
    "numpy.sqrt",
    "selectSVD"
   ]
  },
  "type": "function"
 },
 "graspy.embed.base.BaseEmbed.fit": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "graspy.embed.base.BaseEmbed.fit_transform": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "graspy.embed.base.BaseEmbedMulti": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "graspy.embed.base.BaseEmbed"
   ]
  },
  "type": "class"
 },
 "graspy.embed.base.BaseEmbedMulti.__init__": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "graspy.embed.base.BaseEmbedMulti._check_input_graphs": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "import_graph",
    "isinstance",
    "len",
    "list",
    "numpy.ndarray",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "graspy.embed.base.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "graspy.embed.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "graspy.embed.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "graspy.embed.lse": {
  "data": {},
  "type": "module"
 },
 "graspy.embed.lse.LaplacianSpectralEmbed": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "graspy.embed.lse.LaplacianSpectralEmbed.__init__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "graspy.embed.lse.LaplacianSpectralEmbed.fit": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "UserWarning",
    "graspy.embed.lse.warnings",
    "import_graph",
    "is_fully_connected",
    "to_laplace"
   ]
  },
  "type": "function"
 },
 "graspy.embed.lse.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "graspy.embed.mase": {
  "data": {},
  "type": "module"
 },
 "graspy.embed.mase.MultipleASE": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "graspy.embed.mase.MultipleASE.__init__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "graspy.embed.mase.MultipleASE._reduce_dim": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "int",
    "numpy.ceil",
    "numpy.diag",
    "numpy.hstack",
    "numpy.log2",
    "numpy.max",
    "numpy.min",
    "numpy.sqrt",
    "selectSVD",
    "select_dimension",
    "zip"
   ]
  },
  "type": "function"
 },
 "graspy.embed.mase.MultipleASE.fit": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "all",
    "is_almost_symmetric"
   ]
  },
  "type": "function"
 },
 "graspy.embed.mase.MultipleASE.fit_transform": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "graspy.embed.mase.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "graspy.embed.mase.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "graspy.embed.mds": {
  "data": {},
  "type": "module"
 },
 "graspy.embed.mds.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "graspy.embed.mds.ClassicalMDS": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "graspy.embed.mds.ClassicalMDS.__init__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "graspy.embed.mds.ClassicalMDS._compute_euclidean_distances": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "graspy.embed.mds.ClassicalMDS.fit": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "ValueError",
    "graspy.embed.mds._get_centering_matrix",
    "is_symmetric",
    "isinstance",
    "len",
    "numpy.ndarray",
    "selectSVD",
    "sklearn.utils.check_array",
    "type"
   ]
  },
  "type": "function"
 },
 "graspy.embed.mds.ClassicalMDS.fit_transform": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "numpy.diag"
   ]
  },
  "type": "function"
 },
 "graspy.embed.mds._get_centering_matrix": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.identity",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "graspy.embed.mds.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "graspy.embed.mds.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "graspy.embed.omni": {
  "data": {},
  "type": "module"
 },
 "graspy.embed.omni.OmnibusEmbed": {
  "data": {
   "lineno": 54
  },
  "type": "class"
 },
 "graspy.embed.omni.OmnibusEmbed.__init__": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "graspy.embed.omni.OmnibusEmbed.fit": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "UserWarning",
    "graspy.embed.omni._get_omni_matrix",
    "graspy.embed.omni.warnings",
    "is_fully_connected",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "graspy.embed.omni.OmnibusEmbed.fit_transform": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "graspy.embed.omni._get_omni_matrix": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "len",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "graspy.embed.omni.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "graspy.embed.omni.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "graspy.embed.svd": {
  "data": {},
  "type": "module"
 },
 "graspy.embed.svd._compute_likelihood": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "len",
    "numpy.inf",
    "numpy.mean",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "scipy.stats.norm.logpdf"
   ]
  },
  "type": "function"
 },
 "graspy.embed.svd.norm": {
  "data": {
   "shadows": "scipy.stats.norm"
  },
  "type": "import"
 },
 "graspy.embed.svd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "graspy.embed.svd.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "graspy.embed.svd.selectSVD": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "ValueError",
    "graspy.embed.svd.scipy",
    "graspy.embed.svd.select_dimension",
    "graspy.embed.svd.sklearn",
    "min",
    "numpy.argsort"
   ]
  },
  "type": "function"
 },
 "graspy.embed.svd.select_dimension": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "float",
    "graspy.embed.svd._compute_likelihood",
    "graspy.embed.svd.scipy",
    "int",
    "isinstance",
    "len",
    "numpy.argmax",
    "numpy.ceil",
    "numpy.log2",
    "numpy.min",
    "numpy.ndarray",
    "numpy.sort",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "graspy.embed.svd.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "graspy.graspy.cluster": {
  "data": {
   "shadows": "graspy.cluster"
  },
  "type": "import"
 },
 "graspy.graspy.datasets": {
  "data": {
   "shadows": "graspy.datasets"
  },
  "type": "import"
 },
 "graspy.graspy.embed": {
  "data": {
   "shadows": "graspy.embed"
  },
  "type": "import"
 },
 "graspy.graspy.inference": {
  "data": {
   "shadows": "graspy.inference"
  },
  "type": "import"
 },
 "graspy.graspy.models": {
  "data": {
   "shadows": "graspy.models"
  },
  "type": "import"
 },
 "graspy.graspy.pipeline": {
  "data": {
   "shadows": "graspy.pipeline"
  },
  "type": "import"
 },
 "graspy.graspy.plot": {
  "data": {
   "shadows": "graspy.plot"
  },
  "type": "import"
 },
 "graspy.graspy.simulations": {
  "data": {
   "shadows": "graspy.simulations"
  },
  "type": "import"
 },
 "graspy.graspy.subgraph": {
  "data": {
   "shadows": "graspy.subgraph"
  },
  "type": "import"
 },
 "graspy.graspy.utils": {
  "data": {
   "shadows": "graspy.utils"
  },
  "type": "import"
 },
 "graspy.inference": {
  "data": {},
  "type": "module"
 },
 "graspy.inference.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "graspy.inference.base": {
  "data": {},
  "type": "module"
 },
 "graspy.inference.base.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "graspy.inference.base.BaseInference": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "graspy.inference.base.BaseInference.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "numpy.integer",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "graspy.inference.base.BaseInference._bootstrap": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "graspy.inference.base.BaseInference._embed": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "graspy.inference.base.BaseInference.fit": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "graspy.inference.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "graspy.inference.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "graspy.inference.latent_distribution_test": {
  "data": {},
  "type": "module"
 },
 "graspy.inference.latent_distribution_test.LatentDistributionTest": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "graspy.inference.latent_distribution_test.LatentDistributionTest.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "isinstance",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "graspy.inference.latent_distribution_test.LatentDistributionTest._bootstrap": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.random.choice",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "graspy.inference.latent_distribution_test.LatentDistributionTest._embed": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "AdjacencySpectralEmbed",
    "ValueError",
    "isinstance",
    "numpy.concatenate",
    "tuple"
   ]
  },
  "type": "function"
 },
 "graspy.inference.latent_distribution_test.LatentDistributionTest._gaussian_covariance": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.expand_dims",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "graspy.inference.latent_distribution_test.LatentDistributionTest._median_heuristic": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.median",
    "numpy.multiply"
   ]
  },
  "type": "function"
 },
 "graspy.inference.latent_distribution_test.LatentDistributionTest._statistic": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "graspy.inference.latent_distribution_test.LatentDistributionTest.fit": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "import_graph",
    "len",
    "max",
    "select_dimension"
   ]
  },
  "type": "function"
 },
 "graspy.inference.latent_distribution_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "graspy.inference.latent_position_test": {
  "data": {},
  "type": "module"
 },
 "graspy.inference.latent_position_test.LatentPositionTest": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "graspy.inference.latent_position_test.LatentPositionTest.__init__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "str",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "graspy.inference.latent_position_test.LatentPositionTest._bootstrap": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "numpy.zeros",
    "range",
    "rdpg"
   ]
  },
  "type": "function"
 },
 "graspy.inference.latent_position_test.LatentPositionTest._difference_norm": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.sqrt",
    "numpy.sum",
    "scipy.linalg.orthogonal_procrustes"
   ]
  },
  "type": "function"
 },
 "graspy.inference.latent_position_test.LatentPositionTest._embed": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "AdjacencySpectralEmbed",
    "OmnibusEmbed"
   ]
  },
  "type": "function"
 },
 "graspy.inference.latent_position_test.LatentPositionTest.fit": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "import_graph",
    "is_symmetric",
    "len",
    "max",
    "select_dimension"
   ]
  },
  "type": "function"
 },
 "graspy.inference.latent_position_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "graspy.inference.latent_position_test.orthogonal_procrustes": {
  "data": {
   "shadows": "scipy.linalg.orthogonal_procrustes"
  },
  "type": "import"
 },
 "graspy.match": {
  "data": {},
  "type": "module"
 },
 "graspy.match.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "graspy.match.faq": {
  "data": {},
  "type": "module"
 },
 "graspy.match.faq.FastApproximateQAP": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "graspy.match.faq.FastApproximateQAP.__init__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bool",
    "float",
    "int",
    "type"
   ]
  },
  "type": "function"
 },
 "graspy.match.faq.FastApproximateQAP.fit": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "SinkhornKnopp",
    "ValueError",
    "float",
    "graspy.match.faq.math",
    "numpy.array",
    "numpy.ix_",
    "numpy.linalg.norm",
    "numpy.ones",
    "numpy.random.permutation",
    "numpy.random.rand",
    "numpy.trace",
    "numpy.transpose",
    "numpy.zeros",
    "range",
    "scipy.optimize.linear_sum_assignment",
    "scipy.optimize.minimize_scalar",
    "sklearn.utils.check_array"
   ]
  },
  "type": "function"
 },
 "graspy.match.faq.FastApproximateQAP.fit.f": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "numpy.trace",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "graspy.match.faq.FastApproximateQAP.fit_predict": {
  "data": {
   "lineno": 247
  },
  "type": "function"
 },
 "graspy.match.faq.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "graspy.match.faq.linear_sum_assignment": {
  "data": {
   "shadows": "scipy.optimize.linear_sum_assignment"
  },
  "type": "import"
 },
 "graspy.match.faq.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "graspy.match.faq.minimize_scalar": {
  "data": {
   "shadows": "scipy.optimize.minimize_scalar"
  },
  "type": "import"
 },
 "graspy.match.faq.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "graspy.match.skp": {
  "data": {},
  "type": "module"
 },
 "graspy.match.skp.SinkhornKnopp": {
  "data": {
   "lineno": 34
  },
  "type": "class"
 },
 "graspy.match.skp.SinkhornKnopp.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "numpy.ones",
    "type"
   ]
  },
  "type": "function"
 },
 "graspy.match.skp.SinkhornKnopp.fit": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "UserWarning",
    "graspy.match.skp.warnings",
    "numpy.all",
    "numpy.any",
    "numpy.asarray",
    "numpy.copy",
    "numpy.diag",
    "numpy.ones",
    "numpy.squeeze",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "graspy.match.skp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "graspy.match.skp.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "graspy.models": {
  "data": {},
  "type": "module"
 },
 "graspy.models.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "graspy.models.base": {
  "data": {},
  "type": "module"
 },
 "graspy.models.base.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "graspy.models.base.BaseGraphEstimator": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "graspy.models.base.BaseGraphEstimator.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "graspy.models.base.BaseGraphEstimator._n_parameters": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "graspy.models.base.BaseGraphEstimator._pairwise": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "graspy.models.base.BaseGraphEstimator.bic": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.log",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "graspy.models.base.BaseGraphEstimator.fit": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "graspy.models.base.BaseGraphEstimator.mse": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "graspy.models.base.BaseGraphEstimator.sample": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "graspy.models.base._check_n_samples",
    "numpy.zeros",
    "range",
    "sample_edges",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "graspy.models.base.BaseGraphEstimator.score": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numpy.sum",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "graspy.models.base.BaseGraphEstimator.score_samples": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ValueError",
    "import_graph",
    "is_unweighted",
    "numpy.concatenate",
    "numpy.log",
    "numpy.multiply",
    "numpy.shape",
    "numpy.tril_indices_from",
    "numpy.triu_indices_from",
    "sklearn.utils.validation.check_is_fitted"
   ]
  },
  "type": "function"
 },
 "graspy.models.base._calculate_p": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.count_nonzero"
   ]
  },
  "type": "function"
 },
 "graspy.models.base._check_n_samples": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "graspy.models.base._n_to_labels": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "len",
    "numpy.int64",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "graspy.models.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "graspy.models.base.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "graspy.models.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "graspy.models.er": {
  "data": {},
  "type": "module"
 },
 "graspy.models.er.DCEREstimator": {
  "data": {
   "lineno": 66
  },
  "type": "class"
 },
 "graspy.models.er.DCEREstimator.__init__": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "graspy.models.er.DCEREstimator._n_parameters": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "graspy.models.er.DCEREstimator.fit": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "delattr",
    "numpy.ones",
    "super"
   ]
  },
  "type": "function"
 },
 "graspy.models.er.EREstimator": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "graspy.models.er.EREstimator.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "graspy.models.er.EREstimator._n_parameters": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "graspy.models.er.EREstimator.fit": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "delattr",
    "import_graph",
    "numpy.ones",
    "super"
   ]
  },
  "type": "function"
 },
 "graspy.models.er.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "graspy.models.rdpg": {
  "data": {},
  "type": "module"
 },
 "graspy.models.rdpg.RDPGEstimator": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "graspy.models.rdpg.RDPGEstimator.__init__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "float",
    "int",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "graspy.models.rdpg.RDPGEstimator._n_parameters": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "graspy.models.rdpg.RDPGEstimator.fit": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "AdjacencySpectralEmbed",
    "NotImplementedError",
    "augment_diagonal",
    "import_graph",
    "is_unweighted",
    "numpy.diag",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "graspy.models.rdpg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "graspy.pipeline": {
  "data": {},
  "type": "module"
 },
 "graspy.pipeline.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "graspy.pipeline.mug2vec": {
  "data": {},
  "type": "module"
 },
 "graspy.pipeline.mug2vec.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "graspy.pipeline.mug2vec.mug2vec": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "graspy.pipeline.mug2vec.mug2vec.__init__": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "graspy.pipeline.mug2vec.mug2vec._check_inputs": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "graspy.pipeline.mug2vec.mug2vec.fit": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "ClassicalMDS",
    "OmnibusEmbed",
    "pass_to_ranks"
   ]
  },
  "type": "function"
 },
 "graspy.pipeline.mug2vec.mug2vec.fit_transform": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "graspy.pipeline.mug2vec.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "graspy.plot": {
  "data": {},
  "type": "module"
 },
 "graspy.plot.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "graspy.plot.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "graspy.plot.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "graspy.simulations": {
  "data": {},
  "type": "module"
 },
 "graspy.simulations.simulations": {
  "data": {},
  "type": "module"
 },
 "graspy.simulations.simulations._n_to_labels": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "len",
    "numpy.int64",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "graspy.simulations.simulations.er_nm": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bool",
    "callable",
    "int",
    "numpy.eye",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.logical_not",
    "numpy.number",
    "numpy.random.choice",
    "numpy.ravel_multi_index",
    "numpy.triu_indices",
    "numpy.unravel_index",
    "numpy.where",
    "numpy.zeros",
    "symmetrize",
    "type",
    "wt"
   ]
  },
  "type": "function"
 },
 "graspy.simulations.simulations.er_np": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "TypeError",
    "all",
    "bool",
    "callable",
    "graspy.simulations.simulations.sbm",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.floating",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.ndarray",
    "type"
   ]
  },
  "type": "function"
 },
 "graspy.simulations.simulations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "graspy.simulations.simulations.p_from_latent": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.diag",
    "numpy.ndarray",
    "type"
   ]
  },
  "type": "function"
 },
 "graspy.simulations.simulations.rdpg": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "TypeError",
    "callable",
    "graspy.simulations.simulations.p_from_latent",
    "graspy.simulations.simulations.sample_edges",
    "numpy.count_nonzero",
    "numpy.floating",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.number",
    "type",
    "wt"
   ]
  },
  "type": "function"
 },
 "graspy.simulations.simulations.sample_edges": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len",
    "numpy.diag",
    "numpy.ndarray",
    "numpy.random.binomial",
    "numpy.triu_indices",
    "numpy.zeros_like",
    "symmetrize",
    "type"
   ]
  },
  "type": "function"
 },
 "graspy.simulations.simulations.sbm": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "TypeError",
    "UserWarning",
    "ValueError",
    "all",
    "block_wt",
    "callable",
    "cartprod",
    "dc",
    "dcFunc",
    "dict",
    "float",
    "graspy.simulations.simulations._n_to_labels",
    "graspy.simulations.simulations.warnings",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.any",
    "numpy.array",
    "numpy.diag",
    "numpy.full",
    "numpy.integer",
    "numpy.isclose",
    "numpy.issubdtype",
    "numpy.ndarray",
    "numpy.number",
    "numpy.random.choice",
    "numpy.random.uniform",
    "numpy.ravel_multi_index",
    "numpy.unravel_index",
    "numpy.zeros",
    "object",
    "range",
    "sum",
    "symmetrize",
    "type",
    "wt",
    "wt.T",
    "wt.ravel",
    "wt.shape",
    "zip"
   ]
  },
  "type": "function"
 },
 "graspy.simulations.simulations.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "graspy.simulations.simulations_corr": {
  "data": {},
  "type": "module"
 },
 "graspy.simulations.simulations_corr.check_dirloop": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "type"
   ]
  },
  "type": "function"
 },
 "graspy.simulations.simulations_corr.check_r": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.floating",
    "numpy.issubdtype",
    "type"
   ]
  },
  "type": "function"
 },
 "graspy.simulations.simulations_corr.check_rel_er": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "graspy.simulations.simulations_corr.check_rel_sbm": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "graspy.simulations.simulations_corr.er_corr": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "graspy.simulations.simulations_corr.check_dirloop",
    "graspy.simulations.simulations_corr.check_r",
    "graspy.simulations.simulations_corr.check_rel_er",
    "graspy.simulations.simulations_corr.sample_edges_corr",
    "numpy.floating",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.ones",
    "type"
   ]
  },
  "type": "function"
 },
 "graspy.simulations.simulations_corr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "graspy.simulations.simulations_corr.sample_edges": {
  "data": {
   "shadows": "graspy.simulations.sample_edges"
  },
  "type": "import"
 },
 "graspy.simulations.simulations_corr.sample_edges_corr": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "graspy.simulations.sample_edges",
    "graspy.simulations.simulations_corr.check_dirloop",
    "len",
    "numpy.ndarray",
    "numpy.where",
    "type"
   ]
  },
  "type": "function"
 },
 "graspy.simulations.simulations_corr.sbm_corr": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "graspy.simulations.simulations_corr.check_dirloop",
    "graspy.simulations.simulations_corr.check_r",
    "graspy.simulations.simulations_corr.check_rel_sbm",
    "graspy.simulations.simulations_corr.sample_edges_corr",
    "isinstance",
    "list",
    "numpy.any",
    "numpy.array",
    "numpy.cumsum",
    "numpy.insert",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.ndarray",
    "numpy.number",
    "numpy.ones",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "graspy.subgraph": {
  "data": {},
  "type": "module"
 },
 "graspy.subgraph.sg": {
  "data": {},
  "type": "module"
 },
 "graspy.subgraph.sg.SignalSubgraph": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "graspy.subgraph.sg.SignalSubgraph.__construct_contingency": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "len",
    "numpy.shape",
    "numpy.zeros",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "graspy.subgraph.sg.SignalSubgraph.fit": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.amin",
    "numpy.argsort",
    "numpy.array",
    "numpy.dstack",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.shape",
    "numpy.sort",
    "numpy.sum",
    "numpy.transpose",
    "numpy.unique",
    "numpy.unravel_index",
    "range",
    "scipy.stats.fisher_exact",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "graspy.subgraph.sg.SignalSubgraph.fit_transform": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "numpy.full",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "graspy.subgraph.sg.fisher_exact": {
  "data": {
   "shadows": "scipy.stats.fisher_exact"
  },
  "type": "import"
 },
 "graspy.subgraph.sg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "graspy.utils": {
  "data": {},
  "type": "module"
 },
 "graspy.utils.ptr": {
  "data": {},
  "type": "module"
 },
 "graspy.utils.ptr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "graspy.utils.ptr.pass_to_ranks": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "import_graph",
    "is_loopless",
    "is_symmetric",
    "is_unweighted",
    "len",
    "numpy.triu",
    "scipy.stats.rankdata",
    "symmetrize"
   ]
  },
  "type": "function"
 },
 "graspy.utils.ptr.rankdata": {
  "data": {
   "shadows": "scipy.stats.rankdata"
  },
  "type": "import"
 },
 "graspy.utils.utils": {
  "data": {},
  "type": "module"
 },
 "graspy.utils.utils.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "graspy.utils.utils.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "graspy.utils.utils.augment_diagonal": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "graspy.utils.utils.import_graph",
    "graspy.utils.utils.remove_loops",
    "numpy.abs",
    "numpy.diag",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "graspy.utils.utils.binarize": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "graspy.utils.utils.import_graph"
   ]
  },
  "type": "function"
 },
 "graspy.utils.utils.cartprod": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.meshgrid",
    "numpy.roll",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "graspy.utils.utils.check_array": {
  "data": {
   "shadows": "sklearn.utils.check_array"
  },
  "type": "import"
 },
 "graspy.utils.utils.get_lcc": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "graspy.utils.utils.is_symmetric",
    "len",
    "list",
    "max",
    "networkx.DiGraph",
    "networkx.Graph",
    "networkx.MultiDiGraph",
    "networkx.MultiGraph",
    "networkx.connected_components",
    "networkx.from_numpy_array",
    "networkx.to_numpy_array",
    "networkx.weakly_connected_components",
    "numpy.array",
    "numpy.ndarray",
    "type"
   ]
  },
  "type": "function"
 },
 "graspy.utils.utils.get_multigraph_intersect_lcc": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "functools.reduce",
    "graspy.utils.utils.get_lcc",
    "graspy.utils.utils.is_fully_connected",
    "list",
    "numpy.intersect1d",
    "numpy.ndarray",
    "numpy.stack",
    "type"
   ]
  },
  "type": "function"
 },
 "graspy.utils.utils.get_multigraph_union_lcc": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "graspy.utils.utils.get_lcc",
    "graspy.utils.utils.import_graph",
    "isinstance",
    "len",
    "list",
    "map",
    "numpy.array",
    "numpy.ndarray",
    "numpy.shape",
    "numpy.stack",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "graspy.utils.utils.import_edgelist": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "TypeError",
    "UserWarning",
    "ValueError",
    "all",
    "collections.Iterable",
    "functools.reduce",
    "graspy.utils.utils.warnings",
    "int",
    "isinstance",
    "len",
    "networkx.read_weighted_edgelist",
    "networkx.to_numpy_array",
    "numpy.float",
    "numpy.sort",
    "numpy.union1d",
    "pathlib.Path",
    "sorted",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "graspy.utils.utils.import_graph": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "len",
    "networkx.DiGraph",
    "networkx.Graph",
    "networkx.MultiDiGraph",
    "networkx.MultiGraph",
    "networkx.to_numpy_array",
    "numpy.float",
    "numpy.float32",
    "numpy.float64",
    "numpy.max",
    "numpy.memmap",
    "numpy.ndarray",
    "sklearn.utils.check_array",
    "sorted",
    "type"
   ]
  },
  "type": "function"
 },
 "graspy.utils.utils.is_almost_symmetric": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "graspy.utils.utils.is_fully_connected": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "graspy.utils.utils.is_symmetric",
    "networkx.DiGraph",
    "networkx.Graph",
    "networkx.MultiDiGraph",
    "networkx.MultiGraph",
    "networkx.from_numpy_array",
    "networkx.is_connected",
    "networkx.is_weakly_connected",
    "numpy.ndarray",
    "type"
   ]
  },
  "type": "function"
 },
 "graspy.utils.utils.is_loopless": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.diag"
   ]
  },
  "type": "function"
 },
 "graspy.utils.utils.is_symmetric": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "graspy.utils.utils.is_unweighted": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "graspy.utils.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "graspy.utils.utils.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "graspy.utils.utils.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "graspy.utils.utils.remove_loops": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "graspy.utils.utils.import_graph",
    "numpy.diag"
   ]
  },
  "type": "function"
 },
 "graspy.utils.utils.symmetrize": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "ValueError",
    "numpy.diag",
    "numpy.tril",
    "numpy.triu"
   ]
  },
  "type": "function"
 },
 "graspy.utils.utils.to_laplace": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "graspy.utils.utils.import_graph",
    "graspy.utils.utils.is_symmetric",
    "graspy.utils.utils.symmetrize",
    "int",
    "isinstance",
    "numpy.diag",
    "numpy.errstate",
    "numpy.isinf",
    "numpy.mean",
    "numpy.sqrt",
    "numpy.sum",
    "type"
   ]
  },
  "type": "function"
 },
 "graspy.utils.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "graspy.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "tests": {
  "data": {},
  "type": "module"
 },
 "tests.test_base_embed": {
  "data": {},
  "type": "module"
 },
 "tests.test_base_embed.BaseEmbed": {
  "data": {
   "shadows": "graspy.embed.base.BaseEmbed"
  },
  "type": "import"
 },
 "tests.test_base_embed.TestBaseEmbed": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "tests.test_base_embed.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_base_embed.TestBaseEmbed.setup_class": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "classmethod",
    "graspy.simulations.simulations.er_np"
   ]
  },
  "type": "function"
 },
 "tests.test_base_embed.TestBaseEmbed.test_algorithms": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "graspy.embed.base.BaseEmbed"
   ]
  },
  "type": "function"
 },
 "tests.test_base_embed.TestBaseEmbed.test_baseembed": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "graspy.embed.base.BaseEmbed",
    "graspy.simulations.simulations.er_nm"
   ]
  },
  "type": "function"
 },
 "tests.test_base_embed.TestBaseEmbed.test_baseembed_er": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "graspy.embed.base.BaseEmbed",
    "graspy.simulations.simulations.er_nm"
   ]
  },
  "type": "function"
 },
 "tests.test_base_embed.TestBaseEmbed.test_baseembed_er_directed": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "graspy.embed.base.BaseEmbed",
    "graspy.simulations.simulations.er_nm"
   ]
  },
  "type": "function"
 },
 "tests.test_base_embed.er_nm": {
  "data": {
   "shadows": "graspy.simulations.simulations.er_nm"
  },
  "type": "import"
 },
 "tests.test_base_embed.er_np": {
  "data": {
   "shadows": "graspy.simulations.simulations.er_np"
  },
  "type": "import"
 },
 "tests.test_base_embed.gs": {
  "data": {
   "shadows": "graspy"
  },
  "type": "import"
 },
 "tests.test_base_embed.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_base_embed.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "tests.test_datasets": {
  "data": {},
  "type": "module"
 },
 "tests.test_datasets.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_datasets.test_drosphila_left": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "load_drosophila_left"
   ]
  },
  "type": "function"
 },
 "tests.test_datasets.test_drosphila_right": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "load_drosophila_right"
   ]
  },
  "type": "function"
 },
 "tests.test_io": {
  "data": {},
  "type": "module"
 },
 "tests.test_io.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "tests.test_io.TestImportEdgelist": {
  "data": {
   "lineno": 45
  },
  "type": "class"
 },
 "tests.test_io.TestImportEdgelist.setup_class": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "dict",
    "graspy.simulations.er_np",
    "networkx.from_numpy_array",
    "networkx.relabel_nodes",
    "networkx.write_edgelist",
    "networkx.write_weighted_edgelist",
    "numpy.random.exponential",
    "numpy.random.seed",
    "str",
    "tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_io.TestImportEdgelist.test_bad_delimiter": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "UserWarning",
    "graspy.utils.import_edgelist",
    "tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_io.TestImportEdgelist.test_in": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "graspy.utils.import_edgelist",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "tests.test_io.TestImportEdgelist.test_in_Path_obj": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "graspy.utils.import_edgelist",
    "numpy.allclose",
    "pathlib.Path"
   ]
  },
  "type": "function"
 },
 "tests.test_io.TestImportEdgelist.test_multiple_in": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "all",
    "graspy.utils.import_edgelist",
    "len",
    "numpy.allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "tests.test_io.TestImportEdgelist.test_no_graphs_found": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ValueError",
    "graspy.utils.import_edgelist",
    "str",
    "tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_io.TestImportEdgelist.test_vertices": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "graspy.utils.import_edgelist",
    "numpy.allclose",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "tests.test_io.TestImportEdgelist.test_wrongtypein": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "TypeError",
    "graspy.utils.import_edgelist",
    "tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_io.TestImportGraph": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "tests.test_io.TestImportGraph.setup_class": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "numpy.arange",
    "numpy.put",
    "numpy.random.choice",
    "numpy.random.normal",
    "numpy.zeros",
    "round"
   ]
  },
  "type": "function"
 },
 "tests.test_io.TestImportGraph.test_graphin": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "graspy.utils.import_graph",
    "networkx.from_numpy_array",
    "networkx.to_numpy_array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_io.TestImportGraph.test_nonsquare": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "graspy.utils.import_graph",
    "numpy.hstack",
    "tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_io.TestImportGraph.test_npin": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "graspy.utils.import_graph",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_io.TestImportGraph.test_wrongtypein": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "TypeError",
    "graspy.utils.import_graph",
    "tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_io.gs": {
  "data": {
   "shadows": "graspy"
  },
  "type": "import"
 },
 "tests.test_io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_io.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "tests.test_io.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_io.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tests.test_latentdistributiontest": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tests.test_latentdistributiontest.unittest"
   ]
  },
  "type": "module"
 },
 "tests.test_latentdistributiontest.LatentDistributionTest": {
  "data": {
   "shadows": "graspy.inference.LatentDistributionTest"
  },
  "type": "import"
 },
 "tests.test_latentdistributiontest.TestLatentDistributionTest": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "tests.test_latentdistributiontest.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_latentdistributiontest.TestLatentDistributionTest.setUpClass": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "classmethod",
    "graspy.simulations.er_np",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "tests.test_latentdistributiontest.TestLatentDistributionTest.test_SBM_epsilon": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "graspy.inference.LatentDistributionTest",
    "graspy.simulations.sbm",
    "numpy.array",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "tests.test_latentdistributiontest.TestLatentDistributionTest.test_bad_kwargs": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "graspy.inference.LatentDistributionTest"
   ]
  },
  "type": "function"
 },
 "tests.test_latentdistributiontest.TestLatentDistributionTest.test_bad_matrix_inputs": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "TypeError",
    "graspy.inference.LatentDistributionTest"
   ]
  },
  "type": "function"
 },
 "tests.test_latentdistributiontest.TestLatentDistributionTest.test_directed_inputs": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "graspy.inference.LatentDistributionTest",
    "graspy.simulations.er_np",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "tests.test_latentdistributiontest.TestLatentDistributionTest.test_fit_p_ase_works": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "graspy.inference.LatentDistributionTest"
   ]
  },
  "type": "function"
 },
 "tests.test_latentdistributiontest.TestLatentDistributionTest.test_n_bootstraps": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "graspy.inference.LatentDistributionTest"
   ]
  },
  "type": "function"
 },
 "tests.test_latentdistributiontest.er_np": {
  "data": {
   "shadows": "graspy.simulations.er_np"
  },
  "type": "import"
 },
 "tests.test_latentdistributiontest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_latentdistributiontest.sbm": {
  "data": {
   "shadows": "graspy.simulations.sbm"
  },
  "type": "import"
 },
 "tests.test_latentdistributiontest.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "tests.test_latentpositiontest": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tests.test_latentpositiontest.unittest"
   ]
  },
  "type": "module"
 },
 "tests.test_latentpositiontest.LatentPositionTest": {
  "data": {
   "shadows": "graspy.inference.LatentPositionTest"
  },
  "type": "import"
 },
 "tests.test_latentpositiontest.TestLatentPositionTest": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "tests.test_latentpositiontest.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_latentpositiontest.TestLatentPositionTest.setUpClass": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "classmethod",
    "graspy.simulations.er_np",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "tests.test_latentpositiontest.TestLatentPositionTest.test_SBM_epsilon": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "graspy.inference.LatentPositionTest",
    "graspy.simulations.sbm",
    "numpy.array",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "tests.test_latentpositiontest.TestLatentPositionTest.test_bad_kwargs": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "graspy.inference.LatentPositionTest"
   ]
  },
  "type": "function"
 },
 "tests.test_latentpositiontest.TestLatentPositionTest.test_bad_matrix_inputs": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "graspy.inference.LatentPositionTest"
   ]
  },
  "type": "function"
 },
 "tests.test_latentpositiontest.TestLatentPositionTest.test_diagonal_rotation_norm": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "graspy.inference.LatentPositionTest",
    "numpy.array",
    "numpy.dot",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "tests.test_latentpositiontest.TestLatentPositionTest.test_fit_p_ase_works": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "graspy.inference.LatentPositionTest"
   ]
  },
  "type": "function"
 },
 "tests.test_latentpositiontest.TestLatentPositionTest.test_fit_p_omni_works": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "graspy.inference.LatentPositionTest"
   ]
  },
  "type": "function"
 },
 "tests.test_latentpositiontest.TestLatentPositionTest.test_n_bootstraps": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "graspy.inference.LatentPositionTest"
   ]
  },
  "type": "function"
 },
 "tests.test_latentpositiontest.TestLatentPositionTest.test_rotation_norm": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "graspy.inference.LatentPositionTest",
    "numpy.array",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "tests.test_latentpositiontest.TestLatentPositionTest.test_scalar_rotation_norm": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "graspy.inference.LatentPositionTest",
    "numpy.array",
    "numpy.dot",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "tests.test_latentpositiontest.er_np": {
  "data": {
   "shadows": "graspy.simulations.er_np"
  },
  "type": "import"
 },
 "tests.test_latentpositiontest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_latentpositiontest.sbm": {
  "data": {
   "shadows": "graspy.simulations.sbm"
  },
  "type": "import"
 },
 "tests.test_latentpositiontest.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "tests.test_mase": {
  "data": {},
  "type": "module"
 },
 "tests.test_mase.GaussianCluster": {
  "data": {
   "shadows": "graspy.cluster.gclust.GaussianCluster"
  },
  "type": "import"
 },
 "tests.test_mase.MultipleASE": {
  "data": {
   "shadows": "graspy.embed.mase.MultipleASE"
  },
  "type": "import"
 },
 "tests.test_mase.er_np": {
  "data": {
   "shadows": "graspy.simulations.simulations.er_np"
  },
  "type": "import"
 },
 "tests.test_mase.make_train_directed": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "graspy.simulations.simulations.sbm",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_mase.make_train_undirected": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "graspy.simulations.simulations.sbm",
    "numpy.array",
    "numpy.ones",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_mase.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_mase.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_mase.sbm": {
  "data": {
   "shadows": "graspy.simulations.simulations.sbm"
  },
  "type": "import"
 },
 "tests.test_mase.test_bad_inputs": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "graspy.embed.mase.MultipleASE",
    "graspy.simulations.simulations.er_np",
    "numpy.random.seed",
    "tests.test_mase.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_mase.test_graph_clustering": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "graspy.cluster.gclust.GaussianCluster",
    "graspy.embed.mase.MultipleASE",
    "numpy.random.seed",
    "tests.test_mase.make_train_directed",
    "tests.test_mase.make_train_undirected"
   ]
  },
  "type": "function"
 },
 "tests.test_mase.test_vertex": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "graspy.cluster.gclust.GaussianCluster",
    "graspy.embed.mase.MultipleASE",
    "numpy.hstack",
    "numpy.random.seed",
    "tests.test_mase.make_train_directed",
    "tests.test_mase.make_train_undirected"
   ]
  },
  "type": "function"
 },
 "tests.test_mds": {
  "data": {},
  "type": "module"
 },
 "tests.test_mds.ClassicalMDS": {
  "data": {
   "shadows": "graspy.embed.mds.ClassicalMDS"
  },
  "type": "import"
 },
 "tests.test_mds.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "tests.test_mds.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "tests.test_mds.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_mds.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_mds.test_input": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "graspy.embed.mds.ClassicalMDS",
    "numpy.random.normal",
    "tests.test_mds.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_mds.test_output": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "use_euclidean",
    "use_fit",
    "use_fit_transform"
   ]
  },
  "type": "function"
 },
 "tests.test_mds.test_output._compute_dissimilarity": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_mds.test_output.use_euclidean": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "graspy.embed.mds.ClassicalMDS",
    "numpy.array",
    "numpy.identity",
    "numpy.ones",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_mds.test_output.use_fit": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "_compute_dissimilarity",
    "graspy.embed.mds.ClassicalMDS",
    "numpy.diag",
    "numpy.dot",
    "numpy.identity",
    "numpy.ones",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_mds.test_output.use_fit_transform": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "_compute_dissimilarity",
    "graspy.embed.mds.ClassicalMDS",
    "numpy.identity",
    "numpy.ones",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_mds.test_tensor_input": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "graspy.embed.mds.ClassicalMDS",
    "numpy.random.normal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_omni": {
  "data": {},
  "type": "module"
 },
 "tests.test_omni.OmnibusEmbed": {
  "data": {
   "shadows": "graspy.embed.omni.OmnibusEmbed"
  },
  "type": "import"
 },
 "tests.test_omni._get_omni_matrix": {
  "data": {
   "shadows": "graspy.embed.omni._get_omni_matrix"
  },
  "type": "import"
 },
 "tests.test_omni.allclose": {
  "data": {
   "shadows": "numpy.allclose"
  },
  "type": "import"
 },
 "tests.test_omni.array_equal": {
  "data": {
   "shadows": "numpy.array_equal"
  },
  "type": "import"
 },
 "tests.test_omni.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "tests.test_omni.er_nm": {
  "data": {
   "shadows": "graspy.simulations.simulations.er_nm"
  },
  "type": "import"
 },
 "tests.test_omni.er_np": {
  "data": {
   "shadows": "graspy.simulations.simulations.er_np"
  },
  "type": "import"
 },
 "tests.test_omni.generate_data": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "graspy.utils.utils.symmetrize",
    "numpy.dot",
    "numpy.random.binomial",
    "numpy.random.dirichlet",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "tests.test_omni.is_symmetric": {
  "data": {
   "shadows": "graspy.utils.utils.is_symmetric"
  },
  "type": "import"
 },
 "tests.test_omni.norm": {
  "data": {
   "shadows": "numpy.linalg.norm"
  },
  "type": "import"
 },
 "tests.test_omni.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_omni.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_omni.symmetrize": {
  "data": {
   "shadows": "graspy.utils.utils.symmetrize"
  },
  "type": "import"
 },
 "tests.test_omni.test_omni_embed": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "compute_bar",
    "graspy.embed.omni.OmnibusEmbed",
    "numpy.allclose",
    "numpy.linalg.norm",
    "numpy.random.seed",
    "tests.test_omni.generate_data"
   ]
  },
  "type": "function"
 },
 "tests.test_omni.test_omni_embed.compute_bar": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "tests.test_omni.test_omni_matrix_invalid_inputs": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "graspy.embed.omni.OmnibusEmbed",
    "numpy.ones",
    "tests.test_omni.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_omni.test_omni_matrix_ones_zeros": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "graspy.embed.omni._get_omni_matrix",
    "numpy.array_equal",
    "numpy.ones",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_omni.test_omni_matrix_random": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "graspy.embed.omni._get_omni_matrix",
    "numpy.array",
    "numpy.random.seed",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "tests.test_omni.test_omni_matrix_symmetric": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "graspy.embed.omni._get_omni_matrix",
    "graspy.simulations.simulations.er_np",
    "graspy.utils.utils.is_symmetric",
    "numpy.random.seed",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_omni.test_omni_unconnected": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "UserWarning",
    "graspy.embed.omni.OmnibusEmbed",
    "graspy.simulations.simulations.er_nm",
    "numpy.random.seed",
    "range",
    "tests.test_omni.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_plot": {
  "data": {},
  "type": "module"
 },
 "tests.test_plot._sort_inds": {
  "data": {
   "shadows": "graspy.plot.plot._sort_inds"
  },
  "type": "import"
 },
 "tests.test_plot.er_np": {
  "data": {
   "shadows": "graspy.simulations.simulations.er_np"
  },
  "type": "import"
 },
 "tests.test_plot.gridplot": {
  "data": {
   "shadows": "graspy.plot.plot.gridplot"
  },
  "type": "import"
 },
 "tests.test_plot.heatmap": {
  "data": {
   "shadows": "graspy.plot.plot.heatmap"
  },
  "type": "import"
 },
 "tests.test_plot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_plot.pairplot": {
  "data": {
   "shadows": "graspy.plot.plot.pairplot"
  },
  "type": "import"
 },
 "tests.test_plot.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_plot.sbm": {
  "data": {
   "shadows": "graspy.simulations.simulations.sbm"
  },
  "type": "import"
 },
 "tests.test_plot.test_common_inputs": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "graspy.plot.plot.gridplot",
    "graspy.plot.plot.heatmap",
    "graspy.plot.plot.pairplot",
    "graspy.simulations.simulations.er_np",
    "range",
    "tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_plot.test_gridplot_inputs": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "graspy.plot.plot.gridplot",
    "graspy.simulations.simulations.er_np",
    "tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_plot.test_gridplot_outputs": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "graspy.plot.plot.gridplot",
    "graspy.simulations.simulations.er_np",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_plot.test_heatmap_inputs": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "graspy.plot.plot.heatmap",
    "numpy.random.rand",
    "tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_plot.test_heatmap_output": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "graspy.plot.plot.heatmap",
    "graspy.simulations.simulations.er_np",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_plot.test_pairplot_inputs": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "graspy.plot.plot.pairplot",
    "numpy.random.rand",
    "tests.test_plot.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_plot.test_pairplot_outputs": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "graspy.plot.plot.pairplot",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "tests.test_plot.test_sort_inds": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "graspy.plot.plot._sort_inds",
    "graspy.simulations.simulations.sbm",
    "numpy.all",
    "numpy.argsort",
    "numpy.array",
    "numpy.diff"
   ]
  },
  "type": "function"
 },
 "tests.test_select_dimension": {
  "data": {},
  "type": "module"
 },
 "tests.test_select_dimension.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "tests.test_select_dimension.generate_data": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.diag",
    "numpy.random.binomial",
    "numpy.random.seed",
    "numpy.zeros",
    "range",
    "scipy.linalg.orth"
   ]
  },
  "type": "function"
 },
 "tests.test_select_dimension.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_select_dimension.orth": {
  "data": {
   "shadows": "scipy.linalg.orth"
  },
  "type": "import"
 },
 "tests.test_select_dimension.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_select_dimension.sbm": {
  "data": {
   "shadows": "graspy.simulations.simulations.sbm"
  },
  "type": "import"
 },
 "tests.test_select_dimension.select_dimension": {
  "data": {
   "shadows": "graspy.embed.svd.select_dimension"
  },
  "type": "import"
 },
 "tests.test_select_dimension.test_invalid_inputes": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "graspy.embed.svd.select_dimension",
    "numpy.random.normal",
    "tests.test_select_dimension.generate_data",
    "tests.test_select_dimension.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_select_dimension.test_output_simple": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "graspy.embed.svd.select_dimension",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_select_dimension.test_output_synthetic": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "graspy.embed.svd.select_dimension",
    "numpy.testing.assert_equal",
    "tests.test_select_dimension.generate_data"
   ]
  },
  "type": "function"
 },
 "tests.test_select_dimension.test_output_two_block_sbm": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "graspy.embed.svd.select_dimension",
    "graspy.simulations.simulations.sbm",
    "numpy.array",
    "numpy.random.seed",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_select_dimension.test_output_uniform": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "graspy.embed.svd.select_dimension",
    "numpy.hstack",
    "numpy.random.seed",
    "numpy.random.uniform",
    "numpy.sort",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_sg": {
  "data": {},
  "type": "module"
 },
 "tests.test_sg.TestEstimateSubgraph": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "tests.test_sg.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_sg.TestEstimateSubgraph.test_construct_contingency": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "float",
    "graspy.subgraph.SignalSubgraph",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_sg.TestEstimateSubgraph.test_estimate_subgraph_coh": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "graspy.subgraph.SignalSubgraph",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_sg.TestEstimateSubgraph.test_estimate_subgraph_inc": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "graspy.subgraph.SignalSubgraph",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_sg.TestEstimateSubgraph.test_fit_bad_constraints": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "TypeError",
    "graspy.subgraph.SignalSubgraph",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "tests.test_sg.TestEstimateSubgraph.test_fit_bad_len": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "graspy.subgraph.SignalSubgraph",
    "numpy.array",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "tests.test_sg.TestEstimateSubgraph.test_fit_bad_size": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ValueError",
    "graspy.subgraph.SignalSubgraph",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "tests.test_sg.TestEstimateSubgraph.test_fit_bad_type": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "TypeError",
    "graspy.subgraph.SignalSubgraph",
    "numpy.ones",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "tests.test_sg.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "tests.test_sg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_sg.sg": {
  "data": {
   "shadows": "graspy.subgraph"
  },
  "type": "import"
 },
 "tests.test_sg.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "tests.test_sims": {
  "data": {},
  "type": "module"
 },
 "tests.test_sims.Test_ER": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "tests.test_sims.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_sims.Test_ER.setUpClass": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_ER.test_ernm": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "er_nm"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_ER.test_ernp": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "er_np",
    "float",
    "len",
    "numpy.isclose",
    "numpy.random.seed",
    "tests.test_sims.remove_diagonal"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_RDPG": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "tests.test_sims.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_sims.Test_RDPG.setUpClass": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "classmethod",
    "numpy.vstack",
    "symmetrize"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_RDPG.test_dimensions": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "numpy.array",
    "rdpg"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_RDPG.test_er_p_is_close": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.ones",
    "numpy.random.seed",
    "numpy.stack",
    "p_from_latent",
    "range",
    "sample_edges"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_RDPG.test_inputs": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.array",
    "numpy.zeros",
    "p_from_latent",
    "sample_edges"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_RDPG.test_kwarg_passing": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "graspy.utils.utils.is_loopless",
    "graspy.utils.utils.is_symmetric",
    "numpy.ones",
    "numpy.random.seed",
    "rdpg"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_RDPG.test_mini_sbm_p_is_close": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.mean",
    "numpy.random.seed",
    "numpy.stack",
    "numpy.testing.assert_allclose",
    "p_from_latent",
    "range",
    "sample_edges"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_WSBM": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "tests.test_sims.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_sims.Test_WSBM.exp_exp": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.exp_normal": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.exp_poisson": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.exp_unif": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.setUpClass": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "classmethod",
    "numpy.cumsum",
    "numpy.vstack",
    "symmetrize"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.test_bad_inputs": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "TypeError",
    "UserWarning",
    "ValueError",
    "len",
    "numpy.ones",
    "numpy.random.beta",
    "numpy.random.normal",
    "numpy.random.uniform",
    "sbm",
    "sum"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.test_sbm": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "graspy.utils.utils.is_loopless",
    "graspy.utils.utils.is_symmetric",
    "len",
    "numpy.arange",
    "numpy.cumsum",
    "numpy.isclose",
    "numpy.mean",
    "numpy.random.seed",
    "numpy.sum",
    "numpy.vstack",
    "range",
    "sbm",
    "symmetrize",
    "tests.test_sims.remove_diagonal"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.test_sbm_dc_dc_kws_directed_loopy": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "graspy.utils.utils.is_loopless",
    "graspy.utils.utils.is_symmetric",
    "len",
    "numpy.isclose",
    "numpy.mean",
    "numpy.random.power",
    "numpy.random.seed",
    "numpy.random.uniform",
    "numpy.sum",
    "range",
    "sbm",
    "tests.test_sims.remove_diagonal"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.test_sbm_dc_dc_kws_directed_loopy_weights": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "len",
    "numpy.hstack",
    "numpy.isclose",
    "numpy.random.power",
    "numpy.random.seed",
    "numpy.random.uniform",
    "numpy.sum",
    "range",
    "sbm",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.test_sbm_label": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.random.seed",
    "sbm"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.test_sbm_multi_dc_dc_kws": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "graspy.utils.utils.is_loopless",
    "graspy.utils.utils.is_symmetric",
    "len",
    "numpy.isclose",
    "numpy.mean",
    "numpy.random.power",
    "numpy.random.seed",
    "numpy.random.uniform",
    "numpy.sum",
    "range",
    "sbm",
    "tests.test_sims.remove_diagonal"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.test_sbm_multi_dc_empty_dc_kws": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "graspy.utils.utils.is_loopless",
    "graspy.utils.utils.is_symmetric",
    "len",
    "numpy.isclose",
    "numpy.mean",
    "numpy.random.rayleigh",
    "numpy.random.seed",
    "numpy.random.uniform",
    "numpy.sum",
    "range",
    "sbm",
    "tests.test_sims.remove_diagonal"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.test_sbm_multiwt_directed_loopless": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "graspy.utils.utils.is_loopless",
    "graspy.utils.utils.is_symmetric",
    "len",
    "numpy.arange",
    "numpy.isclose",
    "numpy.mean",
    "numpy.random.exponential",
    "numpy.random.normal",
    "numpy.random.poisson",
    "numpy.random.seed",
    "numpy.random.uniform",
    "numpy.sum",
    "numpy.vstack",
    "range",
    "sbm",
    "tests.test_sims.remove_diagonal"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.test_sbm_multiwt_directed_loopy": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "graspy.utils.utils.is_loopless",
    "graspy.utils.utils.is_symmetric",
    "len",
    "numpy.arange",
    "numpy.isclose",
    "numpy.mean",
    "numpy.random.exponential",
    "numpy.random.normal",
    "numpy.random.poisson",
    "numpy.random.seed",
    "numpy.random.uniform",
    "numpy.sum",
    "numpy.vstack",
    "range",
    "sbm"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.test_sbm_multiwt_undirected_loopless": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "graspy.utils.utils.is_loopless",
    "graspy.utils.utils.is_symmetric",
    "len",
    "numpy.arange",
    "numpy.isclose",
    "numpy.mean",
    "numpy.random.normal",
    "numpy.random.poisson",
    "numpy.random.seed",
    "numpy.random.uniform",
    "numpy.sum",
    "numpy.vstack",
    "range",
    "sbm",
    "tests.test_sims.remove_diagonal"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.test_sbm_multiwt_undirected_loopy": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "graspy.utils.utils.is_loopless",
    "graspy.utils.utils.is_symmetric",
    "len",
    "numpy.arange",
    "numpy.isclose",
    "numpy.mean",
    "numpy.random.normal",
    "numpy.random.poisson",
    "numpy.random.seed",
    "numpy.random.uniform",
    "numpy.sum",
    "numpy.vstack",
    "range",
    "sbm"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.test_sbm_singlewt_undirected_loopless": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "graspy.utils.utils.is_loopless",
    "graspy.utils.utils.is_symmetric",
    "len",
    "numpy.arange",
    "numpy.isclose",
    "numpy.mean",
    "numpy.random.normal",
    "numpy.random.seed",
    "numpy.std",
    "numpy.sum",
    "range",
    "sbm",
    "tests.test_sims.remove_diagonal"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_ZINM": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "tests.test_sims.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_sims.Test_ZINM.setUpClass": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "classmethod",
    "dict",
    "numpy.random.normal"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_ZINM.test_bad_inputs": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "er_nm",
    "numpy.random"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_ZINM.test_loop_directed": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "er_nm",
    "graspy.utils.utils.is_loopless",
    "graspy.utils.utils.is_symmetric",
    "numpy.isclose",
    "numpy.mean",
    "numpy.random.seed",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_ZINM.test_loop_undirected": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "er_nm",
    "graspy.utils.utils.is_loopless",
    "graspy.utils.utils.is_symmetric",
    "numpy.diag",
    "numpy.isclose",
    "numpy.mean",
    "numpy.random.seed",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_ZINM.test_noloop_directed": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "er_nm",
    "graspy.utils.utils.is_loopless",
    "graspy.utils.utils.is_symmetric",
    "numpy.isclose",
    "numpy.mean",
    "numpy.random.seed",
    "numpy.std",
    "tests.test_sims.remove_diagonal"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_ZINM.test_noloop_undirected": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "er_nm",
    "graspy.utils.utils.is_loopless",
    "graspy.utils.utils.is_symmetric",
    "numpy.isclose",
    "numpy.mean",
    "numpy.random.seed",
    "numpy.std",
    "tests.test_sims.remove_diagonal"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_ZINP": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "tests.test_sims.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_sims.Test_ZINP.setUpClass": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "classmethod",
    "dict",
    "numpy.random.normal"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_ZINP.test_bad_inputs": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "er_np",
    "numpy.array",
    "numpy.random",
    "numpy.random.power"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_ZINP.test_loop_directed": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "er_np",
    "float",
    "graspy.utils.utils.is_loopless",
    "graspy.utils.utils.is_symmetric",
    "numpy.isclose",
    "numpy.mean",
    "numpy.prod",
    "numpy.random.seed",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_ZINP.test_loop_undirected": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "er_np",
    "float",
    "graspy.utils.utils.is_loopless",
    "graspy.utils.utils.is_symmetric",
    "numpy.isclose",
    "numpy.mean",
    "numpy.prod",
    "numpy.random.seed",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_ZINP.test_noloop_directed": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "er_np",
    "float",
    "graspy.utils.utils.is_loopless",
    "graspy.utils.utils.is_symmetric",
    "len",
    "numpy.isclose",
    "numpy.mean",
    "numpy.random.seed",
    "numpy.std",
    "tests.test_sims.remove_diagonal"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.Test_ZINP.test_noloop_undirected": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "er_np",
    "float",
    "graspy.utils.utils.is_loopless",
    "graspy.utils.utils.is_symmetric",
    "len",
    "numpy.isclose",
    "numpy.mean",
    "numpy.random.seed",
    "numpy.std",
    "tests.test_sims.remove_diagonal"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.gs": {
  "data": {
   "shadows": "graspy"
  },
  "type": "import"
 },
 "tests.test_sims.is_loopless": {
  "data": {
   "shadows": "graspy.utils.utils.is_loopless"
  },
  "type": "import"
 },
 "tests.test_sims.is_symmetric": {
  "data": {
   "shadows": "graspy.utils.utils.is_symmetric"
  },
  "type": "import"
 },
 "tests.test_sims.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_sims.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "tests.test_sims.remove_diagonal": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.indices",
    "numpy.ravel_multi_index",
    "numpy.setdiff1d",
    "numpy.unravel_index",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "tests.test_sims.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "tests.test_sims_corr": {
  "data": {},
  "type": "module"
 },
 "tests.test_sims_corr.Test_ER_Corr": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "tests.test_sims_corr.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_sims_corr.Test_ER_Corr.setUpClass": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "classmethod",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "tests.test_sims_corr.Test_ER_Corr.test_bad_input": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "graspy.simulations.simulations_corr.er_corr"
   ]
  },
  "type": "function"
 },
 "tests.test_sims_corr.Test_ER_Corr.test_er_corr": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "bool",
    "graspy.simulations.simulations_corr.er_corr",
    "numpy.corrcoef",
    "numpy.eye",
    "numpy.isclose",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "tests.test_sims_corr.Test_SBM_Corr": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "tests.test_sims_corr.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_sims_corr.Test_SBM_Corr.setUpClass": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "classmethod",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "tests.test_sims_corr.Test_SBM_Corr.test_bad_input": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "graspy.simulations.simulations_corr.sbm_corr",
    "tests.test_sims_corr.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_sims_corr.Test_SBM_Corr.test_sbm_corr": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "bool",
    "graspy.simulations.simulations_corr.sbm_corr",
    "numpy.corrcoef",
    "numpy.eye",
    "numpy.isclose",
    "numpy.sum",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "tests.test_sims_corr.Test_Sample_Corr": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "tests.test_sims_corr.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_sims_corr.Test_Sample_Corr.setUpClass": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "classmethod",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "tests.test_sims_corr.Test_Sample_Corr.test_bad_input": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "TypeError",
    "graspy.simulations.simulations_corr.sample_edges_corr",
    "tests.test_sims_corr.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_sims_corr.Test_Sample_Corr.test_sample_edges_corr": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "bool",
    "graspy.simulations.simulations_corr.sample_edges_corr",
    "numpy.corrcoef",
    "numpy.eye",
    "numpy.isclose",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "tests.test_sims_corr.er_corr": {
  "data": {
   "shadows": "graspy.simulations.simulations_corr.er_corr"
  },
  "type": "import"
 },
 "tests.test_sims_corr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_sims_corr.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_sims_corr.sample_edges_corr": {
  "data": {
   "shadows": "graspy.simulations.simulations_corr.sample_edges_corr"
  },
  "type": "import"
 },
 "tests.test_sims_corr.sbm_corr": {
  "data": {
   "shadows": "graspy.simulations.simulations_corr.sbm_corr"
  },
  "type": "import"
 },
 "tests.test_sims_corr.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "tests.test_sims_corr.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "tests.test_sklearn": {
  "data": {
   "symbols_in_volume": [
    "sklearn.utils.estimator_checks.check_estimator",
    "tests.test_sklearn.graspy"
   ]
  },
  "type": "module"
 },
 "tests.test_sklearn.check_estimator": {
  "data": {
   "shadows": "sklearn.utils.estimator_checks.check_estimator"
  },
  "type": "import"
 },
 "tests.test_sklearn.graspy": {
  "data": {
   "shadows": "graspy"
  },
  "type": "import"
 },
 "tests.test_sklearn.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_spectral_embed": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tests.test_spectral_embed.unittest"
   ]
  },
  "type": "module"
 },
 "tests.test_spectral_embed.AdjacencySpectralEmbed": {
  "data": {
   "shadows": "graspy.embed.ase.AdjacencySpectralEmbed"
  },
  "type": "import"
 },
 "tests.test_spectral_embed.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "tests.test_spectral_embed.LaplacianSpectralEmbed": {
  "data": {
   "shadows": "graspy.embed.lse.LaplacianSpectralEmbed"
  },
  "type": "import"
 },
 "tests.test_spectral_embed.TestAdjacencySpectralEmbed": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "tests.test_spectral_embed.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_spectral_embed.TestAdjacencySpectralEmbed.test_input_checks": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "TypeError",
    "graspy.embed.ase.AdjacencySpectralEmbed"
   ]
  },
  "type": "function"
 },
 "tests.test_spectral_embed.TestAdjacencySpectralEmbed.test_output_dim": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "graspy.embed.ase.AdjacencySpectralEmbed",
    "tests.test_spectral_embed._test_output_dim"
   ]
  },
  "type": "function"
 },
 "tests.test_spectral_embed.TestAdjacencySpectralEmbed.test_sbm_er_binary_undirected": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "graspy.embed.ase.AdjacencySpectralEmbed",
    "numpy.array",
    "tests.test_spectral_embed._test_sbm_er_binary_undirected"
   ]
  },
  "type": "function"
 },
 "tests.test_spectral_embed.TestAdjacencySpectralEmbed.test_unconnected_warning": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "UserWarning",
    "graspy.embed.ase.AdjacencySpectralEmbed",
    "graspy.simulations.simulations.er_nm"
   ]
  },
  "type": "function"
 },
 "tests.test_spectral_embed.TestLaplacianSpectralEmbed": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "tests.test_spectral_embed.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_spectral_embed.TestLaplacianSpectralEmbed.test_different_forms": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "graspy.embed.lse.LaplacianSpectralEmbed",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "tests.test_spectral_embed.TestLaplacianSpectralEmbed.test_output_dim": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "graspy.embed.lse.LaplacianSpectralEmbed",
    "tests.test_spectral_embed._test_output_dim"
   ]
  },
  "type": "function"
 },
 "tests.test_spectral_embed.TestLaplacianSpectralEmbed.test_sbm_er_binary_undirected": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "graspy.embed.lse.LaplacianSpectralEmbed",
    "numpy.array",
    "tests.test_spectral_embed._test_sbm_er_binary_undirected"
   ]
  },
  "type": "function"
 },
 "tests.test_spectral_embed.TestLaplacianSpectralEmbed.test_unconnected_warning": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "UserWarning",
    "graspy.embed.lse.LaplacianSpectralEmbed",
    "graspy.simulations.simulations.sbm"
   ]
  },
  "type": "function"
 },
 "tests.test_spectral_embed._kmeans_comparison": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "range",
    "sklearn.cluster.KMeans",
    "sklearn.metrics.adjusted_rand_score"
   ]
  },
  "type": "function"
 },
 "tests.test_spectral_embed._test_output_dim": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "graspy.simulations.simulations.er_nm",
    "method"
   ]
  },
  "type": "function"
 },
 "tests.test_spectral_embed._test_sbm_er_binary_undirected": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "graspy.simulations.simulations.er_np",
    "graspy.simulations.simulations.sbm",
    "method",
    "numpy.int8",
    "numpy.random.seed",
    "numpy.zeros",
    "range",
    "tests.test_spectral_embed._kmeans_comparison"
   ]
  },
  "type": "function"
 },
 "tests.test_spectral_embed.adjusted_rand_score": {
  "data": {
   "shadows": "sklearn.metrics.adjusted_rand_score"
  },
  "type": "import"
 },
 "tests.test_spectral_embed.er_nm": {
  "data": {
   "shadows": "graspy.simulations.simulations.er_nm"
  },
  "type": "import"
 },
 "tests.test_spectral_embed.er_np": {
  "data": {
   "shadows": "graspy.simulations.simulations.er_np"
  },
  "type": "import"
 },
 "tests.test_spectral_embed.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_spectral_embed.sbm": {
  "data": {
   "shadows": "graspy.simulations.simulations.sbm"
  },
  "type": "import"
 },
 "tests.test_spectral_embed.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "tests.test_svd": {
  "data": {},
  "type": "module"
 },
 "tests.test_svd.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "tests.test_svd.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "tests.test_svd.er_np": {
  "data": {
   "shadows": "graspy.simulations.simulations.er_np"
  },
  "type": "import"
 },
 "tests.test_svd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_svd.procrustes": {
  "data": {
   "shadows": "scipy.spatial.procrustes"
  },
  "type": "import"
 },
 "tests.test_svd.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_svd.selectSVD": {
  "data": {
   "shadows": "graspy.embed.svd.selectSVD"
  },
  "type": "import"
 },
 "tests.test_svd.test_bad_inputs": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ValueError",
    "graspy.embed.svd.selectSVD",
    "numpy.random.normal",
    "tests.test_svd.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_svd.test_outputs": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "graspy.embed.svd.selectSVD",
    "numpy.diag",
    "numpy.float",
    "numpy.random.binomial",
    "numpy.random.seed",
    "numpy.repeat",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.vstack",
    "scipy.spatial.procrustes"
   ]
  },
  "type": "function"
 },
 "tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "tests.test_utils.TestChecks": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "tests.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_utils.TestChecks.setUpClass": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "numpy.arange",
    "numpy.put",
    "numpy.random.choice",
    "numpy.random.normal",
    "numpy.zeros",
    "round"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.TestChecks.test_is_almost_symmetric": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "graspy.utils.utils.is_almost_symmetric",
    "graspy.utils.utils.is_symmetric",
    "numpy.corrcoef",
    "numpy.random.normal",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.TestChecks.test_is_fully_connected": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "graspy.utils.utils.is_fully_connected",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.TestChecks.test_is_unweighted": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "graspy.utils.utils.is_unweighted",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.TestDiagonalAugment": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "tests.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_utils.TestDiagonalAugment.test_augment_diagonal_directed": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "float",
    "graspy.utils.utils.augment_diagonal",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.TestDiagonalAugment.test_augment_diagonal_undirected": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "float",
    "graspy.utils.utils.augment_diagonal",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.TestDiagonalAugment.test_lcc_bad_matrix": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "ValueError",
    "graspy.utils.utils.get_lcc",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.TestInput": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "tests.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_utils.TestInput.setUpClass": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "numpy.arange",
    "numpy.put",
    "numpy.random.choice",
    "numpy.random.normal",
    "numpy.zeros",
    "round"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.TestInput.test_graphin": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "graspy.utils.utils.import_graph",
    "networkx.from_numpy_array",
    "networkx.to_numpy_array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.TestInput.test_npin": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "graspy.utils.utils.import_graph",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.TestInput.test_wrongtypein": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "TypeError",
    "graspy.utils.utils.import_graph"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.TestLCC": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "tests.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_utils.TestLCC.test_lcc_networkx": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "graspy.utils.utils.get_lcc",
    "networkx.DiGraph",
    "networkx.to_numpy_array",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.TestLCC.test_lcc_networkx_undirected": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "graspy.utils.utils.get_lcc",
    "networkx.Graph",
    "networkx.to_numpy_array",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.TestLCC.test_lcc_numpy": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "graspy.utils.utils.get_lcc",
    "networkx.DiGraph",
    "networkx.to_numpy_array",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.TestLCC.test_multigraph_lcc_networkx": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "enumerate",
    "graspy.utils.utils.get_multigraph_intersect_lcc",
    "networkx.DiGraph",
    "networkx.to_numpy_array",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.TestLCC.test_multigraph_lcc_numpylist": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "enumerate",
    "graspy.utils.utils.get_multigraph_intersect_lcc",
    "networkx.DiGraph",
    "networkx.to_numpy_array",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.TestLCC.test_multigraph_lcc_numpystack": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "enumerate",
    "graspy.utils.utils.get_multigraph_intersect_lcc",
    "networkx.DiGraph",
    "networkx.to_numpy_array",
    "numpy.array",
    "numpy.stack",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.TestLCC.test_multigraph_lcc_recurse_numpylist": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "enumerate",
    "graspy.utils.utils.get_multigraph_intersect_lcc",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.TestLCC.test_multigraph_union": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "graspy.utils.utils.get_multigraph_union_lcc",
    "numpy.array",
    "numpy.stack",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.TestToLaplace": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "tests.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_utils.TestToLaplace.setUpClass": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "classmethod",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.TestToLaplace.test_to_laplace_DAD": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "graspy.utils.utils.to_laplace",
    "math.sqrt",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.TestToLaplace.test_to_laplace_IDAD": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "graspy.utils.utils.to_laplace",
    "math.sqrt",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.TestToLaplace.test_to_laplace_RDAD": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "graspy.utils.utils.to_laplace",
    "math.sqrt",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.TestToLaplace.test_to_laplace_directed": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "graspy.utils.utils.to_laplace",
    "math.sqrt",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.TestToLaplace.test_to_laplace_regularizer_kwarg": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "graspy.utils.utils.to_laplace",
    "math.sqrt",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.TestToLaplace.test_to_laplace_symmetric": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "graspy.utils.utils.is_symmetric",
    "graspy.utils.utils.to_laplace"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.TestToLaplace.test_to_laplace_unsuported": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "TypeError",
    "graspy.utils.utils.to_laplace"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.TestToLaplace.test_to_laplace_unsuported_regularizer": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "graspy.utils.utils.to_laplace"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "tests.test_utils.gus": {
  "data": {
   "shadows": "graspy.utils.utils"
  },
  "type": "import"
 },
 "tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_utils.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "tests.test_utils.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "tests.test_utils.test_binarize": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "graspy.utils.utils.binarize",
    "numpy.array",
    "numpy.ones_like",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 }
}