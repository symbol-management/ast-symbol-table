{
 "graspy": {
  "lineno": null,
  "symbols_in_volume": [
   "warnings.filterwarnings",
   "warnings.simplefilter"
  ],
  "type": "module"
 },
 "graspy.cluster": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.cluster.autogmm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.cluster.autogmm.AutoGMMCluster": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "graspy.cluster.autogmm.AutoGMMCluster.__init__": {
  "lineno": 213,
  "symbols_in_volume": [
   "numpy.argwhere",
   "numpy.array",
   "numpy.copy",
   "numpy.ndarray",
   "numpy.size",
   "numpy.unique"
  ],
  "type": "function"
 },
 "graspy.cluster.autogmm.AutoGMMCluster._fit_cluster": {
  "lineno": 382,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.inf",
   "numpy.random.choice",
   "sklearn.cluster.AgglomerativeClustering",
   "sklearn.metrics.adjusted_rand_score",
   "sklearn.mixture.GaussianMixture"
  ],
  "type": "function"
 },
 "graspy.cluster.autogmm.AutoGMMCluster.fit": {
  "lineno": 461,
  "symbols_in_volume": [
   "joblib.Parallel",
   "joblib.delayed",
   "numpy.any",
   "numpy.where",
   "pandas.DataFrame",
   "sklearn.model_selection.ParameterGrid"
  ],
  "type": "function"
 },
 "graspy.cluster.autogmm.AutoGMMCluster.fit._fit_for_data": {
  "lineno": 528,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.cluster.autogmm._increase_reg": {
  "lineno": 553,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.cluster.autogmm._labels_to_onehot": {
  "lineno": 608,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "graspy.cluster.autogmm._onehot_to_initial_params": {
  "lineno": 574,
  "symbols_in_volume": [
   "numpy.dot",
   "sklearn.mixture.gaussian_mixture._compute_precision_cholesky",
   "sklearn.mixture.gaussian_mixture._estimate_gaussian_parameters"
  ],
  "type": "function"
 },
 "graspy.cluster.autogmm._process_paramgrid": {
  "lineno": 630,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.cluster.base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.cluster.base.BaseCluster": {
  "lineno": 22,
  "symbols_in_volume": [
   "abc.ABC",
   "sklearn.base.BaseEstimator",
   "sklearn.base.ClusterMixin"
  ],
  "type": "class"
 },
 "graspy.cluster.base.BaseCluster.fit": {
  "lineno": 27,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "graspy.cluster.base.BaseCluster.fit_predict": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.cluster.base.BaseCluster.predict": {
  "lineno": 47,
  "symbols_in_volume": [
   "sklearn.metrics.adjusted_rand_score",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "graspy.cluster.gclust": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.cluster.gclust.GaussianCluster": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "graspy.cluster.gclust.GaussianCluster.__init__": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.unique"
  ],
  "type": "function"
 },
 "graspy.cluster.gclust.GaussianCluster.fit": {
  "lineno": 180,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "sklearn.metrics.adjusted_rand_score",
   "sklearn.mixture.GaussianMixture",
   "sklearn.model_selection.ParameterGrid"
  ],
  "type": "function"
 },
 "graspy.cluster.kclust": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.cluster.kclust.KMeansCluster": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "graspy.cluster.kclust.KMeansCluster.__init__": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.cluster.kclust.KMeansCluster.fit": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.argmax",
   "sklearn.cluster.KMeans",
   "sklearn.metrics.adjusted_rand_score",
   "sklearn.metrics.silhouette_score"
  ],
  "type": "function"
 },
 "graspy.datasets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.datasets.base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.datasets.base.load_drosophila_left": {
  "lineno": 5,
  "symbols_in_volume": [
   "numpy.loadtxt",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "graspy.datasets.base.load_drosophila_right": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.loadtxt",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "graspy.embed": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.embed.ase": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.embed.ase.AdjacencySpectralEmbed": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "graspy.embed.ase.AdjacencySpectralEmbed.__init__": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.embed.ase.AdjacencySpectralEmbed.fit": {
  "lineno": 134,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "graspy.embed.base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.embed.base.BaseEmbed": {
  "lineno": 24,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "graspy.embed.base.BaseEmbed.__init__": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.embed.base.BaseEmbed._fit_transform": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.embed.base.BaseEmbed._pairwise": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.embed.base.BaseEmbed._reduce_dim": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "graspy.embed.base.BaseEmbed.fit": {
  "lineno": 112,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "graspy.embed.base.BaseEmbed.fit_transform": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.embed.base.BaseEmbedMulti": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "class"
 },
 "graspy.embed.base.BaseEmbedMulti.__init__": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.embed.base.BaseEmbedMulti._check_input_graphs": {
  "lineno": 187,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "graspy.embed.lse": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.embed.lse.LaplacianSpectralEmbed": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "graspy.embed.lse.LaplacianSpectralEmbed.__init__": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.embed.lse.LaplacianSpectralEmbed.fit": {
  "lineno": 136,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "graspy.embed.mase": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.embed.mase.MultipleASE": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "graspy.embed.mase.MultipleASE.__init__": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.embed.mase.MultipleASE._reduce_dim": {
  "lineno": 117,
  "symbols_in_volume": [
   "numpy.ceil",
   "numpy.diag",
   "numpy.hstack",
   "numpy.log2",
   "numpy.max",
   "numpy.min",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "graspy.embed.mase.MultipleASE.fit": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.embed.mase.MultipleASE.fit_transform": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.embed.mds": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.embed.mds.ClassicalMDS": {
  "lineno": 42,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "graspy.embed.mds.ClassicalMDS.__init__": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.embed.mds.ClassicalMDS._compute_euclidean_distances": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "graspy.embed.mds.ClassicalMDS.fit": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.ndarray",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "graspy.embed.mds.ClassicalMDS.fit_transform": {
  "lineno": 209,
  "symbols_in_volume": [
   "numpy.diag"
  ],
  "type": "function"
 },
 "graspy.embed.mds._get_centering_matrix": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.identity",
   "numpy.ones"
  ],
  "type": "function"
 },
 "graspy.embed.omni": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.embed.omni.OmnibusEmbed": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "class"
 },
 "graspy.embed.omni.OmnibusEmbed.__init__": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.embed.omni.OmnibusEmbed.fit": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.mean",
   "warnings.warn"
  ],
  "type": "function"
 },
 "graspy.embed.omni.OmnibusEmbed.fit_transform": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.embed.omni._get_omni_matrix": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "graspy.embed.svd": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.embed.svd._compute_likelihood": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.mean",
   "numpy.sqrt",
   "numpy.sum",
   "numpy.zeros",
   "scipy.stats.norm.logpdf"
  ],
  "type": "function"
 },
 "graspy.embed.svd.selectSVD": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.argsort",
   "scipy.linalg.svd",
   "scipy.sparse.linalg.svds",
   "sklearn.utils.extmath.randomized_svd"
  ],
  "type": "function"
 },
 "graspy.embed.svd.select_dimension": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.ceil",
   "numpy.log2",
   "numpy.min",
   "numpy.ndarray",
   "numpy.sort",
   "scipy.sparse.linalg.svds"
  ],
  "type": "function"
 },
 "graspy.inference": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.inference.base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.inference.base.BaseInference": {
  "lineno": 20,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "graspy.inference.base.BaseInference.__init__": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.integer"
  ],
  "type": "function"
 },
 "graspy.inference.base.BaseInference._bootstrap": {
  "lineno": 59,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "graspy.inference.base.BaseInference._embed": {
  "lineno": 63,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "graspy.inference.base.BaseInference.fit": {
  "lineno": 76,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "graspy.inference.latent_distribution_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.inference.latent_distribution_test.LatentDistributionTest": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "graspy.inference.latent_distribution_test.LatentDistributionTest.__init__": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.inference.latent_distribution_test.LatentDistributionTest._bootstrap": {
  "lineno": 119,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.concatenate",
   "numpy.random.choice",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "graspy.inference.latent_distribution_test.LatentDistributionTest._embed": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "graspy.inference.latent_distribution_test.LatentDistributionTest._gaussian_covariance": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.expand_dims",
   "numpy.sum"
  ],
  "type": "function"
 },
 "graspy.inference.latent_distribution_test.LatentDistributionTest._median_heuristic": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.median",
   "numpy.multiply"
  ],
  "type": "function"
 },
 "graspy.inference.latent_distribution_test.LatentDistributionTest._statistic": {
  "lineno": 92,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.sum"
  ],
  "type": "function"
 },
 "graspy.inference.latent_distribution_test.LatentDistributionTest.fit": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.inference.latent_position_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.inference.latent_position_test.LatentPositionTest": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "graspy.inference.latent_position_test.LatentPositionTest.__init__": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.inference.latent_position_test.LatentPositionTest._bootstrap": {
  "lineno": 127,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "graspy.inference.latent_position_test.LatentPositionTest._difference_norm": {
  "lineno": 138,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "numpy.sqrt",
   "numpy.sum",
   "scipy.linalg.orthogonal_procrustes"
  ],
  "type": "function"
 },
 "graspy.inference.latent_position_test.LatentPositionTest._embed": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.inference.latent_position_test.LatentPositionTest.fit": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.match": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.match.faq": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.match.faq.FastApproximateQAP": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "graspy.match.faq.FastApproximateQAP.__init__": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.match.faq.FastApproximateQAP.fit": {
  "lineno": 127,
  "symbols_in_volume": [
   "math.inf",
   "numpy.array",
   "numpy.ix_",
   "numpy.linalg.norm",
   "numpy.ones",
   "numpy.random.permutation",
   "numpy.random.rand",
   "numpy.trace",
   "numpy.transpose",
   "numpy.zeros",
   "scipy.optimize.linear_sum_assignment",
   "scipy.optimize.minimize_scalar",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "graspy.match.faq.FastApproximateQAP.fit.f": {
  "lineno": 204,
  "symbols_in_volume": [
   "numpy.trace",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "graspy.match.faq.FastApproximateQAP.fit_predict": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.match.skp": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.match.skp.SinkhornKnopp": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "graspy.match.skp.SinkhornKnopp.__init__": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "graspy.match.skp.SinkhornKnopp.fit": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.any",
   "numpy.asarray",
   "numpy.copy",
   "numpy.diag",
   "numpy.ones",
   "numpy.squeeze",
   "numpy.sum",
   "warnings.warn"
  ],
  "type": "function"
 },
 "graspy.models": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.models.base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.models.base.BaseGraphEstimator": {
  "lineno": 34,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "graspy.models.base.BaseGraphEstimator.__init__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.models.base.BaseGraphEstimator._n_parameters": {
  "lineno": 209,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "graspy.models.base.BaseGraphEstimator._pairwise": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.models.base.BaseGraphEstimator.bic": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.log",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "graspy.models.base.BaseGraphEstimator.fit": {
  "lineno": 168,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "graspy.models.base.BaseGraphEstimator.mse": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "graspy.models.base.BaseGraphEstimator.sample": {
  "lineno": 175,
  "symbols_in_volume": [
   "numpy.zeros",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "graspy.models.base.BaseGraphEstimator.score": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.sum",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "graspy.models.base.BaseGraphEstimator.score_samples": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.log",
   "numpy.multiply",
   "numpy.shape",
   "numpy.tril_indices_from",
   "numpy.triu_indices_from",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "graspy.models.base._calculate_p": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.count_nonzero"
  ],
  "type": "function"
 },
 "graspy.models.base._check_n_samples": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.models.base._n_to_labels": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "graspy.models.er": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.models.er.DCEREstimator": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "class"
 },
 "graspy.models.er.DCEREstimator.__init__": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.models.er.DCEREstimator._n_parameters": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.models.er.DCEREstimator.fit": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "graspy.models.er.EREstimator": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "graspy.models.er.EREstimator.__init__": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.models.er.EREstimator._n_parameters": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.models.er.EREstimator.fit": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "graspy.models.rdpg": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.models.rdpg.RDPGEstimator": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "graspy.models.rdpg.RDPGEstimator.__init__": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.models.rdpg.RDPGEstimator._n_parameters": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.models.rdpg.RDPGEstimator.fit": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.diag"
  ],
  "type": "function"
 },
 "graspy.models.sbm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.models.sbm.DCSBMEstimator": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "class"
 },
 "graspy.models.sbm.DCSBMEstimator.__init__": {
  "lineno": 321,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.models.sbm.DCSBMEstimator._estimate_assignments": {
  "lineno": 345,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.models.sbm.DCSBMEstimator._n_parameters": {
  "lineno": 421,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.models.sbm.DCSBMEstimator.fit": {
  "lineno": 358,
  "symbols_in_volume": [
   "numpy.count_nonzero",
   "numpy.diag",
   "numpy.float64",
   "numpy.newaxis",
   "numpy.outer",
   "numpy.stack",
   "numpy.sum",
   "numpy.unique"
  ],
  "type": "function"
 },
 "graspy.models.sbm.SBMEstimator": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "class"
 },
 "graspy.models.sbm.SBMEstimator.__init__": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.models.sbm.SBMEstimator._estimate_assignments": {
  "lineno": 136,
  "symbols_in_volume": [
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "graspy.models.sbm.SBMEstimator._n_parameters": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.models.sbm.SBMEstimator.fit": {
  "lineno": 156,
  "symbols_in_volume": [
   "numpy.unique",
   "sklearn.utils.check_X_y"
  ],
  "type": "function"
 },
 "graspy.models.sbm._block_to_full": {
  "lineno": 482,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.models.sbm._calculate_block_p": {
  "lineno": 456,
  "symbols_in_volume": [
   "numpy.count_nonzero",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "graspy.models.sbm._check_common_inputs": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.models.sbm._get_block_indices": {
  "lineno": 434,
  "symbols_in_volume": [
   "numpy.unique",
   "numpy.where"
  ],
  "type": "function"
 },
 "graspy.pipeline": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.pipeline.mug2vec": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.pipeline.mug2vec.mug2vec": {
  "lineno": 22,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "graspy.pipeline.mug2vec.mug2vec.__init__": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.pipeline.mug2vec.mug2vec._check_inputs": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.pipeline.mug2vec.mug2vec.fit": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.pipeline.mug2vec.mug2vec.fit_transform": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.plot": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.plot.plot": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.plot.plot._check_common_inputs": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.plot.plot._distplot": {
  "lineno": 685,
  "symbols_in_volume": [
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.gca",
   "matplotlib.pyplot.legend",
   "matplotlib.pyplot.plot",
   "matplotlib.pyplot.title",
   "matplotlib.pyplot.xlabel",
   "matplotlib.pyplot.ylabel",
   "numpy.arange",
   "numpy.sort",
   "numpy.unique",
   "numpy.where",
   "seaborn.color_palette",
   "seaborn.distplot",
   "seaborn.plotting_context"
  ],
  "type": "function"
 },
 "graspy.plot.plot._get_freq_vec": {
  "lineno": 981,
  "symbols_in_volume": [
   "numpy.unique"
  ],
  "type": "function"
 },
 "graspy.plot.plot._get_freqs": {
  "lineno": 964,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.hstack"
  ],
  "type": "function"
 },
 "graspy.plot.plot._plot_brackets": {
  "lineno": 1107,
  "symbols_in_volume": [
   "numpy.linspace"
  ],
  "type": "function"
 },
 "graspy.plot.plot._plot_groups": {
  "lineno": 998,
  "symbols_in_volume": [
   "mpl_toolkits.axes_grid1.make_axes_locatable",
   "numpy.array",
   "numpy.hstack",
   "numpy.linspace",
   "numpy.ones_like",
   "numpy.pi",
   "numpy.tan",
   "numpy.tile"
  ],
  "type": "function"
 },
 "graspy.plot.plot._process_graphs": {
  "lineno": 121,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "numpy.ones_like",
   "sklearn.utils.check_consistent_length"
  ],
  "type": "function"
 },
 "graspy.plot.plot._sort_graph": {
  "lineno": 958,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.plot.plot._sort_inds": {
  "lineno": 924,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "graspy.plot.plot._transform": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.log10",
   "sklearn.preprocessing.Binarizer"
  ],
  "type": "function"
 },
 "graspy.plot.plot._unique_like": {
  "lineno": 988,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.unique"
  ],
  "type": "function"
 },
 "graspy.plot.plot.degreeplot": {
  "lineno": 727,
  "symbols_in_volume": [
   "numpy.count_nonzero",
   "sklearn.utils.check_array",
   "sklearn.utils.check_consistent_length"
  ],
  "type": "function"
 },
 "graspy.plot.plot.edgeplot": {
  "lineno": 794,
  "symbols_in_volume": [
   "numpy.tile",
   "sklearn.utils.check_array",
   "sklearn.utils.check_consistent_length"
  ],
  "type": "function"
 },
 "graspy.plot.plot.gridplot": {
  "lineno": 356,
  "symbols_in_volume": [
   "matplotlib.pyplot.title",
   "numpy.arange",
   "numpy.vstack",
   "numpy.where",
   "pandas.DataFrame",
   "pandas.concat",
   "seaborn.color_palette",
   "seaborn.plotting_context",
   "seaborn.relplot",
   "seaborn.set_style",
   "sklearn.utils.check_consistent_length"
  ],
  "type": "function"
 },
 "graspy.plot.plot.heatmap": {
  "lineno": 148,
  "symbols_in_volume": [
   "matplotlib.colors.Colormap",
   "matplotlib.pyplot.subplots",
   "seaborn.heatmap",
   "seaborn.plotting_context"
  ],
  "type": "function"
 },
 "graspy.plot.plot.pairplot": {
  "lineno": 529,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.unique",
   "pandas.DataFrame",
   "pandas.concat",
   "seaborn.pairplot",
   "seaborn.plotting_context"
  ],
  "type": "function"
 },
 "graspy.plot.plot.screeplot": {
  "lineno": 859,
  "symbols_in_volume": [
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.gca",
   "matplotlib.pyplot.plot",
   "matplotlib.pyplot.title",
   "matplotlib.pyplot.xlabel",
   "matplotlib.pyplot.ylabel",
   "numpy.cumsum",
   "seaborn.plotting_context",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "graspy.simulations": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.simulations.simulations": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.simulations.simulations._n_to_labels": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "graspy.simulations.simulations.er_nm": {
  "lineno": 180,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.integer",
   "numpy.issubdtype",
   "numpy.logical_not",
   "numpy.number",
   "numpy.random.choice",
   "numpy.ravel_multi_index",
   "numpy.triu_indices",
   "numpy.unravel_index",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "graspy.simulations.simulations.er_np": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.floating",
   "numpy.integer",
   "numpy.issubdtype",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "graspy.simulations.simulations.p_from_latent": {
  "lineno": 739,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "graspy.simulations.simulations.rdpg": {
  "lineno": 631,
  "symbols_in_volume": [
   "numpy.count_nonzero",
   "numpy.floating",
   "numpy.integer",
   "numpy.issubdtype",
   "numpy.number"
  ],
  "type": "function"
 },
 "graspy.simulations.simulations.sample_edges": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.ndarray",
   "numpy.random.binomial",
   "numpy.triu_indices",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "graspy.simulations.simulations.sbm": {
  "lineno": 314,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.array",
   "numpy.diag",
   "numpy.full",
   "numpy.integer",
   "numpy.isclose",
   "numpy.issubdtype",
   "numpy.ndarray",
   "numpy.number",
   "numpy.random.choice",
   "numpy.random.uniform",
   "numpy.ravel_multi_index",
   "numpy.unravel_index",
   "numpy.zeros",
   "warnings.warn"
  ],
  "type": "function"
 },
 "graspy.simulations.simulations_corr": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.simulations.simulations_corr.check_dirloop": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.simulations.simulations_corr.check_r": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.floating",
   "numpy.issubdtype"
  ],
  "type": "function"
 },
 "graspy.simulations.simulations_corr.check_rel_er": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.simulations.simulations_corr.check_rel_sbm": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "graspy.simulations.simulations_corr.er_corr": {
  "lineno": 138,
  "symbols_in_volume": [
   "numpy.floating",
   "numpy.integer",
   "numpy.issubdtype",
   "numpy.ones"
  ],
  "type": "function"
 },
 "graspy.simulations.simulations_corr.sample_edges_corr": {
  "lineno": 56,
  "symbols_in_volume": [
   "graspy.simulations.sample_edges",
   "numpy.ndarray",
   "numpy.where"
  ],
  "type": "function"
 },
 "graspy.simulations.simulations_corr.sbm_corr": {
  "lineno": 220,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.array",
   "numpy.cumsum",
   "numpy.insert",
   "numpy.integer",
   "numpy.issubdtype",
   "numpy.ndarray",
   "numpy.number",
   "numpy.ones",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "graspy.subgraph": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.subgraph.sg": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.subgraph.sg.SignalSubgraph": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "graspy.subgraph.sg.SignalSubgraph.__construct_contingency": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.shape",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "graspy.subgraph.sg.SignalSubgraph.fit": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.amin",
   "numpy.argsort",
   "numpy.array",
   "numpy.dstack",
   "numpy.ndarray",
   "numpy.ones",
   "numpy.shape",
   "numpy.sort",
   "numpy.sum",
   "numpy.transpose",
   "numpy.unique",
   "numpy.unravel_index",
   "scipy.stats.fisher_exact"
  ],
  "type": "function"
 },
 "graspy.subgraph.sg.SignalSubgraph.fit_transform": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.full",
   "numpy.shape"
  ],
  "type": "function"
 },
 "graspy.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.utils.ptr": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.utils.ptr.pass_to_ranks": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.triu",
   "scipy.stats.rankdata"
  ],
  "type": "function"
 },
 "graspy.utils.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "graspy.utils.utils.augment_diagonal": {
  "lineno": 577,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.diag",
   "numpy.sum"
  ],
  "type": "function"
 },
 "graspy.utils.utils.binarize": {
  "lineno": 623,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.utils.utils.cartprod": {
  "lineno": 651,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.meshgrid",
   "numpy.roll",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "graspy.utils.utils.get_lcc": {
  "lineno": 405,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.MultiDiGraph",
   "networkx.MultiGraph",
   "networkx.connected_components",
   "networkx.from_numpy_array",
   "networkx.to_numpy_array",
   "networkx.weakly_connected_components",
   "numpy.array",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "graspy.utils.utils.get_multigraph_intersect_lcc": {
  "lineno": 508,
  "symbols_in_volume": [
   "functools.reduce",
   "numpy.intersect1d",
   "numpy.ndarray",
   "numpy.stack"
  ],
  "type": "function"
 },
 "graspy.utils.utils.get_multigraph_union_lcc": {
  "lineno": 455,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "numpy.shape",
   "numpy.stack"
  ],
  "type": "function"
 },
 "graspy.utils.utils.import_edgelist": {
  "lineno": 81,
  "symbols_in_volume": [
   "collections.Iterable",
   "functools.reduce",
   "networkx.read_weighted_edgelist",
   "networkx.to_numpy_array",
   "numpy.float",
   "numpy.sort",
   "numpy.union1d",
   "pathlib.Path",
   "warnings.warn"
  ],
  "type": "function"
 },
 "graspy.utils.utils.import_graph": {
  "lineno": 25,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.MultiDiGraph",
   "networkx.MultiGraph",
   "networkx.to_numpy_array",
   "numpy.float",
   "numpy.float32",
   "numpy.float64",
   "numpy.max",
   "numpy.memmap",
   "numpy.ndarray",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "graspy.utils.utils.is_almost_symmetric": {
  "lineno": 177,
  "symbols_in_volume": [
   "numpy.allclose"
  ],
  "type": "function"
 },
 "graspy.utils.utils.is_fully_connected": {
  "lineno": 359,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.MultiDiGraph",
   "networkx.MultiGraph",
   "networkx.from_numpy_array",
   "networkx.is_connected",
   "networkx.is_weakly_connected",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "graspy.utils.utils.is_loopless": {
  "lineno": 169,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.diag"
  ],
  "type": "function"
 },
 "graspy.utils.utils.is_symmetric": {
  "lineno": 165,
  "symbols_in_volume": [
   "numpy.array_equal"
  ],
  "type": "function"
 },
 "graspy.utils.utils.is_unweighted": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "graspy.utils.utils.remove_loops": {
  "lineno": 234,
  "symbols_in_volume": [
   "numpy.diag"
  ],
  "type": "function"
 },
 "graspy.utils.utils.symmetrize": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.tril",
   "numpy.triu"
  ],
  "type": "function"
 },
 "graspy.utils.utils.to_laplace": {
  "lineno": 255,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.errstate",
   "numpy.isinf",
   "numpy.mean",
   "numpy.sqrt",
   "numpy.sum"
  ],
  "type": "function"
 },
 "tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_base_embed": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_base_embed.TestBaseEmbed": {
  "lineno": 10,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_base_embed.TestBaseEmbed.setup_class": {
  "lineno": 11,
  "symbols_in_volume": [
   "graspy.simulations.simulations.er_np"
  ],
  "type": "function"
 },
 "tests.test_base_embed.TestBaseEmbed.test_algorithms": {
  "lineno": 46,
  "symbols_in_volume": [
   "graspy.embed.base.BaseEmbed"
  ],
  "type": "function"
 },
 "tests.test_base_embed.TestBaseEmbed.test_baseembed": {
  "lineno": 39,
  "symbols_in_volume": [
   "graspy.embed.base.BaseEmbed",
   "graspy.simulations.simulations.er_nm"
  ],
  "type": "function"
 },
 "tests.test_base_embed.TestBaseEmbed.test_baseembed_er": {
  "lineno": 18,
  "symbols_in_volume": [
   "graspy.embed.base.BaseEmbed",
   "graspy.simulations.simulations.er_nm"
  ],
  "type": "function"
 },
 "tests.test_base_embed.TestBaseEmbed.test_baseembed_er_directed": {
  "lineno": 28,
  "symbols_in_volume": [
   "graspy.embed.base.BaseEmbed",
   "graspy.simulations.simulations.er_nm"
  ],
  "type": "function"
 },
 "tests.test_datasets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_datasets.test_drosphila_left": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_datasets.test_drosphila_right": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_io": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_io.TestImportEdgelist": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_io.TestImportEdgelist.setup_class": {
  "lineno": 46,
  "symbols_in_volume": [
   "graspy.simulations.er_np",
   "networkx.from_numpy_array",
   "networkx.relabel_nodes",
   "networkx.write_edgelist",
   "networkx.write_weighted_edgelist",
   "numpy.random.exponential",
   "numpy.random.seed",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.test_io.TestImportEdgelist.test_bad_delimiter": {
  "lineno": 118,
  "symbols_in_volume": [
   "graspy.utils.import_edgelist",
   "pytest.warns"
  ],
  "type": "function"
 },
 "tests.test_io.TestImportEdgelist.test_in": {
  "lineno": 69,
  "symbols_in_volume": [
   "graspy.utils.import_edgelist",
   "numpy.allclose"
  ],
  "type": "function"
 },
 "tests.test_io.TestImportEdgelist.test_in_Path_obj": {
  "lineno": 76,
  "symbols_in_volume": [
   "graspy.utils.import_edgelist",
   "numpy.allclose",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "tests.test_io.TestImportEdgelist.test_multiple_in": {
  "lineno": 83,
  "symbols_in_volume": [
   "graspy.utils.import_edgelist",
   "numpy.allclose",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tests.test_io.TestImportEdgelist.test_no_graphs_found": {
  "lineno": 113,
  "symbols_in_volume": [
   "graspy.utils.import_edgelist",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_io.TestImportEdgelist.test_vertices": {
  "lineno": 103,
  "symbols_in_volume": [
   "graspy.utils.import_edgelist",
   "numpy.allclose",
   "numpy.arange"
  ],
  "type": "function"
 },
 "tests.test_io.TestImportEdgelist.test_wrongtypein": {
  "lineno": 96,
  "symbols_in_volume": [
   "graspy.utils.import_edgelist",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_io.TestImportGraph": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_io.TestImportGraph.setup_class": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.put",
   "numpy.random.choice",
   "numpy.random.normal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tests.test_io.TestImportGraph.test_graphin": {
  "lineno": 25,
  "symbols_in_volume": [
   "graspy.utils.import_graph",
   "networkx.from_numpy_array",
   "networkx.to_numpy_array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_io.TestImportGraph.test_nonsquare": {
  "lineno": 39,
  "symbols_in_volume": [
   "graspy.utils.import_graph",
   "numpy.hstack",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_io.TestImportGraph.test_npin": {
  "lineno": 29,
  "symbols_in_volume": [
   "graspy.utils.import_graph",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_io.TestImportGraph.test_wrongtypein": {
  "lineno": 32,
  "symbols_in_volume": [
   "graspy.utils.import_graph",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_latentdistributiontest": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "tests.test_latentdistributiontest.TestLatentDistributionTest": {
  "lineno": 13,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_latentdistributiontest.TestLatentDistributionTest.setUpClass": {
  "lineno": 14,
  "symbols_in_volume": [
   "graspy.simulations.er_np",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "tests.test_latentdistributiontest.TestLatentDistributionTest.test_SBM_epsilon": {
  "lineno": 57,
  "symbols_in_volume": [
   "graspy.inference.LatentDistributionTest",
   "graspy.simulations.sbm",
   "numpy.array",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "tests.test_latentdistributiontest.TestLatentDistributionTest.test_bad_kwargs": {
  "lineno": 24,
  "symbols_in_volume": [
   "graspy.inference.LatentDistributionTest"
  ],
  "type": "function"
 },
 "tests.test_latentdistributiontest.TestLatentDistributionTest.test_bad_matrix_inputs": {
  "lineno": 41,
  "symbols_in_volume": [
   "graspy.inference.LatentDistributionTest"
  ],
  "type": "function"
 },
 "tests.test_latentdistributiontest.TestLatentDistributionTest.test_directed_inputs": {
  "lineno": 48,
  "symbols_in_volume": [
   "graspy.inference.LatentDistributionTest",
   "graspy.simulations.er_np",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "tests.test_latentdistributiontest.TestLatentDistributionTest.test_fit_p_ase_works": {
  "lineno": 20,
  "symbols_in_volume": [
   "graspy.inference.LatentDistributionTest"
  ],
  "type": "function"
 },
 "tests.test_latentdistributiontest.TestLatentDistributionTest.test_n_bootstraps": {
  "lineno": 36,
  "symbols_in_volume": [
   "graspy.inference.LatentDistributionTest"
  ],
  "type": "function"
 },
 "tests.test_latentpositiontest": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "tests.test_latentpositiontest.TestLatentPositionTest": {
  "lineno": 12,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_latentpositiontest.TestLatentPositionTest.setUpClass": {
  "lineno": 13,
  "symbols_in_volume": [
   "graspy.simulations.er_np",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "tests.test_latentpositiontest.TestLatentPositionTest.test_SBM_epsilon": {
  "lineno": 105,
  "symbols_in_volume": [
   "graspy.inference.LatentPositionTest",
   "graspy.simulations.sbm",
   "numpy.array",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "tests.test_latentpositiontest.TestLatentPositionTest.test_bad_kwargs": {
  "lineno": 29,
  "symbols_in_volume": [
   "graspy.inference.LatentPositionTest"
  ],
  "type": "function"
 },
 "tests.test_latentpositiontest.TestLatentPositionTest.test_bad_matrix_inputs": {
  "lineno": 54,
  "symbols_in_volume": [
   "graspy.inference.LatentPositionTest"
  ],
  "type": "function"
 },
 "tests.test_latentpositiontest.TestLatentPositionTest.test_diagonal_rotation_norm": {
  "lineno": 78,
  "symbols_in_volume": [
   "graspy.inference.LatentPositionTest",
   "numpy.array",
   "numpy.dot",
   "numpy.float64"
  ],
  "type": "function"
 },
 "tests.test_latentpositiontest.TestLatentPositionTest.test_fit_p_ase_works": {
  "lineno": 19,
  "symbols_in_volume": [
   "graspy.inference.LatentPositionTest"
  ],
  "type": "function"
 },
 "tests.test_latentpositiontest.TestLatentPositionTest.test_fit_p_omni_works": {
  "lineno": 24,
  "symbols_in_volume": [
   "graspy.inference.LatentPositionTest"
  ],
  "type": "function"
 },
 "tests.test_latentpositiontest.TestLatentPositionTest.test_n_bootstraps": {
  "lineno": 49,
  "symbols_in_volume": [
   "graspy.inference.LatentPositionTest"
  ],
  "type": "function"
 },
 "tests.test_latentpositiontest.TestLatentPositionTest.test_rotation_norm": {
  "lineno": 68,
  "symbols_in_volume": [
   "graspy.inference.LatentPositionTest",
   "numpy.array",
   "numpy.dot"
  ],
  "type": "function"
 },
 "tests.test_latentpositiontest.TestLatentPositionTest.test_scalar_rotation_norm": {
  "lineno": 92,
  "symbols_in_volume": [
   "graspy.inference.LatentPositionTest",
   "numpy.array",
   "numpy.dot",
   "numpy.float64"
  ],
  "type": "function"
 },
 "tests.test_mase": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_mase.make_train_directed": {
  "lineno": 29,
  "symbols_in_volume": [
   "graspy.simulations.simulations.sbm"
  ],
  "type": "function"
 },
 "tests.test_mase.make_train_undirected": {
  "lineno": 9,
  "symbols_in_volume": [
   "graspy.simulations.simulations.sbm",
   "numpy.array",
   "numpy.ones"
  ],
  "type": "function"
 },
 "tests.test_mase.test_bad_inputs": {
  "lineno": 40,
  "symbols_in_volume": [
   "graspy.embed.mase.MultipleASE",
   "graspy.simulations.simulations.er_np",
   "numpy.random.seed",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_mase.test_graph_clustering": {
  "lineno": 67,
  "symbols_in_volume": [
   "graspy.cluster.gclust.GaussianCluster",
   "graspy.embed.mase.MultipleASE",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "tests.test_mase.test_vertex": {
  "lineno": 108,
  "symbols_in_volume": [
   "graspy.cluster.gclust.GaussianCluster",
   "graspy.embed.mase.MultipleASE",
   "numpy.hstack",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "tests.test_mds": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_mds.test_input": {
  "lineno": 8,
  "symbols_in_volume": [
   "graspy.embed.mds.ClassicalMDS",
   "numpy.random.normal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_mds.test_output": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_mds.test_output._compute_dissimilarity": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tests.test_mds.test_output.use_euclidean": {
  "lineno": 97,
  "symbols_in_volume": [
   "graspy.embed.mds.ClassicalMDS",
   "numpy.array",
   "numpy.identity",
   "numpy.ones",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_mds.test_output.use_fit": {
  "lineno": 85,
  "symbols_in_volume": [
   "graspy.embed.mds.ClassicalMDS",
   "numpy.diag",
   "numpy.dot",
   "numpy.identity",
   "numpy.ones",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_mds.test_output.use_fit_transform": {
  "lineno": 74,
  "symbols_in_volume": [
   "graspy.embed.mds.ClassicalMDS",
   "numpy.identity",
   "numpy.ones",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "tests.test_mds.test_tensor_input": {
  "lineno": 49,
  "symbols_in_volume": [
   "graspy.embed.mds.ClassicalMDS",
   "numpy.random.normal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "tests.test_models": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_models.TestDCER": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_models.TestDCER.setup_class": {
  "lineno": 73,
  "symbols_in_volume": [
   "graspy.simulations.sample_edges",
   "numpy.diag",
   "numpy.full",
   "numpy.outer",
   "numpy.random.beta",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "tests.test_models.TestDCER.test_DCER_fit": {
  "lineno": 111,
  "symbols_in_volume": [
   "graspy.models.DCSBMEstimator",
   "numpy.random.seed",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_models.TestDCER.test_DCER_inputs": {
  "lineno": 95,
  "symbols_in_volume": [
   "graspy.models.DCEREstimator",
   "graspy.simulations.er_np",
   "numpy.newaxis",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_models.TestDCER.test_DCER_nparams": {
  "lineno": 142,
  "symbols_in_volume": [
   "graspy.models.DCEREstimator"
  ],
  "type": "function"
 },
 "tests.test_models.TestDCER.test_DCER_sample": {
  "lineno": 119,
  "symbols_in_volume": [
   "graspy.models.DCEREstimator",
   "graspy.simulations.sample_edges",
   "numpy.diag",
   "numpy.outer",
   "numpy.random.seed",
   "numpy.random.uniform",
   "pytest.raises",
   "sklearn.exceptions.NotFittedError"
  ],
  "type": "function"
 },
 "tests.test_models.TestDCER.test_DCER_score": {
  "lineno": 86,
  "symbols_in_volume": [
   "graspy.models.DCEREstimator",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_models.TestDCSBM": {
  "lineno": 285,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_models.TestDCSBM.setup_class": {
  "lineno": 286,
  "symbols_in_volume": [
   "graspy.simulations.sample_edges",
   "numpy.array",
   "numpy.diag",
   "numpy.outer",
   "numpy.random.beta",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "tests.test_models.TestDCSBM.test_DCSBM_fit_supervised": {
  "lineno": 317,
  "symbols_in_volume": [
   "graspy.models.DCSBMEstimator",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_models.TestDCSBM.test_DCSBM_fit_unsupervised": {
  "lineno": 371,
  "symbols_in_volume": [
   "graspy.models.DCSBMEstimator",
   "graspy.simulations.sample_edges",
   "numpy.array",
   "numpy.diag",
   "numpy.outer",
   "numpy.random.beta",
   "numpy.random.seed",
   "numpy.testing.assert_allclose",
   "sklearn.metrics.adjusted_rand_score"
  ],
  "type": "function"
 },
 "tests.test_models.TestDCSBM.test_DCSBM_inputs": {
  "lineno": 325,
  "symbols_in_volume": [
   "graspy.models.DCSBMEstimator",
   "graspy.simulations.er_np",
   "numpy.newaxis",
   "numpy.zeros",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_models.TestDCSBM.test_DCSBM_nparams": {
  "lineno": 412,
  "symbols_in_volume": [
   "graspy.models.DCSBMEstimator"
  ],
  "type": "function"
 },
 "tests.test_models.TestDCSBM.test_DCSBM_sample": {
  "lineno": 388,
  "symbols_in_volume": [
   "graspy.models.DCSBMEstimator",
   "graspy.simulations.sample_edges",
   "numpy.array",
   "numpy.diag",
   "numpy.outer",
   "numpy.random.seed",
   "numpy.random.uniform",
   "pytest.raises",
   "sklearn.exceptions.NotFittedError"
  ],
  "type": "function"
 },
 "tests.test_models.TestDCSBM.test_DCSBM_score": {
  "lineno": 308,
  "symbols_in_volume": [
   "graspy.models.DCSBMEstimator",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_models.TestER": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_models.TestER.setup_class": {
  "lineno": 18,
  "symbols_in_volume": [
   "graspy.models.EREstimator",
   "graspy.simulations.er_np",
   "numpy.full",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "tests.test_models.TestER.test_ER_fit": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_models.TestER.test_ER_inputs": {
  "lineno": 28,
  "symbols_in_volume": [
   "graspy.models.EREstimator",
   "numpy.newaxis",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_models.TestER.test_ER_nparams": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_models.TestER.test_ER_sample": {
  "lineno": 46,
  "symbols_in_volume": [
   "graspy.models.EREstimator",
   "graspy.simulations.er_np",
   "numpy.diag",
   "numpy.full",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_models.TestER.test_ER_score": {
  "lineno": 59,
  "symbols_in_volume": [
   "graspy.models.EREstimator",
   "graspy.simulations.er_np",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_models.TestRDPG": {
  "lineno": 434,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_models.TestRDPG.setup_class": {
  "lineno": 435,
  "symbols_in_volume": [
   "graspy.simulations.sample_edges",
   "numpy.array",
   "numpy.concatenate",
   "numpy.diag",
   "numpy.random.seed",
   "numpy.tile"
  ],
  "type": "function"
 },
 "tests.test_models.TestRDPG.test_RDPG_fit": {
  "lineno": 477,
  "symbols_in_volume": [
   "graspy.models.RDPGEstimator",
   "graspy.simulations.sample_edges",
   "numpy.diag",
   "numpy.random.seed",
   "numpy.random.uniform",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_models.TestRDPG.test_RDPG_intputs": {
  "lineno": 450,
  "symbols_in_volume": [
   "graspy.models.RDPGEstimator",
   "numpy.newaxis",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_models.TestRDPG.test_RDPG_nparams": {
  "lineno": 509,
  "symbols_in_volume": [
   "graspy.models.RDPGEstimator"
  ],
  "type": "function"
 },
 "tests.test_models.TestRDPG.test_RDPG_sample": {
  "lineno": 492,
  "symbols_in_volume": [
   "graspy.models.RDPGEstimator",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "tests.test_models.TestRDPG.test_RDPG_score": {
  "lineno": 500,
  "symbols_in_volume": [
   "graspy.models.RDPGEstimator",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_models.TestSBM": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "class"
 },
 "tests.test_models.TestSBM.setup_class": {
  "lineno": 151,
  "symbols_in_volume": [
   "graspy.models.SBMEstimator",
   "graspy.simulations.sbm",
   "numpy.array",
   "numpy.diag"
  ],
  "type": "function"
 },
 "tests.test_models.TestSBM.test_SBM_fit_supervised": {
  "lineno": 210,
  "symbols_in_volume": [
   "graspy.models.SBMEstimator",
   "graspy.simulations.sbm",
   "numpy.array",
   "numpy.random.seed",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_models.TestSBM.test_SBM_fit_unsupervised": {
  "lineno": 228,
  "symbols_in_volume": [
   "graspy.models.SBMEstimator",
   "graspy.simulations.sample_edges",
   "numpy.array",
   "numpy.diag",
   "numpy.random.seed",
   "numpy.testing.assert_allclose",
   "sklearn.metrics.adjusted_rand_score"
  ],
  "type": "function"
 },
 "tests.test_models.TestSBM.test_SBM_inputs": {
  "lineno": 164,
  "symbols_in_volume": [
   "graspy.models.SBMEstimator",
   "graspy.simulations.er_np",
   "numpy.newaxis",
   "numpy.zeros",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_models.TestSBM.test_SBM_nparams": {
  "lineno": 274,
  "symbols_in_volume": [
   "graspy.models.SBMEstimator"
  ],
  "type": "function"
 },
 "tests.test_models.TestSBM.test_SBM_sample": {
  "lineno": 243,
  "symbols_in_volume": [
   "pytest.raises",
   "sklearn.exceptions.NotFittedError"
  ],
  "type": "function"
 },
 "tests.test_models.TestSBM.test_SBM_score": {
  "lineno": 260,
  "symbols_in_volume": [
   "graspy.models.SBMEstimator",
   "graspy.simulations.sample_edges",
   "numpy.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_models._block_to_full": {
  "lineno": 530,
  "symbols_in_volume": [
   "graspy.utils.cartprod"
  ],
  "type": "function"
 },
 "tests.test_models._n_to_labels": {
  "lineno": 521,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tests.test_models._test_sample": {
  "lineno": 544,
  "symbols_in_volume": [
   "numpy.random.seed",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_models._test_score": {
  "lineno": 552,
  "symbols_in_volume": [
   "graspy.utils.is_symmetric",
   "numpy.concatenate",
   "numpy.log",
   "numpy.random.seed",
   "numpy.sum",
   "numpy.testing.assert_allclose",
   "numpy.tril_indices_from",
   "numpy.triu_indices_from",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tests.test_models.hardy_weinberg": {
  "lineno": 590,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_omni": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_omni.generate_data": {
  "lineno": 12,
  "symbols_in_volume": [
   "graspy.utils.utils.symmetrize",
   "numpy.dot",
   "numpy.random.binomial",
   "numpy.random.dirichlet",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "tests.test_omni.test_omni_embed": {
  "lineno": 113,
  "symbols_in_volume": [
   "graspy.embed.omni.OmnibusEmbed",
   "numpy.allclose",
   "numpy.linalg.norm",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "tests.test_omni.test_omni_embed.compute_bar": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_omni.test_omni_matrix_invalid_inputs": {
  "lineno": 72,
  "symbols_in_volume": [
   "graspy.embed.omni.OmnibusEmbed",
   "numpy.ones",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_omni.test_omni_matrix_ones_zeros": {
  "lineno": 34,
  "symbols_in_volume": [
   "graspy.embed.omni._get_omni_matrix",
   "numpy.array_equal",
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tests.test_omni.test_omni_matrix_random": {
  "lineno": 50,
  "symbols_in_volume": [
   "graspy.embed.omni._get_omni_matrix",
   "numpy.array",
   "numpy.random.seed",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_omni.test_omni_matrix_symmetric": {
  "lineno": 89,
  "symbols_in_volume": [
   "graspy.embed.omni._get_omni_matrix",
   "graspy.simulations.simulations.er_np",
   "graspy.utils.utils.is_symmetric",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "tests.test_omni.test_omni_unconnected": {
  "lineno": 101,
  "symbols_in_volume": [
   "graspy.embed.omni.OmnibusEmbed",
   "graspy.simulations.simulations.er_nm",
   "numpy.random.seed",
   "pytest.warns"
  ],
  "type": "function"
 },
 "tests.test_plot": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_plot.test_common_inputs": {
  "lineno": 8,
  "symbols_in_volume": [
   "graspy.plot.plot.gridplot",
   "graspy.plot.plot.heatmap",
   "graspy.plot.plot.pairplot",
   "graspy.simulations.simulations.er_np",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_plot.test_gridplot_inputs": {
  "lineno": 130,
  "symbols_in_volume": [
   "graspy.plot.plot.gridplot",
   "graspy.simulations.simulations.er_np",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_plot.test_gridplot_outputs": {
  "lineno": 146,
  "symbols_in_volume": [
   "graspy.plot.plot.gridplot",
   "graspy.simulations.simulations.er_np"
  ],
  "type": "function"
 },
 "tests.test_plot.test_heatmap_inputs": {
  "lineno": 84,
  "symbols_in_volume": [
   "graspy.plot.plot.heatmap",
   "numpy.random.rand",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_plot.test_heatmap_output": {
  "lineno": 114,
  "symbols_in_volume": [
   "graspy.plot.plot.heatmap",
   "graspy.simulations.simulations.er_np"
  ],
  "type": "function"
 },
 "tests.test_plot.test_pairplot_inputs": {
  "lineno": 157,
  "symbols_in_volume": [
   "graspy.plot.plot.pairplot",
   "numpy.random.rand",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_plot.test_pairplot_outputs": {
  "lineno": 181,
  "symbols_in_volume": [
   "graspy.plot.plot.pairplot",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "tests.test_plot.test_sort_inds": {
  "lineno": 194,
  "symbols_in_volume": [
   "graspy.plot.plot._sort_inds",
   "graspy.simulations.simulations.sbm",
   "numpy.all",
   "numpy.argsort",
   "numpy.array",
   "numpy.diff"
  ],
  "type": "function"
 },
 "tests.test_ptr": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "tests.test_ptr.TestPTR": {
  "lineno": 6,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_ptr.TestPTR.setUpClass": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_ptr.TestPTR.test_invalid_inputs": {
  "lineno": 22,
  "symbols_in_volume": [
   "graspy.utils.pass_to_ranks"
  ],
  "type": "function"
 },
 "tests.test_ptr.TestPTR.test_simpleall_looped_directed": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_ptr.TestPTR.test_simpleall_looped_undirected": {
  "lineno": 78,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_ptr.TestPTR.test_simpleall_loopless_directed": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_ptr.TestPTR.test_simpleall_loopless_undirected": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_ptr.TestPTR.test_simplenonzero_looped_directed": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_ptr.TestPTR.test_simplenonzero_looped_undirected": {
  "lineno": 124,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_ptr.TestPTR.test_simplenonzero_loopless_directed": {
  "lineno": 136,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_ptr.TestPTR.test_simplenonzero_loopless_undirected": {
  "lineno": 112,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_ptr.TestPTR.test_zeroboost_looped_directed": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_ptr.TestPTR.test_zeroboost_looped_undirected": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_ptr.TestPTR.test_zeroboost_loopless_directed": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_ptr.TestPTR.test_zeroboost_loopless_undirected": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_ptr._run_test": {
  "lineno": 161,
  "symbols_in_volume": [
   "graspy.utils.pass_to_ranks",
   "numpy.allclose"
  ],
  "type": "function"
 },
 "tests.test_select_dimension": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_select_dimension.generate_data": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.random.binomial",
   "numpy.random.seed",
   "numpy.zeros",
   "scipy.linalg.orth"
  ],
  "type": "function"
 },
 "tests.test_select_dimension.test_invalid_inputes": {
  "lineno": 24,
  "symbols_in_volume": [
   "graspy.embed.svd.select_dimension",
   "numpy.random.normal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_select_dimension.test_output_simple": {
  "lineno": 79,
  "symbols_in_volume": [
   "graspy.embed.svd.select_dimension",
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "tests.test_select_dimension.test_output_synthetic": {
  "lineno": 73,
  "symbols_in_volume": [
   "graspy.embed.svd.select_dimension",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "tests.test_select_dimension.test_output_two_block_sbm": {
  "lineno": 101,
  "symbols_in_volume": [
   "graspy.embed.svd.select_dimension",
   "graspy.simulations.simulations.sbm",
   "numpy.array",
   "numpy.random.seed",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "tests.test_select_dimension.test_output_uniform": {
  "lineno": 88,
  "symbols_in_volume": [
   "graspy.embed.svd.select_dimension",
   "numpy.hstack",
   "numpy.random.seed",
   "numpy.random.uniform",
   "numpy.sort",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "tests.test_sg": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_sg.TestEstimateSubgraph": {
  "lineno": 7,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_sg.TestEstimateSubgraph.test_construct_contingency": {
  "lineno": 47,
  "symbols_in_volume": [
   "graspy.subgraph.SignalSubgraph",
   "numpy.array",
   "numpy.ones",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_sg.TestEstimateSubgraph.test_estimate_subgraph_coh": {
  "lineno": 8,
  "symbols_in_volume": [
   "graspy.subgraph.SignalSubgraph",
   "numpy.array",
   "numpy.ones",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_sg.TestEstimateSubgraph.test_estimate_subgraph_inc": {
  "lineno": 23,
  "symbols_in_volume": [
   "graspy.subgraph.SignalSubgraph",
   "numpy.array",
   "numpy.ones",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_sg.TestEstimateSubgraph.test_fit_bad_constraints": {
  "lineno": 38,
  "symbols_in_volume": [
   "graspy.subgraph.SignalSubgraph",
   "numpy.ones"
  ],
  "type": "function"
 },
 "tests.test_sg.TestEstimateSubgraph.test_fit_bad_len": {
  "lineno": 74,
  "symbols_in_volume": [
   "graspy.subgraph.SignalSubgraph",
   "numpy.array",
   "numpy.ones"
  ],
  "type": "function"
 },
 "tests.test_sg.TestEstimateSubgraph.test_fit_bad_size": {
  "lineno": 67,
  "symbols_in_volume": [
   "graspy.subgraph.SignalSubgraph",
   "numpy.ones"
  ],
  "type": "function"
 },
 "tests.test_sg.TestEstimateSubgraph.test_fit_bad_type": {
  "lineno": 58,
  "symbols_in_volume": [
   "graspy.subgraph.SignalSubgraph",
   "numpy.ones"
  ],
  "type": "function"
 },
 "tests.test_sims": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_sims.Test_ER": {
  "lineno": 19,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_sims.Test_ER.setUpClass": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_sims.Test_ER.test_ernm": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_sims.Test_ER.test_ernp": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.isclose",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_RDPG": {
  "lineno": 813,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_sims.Test_RDPG.setUpClass": {
  "lineno": 814,
  "symbols_in_volume": [
   "numpy.vstack"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_RDPG.test_dimensions": {
  "lineno": 822,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_RDPG.test_er_p_is_close": {
  "lineno": 844,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.ones",
   "numpy.random.seed",
   "numpy.stack"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_RDPG.test_inputs": {
  "lineno": 827,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_RDPG.test_kwarg_passing": {
  "lineno": 870,
  "symbols_in_volume": [
   "graspy.utils.utils.is_loopless",
   "graspy.utils.utils.is_symmetric",
   "numpy.ones",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_RDPG.test_mini_sbm_p_is_close": {
  "lineno": 857,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.mean",
   "numpy.random.seed",
   "numpy.stack",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_WSBM": {
  "lineno": 345,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_sims.Test_WSBM.exp_exp": {
  "lineno": 430,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.exp_normal": {
  "lineno": 424,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.std"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.exp_poisson": {
  "lineno": 427,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.exp_unif": {
  "lineno": 433,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.min"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.setUpClass": {
  "lineno": 346,
  "symbols_in_volume": [
   "numpy.cumsum",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.test_bad_inputs": {
  "lineno": 690,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.random.beta",
   "numpy.random.normal",
   "numpy.random.uniform"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.test_sbm": {
  "lineno": 367,
  "symbols_in_volume": [
   "graspy.utils.utils.is_loopless",
   "graspy.utils.utils.is_symmetric",
   "numpy.arange",
   "numpy.cumsum",
   "numpy.isclose",
   "numpy.mean",
   "numpy.random.seed",
   "numpy.sum",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.test_sbm_dc_dc_kws_directed_loopy": {
  "lineno": 621,
  "symbols_in_volume": [
   "graspy.utils.utils.is_loopless",
   "graspy.utils.utils.is_symmetric",
   "numpy.isclose",
   "numpy.mean",
   "numpy.random.power",
   "numpy.random.seed",
   "numpy.random.uniform",
   "numpy.sum"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.test_sbm_dc_dc_kws_directed_loopy_weights": {
  "lineno": 590,
  "symbols_in_volume": [
   "numpy.hstack",
   "numpy.isclose",
   "numpy.random.power",
   "numpy.random.seed",
   "numpy.random.uniform",
   "numpy.sum"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.test_sbm_label": {
  "lineno": 359,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.test_sbm_multi_dc_dc_kws": {
  "lineno": 651,
  "symbols_in_volume": [
   "graspy.utils.utils.is_loopless",
   "graspy.utils.utils.is_symmetric",
   "numpy.isclose",
   "numpy.mean",
   "numpy.random.power",
   "numpy.random.seed",
   "numpy.random.uniform",
   "numpy.sum"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.test_sbm_multi_dc_empty_dc_kws": {
  "lineno": 671,
  "symbols_in_volume": [
   "graspy.utils.utils.is_loopless",
   "graspy.utils.utils.is_symmetric",
   "numpy.isclose",
   "numpy.mean",
   "numpy.random.rayleigh",
   "numpy.random.seed",
   "numpy.random.uniform",
   "numpy.sum"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.test_sbm_multiwt_directed_loopless": {
  "lineno": 436,
  "symbols_in_volume": [
   "graspy.utils.utils.is_loopless",
   "graspy.utils.utils.is_symmetric",
   "numpy.arange",
   "numpy.isclose",
   "numpy.mean",
   "numpy.random.exponential",
   "numpy.random.normal",
   "numpy.random.poisson",
   "numpy.random.seed",
   "numpy.random.uniform",
   "numpy.sum",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.test_sbm_multiwt_directed_loopy": {
  "lineno": 515,
  "symbols_in_volume": [
   "graspy.utils.utils.is_loopless",
   "graspy.utils.utils.is_symmetric",
   "numpy.arange",
   "numpy.isclose",
   "numpy.mean",
   "numpy.random.exponential",
   "numpy.random.normal",
   "numpy.random.poisson",
   "numpy.random.seed",
   "numpy.random.uniform",
   "numpy.sum",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.test_sbm_multiwt_undirected_loopless": {
  "lineno": 477,
  "symbols_in_volume": [
   "graspy.utils.utils.is_loopless",
   "graspy.utils.utils.is_symmetric",
   "numpy.arange",
   "numpy.isclose",
   "numpy.mean",
   "numpy.random.normal",
   "numpy.random.poisson",
   "numpy.random.seed",
   "numpy.random.uniform",
   "numpy.sum",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.test_sbm_multiwt_undirected_loopy": {
  "lineno": 554,
  "symbols_in_volume": [
   "graspy.utils.utils.is_loopless",
   "graspy.utils.utils.is_symmetric",
   "numpy.arange",
   "numpy.isclose",
   "numpy.mean",
   "numpy.random.normal",
   "numpy.random.poisson",
   "numpy.random.seed",
   "numpy.random.uniform",
   "numpy.sum",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_WSBM.test_sbm_singlewt_undirected_loopless": {
  "lineno": 392,
  "symbols_in_volume": [
   "graspy.utils.utils.is_loopless",
   "graspy.utils.utils.is_symmetric",
   "numpy.arange",
   "numpy.isclose",
   "numpy.mean",
   "numpy.random.normal",
   "numpy.random.seed",
   "numpy.std",
   "numpy.sum"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_ZINM": {
  "lineno": 43,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_sims.Test_ZINM.setUpClass": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.random.normal"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_ZINM.test_bad_inputs": {
  "lineno": 153,
  "symbols_in_volume": [
   "numpy.random"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_ZINM.test_loop_directed": {
  "lineno": 54,
  "symbols_in_volume": [
   "graspy.utils.utils.is_loopless",
   "graspy.utils.utils.is_symmetric",
   "numpy.isclose",
   "numpy.mean",
   "numpy.random.seed",
   "numpy.std"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_ZINM.test_loop_undirected": {
  "lineno": 105,
  "symbols_in_volume": [
   "graspy.utils.utils.is_loopless",
   "graspy.utils.utils.is_symmetric",
   "numpy.diag",
   "numpy.isclose",
   "numpy.mean",
   "numpy.random.seed",
   "numpy.std"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_ZINM.test_noloop_directed": {
  "lineno": 81,
  "symbols_in_volume": [
   "graspy.utils.utils.is_loopless",
   "graspy.utils.utils.is_symmetric",
   "numpy.isclose",
   "numpy.mean",
   "numpy.random.seed",
   "numpy.std"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_ZINM.test_noloop_undirected": {
  "lineno": 130,
  "symbols_in_volume": [
   "graspy.utils.utils.is_loopless",
   "graspy.utils.utils.is_symmetric",
   "numpy.isclose",
   "numpy.mean",
   "numpy.random.seed",
   "numpy.std"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_ZINP": {
  "lineno": 187,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_sims.Test_ZINP.setUpClass": {
  "lineno": 188,
  "symbols_in_volume": [
   "numpy.random.normal"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_ZINP.test_bad_inputs": {
  "lineno": 307,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random",
   "numpy.random.power"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_ZINP.test_loop_directed": {
  "lineno": 198,
  "symbols_in_volume": [
   "graspy.utils.utils.is_loopless",
   "graspy.utils.utils.is_symmetric",
   "numpy.isclose",
   "numpy.mean",
   "numpy.prod",
   "numpy.random.seed",
   "numpy.std"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_ZINP.test_loop_undirected": {
  "lineno": 255,
  "symbols_in_volume": [
   "graspy.utils.utils.is_loopless",
   "graspy.utils.utils.is_symmetric",
   "numpy.isclose",
   "numpy.mean",
   "numpy.prod",
   "numpy.random.seed",
   "numpy.std"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_ZINP.test_noloop_directed": {
  "lineno": 228,
  "symbols_in_volume": [
   "graspy.utils.utils.is_loopless",
   "graspy.utils.utils.is_symmetric",
   "numpy.isclose",
   "numpy.mean",
   "numpy.random.seed",
   "numpy.std"
  ],
  "type": "function"
 },
 "tests.test_sims.Test_ZINP.test_noloop_undirected": {
  "lineno": 281,
  "symbols_in_volume": [
   "graspy.utils.utils.is_loopless",
   "graspy.utils.utils.is_symmetric",
   "numpy.isclose",
   "numpy.mean",
   "numpy.random.seed",
   "numpy.std"
  ],
  "type": "function"
 },
 "tests.test_sims.remove_diagonal": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.indices",
   "numpy.ravel_multi_index",
   "numpy.setdiff1d",
   "numpy.unravel_index",
   "numpy.where"
  ],
  "type": "function"
 },
 "tests.test_sims_corr": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_sims_corr.Test_ER_Corr": {
  "lineno": 63,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_sims_corr.Test_ER_Corr.setUpClass": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "tests.test_sims_corr.Test_ER_Corr.test_bad_input": {
  "lineno": 71,
  "symbols_in_volume": [
   "graspy.simulations.simulations_corr.er_corr"
  ],
  "type": "function"
 },
 "tests.test_sims_corr.Test_ER_Corr.test_er_corr": {
  "lineno": 100,
  "symbols_in_volume": [
   "graspy.simulations.simulations_corr.er_corr",
   "numpy.corrcoef",
   "numpy.eye",
   "numpy.isclose",
   "numpy.where"
  ],
  "type": "function"
 },
 "tests.test_sims_corr.Test_SBM_Corr": {
  "lineno": 121,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_sims_corr.Test_SBM_Corr.setUpClass": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_sims_corr.Test_SBM_Corr.test_bad_input": {
  "lineno": 129,
  "symbols_in_volume": [
   "graspy.simulations.simulations_corr.sbm_corr",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_sims_corr.Test_SBM_Corr.test_sbm_corr": {
  "lineno": 168,
  "symbols_in_volume": [
   "graspy.simulations.simulations_corr.sbm_corr",
   "numpy.corrcoef",
   "numpy.eye",
   "numpy.isclose",
   "numpy.sum",
   "numpy.where"
  ],
  "type": "function"
 },
 "tests.test_sims_corr.Test_Sample_Corr": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_sims_corr.Test_Sample_Corr.setUpClass": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "tests.test_sims_corr.Test_Sample_Corr.test_bad_input": {
  "lineno": 17,
  "symbols_in_volume": [
   "graspy.simulations.simulations_corr.sample_edges_corr",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_sims_corr.Test_Sample_Corr.test_sample_edges_corr": {
  "lineno": 40,
  "symbols_in_volume": [
   "graspy.simulations.simulations_corr.sample_edges_corr",
   "numpy.corrcoef",
   "numpy.eye",
   "numpy.isclose",
   "numpy.where"
  ],
  "type": "function"
 },
 "tests.test_sklearn": {
  "lineno": null,
  "symbols_in_volume": [
   "graspy.embed.AdjacencySpectralEmbed",
   "graspy.embed.ClassicalMDS",
   "graspy.embed.LaplacianSpectralEmbed",
   "sklearn.utils.estimator_checks.check_estimator"
  ],
  "type": "module"
 },
 "tests.test_spectral_embed": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "tests.test_spectral_embed.TestAdjacencySpectralEmbed": {
  "lineno": 92,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_spectral_embed.TestAdjacencySpectralEmbed.test_input_checks": {
  "lineno": 106,
  "symbols_in_volume": [
   "graspy.embed.ase.AdjacencySpectralEmbed"
  ],
  "type": "function"
 },
 "tests.test_spectral_embed.TestAdjacencySpectralEmbed.test_output_dim": {
  "lineno": 93,
  "symbols_in_volume": [
   "graspy.embed.ase.AdjacencySpectralEmbed"
  ],
  "type": "function"
 },
 "tests.test_spectral_embed.TestAdjacencySpectralEmbed.test_sbm_er_binary_undirected": {
  "lineno": 96,
  "symbols_in_volume": [
   "graspy.embed.ase.AdjacencySpectralEmbed",
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_spectral_embed.TestAdjacencySpectralEmbed.test_unconnected_warning": {
  "lineno": 100,
  "symbols_in_volume": [
   "graspy.embed.ase.AdjacencySpectralEmbed",
   "graspy.simulations.simulations.er_nm"
  ],
  "type": "function"
 },
 "tests.test_spectral_embed.TestLaplacianSpectralEmbed": {
  "lineno": 112,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_spectral_embed.TestLaplacianSpectralEmbed.test_different_forms": {
  "lineno": 120,
  "symbols_in_volume": [
   "graspy.embed.lse.LaplacianSpectralEmbed",
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_spectral_embed.TestLaplacianSpectralEmbed.test_output_dim": {
  "lineno": 113,
  "symbols_in_volume": [
   "graspy.embed.lse.LaplacianSpectralEmbed"
  ],
  "type": "function"
 },
 "tests.test_spectral_embed.TestLaplacianSpectralEmbed.test_sbm_er_binary_undirected": {
  "lineno": 116,
  "symbols_in_volume": [
   "graspy.embed.lse.LaplacianSpectralEmbed",
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_spectral_embed.TestLaplacianSpectralEmbed.test_unconnected_warning": {
  "lineno": 124,
  "symbols_in_volume": [
   "graspy.embed.lse.LaplacianSpectralEmbed",
   "graspy.simulations.simulations.sbm"
  ],
  "type": "function"
 },
 "tests.test_spectral_embed._kmeans_comparison": {
  "lineno": 10,
  "symbols_in_volume": [
   "sklearn.cluster.KMeans",
   "sklearn.metrics.adjusted_rand_score"
  ],
  "type": "function"
 },
 "tests.test_spectral_embed._test_output_dim": {
  "lineno": 43,
  "symbols_in_volume": [
   "graspy.simulations.simulations.er_nm"
  ],
  "type": "function"
 },
 "tests.test_spectral_embed._test_sbm_er_binary_undirected": {
  "lineno": 54,
  "symbols_in_volume": [
   "graspy.simulations.simulations.er_np",
   "graspy.simulations.simulations.sbm",
   "numpy.int8",
   "numpy.random.seed",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tests.test_svd": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_svd.test_bad_inputs": {
  "lineno": 10,
  "symbols_in_volume": [
   "graspy.embed.svd.selectSVD",
   "numpy.random.normal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "tests.test_svd.test_outputs": {
  "lineno": 27,
  "symbols_in_volume": [
   "graspy.embed.svd.selectSVD",
   "numpy.diag",
   "numpy.float",
   "numpy.random.binomial",
   "numpy.random.seed",
   "numpy.repeat",
   "numpy.sqrt",
   "numpy.testing.assert_allclose",
   "numpy.vstack",
   "scipy.spatial.procrustes"
  ],
  "type": "function"
 },
 "tests.test_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_utils.TestChecks": {
  "lineno": 114,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_utils.TestChecks.setUpClass": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.put",
   "numpy.random.choice",
   "numpy.random.normal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tests.test_utils.TestChecks.test_is_almost_symmetric": {
  "lineno": 141,
  "symbols_in_volume": [
   "graspy.utils.utils.is_almost_symmetric",
   "graspy.utils.utils.is_symmetric",
   "numpy.corrcoef",
   "numpy.random.normal",
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "tests.test_utils.TestChecks.test_is_fully_connected": {
  "lineno": 133,
  "symbols_in_volume": [
   "graspy.utils.utils.is_fully_connected",
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_utils.TestChecks.test_is_unweighted": {
  "lineno": 128,
  "symbols_in_volume": [
   "graspy.utils.utils.is_unweighted",
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_utils.TestDiagonalAugment": {
  "lineno": 362,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_utils.TestDiagonalAugment.test_augment_diagonal_directed": {
  "lineno": 382,
  "symbols_in_volume": [
   "graspy.utils.utils.augment_diagonal",
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_utils.TestDiagonalAugment.test_augment_diagonal_undirected": {
  "lineno": 363,
  "symbols_in_volume": [
   "graspy.utils.utils.augment_diagonal",
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_utils.TestDiagonalAugment.test_lcc_bad_matrix": {
  "lineno": 401,
  "symbols_in_volume": [
   "graspy.utils.utils.get_lcc",
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_utils.TestInput": {
  "lineno": 9,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_utils.TestInput.setUpClass": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.put",
   "numpy.random.choice",
   "numpy.random.normal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tests.test_utils.TestInput.test_graphin": {
  "lineno": 23,
  "symbols_in_volume": [
   "graspy.utils.utils.import_graph",
   "networkx.from_numpy_array",
   "networkx.to_numpy_array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_utils.TestInput.test_npin": {
  "lineno": 27,
  "symbols_in_volume": [
   "graspy.utils.utils.import_graph",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_utils.TestInput.test_wrongtypein": {
  "lineno": 30,
  "symbols_in_volume": [
   "graspy.utils.utils.import_graph"
  ],
  "type": "function"
 },
 "tests.test_utils.TestLCC": {
  "lineno": 150,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_utils.TestLCC.test_lcc_networkx": {
  "lineno": 151,
  "symbols_in_volume": [
   "graspy.utils.utils.get_lcc",
   "networkx.DiGraph",
   "networkx.to_numpy_array",
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_utils.TestLCC.test_lcc_networkx_undirected": {
  "lineno": 179,
  "symbols_in_volume": [
   "graspy.utils.utils.get_lcc",
   "networkx.Graph",
   "networkx.to_numpy_array",
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_utils.TestLCC.test_lcc_numpy": {
  "lineno": 206,
  "symbols_in_volume": [
   "graspy.utils.utils.get_lcc",
   "networkx.DiGraph",
   "networkx.to_numpy_array",
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_utils.TestLCC.test_multigraph_lcc_networkx": {
  "lineno": 322,
  "symbols_in_volume": [
   "graspy.utils.utils.get_multigraph_intersect_lcc",
   "networkx.DiGraph",
   "networkx.to_numpy_array",
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_utils.TestLCC.test_multigraph_lcc_numpylist": {
  "lineno": 291,
  "symbols_in_volume": [
   "graspy.utils.utils.get_multigraph_intersect_lcc",
   "networkx.DiGraph",
   "networkx.to_numpy_array",
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_utils.TestLCC.test_multigraph_lcc_numpystack": {
  "lineno": 233,
  "symbols_in_volume": [
   "graspy.utils.utils.get_multigraph_intersect_lcc",
   "networkx.DiGraph",
   "networkx.to_numpy_array",
   "numpy.array",
   "numpy.stack",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_utils.TestLCC.test_multigraph_lcc_recurse_numpylist": {
  "lineno": 265,
  "symbols_in_volume": [
   "graspy.utils.utils.get_multigraph_intersect_lcc",
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "tests.test_utils.TestLCC.test_multigraph_union": {
  "lineno": 351,
  "symbols_in_volume": [
   "graspy.utils.utils.get_multigraph_union_lcc",
   "numpy.array",
   "numpy.stack",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "tests.test_utils.TestToLaplace": {
  "lineno": 38,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_utils.TestToLaplace.setUpClass": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_utils.TestToLaplace.test_to_laplace_DAD": {
  "lineno": 54,
  "symbols_in_volume": [
   "graspy.utils.utils.to_laplace",
   "math.sqrt",
   "numpy.allclose"
  ],
  "type": "function"
 },
 "tests.test_utils.TestToLaplace.test_to_laplace_IDAD": {
  "lineno": 44,
  "symbols_in_volume": [
   "graspy.utils.utils.to_laplace",
   "math.sqrt",
   "numpy.allclose"
  ],
  "type": "function"
 },
 "tests.test_utils.TestToLaplace.test_to_laplace_RDAD": {
  "lineno": 65,
  "symbols_in_volume": [
   "graspy.utils.utils.to_laplace",
   "math.sqrt",
   "numpy.allclose"
  ],
  "type": "function"
 },
 "tests.test_utils.TestToLaplace.test_to_laplace_directed": {
  "lineno": 103,
  "symbols_in_volume": [
   "graspy.utils.utils.to_laplace",
   "math.sqrt",
   "numpy.allclose"
  ],
  "type": "function"
 },
 "tests.test_utils.TestToLaplace.test_to_laplace_regularizer_kwarg": {
  "lineno": 76,
  "symbols_in_volume": [
   "graspy.utils.utils.to_laplace",
   "math.sqrt",
   "numpy.allclose"
  ],
  "type": "function"
 },
 "tests.test_utils.TestToLaplace.test_to_laplace_symmetric": {
  "lineno": 86,
  "symbols_in_volume": [
   "graspy.utils.utils.is_symmetric",
   "graspy.utils.utils.to_laplace"
  ],
  "type": "function"
 },
 "tests.test_utils.TestToLaplace.test_to_laplace_unsuported": {
  "lineno": 91,
  "symbols_in_volume": [
   "graspy.utils.utils.to_laplace"
  ],
  "type": "function"
 },
 "tests.test_utils.TestToLaplace.test_to_laplace_unsuported_regularizer": {
  "lineno": 95,
  "symbols_in_volume": [
   "graspy.utils.utils.to_laplace"
  ],
  "type": "function"
 },
 "tests.test_utils.test_binarize": {
  "lineno": 407,
  "symbols_in_volume": [
   "graspy.utils.utils.binarize",
   "numpy.array",
   "numpy.ones_like",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 }
}