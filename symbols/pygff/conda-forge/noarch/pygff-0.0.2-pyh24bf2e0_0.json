{
 "pygff": {
  "data": {},
  "type": "module"
 },
 "pygff.GffEntry": {
  "data": {
   "shadows": "pygff.core.GffEntry"
  },
  "type": "import"
 },
 "pygff.GffFile": {
  "data": {
   "shadows": "pygff.core.GffFile"
  },
  "type": "import"
 },
 "pygff.core": {
  "data": {
   "symbols_in_volume": [
    "pygff.core.struct"
   ]
  },
  "type": "module"
 },
 "pygff.core.GffEntry": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "functools.total_ordering"
   ]
  },
  "type": "class"
 },
 "pygff.core.GffEntry.__eq__": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "pygff.core.GffEntry.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "pygff.core._parse_attrs"
   ]
  },
  "type": "function"
 },
 "pygff.core.GffEntry.__len__": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "pygff.core.GffEntry.__lt__": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "pygff.core.GffEntry.__str__": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "pygff.core.GffEntry.attributes": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pygff.core.GffEntry.end": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "pygff.core.GffEntry.get_tag": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "pygff.core.GffEntry.has_tag": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "pygff.core.GffEntry.phase": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "pygff.core.GffEntry.score": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "pygff.core.GffEntry.seqid": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pygff.core.GffEntry.source": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pygff.core.GffEntry.start": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "pygff.core.GffEntry.strand": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pygff.core.GffEntry.type": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pygff.core.GffFile": {
  "data": {
   "lineno": 248
  },
  "type": "class"
 },
 "pygff.core.GffFile.__enter__": {
  "data": {
   "lineno": 341
  },
  "type": "function"
 },
 "pygff.core.GffFile.__exit__": {
  "data": {
   "lineno": 344
  },
  "type": "function"
 },
 "pygff.core.GffFile.__init__": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "TypeError",
    "open",
    "pygff.core._gen_index",
    "pygff.core._is_version_3",
    "pygff.core._is_zipped",
    "pygff.core.gzip"
   ]
  },
  "type": "function"
 },
 "pygff.core.GffFile.__iter__": {
  "data": {
   "lineno": 329
  },
  "type": "function"
 },
 "pygff.core.GffFile.__next__": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "bytes",
    "pygff.core.GffEntry",
    "type"
   ]
  },
  "type": "function"
 },
 "pygff.core.GffFile._readline": {
  "data": {
   "lineno": 326
  },
  "type": "function"
 },
 "pygff.core.GffFile.close": {
  "data": {
   "lineno": 347
  },
  "type": "function"
 },
 "pygff.core.GffFile.fetch": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "next",
    "pygff.core._find_le",
    "type"
   ]
  },
  "type": "function"
 },
 "pygff.core.GffFile.fileno": {
  "data": {
   "lineno": 350
  },
  "type": "function"
 },
 "pygff.core.GffFile.name": {
  "data": {
   "lineno": 353
  },
  "type": "function"
 },
 "pygff.core.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pygff.core._find_le": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "ValueError",
    "bisect.bisect_right",
    "list"
   ]
  },
  "type": "function"
 },
 "pygff.core._gen_index": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "int",
    "len",
    "pygff.core._get_threshold",
    "pygff.core.gzip"
   ]
  },
  "type": "function"
 },
 "pygff.core._get_stats": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "numpy.mean",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pygff.core._get_threshold": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "int",
    "max",
    "pygff.core._get_stats",
    "type"
   ]
  },
  "type": "function"
 },
 "pygff.core._gzip_header": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pygff.core._is_version_3": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "int",
    "open",
    "pygff.core.gzip"
   ]
  },
  "type": "function"
 },
 "pygff.core._is_zipped": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "open",
    "pygff.core._gzip_header",
    "pygff.core._true_header",
    "pygff.core.struct"
   ]
  },
  "type": "function"
 },
 "pygff.core._parse_attrs": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "urllib.parse.unquote"
   ]
  },
  "type": "function"
 },
 "pygff.core._true_header": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pygff.core.bisect_right": {
  "data": {
   "shadows": "bisect.bisect_right"
  },
  "type": "import"
 },
 "pygff.core.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "pygff.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pygff.core.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pygff.core.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pygff.core.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "pygff.core.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pygff.core.total_ordering": {
  "data": {
   "shadows": "functools.total_ordering"
  },
  "type": "import"
 },
 "pygff.core.unquote": {
  "data": {
   "shadows": "urllib.parse.unquote"
  },
  "type": "import"
 },
 "pygff.tests": {
  "data": {},
  "type": "module"
 },
 "pygff.tests.test_gzip": {
  "data": {
   "symbols_in_volume": [
    "pygff.core.__file__",
    "pygff.tests.test_gzip.os"
   ]
  },
  "type": "module"
 },
 "pygff.tests.test_gzip.data_path": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "pygff.tests.test_gzip.gfp": {
  "data": {
   "shadows": "pygff.core"
  },
  "type": "import"
 },
 "pygff.tests.test_gzip.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pygff.tests.test_gzip.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pygff.tests.test_gzip.test_is_gzip": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "pygff.core._is_zipped",
    "pygff.tests.test_gzip.data_path",
    "pygff.tests.test_gzip.os"
   ]
  },
  "type": "function"
 },
 "pygff.tests.test_gzip.test_not_gzip": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "pygff.core._is_zipped",
    "pygff.tests.test_gzip.data_path",
    "pygff.tests.test_gzip.os"
   ]
  },
  "type": "function"
 },
 "pygff.tests.test_version": {
  "data": {
   "symbols_in_volume": [
    "pygff.core.__file__",
    "pygff.tests.test_version.os"
   ]
  },
  "type": "module"
 },
 "pygff.tests.test_version.data_path": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "pygff.tests.test_version.gfp": {
  "data": {
   "shadows": "pygff.core"
  },
  "type": "import"
 },
 "pygff.tests.test_version.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pygff.tests.test_version.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pygff.tests.test_version.test_is_version_3": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pygff.core.GffFile",
    "pygff.tests.test_version.data_path",
    "pygff.tests.test_version.os"
   ]
  },
  "type": "function"
 },
 "pygff.tests.test_version.test_not_version_3": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "TypeError",
    "pygff.core.GffFile",
    "pygff.tests.test_version.data_path",
    "pygff.tests.test_version.os",
    "pygff.tests.test_version.pytest"
   ]
  },
  "type": "function"
 }
}