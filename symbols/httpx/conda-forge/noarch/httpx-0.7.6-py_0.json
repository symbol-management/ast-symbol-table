{
 "httpx": {
  "data": {},
  "type": "module"
 },
 "httpx.__all__": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "httpx.__version__": {
  "data": {},
  "type": "module"
 },
 "httpx.__version__.__description__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "httpx.__version__.__title__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "httpx.__version__.__version__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "httpx.api": {
  "data": {},
  "type": "module"
 },
 "httpx.api.delete": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "bool",
    "httpx.api.request"
   ]
  },
  "type": "function"
 },
 "httpx.api.get": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "bool",
    "httpx.api.request"
   ]
  },
  "type": "function"
 },
 "httpx.api.head": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "bool",
    "httpx.api.request"
   ]
  },
  "type": "function"
 },
 "httpx.api.options": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "bool",
    "httpx.api.request"
   ]
  },
  "type": "function"
 },
 "httpx.api.patch": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "bool",
    "httpx.api.request",
    "httpx.api.typing"
   ]
  },
  "type": "function"
 },
 "httpx.api.post": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "bool",
    "httpx.api.request",
    "httpx.api.typing"
   ]
  },
  "type": "function"
 },
 "httpx.api.put": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "bool",
    "httpx.api.request",
    "httpx.api.typing"
   ]
  },
  "type": "function"
 },
 "httpx.api.request": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "Client",
    "bool",
    "httpx.api.typing",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.api.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "httpx.client": {
  "data": {},
  "type": "module"
 },
 "httpx.client.AsyncClient": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "AsyncRequest",
    "BaseException",
    "bool",
    "httpx.client.BaseClient",
    "httpx.client.typing",
    "str",
    "types.TracebackType"
   ]
  },
  "type": "class"
 },
 "httpx.client.BaseClient": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ElapsedTimer",
    "InvalidURL",
    "RedirectMiddleware",
    "bool",
    "get_response",
    "wrap"
   ]
  },
  "type": "class"
 },
 "httpx.client.BaseClient.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ASGIDispatch",
    "AsyncioBackend",
    "ConnectionPool",
    "Cookies",
    "Headers",
    "QueryParams",
    "ThreadedDispatcher",
    "URL",
    "WSGIDispatch",
    "bool",
    "get_environment_proxies",
    "httpx.client._proxies_to_dispatchers",
    "httpx.client.inspect",
    "httpx.client.typing",
    "int",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.client.BaseClient._dispatcher_for_request": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "httpx.client.typing",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.client.BaseClient._get_auth_middleware": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "BasicAuthMiddleware",
    "CustomAuthMiddleware",
    "TypeError",
    "bool",
    "callable",
    "httpx.client.typing",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "httpx.client.BaseClient._get_netrc": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "get_netrc",
    "httpx.client.functools",
    "httpx.client.netrc",
    "httpx.client.typing"
   ]
  },
  "type": "function"
 },
 "httpx.client.BaseClient.build_request": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "AsyncRequest",
    "httpx.client.typing",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.client.BaseClient.check_concurrency_backend": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "httpx.client.BaseClient.cookies": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "Cookies"
   ]
  },
  "type": "function"
 },
 "httpx.client.BaseClient.headers": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "Headers"
   ]
  },
  "type": "function"
 },
 "httpx.client.BaseClient.merge_cookies": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "Cookies",
    "httpx.client.typing"
   ]
  },
  "type": "function"
 },
 "httpx.client.BaseClient.merge_headers": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "Headers",
    "httpx.client.typing"
   ]
  },
  "type": "function"
 },
 "httpx.client.BaseClient.merge_queryparams": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "QueryParams",
    "httpx.client.typing"
   ]
  },
  "type": "function"
 },
 "httpx.client.BaseClient.merge_url": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "URL",
    "httpx.client.hstspreload"
   ]
  },
  "type": "function"
 },
 "httpx.client.BaseClient.params": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "QueryParams"
   ]
  },
  "type": "function"
 },
 "httpx.client.BaseClient.wrap": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "httpx.client.functools",
    "httpx.client.typing"
   ]
  },
  "type": "function"
 },
 "httpx.client.Client": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "httpx.client.BaseClient"
   ]
  },
  "type": "class"
 },
 "httpx.client.Client.__enter__": {
  "data": {
   "lineno": 1180
  },
  "type": "function"
 },
 "httpx.client.Client.__exit__": {
  "data": {
   "lineno": 1183,
   "symbols_in_volume": [
    "BaseException",
    "httpx.client.typing",
    "types.TracebackType"
   ]
  },
  "type": "function"
 },
 "httpx.client.Client._async_request_data": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "bytes",
    "dict",
    "hasattr",
    "httpx.client.typing",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.client.Client._sync_data": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "bytes",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "httpx.client.Client.check_concurrency_backend": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "AsyncioBackend",
    "ValueError",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "httpx.client.Client.close": {
  "data": {
   "lineno": 1173
  },
  "type": "function"
 },
 "httpx.client.Client.delete": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": [
    "Response",
    "bool"
   ]
  },
  "type": "function"
 },
 "httpx.client.Client.get": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "Response",
    "bool"
   ]
  },
  "type": "function"
 },
 "httpx.client.Client.head": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "Response",
    "bool"
   ]
  },
  "type": "function"
 },
 "httpx.client.Client.options": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "Response",
    "bool"
   ]
  },
  "type": "function"
 },
 "httpx.client.Client.patch": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": [
    "Response",
    "bool",
    "httpx.client.typing"
   ]
  },
  "type": "function"
 },
 "httpx.client.Client.post": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "Response",
    "bool",
    "httpx.client.typing"
   ]
  },
  "type": "function"
 },
 "httpx.client.Client.put": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": [
    "Response",
    "bool",
    "httpx.client.typing"
   ]
  },
  "type": "function"
 },
 "httpx.client.Client.request": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "bool",
    "httpx.client.typing",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.client.Client.send": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "AsyncRequest",
    "Response",
    "bool",
    "getattr"
   ]
  },
  "type": "function"
 },
 "httpx.client.Client.send.sync_on_close": {
  "data": {
   "lineno": 878
  },
  "type": "function"
 },
 "httpx.client.TracebackType": {
  "data": {
   "shadows": "types.TracebackType"
  },
  "type": "import"
 },
 "httpx.client._proxies_to_dispatchers": {
  "data": {
   "lineno": 1192,
   "symbols_in_volume": [
    "URL",
    "_proxy_from_url",
    "bool",
    "httpx.client.typing",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.client._proxies_to_dispatchers._proxy_from_url": {
  "data": {
   "lineno": 1202,
   "symbols_in_volume": [
    "HTTPProxy",
    "URL",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "httpx.client.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "httpx.client.hstspreload": {
  "data": {
   "shadows": "hstspreload"
  },
  "type": "import"
 },
 "httpx.client.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "httpx.client.netrc": {
  "data": {
   "shadows": "netrc"
  },
  "type": "import"
 },
 "httpx.client.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "httpx.concurrency": {
  "data": {},
  "type": "module"
 },
 "httpx.concurrency.asyncio": {
  "data": {},
  "type": "module"
 },
 "httpx.concurrency.asyncio.AsyncioBackend": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "ConnectTimeout",
    "httpx.concurrency.asyncio.TCPStream",
    "httpx.concurrency.asyncio.asyncio",
    "httpx.concurrency.asyncio.functools",
    "httpx.concurrency.asyncio.ssl",
    "httpx.concurrency.asyncio.typing",
    "int",
    "str"
   ]
  },
  "type": "class"
 },
 "httpx.concurrency.asyncio.AsyncioBackend.__init__": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "httpx.concurrency.asyncio.SSL_MONKEY_PATCH_APPLIED",
    "httpx.concurrency.asyncio.ssl_monkey_patch"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.asyncio.AsyncioBackend.background_manager": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "coroutine",
    "httpx.concurrency.asyncio.BackgroundManager",
    "httpx.concurrency.asyncio.typing"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.asyncio.AsyncioBackend.create_event": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "httpx.concurrency.asyncio.asyncio",
    "httpx.concurrency.asyncio.typing"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.asyncio.AsyncioBackend.create_queue": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "httpx.concurrency.asyncio.asyncio",
    "httpx.concurrency.asyncio.typing",
    "int"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.asyncio.AsyncioBackend.get_semaphore": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "httpx.concurrency.asyncio.PoolSemaphore"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.asyncio.AsyncioBackend.loop": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "RuntimeError",
    "hasattr",
    "httpx.concurrency.asyncio.asyncio",
    "property"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.asyncio.AsyncioBackend.run": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "coroutine",
    "httpx.concurrency.asyncio.asyncio",
    "httpx.concurrency.asyncio.typing"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.asyncio.BackgroundManager": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "BaseException",
    "httpx.concurrency.asyncio.asyncio",
    "httpx.concurrency.asyncio.typing",
    "types.TracebackType"
   ]
  },
  "type": "class"
 },
 "httpx.concurrency.asyncio.BackgroundManager.__init__": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "coroutine",
    "httpx.concurrency.asyncio.typing"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.asyncio.PoolSemaphore": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "PoolTimeout",
    "httpx.concurrency.asyncio.asyncio"
   ]
  },
  "type": "class"
 },
 "httpx.concurrency.asyncio.PoolSemaphore.__init__": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "httpx.concurrency.asyncio.PoolSemaphore.release": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "httpx.concurrency.asyncio.PoolSemaphore.semaphore": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "hasattr",
    "httpx.concurrency.asyncio.asyncio",
    "httpx.concurrency.asyncio.typing",
    "property"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.asyncio.SSL_MONKEY_PATCH_APPLIED": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "httpx.concurrency.asyncio.TCPStream": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "NotImplementedError",
    "ReadTimeout",
    "WriteTimeout",
    "bytes",
    "hasattr",
    "httpx.concurrency.asyncio.asyncio",
    "httpx.concurrency.asyncio.ssl",
    "httpx.concurrency.asyncio.sys",
    "int",
    "loop_start_tls",
    "str"
   ]
  },
  "type": "class"
 },
 "httpx.concurrency.asyncio.TCPStream.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "httpx.concurrency.asyncio.TCPStream",
    "httpx.concurrency.asyncio.asyncio",
    "httpx.concurrency.asyncio.typing"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.asyncio.TCPStream.get_http_version": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.asyncio.TCPStream.is_connection_dropped": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.asyncio.TCPStream.write_no_block": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.asyncio.TracebackType": {
  "data": {
   "shadows": "types.TracebackType"
  },
  "type": "import"
 },
 "httpx.concurrency.asyncio.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "httpx.concurrency.asyncio.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "httpx.concurrency.asyncio.ssl": {
  "data": {
   "shadows": "ssl"
  },
  "type": "import"
 },
 "httpx.concurrency.asyncio.ssl_monkey_patch": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "httpx.concurrency.asyncio.asyncio"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.asyncio.ssl_monkey_patch._fixed_write": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "_write",
    "bytes"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.asyncio.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "httpx.concurrency.asyncio.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "httpx.concurrency.base": {
  "data": {},
  "type": "module"
 },
 "httpx.concurrency.base.BaseBackgroundManager": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "BaseException",
    "NotImplementedError",
    "httpx.concurrency.base.typing",
    "type",
    "types.TracebackType"
   ]
  },
  "type": "class"
 },
 "httpx.concurrency.base.BaseEvent": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "class"
 },
 "httpx.concurrency.base.BaseEvent.clear": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.base.BaseEvent.is_set": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.base.BaseEvent.set": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.base.BasePoolSemaphore": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "class"
 },
 "httpx.concurrency.base.BasePoolSemaphore.release": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.base.BaseQueue": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "NotImplementedError",
    "httpx.concurrency.base.typing"
   ]
  },
  "type": "class"
 },
 "httpx.concurrency.base.BaseTCPStream": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "NotImplementedError",
    "bytes",
    "httpx.concurrency.base.ssl",
    "httpx.concurrency.base.typing",
    "int",
    "str"
   ]
  },
  "type": "class"
 },
 "httpx.concurrency.base.BaseTCPStream.get_http_version": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "NotImplementedError",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.base.BaseTCPStream.is_connection_dropped": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.base.BaseTCPStream.write_no_block": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "NotImplementedError",
    "bytes"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.base.ConcurrencyBackend": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "IterationComplete",
    "NotImplementedError",
    "httpx.concurrency.base.BaseTCPStream",
    "httpx.concurrency.base.ssl",
    "httpx.concurrency.base.typing",
    "int",
    "str"
   ]
  },
  "type": "class"
 },
 "httpx.concurrency.base.ConcurrencyBackend.IterationComplete": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "httpx.concurrency.base.ConcurrencyBackend.background_manager": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "NotImplementedError",
    "httpx.concurrency.base.typing"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.base.ConcurrencyBackend.create_event": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "NotImplementedError",
    "httpx.concurrency.base.BaseEvent"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.base.ConcurrencyBackend.create_queue": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "NotImplementedError",
    "httpx.concurrency.base.BaseQueue",
    "int"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.base.ConcurrencyBackend.get_semaphore": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "NotImplementedError",
    "httpx.concurrency.base.BasePoolSemaphore"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.base.ConcurrencyBackend.iterate": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "StopAsyncIteration"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.base.ConcurrencyBackend.next_wrapper": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "IterationComplete",
    "StopIteration",
    "next"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.base.ConcurrencyBackend.run": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "NotImplementedError",
    "httpx.concurrency.base.typing"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.base.TimeoutFlag": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "httpx.concurrency.base.TimeoutFlag.__init__": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "httpx.concurrency.base.TimeoutFlag.set_read_timeouts": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "httpx.concurrency.base.TimeoutFlag.set_write_timeouts": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "httpx.concurrency.base.TracebackType": {
  "data": {
   "shadows": "types.TracebackType"
  },
  "type": "import"
 },
 "httpx.concurrency.base.ssl": {
  "data": {
   "shadows": "ssl"
  },
  "type": "import"
 },
 "httpx.concurrency.base.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "httpx.concurrency.trio": {
  "data": {},
  "type": "module"
 },
 "httpx.concurrency.trio.BackgroundManager": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "BaseException",
    "httpx.concurrency.trio.typing",
    "types.TracebackType"
   ]
  },
  "type": "class"
 },
 "httpx.concurrency.trio.BackgroundManager.__init__": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "httpx.concurrency.trio.trio",
    "httpx.concurrency.trio.typing"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.trio.Event": {
  "data": {
   "lineno": 234
  },
  "type": "class"
 },
 "httpx.concurrency.trio.Event.__init__": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "httpx.concurrency.trio.trio"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.trio.Event.clear": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "httpx.concurrency.trio.trio"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.trio.Event.is_set": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.trio.Event.set": {
  "data": {
   "lineno": 238
  },
  "type": "function"
 },
 "httpx.concurrency.trio.PoolSemaphore": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "PoolTimeout",
    "httpx.concurrency.trio._or_inf",
    "httpx.concurrency.trio.trio"
   ]
  },
  "type": "class"
 },
 "httpx.concurrency.trio.PoolSemaphore.__init__": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "httpx.concurrency.trio.PoolSemaphore.release": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "httpx.concurrency.trio.PoolSemaphore.semaphore": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "hasattr",
    "httpx.concurrency.trio.trio",
    "httpx.concurrency.trio.typing",
    "property"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.trio.Queue": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "httpx.concurrency.trio.typing"
   ]
  },
  "type": "class"
 },
 "httpx.concurrency.trio.Queue.__init__": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "httpx.concurrency.trio.math",
    "httpx.concurrency.trio.trio",
    "int"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.trio.TCPStream": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ConnectTimeout",
    "ReadTimeout",
    "WriteTimeout",
    "bytes",
    "httpx.concurrency.trio._or_inf",
    "httpx.concurrency.trio.ssl",
    "httpx.concurrency.trio.trio",
    "int",
    "str"
   ]
  },
  "type": "class"
 },
 "httpx.concurrency.trio.TCPStream.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "httpx.concurrency.trio.trio",
    "httpx.concurrency.trio.typing"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.trio.TCPStream.get_http_version": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "httpx.concurrency.trio.trio",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.trio.TCPStream.is_connection_dropped": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "bool",
    "hasattr",
    "httpx.concurrency.trio.trio",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.trio.TCPStream.write_no_block": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.trio.TracebackType": {
  "data": {
   "shadows": "types.TracebackType"
  },
  "type": "import"
 },
 "httpx.concurrency.trio.TrioBackend": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "ConnectTimeout",
    "httpx.concurrency.trio.TCPStream",
    "httpx.concurrency.trio._or_inf",
    "httpx.concurrency.trio.functools",
    "httpx.concurrency.trio.ssl",
    "httpx.concurrency.trio.trio",
    "httpx.concurrency.trio.typing",
    "int",
    "str"
   ]
  },
  "type": "class"
 },
 "httpx.concurrency.trio.TrioBackend.background_manager": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "httpx.concurrency.trio.BackgroundManager",
    "httpx.concurrency.trio.typing"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.trio.TrioBackend.create_event": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "httpx.concurrency.trio.Event"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.trio.TrioBackend.create_queue": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "httpx.concurrency.trio.Queue",
    "int"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.trio.TrioBackend.get_semaphore": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "httpx.concurrency.trio.PoolSemaphore"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.trio.TrioBackend.run": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "httpx.concurrency.trio.functools",
    "httpx.concurrency.trio.trio",
    "httpx.concurrency.trio.typing"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.trio._or_inf": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "float",
    "httpx.concurrency.trio.typing"
   ]
  },
  "type": "function"
 },
 "httpx.concurrency.trio.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "httpx.concurrency.trio.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "httpx.concurrency.trio.ssl": {
  "data": {
   "shadows": "ssl"
  },
  "type": "import"
 },
 "httpx.concurrency.trio.trio": {
  "data": {
   "shadows": "trio"
  },
  "type": "import"
 },
 "httpx.concurrency.trio.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "httpx.config": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "bool",
    "float",
    "get_logger",
    "httpx.config.PoolLimits",
    "httpx.config.SSLConfig",
    "httpx.config.TimeoutConfig",
    "httpx.config.certifi",
    "httpx.config.ssl",
    "httpx.config.typing",
    "pathlib.Path",
    "str"
   ]
  },
  "type": "module"
 },
 "httpx.config.CertTypes": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "httpx.config.DEFAULT_CA_BUNDLE_PATH": {
  "data": {
   "lineno": 352
  },
  "type": "constant"
 },
 "httpx.config.DEFAULT_CIPHERS": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "httpx.config.DEFAULT_MAX_REDIRECTS": {
  "data": {
   "lineno": 353
  },
  "type": "constant"
 },
 "httpx.config.DEFAULT_POOL_LIMITS": {
  "data": {
   "lineno": 351
  },
  "type": "constant"
 },
 "httpx.config.DEFAULT_SSL_CONFIG": {
  "data": {
   "lineno": 349
  },
  "type": "constant"
 },
 "httpx.config.DEFAULT_TIMEOUT_CONFIG": {
  "data": {
   "lineno": 350
  },
  "type": "constant"
 },
 "httpx.config.HTTPVersionConfig": {
  "data": {
   "lineno": 271
  },
  "type": "class"
 },
 "httpx.config.HTTPVersionConfig.__init__": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "httpx.config.HTTPVersionConfig",
    "httpx.config.HTTPVersionTypes",
    "httpx.config.typing",
    "isinstance",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "httpx.config.HTTPVersionConfig.__repr__": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "list",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.config.HTTPVersionConfig.alpn_identifiers": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "httpx.config.HTTP_VERSIONS_TO_ALPN_IDENTIFIERS",
    "httpx.config.typing",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.config.HTTPVersionTypes": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "httpx.config.HTTP_VERSIONS_TO_ALPN_IDENTIFIERS": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "httpx.config.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "httpx.config.PoolLimits": {
  "data": {
   "lineno": 317
  },
  "type": "class"
 },
 "httpx.config.PoolLimits.__eq__": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "bool",
    "httpx.config.typing",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "httpx.config.PoolLimits.__init__": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "httpx.config.PoolLimits.__repr__": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.config.SSLConfig": {
  "data": {
   "lineno": 46
  },
  "type": "class"
 },
 "httpx.config.SSLConfig.__eq__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "bool",
    "httpx.config.typing",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "httpx.config.SSLConfig.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "bool",
    "httpx.config.CertTypes",
    "httpx.config.VerifyTypes",
    "httpx.config.ssl",
    "httpx.config.typing",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.config.SSLConfig.__repr__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.config.SSLConfig._create_default_ssl_context": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "hasattr",
    "httpx.config.DEFAULT_CIPHERS",
    "httpx.config.os",
    "httpx.config.ssl"
   ]
  },
  "type": "function"
 },
 "httpx.config.SSLConfig._load_client_certs": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "httpx.config.ssl",
    "isinstance",
    "len",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "httpx.config.SSLConfig.load_ssl_context": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "httpx.config.HTTPVersionConfig",
    "httpx.config.logger",
    "httpx.config.ssl"
   ]
  },
  "type": "function"
 },
 "httpx.config.SSLConfig.load_ssl_context_no_verify": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "httpx.config.ssl"
   ]
  },
  "type": "function"
 },
 "httpx.config.SSLConfig.load_ssl_context_verify": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "AttributeError",
    "IOError",
    "bool",
    "get_ca_bundle_from_env",
    "httpx.config.logger",
    "httpx.config.ssl",
    "isinstance",
    "pathlib.Path",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.config.SSLConfig.with_overrides": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "httpx.config.CertTypes",
    "httpx.config.SSLConfig",
    "httpx.config.VerifyTypes"
   ]
  },
  "type": "function"
 },
 "httpx.config.TimeoutConfig": {
  "data": {
   "lineno": 218
  },
  "type": "class"
 },
 "httpx.config.TimeoutConfig.__eq__": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "bool",
    "httpx.config.typing",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "httpx.config.TimeoutConfig.__init__": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "float",
    "httpx.config.TimeoutConfig",
    "httpx.config.TimeoutTypes",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "httpx.config.TimeoutConfig.__repr__": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.config.TimeoutTypes": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "httpx.config.USER_AGENT": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "httpx.config.VerifyTypes": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "httpx.config.certifi": {
  "data": {
   "shadows": "certifi"
  },
  "type": "import"
 },
 "httpx.config.logger": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "httpx.config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "httpx.config.ssl": {
  "data": {
   "shadows": "ssl"
  },
  "type": "import"
 },
 "httpx.config.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "httpx.decoders": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "httpx.decoders.BrotliDecoder",
    "httpx.decoders.DeflateDecoder",
    "httpx.decoders.GZipDecoder",
    "httpx.decoders.IdentityDecoder",
    "httpx.decoders.SUPPORTED_DECODERS",
    "httpx.decoders.brotli"
   ]
  },
  "type": "module"
 },
 "httpx.decoders.ACCEPT_ENCODING": {
  "data": {
   "lineno": 226
  },
  "type": "constant"
 },
 "httpx.decoders.BrotliDecoder": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "httpx.decoders.Decoder"
   ]
  },
  "type": "class"
 },
 "httpx.decoders.BrotliDecoder.__init__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "httpx.decoders.brotli"
   ]
  },
  "type": "function"
 },
 "httpx.decoders.BrotliDecoder.decode": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "bytes",
    "hasattr",
    "httpx.decoders.brotli"
   ]
  },
  "type": "function"
 },
 "httpx.decoders.BrotliDecoder.flush": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "bytes",
    "hasattr",
    "httpx.decoders.brotli"
   ]
  },
  "type": "function"
 },
 "httpx.decoders.Decoder": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "httpx.decoders.Decoder.decode": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "NotImplementedError",
    "bytes"
   ]
  },
  "type": "function"
 },
 "httpx.decoders.Decoder.flush": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "NotImplementedError",
    "bytes"
   ]
  },
  "type": "function"
 },
 "httpx.decoders.DeflateDecoder": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "httpx.decoders.Decoder"
   ]
  },
  "type": "class"
 },
 "httpx.decoders.DeflateDecoder.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "httpx.decoders.zlib"
   ]
  },
  "type": "function"
 },
 "httpx.decoders.DeflateDecoder.decode": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "bytes",
    "httpx.decoders.zlib"
   ]
  },
  "type": "function"
 },
 "httpx.decoders.DeflateDecoder.flush": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "bytes",
    "httpx.decoders.zlib"
   ]
  },
  "type": "function"
 },
 "httpx.decoders.GZipDecoder": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "httpx.decoders.Decoder"
   ]
  },
  "type": "class"
 },
 "httpx.decoders.GZipDecoder.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "httpx.decoders.zlib"
   ]
  },
  "type": "function"
 },
 "httpx.decoders.GZipDecoder.decode": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "bytes",
    "httpx.decoders.zlib"
   ]
  },
  "type": "function"
 },
 "httpx.decoders.GZipDecoder.flush": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "bytes",
    "httpx.decoders.zlib"
   ]
  },
  "type": "function"
 },
 "httpx.decoders.IdentityDecoder": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "httpx.decoders.Decoder"
   ]
  },
  "type": "class"
 },
 "httpx.decoders.IdentityDecoder.decode": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "function"
 },
 "httpx.decoders.IdentityDecoder.flush": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "function"
 },
 "httpx.decoders.MultiDecoder": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "httpx.decoders.Decoder"
   ]
  },
  "type": "class"
 },
 "httpx.decoders.MultiDecoder.__init__": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "httpx.decoders.Decoder",
    "httpx.decoders.typing",
    "list",
    "reversed"
   ]
  },
  "type": "function"
 },
 "httpx.decoders.MultiDecoder.decode": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "function"
 },
 "httpx.decoders.MultiDecoder.flush": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "function"
 },
 "httpx.decoders.SUPPORTED_DECODERS": {
  "data": {
   "lineno": 214
  },
  "type": "constant"
 },
 "httpx.decoders.TextDecoder": {
  "data": {
   "lineno": 150
  },
  "type": "class"
 },
 "httpx.decoders.TextDecoder.__init__": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "bytearray",
    "httpx.decoders.chardet",
    "httpx.decoders.codecs",
    "httpx.decoders.typing",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.decoders.TextDecoder._detector_result": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "DecodingError",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.decoders.TextDecoder.decode": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "DecodingError",
    "UnicodeDecodeError",
    "bytes",
    "httpx.decoders.codecs",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.decoders.TextDecoder.flush": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "DecodingError",
    "UnicodeDecodeError",
    "bytes",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.decoders.brotli": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "httpx.decoders.chardet": {
  "data": {
   "shadows": "chardet"
  },
  "type": "import"
 },
 "httpx.decoders.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "httpx.decoders.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "httpx.decoders.zlib": {
  "data": {
   "shadows": "zlib"
  },
  "type": "import"
 },
 "httpx.dispatch": {
  "data": {},
  "type": "module"
 },
 "httpx.dispatch.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "httpx.dispatch.asgi": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "get_logger"
   ]
  },
  "type": "module"
 },
 "httpx.dispatch.asgi.ASGIDispatch": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "AsyncResponse",
    "Exception",
    "MessageLoggerASGIMiddleware",
    "StopAsyncIteration",
    "app",
    "dict",
    "httpx.dispatch.asgi.BodyIterator",
    "httpx.dispatch.asgi.logger"
   ]
  },
  "type": "class"
 },
 "httpx.dispatch.asgi.ASGIDispatch.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "AsyncioBackend",
    "bool",
    "httpx.dispatch.asgi.typing",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.asgi.BodyIterator": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "bytes",
    "httpx.dispatch.asgi.typing",
    "isinstance"
   ]
  },
  "type": "class"
 },
 "httpx.dispatch.asgi.BodyIterator.__init__": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.asgi.logger": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "httpx.dispatch.asgi.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "httpx.dispatch.base": {
  "data": {},
  "type": "module"
 },
 "httpx.dispatch.base.AsyncDispatcher": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "AsyncRequest",
    "BaseException",
    "NotImplementedError",
    "httpx.dispatch.base.typing",
    "str",
    "types.TracebackType"
   ]
  },
  "type": "class"
 },
 "httpx.dispatch.base.Dispatcher": {
  "data": {
   "lineno": 66
  },
  "type": "class"
 },
 "httpx.dispatch.base.Dispatcher.__enter__": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "httpx.dispatch.base.Dispatcher.__exit__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "BaseException",
    "httpx.dispatch.base.typing",
    "types.TracebackType"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.base.Dispatcher.close": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "httpx.dispatch.base.Dispatcher.request": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "Request",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.base.Dispatcher.send": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "NotImplementedError",
    "Request"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.base.TracebackType": {
  "data": {
   "shadows": "types.TracebackType"
  },
  "type": "import"
 },
 "httpx.dispatch.base.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "httpx.dispatch.connection": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "get_logger",
    "httpx.dispatch.connection.typing"
   ]
  },
  "type": "module"
 },
 "httpx.dispatch.connection.HTTPConnection": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "HTTP11Connection",
    "HTTP2Connection",
    "SSLConfig",
    "TimeoutConfig",
    "httpx.dispatch.connection.functools",
    "httpx.dispatch.connection.logger",
    "httpx.dispatch.connection.ssl",
    "httpx.dispatch.connection.typing"
   ]
  },
  "type": "class"
 },
 "httpx.dispatch.connection.HTTPConnection.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "AsyncioBackend",
    "HTTPVersionConfig",
    "Origin",
    "SSLConfig",
    "TimeoutConfig",
    "bool",
    "httpx.dispatch.connection.ReleaseCallback",
    "httpx.dispatch.connection.typing",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.connection.HTTPConnection.__repr__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.connection.HTTPConnection.is_closed": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.connection.HTTPConnection.is_connection_dropped": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.connection.HTTPConnection.is_http2": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.connection.ReleaseCallback": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "httpx.dispatch.connection.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "httpx.dispatch.connection.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "httpx.dispatch.connection.ssl": {
  "data": {
   "shadows": "ssl"
  },
  "type": "import"
 },
 "httpx.dispatch.connection.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "httpx.dispatch.connection_pool": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "get_logger",
    "httpx.dispatch.connection_pool.typing"
   ]
  },
  "type": "module"
 },
 "httpx.dispatch.connection_pool.CONNECTIONS_DICT": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "httpx.dispatch.connection_pool.ConnectionPool": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "BaseException",
    "HTTPConnection",
    "httpx.dispatch.connection_pool.logger",
    "list"
   ]
  },
  "type": "class"
 },
 "httpx.dispatch.connection_pool.ConnectionPool.__init__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "AsyncioBackend",
    "bool",
    "httpx.dispatch.connection_pool.ConnectionStore"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.connection_pool.ConnectionPool.num_connections": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "int",
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.connection_pool.ConnectionPool.pop_connection": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "HTTPConnection",
    "httpx.dispatch.connection_pool.typing"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.connection_pool.ConnectionStore": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "httpx.dispatch.connection_pool.ConnectionStore.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "float",
    "httpx.dispatch.connection_pool.typing"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.connection_pool.ConnectionStore.__iter__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "httpx.dispatch.connection_pool.typing",
    "iter"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.connection_pool.ConnectionStore.__len__": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.connection_pool.ConnectionStore.add": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.connection_pool.ConnectionStore.clear": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "httpx.dispatch.connection_pool.ConnectionStore.pop_by_origin": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "KeyError",
    "bool",
    "httpx.dispatch.connection_pool.typing",
    "list",
    "next",
    "reversed"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.connection_pool.ConnectionStore.remove": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "httpx.dispatch.connection_pool.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "httpx.dispatch.connection_pool.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "httpx.dispatch.http11": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "get_logger",
    "httpx.dispatch.http11.h11",
    "httpx.dispatch.http11.typing"
   ]
  },
  "type": "module"
 },
 "httpx.dispatch.http11.H11Event": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "httpx.dispatch.http11.HTTP11Connection": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "AsyncResponse",
    "OSError",
    "TimeoutConfig",
    "bytes",
    "httpx.dispatch.http11.H11Event",
    "httpx.dispatch.http11.h11",
    "httpx.dispatch.http11.logger",
    "httpx.dispatch.http11.typing",
    "int",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "class"
 },
 "httpx.dispatch.http11.HTTP11Connection.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "TimeoutFlag",
    "httpx.dispatch.http11.OnReleaseCallback",
    "httpx.dispatch.http11.h11",
    "httpx.dispatch.http11.typing"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.http11.HTTP11Connection.is_closed": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "bool",
    "httpx.dispatch.http11.h11",
    "property"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.http11.HTTP11Connection.is_connection_dropped": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.http11.OnReleaseCallback": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "httpx.dispatch.http11.h11": {
  "data": {
   "shadows": "h11"
  },
  "type": "import"
 },
 "httpx.dispatch.http11.logger": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "httpx.dispatch.http11.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "httpx.dispatch.http2": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "get_logger"
   ]
  },
  "type": "module"
 },
 "httpx.dispatch.http2.HTTP2Connection": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "AsyncResponse",
    "KeyError",
    "ProtocolError",
    "TimeoutConfig",
    "TimeoutFlag",
    "bytes",
    "events",
    "getattr",
    "hasattr",
    "httpx.dispatch.http2.functools",
    "httpx.dispatch.http2.logger",
    "httpx.dispatch.http2.typing",
    "int",
    "isinstance",
    "len",
    "min"
   ]
  },
  "type": "class"
 },
 "httpx.dispatch.http2.HTTP2Connection.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "httpx.dispatch.http2.typing"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.http2.HTTP2Connection.initiate_connection": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "h2.settings.SettingCodes.ENABLE_PUSH",
    "h2.settings.SettingCodes.MAX_CONCURRENT_STREAMS",
    "h2.settings.SettingCodes.MAX_HEADER_LIST_SIZE",
    "h2.settings.Settings"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.http2.HTTP2Connection.is_closed": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.http2.HTTP2Connection.is_connection_dropped": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.http2.SettingCodes": {
  "data": {
   "shadows": "h2.settings.SettingCodes"
  },
  "type": "import"
 },
 "httpx.dispatch.http2.Settings": {
  "data": {
   "shadows": "h2.settings.Settings"
  },
  "type": "import"
 },
 "httpx.dispatch.http2.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "httpx.dispatch.http2.h2.connection": {
  "data": {
   "shadows": "h2.connection"
  },
  "type": "import"
 },
 "httpx.dispatch.http2.h2.events": {
  "data": {
   "shadows": "h2.events"
  },
  "type": "import"
 },
 "httpx.dispatch.http2.logger": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "httpx.dispatch.http2.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "httpx.dispatch.proxy_http": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "get_logger"
   ]
  },
  "type": "module"
 },
 "httpx.dispatch.proxy_http.HTTPProxy": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "AsyncRequest",
    "HTTP11Connection",
    "HTTP2Connection",
    "HTTPConnection",
    "ProxyError",
    "SSLConfig",
    "httpx.dispatch.proxy_http.h11",
    "httpx.dispatch.proxy_http.logger",
    "str",
    "super"
   ]
  },
  "type": "class"
 },
 "httpx.dispatch.proxy_http.HTTPProxy.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "Headers",
    "URL",
    "bool",
    "build_basic_auth_header",
    "httpx.dispatch.proxy_http.HTTPProxy",
    "httpx.dispatch.proxy_http.HTTPProxyMode",
    "super"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.proxy_http.HTTPProxy.__repr__": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.proxy_http.HTTPProxy.should_forward_origin": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "bool",
    "httpx.dispatch.proxy_http.HTTPProxyMode"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.proxy_http.HTTPProxyMode": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "httpx.dispatch.proxy_http.enum"
   ]
  },
  "type": "class"
 },
 "httpx.dispatch.proxy_http.enum": {
  "data": {
   "shadows": "enum"
  },
  "type": "import"
 },
 "httpx.dispatch.proxy_http.h11": {
  "data": {
   "shadows": "h11"
  },
  "type": "import"
 },
 "httpx.dispatch.proxy_http.logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "httpx.dispatch.threaded": {
  "data": {},
  "type": "module"
 },
 "httpx.dispatch.threaded.ThreadedDispatcher": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "AsyncResponse",
    "Request",
    "getattr",
    "isinstance"
   ]
  },
  "type": "class"
 },
 "httpx.dispatch.threaded.ThreadedDispatcher.__init__": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "httpx.dispatch.threaded.ThreadedDispatcher._async_response_content": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "bytes",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.threaded.ThreadedDispatcher._sync_request_data": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "bytes",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.wsgi": {
  "data": {},
  "type": "module"
 },
 "httpx.dispatch.wsgi.BodyStream": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "httpx.dispatch.wsgi.io"
   ]
  },
  "type": "class"
 },
 "httpx.dispatch.wsgi.BodyStream.__init__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "bytes",
    "httpx.dispatch.wsgi.typing"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.wsgi.BodyStream.fileno": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "OSError",
    "int"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.wsgi.BodyStream.read": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "StopIteration",
    "bytes",
    "int",
    "len",
    "next"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.wsgi.BodyStream.readall": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "OSError",
    "bytes"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.wsgi.BodyStream.readinto": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "bytearray",
    "httpx.dispatch.wsgi.typing",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.wsgi.BodyStream.seek": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "OSError",
    "int"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.wsgi.BodyStream.truncate": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "OSError",
    "int"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.wsgi.BodyStream.write": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "OSError",
    "bytes",
    "int"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.wsgi.WSGIDispatch": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "httpx.dispatch.wsgi.WSGIDispatch.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "bool",
    "httpx.dispatch.wsgi.typing",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.wsgi.WSGIDispatch.send": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "Response",
    "getattr",
    "httpx.dispatch.wsgi.BodyStream",
    "httpx.dispatch.wsgi.io",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.wsgi.WSGIDispatch.send.start_response": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "httpx.dispatch.wsgi.typing",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.dispatch.wsgi.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "httpx.dispatch.wsgi.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "httpx.exceptions": {
  "data": {
   "symbols_in_volume": [
    "httpx.exceptions.typing"
   ]
  },
  "type": "module"
 },
 "httpx.exceptions.ConnectTimeout": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "httpx.exceptions.Timeout"
   ]
  },
  "type": "class"
 },
 "httpx.exceptions.CookieConflict": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "httpx.exceptions.HTTPError"
   ]
  },
  "type": "class"
 },
 "httpx.exceptions.DecodingError": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "httpx.exceptions.HTTPError"
   ]
  },
  "type": "class"
 },
 "httpx.exceptions.HTTPError": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "httpx.exceptions.HTTPError.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "getattr",
    "httpx.exceptions.typing",
    "super"
   ]
  },
  "type": "function"
 },
 "httpx.exceptions.InvalidURL": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "httpx.exceptions.HTTPError"
   ]
  },
  "type": "class"
 },
 "httpx.exceptions.NotRedirectResponse": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "httpx.exceptions.RedirectError"
   ]
  },
  "type": "class"
 },
 "httpx.exceptions.PoolTimeout": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "httpx.exceptions.Timeout"
   ]
  },
  "type": "class"
 },
 "httpx.exceptions.ProtocolError": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "httpx.exceptions.HTTPError"
   ]
  },
  "type": "class"
 },
 "httpx.exceptions.ProxyError": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "httpx.exceptions.HTTPError"
   ]
  },
  "type": "class"
 },
 "httpx.exceptions.ReadTimeout": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "httpx.exceptions.Timeout"
   ]
  },
  "type": "class"
 },
 "httpx.exceptions.RedirectBodyUnavailable": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "httpx.exceptions.RedirectError"
   ]
  },
  "type": "class"
 },
 "httpx.exceptions.RedirectError": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "httpx.exceptions.HTTPError"
   ]
  },
  "type": "class"
 },
 "httpx.exceptions.RedirectLoop": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "httpx.exceptions.RedirectError"
   ]
  },
  "type": "class"
 },
 "httpx.exceptions.ResponseClosed": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "httpx.exceptions.StreamError"
   ]
  },
  "type": "class"
 },
 "httpx.exceptions.ResponseNotRead": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "httpx.exceptions.StreamError"
   ]
  },
  "type": "class"
 },
 "httpx.exceptions.StreamConsumed": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "httpx.exceptions.StreamError"
   ]
  },
  "type": "class"
 },
 "httpx.exceptions.StreamError": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "httpx.exceptions.HTTPError"
   ]
  },
  "type": "class"
 },
 "httpx.exceptions.Timeout": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "httpx.exceptions.HTTPError"
   ]
  },
  "type": "class"
 },
 "httpx.exceptions.TooManyRedirects": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "httpx.exceptions.RedirectError"
   ]
  },
  "type": "class"
 },
 "httpx.exceptions.WriteTimeout": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "httpx.exceptions.Timeout"
   ]
  },
  "type": "class"
 },
 "httpx.exceptions.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "httpx.middleware": {
  "data": {},
  "type": "module"
 },
 "httpx.middleware.base": {
  "data": {},
  "type": "module"
 },
 "httpx.middleware.base.BaseMiddleware": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "NotImplementedError",
    "httpx.middleware.base.typing"
   ]
  },
  "type": "class"
 },
 "httpx.middleware.base.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "httpx.middleware.basic_auth": {
  "data": {},
  "type": "module"
 },
 "httpx.middleware.basic_auth.BasicAuthMiddleware": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "get_response",
    "httpx.middleware.basic_auth.typing"
   ]
  },
  "type": "class"
 },
 "httpx.middleware.basic_auth.BasicAuthMiddleware.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "bytes",
    "httpx.middleware.basic_auth.build_basic_auth_header",
    "httpx.middleware.basic_auth.typing",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.middleware.basic_auth.b64encode": {
  "data": {
   "shadows": "base64.b64encode"
  },
  "type": "import"
 },
 "httpx.middleware.basic_auth.build_basic_auth_header": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "base64.b64encode",
    "bytes",
    "httpx.middleware.basic_auth.typing",
    "str",
    "to_bytes"
   ]
  },
  "type": "function"
 },
 "httpx.middleware.basic_auth.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "httpx.middleware.custom_auth": {
  "data": {},
  "type": "module"
 },
 "httpx.middleware.custom_auth.CustomAuthMiddleware": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "get_response",
    "httpx.middleware.custom_auth.typing"
   ]
  },
  "type": "class"
 },
 "httpx.middleware.custom_auth.CustomAuthMiddleware.__init__": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "httpx.middleware.custom_auth.typing"
   ]
  },
  "type": "function"
 },
 "httpx.middleware.custom_auth.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "httpx.middleware.digest_auth": {
  "data": {},
  "type": "module"
 },
 "httpx.middleware.digest_auth.DigestAuth": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ProtocolError",
    "ValueError",
    "get_response",
    "httpx.middleware.digest_auth.hashlib",
    "httpx.middleware.digest_auth.typing",
    "str"
   ]
  },
  "type": "class"
 },
 "httpx.middleware.digest_auth.DigestAuth.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "bytes",
    "httpx.middleware.digest_auth.typing",
    "str",
    "to_bytes"
   ]
  },
  "type": "function"
 },
 "httpx.middleware.digest_auth.DigestAuth._build_auth_header": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "digest",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.middleware.digest_auth.DigestAuth._build_auth_header.digest": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "bytes",
    "hash_func"
   ]
  },
  "type": "function"
 },
 "httpx.middleware.digest_auth.DigestAuth._get_client_nonce": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "bytes",
    "httpx.middleware.digest_auth.hashlib",
    "httpx.middleware.digest_auth.os",
    "httpx.middleware.digest_auth.time",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.middleware.digest_auth.DigestAuth._get_header_value": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "bytes",
    "enumerate",
    "httpx.middleware.digest_auth.typing",
    "str",
    "to_str"
   ]
  },
  "type": "function"
 },
 "httpx.middleware.digest_auth.DigestAuth._resolve_qop": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "NotImplementedError",
    "ProtocolError",
    "bytes",
    "httpx.middleware.digest_auth.re",
    "httpx.middleware.digest_auth.typing"
   ]
  },
  "type": "function"
 },
 "httpx.middleware.digest_auth.DigestAuthChallenge": {
  "data": {
   "lineno": 137
  },
  "type": "class"
 },
 "httpx.middleware.digest_auth.DigestAuthChallenge.__init__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "bytes",
    "httpx.middleware.digest_auth.typing",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.middleware.digest_auth.DigestAuthChallenge.from_header": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "classmethod",
    "httpx.middleware.digest_auth.typing",
    "str",
    "unquote",
    "urllib.request.parse_http_list"
   ]
  },
  "type": "function"
 },
 "httpx.middleware.digest_auth.DigestAuthChallenge.from_header_dict": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "dict"
   ]
  },
  "type": "function"
 },
 "httpx.middleware.digest_auth.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "httpx.middleware.digest_auth.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "httpx.middleware.digest_auth.parse_http_list": {
  "data": {
   "shadows": "urllib.request.parse_http_list"
  },
  "type": "import"
 },
 "httpx.middleware.digest_auth.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "httpx.middleware.digest_auth.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "httpx.middleware.digest_auth.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "httpx.middleware.redirect": {
  "data": {},
  "type": "module"
 },
 "httpx.middleware.redirect.RedirectMiddleware": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "RedirectLoop",
    "TooManyRedirects",
    "get_response",
    "httpx.middleware.redirect.functools",
    "httpx.middleware.redirect.typing",
    "len",
    "list",
    "self"
   ]
  },
  "type": "class"
 },
 "httpx.middleware.redirect.RedirectMiddleware.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "bool",
    "httpx.middleware.redirect.typing",
    "int"
   ]
  },
  "type": "function"
 },
 "httpx.middleware.redirect.RedirectMiddleware.build_redirect_request": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "AsyncRequest",
    "Cookies",
    "self.cookies",
    "self.redirect_content",
    "self.redirect_headers",
    "self.redirect_method",
    "self.redirect_url"
   ]
  },
  "type": "function"
 },
 "httpx.middleware.redirect.RedirectMiddleware.redirect_content": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "AsyncRequest",
    "RedirectBodyUnavailable",
    "bytes",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.middleware.redirect.RedirectMiddleware.redirect_headers": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "AsyncRequest",
    "Headers",
    "URL",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.middleware.redirect.RedirectMiddleware.redirect_method": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "AsyncRequest",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.middleware.redirect.RedirectMiddleware.redirect_url": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "AsyncRequest",
    "URL"
   ]
  },
  "type": "function"
 },
 "httpx.middleware.redirect.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "httpx.middleware.redirect.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "httpx.status_codes": {
  "data": {
   "symbols_in_volume": [
    "httpx.status_codes.StatusCode",
    "httpx.status_codes.codes",
    "int",
    "setattr"
   ]
  },
  "type": "module"
 },
 "httpx.status_codes.IntEnum": {
  "data": {
   "shadows": "enum.IntEnum"
  },
  "type": "import"
 },
 "httpx.status_codes.StatusCode": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "enum.IntEnum"
   ]
  },
  "type": "class"
 },
 "httpx.status_codes.StatusCode.__new__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "int",
    "int.__new__",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.status_codes.StatusCode.__str__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.status_codes.StatusCode.get_reason_phrase": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "httpx.status_codes.StatusCode",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.status_codes.StatusCode.is_client_error": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "int"
   ]
  },
  "type": "function"
 },
 "httpx.status_codes.StatusCode.is_redirect": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "httpx.status_codes.StatusCode",
    "int"
   ]
  },
  "type": "function"
 },
 "httpx.status_codes.StatusCode.is_server_error": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "int"
   ]
  },
  "type": "function"
 },
 "httpx.status_codes.codes": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "httpx.utils": {
  "data": {
   "symbols_in_volume": [
    "httpx.utils._null",
    "httpx.utils.typing",
    "pathlib.Path"
   ]
  },
  "type": "module"
 },
 "httpx.utils.ASGI_PLACEHOLDER_FORMAT": {
  "data": {
   "lineno": 316
  },
  "type": "constant"
 },
 "httpx.utils.ElapsedTimer": {
  "data": {
   "lineno": 292
  },
  "type": "class"
 },
 "httpx.utils.ElapsedTimer.__enter__": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "time.perf_counter"
   ]
  },
  "type": "function"
 },
 "httpx.utils.ElapsedTimer.__exit__": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "BaseException",
    "httpx.utils.typing",
    "time.perf_counter",
    "types.TracebackType"
   ]
  },
  "type": "function"
 },
 "httpx.utils.ElapsedTimer.__init__": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "float",
    "httpx.utils.typing",
    "time.perf_counter"
   ]
  },
  "type": "function"
 },
 "httpx.utils.ElapsedTimer.elapsed": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "datetime.timedelta",
    "property",
    "time.perf_counter"
   ]
  },
  "type": "function"
 },
 "httpx.utils.MessageLoggerASGIMiddleware": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "BaseException",
    "dict",
    "httpx.utils.asgi_message_with_placeholders",
    "httpx.utils.kv_format",
    "httpx.utils.obfuscate_sensitive_headers",
    "httpx.utils.typing",
    "list",
    "receive",
    "send"
   ]
  },
  "type": "class"
 },
 "httpx.utils.MessageLoggerASGIMiddleware.__init__": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "httpx.utils.logging",
    "httpx.utils.typing"
   ]
  },
  "type": "function"
 },
 "httpx.utils.NETRC_STATIC_FILES": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "httpx.utils.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "httpx.utils.SENSITIVE_HEADERS": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "httpx.utils.TracebackType": {
  "data": {
   "shadows": "types.TracebackType"
  },
  "type": "import"
 },
 "httpx.utils._LOGGER_INITIALIZED": {
  "data": {
   "lineno": 178
  },
  "type": "constant"
 },
 "httpx.utils._null": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "httpx.utils._null2": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "httpx.utils._null3": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "httpx.utils.asgi_message_with_placeholders": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "dict",
    "httpx.utils.ASGI_PLACEHOLDER_FORMAT",
    "httpx.utils.obfuscate_sensitive_headers",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "httpx.utils.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "httpx.utils.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "httpx.utils.flatten_queryparams": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "bytes",
    "httpx.utils.collections",
    "httpx.utils.typing",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.utils.get_ca_bundle_from_env": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "httpx.utils.os",
    "httpx.utils.typing",
    "pathlib.Path",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.utils.get_environment_proxies": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "httpx.utils.typing",
    "str",
    "urllib.request.getproxies"
   ]
  },
  "type": "function"
 },
 "httpx.utils.get_logger": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "httpx.utils._LOGGER_INITIALIZED",
    "httpx.utils.logging",
    "httpx.utils.os",
    "httpx.utils.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.utils.get_netrc": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "httpx.utils.NETRC_STATIC_FILES",
    "httpx.utils.netrc",
    "httpx.utils.os",
    "httpx.utils.typing",
    "pathlib.Path",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.utils.getproxies": {
  "data": {
   "shadows": "urllib.request.getproxies"
  },
  "type": "import"
 },
 "httpx.utils.guess_json_utf": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "bytes",
    "httpx.utils._null",
    "httpx.utils._null2",
    "httpx.utils._null3",
    "httpx.utils.codecs",
    "httpx.utils.typing",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.utils.is_known_encoding": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "LookupError",
    "bool",
    "httpx.utils.codecs",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.utils.kv_format": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "httpx.utils.typing",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "httpx.utils.netrc": {
  "data": {
   "shadows": "netrc"
  },
  "type": "import"
 },
 "httpx.utils.normalize_header_key": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "bytes",
    "httpx.utils.typing",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.utils.normalize_header_value": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "bytes",
    "httpx.utils.typing",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.utils.obfuscate_sensitive_headers": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "httpx.utils.SENSITIVE_HEADERS",
    "httpx.utils.to_bytes_or_str",
    "httpx.utils.to_str",
    "httpx.utils.typing"
   ]
  },
  "type": "function"
 },
 "httpx.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "httpx.utils.parse_header_links": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ValueError",
    "httpx.utils.re",
    "httpx.utils.typing",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.utils.perf_counter": {
  "data": {
   "shadows": "time.perf_counter"
  },
  "type": "import"
 },
 "httpx.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "httpx.utils.should_not_be_proxied": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "bool",
    "httpx.utils.re",
    "urllib.request.getproxies"
   ]
  },
  "type": "function"
 },
 "httpx.utils.str_query_param": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "httpx.utils.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "httpx.utils.to_bytes": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "bytes",
    "httpx.utils.typing",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.utils.to_bytes_or_str": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "httpx.utils.typing",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.utils.to_str": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "bytes",
    "httpx.utils.typing",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "httpx.utils.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "httpx.utils.unquote": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 }
}