{
 "pyfoamalgo": {
  "data": {
   "symbols_in_volume": [
    "pyfoamalgo.__all__"
   ]
  },
  "type": "module"
 },
 "pyfoamalgo.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pyfoamalgo.__version__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pyfoamalgo.azimuthal_integration": {
  "data": {
   "symbols_in_volume": [
    "scipy.constants.c",
    "scipy.constants.e",
    "scipy.constants.h"
   ]
  },
  "type": "module"
 },
 "pyfoamalgo.azimuthal_integration.CONST_HC_E": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pyfoamalgo.azimuthal_integration.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pyfoamalgo.azimuthal_integration.compute_q": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.sqrt",
    "pyfoamalgo.azimuthal_integration.CONST_HC_E"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.azimuthal_integration.constants": {
  "data": {
   "shadows": "scipy.constants"
  },
  "type": "import"
 },
 "pyfoamalgo.azimuthal_integration.energy2wavelength": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pyfoamalgo.azimuthal_integration.CONST_HC_E"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.azimuthal_integration.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyfoamalgo.computer_vision": {
  "data": {},
  "type": "module"
 },
 "pyfoamalgo.computer_vision.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pyfoamalgo.computer_vision.edge_detect": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "cannyEdge",
    "gaussianBlur",
    "mask_image_data",
    "numpy.copy",
    "numpy.uint8",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.computer_vision.fft": {
  "data": {
   "shadows": "scipy.fft"
  },
  "type": "import"
 },
 "pyfoamalgo.computer_vision.fourier_transform_2d": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "mask_image_data",
    "numpy.abs",
    "numpy.copy",
    "numpy.log10",
    "scipy.fft.fft2",
    "scipy.fft.fftshift"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.computer_vision.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyfoamalgo.data_structures": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "pyfoamalgo.data_structures.MutableSet": {
  "data": {
   "shadows": "collections.abc.MutableSet"
  },
  "type": "import"
 },
 "pyfoamalgo.data_structures.OneWayAccuPairSequence": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "pyfoamalgo.data_structures._AbstractSequence"
   ]
  },
  "type": "class"
 },
 "pyfoamalgo.data_structures.OneWayAccuPairSequence.__getitem__": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "pyfoamalgo.data_structures._StatDataItem",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.OneWayAccuPairSequence.__init__": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "ValueError",
    "numpy.float64",
    "numpy.uint64",
    "numpy.zeros",
    "super"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.OneWayAccuPairSequence.append": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "abs",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.OneWayAccuPairSequence.append_dry": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.OneWayAccuPairSequence.data": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "pyfoamalgo.data_structures._StatDataItem",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.OneWayAccuPairSequence.extend": {
  "data": {
   "lineno": 438
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.OneWayAccuPairSequence.from_array": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "cls",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.OneWayAccuPairSequence.reset": {
  "data": {
   "lineno": 443
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyfoamalgo.data_structures.OrderedSet": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "collections.abc.MutableSet"
   ]
  },
  "type": "class"
 },
 "pyfoamalgo.data_structures.OrderedSet.__contains__": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.OrderedSet.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "super"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.OrderedSet.__iter__": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.OrderedSet.__len__": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.OrderedSet.__repr__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.OrderedSet.add": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.OrderedSet.discard": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.Sequence": {
  "data": {
   "shadows": "collections.abc.Sequence"
  },
  "type": "import"
 },
 "pyfoamalgo.data_structures.SimplePairSequence": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "pyfoamalgo.data_structures._AbstractSequence"
   ]
  },
  "type": "class"
 },
 "pyfoamalgo.data_structures.SimplePairSequence.__getitem__": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "slice"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimplePairSequence.__init__": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.zeros",
    "super"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimplePairSequence.append": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimplePairSequence.data": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "slice"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimplePairSequence.extend": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimplePairSequence.from_array": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "cls",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimplePairSequence.reset": {
  "data": {
   "lineno": 280
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimpleSequence": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "pyfoamalgo.data_structures._AbstractSequence"
   ]
  },
  "type": "class"
 },
 "pyfoamalgo.data_structures.SimpleSequence.__getitem__": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimpleSequence.__init__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.zeros",
    "super"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimpleSequence.append": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimpleSequence.data": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "slice"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimpleSequence.extend": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimpleSequence.from_array": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimpleSequence.reset": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimpleVectorSequence": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "pyfoamalgo.data_structures._AbstractSequence"
   ]
  },
  "type": "class"
 },
 "pyfoamalgo.data_structures.SimpleVectorSequence.__getitem__": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimpleVectorSequence.__init__": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.zeros",
    "super"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimpleVectorSequence.append": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimpleVectorSequence.data": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "slice"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimpleVectorSequence.extend": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimpleVectorSequence.from_array": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimpleVectorSequence.reset": {
  "data": {
   "lineno": 224
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimpleVectorSequence.size": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.Stack": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "pyfoamalgo.data_structures.Stack.__init__": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.Stack.__len__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.Stack.empty": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.Stack.pop": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.Stack.push": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures.Stack.top": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures._AbstractSequence": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "collections.abc.Sequence"
   ]
  },
  "type": "class"
 },
 "pyfoamalgo.data_structures._AbstractSequence.__init__": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures._AbstractSequence.__len__": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures._AbstractSequence.append": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures._AbstractSequence.data": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures._AbstractSequence.extend": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures._AbstractSequence.from_array": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures._AbstractSequence.reset": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.data_structures._StatDataItem": {
  "data": {
   "lineno": 299
  },
  "type": "constant"
 },
 "pyfoamalgo.data_structures.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pyfoamalgo.data_structures.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "pyfoamalgo.data_structures.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pyfoamalgo.data_structures.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyfoamalgo.geometry": {
  "data": {
   "symbols_in_volume": [
    "numpy.float32"
   ]
  },
  "type": "module"
 },
 "pyfoamalgo.geometry.AGIPD_1MGeometry": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "pyfoamalgo.geometry._1MGeometryPyMixin"
   ]
  },
  "type": "class"
 },
 "pyfoamalgo.geometry.AGIPD_1MGeometry.from_crystfel_geom": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "cfelpyutils.crystfel_utils.load_crystfel_geometry",
    "classmethod",
    "cls",
    "cls.n_modules",
    "cls.n_tiles_per_module",
    "extra_geom.detectors.GeometryFragment.from_panel_dict",
    "range"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry.DSSC_1MGeometry": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "pyfoamalgo.geometry._1MGeometryPyMixin"
   ]
  },
  "type": "class"
 },
 "pyfoamalgo.geometry.DSSC_1MGeometry.from_h5_file_and_quad_positions": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "itertools.product",
    "list",
    "numpy.array",
    "numpy.zeros",
    "pyfoamalgo.geometry.h5py",
    "range"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry.EPix100Geometry": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "pyfoamalgo.geometry._GeometryPyMixin"
   ]
  },
  "type": "class"
 },
 "pyfoamalgo.geometry.EPix100Geometry.mask_module_py": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "classmethod",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry.GeometryFragment": {
  "data": {
   "shadows": "extra_geom.detectors.GeometryFragment"
  },
  "type": "import"
 },
 "pyfoamalgo.geometry.JungFrauGeometry": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "pyfoamalgo.geometry._GeometryPyMixin"
   ]
  },
  "type": "class"
 },
 "pyfoamalgo.geometry.JungFrauGeometry.from_crystfel_geom": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "cfelpyutils.crystfel_utils.load_crystfel_geometry",
    "classmethod",
    "cls",
    "extra_geom.detectors.GeometryFragment.from_panel_dict",
    "pyfoamalgo.geometry.module_indices"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry.LPD_1MGeometry": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "pyfoamalgo.geometry._1MGeometryPyMixin"
   ]
  },
  "type": "class"
 },
 "pyfoamalgo.geometry.LPD_1MGeometry.from_h5_file_and_quad_positions": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "cls.n_modules_per_quad",
    "cls.n_quads",
    "cls.n_tiles_per_module",
    "cls.pixelSize",
    "cls.tile_shape",
    "itertools.product",
    "list",
    "numpy.array",
    "numpy.zeros",
    "pyfoamalgo.geometry.h5py",
    "range"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry._1MGeometryPyMixin": {
  "data": {
   "lineno": 62
  },
  "type": "class"
 },
 "pyfoamalgo.geometry._1MGeometryPyMixin.dismantle_all_modules": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "pyfoamalgo.geometry._1MGeometryPyMixin.output_array_for_dismantle_fast": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.full",
    "numpy.nan",
    "pyfoamalgo.geometry._IMAGE_DTYPE"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry._1MGeometryPyMixin.output_array_for_position_fast": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.full",
    "numpy.nan",
    "pyfoamalgo.geometry._IMAGE_DTYPE",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry._1MGeometryPyMixin.position_all_modules": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "range"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry._AGIPD_1MGeometry": {
  "data": {
   "shadows": "AGIPD_1MGeometry"
  },
  "type": "import"
 },
 "pyfoamalgo.geometry._DSSC_1MGeometry": {
  "data": {
   "shadows": "DSSC_1MGeometry"
  },
  "type": "import"
 },
 "pyfoamalgo.geometry._GeometryPyMixin": {
  "data": {
   "lineno": 211
  },
  "type": "class"
 },
 "pyfoamalgo.geometry._GeometryPyMixin.dismantle_all_modules": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "pyfoamalgo.geometry._GeometryPyMixin.mask_module_py": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "classmethod",
    "cls.asic_grid_shape",
    "cls.asic_shape",
    "numpy.nan",
    "range"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry._GeometryPyMixin.output_array_for_dismantle_fast": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.full",
    "numpy.nan",
    "pyfoamalgo.geometry._IMAGE_DTYPE"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry._GeometryPyMixin.output_array_for_position_fast": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.full",
    "numpy.nan",
    "pyfoamalgo.geometry._IMAGE_DTYPE",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry._GeometryPyMixin.position_all_modules": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "range"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry._IMAGE_DTYPE": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pyfoamalgo.geometry._LPD_1MGeometry": {
  "data": {
   "shadows": "LPD_1MGeometry"
  },
  "type": "import"
 },
 "pyfoamalgo.geometry.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pyfoamalgo.geometry.load_crystfel_geometry": {
  "data": {
   "shadows": "cfelpyutils.crystfel_utils.load_crystfel_geometry"
  },
  "type": "import"
 },
 "pyfoamalgo.geometry.load_geometry": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "pyfoamalgo.geometry.AGIPD_1MGeometry",
    "pyfoamalgo.geometry.DSSC_1MGeometry",
    "pyfoamalgo.geometry.EPix100Geometry",
    "pyfoamalgo.geometry.JungFrauGeometry",
    "pyfoamalgo.geometry.LPD_1MGeometry",
    "pyfoamalgo.geometry.module_grid_shape"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry.maybe_mask_asic_edges": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "pyfoamalgo.geometry.EPix100Geometry",
    "pyfoamalgo.geometry.JungFrauGeometry"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry.module_grid_shape": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry.module_indices": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyfoamalgo.geometry.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pyfoamalgo.geometry.tests": {
  "data": {},
  "type": "module"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry": {
  "data": {
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.uint16",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry.AGIPD_1MGeometry": {
  "data": {
   "shadows": "pyfoamalgo.geometry.AGIPD_1MGeometry"
  },
  "type": "import"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry.DSSC_1MGeometry": {
  "data": {
   "shadows": "pyfoamalgo.geometry.DSSC_1MGeometry"
  },
  "type": "import"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry.LPD_1MGeometry": {
  "data": {
   "shadows": "pyfoamalgo.geometry.LPD_1MGeometry"
  },
  "type": "import"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry.StackView": {
  "data": {
   "shadows": "extra_data.stacking.StackView"
  },
  "type": "import"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry.TestAGIPD_1MGeometry": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "pyfoamalgo.geometry.tests.test_1M_geometry._Test1MGeometryMixin"
   ]
  },
  "type": "class"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry.TestAGIPD_1MGeometry.setup_class": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "classmethod",
    "os.path.join",
    "pyfoamalgo.geometry.AGIPD_1MGeometry",
    "pyfoamalgo.geometry.AGIPD_1MGeometry.from_crystfel_geom",
    "pyfoamalgo.geometry.AGIPD_1MGeometry.module_shape",
    "pyfoamalgo.geometry.AGIPD_1MGeometry.n_modules",
    "pyfoamalgo.geometry.AGIPD_1MGeometry.tile_shape",
    "pyfoamalgo.geometry.tests.test_1M_geometry._geom_path",
    "pyfoamalgo.geometry.tests.test_1M_geometry.extra_geom"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry.TestDSSC_1MGeometry": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "pyfoamalgo.geometry.tests.test_1M_geometry._Test1MGeometryMixin"
   ]
  },
  "type": "class"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry.TestDSSC_1MGeometry.setup_class": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "classmethod",
    "os.path.join",
    "pyfoamalgo.geometry.DSSC_1MGeometry",
    "pyfoamalgo.geometry.DSSC_1MGeometry.from_h5_file_and_quad_positions",
    "pyfoamalgo.geometry.DSSC_1MGeometry.module_shape",
    "pyfoamalgo.geometry.DSSC_1MGeometry.n_modules",
    "pyfoamalgo.geometry.DSSC_1MGeometry.tile_shape",
    "pyfoamalgo.geometry.tests.test_1M_geometry._geom_path",
    "pyfoamalgo.geometry.tests.test_1M_geometry.extra_geom"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry.TestLPD_1MGeometry": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "pyfoamalgo.geometry.tests.test_1M_geometry._Test1MGeometryMixin"
   ]
  },
  "type": "class"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry.TestLPD_1MGeometry.setup_class": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "classmethod",
    "os.path.join",
    "pyfoamalgo.geometry.LPD_1MGeometry",
    "pyfoamalgo.geometry.LPD_1MGeometry.from_h5_file_and_quad_positions",
    "pyfoamalgo.geometry.LPD_1MGeometry.module_shape",
    "pyfoamalgo.geometry.LPD_1MGeometry.n_modules",
    "pyfoamalgo.geometry.LPD_1MGeometry.tile_shape",
    "pyfoamalgo.geometry.tests.test_1M_geometry._geom_path",
    "pyfoamalgo.geometry.tests.test_1M_geometry.extra_geom"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry._IMAGE_DTYPE": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry._RAW_IMAGE_DTYPE": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry._Test1MGeometryMixin": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry._Test1MGeometryMixin.testAssemblingArray": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "bool",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "pyfoamalgo.geometry.tests.test_1M_geometry._IMAGE_DTYPE",
    "pyfoamalgo.geometry.tests.test_1M_geometry._RAW_IMAGE_DTYPE",
    "pyfoamalgo.geometry.tests.test_1M_geometry.pytest"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry._Test1MGeometryMixin.testAssemblingArrayWithTileEdgeIgnored": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.count_nonzero",
    "numpy.isnan",
    "numpy.ones",
    "pyfoamalgo.geometry.tests.test_1M_geometry._IMAGE_DTYPE",
    "pyfoamalgo.geometry.tests.test_1M_geometry._RAW_IMAGE_DTYPE",
    "pyfoamalgo.geometry.tests.test_1M_geometry.pytest"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry._Test1MGeometryMixin.testAssemblingNoPulse": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "bool",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "pyfoamalgo.geometry.tests.test_1M_geometry._IMAGE_DTYPE",
    "pyfoamalgo.geometry.tests.test_1M_geometry._RAW_IMAGE_DTYPE",
    "pyfoamalgo.geometry.tests.test_1M_geometry.pytest"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry._Test1MGeometryMixin.testAssemblingVector": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "bool",
    "extra_data.stacking.StackView",
    "numpy.nan",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "pyfoamalgo.geometry.tests.test_1M_geometry._IMAGE_DTYPE",
    "pyfoamalgo.geometry.tests.test_1M_geometry._RAW_IMAGE_DTYPE",
    "pyfoamalgo.geometry.tests.test_1M_geometry.pytest",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry._geom_path": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry.extra_geom": {
  "data": {
   "shadows": "extra_geom"
  },
  "type": "import"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry.osp": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyfoamalgo.geometry.tests.test_geometry": {
  "data": {
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.uint16",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "pyfoamalgo.geometry.tests.test_geometry.EPix100Geometry": {
  "data": {
   "shadows": "pyfoamalgo.geometry.EPix100Geometry"
  },
  "type": "import"
 },
 "pyfoamalgo.geometry.tests.test_geometry.JungFrauGeometry": {
  "data": {
   "shadows": "pyfoamalgo.geometry.JungFrauGeometry"
  },
  "type": "import"
 },
 "pyfoamalgo.geometry.tests.test_geometry.StackView": {
  "data": {
   "shadows": "extra_data.stacking.StackView"
  },
  "type": "import"
 },
 "pyfoamalgo.geometry.tests.test_geometry.TestEPix100Geometry": {
  "data": {
   "lineno": 105
  },
  "type": "class"
 },
 "pyfoamalgo.geometry.tests.test_geometry.TestEPix100Geometry.setup_class": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "classmethod",
    "pyfoamalgo.geometry.load_geometry"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_geometry.TestEPix100Geometry.testAssemblingArray": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "bool",
    "numpy.int16",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "pyfoamalgo.geometry.tests.test_geometry._IMAGE_DTYPE",
    "pyfoamalgo.geometry.tests.test_geometry._RAW_IMAGE_DTYPE",
    "pyfoamalgo.geometry.tests.test_geometry.pytest"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_geometry.TestEPix100Geometry.testAssemblingVector": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "bool",
    "extra_data.stacking.StackView",
    "numpy.int16",
    "numpy.nan",
    "numpy.ones",
    "pyfoamalgo.geometry.tests.test_geometry._IMAGE_DTYPE",
    "pyfoamalgo.geometry.tests.test_geometry._RAW_IMAGE_DTYPE",
    "pyfoamalgo.geometry.tests.test_geometry.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_geometry.TestEPix100Geometry.testAssemblingWithAsicEdgeIgnored": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "numpy.count_nonzero",
    "numpy.int16",
    "numpy.isnan",
    "numpy.ones",
    "pyfoamalgo.geometry.tests.test_geometry._IMAGE_DTYPE",
    "pyfoamalgo.geometry.tests.test_geometry._RAW_IMAGE_DTYPE",
    "pyfoamalgo.geometry.tests.test_geometry.pytest"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_geometry.TestEPix100Geometry.testMaskModule": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "numpy.copy",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "pyfoamalgo.geometry.EPix100Geometry.maskModule",
    "pyfoamalgo.geometry.EPix100Geometry.mask_module_py",
    "pyfoamalgo.geometry.tests.test_geometry._IMAGE_DTYPE"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_geometry.TestJungFrauGeometry": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "pyfoamalgo.geometry.tests.test_geometry.TestJungFrauGeometry.setup_class": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "FileNotFoundError",
    "classmethod",
    "numpy.array",
    "os.path.expanduser",
    "os.path.join",
    "pyfoamalgo.geometry.JungFrauGeometry",
    "pyfoamalgo.geometry.load_geometry"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_geometry.TestJungFrauGeometry.testAssemblingArray": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "bool",
    "numpy.float64",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "pyfoamalgo.geometry.tests.test_geometry._IMAGE_DTYPE",
    "pyfoamalgo.geometry.tests.test_geometry._RAW_IMAGE_DTYPE",
    "pyfoamalgo.geometry.tests.test_geometry.pytest"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_geometry.TestJungFrauGeometry.testAssemblingArrayWithAsicEdgeIgnored": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.count_nonzero",
    "numpy.isnan",
    "numpy.ones",
    "pyfoamalgo.geometry.tests.test_geometry._IMAGE_DTYPE",
    "pyfoamalgo.geometry.tests.test_geometry._RAW_IMAGE_DTYPE",
    "pyfoamalgo.geometry.tests.test_geometry.pytest"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_geometry.TestJungFrauGeometry.testAssemblingVector": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "bool",
    "extra_data.stacking.StackView",
    "numpy.float64",
    "numpy.nan",
    "numpy.ones",
    "pyfoamalgo.geometry.tests.test_geometry._IMAGE_DTYPE",
    "pyfoamalgo.geometry.tests.test_geometry._RAW_IMAGE_DTYPE",
    "pyfoamalgo.geometry.tests.test_geometry.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_geometry.TestJungFrauGeometry.testMaskModule": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.copy",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "pyfoamalgo.geometry.JungFrauGeometry.maskModule",
    "pyfoamalgo.geometry.JungFrauGeometry.mask_module_py",
    "pyfoamalgo.geometry.tests.test_geometry._IMAGE_DTYPE"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_geometry._IMAGE_DTYPE": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pyfoamalgo.geometry.tests.test_geometry._RAW_IMAGE_DTYPE": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pyfoamalgo.geometry.tests.test_geometry._geom_path": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pyfoamalgo.geometry.tests.test_geometry.load_geometry": {
  "data": {
   "shadows": "pyfoamalgo.geometry.load_geometry"
  },
  "type": "import"
 },
 "pyfoamalgo.geometry.tests.test_geometry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyfoamalgo.geometry.tests.test_geometry.osp": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pyfoamalgo.geometry.tests.test_geometry.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyfoamalgo.imageproc": {
  "data": {},
  "type": "module"
 },
 "pyfoamalgo.imageproc.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pyfoamalgo.imageproc.correct_image_data": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "correctDsscOffset",
    "correctGain",
    "correctGainOffset",
    "correctOffset"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.imageproc.mask_image_data": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "imageDataNanMask",
    "numpy.bool"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.imageproc.nanmean_image_data": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "nanmeanImageArray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.imageproc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyfoamalgo.lib": {
  "data": {},
  "type": "module"
 },
 "pyfoamalgo.miscellaneous": {
  "data": {},
  "type": "module"
 },
 "pyfoamalgo.miscellaneous.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pyfoamalgo.miscellaneous.normalize_auc": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "numpy.copy",
    "numpy.trapz",
    "slice_curve"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.miscellaneous.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyfoamalgo.sampling": {
  "data": {},
  "type": "module"
 },
 "pyfoamalgo.sampling.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pyfoamalgo.sampling.down_sample": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "len",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.sampling.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyfoamalgo.sampling.slice_curve": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.logical_and",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.sampling.up_sample": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "len",
    "numpy.ceil",
    "numpy.ndarray",
    "numpy.zeros",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.spectrum": {
  "data": {},
  "type": "module"
 },
 "pyfoamalgo.spectrum.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pyfoamalgo.spectrum.binned_statistic": {
  "data": {
   "shadows": "scipy.stats.binned_statistic"
  },
  "type": "import"
 },
 "pyfoamalgo.spectrum.compute_spectrum_1d": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.full",
    "numpy.nan",
    "numpy.nan_to_num",
    "scipy.stats.binned_statistic"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.spectrum.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyfoamalgo.statistics": {
  "data": {
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "module"
 },
 "pyfoamalgo.statistics._NAN_CPP_TYPES": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyfoamalgo.statistics.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pyfoamalgo.statistics._get_outer_edges": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "numpy.isfinite",
    "numpy.max",
    "numpy.min",
    "pyfoamalgo.statistics.math"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.statistics._nanmean_cpp": {
  "data": {
   "shadows": "nanmean"
  },
  "type": "import"
 },
 "pyfoamalgo.statistics._nansum_cpp": {
  "data": {
   "shadows": "nansum"
  },
  "type": "import"
 },
 "pyfoamalgo.statistics.compute_statistics": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "len",
    "numpy.mean",
    "numpy.median",
    "numpy.nan",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.statistics.hist_with_stats": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "numpy.histogram",
    "pyfoamalgo.statistics._get_outer_edges",
    "pyfoamalgo.statistics.compute_statistics"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.statistics.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyfoamalgo.statistics.nanhist_with_stats": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "mask_image_data",
    "numpy.histogram",
    "numpy.isnan",
    "pyfoamalgo.statistics._get_outer_edges",
    "pyfoamalgo.statistics.compute_statistics"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.statistics.nanmean": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "nanmeanImageArray",
    "numpy.nanmean",
    "pyfoamalgo.statistics._NAN_CPP_TYPES"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.statistics.nanstd": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.nanmean",
    "numpy.nanstd"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.statistics.nansum": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.nansum",
    "pyfoamalgo.statistics._NAN_CPP_TYPES"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.statistics.nanvar": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "numpy.nanmean",
    "numpy.nanvar"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.statistics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyfoamalgo.statistics.quick_min_max": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "numpy.argmax",
    "numpy.nanmax",
    "numpy.nanmin",
    "numpy.nanquantile",
    "numpy.ndarray",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests": {
  "data": {},
  "type": "module"
 },
 "pyfoamalgo.tests.test_azimuthal_integ": {
  "data": {},
  "type": "module"
 },
 "pyfoamalgo.tests.test_azimuthal_integ.AzimuthalIntegrator": {
  "data": {
   "shadows": "pyfoamalgo.AzimuthalIntegrator"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_azimuthal_integ.ConcentricRingsFinder": {
  "data": {
   "shadows": "pyfoamalgo.ConcentricRingsFinder"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_azimuthal_integ.TestAzimuthalIntegrationMisc": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pyfoamalgo.tests.test_azimuthal_integ.unittest"
   ]
  },
  "type": "class"
 },
 "pyfoamalgo.tests.test_azimuthal_integ.TestAzimuthalIntegrationMisc.testComputeQ": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_azimuthal_integ.TestAzimuthalIntegrationMisc.testEnergyToWavelength": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pyfoamalgo.energy2wavelength"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_azimuthal_integ.TestAzimuthalIntegrator": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "pyfoamalgo.tests.test_azimuthal_integ.TestAzimuthalIntegrator.testIntegrate1D": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.arange",
    "numpy.float32",
    "numpy.int16",
    "numpy.testing.assert_array_equal",
    "numpy.tile",
    "numpy.uint16",
    "pyfoamalgo.AzimuthalIntegrator",
    "pyfoamalgo.tests.test_azimuthal_integ.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_azimuthal_integ.TestConcentricRingsFinder": {
  "data": {
   "lineno": 60
  },
  "type": "class"
 },
 "pyfoamalgo.tests.test_azimuthal_integ.TestConcentricRingsFinder.testRingDetection": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.int16",
    "numpy.uint16",
    "pyfoamalgo.ConcentricRingsFinder",
    "pyfoamalgo.tests.test_azimuthal_integ.pytest"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_azimuthal_integ.compute_q": {
  "data": {
   "shadows": "pyfoamalgo.compute_q"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_azimuthal_integ.energy2wavelength": {
  "data": {
   "shadows": "pyfoamalgo.energy2wavelength"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_azimuthal_integ.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_azimuthal_integ.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_azimuthal_integ.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_computer_vision": {
  "data": {},
  "type": "module"
 },
 "pyfoamalgo.tests.test_computer_vision.TestEdgeDetect": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "pyfoamalgo.tests.test_computer_vision.unittest"
   ]
  },
  "type": "class"
 },
 "pyfoamalgo.tests.test_computer_vision.TestEdgeDetect.testGeneral": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.ones",
    "pyfoamalgo.edge_detect"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_computer_vision.TestFourierTransform": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pyfoamalgo.tests.test_computer_vision.unittest"
   ]
  },
  "type": "class"
 },
 "pyfoamalgo.tests.test_computer_vision.TestFourierTransform.testGeneral": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.ones",
    "pyfoamalgo.fourier_transform_2d"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_computer_vision.edge_detect": {
  "data": {
   "shadows": "pyfoamalgo.edge_detect"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_computer_vision.fourier_transform_2d": {
  "data": {
   "shadows": "pyfoamalgo.fourier_transform_2d"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_computer_vision.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_computer_vision.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_data_structures": {
  "data": {},
  "type": "module"
 },
 "pyfoamalgo.tests.test_data_structures.OneWayAccuPairSequence": {
  "data": {
   "shadows": "pyfoamalgo.OneWayAccuPairSequence"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_data_structures.OrderedSet": {
  "data": {
   "shadows": "pyfoamalgo.OrderedSet"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_data_structures.SimplePairSequence": {
  "data": {
   "shadows": "pyfoamalgo.SimplePairSequence"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_data_structures.SimpleSequence": {
  "data": {
   "shadows": "pyfoamalgo.SimpleSequence"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_data_structures.SimpleVectorSequence": {
  "data": {
   "shadows": "pyfoamalgo.SimpleVectorSequence"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_data_structures.Stack": {
  "data": {
   "shadows": "pyfoamalgo.Stack"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_data_structures.TestDataStructures": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pyfoamalgo.tests.test_data_structures.unittest"
   ]
  },
  "type": "class"
 },
 "pyfoamalgo.tests.test_data_structures.TestDataStructures.testOrderedSet": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "list",
    "pyfoamalgo.OrderedSet",
    "repr",
    "set"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_data_structures.TestDataStructures.testStack": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "len",
    "pyfoamalgo.Stack"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_data_structures.TestSequenceData": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "pyfoamalgo.tests.test_data_structures.unittest"
   ]
  },
  "type": "class"
 },
 "pyfoamalgo.tests.test_data_structures.TestSequenceData.testOneWayAccuPairSequence": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "ValueError",
    "len",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "pyfoamalgo.OneWayAccuPairSequence",
    "pyfoamalgo.OneWayAccuPairSequence.from_array",
    "pyfoamalgo.data_structures._StatDataItem",
    "range"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_data_structures.TestSequenceData.testOneWayAccuPairSequence2": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "len",
    "pyfoamalgo.OneWayAccuPairSequence",
    "range"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_data_structures.TestSequenceData.testSimplePairSequence": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "len",
    "numpy.testing.assert_array_almost_equal",
    "pyfoamalgo.SimplePairSequence",
    "pyfoamalgo.SimplePairSequence.from_array",
    "range"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_data_structures.TestSequenceData.testSimpleSequence": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "numpy.testing.assert_array_almost_equal",
    "pyfoamalgo.SimpleSequence",
    "pyfoamalgo.SimpleSequence.from_array",
    "range"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_data_structures.TestSequenceData.testSimpleVectorSequence": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "ValueError",
    "len",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "pyfoamalgo.SimpleVectorSequence",
    "pyfoamalgo.SimpleVectorSequence.from_array",
    "range"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_data_structures._StatDataItem": {
  "data": {
   "shadows": "pyfoamalgo.data_structures._StatDataItem"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_data_structures.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_data_structures.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_helpers": {
  "data": {},
  "type": "module"
 },
 "pyfoamalgo.tests.test_helpers.TestGeometry": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "pyfoamalgo.tests.test_helpers.unittest"
   ]
  },
  "type": "class"
 },
 "pyfoamalgo.tests.test_helpers.TestGeometry.test_interaction": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "pyfoamalgo.intersection"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_helpers.intersection": {
  "data": {
   "shadows": "pyfoamalgo.intersection"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_helpers.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_imageproc": {
  "data": {},
  "type": "module"
 },
 "pyfoamalgo.tests.test_imageproc.TestImageProc": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pyfoamalgo.tests.test_imageproc.unittest"
   ]
  },
  "type": "class"
 },
 "pyfoamalgo.tests.test_imageproc.TestImageProc.testCorrectImageData": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.nan",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "pyfoamalgo.correct_image_data"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_imageproc.TestImageProc.testMovingAverage": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "pyfoamalgo.movingAvgImageData"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_imageproc.TestImageProc.testMovingAverageWithNan": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.nan",
    "numpy.testing.assert_array_equal",
    "pyfoamalgo.movingAvgImageData"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_imageproc.TestImageProc.testNanmeanImageData": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "RuntimeWarning",
    "TypeError",
    "ValueError",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.inf",
    "numpy.nan",
    "numpy.nanmean",
    "numpy.ones",
    "numpy.random.randn",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.warnings.catch_warnings",
    "numpy.warnings.simplefilter",
    "pyfoamalgo.nanmean_image_data"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_imageproc.TestMaskImageData": {
  "data": {
   "lineno": 268
  },
  "type": "class"
 },
 "pyfoamalgo.tests.test_imageproc.TestMaskImageData.testMaskImageData": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bool",
    "int",
    "numpy.array",
    "numpy.bool",
    "numpy.float32",
    "numpy.nan",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "pyfoamalgo.mask_image_data",
    "pyfoamalgo.tests.test_imageproc.pytest"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_imageproc.TestMaskImageData.testMaskImageDataWithOutput": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bool",
    "float",
    "numpy.array",
    "numpy.bool",
    "numpy.float32",
    "numpy.nan",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "pyfoamalgo.mask_image_data",
    "pyfoamalgo.tests.test_imageproc.pytest"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_imageproc.correct_image_data": {
  "data": {
   "shadows": "pyfoamalgo.correct_image_data"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_imageproc.mask_image_data": {
  "data": {
   "shadows": "pyfoamalgo.mask_image_data"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_imageproc.movingAvgImageData": {
  "data": {
   "shadows": "pyfoamalgo.movingAvgImageData"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_imageproc.nanmean_image_data": {
  "data": {
   "shadows": "pyfoamalgo.nanmean_image_data"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_imageproc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_imageproc.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_imageproc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_miscellaneous": {
  "data": {},
  "type": "module"
 },
 "pyfoamalgo.tests.test_miscellaneous.TestMiscellaneous": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "pyfoamalgo.tests.test_miscellaneous.unittest"
   ]
  },
  "type": "class"
 },
 "pyfoamalgo.tests.test_miscellaneous.TestMiscellaneous.testNormalizeAuc": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.array_equal",
    "numpy.inf",
    "pyfoamalgo.normalize_auc"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_miscellaneous.normalize_auc": {
  "data": {
   "shadows": "pyfoamalgo.normalize_auc"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_miscellaneous.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_miscellaneous.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_sampling": {
  "data": {},
  "type": "module"
 },
 "pyfoamalgo.tests.test_sampling.TestSampling": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "pyfoamalgo.tests.test_sampling.unittest"
   ]
  },
  "type": "class"
 },
 "pyfoamalgo.tests.test_sampling.TestSampling.test_downsample": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "numpy.array_equal",
    "pyfoamalgo.down_sample"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_sampling.TestSampling.test_slicecurve": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "numpy.inf",
    "numpy.testing.assert_array_equal",
    "pyfoamalgo.slice_curve",
    "pyfoamalgo.tests.test_sampling.math"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_sampling.TestSampling.test_upsample": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "numpy.array_equal",
    "pyfoamalgo.up_sample"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_sampling.down_sample": {
  "data": {
   "shadows": "pyfoamalgo.down_sample"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_sampling.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_sampling.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_sampling.slice_curve": {
  "data": {
   "shadows": "pyfoamalgo.slice_curve"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_sampling.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_sampling.up_sample": {
  "data": {
   "shadows": "pyfoamalgo.up_sample"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_spectrum": {
  "data": {},
  "type": "module"
 },
 "pyfoamalgo.tests.test_spectrum.TestSpectrum": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "pyfoamalgo.tests.test_spectrum.TestSpectrum.testComputeSpectrum1D": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.full",
    "numpy.nan",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "pyfoamalgo.spectrum.compute_spectrum_1d",
    "pyfoamalgo.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_spectrum.compute_spectrum_1d": {
  "data": {
   "shadows": "pyfoamalgo.spectrum.compute_spectrum_1d"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_spectrum.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_spectrum.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_statistics": {
  "data": {},
  "type": "module"
 },
 "pyfoamalgo.tests.test_statistics.TestStatistics": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "pyfoamalgo.tests.test_statistics.TestStatistics._assert_array_almost_equal": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_statistics.TestStatistics.testComputeStatistics": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "RuntimeWarning",
    "all",
    "numpy.array",
    "numpy.empty",
    "numpy.float32",
    "numpy.isnan",
    "numpy.nan",
    "numpy.warnings.catch_warnings",
    "numpy.warnings.simplefilter",
    "pyfoamalgo.statistics.compute_statistics"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_statistics.TestStatistics.testCppStatistics": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "RuntimeWarning",
    "f_cpp",
    "f_py",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.nan",
    "numpy.nanmean",
    "numpy.nansum",
    "numpy.ones",
    "numpy.warnings.catch_warnings",
    "numpy.warnings.simplefilter",
    "pyfoamalgo.statistics.nanmean",
    "pyfoamalgo.statistics.nansum",
    "pyfoamalgo.tests.test_statistics.pytest"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_statistics.TestStatistics.testFindActualRange": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.inf",
    "pyfoamalgo.statistics._get_outer_edges",
    "pyfoamalgo.tests.test_statistics.math"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_statistics.TestStatistics.testHistWithStats": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.float32",
    "numpy.inf",
    "numpy.isnan",
    "numpy.mean",
    "numpy.median",
    "numpy.std",
    "numpy.testing.assert_array_equal",
    "pyfoamalgo.statistics.hist_with_stats",
    "pyfoamalgo.tests.test_statistics.pytest"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_statistics.TestStatistics.testNanhistWithStats": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.float32",
    "numpy.inf",
    "numpy.isnan",
    "numpy.mean",
    "numpy.median",
    "numpy.nan",
    "numpy.std",
    "numpy.testing.assert_array_equal",
    "pyfoamalgo.statistics.nanhist_with_stats",
    "pyfoamalgo.tests.test_statistics.pytest"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_statistics.TestStatistics.testQuickMinMax": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.float32",
    "numpy.nan",
    "numpy.ones",
    "pyfoamalgo.statistics.quick_min_max",
    "pyfoamalgo.tests.test_statistics.pytest"
   ]
  },
  "type": "function"
 },
 "pyfoamalgo.tests.test_statistics._get_outer_edges": {
  "data": {
   "shadows": "pyfoamalgo.statistics._get_outer_edges"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_statistics.compute_statistics": {
  "data": {
   "shadows": "pyfoamalgo.statistics.compute_statistics"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_statistics.hist_with_stats": {
  "data": {
   "shadows": "pyfoamalgo.statistics.hist_with_stats"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_statistics.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_statistics.nanhist_with_stats": {
  "data": {
   "shadows": "pyfoamalgo.statistics.nanhist_with_stats"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_statistics.nanmean": {
  "data": {
   "shadows": "pyfoamalgo.statistics.nanmean"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_statistics.nansum": {
  "data": {
   "shadows": "pyfoamalgo.statistics.nansum"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_statistics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_statistics.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyfoamalgo.tests.test_statistics.quick_min_max": {
  "data": {
   "shadows": "pyfoamalgo.statistics.quick_min_max"
  },
  "type": "import"
 }
}