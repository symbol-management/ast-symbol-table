{
 "pyfoamalgo": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyfoamalgo.azimuthal_integration": {
  "lineno": null,
  "symbols_in_volume": [
   "scipy.constants.c",
   "scipy.constants.e",
   "scipy.constants.h"
  ],
  "type": "module"
 },
 "pyfoamalgo.azimuthal_integration.compute_q": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.pi",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "pyfoamalgo.azimuthal_integration.energy2wavelength": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.computer_vision": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyfoamalgo.computer_vision.edge_detect": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.copy",
   "numpy.uint8",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "pyfoamalgo.computer_vision.fourier_transform_2d": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.copy",
   "numpy.log10",
   "scipy.fft.fft2",
   "scipy.fft.fftshift"
  ],
  "type": "function"
 },
 "pyfoamalgo.data_structures": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "pyfoamalgo.data_structures.OneWayAccuPairSequence": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyfoamalgo.data_structures.OneWayAccuPairSequence.__getitem__": {
  "lineno": 337,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.OneWayAccuPairSequence.__init__": {
  "lineno": 313,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.uint64",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pyfoamalgo.data_structures.OneWayAccuPairSequence.append": {
  "lineno": 363,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "pyfoamalgo.data_structures.OneWayAccuPairSequence.append_dry": {
  "lineno": 427,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.OneWayAccuPairSequence.data": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.OneWayAccuPairSequence.extend": {
  "lineno": 438,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.OneWayAccuPairSequence.from_array": {
  "lineno": 455,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.OneWayAccuPairSequence.reset": {
  "lineno": 443,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.OrderedSet": {
  "lineno": 53,
  "symbols_in_volume": [
   "collections.abc.MutableSet"
  ],
  "type": "class"
 },
 "pyfoamalgo.data_structures.OrderedSet.__contains__": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.OrderedSet.__init__": {
  "lineno": 54,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "pyfoamalgo.data_structures.OrderedSet.__iter__": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.OrderedSet.__len__": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.OrderedSet.__repr__": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.OrderedSet.add": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.OrderedSet.discard": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimplePairSequence": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyfoamalgo.data_structures.SimplePairSequence.__getitem__": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimplePairSequence.__init__": {
  "lineno": 244,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimplePairSequence.append": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimplePairSequence.data": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimplePairSequence.extend": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimplePairSequence.from_array": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimplePairSequence.reset": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimpleSequence": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyfoamalgo.data_structures.SimpleSequence.__getitem__": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimpleSequence.__init__": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimpleSequence.append": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimpleSequence.data": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimpleSequence.extend": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimpleSequence.from_array": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimpleSequence.reset": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimpleVectorSequence": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyfoamalgo.data_structures.SimpleVectorSequence.__getitem__": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimpleVectorSequence.__init__": {
  "lineno": 180,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimpleVectorSequence.append": {
  "lineno": 199,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimpleVectorSequence.data": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimpleVectorSequence.extend": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimpleVectorSequence.from_array": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimpleVectorSequence.reset": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.SimpleVectorSequence.size": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.Stack": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyfoamalgo.data_structures.Stack.__init__": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.Stack.__len__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.Stack.empty": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.Stack.pop": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.Stack.push": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures.Stack.top": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures._AbstractSequence": {
  "lineno": 88,
  "symbols_in_volume": [
   "collections.abc.Sequence"
  ],
  "type": "class"
 },
 "pyfoamalgo.data_structures._AbstractSequence.__init__": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures._AbstractSequence.__len__": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures._AbstractSequence.append": {
  "lineno": 115,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "pyfoamalgo.data_structures._AbstractSequence.data": {
  "lineno": 105,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "pyfoamalgo.data_structures._AbstractSequence.extend": {
  "lineno": 120,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "pyfoamalgo.data_structures._AbstractSequence.from_array": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.data_structures._AbstractSequence.reset": {
  "lineno": 110,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "pyfoamalgo.geometry": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.float32"
  ],
  "type": "module"
 },
 "pyfoamalgo.geometry.AGIPD_1MGeometry": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyfoamalgo.geometry.AGIPD_1MGeometry.from_crystfel_geom": {
  "lineno": 194,
  "symbols_in_volume": [
   "cfelpyutils.crystfel_utils.load_crystfel_geometry",
   "extra_geom.detectors.GeometryFragment.from_panel_dict"
  ],
  "type": "function"
 },
 "pyfoamalgo.geometry.DSSC_1MGeometry": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyfoamalgo.geometry.DSSC_1MGeometry.from_h5_file_and_quad_positions": {
  "lineno": 120,
  "symbols_in_volume": [
   "h5py.File",
   "itertools.product",
   "numpy.array",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pyfoamalgo.geometry.EPix100Geometry": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyfoamalgo.geometry.EPix100Geometry.mask_module_py": {
  "lineno": 303,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pyfoamalgo.geometry.JungFrauGeometry": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyfoamalgo.geometry.JungFrauGeometry.from_crystfel_geom": {
  "lineno": 284,
  "symbols_in_volume": [
   "cfelpyutils.crystfel_utils.load_crystfel_geometry",
   "extra_geom.detectors.GeometryFragment.from_panel_dict"
  ],
  "type": "function"
 },
 "pyfoamalgo.geometry.LPD_1MGeometry": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyfoamalgo.geometry.LPD_1MGeometry.from_h5_file_and_quad_positions": {
  "lineno": 161,
  "symbols_in_volume": [
   "h5py.File",
   "itertools.product",
   "numpy.array",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pyfoamalgo.geometry._1MGeometryPyMixin": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyfoamalgo.geometry._1MGeometryPyMixin.dismantle_all_modules": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.geometry._1MGeometryPyMixin.output_array_for_dismantle_fast": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.full",
   "numpy.nan"
  ],
  "type": "function"
 },
 "pyfoamalgo.geometry._1MGeometryPyMixin.output_array_for_position_fast": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.full",
   "numpy.nan"
  ],
  "type": "function"
 },
 "pyfoamalgo.geometry._1MGeometryPyMixin.position_all_modules": {
  "lineno": 73,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pyfoamalgo.geometry._GeometryPyMixin": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyfoamalgo.geometry._GeometryPyMixin.dismantle_all_modules": {
  "lineno": 252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.geometry._GeometryPyMixin.mask_module_py": {
  "lineno": 262,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pyfoamalgo.geometry._GeometryPyMixin.output_array_for_dismantle_fast": {
  "lineno": 245,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.full",
   "numpy.nan"
  ],
  "type": "function"
 },
 "pyfoamalgo.geometry._GeometryPyMixin.output_array_for_position_fast": {
  "lineno": 212,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.full",
   "numpy.nan"
  ],
  "type": "function"
 },
 "pyfoamalgo.geometry._GeometryPyMixin.position_all_modules": {
  "lineno": 222,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pyfoamalgo.geometry.load_geometry": {
  "lineno": 314,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.geometry.maybe_mask_asic_edges": {
  "lineno": 374,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.geometry.module_grid_shape": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.geometry.module_indices": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.geometry.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.uint16",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "module"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry.TestAGIPD_1MGeometry": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry.TestAGIPD_1MGeometry.setup_class": {
  "lineno": 150,
  "symbols_in_volume": [
   "extra_geom.AGIPD_1MGeometry.from_crystfel_geom",
   "os.path.join",
   "pyfoamalgo.geometry.AGIPD_1MGeometry",
   "pyfoamalgo.geometry.AGIPD_1MGeometry.from_crystfel_geom",
   "pyfoamalgo.geometry.AGIPD_1MGeometry.module_shape",
   "pyfoamalgo.geometry.AGIPD_1MGeometry.n_modules",
   "pyfoamalgo.geometry.AGIPD_1MGeometry.tile_shape"
  ],
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry.TestDSSC_1MGeometry": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry.TestDSSC_1MGeometry.setup_class": {
  "lineno": 106,
  "symbols_in_volume": [
   "extra_geom.DSSC_1MGeometry.from_h5_file_and_quad_positions",
   "os.path.join",
   "pyfoamalgo.geometry.DSSC_1MGeometry",
   "pyfoamalgo.geometry.DSSC_1MGeometry.from_h5_file_and_quad_positions",
   "pyfoamalgo.geometry.DSSC_1MGeometry.module_shape",
   "pyfoamalgo.geometry.DSSC_1MGeometry.n_modules",
   "pyfoamalgo.geometry.DSSC_1MGeometry.tile_shape"
  ],
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry.TestLPD_1MGeometry": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry.TestLPD_1MGeometry.setup_class": {
  "lineno": 128,
  "symbols_in_volume": [
   "extra_geom.LPD_1MGeometry.from_h5_file_and_quad_positions",
   "os.path.join",
   "pyfoamalgo.geometry.LPD_1MGeometry",
   "pyfoamalgo.geometry.LPD_1MGeometry.from_h5_file_and_quad_positions",
   "pyfoamalgo.geometry.LPD_1MGeometry.module_shape",
   "pyfoamalgo.geometry.LPD_1MGeometry.n_modules",
   "pyfoamalgo.geometry.LPD_1MGeometry.tile_shape"
  ],
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry._Test1MGeometryMixin": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry._Test1MGeometryMixin.testAssemblingArray": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry._Test1MGeometryMixin.testAssemblingArrayWithTileEdgeIgnored": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.count_nonzero",
   "numpy.isnan",
   "numpy.ones",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry._Test1MGeometryMixin.testAssemblingNoPulse": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_1M_geometry._Test1MGeometryMixin.testAssemblingVector": {
  "lineno": 67,
  "symbols_in_volume": [
   "extra_data.stacking.StackView",
   "numpy.nan",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_geometry": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.uint16",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "module"
 },
 "pyfoamalgo.geometry.tests.test_geometry.TestEPix100Geometry": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyfoamalgo.geometry.tests.test_geometry.TestEPix100Geometry.setup_class": {
  "lineno": 107,
  "symbols_in_volume": [
   "pyfoamalgo.geometry.load_geometry"
  ],
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_geometry.TestEPix100Geometry.testAssemblingArray": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.int16",
   "numpy.ones",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_geometry.TestEPix100Geometry.testAssemblingVector": {
  "lineno": 134,
  "symbols_in_volume": [
   "extra_data.stacking.StackView",
   "numpy.int16",
   "numpy.nan",
   "numpy.ones",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_geometry.TestEPix100Geometry.testAssemblingWithAsicEdgeIgnored": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.count_nonzero",
   "numpy.int16",
   "numpy.isnan",
   "numpy.ones",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_geometry.TestEPix100Geometry.testMaskModule": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.copy",
   "numpy.ones",
   "numpy.testing.assert_array_equal",
   "pyfoamalgo.geometry.EPix100Geometry.maskModule",
   "pyfoamalgo.geometry.EPix100Geometry.mask_module_py"
  ],
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_geometry.TestJungFrauGeometry": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyfoamalgo.geometry.tests.test_geometry.TestJungFrauGeometry.setup_class": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.array",
   "os.path.expanduser",
   "os.path.join",
   "pyfoamalgo.geometry.JungFrauGeometry",
   "pyfoamalgo.geometry.load_geometry"
  ],
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_geometry.TestJungFrauGeometry.testAssemblingArray": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.ones",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_geometry.TestJungFrauGeometry.testAssemblingArrayWithAsicEdgeIgnored": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.count_nonzero",
   "numpy.isnan",
   "numpy.ones",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_geometry.TestJungFrauGeometry.testAssemblingVector": {
  "lineno": 65,
  "symbols_in_volume": [
   "extra_data.stacking.StackView",
   "numpy.float64",
   "numpy.nan",
   "numpy.ones",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyfoamalgo.geometry.tests.test_geometry.TestJungFrauGeometry.testMaskModule": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.copy",
   "numpy.ones",
   "numpy.testing.assert_array_equal",
   "pyfoamalgo.geometry.JungFrauGeometry.maskModule",
   "pyfoamalgo.geometry.JungFrauGeometry.mask_module_py"
  ],
  "type": "function"
 },
 "pyfoamalgo.imageproc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyfoamalgo.imageproc.correct_image_data": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.imageproc.mask_image_data": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.bool"
  ],
  "type": "function"
 },
 "pyfoamalgo.imageproc.nanmean_image_data": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.lib": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyfoamalgo.miscellaneous": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyfoamalgo.miscellaneous.normalize_auc": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.copy",
   "numpy.trapz"
  ],
  "type": "function"
 },
 "pyfoamalgo.sampling": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyfoamalgo.sampling.down_sample": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pyfoamalgo.sampling.slice_curve": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.logical_and",
   "numpy.where"
  ],
  "type": "function"
 },
 "pyfoamalgo.sampling.up_sample": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.ceil",
   "numpy.ndarray",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pyfoamalgo.spectrum": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyfoamalgo.spectrum.compute_spectrum_1d": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.full",
   "numpy.nan",
   "numpy.nan_to_num",
   "scipy.stats.binned_statistic"
  ],
  "type": "function"
 },
 "pyfoamalgo.statistics": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64"
  ],
  "type": "module"
 },
 "pyfoamalgo.statistics._get_outer_edges": {
  "lineno": 144,
  "symbols_in_volume": [
   "math.inf",
   "numpy.isfinite",
   "numpy.max",
   "numpy.min"
  ],
  "type": "function"
 },
 "pyfoamalgo.statistics.compute_statistics": {
  "lineno": 195,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.median",
   "numpy.nan",
   "numpy.std"
  ],
  "type": "function"
 },
 "pyfoamalgo.statistics.hist_with_stats": {
  "lineno": 233,
  "symbols_in_volume": [
   "numpy.histogram"
  ],
  "type": "function"
 },
 "pyfoamalgo.statistics.nanhist_with_stats": {
  "lineno": 206,
  "symbols_in_volume": [
   "numpy.histogram",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "pyfoamalgo.statistics.nanmean": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.nanmean"
  ],
  "type": "function"
 },
 "pyfoamalgo.statistics.nanstd": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.nanmean",
   "numpy.nanstd"
  ],
  "type": "function"
 },
 "pyfoamalgo.statistics.nansum": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.nansum"
  ],
  "type": "function"
 },
 "pyfoamalgo.statistics.nanvar": {
  "lineno": 124,
  "symbols_in_volume": [
   "numpy.nanmean",
   "numpy.nanvar"
  ],
  "type": "function"
 },
 "pyfoamalgo.statistics.quick_min_max": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.nanmax",
   "numpy.nanmin",
   "numpy.nanquantile",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pyfoamalgo.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyfoamalgo.tests.test_azimuthal_integ": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyfoamalgo.tests.test_azimuthal_integ.TestAzimuthalIntegrationMisc": {
  "lineno": 11,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pyfoamalgo.tests.test_azimuthal_integ.TestAzimuthalIntegrationMisc.testComputeQ": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfoamalgo.tests.test_azimuthal_integ.TestAzimuthalIntegrationMisc.testEnergyToWavelength": {
  "lineno": 12,
  "symbols_in_volume": [
   "pyfoamalgo.energy2wavelength"
  ],
  "type": "function"
 },
 "pyfoamalgo.tests.test_azimuthal_integ.TestAzimuthalIntegrator": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyfoamalgo.tests.test_azimuthal_integ.TestAzimuthalIntegrator.testIntegrate1D": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.arange",
   "numpy.float32",
   "numpy.int16",
   "numpy.testing.assert_array_equal",
   "numpy.tile",
   "numpy.uint16",
   "pyfoamalgo.AzimuthalIntegrator",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyfoamalgo.tests.test_azimuthal_integ.TestConcentricRingsFinder": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyfoamalgo.tests.test_azimuthal_integ.TestConcentricRingsFinder.testRingDetection": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.int16",
   "numpy.uint16",
   "pyfoamalgo.ConcentricRingsFinder",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyfoamalgo.tests.test_computer_vision": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyfoamalgo.tests.test_computer_vision.TestEdgeDetect": {
  "lineno": 10,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pyfoamalgo.tests.test_computer_vision.TestEdgeDetect.testGeneral": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.ones",
   "pyfoamalgo.edge_detect"
  ],
  "type": "function"
 },
 "pyfoamalgo.tests.test_computer_vision.TestFourierTransform": {
  "lineno": 16,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pyfoamalgo.tests.test_computer_vision.TestFourierTransform.testGeneral": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.ones",
   "pyfoamalgo.fourier_transform_2d"
  ],
  "type": "function"
 },
 "pyfoamalgo.tests.test_data_structures": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyfoamalgo.tests.test_data_structures.TestDataStructures": {
  "lineno": 12,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pyfoamalgo.tests.test_data_structures.TestDataStructures.testOrderedSet": {
  "lineno": 32,
  "symbols_in_volume": [
   "pyfoamalgo.OrderedSet"
  ],
  "type": "function"
 },
 "pyfoamalgo.tests.test_data_structures.TestDataStructures.testStack": {
  "lineno": 13,
  "symbols_in_volume": [
   "pyfoamalgo.Stack"
  ],
  "type": "function"
 },
 "pyfoamalgo.tests.test_data_structures.TestSequenceData": {
  "lineno": 77,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pyfoamalgo.tests.test_data_structures.TestSequenceData.testOneWayAccuPairSequence": {
  "lineno": 263,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal",
   "pyfoamalgo.OneWayAccuPairSequence",
   "pyfoamalgo.OneWayAccuPairSequence.from_array",
   "pyfoamalgo.data_structures._StatDataItem"
  ],
  "type": "function"
 },
 "pyfoamalgo.tests.test_data_structures.TestSequenceData.testOneWayAccuPairSequence2": {
  "lineno": 385,
  "symbols_in_volume": [
   "pyfoamalgo.OneWayAccuPairSequence"
  ],
  "type": "function"
 },
 "pyfoamalgo.tests.test_data_structures.TestSequenceData.testSimplePairSequence": {
  "lineno": 200,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "pyfoamalgo.SimplePairSequence",
   "pyfoamalgo.SimplePairSequence.from_array"
  ],
  "type": "function"
 },
 "pyfoamalgo.tests.test_data_structures.TestSequenceData.testSimpleSequence": {
  "lineno": 78,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal",
   "pyfoamalgo.SimpleSequence",
   "pyfoamalgo.SimpleSequence.from_array"
  ],
  "type": "function"
 },
 "pyfoamalgo.tests.test_data_structures.TestSequenceData.testSimpleVectorSequence": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_almost_equal",
   "pyfoamalgo.SimpleVectorSequence",
   "pyfoamalgo.SimpleVectorSequence.from_array"
  ],
  "type": "function"
 },
 "pyfoamalgo.tests.test_helpers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyfoamalgo.tests.test_helpers.TestGeometry": {
  "lineno": 6,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pyfoamalgo.tests.test_helpers.TestGeometry.test_interaction": {
  "lineno": 7,
  "symbols_in_volume": [
   "pyfoamalgo.intersection"
  ],
  "type": "function"
 },
 "pyfoamalgo.tests.test_imageproc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyfoamalgo.tests.test_imageproc.TestImageProc": {
  "lineno": 12,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pyfoamalgo.tests.test_imageproc.TestImageProc.testCorrectImageData": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.nan",
   "numpy.ones",
   "numpy.testing.assert_array_equal",
   "pyfoamalgo.correct_image_data"
  ],
  "type": "function"
 },
 "pyfoamalgo.tests.test_imageproc.TestImageProc.testMovingAverage": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.ones",
   "numpy.testing.assert_array_equal",
   "pyfoamalgo.movingAvgImageData"
  ],
  "type": "function"
 },
 "pyfoamalgo.tests.test_imageproc.TestImageProc.testMovingAverageWithNan": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.nan",
   "numpy.testing.assert_array_equal",
   "pyfoamalgo.movingAvgImageData"
  ],
  "type": "function"
 },
 "pyfoamalgo.tests.test_imageproc.TestImageProc.testNanmeanImageData": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.inf",
   "numpy.nan",
   "numpy.nanmean",
   "numpy.ones",
   "numpy.random.randn",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal",
   "numpy.warnings.catch_warnings",
   "numpy.warnings.simplefilter",
   "pyfoamalgo.nanmean_image_data"
  ],
  "type": "function"
 },
 "pyfoamalgo.tests.test_imageproc.TestMaskImageData": {
  "lineno": 268,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyfoamalgo.tests.test_imageproc.TestMaskImageData.testMaskImageData": {
  "lineno": 269,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool",
   "numpy.float32",
   "numpy.nan",
   "numpy.ones",
   "numpy.testing.assert_array_equal",
   "pyfoamalgo.mask_image_data",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyfoamalgo.tests.test_imageproc.TestMaskImageData.testMaskImageDataWithOutput": {
  "lineno": 367,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool",
   "numpy.float32",
   "numpy.nan",
   "numpy.ones",
   "numpy.testing.assert_array_equal",
   "numpy.zeros",
   "pyfoamalgo.mask_image_data",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyfoamalgo.tests.test_miscellaneous": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyfoamalgo.tests.test_miscellaneous.TestMiscellaneous": {
  "lineno": 10,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pyfoamalgo.tests.test_miscellaneous.TestMiscellaneous.testNormalizeAuc": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equal",
   "numpy.inf",
   "pyfoamalgo.normalize_auc"
  ],
  "type": "function"
 },
 "pyfoamalgo.tests.test_sampling": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyfoamalgo.tests.test_sampling.TestSampling": {
  "lineno": 9,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pyfoamalgo.tests.test_sampling.TestSampling.test_downsample": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.array_equal",
   "pyfoamalgo.down_sample"
  ],
  "type": "function"
 },
 "pyfoamalgo.tests.test_sampling.TestSampling.test_slicecurve": {
  "lineno": 10,
  "symbols_in_volume": [
   "math.inf",
   "numpy.array",
   "numpy.array_equal",
   "numpy.inf",
   "numpy.testing.assert_array_equal",
   "pyfoamalgo.slice_curve"
  ],
  "type": "function"
 },
 "pyfoamalgo.tests.test_sampling.TestSampling.test_upsample": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.array_equal",
   "pyfoamalgo.up_sample"
  ],
  "type": "function"
 },
 "pyfoamalgo.tests.test_spectrum": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyfoamalgo.tests.test_spectrum.TestSpectrum": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyfoamalgo.tests.test_spectrum.TestSpectrum.testComputeSpectrum1D": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.full",
   "numpy.nan",
   "numpy.ones",
   "numpy.testing.assert_array_almost_equal",
   "numpy.testing.assert_array_equal",
   "pyfoamalgo.spectrum.compute_spectrum_1d",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyfoamalgo.tests.test_statistics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyfoamalgo.tests.test_statistics.TestStatistics": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyfoamalgo.tests.test_statistics.TestStatistics._assert_array_almost_equal": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "pyfoamalgo.tests.test_statistics.TestStatistics.testComputeStatistics": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "numpy.float32",
   "numpy.isnan",
   "numpy.nan",
   "numpy.warnings.catch_warnings",
   "numpy.warnings.simplefilter",
   "pyfoamalgo.statistics.compute_statistics"
  ],
  "type": "function"
 },
 "pyfoamalgo.tests.test_statistics.TestStatistics.testCppStatistics": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.nan",
   "numpy.nanmean",
   "numpy.nansum",
   "numpy.ones",
   "numpy.warnings.catch_warnings",
   "numpy.warnings.simplefilter",
   "pyfoamalgo.statistics.nanmean",
   "pyfoamalgo.statistics.nansum",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyfoamalgo.tests.test_statistics.TestStatistics.testFindActualRange": {
  "lineno": 146,
  "symbols_in_volume": [
   "math.inf",
   "numpy.array",
   "numpy.inf",
   "pyfoamalgo.statistics._get_outer_edges"
  ],
  "type": "function"
 },
 "pyfoamalgo.tests.test_statistics.TestStatistics.testHistWithStats": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.inf",
   "numpy.isnan",
   "numpy.mean",
   "numpy.median",
   "numpy.std",
   "numpy.testing.assert_array_equal",
   "pyfoamalgo.statistics.hist_with_stats",
   "pytest.approx",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyfoamalgo.tests.test_statistics.TestStatistics.testNanhistWithStats": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.inf",
   "numpy.isnan",
   "numpy.mean",
   "numpy.median",
   "numpy.nan",
   "numpy.std",
   "numpy.testing.assert_array_equal",
   "pyfoamalgo.statistics.nanhist_with_stats",
   "pytest.approx",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyfoamalgo.tests.test_statistics.TestStatistics.testQuickMinMax": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.nan",
   "numpy.ones",
   "pyfoamalgo.statistics.quick_min_max",
   "pytest.raises"
  ],
  "type": "function"
 }
}