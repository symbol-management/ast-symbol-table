{
 "calliope": {
  "data": {},
  "type": "module"
 },
 "calliope.__author__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "calliope.__copyright__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "calliope.__title__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "calliope._version": {
  "data": {},
  "type": "module"
 },
 "calliope._version.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "calliope.analysis": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "calliope.analysis.logging"
   ]
  },
  "type": "module"
 },
 "calliope.analysis.ListedColormap": {
  "data": {
   "shadows": "matplotlib.colors.ListedColormap"
  },
  "type": "import"
 },
 "calliope.analysis.Rectangle": {
  "data": {
   "shadows": "matplotlib.patches.Rectangle"
  },
  "type": "import"
 },
 "calliope.analysis.areas_below_resolution": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "calliope.analysis.au": {
  "data": {
   "shadows": "analysis_utils"
  },
  "type": "import"
 },
 "calliope.analysis.get_delivered_cost": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "dict"
   ]
  },
  "type": "function"
 },
 "calliope.analysis.get_domestic_supply_index": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "calliope.analysis.get_group_share": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "numpy.errstate",
    "numpy.nan",
    "transmission_basenames"
   ]
  },
  "type": "function"
 },
 "calliope.analysis.get_group_share.transmission_basenames": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "calliope.analysis.get_hhi": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "calliope.analysis.get_levelized_cost": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "KeyError",
    "dict",
    "float",
    "int",
    "isinstance",
    "slice",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.analysis.get_swi": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "numpy.log",
    "sum"
   ]
  },
  "type": "function"
 },
 "calliope.analysis.get_unmet_demand_hours": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "dict",
    "len"
   ]
  },
  "type": "function"
 },
 "calliope.analysis.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "calliope.analysis.map_results": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "Exception",
    "list",
    "map_func",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "calliope.analysis.map_results.map_func": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "Exception",
    "func",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "calliope.analysis.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "calliope.analysis.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "calliope.analysis.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "calliope.analysis.plot_carrier_production": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "calliope.analysis.plot_timeseries",
    "dict"
   ]
  },
  "type": "function"
 },
 "calliope.analysis.plot_installed_capacities": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "matplotlib.colors.ListedColormap",
    "matplotlib.patches.Rectangle"
   ]
  },
  "type": "function"
 },
 "calliope.analysis.plot_timeseries": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "getattr",
    "matplotlib.colors.ListedColormap",
    "numpy.timedelta64"
   ]
  },
  "type": "function"
 },
 "calliope.analysis.plot_transmission": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "dict",
    "get_annual_power_transmission",
    "get_edge_capacity",
    "int",
    "len",
    "list",
    "networkx.DiGraph",
    "networkx.from_numpy_matrix",
    "networkx.relabel_nodes",
    "pandas.DataFrame",
    "range",
    "round",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "calliope.analysis.plot_transmission.get_annual_power_transmission": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "KeyError",
    "dict",
    "trans_tech"
   ]
  },
  "type": "function"
 },
 "calliope.analysis.plot_transmission.get_edge_capacity": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "calliope.analysis_utils": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "calliope.analysis_utils.Basemap": {
  "data": {
   "shadows": "mpl_toolkits.basemap.Basemap"
  },
  "type": "import"
 },
 "calliope.analysis_utils.PatchCollection": {
  "data": {
   "shadows": "matplotlib.collections.PatchCollection"
  },
  "type": "import"
 },
 "calliope.analysis_utils.PolygonPatch": {
  "data": {
   "shadows": "descartes.PolygonPatch"
  },
  "type": "import"
 },
 "calliope.analysis_utils._get_query_string": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "calliope.analysis_utils._get_ranges": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "calliope.analysis_utils._get_supply_groups": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "calliope.analysis_utils.itertools"
   ]
  },
  "type": "function"
 },
 "calliope.analysis_utils.add_labels": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "m",
    "matplotlib.pyplot.Text"
   ]
  },
  "type": "function"
 },
 "calliope.analysis_utils.df_locations_table": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "calliope.analysis_utils.flatten",
    "pandas.DataFrame.from_records"
   ]
  },
  "type": "function"
 },
 "calliope.analysis_utils.df_tech_table": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "get_any_option",
    "pandas.DataFrame.from_records"
   ]
  },
  "type": "function"
 },
 "calliope.analysis_utils.df_transmission_matrix": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.np.inf",
    "sorted"
   ]
  },
  "type": "function"
 },
 "calliope.analysis_utils.flatten": {
  "data": {
   "lineno": 464
  },
  "type": "function"
 },
 "calliope.analysis_utils.get_float_formatter_func": {
  "data": {
   "lineno": 353
  },
  "type": "function"
 },
 "calliope.analysis_utils.get_float_formatter_func.float_formatter": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.analysis_utils.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "calliope.analysis_utils.legend_outside_ax": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "KeyError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "calliope.analysis_utils.mdates": {
  "data": {
   "shadows": "matplotlib.dates"
  },
  "type": "import"
 },
 "calliope.analysis_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "calliope.analysis_utils.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "calliope.analysis_utils.nx_pylab": {
  "data": {
   "shadows": "calliope.lib.nx_pylab"
  },
  "type": "import"
 },
 "calliope.analysis_utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "calliope.analysis_utils.plot_graph_on_map": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "KeyError",
    "all",
    "calliope.lib.nx_pylab.draw_networkx_edges",
    "calliope.lib.nx_pylab.draw_networkx_nodes",
    "m",
    "m.drawmapscale",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.get_cmap",
    "mpl_toolkits.basemap.Basemap",
    "networkx.draw_networkx_edge_labels",
    "networkx.draw_networkx_labels"
   ]
  },
  "type": "function"
 },
 "calliope.analysis_utils.plot_shapefile_polys": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "TransformedPolygonPatch",
    "calliope.analysis_utils.shapely",
    "cmap",
    "enumerate",
    "len",
    "list",
    "matplotlib.collections.PatchCollection",
    "matplotlib.pyplot.Normalize",
    "n",
    "set"
   ]
  },
  "type": "function"
 },
 "calliope.analysis_utils.plot_shapefile_polys.TransformedPolygonPatch": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "calliope.analysis_utils.shapely",
    "descartes.PolygonPatch",
    "m"
   ]
  },
  "type": "function"
 },
 "calliope.analysis_utils.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "calliope.analysis_utils.shapely": {
  "data": {
   "shadows": "shapely"
  },
  "type": "import"
 },
 "calliope.analysis_utils.shapely.ops": {
  "data": {
   "shadows": "shapely.ops"
  },
  "type": "import"
 },
 "calliope.analysis_utils.stack_plot": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "calliope.analysis_utils.legend_outside_ax",
    "len",
    "list",
    "matplotlib.dates.DateFormatter",
    "matplotlib.dates.DayLocator",
    "matplotlib.dates.HourLocator",
    "matplotlib.dates.MonthLocator",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.get_cmap",
    "matplotlib.pyplot.setp",
    "numpy.linspace",
    "range",
    "reversed"
   ]
  },
  "type": "function"
 },
 "calliope.analysis_utils.write_latex_table": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "len",
    "open"
   ]
  },
  "type": "function"
 },
 "calliope.cli": {
  "data": {
   "symbols_in_volume": [
    "calliope.cli.click",
    "calliope.cli.logging",
    "calliope.cli.sys",
    "str"
   ]
  },
  "type": "module"
 },
 "calliope.cli._debug": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "calliope.cli._get_version": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "calliope.cli._pdb": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "calliope.cli._profile": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "calliope.cli._profile_filename": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "calliope.cli.cProfile": {
  "data": {
   "shadows": "cProfile"
  },
  "type": "import"
 },
 "calliope.cli.cli": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "calliope.cli._get_version",
    "calliope.cli.click",
    "print"
   ]
  },
  "type": "function"
 },
 "calliope.cli.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "calliope.cli.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "calliope.cli.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "calliope.cli.format_exceptions": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "Exception",
    "calliope.cli.cProfile",
    "calliope.cli.click",
    "calliope.cli.contextlib",
    "calliope.cli.logger",
    "calliope.cli.os",
    "calliope.cli.pdb",
    "calliope.cli.print_end_time",
    "calliope.cli.pstats",
    "calliope.cli.sys",
    "calliope.cli.traceback",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.cli.generate": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "Parallelizer",
    "calliope.cli._debug",
    "calliope.cli._get_version",
    "calliope.cli._pdb",
    "calliope.cli.cli",
    "calliope.cli.click",
    "calliope.cli.format_exceptions",
    "calliope.cli.logging",
    "calliope.cli.pdb",
    "print"
   ]
  },
  "type": "function"
 },
 "calliope.cli.logger": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "calliope.cli.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "calliope.cli.new": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "calliope.cli._debug",
    "calliope.cli._get_version",
    "calliope.cli.cli",
    "calliope.cli.click",
    "calliope.cli.shutil",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.cli.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "calliope.cli.pdb": {
  "data": {
   "shadows": "pdb"
  },
  "type": "import"
 },
 "calliope.cli.print_end_time": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "calliope.cli.datetime",
    "print",
    "round"
   ]
  },
  "type": "function"
 },
 "calliope.cli.pstats": {
  "data": {
   "shadows": "pstats"
  },
  "type": "import"
 },
 "calliope.cli.run": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "calliope.cli._debug",
    "calliope.cli._get_version",
    "calliope.cli._pdb",
    "calliope.cli._profile",
    "calliope.cli._profile_filename",
    "calliope.cli.cli",
    "calliope.cli.click",
    "calliope.cli.datetime",
    "calliope.cli.format_exceptions",
    "calliope.cli.logging",
    "calliope.cli.pdb",
    "calliope.cli.print_end_time",
    "len",
    "print"
   ]
  },
  "type": "function"
 },
 "calliope.cli.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "calliope.cli.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "calliope.cli.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "calliope.constraints": {
  "data": {},
  "type": "module"
 },
 "calliope.constraints.base": {
  "data": {},
  "type": "module"
 },
 "calliope.constraints.base.generate_variables": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "pyomo.core.NegativeReals",
    "pyomo.core.NonNegativeReals",
    "pyomo.core.Reals",
    "pyomo.core.Var"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.get_constraint_param": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.get_cost_param": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "_cost",
    "getattr"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.get_cost_param._cost": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "cost_getter"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.model_constraints": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "pyomo.core.Constraint"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.model_constraints.c_export_balance_rule": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "pyomo.core.Constraint.Skip"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.model_constraints.c_system_balance_rule": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": [
    "get_children",
    "len",
    "pyomo.core.Constraint.NoConstraint",
    "sum"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.model_constraints.get_children": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "get_children",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.model_constraints.get_parents": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_constraints_build": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "pyomo.core.Constraint"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_constraints_build.c_e_cap_rule": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "get_var_constraint"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_constraints_build.c_e_cap_storage_rule": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "pyomo.core.Constraint.Skip"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_constraints_build.c_r2_cap_rule": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "AttributeError",
    "e",
    "get_var_constraint",
    "getattr"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_constraints_build.c_r_area_rule": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "get_var_constraint"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_constraints_build.c_r_cap_rule": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "get_var_constraint"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_constraints_build.c_s_cap_rule": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "get_s_cap",
    "get_var_constraint"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_constraints_build.get_s_cap": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "dict",
    "isinstance",
    "len",
    "min",
    "numpy.inf",
    "numpy.power",
    "range",
    "sum",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_constraints_build.get_var_constraint": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "e",
    "numpy.isinf",
    "pyomo.core.Constraint.NoConstraint"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_constraints_operational": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "pyomo.core.Constraint"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_constraints_operational.c_con_max_rule": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "calliope.constraints.base.get_constraint_param",
    "pyomo.core.Constraint.Skip"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_constraints_operational.c_conversion_plus_prod_max_rule": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "calliope.constraints.base.get_constraint_param",
    "dict",
    "isinstance",
    "sum"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_constraints_operational.c_conversion_plus_prod_min_rule": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "calliope.constraints.base.get_constraint_param",
    "dict",
    "isinstance",
    "pyomo.core.Constraint.NoConstraint",
    "sum"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_constraints_operational.c_export_max_rule": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "calliope.constraints.base.get_constraint_param",
    "pyomo.core.Constraint.Skip"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_constraints_operational.c_prod_max_rule": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "calliope.constraints.base.get_constraint_param",
    "pyomo.core.Constraint.Skip"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_constraints_operational.c_prod_min_rule": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "calliope.constraints.base.get_constraint_param",
    "pyomo.core.Constraint.NoConstraint",
    "pyomo.core.Constraint.Skip"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_constraints_operational.r2_max_rule": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "calliope.constraints.base.get_constraint_param"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_constraints_operational.r_max_upper_rule": {
  "data": {
   "lineno": 550
  },
  "type": "function"
 },
 "calliope.constraints.base.node_constraints_operational.s_max_rule": {
  "data": {
   "lineno": 646
  },
  "type": "function"
 },
 "calliope.constraints.base.node_constraints_transmission": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "pyomo.core.Constraint"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_constraints_transmission.c_trans_rule": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "pyomo.core.Constraint.NoConstraint"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_costs": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "cost_getter",
    "pyomo.core.Constraint"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_costs._check_and_set": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "_cost",
    "_cost_per_distance",
    "e",
    "getattr"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_costs._cost": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "cost_getter"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_costs._cost_per_distance": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "cost_per_distance_getter"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_costs._depreciation_rate": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "depreciation_getter"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_costs.cost_fixed_rule": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "_check_and_set",
    "_cost",
    "_depreciation_rate",
    "sum"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_costs.cost_rule": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_costs.cost_var_rule": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "calliope.constraints.base.get_constraint_param",
    "calliope.constraints.base.get_cost_param",
    "dict",
    "isinstance",
    "pyomo.core.value"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_energy_balance": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "pyomo.core.Constraint"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_energy_balance.conversion_plus_primary_rule": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "calliope.constraints.base.get_constraint_param",
    "dict",
    "isinstance",
    "sum"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_energy_balance.conversion_plus_secondary_in_rule": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "get_conversion_in"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_energy_balance.conversion_plus_secondary_out_rule": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "get_conversion_out"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_energy_balance.conversion_plus_tertiary_in_rule": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "get_conversion_in"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_energy_balance.conversion_plus_tertiary_out_rule": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "get_conversion_out"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_energy_balance.conversion_rule": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "calliope.constraints.base.get_constraint_param"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_energy_balance.get_conversion_in": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "min",
    "sum"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_energy_balance.get_conversion_out": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "min",
    "sum"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_energy_balance.get_e_eff_per_distance": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "KeyError",
    "e"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_energy_balance.storage_rule": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "calliope.constraints.base.get_constraint_param",
    "pyomo.core.value",
    "sum"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_energy_balance.supply_plus_rule": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "calliope.constraints.base.get_constraint_param",
    "pyomo.core.value",
    "sum"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_energy_balance.transmission_rule": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "calliope.constraints.base.get_constraint_param",
    "get_e_eff_per_distance",
    "pyomo.core.Constraint.NoConstraint"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_resource": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "pyomo.core.Constraint"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.node_resource.r_available_rule": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "calliope.constraints.base.get_constraint_param",
    "pyomo.core.value",
    "sum"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "calliope.constraints.base.po": {
  "data": {
   "shadows": "pyomo.core"
  },
  "type": "import"
 },
 "calliope.constraints.base.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "calliope.constraints.objective": {
  "data": {},
  "type": "module"
 },
 "calliope.constraints.objective.objective_cost_minimization": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "pyomo.core.Objective",
    "pyomo.core.Reals",
    "pyomo.core.minimize"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.objective.objective_cost_minimization.obj_rule": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.objective.po": {
  "data": {
   "shadows": "pyomo.core"
  },
  "type": "import"
 },
 "calliope.constraints.optional": {
  "data": {},
  "type": "module"
 },
 "calliope.constraints.optional.group_fraction": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "group_set",
    "pyomo.core.Constraint"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.optional.group_fraction.c_group_fraction_capacity_rule": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "equalizer",
    "sign_fraction",
    "sum",
    "techs_to_consider"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.optional.group_fraction.c_group_fraction_demand_power_peak_rule": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "equalizer",
    "float",
    "sign_fraction",
    "sum"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.optional.group_fraction.c_group_fraction_output_rule": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "equalizer",
    "sign_fraction",
    "sum",
    "techs_to_consider"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.optional.group_fraction.equalizer": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.optional.group_fraction.group_set": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "pyomo.core.Set"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.optional.group_fraction.sign_fraction": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "calliope.constraints.optional.group_fraction.techs_to_consider": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "calliope.constraints.optional.max_r_area_per_loc": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "pyomo.core.Constraint"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.optional.max_r_area_per_loc._get_descendants": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "_get_descendants",
    "list"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.optional.max_r_area_per_loc.c_available_r_area_rule": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "_get_descendants",
    "int",
    "isinstance",
    "pyomo.core.Constraint.Skip",
    "sum"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.optional.po": {
  "data": {
   "shadows": "pyomo.core"
  },
  "type": "import"
 },
 "calliope.constraints.optional.ramping_rate": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "pyomo.core.Constraint"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.optional.ramping_rate._ramping_rule": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pyomo.core.Constraint.NoConstraint"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.optional.ramping_rate.c_ramping_down_rule": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "_ramping_rule"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.optional.ramping_rate.c_ramping_up_rule": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "_ramping_rule"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.planning": {
  "data": {},
  "type": "module"
 },
 "calliope.constraints.planning.node_constraints_build_total": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pyomo.core.Constraint"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.planning.node_constraints_build_total.c_e_cap_total_systemwide_rule": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.isinf",
    "pyomo.core.Constraint.NoConstraint",
    "sum"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.planning.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "calliope.constraints.planning.po": {
  "data": {
   "shadows": "pyomo.core"
  },
  "type": "import"
 },
 "calliope.constraints.planning.system_margin": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pyomo.core.Constraint"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.planning.system_margin.c_system_margin_rule": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "carrier",
    "pyomo.core.Constraint.NoConstraint",
    "sum"
   ]
  },
  "type": "function"
 },
 "calliope.constraints.planning.system_margin.carrier": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "calliope.core": {
  "data": {
   "symbols_in_volume": [
    "calliope.core._formatwarning",
    "calliope.core.warnings"
   ]
  },
  "type": "module"
 },
 "calliope.core.Model": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "calliope.core.Model.__init__": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "numpy.random.seed",
    "super"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model._apply_x_map": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "KeyError",
    "e",
    "list"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model._get_filename": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "IndexError",
    "e",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model._get_option_from_csv": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "calliope.core.os",
    "e",
    "len",
    "pandas.read_csv"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model._get_t_max_demand": {
  "data": {
   "lineno": 1095
  },
  "type": "function"
 },
 "calliope.core.Model._get_time_res_sum": {
  "data": {
   "lineno": 1733,
   "symbols_in_volume": [
    "KeyError",
    "sum"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model._log_time": {
  "data": {
   "lineno": 1396,
   "symbols_in_volume": [
    "calliope.core.logging",
    "calliope.core.time",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model._param_populator": {
  "data": {
   "lineno": 1127,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model._param_populator.getter_constraint": {
  "data": {
   "lineno": 1136
  },
  "type": "function"
 },
 "calliope.core.Model._param_populator.getter_cost": {
  "data": {
   "lineno": 1139
  },
  "type": "function"
 },
 "calliope.core.Model._param_updater": {
  "data": {
   "lineno": 1147,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model._param_updater.getter": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model._read_param_for_tech": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "pandas.DataFrame",
    "slice",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model._save_csv": {
  "data": {
   "lineno": 2096,
   "symbols_in_volume": [
    "calliope.core.os"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model._save_netcdf4": {
  "data": {
   "lineno": 2061,
   "symbols_in_volume": [
    "calliope.core.logging",
    "calliope.core.os"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model._set_t_end": {
  "data": {
   "lineno": 1186,
   "symbols_in_volume": [
    "KeyError",
    "calliope.core.logging",
    "int"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model._solve": {
  "data": {
   "lineno": 1460,
   "symbols_in_volume": [
    "ValueError",
    "e.args"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model._solve_with_output_capture": {
  "data": {
   "lineno": 1452
  },
  "type": "function"
 },
 "calliope.core.Model._validate_param_dataset_consistency": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "calliope.core.warnings",
    "len"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model._validate_param_df": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "calliope.core.warnings",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.add_constraint": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "ValueError",
    "calliope.core.inspect",
    "calliope.core.logging",
    "constraint",
    "e.args"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.check_and_set_export": {
  "data": {
   "lineno": 265
  },
  "type": "function"
 },
 "calliope.core.Model.flush_option_cache": {
  "data": {
   "lineno": 496
  },
  "type": "function"
 },
 "calliope.core.Model.functionality_switch": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.generate_model": {
  "data": {
   "lineno": 1201,
   "symbols_in_volume": [
    "float",
    "getattr",
    "initializer",
    "len",
    "list",
    "pyomo.core.ConcreteModel",
    "pyomo.core.Param",
    "pyomo.core.Set",
    "s_init_initializer",
    "setattr"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.get_c_sum": {
  "data": {
   "lineno": 1630
  },
  "type": "function"
 },
 "calliope.core.Model.get_capacity_factor": {
  "data": {
   "lineno": 1744,
   "symbols_in_volume": [
    "dict",
    "numpy.errstate",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.get_carrier": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.get_color": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "calliope.core.random",
    "r"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.get_costs": {
  "data": {
   "lineno": 1668,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.get_cp_carriers": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "dict",
    "e",
    "isinstance",
    "len",
    "list",
    "set",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.get_distances": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "KeyError",
    "all",
    "getattr",
    "numpy.sqrt",
    "set"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.get_e_cap_net": {
  "data": {
   "lineno": 1645,
   "symbols_in_volume": [
    "pandas.DataFrame.from_dict",
    "pandas.MultiIndex.from_tuples"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.get_eff_ref": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.get_group_members": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "_get",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.get_group_members._get": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "_get",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.get_groups": {
  "data": {
   "lineno": 1885,
   "symbols_in_volume": [
    "ggm",
    "pandas.DataFrame",
    "pandas.Series",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.get_levelized_cost": {
  "data": {
   "lineno": 1705,
   "symbols_in_volume": [
    "dict",
    "numpy.errstate",
    "numpy.inf",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.get_metadata": {
  "data": {
   "lineno": 1769,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.get_name": {
  "data": {
   "lineno": 499
  },
  "type": "function"
 },
 "calliope.core.Model.get_node_parameters": {
  "data": {
   "lineno": 1657,
   "symbols_in_volume": [
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.get_node_variables": {
  "data": {
   "lineno": 1634,
   "symbols_in_volume": [
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.get_option": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.get_parent": {
  "data": {
   "lineno": 559
  },
  "type": "function"
 },
 "calliope.core.Model.get_shares": {
  "data": {
   "lineno": 1905,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.get_summary": {
  "data": {
   "lineno": 1781,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "numpy.divide",
    "numpy.errstate",
    "numpy.float32",
    "numpy.nan",
    "pandas.DataFrame",
    "set",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.get_t": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "IndexError",
    "isinstance",
    "pandas.Timedelta"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.get_time_slice": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "slice"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.get_timeres": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "abs",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.get_totals": {
  "data": {
   "lineno": 1687,
   "symbols_in_volume": [
    "AttributeError",
    "dict",
    "slice",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.get_var": {
  "data": {
   "lineno": 1590,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "len",
    "pandas.DataFrame.from_dict",
    "pandas.MultiIndex.from_tuples",
    "xarray.DataArray.from_series"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.get_weight": {
  "data": {
   "lineno": 546
  },
  "type": "function"
 },
 "calliope.core.Model.initialize_configuration": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "calliope.core.datetime",
    "calliope.core.get_model_config",
    "calliope.core.os",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.initialize_parents": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "KeyError",
    "calliope.core.get_default_techs",
    "calliope.core.inspect",
    "e",
    "list"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.initialize_sets": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "calliope.core.itertools",
    "calliope.core.os",
    "e",
    "list",
    "pandas.read_csv",
    "set"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.initialize_time": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "func",
    "mask_func",
    "pandas.Index",
    "pandas.Series",
    "pandas.concat",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.initialize_timeseries": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "list",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.ischild": {
  "data": {
   "lineno": 728
  },
  "type": "function"
 },
 "calliope.core.Model.load_results": {
  "data": {
   "lineno": 2011,
   "symbols_in_volume": [
    "calliope.core.logging",
    "r"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.load_solution": {
  "data": {
   "lineno": 1582
  },
  "type": "function"
 },
 "calliope.core.Model.load_solution_iterative": {
  "data": {
   "lineno": 1918,
   "symbols_in_volume": [
    "sum",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.override_model_config": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "calliope.core.Model.prev_t": {
  "data": {
   "lineno": 416
  },
  "type": "function"
 },
 "calliope.core.Model.process_solution": {
  "data": {
   "lineno": 1537,
   "symbols_in_volume": [
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.read_data": {
  "data": {
   "lineno": 989,
   "symbols_in_volume": [
    "int",
    "list",
    "pandas.DataFrame",
    "pandas.Series",
    "set",
    "xarray.DataArray",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.run": {
  "data": {
   "lineno": 1401,
   "symbols_in_volume": [
    "calliope.core._get_time",
    "calliope.core.time",
    "e",
    "isinstance",
    "len",
    "list",
    "print"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.save_solution": {
  "data": {
   "lineno": 2026,
   "symbols_in_volume": [
    "OSError",
    "ValueError",
    "calliope.core.logging",
    "calliope.core.os",
    "len"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.scale_to_peak": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.set_option": {
  "data": {
   "lineno": 480
  },
  "type": "function"
 },
 "calliope.core.Model.solve": {
  "data": {
   "lineno": 1477,
   "symbols_in_volume": [
    "KeyError",
    "calliope.core._get_time",
    "calliope.core.logging",
    "calliope.core.os",
    "calliope.core.shutil",
    "calliope.core.time",
    "calliope.core.warnings",
    "print",
    "pyomo.opt.SolverFactory",
    "pyutilib.services.TempfileManager.tempdir",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.solve_iterative": {
  "data": {
   "lineno": 1934,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "range",
    "slice",
    "sum"
   ]
  },
  "type": "function"
 },
 "calliope.core.Model.update_parameters": {
  "data": {
   "lineno": 1170,
   "symbols_in_volume": [
    "float",
    "getattr",
    "initializer",
    "s_init_initializer"
   ]
  },
  "type": "function"
 },
 "calliope.core.TempfileManager": {
  "data": {
   "shadows": "pyutilib.services.TempfileManager"
  },
  "type": "import"
 },
 "calliope.core._formatwarning": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "calliope.core.formatwarning_orig",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.core._get_time": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "calliope.core._time_format",
    "calliope.core.time"
   ]
  },
  "type": "function"
 },
 "calliope.core._time_format": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "calliope.core.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "calliope.core.formatwarning_orig": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "calliope.core.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "calliope.core.get_default_techs": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "calliope.core.functools",
    "calliope.core.os",
    "list"
   ]
  },
  "type": "function"
 },
 "calliope.core.get_model_config": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "calliope.core.get_default_techs",
    "calliope.core.os",
    "e",
    "isinstance",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "calliope.core.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "calliope.core.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "calliope.core.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "calliope.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "calliope.core.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "calliope.core.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "calliope.core.po": {
  "data": {
   "shadows": "pyomo.core"
  },
  "type": "import"
 },
 "calliope.core.popt": {
  "data": {
   "shadows": "pyomo.opt"
  },
  "type": "import"
 },
 "calliope.core.pyomo.environ": {
  "data": {
   "shadows": "pyomo.environ"
  },
  "type": "import"
 },
 "calliope.core.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "calliope.core.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "calliope.core.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "calliope.core.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "calliope.core.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "calliope.examples": {
  "data": {
   "symbols_in_volume": [
    "calliope.examples.os"
   ]
  },
  "type": "module"
 },
 "calliope.examples.NationalScale": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "calliope.examples.NationalScale.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "calliope.examples.PATHS",
    "calliope.examples.os",
    "super"
   ]
  },
  "type": "function"
 },
 "calliope.examples.PATHS": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "calliope.examples.UrbanScale": {
  "data": {
   "lineno": 34
  },
  "type": "class"
 },
 "calliope.examples.UrbanScale.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "calliope.examples.PATHS",
    "calliope.examples.os",
    "super"
   ]
  },
  "type": "function"
 },
 "calliope.examples.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "calliope.exceptions": {
  "data": {},
  "type": "module"
 },
 "calliope.exceptions.ModelError": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "calliope.exceptions.ModelWarning": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "calliope.exceptions.OptionNotSetError": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "calliope.exceptions.ModelError"
   ]
  },
  "type": "class"
 },
 "calliope.lib": {
  "data": {},
  "type": "module"
 },
 "calliope.lib.nx_pylab": {
  "data": {},
  "type": "module"
 },
 "calliope.lib.nx_pylab.Colormap": {
  "data": {
   "shadows": "matplotlib.colors.Colormap"
  },
  "type": "import"
 },
 "calliope.lib.nx_pylab.LineCollection": {
  "data": {
   "shadows": "matplotlib.collections.LineCollection"
  },
  "type": "import"
 },
 "calliope.lib.nx_pylab.cb": {
  "data": {
   "shadows": "matplotlib.cbook"
  },
  "type": "import"
 },
 "calliope.lib.nx_pylab.cm": {
  "data": {
   "shadows": "matplotlib.cm"
  },
  "type": "import"
 },
 "calliope.lib.nx_pylab.collections": {
  "data": {
   "shadows": "matplotlib.collections"
  },
  "type": "import"
 },
 "calliope.lib.nx_pylab.colorConverter": {
  "data": {
   "shadows": "matplotlib.colors.colorConverter"
  },
  "type": "import"
 },
 "calliope.lib.nx_pylab.draw_networkx_edges": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "ImportError",
    "RuntimeError",
    "calliope.lib.nx_pylab.edge_color_weight",
    "calliope.lib.nx_pylab.edge_width_weight",
    "calliope.lib.nx_pylab.get_color_dict",
    "calliope.lib.nx_pylab.is_weighted",
    "calliope.lib.nx_pylab.matplotlib",
    "calliope.lib.nx_pylab.numpy",
    "dict",
    "len",
    "list",
    "matplotlib.cbook.is_scalar",
    "matplotlib.cbook.iterable",
    "matplotlib.cm.get_cmap",
    "matplotlib.patches.FancyArrowPatch",
    "matplotlib.pylab.gca",
    "networkx.NetworkXError",
    "print",
    "zip"
   ]
  },
  "type": "function"
 },
 "calliope.lib.nx_pylab.draw_networkx_nodes": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "ImportError",
    "KeyError",
    "RuntimeError",
    "ValueError",
    "area2radius",
    "calliope.lib.nx_pylab.get_color_dict",
    "calliope.lib.nx_pylab.math",
    "calliope.lib.nx_pylab.numpy",
    "cmap",
    "dict",
    "len",
    "list",
    "map",
    "matplotlib.cbook.iterable",
    "matplotlib.cm.get_cmap",
    "matplotlib.patches.Circle",
    "matplotlib.patches.RegularPolygon",
    "matplotlib.pylab.gca",
    "matplotlib.rcParams",
    "max",
    "networkx.NetworkXError",
    "print",
    "zip"
   ]
  },
  "type": "function"
 },
 "calliope.lib.nx_pylab.edge_color_weight": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "dict",
    "float",
    "list",
    "map",
    "max",
    "min",
    "zip"
   ]
  },
  "type": "function"
 },
 "calliope.lib.nx_pylab.edge_width_weight": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "dict",
    "float",
    "list",
    "map",
    "max",
    "min",
    "zip"
   ]
  },
  "type": "function"
 },
 "calliope.lib.nx_pylab.get_color_dict": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "CN",
    "cmap",
    "dict",
    "float",
    "len",
    "list",
    "matplotlib.cbook.alltrue",
    "matplotlib.cbook.is_scalar",
    "matplotlib.cbook.is_string",
    "matplotlib.cbook.is_string_like",
    "matplotlib.cbook.iterable",
    "matplotlib.colors.ColorConverter",
    "matplotlib.colors.Normalize",
    "max",
    "min",
    "networkx.NetworkXError",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "calliope.lib.nx_pylab.is_weighted": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "calliope.lib.nx_pylab.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "calliope.lib.nx_pylab.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "calliope.lib.nx_pylab.mcolors": {
  "data": {
   "shadows": "matplotlib.colors"
  },
  "type": "import"
 },
 "calliope.lib.nx_pylab.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "calliope.lib.nx_pylab.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "calliope.lib.nx_pylab.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "calliope.lib.nx_pylab.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "calliope.lib.nx_pylab.patches": {
  "data": {
   "shadows": "matplotlib.patches"
  },
  "type": "import"
 },
 "calliope.lib.nx_pylab.pylab": {
  "data": {
   "shadows": "matplotlib.pylab"
  },
  "type": "import"
 },
 "calliope.locations": {
  "data": {},
  "type": "module"
 },
 "calliope.locations._generate_location": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "KeyError",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.locations.explode_locations": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "KeyError",
    "int",
    "isinstance",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.locations.generate_location_matrix": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "calliope.locations._generate_location",
    "pandas.DataFrame.from_records",
    "sorted"
   ]
  },
  "type": "function"
 },
 "calliope.locations.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "calliope.locations.process_locations": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "_set_loc_key",
    "calliope.locations.explode_locations",
    "calliope.locations.set_location_levels"
   ]
  },
  "type": "function"
 },
 "calliope.locations.process_locations._set_loc_key": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "KeyError",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.locations.set_location_levels": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "len",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "calliope.output": {
  "data": {},
  "type": "module"
 },
 "calliope.output.generate_constraints": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "_setkey",
    "dict",
    "g",
    "list",
    "numpy.isnan",
    "set"
   ]
  },
  "type": "function"
 },
 "calliope.output.generate_constraints._setkey": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "TypeError",
    "map_any",
    "map_numeric",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "calliope.output.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "calliope.parallel": {
  "data": {},
  "type": "module"
 },
 "calliope.parallel.Parallelizer": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "calliope.parallel.Parallelizer.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "calliope.parallel.Parallelizer",
    "calliope.parallel.os",
    "super"
   ]
  },
  "type": "function"
 },
 "calliope.parallel.Parallelizer._get_iteration_config": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "calliope.parallel.copy",
    "calliope.parallel.os",
    "dict",
    "isinstance",
    "list",
    "numpy.asscalar",
    "numpy.generic",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "calliope.parallel.Parallelizer._write_additional_lines": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "calliope.parallel.Parallelizer._write_modelcommands": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "calliope.parallel.os"
   ]
  },
  "type": "function"
 },
 "calliope.parallel.Parallelizer._write_resources": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "calliope.parallel.Parallelizer._write_submit": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "calliope.parallel.Parallelizer.generate_iterations": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "calliope.parallel.itertools",
    "dict",
    "isinstance",
    "len",
    "list",
    "pandas.DataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "calliope.parallel.Parallelizer.generate_runs": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "calliope.parallel.itertools",
    "calliope.parallel.os",
    "len",
    "open"
   ]
  },
  "type": "function"
 },
 "calliope.parallel.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "calliope.parallel.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "calliope.parallel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "calliope.parallel.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "calliope.parallel.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "calliope.read": {
  "data": {},
  "type": "module"
 },
 "calliope.read.REQUIRED_TABLES": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "calliope.read._check": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "calliope.read.REQUIRED_TABLES",
    "calliope.read.logging",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "calliope.read._detect_format": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "calliope.read.os"
   ]
  },
  "type": "function"
 },
 "calliope.read.combine_subdir_netcdfs": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "calliope.read.get_overarching_time_index",
    "calliope.read.glob",
    "calliope.read.os",
    "dict",
    "len",
    "range",
    "xarray.concat",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "calliope.read.convert_run_dir_to_netcdf": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "calliope.read.dir_to_dataset",
    "calliope.read.os"
   ]
  },
  "type": "function"
 },
 "calliope.read.convert_subdirs_to_netcdfs": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "calliope.read.convert_run_dir_to_netcdf",
    "calliope.read.os",
    "print"
   ]
  },
  "type": "function"
 },
 "calliope.read.dir_to_dataset": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "calliope.read.read_dir",
    "calliope.read.results_to_dataset"
   ]
  },
  "type": "function"
 },
 "calliope.read.get_longest_time_index_length": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "calliope.read.get_overarching_time_index": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "calliope.read.union_of_indexes"
   ]
  },
  "type": "function"
 },
 "calliope.read.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "calliope.read.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "calliope.read.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "calliope.read.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "calliope.read.read_csv": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "AttrDict",
    "AttrDict.from_yaml",
    "IOError",
    "calliope.read._check",
    "calliope.read.glob",
    "calliope.read.os",
    "len",
    "list",
    "pandas.read_csv",
    "range",
    "xarray.DataArray.from_series",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "calliope.read.read_dir": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "AttrDict",
    "IOError",
    "calliope.read._detect_format",
    "calliope.read.logging",
    "calliope.read.os",
    "calliope.read.read_csv",
    "calliope.read.read_netcdf",
    "pandas.read_csv"
   ]
  },
  "type": "function"
 },
 "calliope.read.read_netcdf": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "calliope.read._check",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "calliope.read.results_to_dataset": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "calliope.read.get_longest_time_index_length",
    "calliope.read.get_overarching_time_index",
    "dict",
    "len",
    "list",
    "range",
    "str",
    "xarray.DataArray",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "calliope.read.union_of_indexes": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "calliope.read.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "calliope.sets": {
  "data": {},
  "type": "module"
 },
 "calliope.sets.init_set_c": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "_check_if_dict",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "calliope.sets.init_set_c._check_if_dict": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "calliope.sets.init_set_x": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "calliope.sets.init_set_y": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "any",
    "e",
    "list",
    "numpy.concatenate",
    "set"
   ]
  },
  "type": "function"
 },
 "calliope.sets.init_y_trans": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "calliope.sets.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "calliope.test": {
  "data": {},
  "type": "module"
 },
 "calliope.test.common": {
  "data": {},
  "type": "module"
 },
 "calliope.test.common._add_test_path": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "calliope.test.common.os"
   ]
  },
  "type": "function"
 },
 "calliope.test.common.assert_almost_equal": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "calliope.test.common.calliope": {
  "data": {
   "shadows": "calliope"
  },
  "type": "import"
 },
 "calliope.test.common.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "calliope.test.common.simple_model": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "calliope.test.common._add_test_path",
    "calliope.test.common.calliope"
   ]
  },
  "type": "function"
 },
 "calliope.test.common.solver": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "calliope.test.common.solver_io": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "calliope.test.test_analysis": {
  "data": {
   "symbols_in_volume": [
    "matplotlib.pyplot.switch_backend"
   ]
  },
  "type": "module"
 },
 "calliope.test.test_analysis.AttrDict": {
  "data": {
   "shadows": "calliope.utils.AttrDict"
  },
  "type": "import"
 },
 "calliope.test.test_analysis.TestModel": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "calliope.test.test_analysis.TestModel.builtin_model": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "calliope.examples.NationalScale",
    "calliope.test.test_analysis.pytest"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_analysis.TestModel.model": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "calliope.test.test_analysis.pytest",
    "calliope.test.test_analysis.tempfile",
    "calliope.utils.AttrDict"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_analysis.TestModel.test_get_delivered_cost": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "assert_almost_equal",
    "calliope.analysis.get_delivered_cost"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_analysis.TestModel.test_get_group_share": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "calliope.analysis.get_group_share"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_analysis.TestModel.test_get_levelized_cost": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "assert_almost_equal",
    "calliope.analysis.get_levelized_cost"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_analysis.TestModel.test_get_unmet_demand_hours": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "calliope.analysis.get_unmet_demand_hours"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_analysis.TestModel.test_plot_carrier_production": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "calliope.analysis.plot_carrier_production"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_analysis.TestModel.test_plot_installed_capacities": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "calliope.analysis.plot_installed_capacities"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_analysis.TestModel.test_plot_timeseries": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "calliope.analysis.plot_timeseries",
    "dict"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_analysis.TestModel.test_plot_transmission": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "calliope.analysis.plot_transmission"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_analysis.analysis": {
  "data": {
   "shadows": "calliope.analysis"
  },
  "type": "import"
 },
 "calliope.test.test_analysis.examples": {
  "data": {
   "shadows": "calliope.examples"
  },
  "type": "import"
 },
 "calliope.test.test_analysis.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "calliope.test.test_analysis.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "calliope.test.test_analysis.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "calliope.test.test_cli": {
  "data": {},
  "type": "module"
 },
 "calliope.test.test_cli.CliRunner": {
  "data": {
   "shadows": "click.testing.CliRunner"
  },
  "type": "import"
 },
 "calliope.test.test_cli.TestCLI": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "calliope.test.test_cli.TestCLI.test_generate": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "calliope.cli.generate",
    "calliope.test.test_cli.os",
    "click.testing.CliRunner"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_cli.TestCLI.test_new": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "calliope.cli.new",
    "calliope.test.test_cli.os",
    "calliope.test.test_cli.tempfile",
    "click.testing.CliRunner"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_cli.TestCLI.test_run": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "calliope.cli.run",
    "calliope.test.test_cli.os",
    "click.testing.CliRunner"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_cli.cli": {
  "data": {
   "shadows": "calliope.cli"
  },
  "type": "import"
 },
 "calliope.test.test_cli.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "calliope.test.test_cli.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "calliope.test.test_cli.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "calliope.test.test_core": {
  "data": {},
  "type": "module"
 },
 "calliope.test.test_core.TestInitialization": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "calliope.test.test_core.TestInitialization.model_transmission": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "calliope.test.test_core.pytest",
    "calliope.test.test_core.tempfile",
    "print"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_core.TestInitialization.sine_wave": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "calliope.test.test_core.pytest",
    "numpy.arange",
    "numpy.sin",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_core.TestInitialization.test_gettimeres_1hourly": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "calliope.test.test_core.TestInitialization.test_gettimeres_6hourly": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "calliope.test.test_core.TestInitialization.test_gettimeres_verify_1hourly": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "calliope.test.test_core.TestInitialization.test_gettimeres_verify_erroneous": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "AssertionError",
    "calliope.test.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_core.TestInitialization.test_initialize_locations_matrix": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_core.TestInitialization.test_initialize_locations_matrix_with_transmission": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "numpy.isnan",
    "sorted"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_core.TestInitialization.test_initialize_parents_defaults": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "calliope.test.test_core.calliope",
    "calliope.test.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_core.TestInitialization.test_initialize_sets_carriers": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_core.TestInitialization.test_initialize_sets_locations": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_core.TestInitialization.test_initialize_sets_locations_subset": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_core.TestInitialization.test_initialize_sets_locations_too_large_subset": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_core.TestInitialization.test_initialize_sets_locations_with_transmission": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_core.TestInitialization.test_initialize_sets_technologies": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_core.TestInitialization.test_initialize_sets_technologies_loc_invalid_tech": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "calliope.test.test_core.calliope",
    "calliope.test.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_core.TestInitialization.test_initialize_sets_technologies_subset": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_core.TestInitialization.test_initialize_sets_technologies_too_large_subset": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_core.TestInitialization.test_initialize_sets_timesteps": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Timestamp",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_core.TestInitialization.test_initialize_sets_timesteps_subset": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas.Timestamp",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_core.TestInitialization.test_model_initialization_default": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "calliope.test.test_core.calliope",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_core.TestInitialization.test_model_initialization_follow_import_statements": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "calliope.test.test_core.calliope"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_core.TestInitialization.test_model_initialization_follow_nested_import_statements": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "calliope.test.test_core.calliope"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_core.TestInitialization.test_model_initialization_override_attrdict": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "calliope.test.test_core.calliope"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_core.TestInitialization.test_model_initialization_override_dict": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "AssertionError",
    "calliope.test.test_core.calliope",
    "calliope.test.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_core.TestInitialization.test_model_initialization_simple_model": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "calliope.test.test_core.TestInitialization.test_read_data_supply_r_negative_check": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "AssertionError",
    "calliope.test.test_core.calliope",
    "calliope.test.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_core.TestInitialization.test_scale_to_peak_negative": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "assert_almost_equal",
    "float"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_core.TestInitialization.test_scale_to_peak_positive": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "assert_almost_equal",
    "float"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_core.TestInitialization.test_scale_to_peak_positive_and_negative": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "assert_almost_equal",
    "float"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_core.TestInitialization.test_scale_to_peak_scale_time_res_false": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "assert_almost_equal",
    "float"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_core.TestInitialization.test_scale_to_peak_scale_time_res_true": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "assert_almost_equal",
    "float"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_core.TestOptions": {
  "data": {
   "lineno": 259
  },
  "type": "class"
 },
 "calliope.test.test_core.TestOptions.test_get_option": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "calliope.test.test_core.TestOptions.test_get_option_default": {
  "data": {
   "lineno": 264
  },
  "type": "function"
 },
 "calliope.test.test_core.TestOptions.test_get_option_default_unavailable": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "calliope.test.test_core.calliope",
    "calliope.test.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_core.TestOptions.test_get_option_location": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "calliope.test.test_core.TestOptions.test_get_option_location_default": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "calliope.test.test_core.TestOptions.test_get_option_location_default_unavailable": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "calliope.test.test_core.calliope",
    "calliope.test.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_core.TestOptions.test_get_option_specify_default_exists_but_false": {
  "data": {
   "lineno": 278
  },
  "type": "function"
 },
 "calliope.test.test_core.TestOptions.test_get_option_specify_default_inexistent": {
  "data": {
   "lineno": 273
  },
  "type": "function"
 },
 "calliope.test.test_core.TestOptions.test_get_set_get_option": {
  "data": {
   "lineno": 309
  },
  "type": "function"
 },
 "calliope.test.test_core.TestOptions.test_set_get_option": {
  "data": {
   "lineno": 304
  },
  "type": "function"
 },
 "calliope.test.test_core.TestOptions.test_set_option": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "KeyError",
    "calliope.test.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_core.calliope": {
  "data": {
   "shadows": "calliope"
  },
  "type": "import"
 },
 "calliope.test.test_core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "calliope.test.test_core.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "calliope.test.test_core.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "calliope.test.test_core.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "calliope.test.test_io": {
  "data": {},
  "type": "module"
 },
 "calliope.test.test_io.TestSave": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "calliope.test.test_io.TestSave.model": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "calliope.test.test_io.calliope",
    "calliope.test.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_io.TestSave.test_save_csv": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "calliope.test.test_io.calliope",
    "calliope.test.test_io.tempfile",
    "calliope.test.test_io.verify_solution_integrity"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_io.TestSave.test_save_netcdf": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "calliope.test.test_io.calliope",
    "calliope.test.test_io.os",
    "calliope.test.test_io.tempfile",
    "calliope.test.test_io.verify_solution_integrity"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_io.calliope": {
  "data": {
   "shadows": "calliope"
  },
  "type": "import"
 },
 "calliope.test.test_io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "calliope.test.test_io.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "calliope.test.test_io.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "calliope.test.test_io.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "calliope.test.test_io.verify_solution_integrity": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_locations": {
  "data": {},
  "type": "module"
 },
 "calliope.test.test_locations.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "calliope.test.test_locations.TestLocations": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "calliope.test.test_locations.TestLocations.sample_locations": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "calliope.test.test_locations.pytest",
    "calliope.utils.AttrDict.from_yaml",
    "io.StringIO"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_locations.TestLocations.sample_nested_locations": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "calliope.test.test_locations.pytest",
    "calliope.utils.AttrDict.from_yaml",
    "io.StringIO"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_locations.TestLocations.sample_overlapping_locations": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "calliope.test.test_locations.pytest",
    "calliope.utils.AttrDict.from_yaml",
    "io.StringIO"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_locations.TestLocations.sample_unexploded_locations": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "calliope.test.test_locations.pytest",
    "calliope.utils.AttrDict.from_yaml",
    "io.StringIO"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_locations.TestLocations.test_explode_location_empty": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "KeyError",
    "calliope.locations.explode_locations",
    "calliope.test.test_locations.pytest"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_locations.TestLocations.test_explode_location_invalid": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "AssertionError",
    "calliope.locations.explode_locations",
    "calliope.test.test_locations.pytest"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_locations.TestLocations.test_explode_location_mixed": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "calliope.locations.explode_locations"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_locations.TestLocations.test_explode_location_range": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "calliope.locations.explode_locations"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_locations.TestLocations.test_explode_location_range_backwards": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "KeyError",
    "calliope.locations.explode_locations",
    "calliope.test.test_locations.pytest"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_locations.TestLocations.test_explode_location_range_nonnumeric": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ValueError",
    "calliope.locations.explode_locations",
    "calliope.test.test_locations.pytest"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_locations.TestLocations.test_explode_location_single": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "calliope.locations.explode_locations"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_locations.TestLocations.test_explore_location_list": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "calliope.locations.explode_locations"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_locations.TestLocations.test_generate_location": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "calliope.locations._generate_location",
    "sorted"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_locations.TestLocations.test_generate_location_lacking_techs": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "calliope.locations._generate_location",
    "sorted"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_locations.TestLocations.test_generate_location_matrix_additional_techs": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "calliope.locations.generate_location_matrix",
    "sum"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_locations.TestLocations.test_generate_location_matrix_cols": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "calliope.locations.generate_location_matrix",
    "sorted"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_locations.TestLocations.test_generate_location_matrix_index": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "calliope.locations.generate_location_matrix"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_locations.TestLocations.test_generate_location_matrix_missing_techs_cols": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "calliope.locations.generate_location_matrix",
    "sorted"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_locations.TestLocations.test_generate_location_matrix_values": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "calliope.locations.generate_location_matrix",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_locations.TestLocations.test_generate_location_matrix_within_only_strings": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "calliope.locations.generate_location_matrix",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_locations.TestLocations.test_process_locations": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "calliope.locations.process_locations",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_locations.TestLocations.test_process_locations_levels": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "calliope.locations.process_locations"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_locations.TestLocations.test_process_locations_overlap": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "calliope.locations.process_locations"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_locations.locations": {
  "data": {
   "shadows": "calliope.locations"
  },
  "type": "import"
 },
 "calliope.test.test_locations.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "calliope.test.test_locations.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "calliope.test.test_locations.utils": {
  "data": {
   "shadows": "calliope.utils"
  },
  "type": "import"
 },
 "calliope.test.test_model_builtin": {
  "data": {},
  "type": "module"
 },
 "calliope.test.test_model_builtin.TestNationalScaleExampleModel": {
  "data": {
   "lineno": 4
  },
  "type": "class"
 },
 "calliope.test.test_model_builtin.TestNationalScaleExampleModel.test_model_initialization_default": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "calliope.test.test_model_builtin.calliope"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_builtin.TestUrbanScaleExampleModel": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "calliope.test.test_model_builtin.TestUrbanScaleExampleModel.test_model_initialization_default": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "calliope.test.test_model_builtin.calliope"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_builtin.calliope": {
  "data": {
   "shadows": "calliope"
  },
  "type": "import"
 },
 "calliope.test.test_model_conversion": {
  "data": {},
  "type": "module"
 },
 "calliope.test.test_model_conversion.AttrDict": {
  "data": {
   "shadows": "calliope.utils.AttrDict"
  },
  "type": "import"
 },
 "calliope.test.test_model_conversion.TestModel": {
  "data": {
   "lineno": 56
  },
  "type": "class"
 },
 "calliope.test.test_model_conversion.TestModel.test_model_conversion": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "calliope.test.test_model_conversion.create_and_run_model",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_conversion.TestModel.test_model_conversion_plus": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "assert_almost_equal",
    "calliope.test.test_model_conversion.create_and_run_model",
    "dict",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_conversion.TestModel.test_model_conversion_plus_e_cap": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "assert_almost_equal",
    "calliope.test.test_model_conversion.create_and_run_model",
    "dict",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_conversion.TestModel.test_model_conversion_plus_leakage": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "assert_almost_equal",
    "calliope.test.test_model_conversion.create_and_run_model",
    "dict",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_conversion.create_and_run_model": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "calliope.test.test_model_conversion.tempfile",
    "calliope.utils.AttrDict.from_yaml_string"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_conversion.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "calliope.test.test_model_export": {
  "data": {},
  "type": "module"
 },
 "calliope.test.test_model_export.AttrDict": {
  "data": {
   "shadows": "calliope.utils.AttrDict"
  },
  "type": "import"
 },
 "calliope.test.test_model_export.TestModel": {
  "data": {
   "lineno": 54
  },
  "type": "class"
 },
 "calliope.test.test_model_export.TestModel.test_export_from_conversion": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "assert_almost_equal",
    "calliope.test.test_model_export.create_and_run_model"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_export.TestModel.test_export_from_conversion_plus": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "assert_almost_equal",
    "calliope.test.test_model_export.create_and_run_model",
    "dict"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_export.TestModel.test_export_from_supply": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "AttributeError",
    "assert_almost_equal",
    "calliope.test.test_model_export.create_and_run_model",
    "calliope.test.test_model_export.pytest"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_export.create_and_run_model": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "calliope.test.test_model_export.tempfile",
    "calliope.utils.AttrDict.from_yaml_string"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_export.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "calliope.test.test_model_export.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "calliope.test.test_model_negative_costs": {
  "data": {},
  "type": "module"
 },
 "calliope.test.test_model_negative_costs.AttrDict": {
  "data": {
   "shadows": "calliope.utils.AttrDict"
  },
  "type": "import"
 },
 "calliope.test.test_model_negative_costs.TestModel": {
  "data": {
   "lineno": 40
  },
  "type": "class"
 },
 "calliope.test.test_model_negative_costs.TestModel.test_model_all_rev": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "calliope.test.test_model_negative_costs.create_and_run_model",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_negative_costs.TestModel.test_model_export": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "calliope.test.test_model_negative_costs.create_and_run_model",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_negative_costs.TestModel.test_model_fixed_rev": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "calliope.test.test_model_negative_costs.create_and_run_model",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_negative_costs.TestModel.test_model_invalid_r_cap": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "calliope.test.test_model_negative_costs.calliope",
    "calliope.test.test_model_negative_costs.create_and_run_model",
    "calliope.test.test_model_negative_costs.pytest"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_negative_costs.TestModel.test_model_valid_r_cap": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "calliope.test.test_model_negative_costs.create_and_run_model",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_negative_costs.TestModel.test_model_var_rev": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "calliope.test.test_model_negative_costs.create_and_run_model",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_negative_costs.calliope": {
  "data": {
   "shadows": "calliope"
  },
  "type": "import"
 },
 "calliope.test.test_model_negative_costs.create_and_run_model": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "calliope.test.test_model_negative_costs.tempfile",
    "calliope.utils.AttrDict.from_yaml_string"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_negative_costs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "calliope.test.test_model_negative_costs.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "calliope.test.test_model_onesite": {
  "data": {},
  "type": "module"
 },
 "calliope.test.test_model_onesite.AttrDict": {
  "data": {
   "shadows": "calliope.utils.AttrDict"
  },
  "type": "import"
 },
 "calliope.test.test_model_onesite.TestModel": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "calliope.test.test_model_onesite.TestModel.model": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "calliope.test.test_model_onesite.pytest",
    "calliope.test.test_model_onesite.tempfile",
    "calliope.utils.AttrDict"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_onesite.TestModel.test_model_balanced": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_onesite.TestModel.test_model_costs": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_onesite.TestModel.test_model_solves": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_onesite.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "calliope.test.test_model_onesite.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "calliope.test.test_model_onesite_sin": {
  "data": {},
  "type": "module"
 },
 "calliope.test.test_model_onesite_sin.AttrDict": {
  "data": {
   "shadows": "calliope.utils.AttrDict"
  },
  "type": "import"
 },
 "calliope.test.test_model_onesite_sin.TestModel": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "calliope.test.test_model_onesite_sin.TestModel.model": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "calliope.test.test_model_onesite_sin.pytest",
    "calliope.test.test_model_onesite_sin.tempfile",
    "calliope.utils.AttrDict"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_onesite_sin.TestModel.test_model_balanced": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "assert_almost_equal",
    "dict"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_onesite_sin.TestModel.test_model_solves": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_onesite_sin.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "calliope.test.test_model_onesite_sin.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "calliope.test.test_model_onesite_subnodes": {
  "data": {},
  "type": "module"
 },
 "calliope.test.test_model_onesite_subnodes.AttrDict": {
  "data": {
   "shadows": "calliope.utils.AttrDict"
  },
  "type": "import"
 },
 "calliope.test.test_model_onesite_subnodes.TestModel": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "calliope.test.test_model_onesite_subnodes.TestModel.model": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "calliope.test.test_model_onesite_subnodes.pytest",
    "calliope.test.test_model_onesite_subnodes.tempfile",
    "calliope.utils.AttrDict"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_onesite_subnodes.TestModel.test_model_balanced": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_onesite_subnodes.TestModel.test_model_costs": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_onesite_subnodes.TestModel.test_model_solves": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_onesite_subnodes.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "calliope.test.test_model_onesite_subnodes.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "calliope.test.test_model_op": {
  "data": {},
  "type": "module"
 },
 "calliope.test.test_model_op.AttrDict": {
  "data": {
   "shadows": "calliope.utils.AttrDict"
  },
  "type": "import"
 },
 "calliope.test.test_model_op.TestModel": {
  "data": {
   "lineno": 43
  },
  "type": "class"
 },
 "calliope.test.test_model_op.TestModel.test_model_fixed_costs_op": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "assert_almost_equal",
    "calliope.test.test_model_op.create_and_run_model",
    "dict"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_op.TestModel.test_model_fixed_costs_op_with_varying_demand": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "assert_almost_equal",
    "calliope.test.test_model_op.create_and_run_model",
    "dict"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_op.TestModel.test_model_var_costs_op": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "assert_almost_equal",
    "calliope.test.test_model_op.create_and_run_model",
    "dict"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_op.TestModel.test_model_var_costs_op_with_varying_demand": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "assert_almost_equal",
    "calliope.test.test_model_op.create_and_run_model",
    "dict"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_op.create_and_run_model": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "_add_test_path",
    "calliope.test.test_model_op.tempfile",
    "calliope.utils.AttrDict.from_yaml_string"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_op.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "calliope.test.test_model_op.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "calliope.test.test_model_otherconstraints": {
  "data": {},
  "type": "module"
 },
 "calliope.test.test_model_otherconstraints.AttrDict": {
  "data": {
   "shadows": "calliope.utils.AttrDict"
  },
  "type": "import"
 },
 "calliope.test.test_model_otherconstraints.TestModel": {
  "data": {
   "lineno": 42
  },
  "type": "class"
 },
 "calliope.test.test_model_otherconstraints.TestModel.test_system_margin": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "assert_almost_equal",
    "calliope.test.test_model_otherconstraints.create_and_run_model",
    "dict",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_otherconstraints.create_and_run_model": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "calliope.test.test_model_otherconstraints.tempfile",
    "calliope.utils.AttrDict.from_yaml_string"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_otherconstraints.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "calliope.test.test_model_storage": {
  "data": {},
  "type": "module"
 },
 "calliope.test.test_model_storage.AttrDict": {
  "data": {
   "shadows": "calliope.utils.AttrDict"
  },
  "type": "import"
 },
 "calliope.test.test_model_storage.ModelError": {
  "data": {
   "shadows": "calliope.exceptions.ModelError"
  },
  "type": "import"
 },
 "calliope.test.test_model_storage.TestModel": {
  "data": {
   "lineno": 46
  },
  "type": "class"
 },
 "calliope.test.test_model_storage.TestModel.test_model_c_rate": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "assert_almost_equal",
    "calliope.test.test_model_storage.create_and_run_model",
    "dict",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_storage.TestModel.test_model_c_rate_and_e_cap_and_s_cap_dontmatch": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "calliope.exceptions.ModelError",
    "calliope.test.test_model_storage.create_and_run_model",
    "calliope.test.test_model_storage.pytest"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_storage.TestModel.test_model_c_rate_and_e_cap_and_s_cap_match": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "calliope.test.test_model_storage.create_and_run_model"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_storage.TestModel.test_model_compare_c_rate_e_cap": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "assert_almost_equal",
    "calliope.test.test_model_storage.create_and_run_model",
    "dict"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_storage.TestModel.test_model_e_cap_and_s_cap_only": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "calliope.test.test_model_storage.create_and_run_model"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_storage.TestModel.test_model_e_cap_max": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "assert_almost_equal",
    "calliope.test.test_model_storage.create_and_run_model",
    "dict",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_storage.TestModel.test_model_s_time": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "calliope.test.test_model_storage.create_and_run_model",
    "dict",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_storage.create_and_run_model": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "calliope.test.test_model_storage.tempfile",
    "calliope.utils.AttrDict.from_yaml_string"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_storage.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "calliope.test.test_model_storage.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "calliope.test.test_model_time": {
  "data": {},
  "type": "module"
 },
 "calliope.test.test_model_time.AttrDict": {
  "data": {
   "shadows": "calliope.utils.AttrDict"
  },
  "type": "import"
 },
 "calliope.test.test_model_time.TestModel": {
  "data": {
   "lineno": 42
  },
  "type": "class"
 },
 "calliope.test.test_model_time.TestModel.test_model_subset_t_from_middata": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "calliope.test.test_model_time.create_and_run_model",
    "dict",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_time.TestModel.test_model_subset_t_operational": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "calliope.test.test_model_time.create_and_run_model",
    "dict",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_time.TestModel.test_model_time_res_uniform": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "calliope.test.test_model_time.create_and_run_model",
    "dict",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_time.TestModel.test_model_time_res_uniform_subset_t_from_middata": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "calliope.test.test_model_time.create_and_run_model",
    "dict",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_time.TestModel.test_model_time_res_uniform_subset_t_from_start": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "calliope.test.test_model_time.create_and_run_model",
    "dict",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_time.TestModel.test_model_time_res_uniform_subset_t_operational": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "calliope.test.test_model_time.create_and_run_model",
    "dict",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_time.create_and_run_model": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "_add_test_path",
    "calliope.test.test_model_time.tempfile",
    "calliope.utils.AttrDict.from_yaml_string"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_time.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "calliope.test.test_model_time.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "calliope.test.test_model_transmission": {
  "data": {},
  "type": "module"
 },
 "calliope.test.test_model_transmission.AttrDict": {
  "data": {
   "shadows": "calliope.utils.AttrDict"
  },
  "type": "import"
 },
 "calliope.test.test_model_transmission.TestModel": {
  "data": {
   "lineno": 55
  },
  "type": "class"
 },
 "calliope.test.test_model_transmission.TestModel.model": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "calliope.test.test_model_transmission.pytest",
    "calliope.test.test_model_transmission.tempfile",
    "calliope.utils.AttrDict.from_yaml_string"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_transmission.TestModel.test_model_balanced": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_transmission.TestModel.test_model_costs": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_transmission.TestModel.test_model_solves": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_transmission.TestModel.test_one_way": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "assert_almost_equal",
    "calliope.examples.UrbanScale",
    "calliope.utils.AttrDict.from_yaml_string",
    "dict"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_transmission.create_and_run_model": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "calliope.test.test_model_transmission.tempfile",
    "calliope.utils.AttrDict.from_yaml_string"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_transmission.examples": {
  "data": {
   "shadows": "calliope.examples"
  },
  "type": "import"
 },
 "calliope.test.test_model_transmission.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "calliope.test.test_model_transmission.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "calliope.test.test_model_variable_resource": {
  "data": {},
  "type": "module"
 },
 "calliope.test.test_model_variable_resource.AttrDict": {
  "data": {
   "shadows": "calliope.utils.AttrDict"
  },
  "type": "import"
 },
 "calliope.test.test_model_variable_resource.TestModel": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "calliope.test.test_model_variable_resource.TestModel.model": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "calliope.test.test_model_variable_resource.pytest",
    "calliope.test.test_model_variable_resource.tempfile",
    "calliope.utils.AttrDict"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_variable_resource.TestModel.test_model_balanced": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "assert_almost_equal",
    "dict"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_variable_resource.TestModel.test_model_costs": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_variable_resource.TestModel.test_model_solves": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_variable_resource.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "calliope.test.test_model_variable_resource.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "calliope.test.test_model_variables_from_file": {
  "data": {},
  "type": "module"
 },
 "calliope.test.test_model_variables_from_file.AttrDict": {
  "data": {
   "shadows": "calliope.utils.AttrDict"
  },
  "type": "import"
 },
 "calliope.test.test_model_variables_from_file.TestModel": {
  "data": {
   "lineno": 39
  },
  "type": "class"
 },
 "calliope.test.test_model_variables_from_file.TestModel.test_model_fixed": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "calliope.test.test_model_variables_from_file.create_and_run_model",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_variables_from_file.TestModel.test_model_var_e_eff": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "calliope.test.test_model_variables_from_file.create_and_run_model",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_variables_from_file.TestModel.test_model_var_om_var": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "calliope.test.test_model_variables_from_file.create_and_run_model",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_variables_from_file.TestModel.test_model_var_r_eff": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "calliope.test.test_model_variables_from_file.create_and_run_model",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_variables_from_file.TestModel.test_model_var_sub_var": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "calliope.test.test_model_variables_from_file.create_and_run_model",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_variables_from_file.create_and_run_model": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "_add_test_path",
    "calliope.test.test_model_variables_from_file.tempfile",
    "calliope.utils.AttrDict.from_yaml_string"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_model_variables_from_file.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "calliope.test.test_time": {
  "data": {},
  "type": "module"
 },
 "calliope.test.test_time.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "calliope.test.test_transmission": {
  "data": {},
  "type": "module"
 },
 "calliope.test.test_transmission.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "calliope.test.test_transmission.TestTransmission": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "calliope.test.test_transmission.TestTransmission.explode_transmission_tree_empty": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "calliope.transmission.explode_transmission_tree"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_transmission.TestTransmission.test_explode_transmission_tree": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "calliope.transmission.explode_transmission_tree"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_transmission.TestTransmission.test_explode_transmission_tree_bad_links": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "KeyError",
    "calliope.test.test_transmission.pytest",
    "calliope.transmission.explode_transmission_tree"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_transmission.TestTransmission.test_explode_transmission_tree_invalid_x": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "KeyError",
    "calliope.test.test_transmission.pytest",
    "calliope.transmission.explode_transmission_tree"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_transmission.TestTransmission.test_get_remotes": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "calliope.transmission.get_remotes"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_transmission.TestTransmission.test_get_transmission_techs": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "calliope.transmission.get_transmission_techs",
    "sorted"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_transmission.TestTransmission.test_get_transmission_techs_empty": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "calliope.transmission.get_transmission_techs"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_transmission.TestTransmission.transmission_network": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "calliope.test.test_transmission.pytest",
    "calliope.utils.AttrDict.from_yaml",
    "io.StringIO"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_transmission.TestTransmission.transmission_network_erroneous": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "calliope.test.test_transmission.pytest",
    "calliope.utils.AttrDict.from_yaml",
    "io.StringIO"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_transmission.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "calliope.test.test_transmission.transmission": {
  "data": {
   "shadows": "calliope.transmission"
  },
  "type": "import"
 },
 "calliope.test.test_transmission.utils": {
  "data": {
   "shadows": "calliope.utils"
  },
  "type": "import"
 },
 "calliope.test.test_utils": {
  "data": {},
  "type": "module"
 },
 "calliope.test.test_utils.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "calliope.test.test_utils.TestAttrDict": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "calliope.test.test_utils.TestAttrDict.attr_dict": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "calliope.test.test_utils.pytest",
    "calliope.utils.AttrDict"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.regular_dict": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "calliope.test.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_as_dict": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_as_dict_flat": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_as_dict_with_sublists": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "calliope.utils.AttrDict.from_yaml_string",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_dot_access_first": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_dot_access_list": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "calliope.utils.AttrDict.from_yaml_string"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_dot_access_second": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_from_yaml_fobj": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "calliope.utils.AttrDict.from_yaml"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_from_yaml_path": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "calliope.test.test_utils.os",
    "calliope.utils.AttrDict.from_yaml"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_from_yaml_string": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "calliope.utils.AttrDict.from_yaml_string"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_from_yaml_string_dot_strings": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "calliope.utils.AttrDict.from_yaml_string"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_from_yaml_string_dot_strings_duplicate": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "calliope.utils.AttrDict.from_yaml_string"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_get_key_default": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_get_key_first": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_get_key_inexistant": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "KeyError",
    "calliope.test.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_get_key_inexistant_default": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_get_key_inexistant_default_false": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_get_key_second": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_get_key_second_inexistant": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "KeyError",
    "calliope.test.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_get_key_second_inexistant_default": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_get_key_second_inexistant_default_false": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_init_from_dict": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "calliope.utils.AttrDict"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_init_from_dict_with_nested_keys": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "calliope.utils.AttrDict"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_keys_nested_as_dict": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_keys_nested_as_list": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_set_key_first": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_set_key_multiple_inexisting": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_set_key_nested_on_none": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_set_key_nested_on_string": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "KeyError",
    "calliope.test.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_set_key_second": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_union": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "calliope.utils.AttrDict"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_union_duplicate_keys": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "KeyError",
    "calliope.test.test_utils.pytest",
    "calliope.utils.AttrDict"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.test_union_replacement": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "calliope.utils.AttrDict.from_yaml_string"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.yaml_file": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "calliope.test.test_utils.pytest",
    "io.StringIO"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestAttrDict.yaml_string": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "calliope.test.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestCaptureOutput": {
  "data": {
   "lineno": 210
  },
  "type": "class"
 },
 "calliope.test.test_utils.TestCaptureOutput.example_funct": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "calliope.test.test_utils.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestCaptureOutput.test_capture_output": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "calliope.utils.capture_output"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestMemoization": {
  "data": {
   "lineno": 223
  },
  "type": "class"
 },
 "calliope.test.test_utils.TestMemoization.instance_method": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "calliope.utils.memoize_instancemethod"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestMemoization.test_memoize_instancemethod": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestMemoization.test_memoize_one_arg": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "test"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestMemoization.test_memoize_one_arg.test": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "calliope.utils.memoize"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestMemoization.test_memoize_two_args": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "test"
   ]
  },
  "type": "function"
 },
 "calliope.test.test_utils.TestMemoization.test_memoize_two_args.test": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "calliope.test.test_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "calliope.test.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "calliope.test.test_utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "calliope.test.test_utils.utils": {
  "data": {
   "shadows": "calliope.utils"
  },
  "type": "import"
 },
 "calliope.time_clustering": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "calliope.time_clustering._get_datavars": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "calliope.time_clustering._get_timesteps_per_day": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "calliope.time_clustering._get_y_coord": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "calliope.time_clustering._hourly_from_daily_index": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "dtrange",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.concat",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "calliope.time_clustering.cophenetic_corr": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "scipy.cluster.hierarchy.cophenet",
    "scipy.spatial.distance.pdist"
   ]
  },
  "type": "function"
 },
 "calliope.time_clustering.draw_dendrogram": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "calliope.time_clustering.fancy_dendrogram",
    "isinstance",
    "matplotlib.colors.rgb2hex",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.subplot",
    "scipy.cluster.hierarchy.set_link_color_palette",
    "seaborn.color_palette",
    "seaborn.despine"
   ]
  },
  "type": "function"
 },
 "calliope.time_clustering.fancy_dendrogram": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "matplotlib.pyplot.annotate",
    "matplotlib.pyplot.axhline",
    "matplotlib.pyplot.plot",
    "matplotlib.pyplot.xlabel",
    "matplotlib.pyplot.ylabel",
    "scipy.cluster.hierarchy.dendrogram",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "calliope.time_clustering.find_nearest_vector_index": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "calliope.time_clustering.get_closest_days_from_clusters": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "calliope.time_clustering._get_timesteps_per_day",
    "calliope.time_clustering._hourly_from_daily_index",
    "calliope.time_clustering.find_nearest_vector_index",
    "dict",
    "int",
    "len",
    "list",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "calliope.time_clustering.get_clusters_hierarchical": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "calliope.time_clustering._get_timesteps_per_day",
    "calliope.time_clustering.reshape_for_clustering",
    "pandas.Series",
    "scipy.cluster.hierarchy.fcluster",
    "scipy.cluster.hierarchy.linkage"
   ]
  },
  "type": "function"
 },
 "calliope.time_clustering.get_clusters_kmeans": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "calliope.time_clustering._get_timesteps_per_day",
    "calliope.time_clustering.reshape_clustered",
    "calliope.time_clustering.reshape_for_clustering",
    "pandas.Series",
    "scipy.cluster.vq.kmeans",
    "scipy.cluster.vq.vq"
   ]
  },
  "type": "function"
 },
 "calliope.time_clustering.get_mean_from_clusters": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "calliope.time_clustering._get_datavars",
    "calliope.time_clustering._get_y_coord",
    "len",
    "numpy.empty",
    "pandas.Series",
    "pandas.Timestamp",
    "range",
    "xarray.DataArray",
    "xarray.Dataset",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "calliope.time_clustering.hierarchy": {
  "data": {
   "shadows": "scipy.cluster.hierarchy"
  },
  "type": "import"
 },
 "calliope.time_clustering.map_clusters_to_data": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "calliope.time_clustering._get_timesteps_per_day",
    "calliope.time_clustering._hourly_from_daily_index",
    "calliope.time_clustering.get_closest_days_from_clusters",
    "calliope.time_clustering.get_mean_from_clusters",
    "int",
    "len",
    "numpy.ones",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.concat",
    "pandas.date_range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "calliope.time_clustering.matplotlib.patches": {
  "data": {
   "shadows": "matplotlib.patches"
  },
  "type": "import"
 },
 "calliope.time_clustering.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "calliope.time_clustering.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "calliope.time_clustering.pdist": {
  "data": {
   "shadows": "scipy.spatial.distance.pdist"
  },
  "type": "import"
 },
 "calliope.time_clustering.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "calliope.time_clustering.reshape_clustered": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "calliope.time_clustering._get_timesteps_per_day",
    "len",
    "list",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "calliope.time_clustering.reshape_for_clustering": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "calliope.time_clustering._get_timesteps_per_day",
    "int",
    "len",
    "list",
    "numpy.nan_to_num"
   ]
  },
  "type": "function"
 },
 "calliope.time_clustering.rgb2hex": {
  "data": {
   "shadows": "matplotlib.colors.rgb2hex"
  },
  "type": "import"
 },
 "calliope.time_clustering.sns": {
  "data": {
   "shadows": "seaborn"
  },
  "type": "import"
 },
 "calliope.time_clustering.vq": {
  "data": {
   "shadows": "scipy.cluster.vq"
  },
  "type": "import"
 },
 "calliope.time_clustering.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "calliope.time_funcs": {
  "data": {},
  "type": "module"
 },
 "calliope.time_funcs._RESAMPLE_METHODS": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "calliope.time_funcs._combine_datasets": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "calliope.time_funcs._copy_non_t_vars": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "calliope.time_funcs.apply_clustering": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "calliope.time_funcs._combine_datasets",
    "calliope.time_funcs._copy_non_t_vars",
    "calliope.time_funcs.normalized_copy",
    "func"
   ]
  },
  "type": "function"
 },
 "calliope.time_funcs.drop": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "len",
    "pandas.Series",
    "pandas.Timedelta",
    "pandas.concat",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "calliope.time_funcs.fabs": {
  "data": {
   "shadows": "xarray.ufuncs.fabs"
  },
  "type": "import"
 },
 "calliope.time_funcs.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "calliope.time_funcs.normalized_copy": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "xarray.ufuncs.fabs"
   ]
  },
  "type": "function"
 },
 "calliope.time_funcs.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "calliope.time_funcs.resample": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "calliope.time_funcs._RESAMPLE_METHODS",
    "calliope.time_funcs._combine_datasets",
    "calliope.time_funcs._copy_non_t_vars",
    "calliope.time_funcs.logging"
   ]
  },
  "type": "function"
 },
 "calliope.time_funcs.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "calliope.transmission": {
  "data": {},
  "type": "module"
 },
 "calliope.transmission.explode_transmission_tree": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "KeyError",
    "list",
    "reversed"
   ]
  },
  "type": "function"
 },
 "calliope.transmission.get_remotes": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "calliope.transmission.get_transmission_techs": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "calliope.utils": {
  "data": {
   "symbols_in_volume": [
    "calliope.utils.__Missing",
    "calliope.utils.functools"
   ]
  },
  "type": "module"
 },
 "calliope.utils.AttrDict": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "dict",
    "dict.__delitem__",
    "dict.__getitem__",
    "dict.__setitem__"
   ]
  },
  "type": "class"
 },
 "calliope.utils.AttrDict.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "calliope.utils.AttrDict",
    "dict",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "calliope.utils.AttrDict.as_dict": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "calliope.utils.AttrDict.as_dict_flat": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "calliope.utils.AttrDict.as_dict_nested": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "calliope.utils.AttrDict",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "calliope.utils.AttrDict.copy": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "calliope.utils.AttrDict",
    "dict"
   ]
  },
  "type": "function"
 },
 "calliope.utils.AttrDict.del_key": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "calliope.utils.AttrDict.from_yaml": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "calliope.utils._yaml_load",
    "calliope.utils.relative_path",
    "classmethod",
    "cls",
    "cls.from_yaml",
    "isinstance",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.utils.AttrDict.from_yaml_string": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "calliope.utils._yaml_load",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "calliope.utils.AttrDict.get_key": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "calliope.utils._MISSING"
   ]
  },
  "type": "function"
 },
 "calliope.utils.AttrDict.init_from_dict": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "calliope.utils.AttrDict",
    "dict",
    "int",
    "isinstance",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.utils.AttrDict.keys_nested": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "calliope.utils.AttrDict",
    "dict",
    "isinstance",
    "sorted"
   ]
  },
  "type": "function"
 },
 "calliope.utils.AttrDict.set_key": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "calliope.utils.AttrDict"
   ]
  },
  "type": "function"
 },
 "calliope.utils.AttrDict.to_yaml": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "calliope.utils.yaml",
    "float",
    "int",
    "isinstance",
    "numpy.floating",
    "numpy.integer",
    "open"
   ]
  },
  "type": "function"
 },
 "calliope.utils.AttrDict.union": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "calliope.utils.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "calliope.utils._MISSING": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "calliope.utils.__Missing": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "calliope.utils.__Missing.__nonzero__": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "calliope.utils.__Missing.__repr__": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "calliope.utils._load_function": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "ImportError",
    "calliope.utils.importlib",
    "calliope.utils.sys",
    "getattr"
   ]
  },
  "type": "function"
 },
 "calliope.utils._yaml_load": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "AttributeError",
    "calliope.utils.logging",
    "calliope.utils.yaml",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.utils.any_option_getter": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "calliope.utils.cost_getter",
    "calliope.utils.cost_per_distance_getter"
   ]
  },
  "type": "function"
 },
 "calliope.utils.any_option_getter.get_any_option": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "e",
    "get_cost_pd"
   ]
  },
  "type": "function"
 },
 "calliope.utils.capture_output": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "calliope.utils.sys",
    "contextlib.contextmanager",
    "io.StringIO"
   ]
  },
  "type": "function"
 },
 "calliope.utils.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "calliope.utils.cost_getter": {
  "data": {
   "lineno": 504
  },
  "type": "function"
 },
 "calliope.utils.cost_getter.get_cost": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "option_getter_func"
   ]
  },
  "type": "function"
 },
 "calliope.utils.cost_per_distance_getter": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "calliope.utils.option_getter",
    "option_getter_func"
   ]
  },
  "type": "function"
 },
 "calliope.utils.cost_per_distance_getter.get_cost_per_distance": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "KeyError",
    "_cost",
    "calliope.utils.cost_getter",
    "e",
    "option_getter_func"
   ]
  },
  "type": "function"
 },
 "calliope.utils.depreciation_getter": {
  "data": {
   "lineno": 539
  },
  "type": "function"
 },
 "calliope.utils.depreciation_getter.get_depreciation_rate": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "option_getter_func"
   ]
  },
  "type": "function"
 },
 "calliope.utils.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "calliope.utils.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "calliope.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "calliope.utils.memoize": {
  "data": {
   "lineno": 351
  },
  "type": "constant"
 },
 "calliope.utils.memoize_instancemethod": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "calliope.utils.memoize_instancemethod.__call__": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "frozenset",
    "list"
   ]
  },
  "type": "function"
 },
 "calliope.utils.memoize_instancemethod.__get__": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "calliope.utils.functools"
   ]
  },
  "type": "function"
 },
 "calliope.utils.memoize_instancemethod.__init__": {
  "data": {
   "lineno": 371
  },
  "type": "function"
 },
 "calliope.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "calliope.utils.option_getter": {
  "data": {
   "lineno": 440
  },
  "type": "function"
 },
 "calliope.utils.option_getter.get_option": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "KeyError",
    "_get_location_option",
    "_get_option",
    "float"
   ]
  },
  "type": "function"
 },
 "calliope.utils.option_getter.get_option._get_location_option": {
  "data": {
   "lineno": 481
  },
  "type": "function"
 },
 "calliope.utils.option_getter.get_option._get_option": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "KeyError",
    "_get_option",
    "e",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "calliope.utils.plugin_load": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "ValueError",
    "calliope.utils._load_function"
   ]
  },
  "type": "function"
 },
 "calliope.utils.relative_path": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "calliope.utils.os",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "calliope.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "calliope.utils.vincenty": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "abs",
    "numpy.arctan",
    "numpy.arctan2",
    "numpy.cos",
    "numpy.radians",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.tan",
    "range",
    "round"
   ]
  },
  "type": "function"
 },
 "calliope.utils.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 }
}