{
 "botorch": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.acquisition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.acquisition.acquisition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.acquisition.acquisition.AcquisitionFunction": {
  "lineno": 24,
  "symbols_in_volume": [
   "abc.ABC",
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "botorch.acquisition.acquisition.AcquisitionFunction.__init__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "botorch.acquisition.acquisition.AcquisitionFunction.forward": {
  "lineno": 54,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.acquisition.acquisition.AcquisitionFunction.set_X_pending": {
  "lineno": 36,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional",
   "warnings.warn"
  ],
  "type": "function"
 },
 "botorch.acquisition.acquisition.OneShotAcquisitionFunction": {
  "lineno": 69,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "botorch.acquisition.acquisition.OneShotAcquisitionFunction.extract_candidates": {
  "lineno": 85,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.acquisition.acquisition.OneShotAcquisitionFunction.get_augmented_q_batch_size": {
  "lineno": 72,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "botorch.acquisition.active_learning": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.acquisition.active_learning.qNegIntegratedPosteriorVariance": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.acquisition.active_learning.qNegIntegratedPosteriorVariance.__init__": {
  "lineno": 50,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.acquisition.active_learning.qNegIntegratedPosteriorVariance.forward": {
  "lineno": 88,
  "symbols_in_volume": [
   "botorch.settings.propagate_grads",
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.acquisition.analytic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.acquisition.analytic.AnalyticAcquisitionFunction": {
  "lineno": 33,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "botorch.acquisition.analytic.AnalyticAcquisitionFunction.__init__": {
  "lineno": 36,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.acquisition.analytic.AnalyticAcquisitionFunction._get_posterior": {
  "lineno": 58,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.acquisition.analytic.AnalyticAcquisitionFunction.set_X_pending": {
  "lineno": 78,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.acquisition.analytic.ConstrainedExpectedImprovement": {
  "lineno": 310,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.acquisition.analytic.ConstrainedExpectedImprovement.__init__": {
  "lineno": 333,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.as_tensor",
   "typing.Dict",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "botorch.acquisition.analytic.ConstrainedExpectedImprovement._compute_prob_feas": {
  "lineno": 438,
  "symbols_in_volume": [
   "torch.Size",
   "torch.Tensor",
   "torch.ones",
   "torch.prod"
  ],
  "type": "function"
 },
 "botorch.acquisition.analytic.ConstrainedExpectedImprovement._preprocess_constraint_bounds": {
  "lineno": 396,
  "symbols_in_volume": [
   "torch.float",
   "torch.tensor",
   "typing.Dict",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "botorch.acquisition.analytic.ConstrainedExpectedImprovement.forward": {
  "lineno": 363,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributions.Normal",
   "torch.exp",
   "torch.ones",
   "torch.zeros"
  ],
  "type": "function"
 },
 "botorch.acquisition.analytic.ExpectedImprovement": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.acquisition.analytic.ExpectedImprovement.__init__": {
  "lineno": 102,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.is_tensor",
   "torch.tensor",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "botorch.acquisition.analytic.ExpectedImprovement.forward": {
  "lineno": 124,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributions.Normal",
   "torch.exp",
   "torch.ones_like",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "botorch.acquisition.analytic.NoisyExpectedImprovement": {
  "lineno": 474,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.acquisition.analytic.NoisyExpectedImprovement.__init__": {
  "lineno": 494,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "botorch.acquisition.analytic.NoisyExpectedImprovement.forward": {
  "lineno": 534,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.acquisition.analytic.PosteriorMean": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.acquisition.analytic.PosteriorMean.forward": {
  "lineno": 167,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.acquisition.analytic.ProbabilityOfImprovement": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.acquisition.analytic.ProbabilityOfImprovement.__init__": {
  "lineno": 199,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.is_tensor",
   "torch.tensor",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "botorch.acquisition.analytic.ProbabilityOfImprovement.forward": {
  "lineno": 221,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributions.Normal",
   "torch.ones_like",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "botorch.acquisition.analytic.UpperConfidenceBound": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.acquisition.analytic.UpperConfidenceBound.__init__": {
  "lineno": 263,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.is_tensor",
   "torch.tensor",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "botorch.acquisition.analytic.UpperConfidenceBound.forward": {
  "lineno": 286,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.acquisition.analytic._construct_dist": {
  "lineno": 548,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.distributions.Normal"
  ],
  "type": "function"
 },
 "botorch.acquisition.analytic._get_noiseless_fantasy_model": {
  "lineno": 554,
  "symbols_in_volume": [
   "copy.deepcopy",
   "torch.Tensor",
   "torch.full_like"
  ],
  "type": "function"
 },
 "botorch.acquisition.cost_aware": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.acquisition.cost_aware.CostAwareUtility": {
  "lineno": 29,
  "symbols_in_volume": [
   "abc.ABC",
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "botorch.acquisition.cost_aware.CostAwareUtility.forward": {
  "lineno": 32,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "torch.Tensor",
   "typing.Any"
  ],
  "type": "function"
 },
 "botorch.acquisition.cost_aware.GenericCostAwareUtility": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.acquisition.cost_aware.GenericCostAwareUtility.__init__": {
  "lineno": 52,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Callable"
  ],
  "type": "function"
 },
 "botorch.acquisition.cost_aware.GenericCostAwareUtility.forward": {
  "lineno": 62,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Any"
  ],
  "type": "function"
 },
 "botorch.acquisition.cost_aware.InverseCostWeightedUtility": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.acquisition.cost_aware.InverseCostWeightedUtility.__init__": {
  "lineno": 92,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.acquisition.cost_aware.InverseCostWeightedUtility.forward": {
  "lineno": 125,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.any",
   "typing.Any",
   "typing.Optional",
   "warnings.warn"
  ],
  "type": "function"
 },
 "botorch.acquisition.fixed_feature": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.acquisition.fixed_feature.FixedFeatureAcquisitionFunction": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.acquisition.fixed_feature.FixedFeatureAcquisitionFunction.__init__": {
  "lineno": 35,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.as_tensor",
   "torch.nn.Module.__init__",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "botorch.acquisition.fixed_feature.FixedFeatureAcquisitionFunction._construct_X_full": {
  "lineno": 87,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.cat"
  ],
  "type": "function"
 },
 "botorch.acquisition.fixed_feature.FixedFeatureAcquisitionFunction.forward": {
  "lineno": 73,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.acquisition.knowledge_gradient": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.acquisition.knowledge_gradient._get_value_function": {
  "lineno": 358,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "botorch.acquisition.knowledge_gradient._split_fantasy_points": {
  "lineno": 370,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.split",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "botorch.acquisition.knowledge_gradient.qKnowledgeGradient": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.acquisition.knowledge_gradient.qKnowledgeGradient.__init__": {
  "lineno": 59,
  "symbols_in_volume": [
   "torch.Size",
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.acquisition.knowledge_gradient.qKnowledgeGradient.extract_candidates": {
  "lineno": 191,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.acquisition.knowledge_gradient.qKnowledgeGradient.forward": {
  "lineno": 125,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.cat"
  ],
  "type": "function"
 },
 "botorch.acquisition.knowledge_gradient.qKnowledgeGradient.get_augmented_q_batch_size": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "botorch.acquisition.knowledge_gradient.qMultiFidelityKnowledgeGradient": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.acquisition.knowledge_gradient.qMultiFidelityKnowledgeGradient.__init__": {
  "lineno": 212,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Callable",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.acquisition.knowledge_gradient.qMultiFidelityKnowledgeGradient.cost_sampler": {
  "lineno": 276,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "botorch.acquisition.knowledge_gradient.qMultiFidelityKnowledgeGradient.forward": {
  "lineno": 290,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.cat"
  ],
  "type": "function"
 },
 "botorch.acquisition.max_value_entropy_search": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.acquisition.max_value_entropy_search._sample_max_value_Gumbel": {
  "lineno": 475,
  "symbols_in_volume": [
   "math.log",
   "scipy.optimize.brentq",
   "torch.Tensor",
   "torch.distributions.normal.Normal",
   "torch.rand",
   "torch.tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "botorch.acquisition.max_value_entropy_search._sample_max_value_Thompson": {
  "lineno": 447,
  "symbols_in_volume": [
   "torch.Size",
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.acquisition.max_value_entropy_search.qMaxValueEntropy": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.acquisition.max_value_entropy_search.qMaxValueEntropy.__init__": {
  "lineno": 64,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.cat",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.acquisition.max_value_entropy_search.qMaxValueEntropy._compute_information_gain": {
  "lineno": 201,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.cholesky",
   "torch.cholesky_solve",
   "torch.distributions.Normal",
   "torch.matmul",
   "torch.ones",
   "torch.zeros"
  ],
  "type": "function"
 },
 "botorch.acquisition.max_value_entropy_search.qMaxValueEntropy._sample_max_values": {
  "lineno": 148,
  "symbols_in_volume": [
   "torch.cat",
   "torch.no_grad",
   "torch.tensor"
  ],
  "type": "function"
 },
 "botorch.acquisition.max_value_entropy_search.qMaxValueEntropy.forward": {
  "lineno": 176,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.acquisition.max_value_entropy_search.qMaxValueEntropy.set_X_pending": {
  "lineno": 120,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.acquisition.max_value_entropy_search.qMultiFidelityMaxValueEntropy": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.acquisition.max_value_entropy_search.qMultiFidelityMaxValueEntropy.__init__": {
  "lineno": 325,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Callable",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.acquisition.max_value_entropy_search.qMultiFidelityMaxValueEntropy.cost_sampler": {
  "lineno": 396,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "botorch.acquisition.max_value_entropy_search.qMultiFidelityMaxValueEntropy.forward": {
  "lineno": 410,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.cat"
  ],
  "type": "function"
 },
 "botorch.acquisition.monte_carlo": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.acquisition.monte_carlo.MCAcquisitionFunction": {
  "lineno": 43,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "botorch.acquisition.monte_carlo.MCAcquisitionFunction.__init__": {
  "lineno": 46,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.acquisition.monte_carlo.MCAcquisitionFunction.forward": {
  "lineno": 83,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.acquisition.monte_carlo.qExpectedImprovement": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.acquisition.monte_carlo.qExpectedImprovement.__init__": {
  "lineno": 112,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.is_tensor",
   "torch.tensor",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "botorch.acquisition.monte_carlo.qExpectedImprovement.forward": {
  "lineno": 146,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.acquisition.monte_carlo.qNoisyExpectedImprovement": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.acquisition.monte_carlo.qNoisyExpectedImprovement.__init__": {
  "lineno": 185,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.acquisition.monte_carlo.qNoisyExpectedImprovement.forward": {
  "lineno": 225,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.cat"
  ],
  "type": "function"
 },
 "botorch.acquisition.monte_carlo.qProbabilityOfImprovement": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.acquisition.monte_carlo.qProbabilityOfImprovement.__init__": {
  "lineno": 268,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.is_tensor",
   "torch.tensor",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "botorch.acquisition.monte_carlo.qProbabilityOfImprovement.forward": {
  "lineno": 305,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.sigmoid"
  ],
  "type": "function"
 },
 "botorch.acquisition.monte_carlo.qSimpleRegret": {
  "lineno": 326,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.acquisition.monte_carlo.qSimpleRegret.forward": {
  "lineno": 341,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.acquisition.monte_carlo.qUpperConfidenceBound": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.acquisition.monte_carlo.qUpperConfidenceBound.__init__": {
  "lineno": 377,
  "symbols_in_volume": [
   "math.pi",
   "math.sqrt",
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.acquisition.monte_carlo.qUpperConfidenceBound.forward": {
  "lineno": 404,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.acquisition.objective": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.acquisition.objective.AcquisitionObjective": {
  "lineno": 24,
  "symbols_in_volume": [
   "abc.ABC",
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "botorch.acquisition.objective.ConstrainedMCObjective": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.acquisition.objective.ConstrainedMCObjective.__init__": {
  "lineno": 215,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.tensor",
   "typing.Callable",
   "typing.List"
  ],
  "type": "function"
 },
 "botorch.acquisition.objective.ConstrainedMCObjective.forward": {
  "lineno": 242,
  "symbols_in_volume": [
   "botorch.utils.apply_constraints",
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.acquisition.objective.GenericMCObjective": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.acquisition.objective.GenericMCObjective.__init__": {
  "lineno": 167,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Callable"
  ],
  "type": "function"
 },
 "botorch.acquisition.objective.GenericMCObjective.forward": {
  "lineno": 178,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.acquisition.objective.IdentityMCObjective": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.acquisition.objective.IdentityMCObjective.forward": {
  "lineno": 108,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.acquisition.objective.LinearMCObjective": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.acquisition.objective.LinearMCObjective.__init__": {
  "lineno": 127,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.acquisition.objective.LinearMCObjective.forward": {
  "lineno": 139,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.einsum"
  ],
  "type": "function"
 },
 "botorch.acquisition.objective.MCAcquisitionObjective": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.acquisition.objective.MCAcquisitionObjective.forward": {
  "lineno": 77,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.acquisition.objective.ScalarizedObjective": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.acquisition.objective.ScalarizedObjective.__init__": {
  "lineno": 45,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.acquisition.objective.ScalarizedObjective.forward": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "botorch.acquisition.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.acquisition.utils.expand_trace_observations": {
  "lineno": 273,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.linspace",
   "torch.ones_like",
   "torch.repeat_interleave",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.acquisition.utils.get_acquisition_function": {
  "lineno": 29,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.acquisition.utils.get_infeasible_cost": {
  "lineno": 117,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Callable"
  ],
  "type": "function"
 },
 "botorch.acquisition.utils.is_nonnegative": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "botorch.acquisition.utils.project_to_target_fidelity": {
  "lineno": 238,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.ones",
   "torch.stack",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.acquisition.utils.prune_inferior_points": {
  "lineno": 174,
  "symbols_in_volume": [
   "math.ceil",
   "torch.Tensor",
   "torch.argmax",
   "torch.no_grad",
   "torch.sort",
   "torch.unique",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.cross_validation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.cross_validation.CVFolds": {
  "lineno": 25,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.NamedTuple",
   "typing.Optional"
  ],
  "type": "class"
 },
 "botorch.cross_validation.CVResults": {
  "lineno": 34,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.NamedTuple",
   "typing.Optional"
  ],
  "type": "class"
 },
 "botorch.cross_validation.batch_cross_validation": {
  "lineno": 109,
  "symbols_in_volume": [
   "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood",
   "torch.no_grad",
   "typing.Any",
   "typing.Dict",
   "typing.Optional",
   "typing.Type"
  ],
  "type": "function"
 },
 "botorch.cross_validation.gen_loo_cv_folds": {
  "lineno": 41,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.bool",
   "torch.cat",
   "torch.eye",
   "torch.uint8",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.exceptions.errors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.exceptions.errors.BotorchError": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.exceptions.errors.BotorchTensorDimensionError": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.exceptions.errors.CandidateGenerationError": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.exceptions.errors.InputDataError": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.exceptions.errors.UnsupportedError": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.exceptions.warnings": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.exceptions.warnings.BadInitialCandidatesWarning": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.exceptions.warnings.BotorchTensorDimensionWarning": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.exceptions.warnings.BotorchWarning": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.exceptions.warnings.CostAwareWarning": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.exceptions.warnings.InputDataWarning": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.exceptions.warnings.OptimizationWarning": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.exceptions.warnings.SamplingWarning": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.fit": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.fit.fit_gpytorch_model": {
  "lineno": 35,
  "symbols_in_volume": [
   "copy.deepcopy",
   "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood",
   "gpytorch.mlls.sum_marginal_log_likelihood.SumMarginalLogLikelihood",
   "logging.DEBUG",
   "logging.log",
   "typing.Any",
   "typing.Callable",
   "warnings.catch_warnings",
   "warnings.warn"
  ],
  "type": "function"
 },
 "botorch.gen": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.gen.gen_candidates_scipy": {
  "lineno": 34,
  "symbols_in_volume": [
   "scipy.optimize.minimize",
   "torch.Tensor",
   "torch.from_numpy",
   "torch.nn.Module",
   "torch.no_grad",
   "typing.Any",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "botorch.gen.gen_candidates_scipy.f": {
  "lineno": 105,
  "symbols_in_volume": [
   "torch.autograd.grad",
   "torch.from_numpy"
  ],
  "type": "function"
 },
 "botorch.gen.gen_candidates_torch": {
  "lineno": 141,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.no_grad",
   "torch.optim.Adam",
   "torch.optim.Optimizer",
   "typing.Callable",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Tuple",
   "typing.Type",
   "typing.Union"
  ],
  "type": "function"
 },
 "botorch.gen.gen_candidates_torch.closure": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "botorch.gen.get_best_candidates": {
  "lineno": 233,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.argmax"
  ],
  "type": "function"
 },
 "botorch.models": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.models.converter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.models.converter._check_compatibility": {
  "lineno": 47,
  "symbols_in_volume": [
   "torch.equal"
  ],
  "type": "function"
 },
 "botorch.models.converter._get_module": {
  "lineno": 25,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "function"
 },
 "botorch.models.converter.batched_to_model_list": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "botorch.models.converter.model_list_to_batched": {
  "lineno": 88,
  "symbols_in_volume": [
   "copy.deepcopy",
   "torch.equal",
   "torch.stack"
  ],
  "type": "function"
 },
 "botorch.models.cost": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.models.cost.AffineFidelityCostModel": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.models.cost.AffineFidelityCostModel.__init__": {
  "lineno": 30,
  "symbols_in_volume": [
   "torch.tensor",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.models.cost.AffineFidelityCostModel.forward": {
  "lineno": 54,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.einsum"
  ],
  "type": "function"
 },
 "botorch.models.deterministic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.models.deterministic.AffineDeterministicModel": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.models.deterministic.AffineDeterministicModel.__init__": {
  "lineno": 108,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.is_tensor",
   "torch.tensor",
   "typing.Union"
  ],
  "type": "function"
 },
 "botorch.models.deterministic.AffineDeterministicModel.forward": {
  "lineno": 146,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.einsum"
  ],
  "type": "function"
 },
 "botorch.models.deterministic.AffineDeterministicModel.subset_output": {
  "lineno": 133,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "botorch.models.deterministic.DeterministicModel": {
  "lineno": 26,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "botorch.models.deterministic.DeterministicModel.forward": {
  "lineno": 29,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.models.deterministic.DeterministicModel.num_outputs": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "botorch.models.deterministic.DeterministicModel.posterior": {
  "lineno": 47,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Any",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.models.deterministic.GenericDeterministicModel": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.models.deterministic.GenericDeterministicModel.__init__": {
  "lineno": 65,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Callable"
  ],
  "type": "function"
 },
 "botorch.models.deterministic.GenericDeterministicModel.forward": {
  "lineno": 93,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.models.deterministic.GenericDeterministicModel.subset_output": {
  "lineno": 78,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "botorch.models.deterministic.GenericDeterministicModel.subset_output.f_subset": {
  "lineno": 88,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.models.gp_regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.models.gp_regression.FixedNoiseGP": {
  "lineno": 141,
  "symbols_in_volume": [
   "gpytorch.models.exact_gp.ExactGP"
  ],
  "type": "class"
 },
 "botorch.models.gp_regression.FixedNoiseGP.__init__": {
  "lineno": 152,
  "symbols_in_volume": [
   "gpytorch.kernels.matern_kernel.MaternKernel",
   "gpytorch.kernels.scale_kernel.ScaleKernel",
   "gpytorch.likelihoods.gaussian_likelihood.FixedNoiseGaussianLikelihood",
   "gpytorch.means.constant_mean.ConstantMean",
   "gpytorch.models.exact_gp.ExactGP.__init__",
   "gpytorch.module.Module",
   "gpytorch.priors.torch_priors.GammaPrior",
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.models.gp_regression.FixedNoiseGP.fantasize": {
  "lineno": 217,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Any",
   "typing.Union"
  ],
  "type": "function"
 },
 "botorch.models.gp_regression.FixedNoiseGP.forward": {
  "lineno": 260,
  "symbols_in_volume": [
   "gpytorch.distributions.multivariate_normal.MultivariateNormal",
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.models.gp_regression.FixedNoiseGP.subset_output": {
  "lineno": 265,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "botorch.models.gp_regression.HeteroskedasticSingleTaskGP": {
  "lineno": 281,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.models.gp_regression.HeteroskedasticSingleTaskGP.__init__": {
  "lineno": 289,
  "symbols_in_volume": [
   "gpytorch.constraints.constraints.GreaterThan",
   "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood",
   "gpytorch.likelihoods.gaussian_likelihood._GaussianLikelihoodBase",
   "gpytorch.likelihoods.noise_models.HeteroskedasticNoise",
   "gpytorch.mlls.noise_model_added_loss_term.NoiseModelAddedLossTerm",
   "gpytorch.priors.smoothed_box_prior.SmoothedBoxPrior",
   "torch.Tensor",
   "torch.log",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.models.gp_regression.HeteroskedasticSingleTaskGP.condition_on_observations": {
  "lineno": 345,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Any"
  ],
  "type": "function"
 },
 "botorch.models.gp_regression.HeteroskedasticSingleTaskGP.subset_output": {
  "lineno": 350,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "botorch.models.gp_regression.SingleTaskGP": {
  "lineno": 45,
  "symbols_in_volume": [
   "gpytorch.models.exact_gp.ExactGP"
  ],
  "type": "class"
 },
 "botorch.models.gp_regression.SingleTaskGP.__init__": {
  "lineno": 62,
  "symbols_in_volume": [
   "gpytorch.constraints.constraints.GreaterThan",
   "gpytorch.kernels.matern_kernel.MaternKernel",
   "gpytorch.kernels.scale_kernel.ScaleKernel",
   "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood",
   "gpytorch.likelihoods.likelihood.Likelihood",
   "gpytorch.means.constant_mean.ConstantMean",
   "gpytorch.models.exact_gp.ExactGP.__init__",
   "gpytorch.module.Module",
   "gpytorch.priors.torch_priors.GammaPrior",
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.models.gp_regression.SingleTaskGP.forward": {
  "lineno": 135,
  "symbols_in_volume": [
   "gpytorch.distributions.multivariate_normal.MultivariateNormal",
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.models.gp_regression_fidelity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.models.gp_regression_fidelity.FixedNoiseMultiFidelityGP": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.models.gp_regression_fidelity.FixedNoiseMultiFidelityGP.__init__": {
  "lineno": 157,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.models.gp_regression_fidelity.SingleTaskMultiFidelityGP": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.models.gp_regression_fidelity.SingleTaskMultiFidelityGP.__init__": {
  "lineno": 70,
  "symbols_in_volume": [
   "gpytorch.likelihoods.likelihood.Likelihood",
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.models.gp_regression_fidelity._setup_multifidelity_covar_module": {
  "lineno": 197,
  "symbols_in_volume": [
   "gpytorch.kernels.kernel.ProductKernel",
   "gpytorch.kernels.rbf_kernel.RBFKernel",
   "gpytorch.kernels.scale_kernel.ScaleKernel",
   "gpytorch.priors.torch_priors.GammaPrior",
   "torch.Size",
   "typing.Dict",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "botorch.models.gpytorch": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.models.gpytorch.BatchedMultiOutputGPyTorchModel": {
  "lineno": 188,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "class"
 },
 "botorch.models.gpytorch.BatchedMultiOutputGPyTorchModel._set_dimensions": {
  "lineno": 224,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.models.gpytorch.BatchedMultiOutputGPyTorchModel._transform_tensor_args": {
  "lineno": 238,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "botorch.models.gpytorch.BatchedMultiOutputGPyTorchModel.condition_on_observations": {
  "lineno": 333,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Any"
  ],
  "type": "function"
 },
 "botorch.models.gpytorch.BatchedMultiOutputGPyTorchModel.get_batch_dimensions": {
  "lineno": 199,
  "symbols_in_volume": [
   "torch.Size",
   "torch.Tensor",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "botorch.models.gpytorch.BatchedMultiOutputGPyTorchModel.posterior": {
  "lineno": 268,
  "symbols_in_volume": [
   "gpytorch.distributions.MultitaskMultivariateNormal.from_independent_mvns",
   "gpytorch.distributions.MultivariateNormal",
   "gpytorch.lazy.lazify",
   "gpytorch.likelihoods.gaussian_likelihood.FixedNoiseGaussianLikelihood",
   "torch.Tensor",
   "torch.is_tensor",
   "typing.Any",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "botorch.models.gpytorch.BatchedMultiOutputGPyTorchModel.subset_output": {
  "lineno": 394,
  "symbols_in_volume": [
   "copy.deepcopy",
   "itertools.chain",
   "torch.Size",
   "torch.tensor",
   "typing.List"
  ],
  "type": "function"
 },
 "botorch.models.gpytorch.GPyTorchModel": {
  "lineno": 41,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "botorch.models.gpytorch.GPyTorchModel._validate_tensor_args": {
  "lineno": 48,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional",
   "warnings.warn"
  ],
  "type": "function"
 },
 "botorch.models.gpytorch.GPyTorchModel.condition_on_observations": {
  "lineno": 141,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Any"
  ],
  "type": "function"
 },
 "botorch.models.gpytorch.GPyTorchModel.num_outputs": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "botorch.models.gpytorch.GPyTorchModel.posterior": {
  "lineno": 106,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.is_tensor",
   "typing.Any",
   "typing.Union"
  ],
  "type": "function"
 },
 "botorch.models.gpytorch.ModelListGPyTorchModel": {
  "lineno": 439,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "botorch.models.gpytorch.ModelListGPyTorchModel.condition_on_observations": {
  "lineno": 527,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Any"
  ],
  "type": "function"
 },
 "botorch.models.gpytorch.ModelListGPyTorchModel.posterior": {
  "lineno": 446,
  "symbols_in_volume": [
   "gpytorch.distributions.MultitaskMultivariateNormal.from_independent_mvns",
   "gpytorch.likelihoods.gaussian_likelihood.FixedNoiseGaussianLikelihood",
   "torch.Tensor",
   "torch.is_tensor",
   "typing.Any",
   "typing.Iterator",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "botorch.models.gpytorch.MultiTaskGPyTorchModel": {
  "lineno": 536,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "botorch.models.gpytorch.MultiTaskGPyTorchModel.posterior": {
  "lineno": 543,
  "symbols_in_volume": [
   "gpytorch.distributions.MultitaskMultivariateNormal",
   "torch.Tensor",
   "typing.Any",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "botorch.models.kernels": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.models.kernels.downsampling": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.models.kernels.downsampling.DownsamplingKernel": {
  "lineno": 18,
  "symbols_in_volume": [
   "gpytorch.kernels.Kernel"
  ],
  "type": "class"
 },
 "botorch.models.kernels.downsampling.DownsamplingKernel.__init__": {
  "lineno": 39,
  "symbols_in_volume": [
   "gpytorch.constraints.Interval",
   "gpytorch.constraints.Positive",
   "gpytorch.priors.Prior",
   "torch.nn.Parameter",
   "torch.zeros",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.models.kernels.downsampling.DownsamplingKernel._set_offset": {
  "lineno": 103,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.as_tensor",
   "torch.is_tensor"
  ],
  "type": "function"
 },
 "botorch.models.kernels.downsampling.DownsamplingKernel._set_power": {
  "lineno": 90,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.as_tensor",
   "torch.is_tensor"
  ],
  "type": "function"
 },
 "botorch.models.kernels.downsampling.DownsamplingKernel.forward": {
  "lineno": 108,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.models.kernels.downsampling.DownsamplingKernel.offset": {
  "lineno": 99,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.models.kernels.downsampling.DownsamplingKernel.power": {
  "lineno": 86,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.models.kernels.exponential_decay": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.models.kernels.exponential_decay.ExponentialDecayKernel": {
  "lineno": 18,
  "symbols_in_volume": [
   "gpytorch.kernels.Kernel"
  ],
  "type": "class"
 },
 "botorch.models.kernels.exponential_decay.ExponentialDecayKernel.__init__": {
  "lineno": 44,
  "symbols_in_volume": [
   "gpytorch.constraints.Interval",
   "gpytorch.constraints.Positive",
   "gpytorch.priors.Prior",
   "torch.nn.Parameter",
   "torch.zeros",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.models.kernels.exponential_decay.ExponentialDecayKernel._set_offset": {
  "lineno": 109,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.as_tensor",
   "torch.is_tensor"
  ],
  "type": "function"
 },
 "botorch.models.kernels.exponential_decay.ExponentialDecayKernel._set_power": {
  "lineno": 96,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.as_tensor",
   "torch.is_tensor"
  ],
  "type": "function"
 },
 "botorch.models.kernels.exponential_decay.ExponentialDecayKernel.forward": {
  "lineno": 114,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.models.kernels.exponential_decay.ExponentialDecayKernel.offset": {
  "lineno": 105,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.models.kernels.exponential_decay.ExponentialDecayKernel.power": {
  "lineno": 92,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.models.kernels.linear_truncated_fidelity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel": {
  "lineno": 22,
  "symbols_in_volume": [
   "gpytorch.kernels.Kernel"
  ],
  "type": "class"
 },
 "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel.__getitem__": {
  "lineno": 225,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel.__init__": {
  "lineno": 85,
  "symbols_in_volume": [
   "botorch.exceptions.UnsupportedError",
   "gpytorch.constraints.Interval",
   "gpytorch.constraints.Positive",
   "gpytorch.kernels.Kernel",
   "gpytorch.kernels.matern_kernel.MaternKernel",
   "gpytorch.priors.Prior",
   "gpytorch.priors.torch_priors.GammaPrior",
   "torch.nn.Parameter",
   "torch.zeros",
   "typing.Any",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel._set_power": {
  "lineno": 178,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.as_tensor",
   "torch.is_tensor"
  ],
  "type": "function"
 },
 "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel.forward": {
  "lineno": 183,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.cat"
  ],
  "type": "function"
 },
 "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel.power": {
  "lineno": 174,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.models.model": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.models.model.Model": {
  "lineno": 24,
  "symbols_in_volume": [
   "abc.ABC",
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "botorch.models.model.Model.condition_on_observations": {
  "lineno": 72,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Any"
  ],
  "type": "function"
 },
 "botorch.models.model.Model.fantasize": {
  "lineno": 95,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Any"
  ],
  "type": "function"
 },
 "botorch.models.model.Model.num_outputs": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "botorch.models.model.Model.posterior": {
  "lineno": 27,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "torch.Tensor",
   "typing.Any",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.models.model.Model.subset_output": {
  "lineno": 60,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "botorch.models.model_list_gp_regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.models.model_list_gp_regression.ModelListGP": {
  "lineno": 23,
  "symbols_in_volume": [
   "gpytorch.models.IndependentModelList"
  ],
  "type": "class"
 },
 "botorch.models.model_list_gp_regression.ModelListGP.__init__": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "botorch.models.model_list_gp_regression.ModelListGP.condition_on_observations": {
  "lineno": 52,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Any"
  ],
  "type": "function"
 },
 "botorch.models.model_list_gp_regression.ModelListGP.subset_output": {
  "lineno": 96,
  "symbols_in_volume": [
   "copy.deepcopy",
   "typing.List"
  ],
  "type": "function"
 },
 "botorch.models.multitask": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.models.multitask.FixedNoiseMultiTaskGP": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.models.multitask.FixedNoiseMultiTaskGP.__init__": {
  "lineno": 170,
  "symbols_in_volume": [
   "gpytorch.likelihoods.gaussian_likelihood.FixedNoiseGaussianLikelihood",
   "torch.Tensor",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.models.multitask.MultiTaskGP": {
  "lineno": 33,
  "symbols_in_volume": [
   "gpytorch.models.exact_gp.ExactGP"
  ],
  "type": "class"
 },
 "botorch.models.multitask.MultiTaskGP.__init__": {
  "lineno": 46,
  "symbols_in_volume": [
   "gpytorch.kernels.index_kernel.IndexKernel",
   "gpytorch.kernels.matern_kernel.MaternKernel",
   "gpytorch.kernels.scale_kernel.ScaleKernel",
   "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood",
   "gpytorch.means.constant_mean.ConstantMean",
   "gpytorch.priors.torch_priors.GammaPrior",
   "torch.Tensor",
   "torch.arange",
   "torch.long",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.models.multitask.MultiTaskGP._split_inputs": {
  "lineno": 121,
  "symbols_in_volume": [
   "torch.Size",
   "torch.Tensor",
   "torch.long",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "botorch.models.multitask.MultiTaskGP.forward": {
  "lineno": 147,
  "symbols_in_volume": [
   "gpytorch.distributions.multivariate_normal.MultivariateNormal",
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.models.transforms": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.models.transforms.input": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.models.transforms.input.ChainedInputTransform": {
  "lineno": 48,
  "symbols_in_volume": [
   "torch.nn.ModuleDict"
  ],
  "type": "class"
 },
 "botorch.models.transforms.input.ChainedInputTransform.__init__": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "botorch.models.transforms.input.ChainedInputTransform.forward": {
  "lineno": 61,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.models.transforms.input.ChainedInputTransform.untransform": {
  "lineno": 76,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.models.transforms.input.InputTransform": {
  "lineno": 19,
  "symbols_in_volume": [
   "abc.ABC",
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "botorch.models.transforms.input.InputTransform.forward": {
  "lineno": 22,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.models.transforms.input.InputTransform.untransform": {
  "lineno": 34,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.models.transforms.input.Normalize": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.models.transforms.input.Normalize.__init__": {
  "lineno": 101,
  "symbols_in_volume": [
   "torch.Size",
   "torch.Tensor",
   "torch.zeros",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.models.transforms.input.Normalize.bounds": {
  "lineno": 170,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.cat"
  ],
  "type": "function"
 },
 "botorch.models.transforms.input.Normalize.forward": {
  "lineno": 134,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.models.transforms.input.Normalize.untransform": {
  "lineno": 159,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.models.transforms.outcome": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.models.transforms.outcome.ChainedOutcomeTransform": {
  "lineno": 79,
  "symbols_in_volume": [
   "torch.nn.ModuleDict"
  ],
  "type": "class"
 },
 "botorch.models.transforms.outcome.ChainedOutcomeTransform.__init__": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "botorch.models.transforms.outcome.ChainedOutcomeTransform.forward": {
  "lineno": 92,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "botorch.models.transforms.outcome.ChainedOutcomeTransform.untransform": {
  "lineno": 112,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "botorch.models.transforms.outcome.ChainedOutcomeTransform.untransform_posterior": {
  "lineno": 132,
  "symbols_in_volume": [
   "botorch.posteriors.Posterior"
  ],
  "type": "function"
 },
 "botorch.models.transforms.outcome.Log": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.models.transforms.outcome.Log.__init__": {
  "lineno": 310,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.models.transforms.outcome.Log.forward": {
  "lineno": 320,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.log",
   "torch.stack",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "botorch.models.transforms.outcome.Log.untransform": {
  "lineno": 353,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.exp",
   "torch.stack",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "botorch.models.transforms.outcome.Log.untransform_posterior": {
  "lineno": 387,
  "symbols_in_volume": [
   "botorch.posteriors.Posterior",
   "botorch.posteriors.TransformedPosterior",
   "torch.exp"
  ],
  "type": "function"
 },
 "botorch.models.transforms.outcome.OutcomeTransform": {
  "lineno": 22,
  "symbols_in_volume": [
   "abc.ABC",
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "botorch.models.transforms.outcome.OutcomeTransform.forward": {
  "lineno": 25,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "torch.Tensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "botorch.models.transforms.outcome.OutcomeTransform.untransform": {
  "lineno": 44,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "botorch.models.transforms.outcome.OutcomeTransform.untransform_posterior": {
  "lineno": 64,
  "symbols_in_volume": [
   "botorch.posteriors.Posterior"
  ],
  "type": "function"
 },
 "botorch.models.transforms.outcome.Standardize": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.models.transforms.outcome.Standardize.__init__": {
  "lineno": 155,
  "symbols_in_volume": [
   "torch.Size",
   "torch.zeros",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.models.transforms.outcome.Standardize.forward": {
  "lineno": 180,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.full_like",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "botorch.models.transforms.outcome.Standardize.untransform": {
  "lineno": 220,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "botorch.models.transforms.outcome.Standardize.untransform_posterior": {
  "lineno": 240,
  "symbols_in_volume": [
   "botorch.posteriors.GPyTorchPosterior",
   "botorch.posteriors.Posterior",
   "botorch.posteriors.TransformedPosterior",
   "gpytorch.lazy.CholLazyTensor",
   "gpytorch.lazy.DiagLazyTensor",
   "torch.repeat_interleave"
  ],
  "type": "function"
 },
 "botorch.models.transforms.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.models.transforms.utils.lognorm_to_norm": {
  "lineno": 15,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.diagonal",
   "torch.log",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "botorch.models.transforms.utils.norm_to_lognorm": {
  "lineno": 40,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.diagonal",
   "torch.exp",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "botorch.models.transforms.utils.norm_to_lognorm_mean": {
  "lineno": 67,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.exp"
  ],
  "type": "function"
 },
 "botorch.models.transforms.utils.norm_to_lognorm_variance": {
  "lineno": 80,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.exp"
  ],
  "type": "function"
 },
 "botorch.models.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.models.utils._make_X_full": {
  "lineno": 25,
  "symbols_in_volume": [
   "torch.Size",
   "torch.Tensor",
   "torch.cat",
   "torch.full",
   "typing.List"
  ],
  "type": "function"
 },
 "botorch.models.utils.add_output_dim": {
  "lineno": 88,
  "symbols_in_volume": [
   "gpytorch.utils.broadcasting._mul_broadcast_shape",
   "torch.Size",
   "torch.Tensor",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "botorch.models.utils.check_min_max_scaling": {
  "lineno": 133,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.abs",
   "torch.any",
   "torch.max",
   "torch.min",
   "torch.no_grad",
   "warnings.warn"
  ],
  "type": "function"
 },
 "botorch.models.utils.check_no_nans": {
  "lineno": 121,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.any",
   "torch.isnan"
  ],
  "type": "function"
 },
 "botorch.models.utils.check_standardization": {
  "lineno": 163,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.abs",
   "torch.mean",
   "torch.no_grad",
   "torch.std",
   "warnings.warn"
  ],
  "type": "function"
 },
 "botorch.models.utils.mod_batch_shape": {
  "lineno": 230,
  "symbols_in_volume": [
   "gpytorch.module.Module",
   "torch.Size",
   "typing.List"
  ],
  "type": "function"
 },
 "botorch.models.utils.multioutput_to_batch_mode_transform": {
  "lineno": 48,
  "symbols_in_volume": [
   "torch.Size",
   "torch.Tensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "botorch.models.utils.validate_input_scaling": {
  "lineno": 191,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.any",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.optim": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.optim.fit": {
  "lineno": null,
  "symbols_in_volume": [
   "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood",
   "numpy.ndarray",
   "torch.nn.Module",
   "typing.Callable",
   "typing.Dict",
   "typing.Optional",
   "typing.Set",
   "typing.Tuple"
  ],
  "type": "module"
 },
 "botorch.optim.fit.OptimizationIteration": {
  "lineno": 47,
  "symbols_in_volume": [
   "time",
   "typing.NamedTuple"
  ],
  "type": "class"
 },
 "botorch.optim.fit.fit_gpytorch_scipy": {
  "lineno": 171,
  "symbols_in_volume": [
   "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood",
   "gpytorch.settings.fast_computations",
   "numpy.float64",
   "scipy.optimize.Bounds",
   "scipy.optimize.minimize",
   "time.time",
   "typing.Any",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union",
   "warnings.warn"
  ],
  "type": "function"
 },
 "botorch.optim.fit.fit_gpytorch_scipy.store_iteration": {
  "lineno": 228,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "botorch.optim.fit.fit_gpytorch_torch": {
  "lineno": 53,
  "symbols_in_volume": [
   "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood",
   "gpytorch.settings.fast_computations",
   "time.time",
   "torch.Tensor",
   "torch.optim.adam.Adam",
   "torch.optim.optimizer.Optimizer",
   "typing.Any",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "botorch.optim.initializers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.optim.initializers.gen_batch_initial_conditions": {
  "lineno": 25,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.cat",
   "torch.no_grad",
   "torch.quasirandom.SobolEngine.MAXDIM",
   "torch.rand",
   "typing.Dict",
   "typing.Optional",
   "typing.Union",
   "warnings.catch_warnings",
   "warnings.warn"
  ],
  "type": "function"
 },
 "botorch.optim.initializers.gen_one_shot_kg_initial_conditions": {
  "lineno": 128,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.exp",
   "torch.multinomial",
   "typing.Dict",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "botorch.optim.initializers.initialize_q_batch": {
  "lineno": 228,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.exp",
   "torch.isinf",
   "torch.max",
   "torch.multinomial",
   "torch.randperm",
   "warnings.warn"
  ],
  "type": "function"
 },
 "botorch.optim.initializers.initialize_q_batch_nonneg": {
  "lineno": 289,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.any",
   "torch.arange",
   "torch.exp",
   "torch.max",
   "torch.multinomial",
   "torch.randperm",
   "warnings.warn"
  ],
  "type": "function"
 },
 "botorch.optim.numpy_converter": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "module"
 },
 "botorch.optim.numpy_converter.TorchAttr": {
  "lineno": 27,
  "symbols_in_volume": [
   "torch.Size",
   "torch.device",
   "torch.dtype",
   "typing.NamedTuple"
  ],
  "type": "class"
 },
 "botorch.optim.numpy_converter.module_to_array": {
  "lineno": 33,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "math.inf",
   "numpy.concatenate",
   "numpy.full",
   "numpy.isinf",
   "numpy.ndarray",
   "numpy.stack",
   "torch.is_tensor",
   "torch.nn.Module",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Set",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "botorch.optim.numpy_converter.set_params_with_array": {
  "lineno": 105,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "numpy.ndarray",
   "numpy.prod",
   "torch.nn.Module",
   "torch.tensor",
   "typing.Dict"
  ],
  "type": "function"
 },
 "botorch.optim.optimize": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.optim.optimize.optimize_acqf": {
  "lineno": 28,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.argmax",
   "torch.cat",
   "torch.stack",
   "torch.tensor",
   "typing.Callable",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "botorch.optim.optimize.optimize_acqf_cyclic": {
  "lineno": 195,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.bool",
   "torch.cat",
   "torch.ones",
   "typing.Callable",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "botorch.optim.parameter_constraints": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.ndarray",
   "typing.Callable",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "module"
 },
 "botorch.optim.parameter_constraints._arrayify": {
  "lineno": 168,
  "symbols_in_volume": [
   "numpy.ndarray",
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.optim.parameter_constraints._make_linear_constraints": {
  "lineno": 180,
  "symbols_in_volume": [
   "functools.partial",
   "torch.Size",
   "torch.Tensor",
   "typing.List"
  ],
  "type": "function"
 },
 "botorch.optim.parameter_constraints.eval_lin_constraint": {
  "lineno": 131,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.ndarray",
   "numpy.sum",
   "typing.List"
  ],
  "type": "function"
 },
 "botorch.optim.parameter_constraints.lin_constraint_jac": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.zeros",
   "typing.List"
  ],
  "type": "function"
 },
 "botorch.optim.parameter_constraints.make_scipy_bounds": {
  "lineno": 29,
  "symbols_in_volume": [
   "scipy.optimize.Bounds",
   "torch.Tensor",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "botorch.optim.parameter_constraints.make_scipy_bounds._expand": {
  "lineno": 54,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.full_like",
   "torch.is_tensor",
   "torch.tensor",
   "typing.Union"
  ],
  "type": "function"
 },
 "botorch.optim.parameter_constraints.make_scipy_linear_constraints": {
  "lineno": 68,
  "symbols_in_volume": [
   "torch.Size",
   "torch.Tensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "botorch.optim.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.optim.utils.ConvergenceCriterion": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.optim.utils.ConvergenceCriterion.__init__": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "botorch.optim.utils.ConvergenceCriterion.evaluate": {
  "lineno": 76,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.all",
   "torch.ones_like",
   "torch.stack"
  ],
  "type": "function"
 },
 "botorch.optim.utils._expand_bounds": {
  "lineno": 185,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.is_tensor",
   "torch.tensor",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "botorch.optim.utils._filter_kwargs": {
  "lineno": 242,
  "symbols_in_volume": [
   "inspect.signature",
   "typing.Any",
   "typing.Callable"
  ],
  "type": "function"
 },
 "botorch.optim.utils._fix_feature": {
  "lineno": 178,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.full_like",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.optim.utils._get_extra_mll_args": {
  "lineno": 220,
  "symbols_in_volume": [
   "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
   "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood",
   "gpytorch.mlls.sum_marginal_log_likelihood.SumMarginalLogLikelihood",
   "torch.Tensor",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "botorch.optim.utils._scipy_objective_and_grad": {
  "lineno": 248,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood",
   "gpytorch.utils.errors.NanError",
   "numpy.concatenate",
   "numpy.full_like",
   "numpy.ndarray",
   "numpy.zeros",
   "typing.Dict",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "botorch.optim.utils.columnwise_clamp": {
  "lineno": 106,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.allclose",
   "torch.any",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "botorch.optim.utils.fix_features": {
  "lineno": 147,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.cat",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.optim.utils.sample_all_priors": {
  "lineno": 32,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "botorch.posteriors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.posteriors.deterministic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.posteriors.deterministic.DeterministicPosterior": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.posteriors.deterministic.DeterministicPosterior.__init__": {
  "lineno": 25,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.posteriors.deterministic.DeterministicPosterior.device": {
  "lineno": 28,
  "symbols_in_volume": [
   "torch.device"
  ],
  "type": "function"
 },
 "botorch.posteriors.deterministic.DeterministicPosterior.dtype": {
  "lineno": 33,
  "symbols_in_volume": [
   "torch.dtype"
  ],
  "type": "function"
 },
 "botorch.posteriors.deterministic.DeterministicPosterior.event_shape": {
  "lineno": 38,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "botorch.posteriors.deterministic.DeterministicPosterior.mean": {
  "lineno": 43,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.posteriors.deterministic.DeterministicPosterior.rsample": {
  "lineno": 56,
  "symbols_in_volume": [
   "torch.Size",
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.posteriors.deterministic.DeterministicPosterior.variance": {
  "lineno": 48,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "botorch.posteriors.gpytorch": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.posteriors.gpytorch.GPyTorchPosterior": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.posteriors.gpytorch.GPyTorchPosterior.__init__": {
  "lineno": 28,
  "symbols_in_volume": [
   "gpytorch.distributions.MultitaskMultivariateNormal",
   "gpytorch.distributions.MultivariateNormal"
  ],
  "type": "function"
 },
 "botorch.posteriors.gpytorch.GPyTorchPosterior.device": {
  "lineno": 38,
  "symbols_in_volume": [
   "torch.device"
  ],
  "type": "function"
 },
 "botorch.posteriors.gpytorch.GPyTorchPosterior.dtype": {
  "lineno": 43,
  "symbols_in_volume": [
   "torch.dtype"
  ],
  "type": "function"
 },
 "botorch.posteriors.gpytorch.GPyTorchPosterior.event_shape": {
  "lineno": 48,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "botorch.posteriors.gpytorch.GPyTorchPosterior.mean": {
  "lineno": 93,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.posteriors.gpytorch.GPyTorchPosterior.rsample": {
  "lineno": 56,
  "symbols_in_volume": [
   "gpytorch.settings.fast_computations",
   "torch.Size",
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.posteriors.gpytorch.GPyTorchPosterior.variance": {
  "lineno": 101,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.posteriors.gpytorch.scalarize_posterior": {
  "lineno": 110,
  "symbols_in_volume": [
   "gpytorch.distributions.MultivariateNormal",
   "gpytorch.lazy.BlockDiagLazyTensor",
   "gpytorch.lazy.LazyTensor",
   "gpytorch.lazy.SumLazyTensor",
   "torch.Size",
   "torch.Tensor",
   "torch.repeat_interleave"
  ],
  "type": "function"
 },
 "botorch.posteriors.posterior": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.posteriors.posterior.Posterior": {
  "lineno": 20,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "botorch.posteriors.posterior.Posterior.device": {
  "lineno": 23,
  "symbols_in_volume": [
   "abc.abstractproperty",
   "torch.device"
  ],
  "type": "function"
 },
 "botorch.posteriors.posterior.Posterior.dtype": {
  "lineno": 28,
  "symbols_in_volume": [
   "abc.abstractproperty",
   "torch.dtype"
  ],
  "type": "function"
 },
 "botorch.posteriors.posterior.Posterior.event_shape": {
  "lineno": 33,
  "symbols_in_volume": [
   "abc.abstractproperty",
   "torch.Size"
  ],
  "type": "function"
 },
 "botorch.posteriors.posterior.Posterior.mean": {
  "lineno": 38,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.posteriors.posterior.Posterior.rsample": {
  "lineno": 52,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "torch.Size",
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.posteriors.posterior.Posterior.sample": {
  "lineno": 73,
  "symbols_in_volume": [
   "torch.Size",
   "torch.Tensor",
   "torch.no_grad",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.posteriors.posterior.Posterior.variance": {
  "lineno": 45,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.posteriors.transformed": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.posteriors.transformed.TransformedPosterior": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.posteriors.transformed.TransformedPosterior.__init__": {
  "lineno": 20,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Callable",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.posteriors.transformed.TransformedPosterior.device": {
  "lineno": 47,
  "symbols_in_volume": [
   "torch.device"
  ],
  "type": "function"
 },
 "botorch.posteriors.transformed.TransformedPosterior.dtype": {
  "lineno": 52,
  "symbols_in_volume": [
   "torch.dtype"
  ],
  "type": "function"
 },
 "botorch.posteriors.transformed.TransformedPosterior.event_shape": {
  "lineno": 57,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "botorch.posteriors.transformed.TransformedPosterior.mean": {
  "lineno": 62,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.posteriors.transformed.TransformedPosterior.rsample": {
  "lineno": 76,
  "symbols_in_volume": [
   "torch.Size",
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.posteriors.transformed.TransformedPosterior.variance": {
  "lineno": 69,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.sampling": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.sampling.qmc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.sampling.qmc.MultivariateNormalQMCEngine": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.sampling.qmc.MultivariateNormalQMCEngine.__init__": {
  "lineno": 110,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.all",
   "torch.allclose",
   "torch.cholesky",
   "torch.symeig",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.sampling.qmc.MultivariateNormalQMCEngine.draw": {
  "lineno": 147,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.sampling.qmc.NormalQMCEngine": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.sampling.qmc.NormalQMCEngine.__init__": {
  "lineno": 39,
  "symbols_in_volume": [
   "math.ceil",
   "torch.quasirandom.SobolEngine",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.sampling.qmc.NormalQMCEngine.draw": {
  "lineno": 60,
  "symbols_in_volume": [
   "math.pi",
   "math.sqrt",
   "torch.Tensor",
   "torch.arange",
   "torch.cos",
   "torch.dtype",
   "torch.erfinv",
   "torch.finfo",
   "torch.float",
   "torch.log",
   "torch.sin",
   "torch.stack",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.sampling.samplers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.sampling.samplers.IIDNormalSampler": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.sampling.samplers.IIDNormalSampler.__init__": {
  "lineno": 114,
  "symbols_in_volume": [
   "torch.Size",
   "torch.randint",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.sampling.samplers.IIDNormalSampler._construct_base_samples": {
  "lineno": 139,
  "symbols_in_volume": [
   "torch.Size",
   "torch.randn"
  ],
  "type": "function"
 },
 "botorch.sampling.samplers.MCSampler": {
  "lineno": 26,
  "symbols_in_volume": [
   "abc.ABC",
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "botorch.sampling.samplers.MCSampler._construct_base_samples": {
  "lineno": 85,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "torch.Size"
  ],
  "type": "function"
 },
 "botorch.sampling.samplers.MCSampler._get_base_sample_shape": {
  "lineno": 63,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "botorch.sampling.samplers.MCSampler.forward": {
  "lineno": 47,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.sampling.samplers.MCSampler.sample_shape": {
  "lineno": 80,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "botorch.sampling.samplers.SobolQMCNormalSampler": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.sampling.samplers.SobolQMCNormalSampler.__init__": {
  "lineno": 184,
  "symbols_in_volume": [
   "torch.Size",
   "torch.randint",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.sampling.samplers.SobolQMCNormalSampler._construct_base_samples": {
  "lineno": 209,
  "symbols_in_volume": [
   "torch.Size",
   "torch.quasirandom.SobolEngine.MAXDIM"
  ],
  "type": "function"
 },
 "botorch.settings": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.settings._Flag": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.settings._Flag.__enter__": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "botorch.settings._Flag.__exit__": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "botorch.settings._Flag.__init__": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "botorch.settings._Flag._set_state": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "botorch.settings._Flag.off": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "botorch.settings._Flag.on": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "botorch.settings.debug": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.settings.debug._set_state": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "botorch.settings.propagate_grads": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.settings.suppress_botorch_warnings": {
  "lineno": 57,
  "symbols_in_volume": [
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "botorch.settings.validate_input_scaling": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.test_functions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.test_functions.multi_fidelity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.test_functions.multi_fidelity.AugmentedBranin": {
  "lineno": 22,
  "symbols_in_volume": [
   "math.pi"
  ],
  "type": "class"
 },
 "botorch.test_functions.multi_fidelity.AugmentedBranin.evaluate_true": {
  "lineno": 47,
  "symbols_in_volume": [
   "math.pi",
   "torch.Tensor",
   "torch.cos"
  ],
  "type": "function"
 },
 "botorch.test_functions.multi_fidelity.AugmentedHartmann": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.test_functions.multi_fidelity.AugmentedHartmann.__init__": {
  "lineno": 79,
  "symbols_in_volume": [
   "torch.float",
   "torch.tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.test_functions.multi_fidelity.AugmentedHartmann.evaluate_true": {
  "lineno": 97,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.exp",
   "torch.sum"
  ],
  "type": "function"
 },
 "botorch.test_functions.multi_fidelity.AugmentedRosenbrock": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.test_functions.multi_fidelity.AugmentedRosenbrock.__init__": {
  "lineno": 125,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.test_functions.multi_fidelity.AugmentedRosenbrock.evaluate_true": {
  "lineno": 137,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.test_functions.synthetic.Ackley": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.test_functions.synthetic.Ackley.__init__": {
  "lineno": 92,
  "symbols_in_volume": [
   "math.pi",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.Ackley.evaluate_true": {
  "lineno": 103,
  "symbols_in_volume": [
   "math.e",
   "math.sqrt",
   "torch.Tensor",
   "torch.cos",
   "torch.exp",
   "torch.mean",
   "torch.norm"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.Beale": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.test_functions.synthetic.Beale.evaluate_true": {
  "lineno": 117,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.Branin": {
  "lineno": 125,
  "symbols_in_volume": [
   "math.pi"
  ],
  "type": "class"
 },
 "botorch.test_functions.synthetic.Branin.evaluate_true": {
  "lineno": 143,
  "symbols_in_volume": [
   "math.pi",
   "torch.Tensor",
   "torch.cos"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.Bukin": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.test_functions.synthetic.Bukin.evaluate_true": {
  "lineno": 162,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.abs",
   "torch.sqrt"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.Cosine8": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.test_functions.synthetic.Cosine8.evaluate_true": {
  "lineno": 184,
  "symbols_in_volume": [
   "math.pi",
   "torch.Tensor",
   "torch.cos",
   "torch.sum"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.DixonPrice": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.test_functions.synthetic.DixonPrice.__init__": {
  "lineno": 207,
  "symbols_in_volume": [
   "math.pow",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.DixonPrice.evaluate_true": {
  "lineno": 220,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.sum"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.DropWave": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.test_functions.synthetic.DropWave.evaluate_true": {
  "lineno": 196,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.cos",
   "torch.norm"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.EggHolder": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.test_functions.synthetic.EggHolder.evaluate_true": {
  "lineno": 244,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.abs",
   "torch.sin",
   "torch.sqrt"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.Griewank": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.test_functions.synthetic.Griewank.__init__": {
  "lineno": 255,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.Griewank.evaluate_true": {
  "lineno": 263,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.cos",
   "torch.prod",
   "torch.sqrt",
   "torch.sum"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.Hartmann": {
  "lineno": 272,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.test_functions.synthetic.Hartmann.__init__": {
  "lineno": 287,
  "symbols_in_volume": [
   "torch.float",
   "torch.tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.Hartmann.evaluate_true": {
  "lineno": 353,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.exp",
   "torch.sum"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.Hartmann.optimal_value": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "botorch.test_functions.synthetic.Hartmann.optimizers": {
  "lineno": 347,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.HolderTable": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.test_functions.synthetic.HolderTable.evaluate_true": {
  "lineno": 387,
  "symbols_in_volume": [
   "math.pi",
   "torch.Tensor",
   "torch.abs",
   "torch.cos",
   "torch.exp",
   "torch.norm",
   "torch.sin"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.Levy": {
  "lineno": 392,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.test_functions.synthetic.Levy.__init__": {
  "lineno": 409,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.Levy.evaluate_true": {
  "lineno": 417,
  "symbols_in_volume": [
   "math.pi",
   "torch.Tensor",
   "torch.sin",
   "torch.sum"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.Michalewicz": {
  "lineno": 431,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.test_functions.synthetic.Michalewicz.__init__": {
  "lineno": 439,
  "symbols_in_volume": [
   "math.pi",
   "torch.float",
   "torch.tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.Michalewicz.evaluate_true": {
  "lineno": 459,
  "symbols_in_volume": [
   "math.pi",
   "torch.Tensor",
   "torch.sin",
   "torch.sum"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.Michalewicz.optimizers": {
  "lineno": 453,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.Powell": {
  "lineno": 467,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.test_functions.synthetic.Powell.__init__": {
  "lineno": 471,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.Powell.evaluate_true": {
  "lineno": 479,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.Rastrigin": {
  "lineno": 491,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.test_functions.synthetic.Rastrigin.__init__": {
  "lineno": 495,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.Rastrigin.evaluate_true": {
  "lineno": 503,
  "symbols_in_volume": [
   "math.pi",
   "torch.Tensor",
   "torch.cos",
   "torch.sum"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.Rosenbrock": {
  "lineno": 509,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.test_functions.synthetic.Rosenbrock.__init__": {
  "lineno": 522,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.Rosenbrock.evaluate_true": {
  "lineno": 530,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.sum"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.Shekel": {
  "lineno": 537,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.test_functions.synthetic.Shekel.__init__": {
  "lineno": 552,
  "symbols_in_volume": [
   "torch.float",
   "torch.tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.Shekel.evaluate_true": {
  "lineno": 574,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.sum"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.SixHumpCamel": {
  "lineno": 584,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.test_functions.synthetic.SixHumpCamel.evaluate_true": {
  "lineno": 591,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.StyblinskiTang": {
  "lineno": 600,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.test_functions.synthetic.StyblinskiTang.__init__": {
  "lineno": 610,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.StyblinskiTang.evaluate_true": {
  "lineno": 619,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.SyntheticTestFunction": {
  "lineno": 23,
  "symbols_in_volume": [
   "abc.ABC",
   "torch.nn.Module",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "botorch.test_functions.synthetic.SyntheticTestFunction.__init__": {
  "lineno": 32,
  "symbols_in_volume": [
   "torch.float",
   "torch.tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.SyntheticTestFunction.evaluate_true": {
  "lineno": 71,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.SyntheticTestFunction.forward": {
  "lineno": 55,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.randn_like"
  ],
  "type": "function"
 },
 "botorch.test_functions.synthetic.SyntheticTestFunction.optimal_value": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "botorch.test_functions.synthetic.ThreeHumpCamel": {
  "lineno": 623,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.test_functions.synthetic.ThreeHumpCamel.evaluate_true": {
  "lineno": 630,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.utils.constraints": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.utils.constraints.get_outcome_constraint_transforms": {
  "lineno": 20,
  "symbols_in_volume": [
   "functools.partial",
   "torch.Tensor",
   "typing.Callable",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "botorch.utils.constraints.get_outcome_constraint_transforms._oc": {
  "lineno": 46,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.einsum"
  ],
  "type": "function"
 },
 "botorch.utils.objective": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.utils.objective.apply_constraints": {
  "lineno": 111,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Callable",
   "typing.List"
  ],
  "type": "function"
 },
 "botorch.utils.objective.apply_constraints_nonnegative_soft": {
  "lineno": 62,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Callable",
   "typing.List"
  ],
  "type": "function"
 },
 "botorch.utils.objective.get_objective_weights_transform": {
  "lineno": 19,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Callable",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.utils.objective.get_objective_weights_transform._objective": {
  "lineno": 45,
  "symbols_in_volume": [
   "torch.einsum"
  ],
  "type": "function"
 },
 "botorch.utils.objective.soft_eval_constraint": {
  "lineno": 91,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.sigmoid"
  ],
  "type": "function"
 },
 "botorch.utils.sampling": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.utils.sampling.construct_base_samples": {
  "lineno": 50,
  "symbols_in_volume": [
   "torch.Size",
   "torch.Tensor",
   "torch.device",
   "torch.dtype",
   "torch.quasirandom.SobolEngine.MAXDIM",
   "torch.randn",
   "typing.Optional",
   "warnings.warn"
  ],
  "type": "function"
 },
 "botorch.utils.sampling.construct_base_samples_from_posterior": {
  "lineno": 104,
  "symbols_in_volume": [
   "torch.Size",
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.utils.sampling.draw_sobol_normal_samples": {
  "lineno": 177,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.device",
   "torch.dtype",
   "torch.float",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.utils.sampling.draw_sobol_samples": {
  "lineno": 147,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.quasirandom.SobolEngine",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.utils.sampling.manual_seed": {
  "lineno": 26,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "torch.random.get_rng_state",
   "torch.random.manual_seed",
   "torch.random.set_rng_state",
   "typing.Generator",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.utils.sampling.sample_hypersphere": {
  "lineno": 209,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.device",
   "torch.dtype",
   "torch.float",
   "torch.norm",
   "torch.randint",
   "torch.randn",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.utils.sampling.sample_simplex": {
  "lineno": 248,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.cat",
   "torch.device",
   "torch.dtype",
   "torch.float",
   "torch.ones",
   "torch.quasirandom.SobolEngine",
   "torch.rand",
   "torch.sort",
   "torch.zeros",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.utils.testing": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "module"
 },
 "botorch.utils.testing.BotorchTestCase": {
  "lineno": 27,
  "symbols_in_volume": [
   "torch.device",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "botorch.utils.testing.BotorchTestCase.setUp": {
  "lineno": 37,
  "symbols_in_volume": [
   "warnings.resetwarnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "botorch.utils.testing.MockAcquisitionFunction": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.utils.testing.MockAcquisitionFunction.__call__": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "botorch.utils.testing.MockAcquisitionFunction.__init__": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "botorch.utils.testing.MockAcquisitionFunction.set_X_pending": {
  "lineno": 183,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.utils.testing.MockModel": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.utils.testing.MockModel.__init__": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "botorch.utils.testing.MockModel.load_state_dict": {
  "lineno": 167,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.utils.testing.MockModel.num_outputs": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "botorch.utils.testing.MockModel.posterior": {
  "lineno": 151,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.utils.testing.MockModel.state_dict": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "botorch.utils.testing.MockPosterior": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "class"
 },
 "botorch.utils.testing.MockPosterior.__init__": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "botorch.utils.testing.MockPosterior.device": {
  "lineno": 96,
  "symbols_in_volume": [
   "torch.device",
   "torch.is_tensor"
  ],
  "type": "function"
 },
 "botorch.utils.testing.MockPosterior.dtype": {
  "lineno": 103,
  "symbols_in_volume": [
   "torch.dtype",
   "torch.float32",
   "torch.is_tensor"
  ],
  "type": "function"
 },
 "botorch.utils.testing.MockPosterior.event_shape": {
  "lineno": 110,
  "symbols_in_volume": [
   "torch.Size"
  ],
  "type": "function"
 },
 "botorch.utils.testing.MockPosterior.mean": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "botorch.utils.testing.MockPosterior.rsample": {
  "lineno": 128,
  "symbols_in_volume": [
   "torch.Size",
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.utils.testing.MockPosterior.variance": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "botorch.utils.testing.SyntheticTestFunctionBaseTestCase": {
  "lineno": 43,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "class"
 },
 "botorch.utils.testing.SyntheticTestFunctionBaseTestCase.test_forward": {
  "lineno": 47,
  "symbols_in_volume": [
   "torch.Size",
   "torch.double",
   "torch.float",
   "torch.rand"
  ],
  "type": "function"
 },
 "botorch.utils.testing.SyntheticTestFunctionBaseTestCase.test_optimal_value": {
  "lineno": 60,
  "symbols_in_volume": [
   "torch.double",
   "torch.float"
  ],
  "type": "function"
 },
 "botorch.utils.testing.SyntheticTestFunctionBaseTestCase.test_optimizer": {
  "lineno": 71,
  "symbols_in_volume": [
   "torch.allclose",
   "torch.autograd.grad",
   "torch.double",
   "torch.float",
   "torch.full_like"
  ],
  "type": "function"
 },
 "botorch.utils.testing._get_random_data": {
  "lineno": 187,
  "symbols_in_volume": [
   "math.pi",
   "torch.Size",
   "torch.Tensor",
   "torch.linspace",
   "torch.rand",
   "torch.randn",
   "torch.sin",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "botorch.utils.transforms": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "botorch.utils.transforms.concatenate_pending_points": {
  "lineno": 180,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Any",
   "typing.Callable"
  ],
  "type": "function"
 },
 "botorch.utils.transforms.concatenate_pending_points.decorated": {
  "lineno": 198,
  "symbols_in_volume": [
   "functools.wraps",
   "torch.Tensor",
   "torch.cat",
   "typing.Any"
  ],
  "type": "function"
 },
 "botorch.utils.transforms.convert_to_target_pre_hook": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "botorch.utils.transforms.gpt_posterior_settings": {
  "lineno": 238,
  "symbols_in_volume": [
   "contextlib.ExitStack",
   "contextlib.contextmanager",
   "gpytorch.settings.debug",
   "gpytorch.settings.detach_test_caches",
   "gpytorch.settings.fast_pred_var",
   "gpytorch.settings.propagate_grads.off"
  ],
  "type": "function"
 },
 "botorch.utils.transforms.match_batch_shape": {
  "lineno": 207,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.utils.transforms.normalize": {
  "lineno": 63,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.utils.transforms.normalize_indices": {
  "lineno": 107,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.utils.transforms.squeeze_last_dim": {
  "lineno": 24,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "botorch.utils.transforms.standardize": {
  "lineno": 40,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.full_like"
  ],
  "type": "function"
 },
 "botorch.utils.transforms.t_batch_mode_transform": {
  "lineno": 131,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Any",
   "typing.Callable",
   "typing.Optional"
  ],
  "type": "function"
 },
 "botorch.utils.transforms.t_batch_mode_transform.decorator": {
  "lineno": 159,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Any",
   "typing.Callable"
  ],
  "type": "function"
 },
 "botorch.utils.transforms.t_batch_mode_transform.decorator.decorated": {
  "lineno": 160,
  "symbols_in_volume": [
   "functools.wraps",
   "torch.Tensor",
   "typing.Any"
  ],
  "type": "function"
 },
 "botorch.utils.transforms.unnormalize": {
  "lineno": 85,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.acquisition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.acquisition.test_acquisition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.acquisition.test_acquisition.TestAcquisitionFunction": {
  "lineno": 14,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_acquisition.TestAcquisitionFunction.test_abstract_raises": {
  "lineno": 15,
  "symbols_in_volume": [
   "botorch.acquisition.acquisition.AcquisitionFunction"
  ],
  "type": "function"
 },
 "test.acquisition.test_acquisition.TestOneShotAcquisitionFunction": {
  "lineno": 20,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_acquisition.TestOneShotAcquisitionFunction.test_abstract_raises": {
  "lineno": 21,
  "symbols_in_volume": [
   "botorch.acquisition.acquisition.OneShotAcquisitionFunction"
  ],
  "type": "function"
 },
 "test.acquisition.test_active_learning": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.acquisition.test_active_learning.TestQNegIntegratedPosteriorVariance": {
  "lineno": 19,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_active_learning.TestQNegIntegratedPosteriorVariance.test_init": {
  "lineno": 20,
  "symbols_in_volume": [
   "botorch.acquisition.active_learning.qNegIntegratedPosteriorVariance",
   "botorch.sampling.samplers.IIDNormalSampler",
   "botorch.sampling.samplers.SobolQMCNormalSampler",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "torch.Size",
   "torch.equal",
   "torch.rand"
  ],
  "type": "function"
 },
 "test.acquisition.test_active_learning.TestQNegIntegratedPosteriorVariance.test_q_neg_int_post_variance": {
  "lineno": 38,
  "symbols_in_volume": [
   "botorch.acquisition.active_learning.qNegIntegratedPosteriorVariance",
   "botorch.acquisition.objective.IdentityMCObjective",
   "botorch.acquisition.objective.ScalarizedObjective",
   "botorch.exceptions.errors.UnsupportedError",
   "botorch.posteriors.gpytorch.GPyTorchPosterior",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "gpytorch.distributions.MultitaskMultivariateNormal",
   "torch.allclose",
   "torch.diag_embed",
   "torch.double",
   "torch.empty",
   "torch.float",
   "torch.rand",
   "torch.tensor",
   "torch.zeros",
   "unittest.mock.PropertyMock",
   "unittest.mock.patch",
   "unittest.mock.patch.object"
  ],
  "type": "function"
 },
 "test.acquisition.test_analytic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.acquisition.test_analytic.DummyAnalyticAcquisitionFunction": {
  "lineno": 41,
  "symbols_in_volume": [
   "botorch.acquisition.analytic.AnalyticAcquisitionFunction"
  ],
  "type": "class"
 },
 "test.acquisition.test_analytic.DummyAnalyticAcquisitionFunction.forward": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.acquisition.test_analytic.TestAnalyticAcquisitionFunction": {
  "lineno": 46,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_analytic.TestAnalyticAcquisitionFunction.test_abstract_raises": {
  "lineno": 47,
  "symbols_in_volume": [
   "botorch.acquisition.analytic.AnalyticAcquisitionFunction",
   "botorch.exceptions.UnsupportedError",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "torch.ones",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.acquisition.test_analytic.TestConstrainedExpectedImprovement": {
  "lineno": 299,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_analytic.TestConstrainedExpectedImprovement.test_constrained_expected_improvement": {
  "lineno": 300,
  "symbols_in_volume": [
   "botorch.acquisition.analytic.ConstrainedExpectedImprovement",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "torch.allclose",
   "torch.distributions.Normal",
   "torch.double",
   "torch.empty",
   "torch.float",
   "torch.ones",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.acquisition.test_analytic.TestConstrainedExpectedImprovement.test_constrained_expected_improvement_batch": {
  "lineno": 385,
  "symbols_in_volume": [
   "botorch.acquisition.analytic.ConstrainedExpectedImprovement",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "torch.Size",
   "torch.allclose",
   "torch.distributions.Normal",
   "torch.double",
   "torch.empty",
   "torch.float",
   "torch.ones",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.acquisition.test_analytic.TestExpectedImprovement": {
  "lineno": 58,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_analytic.TestExpectedImprovement.test_expected_improvement": {
  "lineno": 59,
  "symbols_in_volume": [
   "botorch.acquisition.analytic.ExpectedImprovement",
   "botorch.acquisition.objective.ScalarizedObjective",
   "botorch.exceptions.UnsupportedError",
   "botorch.posteriors.GPyTorchPosterior",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "gpytorch.distributions.MultitaskMultivariateNormal",
   "gpytorch.distributions.MultivariateNormal",
   "torch.allclose",
   "torch.double",
   "torch.empty",
   "torch.float",
   "torch.ones",
   "torch.rand",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.acquisition.test_analytic.TestExpectedImprovement.test_expected_improvement_batch": {
  "lineno": 109,
  "symbols_in_volume": [
   "botorch.acquisition.analytic.ExpectedImprovement",
   "botorch.acquisition.objective.IdentityMCObjective",
   "botorch.acquisition.objective.ScalarizedObjective",
   "botorch.exceptions.UnsupportedError",
   "botorch.posteriors.GPyTorchPosterior",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "gpytorch.distributions.MultitaskMultivariateNormal",
   "gpytorch.distributions.MultivariateNormal",
   "torch.allclose",
   "torch.double",
   "torch.empty",
   "torch.float",
   "torch.ones",
   "torch.rand",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.acquisition.test_analytic.TestNoisyExpectedImprovement": {
  "lineno": 414,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_analytic.TestNoisyExpectedImprovement._get_model": {
  "lineno": 415,
  "symbols_in_volume": [
   "botorch.models.FixedNoiseGP",
   "math.pi",
   "torch.float",
   "torch.full_like",
   "torch.linspace",
   "torch.sin",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.acquisition.test_analytic.TestNoisyExpectedImprovement.test_noisy_expected_improvement": {
  "lineno": 440,
  "symbols_in_volume": [
   "botorch.acquisition.analytic.NoisyExpectedImprovement",
   "botorch.exceptions.UnsupportedError",
   "botorch.models.SingleTaskGP",
   "torch.Size",
   "torch.double",
   "torch.float",
   "torch.no_grad",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.acquisition.test_analytic.TestPosteriorMean": {
  "lineno": 173,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_analytic.TestPosteriorMean.test_posterior_mean": {
  "lineno": 174,
  "symbols_in_volume": [
   "botorch.acquisition.analytic.PosteriorMean",
   "botorch.exceptions.UnsupportedError",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "torch.double",
   "torch.empty",
   "torch.equal",
   "torch.float",
   "torch.rand",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.acquisition.test_analytic.TestPosteriorMean.test_posterior_mean_batch": {
  "lineno": 188,
  "symbols_in_volume": [
   "botorch.acquisition.analytic.PosteriorMean",
   "botorch.exceptions.UnsupportedError",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "torch.double",
   "torch.empty",
   "torch.equal",
   "torch.float",
   "torch.rand",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.acquisition.test_analytic.TestProbabilityOfImprovement": {
  "lineno": 205,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_analytic.TestProbabilityOfImprovement.test_probability_of_improvement": {
  "lineno": 206,
  "symbols_in_volume": [
   "botorch.acquisition.analytic.ProbabilityOfImprovement",
   "botorch.exceptions.UnsupportedError",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "torch.allclose",
   "torch.double",
   "torch.float",
   "torch.ones",
   "torch.ones_like",
   "torch.rand",
   "torch.tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.acquisition.test_analytic.TestProbabilityOfImprovement.test_probability_of_improvement_batch": {
  "lineno": 231,
  "symbols_in_volume": [
   "botorch.acquisition.analytic.ProbabilityOfImprovement",
   "botorch.exceptions.UnsupportedError",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "torch.allclose",
   "torch.double",
   "torch.float",
   "torch.ones_like",
   "torch.rand",
   "torch.tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.acquisition.test_analytic.TestUpperConfidenceBound": {
  "lineno": 251,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_analytic.TestUpperConfidenceBound.test_upper_confidence_bound": {
  "lineno": 252,
  "symbols_in_volume": [
   "botorch.acquisition.analytic.UpperConfidenceBound",
   "botorch.exceptions.UnsupportedError",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "torch.allclose",
   "torch.double",
   "torch.float",
   "torch.rand",
   "torch.tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.acquisition.test_analytic.TestUpperConfidenceBound.test_upper_confidence_bound_batch": {
  "lineno": 277,
  "symbols_in_volume": [
   "botorch.acquisition.analytic.UpperConfidenceBound",
   "botorch.exceptions.UnsupportedError",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "torch.allclose",
   "torch.double",
   "torch.float",
   "torch.rand",
   "torch.tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.acquisition.test_cost_aware": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.acquisition.test_cost_aware.TestCostAwareUtilities": {
  "lineno": 22,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_cost_aware.TestCostAwareUtilities.test_GenericCostAwareUtility": {
  "lineno": 27,
  "symbols_in_volume": [
   "botorch.acquisition.cost_aware.GenericCostAwareUtility",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.rand"
  ],
  "type": "function"
 },
 "test.acquisition.test_cost_aware.TestCostAwareUtilities.test_GenericCostAwareUtility.cost": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.acquisition.test_cost_aware.TestCostAwareUtilities.test_InverseCostWeightedUtility": {
  "lineno": 42,
  "symbols_in_volume": [
   "botorch.acquisition.cost_aware.InverseCostWeightedUtility",
   "botorch.exceptions.warnings.CostAwareWarning",
   "botorch.sampling.IIDNormalSampler",
   "botorch.settings.debug",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.rand",
   "torch.randn",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "test.acquisition.test_cost_aware.TestCostAwareUtilities.test_abstract_raises": {
  "lineno": 23,
  "symbols_in_volume": [
   "botorch.acquisition.cost_aware.CostAwareUtility"
  ],
  "type": "function"
 },
 "test.acquisition.test_fixed_feature": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.acquisition.test_fixed_feature.TestFixedFeatureAcquisitionFunction": {
  "lineno": 14,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_fixed_feature.TestFixedFeatureAcquisitionFunction.test_fixed_features": {
  "lineno": 15,
  "symbols_in_volume": [
   "botorch.acquisition.fixed_feature.FixedFeatureAcquisitionFunction",
   "botorch.acquisition.monte_carlo.qExpectedImprovement",
   "botorch.models.SingleTaskGP",
   "torch.allclose",
   "torch.rand"
  ],
  "type": "function"
 },
 "test.acquisition.test_knowledge_gradient": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.acquisition.test_knowledge_gradient.TestKGUtils": {
  "lineno": 355,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_knowledge_gradient.TestKGUtils.test_get_value_function": {
  "lineno": 356,
  "symbols_in_volume": [
   "botorch.acquisition.analytic.PosteriorMean",
   "botorch.acquisition.knowledge_gradient._get_value_function",
   "botorch.acquisition.monte_carlo.qSimpleRegret",
   "botorch.acquisition.objective.GenericMCObjective",
   "botorch.sampling.samplers.IIDNormalSampler",
   "botorch.utils.testing.MockModel",
   "unittest.mock.PropertyMock",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "test.acquisition.test_knowledge_gradient.TestKGUtils.test_split_fantasy_points": {
  "lineno": 372,
  "symbols_in_volume": [
   "botorch.acquisition.knowledge_gradient._split_fantasy_points",
   "torch.Size",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.randn"
  ],
  "type": "function"
 },
 "test.acquisition.test_knowledge_gradient.TestQKnowledgeGradient": {
  "lineno": 34,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_knowledge_gradient.TestQKnowledgeGradient.test_evaluate_q_knowledge_gradient": {
  "lineno": 112,
  "symbols_in_volume": [
   "botorch.acquisition.knowledge_gradient.qKnowledgeGradient",
   "botorch.acquisition.objective.GenericMCObjective",
   "botorch.acquisition.objective.ScalarizedObjective",
   "botorch.posteriors.gpytorch.GPyTorchPosterior",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "gpytorch.distributions.MultitaskMultivariateNormal",
   "torch.Size",
   "torch.allclose",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.rand",
   "torch.randn",
   "torch.tensor",
   "unittest.mock.PropertyMock",
   "unittest.mock.patch",
   "unittest.mock.patch.object"
  ],
  "type": "function"
 },
 "test.acquisition.test_knowledge_gradient.TestQKnowledgeGradient.test_initialize_q_knowledge_gradient": {
  "lineno": 35,
  "symbols_in_volume": [
   "botorch.acquisition.knowledge_gradient.qKnowledgeGradient",
   "botorch.acquisition.objective.GenericMCObjective",
   "botorch.acquisition.objective.ScalarizedObjective",
   "botorch.exceptions.errors.UnsupportedError",
   "botorch.sampling.samplers.IIDNormalSampler",
   "botorch.sampling.samplers.SobolQMCNormalSampler",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "torch.Size",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.rand",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.acquisition.test_knowledge_gradient.TestQMultiFidelityKnowledgeGradient": {
  "lineno": 217,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_knowledge_gradient.TestQMultiFidelityKnowledgeGradient.test_evaluate_q_multi_fidelity_knowledge_gradient": {
  "lineno": 253,
  "symbols_in_volume": [
   "botorch.acquisition.cost_aware.GenericCostAwareUtility",
   "botorch.acquisition.knowledge_gradient.qMultiFidelityKnowledgeGradient",
   "botorch.acquisition.objective.GenericMCObjective",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "torch.Size",
   "torch.allclose",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.rand",
   "torch.randn",
   "unittest.mock.PropertyMock",
   "unittest.mock.patch",
   "unittest.mock.patch.object"
  ],
  "type": "function"
 },
 "test.acquisition.test_knowledge_gradient.TestQMultiFidelityKnowledgeGradient.test_initialize_q_multi_fidelity_knowledge_gradient": {
  "lineno": 218,
  "symbols_in_volume": [
   "botorch.acquisition.knowledge_gradient.qMultiFidelityKnowledgeGradient",
   "botorch.exceptions.errors.UnsupportedError",
   "botorch.sampling.samplers.SobolQMCNormalSampler",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "torch.Size",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.rand",
   "torch.zeros",
   "unittest.mock.Mock"
  ],
  "type": "function"
 },
 "test.acquisition.test_knowledge_gradient.mock_util": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.acquisition.test_max_value_entropy_search": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.acquisition.test_max_value_entropy_search.MESMockModel": {
  "lineno": 26,
  "symbols_in_volume": [
   "botorch.utils.testing.MockModel"
  ],
  "type": "class"
 },
 "test.acquisition.test_max_value_entropy_search.MESMockModel.__init__": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.acquisition.test_max_value_entropy_search.MESMockModel.num_outputs": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.acquisition.test_max_value_entropy_search.MESMockModel.posterior": {
  "lineno": 32,
  "symbols_in_volume": [
   "botorch.posteriors.GPyTorchPosterior",
   "botorch.utils.testing.MockPosterior",
   "gpytorch.distributions.MultivariateNormal",
   "torch.Tensor",
   "torch.eye",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.acquisition.test_max_value_entropy_search.TestMaxValueEntropySearch": {
  "lineno": 46,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_max_value_entropy_search.TestMaxValueEntropySearch.test_q_max_value_entropy": {
  "lineno": 47,
  "symbols_in_volume": [
   "botorch.acquisition.max_value_entropy_search.qMaxValueEntropy",
   "botorch.exceptions.errors.UnsupportedError",
   "botorch.sampling.samplers.SobolQMCNormalSampler",
   "torch.Size",
   "torch.double",
   "torch.float",
   "torch.manual_seed",
   "torch.rand",
   "unittest.mock.PropertyMock",
   "unittest.mock.patch",
   "unittest.mock.patch.object"
  ],
  "type": "function"
 },
 "test.acquisition.test_max_value_entropy_search.TestMaxValueEntropySearch.test_q_multi_fidelity_max_value_entropy": {
  "lineno": 113,
  "symbols_in_volume": [
   "botorch.acquisition.cost_aware.InverseCostWeightedUtility",
   "botorch.acquisition.max_value_entropy_search.qMultiFidelityMaxValueEntropy",
   "botorch.sampling.samplers.SobolQMCNormalSampler",
   "torch.Size",
   "torch.double",
   "torch.float",
   "torch.manual_seed",
   "torch.rand",
   "typing.Callable"
  ],
  "type": "function"
 },
 "test.acquisition.test_max_value_entropy_search.TestMaxValueEntropySearch.test_sample_max_value_Gumbel": {
  "lineno": 144,
  "symbols_in_volume": [
   "botorch.acquisition.max_value_entropy_search._sample_max_value_Gumbel",
   "torch.Size",
   "torch.double",
   "torch.float",
   "torch.manual_seed",
   "torch.rand"
  ],
  "type": "function"
 },
 "test.acquisition.test_max_value_entropy_search.TestMaxValueEntropySearch.test_sample_max_value_Thompson": {
  "lineno": 152,
  "symbols_in_volume": [
   "botorch.acquisition.max_value_entropy_search._sample_max_value_Thompson",
   "torch.Size",
   "torch.double",
   "torch.float",
   "torch.manual_seed",
   "torch.rand"
  ],
  "type": "function"
 },
 "test.acquisition.test_monte_carlo": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.acquisition.test_monte_carlo.DummyMCAcquisitionFunction": {
  "lineno": 26,
  "symbols_in_volume": [
   "botorch.acquisition.monte_carlo.MCAcquisitionFunction"
  ],
  "type": "class"
 },
 "test.acquisition.test_monte_carlo.DummyMCAcquisitionFunction.forward": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.acquisition.test_monte_carlo.TestMCAcquisitionFunction": {
  "lineno": 31,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_monte_carlo.TestMCAcquisitionFunction.test_abstract_raises": {
  "lineno": 32,
  "symbols_in_volume": [
   "botorch.acquisition.monte_carlo.MCAcquisitionFunction",
   "botorch.exceptions.UnsupportedError",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "unittest.mock.PropertyMock",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "test.acquisition.test_monte_carlo.TestQExpectedImprovement": {
  "lineno": 44,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_monte_carlo.TestQExpectedImprovement.test_q_expected_improvement": {
  "lineno": 45,
  "symbols_in_volume": [
   "botorch.acquisition.monte_carlo.qExpectedImprovement",
   "botorch.acquisition.objective.ScalarizedObjective",
   "botorch.exceptions.BotorchWarning",
   "botorch.exceptions.UnsupportedError",
   "botorch.sampling.samplers.IIDNormalSampler",
   "botorch.sampling.samplers.SobolQMCNormalSampler",
   "botorch.settings.debug",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "torch.Size",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.rand",
   "torch.zeros",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "test.acquisition.test_monte_carlo.TestQExpectedImprovement.test_q_expected_improvement_batch": {
  "lineno": 124,
  "symbols_in_volume": [
   "botorch.acquisition.monte_carlo.qExpectedImprovement",
   "botorch.sampling.samplers.IIDNormalSampler",
   "botorch.sampling.samplers.SobolQMCNormalSampler",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "torch.Size",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.acquisition.test_monte_carlo.TestQNoisyExpectedImprovement": {
  "lineno": 199,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_monte_carlo.TestQNoisyExpectedImprovement.test_prune_baseline": {
  "lineno": 355,
  "symbols_in_volume": [
   "botorch.acquisition.monte_carlo.qNoisyExpectedImprovement",
   "botorch.utils.testing.MockModel",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.rand",
   "torch.zeros",
   "unittest.mock.Mock",
   "unittest.mock.PropertyMock",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "test.acquisition.test_monte_carlo.TestQNoisyExpectedImprovement.test_q_noisy_expected_improvement": {
  "lineno": 200,
  "symbols_in_volume": [
   "botorch.acquisition.monte_carlo.qNoisyExpectedImprovement",
   "botorch.exceptions.BotorchWarning",
   "botorch.sampling.samplers.IIDNormalSampler",
   "botorch.sampling.samplers.SobolQMCNormalSampler",
   "botorch.settings.debug",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "torch.Size",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.tensor",
   "torch.zeros",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "test.acquisition.test_monte_carlo.TestQNoisyExpectedImprovement.test_q_noisy_expected_improvement_batch": {
  "lineno": 281,
  "symbols_in_volume": [
   "botorch.acquisition.monte_carlo.qNoisyExpectedImprovement",
   "botorch.sampling.samplers.IIDNormalSampler",
   "botorch.sampling.samplers.SobolQMCNormalSampler",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "torch.Size",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.acquisition.test_monte_carlo.TestQProbabilityOfImprovement": {
  "lineno": 374,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_monte_carlo.TestQProbabilityOfImprovement.test_q_probability_of_improvement": {
  "lineno": 375,
  "symbols_in_volume": [
   "botorch.acquisition.monte_carlo.qProbabilityOfImprovement",
   "botorch.exceptions.BotorchWarning",
   "botorch.sampling.samplers.IIDNormalSampler",
   "botorch.sampling.samplers.SobolQMCNormalSampler",
   "botorch.settings.debug",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "torch.Size",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.zeros",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "test.acquisition.test_monte_carlo.TestQProbabilityOfImprovement.test_q_probability_of_improvement_batch": {
  "lineno": 436,
  "symbols_in_volume": [
   "botorch.acquisition.monte_carlo.qProbabilityOfImprovement",
   "botorch.sampling.samplers.IIDNormalSampler",
   "botorch.sampling.samplers.SobolQMCNormalSampler",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "torch.Size",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.acquisition.test_monte_carlo.TestQSimpleRegret": {
  "lineno": 505,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_monte_carlo.TestQSimpleRegret.test_q_simple_regret": {
  "lineno": 506,
  "symbols_in_volume": [
   "botorch.acquisition.monte_carlo.qSimpleRegret",
   "botorch.exceptions.BotorchWarning",
   "botorch.sampling.samplers.IIDNormalSampler",
   "botorch.sampling.samplers.SobolQMCNormalSampler",
   "botorch.settings.debug",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "torch.Size",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.zeros",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "test.acquisition.test_monte_carlo.TestQSimpleRegret.test_q_simple_regret_batch": {
  "lineno": 567,
  "symbols_in_volume": [
   "botorch.acquisition.monte_carlo.qSimpleRegret",
   "botorch.sampling.samplers.IIDNormalSampler",
   "botorch.sampling.samplers.SobolQMCNormalSampler",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "torch.Size",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.acquisition.test_monte_carlo.TestQUpperConfidenceBound": {
  "lineno": 635,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_monte_carlo.TestQUpperConfidenceBound.test_q_upper_confidence_bound": {
  "lineno": 636,
  "symbols_in_volume": [
   "botorch.acquisition.monte_carlo.qUpperConfidenceBound",
   "botorch.exceptions.BotorchWarning",
   "botorch.sampling.samplers.IIDNormalSampler",
   "botorch.sampling.samplers.SobolQMCNormalSampler",
   "botorch.settings.debug",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "torch.Size",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.zeros",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "test.acquisition.test_monte_carlo.TestQUpperConfidenceBound.test_q_upper_confidence_bound_batch": {
  "lineno": 697,
  "symbols_in_volume": [
   "botorch.acquisition.monte_carlo.qUpperConfidenceBound",
   "botorch.exceptions.BotorchWarning",
   "botorch.sampling.samplers.IIDNormalSampler",
   "botorch.sampling.samplers.SobolQMCNormalSampler",
   "botorch.settings.debug",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "torch.Size",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.zeros",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "test.acquisition.test_objective": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.acquisition.test_objective.TestConstrainedMCObjective": {
  "lineno": 84,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_objective.TestConstrainedMCObjective.test_constrained_mc_objective": {
  "lineno": 85,
  "symbols_in_volume": [
   "botorch.acquisition.objective.ConstrainedMCObjective",
   "botorch.utils.apply_constraints",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.randn"
  ],
  "type": "function"
 },
 "test.acquisition.test_objective.TestGenericMCObjective": {
  "lineno": 70,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_objective.TestGenericMCObjective.test_generic_mc_objective": {
  "lineno": 71,
  "symbols_in_volume": [
   "botorch.acquisition.objective.GenericMCObjective",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.randn"
  ],
  "type": "function"
 },
 "test.acquisition.test_objective.TestIdentityMCObjective": {
  "lineno": 158,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_objective.TestIdentityMCObjective.test_identity_mc_objective": {
  "lineno": 159,
  "symbols_in_volume": [
   "botorch.acquisition.objective.IdentityMCObjective",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.randn"
  ],
  "type": "function"
 },
 "test.acquisition.test_objective.TestLinearMCObjective": {
  "lineno": 176,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_objective.TestLinearMCObjective.test_linear_mc_objective": {
  "lineno": 177,
  "symbols_in_volume": [
   "botorch.acquisition.objective.LinearMCObjective",
   "torch.allclose",
   "torch.double",
   "torch.float",
   "torch.rand",
   "torch.randn",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.acquisition.test_objective.TestMCAcquisitionObjective": {
  "lineno": 64,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_objective.TestMCAcquisitionObjective.test_abstract_raises": {
  "lineno": 65,
  "symbols_in_volume": [
   "botorch.acquisition.objective.MCAcquisitionObjective"
  ],
  "type": "function"
 },
 "test.acquisition.test_objective.TestScalarizedObjective": {
  "lineno": 37,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_objective.TestScalarizedObjective.test_affine_acquisition_objective": {
  "lineno": 38,
  "symbols_in_volume": [
   "botorch.acquisition.objective.ScalarizedObjective",
   "itertools.product",
   "torch.Size",
   "torch.allclose",
   "torch.double",
   "torch.float",
   "torch.rand",
   "torch.randn"
  ],
  "type": "function"
 },
 "test.acquisition.test_objective.feasible_con": {
  "lineno": 33,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.ones"
  ],
  "type": "function"
 },
 "test.acquisition.test_objective.generic_obj": {
  "lineno": 25,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.log",
   "torch.sum"
  ],
  "type": "function"
 },
 "test.acquisition.test_objective.infeasible_con": {
  "lineno": 29,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.ones"
  ],
  "type": "function"
 },
 "test.acquisition.test_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.acquisition.test_utils.DummyMCObjective": {
  "lineno": 26,
  "symbols_in_volume": [
   "botorch.acquisition.objective.MCAcquisitionObjective"
  ],
  "type": "class"
 },
 "test.acquisition.test_utils.DummyMCObjective.forward": {
  "lineno": 27,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "test.acquisition.test_utils.TestFidelityUtils": {
  "lineno": 352,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_utils.TestFidelityUtils.test_expand_trace_observations": {
  "lineno": 380,
  "symbols_in_volume": [
   "botorch.acquisition.utils.expand_trace_observations",
   "itertools.product",
   "torch.Size",
   "torch.allclose",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.full_like",
   "torch.rand"
  ],
  "type": "function"
 },
 "test.acquisition.test_utils.TestFidelityUtils.test_project_to_target_fidelity": {
  "lineno": 353,
  "symbols_in_volume": [
   "botorch.acquisition.utils.project_to_target_fidelity",
   "itertools.product",
   "torch.all",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.ones",
   "torch.rand"
  ],
  "type": "function"
 },
 "test.acquisition.test_utils.TestGetAcquisitionFunction": {
  "lineno": 31,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_utils.TestGetAcquisitionFunction.setUp": {
  "lineno": 32,
  "symbols_in_volume": [
   "torch.tensor",
   "unittest.mock.MagicMock"
  ],
  "type": "function"
 },
 "test.acquisition.test_utils.TestGetAcquisitionFunction.test_GetQEI": {
  "lineno": 42,
  "symbols_in_volume": [
   "botorch.acquisition.monte_carlo.__name__",
   "botorch.acquisition.utils.get_acquisition_function",
   "botorch.sampling.samplers.SobolQMCNormalSampler",
   "torch.Size",
   "torch.equal",
   "unittest.mock.ANY",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "test.acquisition.test_utils.TestGetAcquisitionFunction.test_GetQNEI": {
  "lineno": 121,
  "symbols_in_volume": [
   "botorch.acquisition.monte_carlo.__name__",
   "botorch.acquisition.utils.get_acquisition_function",
   "botorch.sampling.samplers.IIDNormalSampler",
   "botorch.sampling.samplers.SobolQMCNormalSampler",
   "torch.Size",
   "torch.equal",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "test.acquisition.test_utils.TestGetAcquisitionFunction.test_GetQPI": {
  "lineno": 70,
  "symbols_in_volume": [
   "botorch.acquisition.monte_carlo.__name__",
   "botorch.acquisition.utils.get_acquisition_function",
   "botorch.sampling.samplers.IIDNormalSampler",
   "botorch.sampling.samplers.SobolQMCNormalSampler",
   "torch.Size",
   "torch.equal",
   "unittest.mock.ANY",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "test.acquisition.test_utils.TestGetAcquisitionFunction.test_GetQSR": {
  "lineno": 165,
  "symbols_in_volume": [
   "botorch.acquisition.monte_carlo.__name__",
   "botorch.acquisition.utils.get_acquisition_function",
   "botorch.sampling.samplers.IIDNormalSampler",
   "botorch.sampling.samplers.SobolQMCNormalSampler",
   "torch.Size",
   "torch.equal",
   "unittest.mock.ANY",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "test.acquisition.test_utils.TestGetAcquisitionFunction.test_GetQUCB": {
  "lineno": 211,
  "symbols_in_volume": [
   "botorch.acquisition.monte_carlo.__name__",
   "botorch.acquisition.utils.get_acquisition_function",
   "botorch.sampling.samplers.IIDNormalSampler",
   "botorch.sampling.samplers.SobolQMCNormalSampler",
   "torch.Size",
   "torch.equal",
   "unittest.mock.ANY",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "test.acquisition.test_utils.TestGetAcquisitionFunction.test_GetUnknownAcquisitionFunction": {
  "lineno": 271,
  "symbols_in_volume": [
   "botorch.acquisition.utils.get_acquisition_function"
  ],
  "type": "function"
 },
 "test.acquisition.test_utils.TestGetInfeasibleCost": {
  "lineno": 284,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_utils.TestGetInfeasibleCost.test_get_infeasible_cost": {
  "lineno": 285,
  "symbols_in_volume": [
   "botorch.acquisition.utils.get_infeasible_cost",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "torch.double",
   "torch.float",
   "torch.tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.acquisition.test_utils.TestPruneInferiorPoints": {
  "lineno": 303,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.acquisition.test_utils.TestPruneInferiorPoints.test_prune_inferior_points": {
  "lineno": 304,
  "symbols_in_volume": [
   "botorch.acquisition.objective.GenericMCObjective",
   "botorch.acquisition.utils.prune_inferior_points",
   "botorch.exceptions.UnsupportedError",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.rand",
   "torch.tensor",
   "unittest.mock.patch.object"
  ],
  "type": "function"
 },
 "test.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.exceptions.test_errors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.exceptions.test_errors.TestBotorchExceptions": {
  "lineno": 17,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.exceptions.test_errors.TestBotorchExceptions.test_botorch_exception_hierarchy": {
  "lineno": 18,
  "symbols_in_volume": [
   "botorch.exceptions.errors.BotorchError",
   "botorch.exceptions.errors.BotorchTensorDimensionError",
   "botorch.exceptions.errors.CandidateGenerationError",
   "botorch.exceptions.errors.InputDataError",
   "botorch.exceptions.errors.UnsupportedError"
  ],
  "type": "function"
 },
 "test.exceptions.test_errors.TestBotorchExceptions.test_raise_botorch_exceptions": {
  "lineno": 25,
  "symbols_in_volume": [
   "botorch.exceptions.errors.BotorchError",
   "botorch.exceptions.errors.BotorchTensorDimensionError",
   "botorch.exceptions.errors.CandidateGenerationError",
   "botorch.exceptions.errors.InputDataError",
   "botorch.exceptions.errors.UnsupportedError"
  ],
  "type": "function"
 },
 "test.exceptions.test_warnings": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.exceptions.test_warnings.TestBotorchWarnings": {
  "lineno": 22,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.exceptions.test_warnings.TestBotorchWarnings.test_botorch_warnings": {
  "lineno": 32,
  "symbols_in_volume": [
   "botorch.exceptions.warnings.BadInitialCandidatesWarning",
   "botorch.exceptions.warnings.BotorchTensorDimensionWarning",
   "botorch.exceptions.warnings.BotorchWarning",
   "botorch.exceptions.warnings.CostAwareWarning",
   "botorch.exceptions.warnings.InputDataWarning",
   "botorch.exceptions.warnings.OptimizationWarning",
   "botorch.exceptions.warnings.SamplingWarning",
   "botorch.settings.debug",
   "warnings.catch_warnings",
   "warnings.warn"
  ],
  "type": "function"
 },
 "test.exceptions.test_warnings.TestBotorchWarnings.test_botorch_warnings_hierarchy": {
  "lineno": 23,
  "symbols_in_volume": [
   "botorch.exceptions.warnings.BadInitialCandidatesWarning",
   "botorch.exceptions.warnings.BotorchTensorDimensionWarning",
   "botorch.exceptions.warnings.BotorchWarning",
   "botorch.exceptions.warnings.CostAwareWarning",
   "botorch.exceptions.warnings.InputDataWarning",
   "botorch.exceptions.warnings.OptimizationWarning",
   "botorch.exceptions.warnings.SamplingWarning"
  ],
  "type": "function"
 },
 "test.models": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.models.kernels": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.models.kernels.test_downsampling": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel": {
  "lineno": 14,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase",
   "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  ],
  "type": "class"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.create_data_double_batch": {
  "lineno": 24,
  "symbols_in_volume": [
   "torch.rand"
  ],
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.create_data_no_batch": {
  "lineno": 18,
  "symbols_in_volume": [
   "torch.rand"
  ],
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.create_data_single_batch": {
  "lineno": 21,
  "symbols_in_volume": [
   "torch.rand"
  ],
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.create_kernel_no_ard": {
  "lineno": 15,
  "symbols_in_volume": [
   "botorch.models.kernels.downsampling.DownsamplingKernel"
  ],
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.test_computes_downsampling_function": {
  "lineno": 45,
  "symbols_in_volume": [
   "botorch.models.kernels.downsampling.DownsamplingKernel",
   "torch.norm",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.test_computes_downsampling_function_batch": {
  "lineno": 93,
  "symbols_in_volume": [
   "botorch.models.kernels.downsampling.DownsamplingKernel",
   "torch.Size",
   "torch.norm",
   "torch.tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.test_diag_calculation": {
  "lineno": 173,
  "symbols_in_volume": [
   "botorch.models.kernels.downsampling.DownsamplingKernel",
   "torch.diag",
   "torch.norm",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.test_initialize_offset": {
  "lineno": 116,
  "symbols_in_volume": [
   "botorch.models.kernels.downsampling.DownsamplingKernel",
   "torch.norm",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.test_initialize_offset_batch": {
  "lineno": 122,
  "symbols_in_volume": [
   "botorch.models.kernels.downsampling.DownsamplingKernel",
   "torch.Size",
   "torch.norm",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.test_initialize_offset_prior": {
  "lineno": 196,
  "symbols_in_volume": [
   "botorch.models.kernels.downsampling.DownsamplingKernel",
   "gpytorch.priors.torch_priors.GammaPrior",
   "gpytorch.priors.torch_priors.NormalPrior"
  ],
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.test_initialize_power": {
  "lineno": 129,
  "symbols_in_volume": [
   "botorch.models.kernels.downsampling.DownsamplingKernel",
   "torch.norm",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.test_initialize_power_batch": {
  "lineno": 135,
  "symbols_in_volume": [
   "botorch.models.kernels.downsampling.DownsamplingKernel",
   "torch.Size",
   "torch.norm",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.test_initialize_power_prior": {
  "lineno": 189,
  "symbols_in_volume": [
   "botorch.models.kernels.downsampling.DownsamplingKernel",
   "gpytorch.priors.torch_priors.GammaPrior",
   "gpytorch.priors.torch_priors.NormalPrior"
  ],
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.test_last_dim_is_batch": {
  "lineno": 142,
  "symbols_in_volume": [
   "botorch.models.kernels.downsampling.DownsamplingKernel",
   "torch.norm",
   "torch.tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.test_subset_active_compute_downsampling_function": {
  "lineno": 27,
  "symbols_in_volume": [
   "botorch.models.kernels.downsampling.DownsamplingKernel",
   "torch.cat",
   "torch.norm",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.test_subset_computes_active_downsampling_function_batch": {
  "lineno": 61,
  "symbols_in_volume": [
   "botorch.models.kernels.downsampling.DownsamplingKernel",
   "torch.Size",
   "torch.cat",
   "torch.norm",
   "torch.tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.models.kernels.test_exponential_decay": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.models.kernels.test_exponential_decay.TestExponentialDecayKernel": {
  "lineno": 14,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase",
   "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  ],
  "type": "class"
 },
 "test.models.kernels.test_exponential_decay.TestExponentialDecayKernel.create_kernel_no_ard": {
  "lineno": 15,
  "symbols_in_volume": [
   "botorch.models.kernels.exponential_decay.ExponentialDecayKernel"
  ],
  "type": "function"
 },
 "test.models.kernels.test_exponential_decay.TestExponentialDecayKernel.test_computes_exponential_decay_function": {
  "lineno": 37,
  "symbols_in_volume": [
   "botorch.models.kernels.exponential_decay.ExponentialDecayKernel",
   "torch.norm",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.models.kernels.test_exponential_decay.TestExponentialDecayKernel.test_computes_exponential_decay_function_batch": {
  "lineno": 76,
  "symbols_in_volume": [
   "botorch.models.kernels.exponential_decay.ExponentialDecayKernel",
   "torch.Size",
   "torch.norm",
   "torch.tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.models.kernels.test_exponential_decay.TestExponentialDecayKernel.test_initialize_lengthscale": {
  "lineno": 98,
  "symbols_in_volume": [
   "botorch.models.kernels.exponential_decay.ExponentialDecayKernel",
   "torch.norm",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.models.kernels.test_exponential_decay.TestExponentialDecayKernel.test_initialize_lengthscale_batch": {
  "lineno": 104,
  "symbols_in_volume": [
   "botorch.models.kernels.exponential_decay.ExponentialDecayKernel",
   "torch.Size",
   "torch.norm",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.models.kernels.test_exponential_decay.TestExponentialDecayKernel.test_initialize_offset": {
  "lineno": 111,
  "symbols_in_volume": [
   "botorch.models.kernels.exponential_decay.ExponentialDecayKernel",
   "torch.norm",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.models.kernels.test_exponential_decay.TestExponentialDecayKernel.test_initialize_offset_batch": {
  "lineno": 117,
  "symbols_in_volume": [
   "botorch.models.kernels.exponential_decay.ExponentialDecayKernel",
   "torch.Size",
   "torch.norm",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.models.kernels.test_exponential_decay.TestExponentialDecayKernel.test_initialize_offset_prior": {
  "lineno": 144,
  "symbols_in_volume": [
   "botorch.models.kernels.exponential_decay.ExponentialDecayKernel",
   "gpytorch.priors.torch_priors.GammaPrior",
   "gpytorch.priors.torch_priors.NormalPrior"
  ],
  "type": "function"
 },
 "test.models.kernels.test_exponential_decay.TestExponentialDecayKernel.test_initialize_power": {
  "lineno": 124,
  "symbols_in_volume": [
   "botorch.models.kernels.exponential_decay.ExponentialDecayKernel",
   "torch.norm",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.models.kernels.test_exponential_decay.TestExponentialDecayKernel.test_initialize_power_batch": {
  "lineno": 130,
  "symbols_in_volume": [
   "botorch.models.kernels.exponential_decay.ExponentialDecayKernel",
   "torch.Size",
   "torch.norm",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.models.kernels.test_exponential_decay.TestExponentialDecayKernel.test_initialize_power_prior": {
  "lineno": 137,
  "symbols_in_volume": [
   "botorch.models.kernels.exponential_decay.ExponentialDecayKernel",
   "gpytorch.priors.torch_priors.GammaPrior",
   "gpytorch.priors.torch_priors.NormalPrior"
  ],
  "type": "function"
 },
 "test.models.kernels.test_exponential_decay.TestExponentialDecayKernel.test_subset_active_compute_exponential_decay_function": {
  "lineno": 18,
  "symbols_in_volume": [
   "botorch.models.kernels.exponential_decay.ExponentialDecayKernel",
   "torch.cat",
   "torch.norm",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.models.kernels.test_exponential_decay.TestExponentialDecayKernel.test_subset_active_exponential_decay_function_batch": {
  "lineno": 54,
  "symbols_in_volume": [
   "botorch.models.kernels.exponential_decay.ExponentialDecayKernel",
   "torch.Size",
   "torch.norm",
   "torch.tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.models.kernels.test_linear_truncated_fidelity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel": {
  "lineno": 21,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase",
   "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  ],
  "type": "class"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel.create_data_double_batch": {
  "lineno": 33,
  "symbols_in_volume": [
   "torch.rand"
  ],
  "type": "function"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel.create_data_no_batch": {
  "lineno": 27,
  "symbols_in_volume": [
   "torch.rand"
  ],
  "type": "function"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel.create_data_single_batch": {
  "lineno": 30,
  "symbols_in_volume": [
   "torch.rand"
  ],
  "type": "function"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel.create_kernel_no_ard": {
  "lineno": 22,
  "symbols_in_volume": [
   "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel"
  ],
  "type": "function"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel.test_active_dims_list": {
  "lineno": 176,
  "symbols_in_volume": [
   "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel",
   "torch.norm"
  ],
  "type": "function"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel.test_active_dims_range": {
  "lineno": 188,
  "symbols_in_volume": [
   "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel",
   "torch.norm"
  ],
  "type": "function"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel.test_compute_linear_truncated_kernel_no_batch": {
  "lineno": 36,
  "symbols_in_volume": [
   "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel",
   "gpytorch.kernels.matern_kernel.MaternKernel",
   "itertools.product",
   "torch.float",
   "torch.norm",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel.test_compute_linear_truncated_kernel_with_batch": {
  "lineno": 72,
  "symbols_in_volume": [
   "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel",
   "gpytorch.kernels.matern_kernel.MaternKernel",
   "itertools.product",
   "torch.Size",
   "torch.diagonal",
   "torch.float",
   "torch.norm",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel.test_initialize_covar_module": {
  "lineno": 202,
  "symbols_in_volume": [
   "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel",
   "gpytorch.kernels.matern_kernel.MaternKernel",
   "gpytorch.kernels.rbf_kernel.RBFKernel"
  ],
  "type": "function"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel.test_initialize_lengthscale_prior": {
  "lineno": 120,
  "symbols_in_volume": [
   "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel",
   "gpytorch.priors.torch_priors.GammaPrior",
   "gpytorch.priors.torch_priors.NormalPrior"
  ],
  "type": "function"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel.test_initialize_power": {
  "lineno": 151,
  "symbols_in_volume": [
   "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel",
   "torch.float",
   "torch.norm",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel.test_initialize_power_batch": {
  "lineno": 157,
  "symbols_in_volume": [
   "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel",
   "torch.Size",
   "torch.float",
   "torch.norm",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel.test_initialize_power_prior": {
  "lineno": 145,
  "symbols_in_volume": [
   "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel",
   "gpytorch.priors.torch_priors.NormalPrior"
  ],
  "type": "function"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel.test_raise_init_errors": {
  "lineno": 166,
  "symbols_in_volume": [
   "botorch.exceptions.UnsupportedError",
   "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel"
  ],
  "type": "function"
 },
 "test.models.test_converter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.models.test_converter.TestConverters": {
  "lineno": 24,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.models.test_converter.TestConverters.test_batched_to_model_list": {
  "lineno": 25,
  "symbols_in_volume": [
   "botorch.models.FixedNoiseGP",
   "botorch.models.HeteroskedasticSingleTaskGP",
   "botorch.models.ModelListGP",
   "botorch.models.SingleTaskGP",
   "botorch.models.SingleTaskMultiFidelityGP",
   "botorch.models.converter.batched_to_model_list",
   "torch.double",
   "torch.float",
   "torch.rand",
   "torch.rand_like",
   "torch.stack"
  ],
  "type": "function"
 },
 "test.models.test_converter.TestConverters.test_model_list_to_batched": {
  "lineno": 53,
  "symbols_in_volume": [
   "botorch.exceptions.UnsupportedError",
   "botorch.models.FixedNoiseGP",
   "botorch.models.HeteroskedasticSingleTaskGP",
   "botorch.models.ModelListGP",
   "botorch.models.SingleTaskGP",
   "botorch.models.SingleTaskMultiFidelityGP",
   "botorch.models.converter.model_list_to_batched",
   "gpytorch.likelihoods.GaussianLikelihood",
   "torch.cat",
   "torch.double",
   "torch.float",
   "torch.nn.Parameter",
   "torch.ones_like",
   "torch.rand",
   "torch.rand_like",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.models.test_converter.TestConverters.test_roundtrip": {
  "lineno": 125,
  "symbols_in_volume": [
   "botorch.models.FixedNoiseGP",
   "botorch.models.SingleTaskGP",
   "botorch.models.SingleTaskMultiFidelityGP",
   "botorch.models.converter.batched_to_model_list",
   "botorch.models.converter.model_list_to_batched",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.rand",
   "torch.rand_like",
   "torch.stack"
  ],
  "type": "function"
 },
 "test.models.test_cost": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.models.test_cost.TestCostModels": {
  "lineno": 14,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.models.test_cost.TestCostModels.test_affine_fidelity_cost_model": {
  "lineno": 15,
  "symbols_in_volume": [
   "botorch.models.cost.AffineFidelityCostModel",
   "random.random",
   "torch.allclose",
   "torch.double",
   "torch.float",
   "torch.rand"
  ],
  "type": "function"
 },
 "test.models.test_deterministic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.models.test_deterministic.TestDeterministicModels": {
  "lineno": 18,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.models.test_deterministic.TestDeterministicModels.test_AffineDeterministicModel": {
  "lineno": 48,
  "symbols_in_volume": [
   "botorch.models.deterministic.AffineDeterministicModel",
   "torch.equal",
   "torch.rand"
  ],
  "type": "function"
 },
 "test.models.test_deterministic.TestDeterministicModels.test_GenericDeterministicModel": {
  "lineno": 23,
  "symbols_in_volume": [
   "botorch.exceptions.errors.UnsupportedError",
   "botorch.models.deterministic.GenericDeterministicModel",
   "botorch.posteriors.deterministic.DeterministicPosterior",
   "torch.equal",
   "torch.rand"
  ],
  "type": "function"
 },
 "test.models.test_deterministic.TestDeterministicModels.test_GenericDeterministicModel.f": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.models.test_deterministic.TestDeterministicModels.test_abstract_base_model": {
  "lineno": 19,
  "symbols_in_volume": [
   "botorch.models.deterministic.DeterministicModel"
  ],
  "type": "function"
 },
 "test.models.test_gp_regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.models.test_gp_regression.TestFixedNoiseGP": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.models.test_gp_regression.TestFixedNoiseGP._get_model_and_data": {
  "lineno": 276,
  "symbols_in_volume": [
   "botorch.models.gp_regression.FixedNoiseGP",
   "botorch.utils.testing._get_random_data",
   "torch.full_like"
  ],
  "type": "function"
 },
 "test.models.test_gp_regression.TestFixedNoiseGP.test_fixed_noise_likelihood": {
  "lineno": 290,
  "symbols_in_volume": [
   "gpytorch.likelihoods.FixedNoiseGaussianLikelihood",
   "itertools.product",
   "torch.Size",
   "torch.double",
   "torch.equal",
   "torch.float"
  ],
  "type": "function"
 },
 "test.models.test_gp_regression.TestHeteroskedasticSingleTaskGP": {
  "lineno": 307,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.models.test_gp_regression.TestHeteroskedasticSingleTaskGP._get_model_and_data": {
  "lineno": 308,
  "symbols_in_volume": [
   "botorch.models.gp_regression.HeteroskedasticSingleTaskGP",
   "botorch.utils.sampling.manual_seed",
   "botorch.utils.testing._get_random_data",
   "torch.rand_like"
  ],
  "type": "function"
 },
 "test.models.test_gp_regression.TestHeteroskedasticSingleTaskGP.test_condition_on_observations": {
  "lineno": 340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.models.test_gp_regression.TestHeteroskedasticSingleTaskGP.test_fantasize": {
  "lineno": 344,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.models.test_gp_regression.TestHeteroskedasticSingleTaskGP.test_heteroskedastic_likelihood": {
  "lineno": 324,
  "symbols_in_volume": [
   "botorch.models.gp_regression.SingleTaskGP",
   "gpytorch.likelihoods.GaussianLikelihood",
   "gpytorch.likelihoods.HeteroskedasticNoise",
   "gpytorch.likelihoods._GaussianLikelihoodBase",
   "gpytorch.mlls.noise_model_added_loss_term.NoiseModelAddedLossTerm",
   "itertools.product",
   "torch.Size",
   "torch.double",
   "torch.float"
  ],
  "type": "function"
 },
 "test.models.test_gp_regression.TestHeteroskedasticSingleTaskGP.test_subset_model": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.models.test_gp_regression.TestSingleTaskGP": {
  "lineno": 37,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.models.test_gp_regression.TestSingleTaskGP._get_model_and_data": {
  "lineno": 38,
  "symbols_in_volume": [
   "botorch.models.gp_regression.SingleTaskGP",
   "botorch.utils.testing._get_random_data"
  ],
  "type": "function"
 },
 "test.models.test_gp_regression.TestSingleTaskGP.test_condition_on_observations": {
  "lineno": 132,
  "symbols_in_volume": [
   "botorch.models.gp_regression.FixedNoiseGP",
   "botorch.models.transforms.Standardize",
   "botorch.utils.testing._get_random_data",
   "itertools.product",
   "torch.Size",
   "torch.allclose",
   "torch.double",
   "torch.float",
   "torch.full_like",
   "torch.rand"
  ],
  "type": "function"
 },
 "test.models.test_gp_regression.TestSingleTaskGP.test_fantasize": {
  "lineno": 233,
  "symbols_in_volume": [
   "botorch.models.transforms.Standardize",
   "botorch.sampling.SobolQMCNormalSampler",
   "itertools.product",
   "torch.Size",
   "torch.double",
   "torch.float",
   "torch.rand"
  ],
  "type": "function"
 },
 "test.models.test_gp_regression.TestSingleTaskGP.test_gp": {
  "lineno": 48,
  "symbols_in_volume": [
   "botorch.exceptions.warnings.OptimizationWarning",
   "botorch.fit_gpytorch_model",
   "botorch.models.transforms.Standardize",
   "botorch.posteriors.GPyTorchPosterior",
   "gpytorch.kernels.MaternKernel",
   "gpytorch.kernels.ScaleKernel",
   "gpytorch.means.ConstantMean",
   "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
   "gpytorch.priors.GammaPrior",
   "itertools.product",
   "torch.Size",
   "torch.allclose",
   "torch.double",
   "torch.float",
   "torch.rand",
   "torch.tensor",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "test.models.test_gp_regression.TestSingleTaskGP.test_subset_model": {
  "lineno": 253,
  "symbols_in_volume": [
   "itertools.product",
   "torch.Size",
   "torch.allclose",
   "torch.double",
   "torch.float",
   "torch.rand"
  ],
  "type": "function"
 },
 "test.models.test_gp_regression._get_pvar_expected": {
  "lineno": 353,
  "symbols_in_volume": [
   "botorch.models.utils.add_output_dim",
   "gpytorch.likelihoods.FixedNoiseGaussianLikelihood",
   "torch.stack"
  ],
  "type": "function"
 },
 "test.models.test_gp_regression_fidelity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.models.test_gp_regression_fidelity.TestFixedNoiseMultiFidelityGP": {
  "lineno": 332,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.models.test_gp_regression_fidelity.TestFixedNoiseMultiFidelityGP._get_model_and_data": {
  "lineno": 333,
  "symbols_in_volume": [
   "botorch.models.gp_regression_fidelity.FixedNoiseMultiFidelityGP",
   "torch.full_like"
  ],
  "type": "function"
 },
 "test.models.test_gp_regression_fidelity.TestFixedNoiseMultiFidelityGP.test_fixed_noise_likelihood": {
  "lineno": 371,
  "symbols_in_volume": [
   "gpytorch.likelihoods.FixedNoiseGaussianLikelihood",
   "itertools.product",
   "torch.Size",
   "torch.double",
   "torch.equal",
   "torch.float"
  ],
  "type": "function"
 },
 "test.models.test_gp_regression_fidelity.TestFixedNoiseMultiFidelityGP.test_init_error": {
  "lineno": 361,
  "symbols_in_volume": [
   "botorch.exceptions.errors.UnsupportedError",
   "botorch.models.gp_regression_fidelity.FixedNoiseMultiFidelityGP",
   "torch.full_like",
   "torch.rand"
  ],
  "type": "function"
 },
 "test.models.test_gp_regression_fidelity.TestSingleTaskMultiFidelityGP": {
  "lineno": 40,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.models.test_gp_regression_fidelity.TestSingleTaskMultiFidelityGP._get_model_and_data": {
  "lineno": 44,
  "symbols_in_volume": [
   "botorch.models.gp_regression_fidelity.SingleTaskMultiFidelityGP"
  ],
  "type": "function"
 },
 "test.models.test_gp_regression_fidelity.TestSingleTaskMultiFidelityGP.test_condition_on_observations": {
  "lineno": 152,
  "symbols_in_volume": [
   "botorch.models.gp_regression.FixedNoiseGP",
   "itertools.product",
   "torch.Size",
   "torch.allclose",
   "torch.double",
   "torch.float",
   "torch.full_like",
   "torch.rand"
  ],
  "type": "function"
 },
 "test.models.test_gp_regression_fidelity.TestSingleTaskMultiFidelityGP.test_fantasize": {
  "lineno": 269,
  "symbols_in_volume": [
   "botorch.sampling.SobolQMCNormalSampler",
   "itertools.product",
   "torch.Size",
   "torch.double",
   "torch.float",
   "torch.rand"
  ],
  "type": "function"
 },
 "test.models.test_gp_regression_fidelity.TestSingleTaskMultiFidelityGP.test_gp": {
  "lineno": 79,
  "symbols_in_volume": [
   "botorch.exceptions.warnings.OptimizationWarning",
   "botorch.fit_gpytorch_model",
   "botorch.models.transforms.Standardize",
   "botorch.posteriors.GPyTorchPosterior",
   "gpytorch.kernels.scale_kernel.ScaleKernel",
   "gpytorch.means.ConstantMean",
   "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
   "itertools.product",
   "torch.Size",
   "torch.allclose",
   "torch.double",
   "torch.float",
   "torch.rand",
   "torch.tensor",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "test.models.test_gp_regression_fidelity.TestSingleTaskMultiFidelityGP.test_init_error": {
  "lineno": 70,
  "symbols_in_volume": [
   "botorch.exceptions.errors.UnsupportedError",
   "botorch.models.gp_regression_fidelity.SingleTaskMultiFidelityGP",
   "torch.rand"
  ],
  "type": "function"
 },
 "test.models.test_gp_regression_fidelity.TestSingleTaskMultiFidelityGP.test_subset_model": {
  "lineno": 298,
  "symbols_in_volume": [
   "itertools.product",
   "torch.Size",
   "torch.allclose",
   "torch.double",
   "torch.float",
   "torch.rand"
  ],
  "type": "function"
 },
 "test.models.test_gp_regression_fidelity._get_random_data_with_fidelity": {
  "lineno": 29,
  "symbols_in_volume": [
   "botorch.utils.testing._get_random_data",
   "torch.Size",
   "torch.cat",
   "torch.rand"
  ],
  "type": "function"
 },
 "test.models.test_gpytorch": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.models.test_gpytorch.SimpleBatchedMultiOutputGPyTorchModel": {
  "lineno": 52,
  "symbols_in_volume": [
   "botorch.models.gpytorch.BatchedMultiOutputGPyTorchModel",
   "gpytorch.models.ExactGP"
  ],
  "type": "class"
 },
 "test.models.test_gpytorch.SimpleBatchedMultiOutputGPyTorchModel.__init__": {
  "lineno": 53,
  "symbols_in_volume": [
   "gpytorch.kernels.RBFKernel",
   "gpytorch.kernels.ScaleKernel",
   "gpytorch.likelihoods.GaussianLikelihood",
   "gpytorch.means.ConstantMean"
  ],
  "type": "function"
 },
 "test.models.test_gpytorch.SimpleBatchedMultiOutputGPyTorchModel.forward": {
  "lineno": 66,
  "symbols_in_volume": [
   "gpytorch.distributions.MultivariateNormal"
  ],
  "type": "function"
 },
 "test.models.test_gpytorch.SimpleGPyTorchModel": {
  "lineno": 31,
  "symbols_in_volume": [
   "botorch.models.gpytorch.GPyTorchModel",
   "gpytorch.models.ExactGP"
  ],
  "type": "class"
 },
 "test.models.test_gpytorch.SimpleGPyTorchModel.__init__": {
  "lineno": 32,
  "symbols_in_volume": [
   "gpytorch.kernels.RBFKernel",
   "gpytorch.kernels.ScaleKernel",
   "gpytorch.likelihoods.GaussianLikelihood",
   "gpytorch.means.ConstantMean"
  ],
  "type": "function"
 },
 "test.models.test_gpytorch.SimpleGPyTorchModel.forward": {
  "lineno": 46,
  "symbols_in_volume": [
   "gpytorch.distributions.MultivariateNormal"
  ],
  "type": "function"
 },
 "test.models.test_gpytorch.SimpleModelListGPyTorchModel": {
  "lineno": 72,
  "symbols_in_volume": [
   "botorch.models.gpytorch.ModelListGPyTorchModel",
   "gpytorch.models.IndependentModelList"
  ],
  "type": "class"
 },
 "test.models.test_gpytorch.SimpleModelListGPyTorchModel.__init__": {
  "lineno": 73,
  "symbols_in_volume": [
   "botorch.models.gpytorch.GPyTorchModel"
  ],
  "type": "function"
 },
 "test.models.test_gpytorch.TestBatchedMultiOutputGPyTorchModel": {
  "lineno": 175,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.models.test_gpytorch.TestBatchedMultiOutputGPyTorchModel.test_batched_multi_output_gpytorch_model": {
  "lineno": 176,
  "symbols_in_volume": [
   "botorch.posteriors.gpytorch.GPyTorchPosterior",
   "botorch.sampling.samplers.SobolQMCNormalSampler",
   "torch.Size",
   "torch.cat",
   "torch.cos",
   "torch.double",
   "torch.float",
   "torch.rand",
   "torch.sin"
  ],
  "type": "function"
 },
 "test.models.test_gpytorch.TestGPyTorchModel": {
  "lineno": 77,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.models.test_gpytorch.TestGPyTorchModel.test_gpytorch_model": {
  "lineno": 78,
  "symbols_in_volume": [
   "botorch.exceptions.BotorchTensorDimensionError",
   "botorch.models.transforms.Standardize",
   "botorch.posteriors.gpytorch.GPyTorchPosterior",
   "botorch.sampling.samplers.SobolQMCNormalSampler",
   "itertools.product",
   "torch.Size",
   "torch.allclose",
   "torch.double",
   "torch.float",
   "torch.rand",
   "torch.sin"
  ],
  "type": "function"
 },
 "test.models.test_gpytorch.TestGPyTorchModel.test_validate_tensor_args": {
  "lineno": 140,
  "symbols_in_volume": [
   "botorch.exceptions.BotorchTensorDimensionError",
   "botorch.exceptions.BotorchTensorDimensionWarning",
   "botorch.models.gpytorch.GPyTorchModel._validate_tensor_args",
   "botorch.settings.debug",
   "itertools.product",
   "torch.Size",
   "torch.double",
   "torch.empty",
   "torch.float"
  ],
  "type": "function"
 },
 "test.models.test_gpytorch.TestModelListGPyTorchModel": {
  "lineno": 246,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.models.test_gpytorch.TestModelListGPyTorchModel.test_model_list_gpytorch_model": {
  "lineno": 247,
  "symbols_in_volume": [
   "botorch.posteriors.gpytorch.GPyTorchPosterior",
   "torch.Size",
   "torch.cos",
   "torch.double",
   "torch.float",
   "torch.rand",
   "torch.sin"
  ],
  "type": "function"
 },
 "test.models.test_model": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.models.test_model.NotSoAbstractBaseModel": {
  "lineno": 11,
  "symbols_in_volume": [
   "botorch.models.model.Model"
  ],
  "type": "class"
 },
 "test.models.test_model.NotSoAbstractBaseModel.posterior": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.models.test_model.TestBaseModel": {
  "lineno": 16,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.models.test_model.TestBaseModel.test_abstract_base_model": {
  "lineno": 17,
  "symbols_in_volume": [
   "botorch.models.model.Model"
  ],
  "type": "function"
 },
 "test.models.test_model.TestBaseModel.test_not_so_abstract_base_model": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.models.test_model_list_gp_regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.models.test_model_list_gp_regression.TestModelListGP": {
  "lineno": 62,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.models.test_model_list_gp_regression.TestModelListGP.test_ModelListGP": {
  "lineno": 63,
  "symbols_in_volume": [
   "botorch.exceptions.errors.BotorchTensorDimensionError",
   "botorch.exceptions.warnings.OptimizationWarning",
   "botorch.fit.fit_gpytorch_model",
   "botorch.models.ModelListGP",
   "botorch.models.transforms.Standardize",
   "botorch.posteriors.GPyTorchPosterior",
   "gpytorch.distributions.MultitaskMultivariateNormal",
   "gpytorch.distributions.MultivariateNormal",
   "gpytorch.kernels.MaternKernel",
   "gpytorch.kernels.ScaleKernel",
   "gpytorch.likelihoods.LikelihoodList",
   "gpytorch.means.ConstantMean",
   "gpytorch.mlls.SumMarginalLogLikelihood",
   "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
   "gpytorch.priors.GammaPrior",
   "itertools.product",
   "torch.allclose",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.rand",
   "torch.tensor",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "test.models.test_model_list_gp_regression.TestModelListGP.test_ModelListGP_fixed_noise": {
  "lineno": 155,
  "symbols_in_volume": [
   "botorch.exceptions.errors.BotorchTensorDimensionError",
   "botorch.exceptions.warnings.OptimizationWarning",
   "botorch.fit.fit_gpytorch_model",
   "botorch.models.ModelListGP",
   "botorch.posteriors.GPyTorchPosterior",
   "gpytorch.distributions.MultitaskMultivariateNormal",
   "gpytorch.distributions.MultivariateNormal",
   "gpytorch.kernels.MaternKernel",
   "gpytorch.kernels.ScaleKernel",
   "gpytorch.likelihoods.LikelihoodList",
   "gpytorch.means.ConstantMean",
   "gpytorch.mlls.SumMarginalLogLikelihood",
   "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
   "gpytorch.priors.GammaPrior",
   "itertools.product",
   "torch.allclose",
   "torch.double",
   "torch.float",
   "torch.rand",
   "torch.rand_like",
   "torch.tensor",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "test.models.test_model_list_gp_regression.TestModelListGP.test_ModelListGP_single": {
  "lineno": 234,
  "symbols_in_volume": [
   "botorch.models.ModelListGP",
   "botorch.models.gp_regression.SingleTaskGP",
   "botorch.posteriors.GPyTorchPosterior",
   "botorch.utils.testing._get_random_data",
   "gpytorch.distributions.MultivariateNormal",
   "torch.Size",
   "torch.float",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.models.test_model_list_gp_regression._get_model": {
  "lineno": 28,
  "symbols_in_volume": [
   "botorch.models.ModelListGP",
   "botorch.models.gp_regression.FixedNoiseGP",
   "botorch.models.gp_regression.SingleTaskGP",
   "botorch.models.transforms.Standardize",
   "botorch.utils.testing._get_random_data",
   "torch.Size",
   "torch.rand_like"
  ],
  "type": "function"
 },
 "test.models.test_multitask": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.models.test_multitask.TestFixedNoiseMultiTaskGP": {
  "lineno": 177,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.models.test_multitask.TestFixedNoiseMultiTaskGP.test_FixedNoiseMultiTaskGP": {
  "lineno": 178,
  "symbols_in_volume": [
   "botorch.exceptions.warnings.OptimizationWarning",
   "botorch.fit.fit_gpytorch_model",
   "botorch.models.multitask.FixedNoiseMultiTaskGP",
   "botorch.posteriors.GPyTorchPosterior",
   "gpytorch.distributions.MultitaskMultivariateNormal",
   "gpytorch.distributions.MultivariateNormal",
   "gpytorch.kernels.IndexKernel",
   "gpytorch.kernels.MaternKernel",
   "gpytorch.kernels.ScaleKernel",
   "gpytorch.likelihoods.FixedNoiseGaussianLikelihood",
   "gpytorch.means.ConstantMean",
   "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
   "gpytorch.priors.GammaPrior",
   "torch.Size",
   "torch.double",
   "torch.float",
   "torch.full_like",
   "torch.rand",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "test.models.test_multitask.TestFixedNoiseMultiTaskGP.test_FixedNoiseMultiTaskGP_single_output": {
  "lineno": 249,
  "symbols_in_volume": [
   "botorch.exceptions.warnings.OptimizationWarning",
   "botorch.fit.fit_gpytorch_model",
   "botorch.models.multitask.FixedNoiseMultiTaskGP",
   "botorch.posteriors.GPyTorchPosterior",
   "gpytorch.distributions.MultivariateNormal",
   "gpytorch.kernels.IndexKernel",
   "gpytorch.kernels.MaternKernel",
   "gpytorch.kernels.ScaleKernel",
   "gpytorch.likelihoods.FixedNoiseGaussianLikelihood",
   "gpytorch.means.ConstantMean",
   "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
   "gpytorch.priors.GammaPrior",
   "torch.double",
   "torch.float",
   "torch.rand",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "test.models.test_multitask.TestMultiTaskGP": {
  "lineno": 66,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.models.test_multitask.TestMultiTaskGP.test_MultiTaskGP": {
  "lineno": 67,
  "symbols_in_volume": [
   "botorch.exceptions.warnings.OptimizationWarning",
   "botorch.fit.fit_gpytorch_model",
   "botorch.models.multitask.MultiTaskGP",
   "botorch.posteriors.GPyTorchPosterior",
   "gpytorch.distributions.MultitaskMultivariateNormal",
   "gpytorch.distributions.MultivariateNormal",
   "gpytorch.kernels.IndexKernel",
   "gpytorch.kernels.MaternKernel",
   "gpytorch.kernels.ScaleKernel",
   "gpytorch.likelihoods.GaussianLikelihood",
   "gpytorch.means.ConstantMean",
   "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
   "gpytorch.priors.GammaPrior",
   "torch.Size",
   "torch.double",
   "torch.float",
   "torch.rand",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "test.models.test_multitask.TestMultiTaskGP.test_MultiTaskGP_single_output": {
  "lineno": 140,
  "symbols_in_volume": [
   "botorch.exceptions.warnings.OptimizationWarning",
   "botorch.fit.fit_gpytorch_model",
   "botorch.models.multitask.MultiTaskGP",
   "botorch.posteriors.GPyTorchPosterior",
   "gpytorch.distributions.MultivariateNormal",
   "gpytorch.kernels.IndexKernel",
   "gpytorch.kernels.MaternKernel",
   "gpytorch.kernels.ScaleKernel",
   "gpytorch.likelihoods.GaussianLikelihood",
   "gpytorch.means.ConstantMean",
   "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
   "gpytorch.priors.GammaPrior",
   "torch.double",
   "torch.float",
   "torch.rand",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "test.models.test_multitask._get_fixed_noise_model": {
  "lineno": 50,
  "symbols_in_volume": [
   "botorch.models.multitask.FixedNoiseMultiTaskGP",
   "torch.full_like"
  ],
  "type": "function"
 },
 "test.models.test_multitask._get_fixed_noise_model_single_output": {
  "lineno": 57,
  "symbols_in_volume": [
   "botorch.models.multitask.FixedNoiseMultiTaskGP",
   "torch.full_like"
  ],
  "type": "function"
 },
 "test.models.test_multitask._get_model": {
  "lineno": 38,
  "symbols_in_volume": [
   "botorch.models.multitask.MultiTaskGP"
  ],
  "type": "function"
 },
 "test.models.test_multitask._get_model_single_output": {
  "lineno": 44,
  "symbols_in_volume": [
   "botorch.models.multitask.MultiTaskGP"
  ],
  "type": "function"
 },
 "test.models.test_multitask._get_random_mt_data": {
  "lineno": 24,
  "symbols_in_volume": [
   "math.pi",
   "torch.cat",
   "torch.cos",
   "torch.full_like",
   "torch.linspace",
   "torch.long",
   "torch.rand",
   "torch.randn_like",
   "torch.sin",
   "torch.stack"
  ],
  "type": "function"
 },
 "test.models.test_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.models.test_utils.TestAddOutputDim": {
  "lineno": 44,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.models.test_utils.TestAddOutputDim.test_add_output_dim": {
  "lineno": 45,
  "symbols_in_volume": [
   "botorch.models.utils.add_output_dim",
   "torch.Size",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.rand"
  ],
  "type": "function"
 },
 "test.models.test_utils.TestInputDataChecks": {
  "lineno": 69,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.models.test_utils.TestInputDataChecks.test_check_min_max_scaling": {
  "lineno": 75,
  "symbols_in_volume": [
   "botorch.exceptions.InputDataError",
   "botorch.exceptions.InputDataWarning",
   "botorch.models.utils.check_min_max_scaling",
   "botorch.settings.debug",
   "torch.rand",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "test.models.test_utils.TestInputDataChecks.test_check_no_nans": {
  "lineno": 70,
  "symbols_in_volume": [
   "botorch.exceptions.InputDataError",
   "botorch.models.utils.check_no_nans",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.models.test_utils.TestInputDataChecks.test_check_standardization": {
  "lineno": 127,
  "symbols_in_volume": [
   "botorch.exceptions.InputDataError",
   "botorch.exceptions.InputDataWarning",
   "botorch.models.utils.check_standardization",
   "botorch.settings.debug",
   "torch.randn",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "test.models.test_utils.TestInputDataChecks.test_validate_input_scaling": {
  "lineno": 157,
  "symbols_in_volume": [
   "botorch.exceptions.InputDataError",
   "botorch.exceptions.InputDataWarning",
   "botorch.models.utils.validate_input_scaling",
   "botorch.settings.debug",
   "botorch.settings.validate_input_scaling",
   "torch.rand",
   "torch.rand_like",
   "torch.randn",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "test.models.test_utils.TestMultiOutputToBatchModeTransform": {
  "lineno": 23,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.models.test_utils.TestMultiOutputToBatchModeTransform.test_multioutput_to_batch_mode_transform": {
  "lineno": 24,
  "symbols_in_volume": [
   "botorch.models.utils.multioutput_to_batch_mode_transform",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.rand"
  ],
  "type": "function"
 },
 "test.models.transforms": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.models.transforms.test_input": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.models.transforms.test_input.NotSoAbstractInputTransform": {
  "lineno": 20,
  "symbols_in_volume": [
   "botorch.models.transforms.input.InputTransform"
  ],
  "type": "class"
 },
 "test.models.transforms.test_input.NotSoAbstractInputTransform.forward": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.models.transforms.test_input.TestInputTransforms": {
  "lineno": 25,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.models.transforms.test_input.TestInputTransforms.test_abstract_base_input_transform": {
  "lineno": 26,
  "symbols_in_volume": [
   "botorch.models.transforms.input.InputTransform"
  ],
  "type": "function"
 },
 "test.models.transforms.test_input.TestInputTransforms.test_chained_input_transform": {
  "lineno": 102,
  "symbols_in_volume": [
   "botorch.models.transforms.input.ChainedInputTransform",
   "botorch.models.transforms.input.Normalize",
   "copy.deepcopy",
   "itertools.product",
   "torch.Size",
   "torch.allclose",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.rand",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.models.transforms.test_input.TestInputTransforms.test_normalize": {
  "lineno": 33,
  "symbols_in_volume": [
   "botorch.exceptions.errors.BotorchTensorDimensionError",
   "botorch.models.transforms.input.Normalize",
   "torch.Size",
   "torch.allclose",
   "torch.cat",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.rand",
   "torch.randn",
   "torch.tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.models.transforms.test_outcome": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.models.transforms.test_outcome.NotSoAbstractOutcomeTransform": {
  "lineno": 43,
  "symbols_in_volume": [
   "botorch.models.transforms.outcome.OutcomeTransform"
  ],
  "type": "class"
 },
 "test.models.transforms.test_outcome.NotSoAbstractOutcomeTransform.forward": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.models.transforms.test_outcome.TestOutcomeTransforms": {
  "lineno": 48,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.models.transforms.test_outcome.TestOutcomeTransforms.test_abstract_base_outcome_transform": {
  "lineno": 49,
  "symbols_in_volume": [
   "botorch.models.transforms.outcome.OutcomeTransform"
  ],
  "type": "function"
 },
 "test.models.transforms.test_outcome.TestOutcomeTransforms.test_chained_outcome_transform": {
  "lineno": 319,
  "symbols_in_volume": [
   "botorch.models.transforms.outcome.ChainedOutcomeTransform",
   "botorch.models.transforms.outcome.Log",
   "botorch.models.transforms.outcome.Standardize",
   "botorch.posteriors.TransformedPosterior",
   "copy.deepcopy",
   "itertools.product",
   "torch.Size",
   "torch.allclose",
   "torch.double",
   "torch.float",
   "torch.rand"
  ],
  "type": "function"
 },
 "test.models.transforms.test_outcome.TestOutcomeTransforms.test_log": {
  "lineno": 219,
  "symbols_in_volume": [
   "botorch.models.transforms.outcome.Log",
   "botorch.models.transforms.utils.norm_to_lognorm_mean",
   "botorch.models.transforms.utils.norm_to_lognorm_variance",
   "botorch.posteriors.TransformedPosterior",
   "itertools.product",
   "torch.Size",
   "torch.allclose",
   "torch.double",
   "torch.exp",
   "torch.float",
   "torch.log",
   "torch.rand"
  ],
  "type": "function"
 },
 "test.models.transforms.test_outcome.TestOutcomeTransforms.test_standardize": {
  "lineno": 58,
  "symbols_in_volume": [
   "botorch.models.transforms.outcome.Standardize",
   "botorch.posteriors.TransformedPosterior",
   "itertools.product",
   "torch.Size",
   "torch.all",
   "torch.allclose",
   "torch.double",
   "torch.float",
   "torch.rand",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.models.transforms.test_outcome._get_test_posterior": {
  "lineno": 27,
  "symbols_in_volume": [
   "botorch.posteriors.GPyTorchPosterior",
   "gpytorch.distributions.MultitaskMultivariateNormal",
   "gpytorch.distributions.MultivariateNormal",
   "gpytorch.lazy.NonLazyTensor",
   "torch.diag_embed",
   "torch.rand"
  ],
  "type": "function"
 },
 "test.models.transforms.test_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.models.transforms.test_utils.TestTransformUtils": {
  "lineno": 19,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.models.transforms.test_utils.TestTransformUtils.test_lognorm_to_norm": {
  "lineno": 20,
  "symbols_in_volume": [
   "botorch.models.transforms.utils.lognorm_to_norm",
   "math.exp",
   "math.sqrt",
   "torch.allclose",
   "torch.diag_embed",
   "torch.double",
   "torch.float",
   "torch.ones",
   "torch.tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.models.transforms.test_utils.TestTransformUtils.test_norm_to_lognorm": {
  "lineno": 53,
  "symbols_in_volume": [
   "botorch.models.transforms.utils.norm_to_lognorm",
   "botorch.models.transforms.utils.norm_to_lognorm_mean",
   "botorch.models.transforms.utils.norm_to_lognorm_variance",
   "torch.allclose",
   "torch.diag_embed",
   "torch.double",
   "torch.exp",
   "torch.float",
   "torch.log",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.models.transforms.test_utils.TestTransformUtils.test_round_trip": {
  "lineno": 93,
  "symbols_in_volume": [
   "botorch.models.transforms.utils.lognorm_to_norm",
   "botorch.models.transforms.utils.norm_to_lognorm",
   "torch.allclose",
   "torch.diag_embed",
   "torch.double",
   "torch.float",
   "torch.rand",
   "torch.randn"
  ],
  "type": "function"
 },
 "test.optim": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.optim.test_initializers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.optim.test_initializers.TestGenBatchInitialCandidates": {
  "lineno": 102,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.optim.test_initializers.TestGenBatchInitialCandidates.test_gen_batch_initial_conditions": {
  "lineno": 103,
  "symbols_in_volume": [
   "botorch.optim.optimize.gen_batch_initial_conditions",
   "botorch.utils.testing.MockAcquisitionFunction",
   "torch.Size",
   "torch.double",
   "torch.float",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.optim.test_initializers.TestGenBatchInitialCandidates.test_gen_batch_initial_conditions_highdim": {
  "lineno": 126,
  "symbols_in_volume": [
   "botorch.exceptions.SamplingWarning",
   "botorch.optim.optimize.gen_batch_initial_conditions",
   "botorch.settings.debug",
   "botorch.utils.testing.MockAcquisitionFunction",
   "torch.Size",
   "torch.double",
   "torch.float",
   "torch.ones",
   "torch.stack",
   "torch.zeros",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "test.optim.test_initializers.TestGenBatchInitialCandidates.test_gen_batch_initial_conditions_warning": {
  "lineno": 157,
  "symbols_in_volume": [
   "botorch.exceptions.BadInitialCandidatesWarning",
   "botorch.optim.optimize.gen_batch_initial_conditions",
   "botorch.settings.debug",
   "botorch.utils.testing.MockAcquisitionFunction",
   "contextlib.ExitStack",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.tensor",
   "torch.zeros",
   "unittest.mock.patch",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "test.optim.test_initializers.TestGenOneShotKGInitialConditions": {
  "lineno": 190,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.optim.test_initializers.TestGenOneShotKGInitialConditions.test_gen_one_shot_kg_initial_conditions": {
  "lineno": 191,
  "symbols_in_volume": [
   "botorch.acquisition.knowledge_gradient.qKnowledgeGradient",
   "botorch.optim.optimize.gen_one_shot_kg_initial_conditions",
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "contextlib.ExitStack",
   "torch.all",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.ones",
   "torch.rand",
   "torch.randn",
   "torch.tensor",
   "torch.zeros",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "test.optim.test_initializers.TestInitializeQBatch": {
  "lineno": 28,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.optim.test_initializers.TestInitializeQBatch.test_initialize_q_batch": {
  "lineno": 71,
  "symbols_in_volume": [
   "botorch.exceptions.BadInitialCandidatesWarning",
   "botorch.optim.initialize_q_batch",
   "botorch.settings.debug",
   "torch.Size",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.rand",
   "torch.zeros",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "test.optim.test_initializers.TestInitializeQBatch.test_initialize_q_batch_largeZ": {
  "lineno": 93,
  "symbols_in_volume": [
   "botorch.optim.initialize_q_batch",
   "torch.double",
   "torch.float",
   "torch.rand",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.optim.test_initializers.TestInitializeQBatch.test_initialize_q_batch_nonneg": {
  "lineno": 29,
  "symbols_in_volume": [
   "botorch.exceptions.BadInitialCandidatesWarning",
   "botorch.optim.initialize_q_batch_nonneg",
   "botorch.settings.debug",
   "torch.Size",
   "torch.arange",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.ones",
   "torch.rand",
   "torch.zeros",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "test.optim.test_numpy_converter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.optim.test_numpy_converter.TestModuleToArray": {
  "lineno": 28,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.optim.test_numpy_converter.TestModuleToArray.test_basic": {
  "lineno": 29,
  "symbols_in_volume": [
   "botorch.optim.numpy_converter.module_to_array",
   "gpytorch.kernels.rbf_kernel.RBFKernel",
   "gpytorch.likelihoods.GaussianLikelihood",
   "gpytorch.means.constant_mean.ConstantMean",
   "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
   "gpytorch.models.exact_gp.ExactGP",
   "numpy.array_equal",
   "numpy.zeros",
   "torch.Size",
   "torch.double",
   "torch.float",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.optim.test_numpy_converter.TestModuleToArray.test_exclude": {
  "lineno": 55,
  "symbols_in_volume": [
   "botorch.optim.numpy_converter.module_to_array",
   "gpytorch.kernels.rbf_kernel.RBFKernel",
   "gpytorch.likelihoods.GaussianLikelihood",
   "gpytorch.means.constant_mean.ConstantMean",
   "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
   "gpytorch.models.exact_gp.ExactGP",
   "numpy.array_equal",
   "numpy.zeros",
   "torch.Size",
   "torch.double",
   "torch.float",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.optim.test_numpy_converter.TestModuleToArray.test_manual_bounds": {
  "lineno": 82,
  "symbols_in_volume": [
   "botorch.optim.numpy_converter.module_to_array",
   "gpytorch.kernels.rbf_kernel.RBFKernel",
   "gpytorch.likelihoods.GaussianLikelihood",
   "gpytorch.means.constant_mean.ConstantMean",
   "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
   "gpytorch.models.exact_gp.ExactGP",
   "numpy.array_equal",
   "numpy.equal",
   "numpy.full_like",
   "numpy.inf",
   "numpy.zeros",
   "torch.Size",
   "torch.double",
   "torch.float",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.optim.test_numpy_converter.TestModuleToArray.test_module_bounds": {
  "lineno": 114,
  "symbols_in_volume": [
   "botorch.optim.numpy_converter.module_to_array",
   "gpytorch.constraints.GreaterThan",
   "gpytorch.kernels.rbf_kernel.RBFKernel",
   "gpytorch.likelihoods.GaussianLikelihood",
   "gpytorch.means.constant_mean.ConstantMean",
   "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
   "gpytorch.models.exact_gp.ExactGP",
   "numpy.allclose",
   "numpy.array_equal",
   "numpy.equal",
   "numpy.full_like",
   "numpy.inf",
   "numpy.zeros",
   "torch.Size",
   "torch.double",
   "torch.float",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.optim.test_numpy_converter.TestSetParamsWithArray": {
  "lineno": 149,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.optim.test_numpy_converter.TestSetParamsWithArray.test_set_parameters": {
  "lineno": 150,
  "symbols_in_volume": [
   "botorch.optim.numpy_converter.module_to_array",
   "botorch.optim.numpy_converter.set_params_with_array",
   "gpytorch.kernels.rbf_kernel.RBFKernel",
   "gpytorch.likelihoods.GaussianLikelihood",
   "gpytorch.means.constant_mean.ConstantMean",
   "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
   "gpytorch.models.exact_gp.ExactGP",
   "numpy.array",
   "numpy.array_equal",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.optim.test_numpy_converter._get_index": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.optim.test_optimize": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.optim.test_optimize.MockOneShotAcquisitionFunction": {
  "lineno": 17,
  "symbols_in_volume": [
   "botorch.acquisition.acquisition.OneShotAcquisitionFunction",
   "botorch.utils.testing.MockAcquisitionFunction"
  ],
  "type": "class"
 },
 "test.optim.test_optimize.MockOneShotAcquisitionFunction.__init__": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.optim.test_optimize.MockOneShotAcquisitionFunction.extract_candidates": {
  "lineno": 27,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "test.optim.test_optimize.MockOneShotAcquisitionFunction.forward": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.optim.test_optimize.MockOneShotAcquisitionFunction.get_augmented_q_batch_size": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.optim.test_optimize.TestOptimizeAcqf": {
  "lineno": 40,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.optim.test_optimize.TestOptimizeAcqf.test_optimize_acqf_joint": {
  "lineno": 41,
  "symbols_in_volume": [
   "botorch.optim.optimize.optimize_acqf",
   "botorch.utils.testing.MockAcquisitionFunction",
   "torch.arange",
   "torch.cat",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.ones",
   "torch.stack",
   "torch.zeros",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "test.optim.test_optimize.TestOptimizeAcqf.test_optimize_acqf_sequential": {
  "lineno": 115,
  "symbols_in_volume": [
   "botorch.acquisition.acquisition.OneShotAcquisitionFunction",
   "botorch.optim.optimize.optimize_acqf",
   "botorch.utils.testing.MockAcquisitionFunction",
   "torch.cat",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.ones",
   "torch.stack",
   "torch.tensor",
   "torch.zeros",
   "unittest.mock.Mock",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "test.optim.test_optimize.TestOptimizeAcqf.test_optimize_acqf_sequential_notimplemented": {
  "lineno": 176,
  "symbols_in_volume": [
   "botorch.optim.optimize.optimize_acqf",
   "botorch.utils.testing.MockAcquisitionFunction",
   "torch.ones",
   "torch.stack",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.optim.test_optimize.TestOptimizeAcqfCyclic": {
  "lineno": 189,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.optim.test_optimize.TestOptimizeAcqfCyclic.test_optimize_acqf_cyclic": {
  "lineno": 190,
  "symbols_in_volume": [
   "botorch.optim.optimize.optimize_acqf_cyclic",
   "botorch.utils.testing.MockAcquisitionFunction",
   "itertools.product",
   "torch.bool",
   "torch.cat",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.is_tensor",
   "torch.ones",
   "torch.rand",
   "torch.stack",
   "torch.tensor",
   "torch.zeros",
   "unittest.mock.patch",
   "unittest.mock.patch.object"
  ],
  "type": "function"
 },
 "test.optim.test_optimize.rounding_func": {
  "lineno": 34,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.stack"
  ],
  "type": "function"
 },
 "test.optim.test_parameter_constraints": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.optim.test_parameter_constraints.TestMakeScipyBounds": {
  "lineno": 197,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.optim.test_parameter_constraints.TestMakeScipyBounds.test_make_scipy_bounds": {
  "lineno": 198,
  "symbols_in_volume": [
   "botorch.optim.parameter_constraints.make_scipy_bounds",
   "numpy.all",
   "numpy.equal",
   "numpy.full",
   "numpy.ones",
   "numpy.zeros",
   "scipy.optimize.Bounds",
   "torch.ones",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.optim.test_parameter_constraints.TestParameterConstraints": {
  "lineno": 22,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.optim.test_parameter_constraints.TestParameterConstraints.test_arrayify": {
  "lineno": 23,
  "symbols_in_volume": [
   "botorch.optim.parameter_constraints._arrayify",
   "numpy.float64",
   "numpy.ndarray",
   "torch.double",
   "torch.float",
   "torch.int",
   "torch.long",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.optim.test_parameter_constraints.TestParameterConstraints.test_eval_lin_constraint": {
  "lineno": 30,
  "symbols_in_volume": [
   "botorch.optim.parameter_constraints.eval_lin_constraint",
   "numpy.array"
  ],
  "type": "function"
 },
 "test.optim.test_parameter_constraints.TestParameterConstraints.test_lin_constraint_jac": {
  "lineno": 39,
  "symbols_in_volume": [
   "botorch.optim.parameter_constraints.lin_constraint_jac",
   "numpy.array",
   "numpy.equal"
  ],
  "type": "function"
 },
 "test.optim.test_parameter_constraints.TestParameterConstraints.test_make_linear_constraints": {
  "lineno": 46,
  "symbols_in_volume": [
   "botorch.optim.parameter_constraints._make_linear_constraints",
   "numpy.allclose",
   "numpy.random.rand",
   "numpy.zeros",
   "torch.Size",
   "torch.double",
   "torch.float",
   "torch.long",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.optim.test_parameter_constraints.TestParameterConstraints.test_make_scipy_linear_constraints": {
  "lineno": 120,
  "symbols_in_volume": [
   "botorch.exceptions.errors.UnsupportedError",
   "botorch.optim.parameter_constraints.make_scipy_linear_constraints",
   "torch.Size",
   "torch.long",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.optim.test_random_restart_optimization": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.optim.test_random_restart_optimization.TestRandomRestartOptimization": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.optim.test_random_restart_optimization.TestRandomRestartOptimization.test_random_restart_optimization": {
  "lineno": 19,
  "symbols_in_volume": [
   "botorch.acquisition.qExpectedImprovement",
   "botorch.gen.gen_candidates_scipy",
   "botorch.gen.get_best_candidates",
   "gpytorch.settings.debug",
   "torch.rand",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.optim.test_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.optim.test_utils.TestColumnWiseClamp": {
  "lineno": 71,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.optim.test_utils.TestColumnWiseClamp.setUp": {
  "lineno": 72,
  "symbols_in_volume": [
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.optim.test_utils.TestColumnWiseClamp.test_column_wise_clamp_raise_on_violation": {
  "lineno": 106,
  "symbols_in_volume": [
   "botorch.exceptions.BotorchError",
   "botorch.optim.utils.columnwise_clamp",
   "torch.equal",
   "torch.ones",
   "torch.tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.optim.test_utils.TestColumnWiseClamp.test_column_wise_clamp_scalar_tensors": {
  "lineno": 86,
  "symbols_in_volume": [
   "botorch.optim.utils.columnwise_clamp",
   "torch.equal",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.optim.test_utils.TestColumnWiseClamp.test_column_wise_clamp_scalars": {
  "lineno": 77,
  "symbols_in_volume": [
   "botorch.optim.utils.columnwise_clamp",
   "torch.equal"
  ],
  "type": "function"
 },
 "test.optim.test_utils.TestColumnWiseClamp.test_column_wise_clamp_tensors": {
  "lineno": 95,
  "symbols_in_volume": [
   "botorch.optim.utils.columnwise_clamp",
   "torch.equal",
   "torch.ones",
   "torch.tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.optim.test_utils.TestConvergenceCriterion": {
  "lineno": 32,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.optim.test_utils.TestConvergenceCriterion.test_convergence_criterion": {
  "lineno": 33,
  "symbols_in_volume": [
   "botorch.optim.utils.ConvergenceCriterion",
   "torch.double",
   "torch.float",
   "torch.ones",
   "torch.tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.optim.test_utils.TestExpandBounds": {
  "lineno": 192,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.optim.test_utils.TestExpandBounds.test_expand_bounds": {
  "lineno": 193,
  "symbols_in_volume": [
   "botorch.optim.utils._expand_bounds",
   "torch.equal",
   "torch.tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.optim.test_utils.TestFixFeatures": {
  "lineno": 118,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.optim.test_utils.TestFixFeatures._getTensors": {
  "lineno": 119,
  "symbols_in_volume": [
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.optim.test_utils.TestFixFeatures.test_fix_features": {
  "lineno": 128,
  "symbols_in_volume": [
   "botorch.optim.utils.fix_features",
   "torch.equal",
   "torch.ones_like",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.optim.test_utils.TestFixFeatures.test_fix_features.f": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.optim.test_utils.TestGetExtraMllArgs": {
  "lineno": 166,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.optim.test_utils.TestGetExtraMllArgs.test_get_extra_mll_args": {
  "lineno": 167,
  "symbols_in_volume": [
   "botorch.models.ModelListGP",
   "botorch.models.SingleTaskGP",
   "botorch.optim.utils._get_extra_mll_args",
   "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
   "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood",
   "gpytorch.mlls.sum_marginal_log_likelihood.SumMarginalLogLikelihood",
   "torch.equal",
   "torch.rand"
  ],
  "type": "function"
 },
 "test.optim.test_utils.TestSampleAllPriors": {
  "lineno": 217,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.optim.test_utils.TestSampleAllPriors.test_sample_all_priors": {
  "lineno": 218,
  "symbols_in_volume": [
   "botorch.models.SingleTaskGP",
   "botorch.optim.utils.sample_all_priors",
   "botorch.settings.debug",
   "copy.deepcopy",
   "gpytorch.kernels.matern_kernel.MaternKernel",
   "gpytorch.kernels.scale_kernel.ScaleKernel",
   "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
   "gpytorch.priors.smoothed_box_prior.SmoothedBoxPrior",
   "gpytorch.priors.torch_priors.GammaPrior",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.rand",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "test.posteriors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.posteriors.test_deterministic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.posteriors.test_deterministic.TestDeterministicPosterior": {
  "lineno": 14,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.posteriors.test_deterministic.TestDeterministicPosterior.test_DeterministicPosterior": {
  "lineno": 15,
  "symbols_in_volume": [
   "botorch.posteriors.deterministic.DeterministicPosterior",
   "itertools.product",
   "torch.Size",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.randn",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "test.posteriors.test_gpytorch": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.posteriors.test_gpytorch.TestGPyTorchPosterior": {
  "lineno": 45,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.posteriors.test_gpytorch.TestGPyTorchPosterior.test_GPyTorchPosterior": {
  "lineno": 46,
  "symbols_in_volume": [
   "botorch.posteriors.gpytorch.GPyTorchPosterior",
   "gpytorch.distributions.MultivariateNormal",
   "gpytorch.lazy.non_lazy_tensor.lazify",
   "torch.Size",
   "torch.allclose",
   "torch.diag_embed",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.rand",
   "torch.randn"
  ],
  "type": "function"
 },
 "test.posteriors.test_gpytorch.TestGPyTorchPosterior.test_GPyTorchPosterior_Multitask": {
  "lineno": 100,
  "symbols_in_volume": [
   "botorch.posteriors.gpytorch.GPyTorchPosterior",
   "gpytorch.distributions.MultitaskMultivariateNormal",
   "gpytorch.lazy.non_lazy_tensor.lazify",
   "torch.Size",
   "torch.allclose",
   "torch.diag_embed",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.rand",
   "torch.randn"
  ],
  "type": "function"
 },
 "test.posteriors.test_gpytorch.TestGPyTorchPosterior.test_degenerate_GPyTorchPosterior": {
  "lineno": 147,
  "symbols_in_volume": [
   "botorch.posteriors.gpytorch.GPyTorchPosterior",
   "gpytorch.distributions.MultivariateNormal",
   "gpytorch.lazy.non_lazy_tensor.lazify",
   "torch.Size",
   "torch.allclose",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.rand",
   "torch.randn",
   "torch.tensor",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "test.posteriors.test_gpytorch.TestGPyTorchPosterior.test_degenerate_GPyTorchPosterior_Multitask": {
  "lineno": 207,
  "symbols_in_volume": [
   "botorch.posteriors.gpytorch.GPyTorchPosterior",
   "gpytorch.distributions.MultitaskMultivariateNormal.from_independent_mvns",
   "gpytorch.distributions.MultivariateNormal",
   "gpytorch.lazy.non_lazy_tensor.lazify",
   "torch.Size",
   "torch.allclose",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.rand",
   "torch.randn",
   "torch.tensor",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "test.posteriors.test_gpytorch.TestGPyTorchPosterior.test_scalarize_posterior": {
  "lineno": 269,
  "symbols_in_volume": [
   "botorch.exceptions.BotorchTensorDimensionError",
   "botorch.posteriors.gpytorch.scalarize_posterior",
   "itertools.combinations_with_replacement",
   "itertools.product",
   "torch.Size",
   "torch.allclose",
   "torch.double",
   "torch.float",
   "torch.long",
   "torch.rand",
   "torch.randn",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.posteriors.test_gpytorch._get_test_posterior": {
  "lineno": 19,
  "symbols_in_volume": [
   "botorch.posteriors.gpytorch.GPyTorchPosterior",
   "gpytorch.distributions.MultitaskMultivariateNormal",
   "gpytorch.distributions.MultitaskMultivariateNormal.from_independent_mvns",
   "gpytorch.distributions.MultivariateNormal",
   "gpytorch.lazy.AddedDiagLazyTensor",
   "gpytorch.lazy.DiagLazyTensor",
   "torch.diag_embed",
   "torch.rand"
  ],
  "type": "function"
 },
 "test.posteriors.test_posterior": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.posteriors.test_posterior.NotSoAbstractPosterior": {
  "lineno": 11,
  "symbols_in_volume": [
   "botorch.posteriors.Posterior"
  ],
  "type": "class"
 },
 "test.posteriors.test_posterior.NotSoAbstractPosterior.device": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.posteriors.test_posterior.NotSoAbstractPosterior.dtype": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.posteriors.test_posterior.NotSoAbstractPosterior.event_shape": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.posteriors.test_posterior.NotSoAbstractPosterior.rsample": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.posteriors.test_posterior.TestPosterior": {
  "lineno": 28,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.posteriors.test_posterior.TestPosterior.test_abstract_base_posterior": {
  "lineno": 29,
  "symbols_in_volume": [
   "botorch.posteriors.Posterior"
  ],
  "type": "function"
 },
 "test.posteriors.test_posterior.TestPosterior.test_mean_var_notimplemented_error": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "test.posteriors.test_transformed": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.posteriors.test_transformed.TestTransformedPosterior": {
  "lineno": 15,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.posteriors.test_transformed.TestTransformedPosterior.test_transformed_posterior": {
  "lineno": 16,
  "symbols_in_volume": [
   "botorch.posteriors.gpytorch.GPyTorchPosterior",
   "botorch.posteriors.transformed.TransformedPosterior",
   "gpytorch.distributions.MultitaskMultivariateNormal",
   "gpytorch.distributions.MultivariateNormal",
   "gpytorch.lazy.non_lazy_tensor.lazify",
   "torch.Size",
   "torch.diag_embed",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.rand",
   "torch.randn"
  ],
  "type": "function"
 },
 "test.sampling": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.sampling.test_qmc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.sampling.test_qmc.MultivariateNormalQMCTests": {
  "lineno": 144,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.sampling.test_qmc.MultivariateNormalQMCTests.test_MultivariateNormalQMCEngine": {
  "lineno": 177,
  "symbols_in_volume": [
   "botorch.sampling.qmc.MultivariateNormalQMCEngine",
   "torch.Size",
   "torch.double",
   "torch.eye",
   "torch.float",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.sampling.test_qmc.MultivariateNormalQMCTests.test_MultivariateNormalQMCEngineDegenerate": {
  "lineno": 464,
  "symbols_in_volume": [
   "botorch.sampling.qmc.MultivariateNormalQMCEngine",
   "math.sqrt",
   "numpy.abs",
   "numpy.cov",
   "scipy.stats.shapiro",
   "torch.abs",
   "torch.all",
   "torch.double",
   "torch.float",
   "torch.std",
   "torch.tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.sampling.test_qmc.MultivariateNormalQMCTests.test_MultivariateNormalQMCEngineInvTransform": {
  "lineno": 213,
  "symbols_in_volume": [
   "botorch.sampling.qmc.MultivariateNormalQMCEngine",
   "torch.Size",
   "torch.double",
   "torch.eye",
   "torch.float",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.sampling.test_qmc.MultivariateNormalQMCTests.test_MultivariateNormalQMCEngineNonPD": {
  "lineno": 159,
  "symbols_in_volume": [
   "botorch.sampling.qmc.MultivariateNormalQMCEngine",
   "torch.double",
   "torch.float",
   "torch.tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.sampling.test_qmc.MultivariateNormalQMCTests.test_MultivariateNormalQMCEngineNonPSD": {
  "lineno": 151,
  "symbols_in_volume": [
   "botorch.sampling.qmc.MultivariateNormalQMCEngine",
   "torch.double",
   "torch.float",
   "torch.tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.sampling.test_qmc.MultivariateNormalQMCTests.test_MultivariateNormalQMCEngineSeeded": {
  "lineno": 249,
  "symbols_in_volume": [
   "botorch.sampling.qmc.MultivariateNormalQMCEngine",
   "botorch.utils.sampling.manual_seed",
   "torch.allclose",
   "torch.double",
   "torch.float",
   "torch.rand",
   "torch.randn",
   "torch.tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.sampling.test_qmc.MultivariateNormalQMCTests.test_MultivariateNormalQMCEngineSeededInvTransform": {
  "lineno": 331,
  "symbols_in_volume": [
   "botorch.sampling.qmc.MultivariateNormalQMCEngine",
   "botorch.utils.sampling.manual_seed",
   "torch.allclose",
   "torch.double",
   "torch.float",
   "torch.rand",
   "torch.randn",
   "torch.tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.sampling.test_qmc.MultivariateNormalQMCTests.test_MultivariateNormalQMCEngineSeededOut": {
  "lineno": 291,
  "symbols_in_volume": [
   "botorch.sampling.qmc.MultivariateNormalQMCEngine",
   "botorch.utils.sampling.manual_seed",
   "torch.allclose",
   "torch.double",
   "torch.empty",
   "torch.float",
   "torch.rand",
   "torch.randn",
   "torch.tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.sampling.test_qmc.MultivariateNormalQMCTests.test_MultivariateNormalQMCEngineShapeErrors": {
  "lineno": 145,
  "symbols_in_volume": [
   "botorch.sampling.qmc.MultivariateNormalQMCEngine",
   "torch.eye",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.sampling.test_qmc.MultivariateNormalQMCTests.test_MultivariateNormalQMCEngineShapiro": {
  "lineno": 376,
  "symbols_in_volume": [
   "botorch.sampling.qmc.MultivariateNormalQMCEngine",
   "math.sqrt",
   "numpy.abs",
   "numpy.cov",
   "scipy.stats.shapiro",
   "torch.abs",
   "torch.all",
   "torch.double",
   "torch.eye",
   "torch.float",
   "torch.tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.sampling.test_qmc.MultivariateNormalQMCTests.test_MultivariateNormalQMCEngineShapiroInvTransform": {
  "lineno": 418,
  "symbols_in_volume": [
   "botorch.sampling.qmc.MultivariateNormalQMCEngine",
   "math.sqrt",
   "numpy.abs",
   "numpy.cov",
   "scipy.stats.shapiro",
   "torch.abs",
   "torch.all",
   "torch.double",
   "torch.eye",
   "torch.float",
   "torch.tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.sampling.test_qmc.MultivariateNormalQMCTests.test_MultivariateNormalQMCEngineSymmetric": {
  "lineno": 169,
  "symbols_in_volume": [
   "botorch.sampling.qmc.MultivariateNormalQMCEngine",
   "torch.double",
   "torch.float",
   "torch.tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.sampling.test_qmc.NormalQMCTests": {
  "lineno": 17,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.sampling.test_qmc.NormalQMCTests.test_NormalQMCEngine": {
  "lineno": 18,
  "symbols_in_volume": [
   "botorch.sampling.qmc.NormalQMCEngine",
   "torch.Size",
   "torch.double",
   "torch.float"
  ],
  "type": "function"
 },
 "test.sampling.test_qmc.NormalQMCTests.test_NormalQMCEngineInvTransform": {
  "lineno": 36,
  "symbols_in_volume": [
   "botorch.sampling.qmc.NormalQMCEngine",
   "torch.Size",
   "torch.double",
   "torch.float"
  ],
  "type": "function"
 },
 "test.sampling.test_qmc.NormalQMCTests.test_NormalQMCEngineSeeded": {
  "lineno": 54,
  "symbols_in_volume": [
   "botorch.sampling.qmc.NormalQMCEngine",
   "torch.allclose",
   "torch.float",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.sampling.test_qmc.NormalQMCTests.test_NormalQMCEngineSeededInvTransform": {
  "lineno": 95,
  "symbols_in_volume": [
   "botorch.sampling.qmc.NormalQMCEngine",
   "torch.allclose",
   "torch.float",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.sampling.test_qmc.NormalQMCTests.test_NormalQMCEngineSeededOut": {
  "lineno": 74,
  "symbols_in_volume": [
   "botorch.sampling.qmc.NormalQMCEngine",
   "torch.allclose",
   "torch.empty",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.sampling.test_qmc.NormalQMCTests.test_NormalQMCEngineShapiro": {
  "lineno": 115,
  "symbols_in_volume": [
   "botorch.sampling.qmc.NormalQMCEngine",
   "numpy.abs",
   "numpy.cov",
   "scipy.stats.shapiro",
   "torch.abs",
   "torch.all",
   "torch.float"
  ],
  "type": "function"
 },
 "test.sampling.test_qmc.NormalQMCTests.test_NormalQMCEngineShapiroInvTransform": {
  "lineno": 129,
  "symbols_in_volume": [
   "botorch.sampling.qmc.NormalQMCEngine",
   "numpy.abs",
   "numpy.cov",
   "scipy.stats.shapiro",
   "torch.abs",
   "torch.all",
   "torch.float"
  ],
  "type": "function"
 },
 "test.sampling.test_sampler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.sampling.test_sampler.TestBaseMCSampler": {
  "lineno": 30,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.sampling.test_sampler.TestBaseMCSampler.test_MCSampler_abstract_raises": {
  "lineno": 31,
  "symbols_in_volume": [
   "botorch.sampling.samplers.MCSampler"
  ],
  "type": "function"
 },
 "test.sampling.test_sampler.TestIIDNormalSampler": {
  "lineno": 36,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.sampling.test_sampler.TestIIDNormalSampler.test_forward": {
  "lineno": 65,
  "symbols_in_volume": [
   "botorch.sampling.samplers.IIDNormalSampler",
   "torch.Size",
   "torch.allclose",
   "torch.double",
   "torch.float"
  ],
  "type": "function"
 },
 "test.sampling.test_sampler.TestIIDNormalSampler.test_forward_no_collapse": {
  "lineno": 120,
  "symbols_in_volume": [
   "botorch.sampling.samplers.IIDNormalSampler",
   "torch.Size",
   "torch.allclose",
   "torch.double",
   "torch.float"
  ],
  "type": "function"
 },
 "test.sampling.test_sampler.TestIIDNormalSampler.test_get_base_sample_shape": {
  "lineno": 37,
  "symbols_in_volume": [
   "botorch.sampling.samplers.IIDNormalSampler",
   "torch.Size"
  ],
  "type": "function"
 },
 "test.sampling.test_sampler.TestIIDNormalSampler.test_get_base_sample_shape_no_collapse": {
  "lineno": 51,
  "symbols_in_volume": [
   "botorch.sampling.samplers.IIDNormalSampler",
   "torch.Size"
  ],
  "type": "function"
 },
 "test.sampling.test_sampler.TestSobolQMCNormalSampler": {
  "lineno": 172,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.sampling.test_sampler.TestSobolQMCNormalSampler.test_forward": {
  "lineno": 201,
  "symbols_in_volume": [
   "botorch.sampling.samplers.SobolQMCNormalSampler",
   "torch.Size",
   "torch.allclose",
   "torch.double",
   "torch.float"
  ],
  "type": "function"
 },
 "test.sampling.test_sampler.TestSobolQMCNormalSampler.test_forward_no_collapse": {
  "lineno": 256,
  "symbols_in_volume": [
   "botorch.sampling.samplers.SobolQMCNormalSampler",
   "torch.Size",
   "torch.allclose",
   "torch.double",
   "torch.float"
  ],
  "type": "function"
 },
 "test.sampling.test_sampler.TestSobolQMCNormalSampler.test_get_base_sample_shape": {
  "lineno": 173,
  "symbols_in_volume": [
   "botorch.sampling.samplers.SobolQMCNormalSampler",
   "torch.Size"
  ],
  "type": "function"
 },
 "test.sampling.test_sampler.TestSobolQMCNormalSampler.test_get_base_sample_shape_no_collapse": {
  "lineno": 187,
  "symbols_in_volume": [
   "botorch.sampling.samplers.SobolQMCNormalSampler",
   "torch.Size"
  ],
  "type": "function"
 },
 "test.sampling.test_sampler.TestSobolQMCNormalSampler.test_unsupported_dimension": {
  "lineno": 307,
  "symbols_in_volume": [
   "botorch.exceptions.errors.UnsupportedError",
   "botorch.posteriors.GPyTorchPosterior",
   "botorch.sampling.samplers.SobolQMCNormalSampler",
   "gpytorch.distributions.MultivariateNormal",
   "gpytorch.lazy.DiagLazyTensor",
   "torch.ones",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.sampling.test_sampler._get_test_posterior": {
  "lineno": 16,
  "symbols_in_volume": [
   "botorch.posteriors.GPyTorchPosterior",
   "gpytorch.distributions.MultivariateNormal",
   "torch.eye",
   "torch.float",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.sampling.test_sampler._get_test_posterior_batched": {
  "lineno": 23,
  "symbols_in_volume": [
   "botorch.posteriors.GPyTorchPosterior",
   "gpytorch.distributions.MultivariateNormal",
   "torch.eye",
   "torch.float",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.test_cross_validation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.test_cross_validation.TestFitBatchCrossValidation": {
  "lineno": 18,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.test_cross_validation.TestFitBatchCrossValidation.test_single_task_batch_cv": {
  "lineno": 19,
  "symbols_in_volume": [
   "botorch.cross_validation.batch_cross_validation",
   "botorch.cross_validation.gen_loo_cv_folds",
   "botorch.exceptions.warnings.OptimizationWarning",
   "botorch.models.gp_regression.FixedNoiseGP",
   "botorch.models.gp_regression.SingleTaskGP",
   "botorch.utils.testing._get_random_data",
   "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
   "itertools.product",
   "torch.Size",
   "torch.double",
   "torch.float",
   "torch.full_like",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "test.test_cuda": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.test_cuda.TestBotorchCUDA": {
  "lineno": 23,
  "symbols_in_volume": [
   "torch.cuda.is_available",
   "unittest.TestCase",
   "unittest.skipIf"
  ],
  "type": "class"
 },
 "test.test_cuda.TestBotorchCUDA.test_cuda": {
  "lineno": 25,
  "symbols_in_volume": [
   "pathlib.Path",
   "unittest.TestLoader"
  ],
  "type": "function"
 },
 "test.test_cuda.run_cuda_tests": {
  "lineno": 31,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase",
   "torch.device",
   "typing.Union",
   "unittest.TestCase",
   "unittest.TestSuite"
  ],
  "type": "function"
 },
 "test.test_end_to_end": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.test_end_to_end.TestEndToEnd": {
  "lineno": 25,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.test_end_to_end.TestEndToEnd._setUp": {
  "lineno": 26,
  "symbols_in_volume": [
   "botorch.exceptions.warnings.OptimizationWarning",
   "botorch.fit.fit_gpytorch_model",
   "botorch.models.FixedNoiseGP",
   "botorch.models.SingleTaskGP",
   "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
   "math.pi",
   "torch.double",
   "torch.float",
   "torch.linspace",
   "torch.sin",
   "torch.tensor",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "test.test_end_to_end.TestEndToEnd.test_EI": {
  "lineno": 97,
  "symbols_in_volume": [
   "botorch.acquisition.ExpectedImprovement",
   "botorch.optim.optimize_acqf"
  ],
  "type": "function"
 },
 "test.test_end_to_end.TestEndToEnd.test_qEI": {
  "lineno": 61,
  "symbols_in_volume": [
   "botorch.acquisition.qExpectedImprovement",
   "botorch.optim.optimize_acqf",
   "torch.all"
  ],
  "type": "function"
 },
 "test.test_fit": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.test_fit.TestFitGPyTorchModel": {
  "lineno": 42,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.test_fit.TestFitGPyTorchModel._getBatchedModel": {
  "lineno": 54,
  "symbols_in_volume": [
   "botorch.models.FixedNoiseGP",
   "botorch.models.HeteroskedasticSingleTaskGP",
   "botorch.models.SingleTaskGP",
   "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
   "math.pi",
   "torch.cat",
   "torch.double",
   "torch.float",
   "torch.linspace",
   "torch.ones_like",
   "torch.sin",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.test_fit.TestFitGPyTorchModel._getModel": {
  "lineno": 43,
  "symbols_in_volume": [
   "botorch.models.SingleTaskGP",
   "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
   "math.pi",
   "torch.double",
   "torch.float",
   "torch.linspace",
   "torch.sin",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.test_fit.TestFitGPyTorchModel.test_fit_gpytorch_model": {
  "lineno": 76,
  "symbols_in_volume": [
   "botorch.fit_gpytorch_model",
   "botorch.optim.fit.OptimizationIteration",
   "botorch.optim.fit.fit_gpytorch_scipy",
   "botorch.optim.fit.fit_gpytorch_torch",
   "botorch.settings.debug",
   "torch.double",
   "torch.float",
   "torch.nn.Parameter",
   "torch.tensor",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "test.test_fit.TestFitGPyTorchModel.test_fit_gpytorch_model_sequential": {
  "lineno": 239,
  "symbols_in_volume": [
   "botorch.exceptions.warnings.BotorchWarning",
   "botorch.fit_gpytorch_model",
   "botorch.settings.debug",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "test.test_fit.TestFitGPyTorchModel.test_fit_gpytorch_model_singular": {
  "lineno": 218,
  "symbols_in_volume": [
   "botorch.exceptions.warnings.OptimizationWarning",
   "botorch.fit_gpytorch_model",
   "botorch.models.SingleTaskGP",
   "botorch.settings.debug",
   "gpytorch.constraints.GreaterThan",
   "gpytorch.likelihoods.GaussianLikelihood",
   "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
   "torch.double",
   "torch.float",
   "torch.rand",
   "torch.zeros",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "test.test_fit.TestFitGPyTorchModel.test_fit_gpytorch_model_torch": {
  "lineno": 236,
  "symbols_in_volume": [
   "botorch.optim.fit.fit_gpytorch_torch"
  ],
  "type": "function"
 },
 "test.test_functions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.test_functions.test_multi_fidelity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.test_functions.test_multi_fidelity.TestAugmentedBranin": {
  "lineno": 15,
  "symbols_in_volume": [
   "botorch.test_functions.multi_fidelity.AugmentedBranin",
   "botorch.utils.testing.BotorchTestCase",
   "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
  ],
  "type": "class"
 },
 "test.test_functions.test_multi_fidelity.TestAugmentedHartmann": {
  "lineno": 24,
  "symbols_in_volume": [
   "botorch.test_functions.multi_fidelity.AugmentedHartmann",
   "botorch.utils.testing.BotorchTestCase",
   "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
  ],
  "type": "class"
 },
 "test.test_functions.test_multi_fidelity.TestAugmentedRosenbrock": {
  "lineno": 33,
  "symbols_in_volume": [
   "botorch.test_functions.multi_fidelity.AugmentedRosenbrock",
   "botorch.utils.testing.BotorchTestCase",
   "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
  ],
  "type": "class"
 },
 "test.test_functions.test_multi_fidelity.TestAugmentedRosenbrock.test_min_dimension": {
  "lineno": 44,
  "symbols_in_volume": [
   "botorch.test_functions.multi_fidelity.AugmentedRosenbrock"
  ],
  "type": "function"
 },
 "test.test_functions.test_synthetic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.test_functions.test_synthetic.TestAckley": {
  "lineno": 32,
  "symbols_in_volume": [
   "botorch.test_functions.synthetic.Ackley",
   "botorch.utils.testing.BotorchTestCase",
   "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
  ],
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestBeale": {
  "lineno": 37,
  "symbols_in_volume": [
   "botorch.test_functions.synthetic.Beale",
   "botorch.utils.testing.BotorchTestCase",
   "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
  ],
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestBranin": {
  "lineno": 42,
  "symbols_in_volume": [
   "botorch.test_functions.synthetic.Branin",
   "botorch.utils.testing.BotorchTestCase",
   "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
  ],
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestBukin": {
  "lineno": 47,
  "symbols_in_volume": [
   "botorch.test_functions.synthetic.Bukin",
   "botorch.utils.testing.BotorchTestCase",
   "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
  ],
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestCosine8": {
  "lineno": 52,
  "symbols_in_volume": [
   "botorch.test_functions.synthetic.Cosine8",
   "botorch.utils.testing.BotorchTestCase",
   "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
  ],
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestDixonPrice": {
  "lineno": 62,
  "symbols_in_volume": [
   "botorch.test_functions.synthetic.DixonPrice",
   "botorch.utils.testing.BotorchTestCase",
   "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
  ],
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestDropWave": {
  "lineno": 57,
  "symbols_in_volume": [
   "botorch.test_functions.synthetic.DropWave",
   "botorch.utils.testing.BotorchTestCase",
   "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
  ],
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestEggHolder": {
  "lineno": 72,
  "symbols_in_volume": [
   "botorch.test_functions.synthetic.EggHolder",
   "botorch.utils.testing.BotorchTestCase",
   "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
  ],
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestGriewank": {
  "lineno": 77,
  "symbols_in_volume": [
   "botorch.test_functions.synthetic.Griewank",
   "botorch.utils.testing.BotorchTestCase",
   "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
  ],
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestHartmann": {
  "lineno": 87,
  "symbols_in_volume": [
   "botorch.test_functions.synthetic.Hartmann",
   "botorch.utils.testing.BotorchTestCase",
   "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
  ],
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestHartmann.test_dimension": {
  "lineno": 101,
  "symbols_in_volume": [
   "botorch.test_functions.synthetic.Hartmann"
  ],
  "type": "function"
 },
 "test.test_functions.test_synthetic.TestHolderTable": {
  "lineno": 106,
  "symbols_in_volume": [
   "botorch.test_functions.synthetic.HolderTable",
   "botorch.utils.testing.BotorchTestCase",
   "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
  ],
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestLevy": {
  "lineno": 111,
  "symbols_in_volume": [
   "botorch.test_functions.synthetic.Levy",
   "botorch.utils.testing.BotorchTestCase",
   "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
  ],
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestMichalewicz": {
  "lineno": 123,
  "symbols_in_volume": [
   "botorch.test_functions.synthetic.Michalewicz",
   "botorch.utils.testing.BotorchTestCase",
   "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
  ],
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestPowell": {
  "lineno": 138,
  "symbols_in_volume": [
   "botorch.test_functions.synthetic.Powell",
   "botorch.utils.testing.BotorchTestCase",
   "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
  ],
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestRastrigin": {
  "lineno": 143,
  "symbols_in_volume": [
   "botorch.test_functions.synthetic.Rastrigin",
   "botorch.utils.testing.BotorchTestCase",
   "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
  ],
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestRosenbrock": {
  "lineno": 155,
  "symbols_in_volume": [
   "botorch.test_functions.synthetic.Rosenbrock",
   "botorch.utils.testing.BotorchTestCase",
   "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
  ],
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestShekel": {
  "lineno": 167,
  "symbols_in_volume": [
   "botorch.test_functions.synthetic.Shekel",
   "botorch.utils.testing.BotorchTestCase",
   "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
  ],
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestSixHumpCamel": {
  "lineno": 172,
  "symbols_in_volume": [
   "botorch.test_functions.synthetic.SixHumpCamel",
   "botorch.utils.testing.BotorchTestCase",
   "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
  ],
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestStyblinskiTang": {
  "lineno": 177,
  "symbols_in_volume": [
   "botorch.test_functions.synthetic.StyblinskiTang",
   "botorch.utils.testing.BotorchTestCase",
   "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
  ],
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestThreeHumpCamel": {
  "lineno": 189,
  "symbols_in_volume": [
   "botorch.test_functions.synthetic.ThreeHumpCamel",
   "botorch.utils.testing.BotorchTestCase",
   "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
  ],
  "type": "class"
 },
 "test.test_gen": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.test_gen.TestBaseCandidateGeneration": {
  "lineno": 25,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.test_gen.TestBaseCandidateGeneration._setUp": {
  "lineno": 26,
  "symbols_in_volume": [
   "botorch.exceptions.warnings.OptimizationWarning",
   "botorch.fit.fit_gpytorch_model",
   "botorch.models.SingleTaskGP",
   "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
   "math.pi",
   "torch.double",
   "torch.float",
   "torch.linspace",
   "torch.sin",
   "torch.tensor",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "test.test_gen.TestGenCandidates": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.test_gen.TestGenCandidates.test_gen_candidates": {
  "lineno": 53,
  "symbols_in_volume": [
   "botorch.acquisition.qExpectedImprovement",
   "botorch.gen.gen_candidates_scipy"
  ],
  "type": "function"
 },
 "test.test_gen.TestGenCandidates.test_gen_candidates_torch": {
  "lineno": 65,
  "symbols_in_volume": [
   "botorch.gen.gen_candidates_torch"
  ],
  "type": "function"
 },
 "test.test_gen.TestGenCandidates.test_gen_candidates_torch_with_fixed_features": {
  "lineno": 107,
  "symbols_in_volume": [
   "botorch.gen.gen_candidates_torch"
  ],
  "type": "function"
 },
 "test.test_gen.TestGenCandidates.test_gen_candidates_torch_with_none_fixed_features": {
  "lineno": 85,
  "symbols_in_volume": [
   "botorch.gen.gen_candidates_torch"
  ],
  "type": "function"
 },
 "test.test_gen.TestGenCandidates.test_gen_candidates_with_fixed_features": {
  "lineno": 90,
  "symbols_in_volume": [
   "botorch.acquisition.qExpectedImprovement",
   "botorch.gen.gen_candidates_scipy"
  ],
  "type": "function"
 },
 "test.test_gen.TestGenCandidates.test_gen_candidates_with_none_fixed_features": {
  "lineno": 68,
  "symbols_in_volume": [
   "botorch.acquisition.qExpectedImprovement",
   "botorch.gen.gen_candidates_scipy"
  ],
  "type": "function"
 },
 "test.test_settings": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.test_settings.TestSettings": {
  "lineno": 14,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.test_settings.TestSettings.test_debug": {
  "lineno": 25,
  "symbols_in_volume": [
   "botorch.exceptions.BotorchWarning",
   "botorch.settings.debug",
   "botorch.settings.debug._set_state",
   "warnings.catch_warnings",
   "warnings.warn"
  ],
  "type": "function"
 },
 "test.test_settings.TestSettings.test_flags": {
  "lineno": 15,
  "symbols_in_volume": [
   "botorch.settings.debug",
   "botorch.settings.propagate_grads"
  ],
  "type": "function"
 },
 "test.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.utils.test_constraints": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.utils.test_constraints.TestGetOutcomeConstraintTransform": {
  "lineno": 12,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.utils.test_constraints.TestGetOutcomeConstraintTransform.setUp": {
  "lineno": 13,
  "symbols_in_volume": [
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.utils.test_constraints.TestGetOutcomeConstraintTransform.test_BasicEvaluation": {
  "lineno": 23,
  "symbols_in_volume": [
   "botorch.utils.get_outcome_constraint_transforms",
   "torch.double",
   "torch.equal",
   "torch.float"
  ],
  "type": "function"
 },
 "test.utils.test_constraints.TestGetOutcomeConstraintTransform.test_BroadcastEvaluation": {
  "lineno": 37,
  "symbols_in_volume": [
   "botorch.utils.get_outcome_constraint_transforms",
   "torch.Size",
   "torch.double",
   "torch.float",
   "torch.randn"
  ],
  "type": "function"
 },
 "test.utils.test_constraints.TestGetOutcomeConstraintTransform.test_None": {
  "lineno": 20,
  "symbols_in_volume": [
   "botorch.utils.get_outcome_constraint_transforms"
  ],
  "type": "function"
 },
 "test.utils.test_objective": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.utils.test_objective.TestApplyConstraints": {
  "lineno": 26,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.utils.test_objective.TestApplyConstraints.test_apply_constraints": {
  "lineno": 27,
  "symbols_in_volume": [
   "botorch.utils.apply_constraints",
   "torch.equal",
   "torch.randn"
  ],
  "type": "function"
 },
 "test.utils.test_objective.TestGetObjectiveWeightsTransform": {
  "lineno": 66,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.utils.test_objective.TestGetObjectiveWeightsTransform.test_IncompatibleNumberOfWeights": {
  "lineno": 79,
  "symbols_in_volume": [
   "botorch.utils.get_objective_weights_transform",
   "torch.ones",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.utils.test_objective.TestGetObjectiveWeightsTransform.test_MultiTaskWeights": {
  "lineno": 85,
  "symbols_in_volume": [
   "botorch.utils.get_objective_weights_transform",
   "torch.equal",
   "torch.ones",
   "torch.sum",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.utils.test_objective.TestGetObjectiveWeightsTransform.test_NoMCSamples": {
  "lineno": 91,
  "symbols_in_volume": [
   "botorch.utils.get_objective_weights_transform",
   "torch.equal",
   "torch.ones",
   "torch.sum",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.utils.test_objective.TestGetObjectiveWeightsTransform.test_NoWeights": {
  "lineno": 67,
  "symbols_in_volume": [
   "botorch.utils.get_objective_weights_transform",
   "torch.equal",
   "torch.ones"
  ],
  "type": "function"
 },
 "test.utils.test_objective.TestGetObjectiveWeightsTransform.test_OneWeightBroadcasting": {
  "lineno": 73,
  "symbols_in_volume": [
   "botorch.utils.get_objective_weights_transform",
   "torch.equal",
   "torch.ones",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.utils.test_objective.minus_one_f": {
  "lineno": 22,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.ones"
  ],
  "type": "function"
 },
 "test.utils.test_objective.ones_f": {
  "lineno": 14,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.ones"
  ],
  "type": "function"
 },
 "test.utils.test_objective.zeros_f": {
  "lineno": 18,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.utils.test_sampling": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.utils.test_sampling.TestConstructBaseSamples": {
  "lineno": 36,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.utils.test_sampling.TestConstructBaseSamples.test_construct_base_samples": {
  "lineno": 37,
  "symbols_in_volume": [
   "botorch.exceptions.warnings.SamplingWarning",
   "botorch.settings.debug",
   "botorch.utils.sampling.construct_base_samples",
   "itertools.product",
   "torch.Size",
   "torch.double",
   "torch.float",
   "torch.quasirandom.SobolEngine.MAXDIM",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "test.utils.test_sampling.TestConstructBaseSamples.test_construct_base_samples_from_posterior": {
  "lineno": 75,
  "symbols_in_volume": [
   "botorch.posteriors.gpytorch.GPyTorchPosterior",
   "botorch.utils.sampling.construct_base_samples_from_posterior",
   "gpytorch.distributions.MultitaskMultivariateNormal",
   "gpytorch.distributions.MultivariateNormal",
   "itertools.product",
   "torch.Size",
   "torch.double",
   "torch.eye",
   "torch.float",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.utils.test_sampling.TestManualSeed": {
  "lineno": 26,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.utils.test_sampling.TestManualSeed.test_manual_seed": {
  "lineno": 27,
  "symbols_in_volume": [
   "botorch.utils.sampling.manual_seed",
   "torch.all",
   "torch.random.get_rng_state"
  ],
  "type": "function"
 },
 "test.utils.test_sampling.TestSampleUtils": {
  "lineno": 159,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.utils.test_sampling.TestSampleUtils.test_sample_hypersphere": {
  "lineno": 174,
  "symbols_in_volume": [
   "botorch.utils.sampling.sample_hypersphere",
   "itertools.product",
   "torch.Size",
   "torch.double",
   "torch.float",
   "torch.max"
  ],
  "type": "function"
 },
 "test.utils.test_sampling.TestSampleUtils.test_sample_simplex": {
  "lineno": 160,
  "symbols_in_volume": [
   "botorch.utils.sampling.sample_simplex",
   "itertools.product",
   "torch.Size",
   "torch.all",
   "torch.double",
   "torch.float",
   "torch.max"
  ],
  "type": "function"
 },
 "test.utils.test_testing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.utils.test_testing.TestMock": {
  "lineno": 11,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.utils.test_testing.TestMock.test_MockModel": {
  "lineno": 37,
  "symbols_in_volume": [
   "botorch.utils.testing.MockModel",
   "botorch.utils.testing.MockPosterior",
   "torch.empty"
  ],
  "type": "function"
 },
 "test.utils.test_testing.TestMock.test_MockPosterior": {
  "lineno": 12,
  "symbols_in_volume": [
   "botorch.utils.testing.MockPosterior",
   "torch.Size",
   "torch.all",
   "torch.equal",
   "torch.eye",
   "torch.float32",
   "torch.rand"
  ],
  "type": "function"
 },
 "test.utils.test_transforms": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "test.utils.test_transforms.BMIMTestClass": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "class"
 },
 "test.utils.test_transforms.BMIMTestClass.dummy_method": {
  "lineno": 85,
  "symbols_in_volume": [
   "botorch.utils.transforms.concatenate_pending_points",
   "torch.Tensor"
  ],
  "type": "function"
 },
 "test.utils.test_transforms.BMIMTestClass.q1_method": {
  "lineno": 81,
  "symbols_in_volume": [
   "botorch.utils.transforms.t_batch_mode_transform",
   "torch.Tensor"
  ],
  "type": "function"
 },
 "test.utils.test_transforms.BMIMTestClass.q_method": {
  "lineno": 77,
  "symbols_in_volume": [
   "botorch.utils.transforms.t_batch_mode_transform",
   "torch.Tensor"
  ],
  "type": "function"
 },
 "test.utils.test_transforms.TestBatchModeTransform": {
  "lineno": 90,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.utils.test_transforms.TestBatchModeTransform.test_t_batch_mode_transform": {
  "lineno": 91,
  "symbols_in_volume": [
   "torch.equal",
   "torch.rand",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.utils.test_transforms.TestConcatenatePendingPoints": {
  "lineno": 130,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.utils.test_transforms.TestConcatenatePendingPoints.test_concatenate_pending_points": {
  "lineno": 131,
  "symbols_in_volume": [
   "torch.cat",
   "torch.equal",
   "torch.rand"
  ],
  "type": "function"
 },
 "test.utils.test_transforms.TestGPTPosteriorSettings": {
  "lineno": 211,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.utils.test_transforms.TestGPTPosteriorSettings.test_gpt_posterior_settings": {
  "lineno": 212,
  "symbols_in_volume": [
   "botorch.utils.transforms.gpt_posterior_settings",
   "gpytorch.settings.debug.off",
   "gpytorch.settings.detach_test_caches.off",
   "gpytorch.settings.detach_test_caches.on",
   "gpytorch.settings.fast_pred_var.on",
   "gpytorch.settings.propagate_grads",
   "gpytorch.settings.propagate_grads.off"
  ],
  "type": "function"
 },
 "test.utils.test_transforms.TestMatchBatchShape": {
  "lineno": 148,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.utils.test_transforms.TestMatchBatchShape.test_match_batch_shape": {
  "lineno": 149,
  "symbols_in_volume": [
   "botorch.utils.transforms.match_batch_shape",
   "torch.equal",
   "torch.rand"
  ],
  "type": "function"
 },
 "test.utils.test_transforms.TestMatchBatchShape.test_match_batch_shape_multi_dim": {
  "lineno": 165,
  "symbols_in_volume": [
   "botorch.utils.transforms.match_batch_shape",
   "torch.equal",
   "torch.rand"
  ],
  "type": "function"
 },
 "test.utils.test_transforms.TestNormalizeAndUnnormalize": {
  "lineno": 47,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.utils.test_transforms.TestNormalizeAndUnnormalize.test_normalize_unnormalize": {
  "lineno": 48,
  "symbols_in_volume": [
   "botorch.utils.transforms.normalize",
   "botorch.utils.transforms.unnormalize",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.tensor"
  ],
  "type": "function"
 },
 "test.utils.test_transforms.TestSqueezeLastDim": {
  "lineno": 204,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.utils.test_transforms.TestSqueezeLastDim.test_squeeze_last_dim": {
  "lineno": 205,
  "symbols_in_volume": [
   "botorch.utils.transforms.squeeze_last_dim",
   "torch.equal",
   "torch.rand"
  ],
  "type": "function"
 },
 "test.utils.test_transforms.TestStandardize": {
  "lineno": 25,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.utils.test_transforms.TestStandardize.test_standardize": {
  "lineno": 26,
  "symbols_in_volume": [
   "botorch.utils.transforms.standardize",
   "torch.cat",
   "torch.double",
   "torch.equal",
   "torch.float",
   "torch.tensor",
   "torch.zeros"
  ],
  "type": "function"
 },
 "test.utils.test_transforms.TorchNormalizeIndices": {
  "lineno": 187,
  "symbols_in_volume": [
   "botorch.utils.testing.BotorchTestCase"
  ],
  "type": "class"
 },
 "test.utils.test_transforms.TorchNormalizeIndices.test_normalize_indices": {
  "lineno": 188,
  "symbols_in_volume": [
   "botorch.utils.transforms.normalize_indices"
  ],
  "type": "function"
 }
}