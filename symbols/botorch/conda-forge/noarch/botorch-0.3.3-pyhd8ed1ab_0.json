{
 "botorch": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "botorch.version.version"
   ]
  },
  "type": "module"
 },
 "botorch.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "botorch.__version__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "botorch.acquisition": {
  "data": {},
  "type": "module"
 },
 "botorch.acquisition.AcquisitionFunction": {
  "data": {
   "shadows": "botorch.acquisition.acquisition.AcquisitionFunction"
  },
  "type": "import"
 },
 "botorch.acquisition.AnalyticAcquisitionFunction": {
  "data": {
   "shadows": "botorch.acquisition.analytic.AnalyticAcquisitionFunction"
  },
  "type": "import"
 },
 "botorch.acquisition.ConstrainedExpectedImprovement": {
  "data": {
   "shadows": "botorch.acquisition.analytic.ConstrainedExpectedImprovement"
  },
  "type": "import"
 },
 "botorch.acquisition.ConstrainedMCObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.ConstrainedMCObjective"
  },
  "type": "import"
 },
 "botorch.acquisition.ExpectedImprovement": {
  "data": {
   "shadows": "botorch.acquisition.analytic.ExpectedImprovement"
  },
  "type": "import"
 },
 "botorch.acquisition.FixedFeatureAcquisitionFunction": {
  "data": {
   "shadows": "botorch.acquisition.fixed_feature.FixedFeatureAcquisitionFunction"
  },
  "type": "import"
 },
 "botorch.acquisition.GenericCostAwareUtility": {
  "data": {
   "shadows": "botorch.acquisition.cost_aware.GenericCostAwareUtility"
  },
  "type": "import"
 },
 "botorch.acquisition.GenericMCObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.GenericMCObjective"
  },
  "type": "import"
 },
 "botorch.acquisition.IdentityMCObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.IdentityMCObjective"
  },
  "type": "import"
 },
 "botorch.acquisition.InverseCostWeightedUtility": {
  "data": {
   "shadows": "botorch.acquisition.cost_aware.InverseCostWeightedUtility"
  },
  "type": "import"
 },
 "botorch.acquisition.LinearMCObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.LinearMCObjective"
  },
  "type": "import"
 },
 "botorch.acquisition.MCAcquisitionFunction": {
  "data": {
   "shadows": "botorch.acquisition.monte_carlo.MCAcquisitionFunction"
  },
  "type": "import"
 },
 "botorch.acquisition.MCAcquisitionObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.MCAcquisitionObjective"
  },
  "type": "import"
 },
 "botorch.acquisition.NoisyExpectedImprovement": {
  "data": {
   "shadows": "botorch.acquisition.analytic.NoisyExpectedImprovement"
  },
  "type": "import"
 },
 "botorch.acquisition.OneShotAcquisitionFunction": {
  "data": {
   "shadows": "botorch.acquisition.acquisition.OneShotAcquisitionFunction"
  },
  "type": "import"
 },
 "botorch.acquisition.PosteriorMean": {
  "data": {
   "shadows": "botorch.acquisition.analytic.PosteriorMean"
  },
  "type": "import"
 },
 "botorch.acquisition.ProbabilityOfImprovement": {
  "data": {
   "shadows": "botorch.acquisition.analytic.ProbabilityOfImprovement"
  },
  "type": "import"
 },
 "botorch.acquisition.ScalarizedObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.ScalarizedObjective"
  },
  "type": "import"
 },
 "botorch.acquisition.UpperConfidenceBound": {
  "data": {
   "shadows": "botorch.acquisition.analytic.UpperConfidenceBound"
  },
  "type": "import"
 },
 "botorch.acquisition.__all__": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "botorch.acquisition.acquisition": {
  "data": {},
  "type": "module"
 },
 "botorch.acquisition.acquisition.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "botorch.acquisition.acquisition.AcquisitionFunction": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "abc.ABC",
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.acquisition.AcquisitionFunction.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "botorch.models.model.Model",
    "super"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.acquisition.AcquisitionFunction.forward": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.acquisition.AcquisitionFunction.set_X_pending": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "botorch.acquisition.acquisition.warnings",
    "botorch.exceptions.BotorchWarning",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.acquisition.BotorchWarning": {
  "data": {
   "shadows": "botorch.exceptions.BotorchWarning"
  },
  "type": "import"
 },
 "botorch.acquisition.acquisition.Model": {
  "data": {
   "shadows": "botorch.models.model.Model"
  },
  "type": "import"
 },
 "botorch.acquisition.acquisition.Module": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "botorch.acquisition.acquisition.OneShotAcquisitionFunction": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "abc.ABC",
    "botorch.acquisition.acquisition.AcquisitionFunction"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.acquisition.OneShotAcquisitionFunction.extract_candidates": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.acquisition.OneShotAcquisitionFunction.get_augmented_q_batch_size": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "int"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.acquisition.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.acquisition.acquisition.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.acquisition.acquisition.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "botorch.acquisition.acquisition.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.acquisition.acquisition.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "botorch.acquisition.active_learning": {
  "data": {},
  "type": "module"
 },
 "botorch.acquisition.active_learning.AnalyticAcquisitionFunction": {
  "data": {
   "shadows": "botorch.acquisition.analytic.AnalyticAcquisitionFunction"
  },
  "type": "import"
 },
 "botorch.acquisition.active_learning.MCSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.MCSampler"
  },
  "type": "import"
 },
 "botorch.acquisition.active_learning.Model": {
  "data": {
   "shadows": "botorch.models.model.Model"
  },
  "type": "import"
 },
 "botorch.acquisition.active_learning.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.acquisition.active_learning.ScalarizedObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.ScalarizedObjective"
  },
  "type": "import"
 },
 "botorch.acquisition.active_learning.SobolQMCNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.SobolQMCNormalSampler"
  },
  "type": "import"
 },
 "botorch.acquisition.active_learning.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.acquisition.active_learning.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.acquisition.active_learning.concatenate_pending_points": {
  "data": {
   "shadows": "botorch.utils.transforms.concatenate_pending_points"
  },
  "type": "import"
 },
 "botorch.acquisition.active_learning.qNegIntegratedPosteriorVariance": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "botorch.acquisition.analytic.AnalyticAcquisitionFunction"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.active_learning.qNegIntegratedPosteriorVariance.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "botorch.acquisition.objective.ScalarizedObjective",
    "botorch.models.model.Model",
    "botorch.sampling.samplers.MCSampler",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "super",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.active_learning.qNegIntegratedPosteriorVariance.forward": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "botorch.settings.propagate_grads",
    "botorch.utils.transforms.concatenate_pending_points",
    "botorch.utils.transforms.t_batch_mode_transform",
    "torch.Tensor",
    "tuple"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.active_learning.settings": {
  "data": {
   "shadows": "botorch.settings"
  },
  "type": "import"
 },
 "botorch.acquisition.active_learning.t_batch_mode_transform": {
  "data": {
   "shadows": "botorch.utils.transforms.t_batch_mode_transform"
  },
  "type": "import"
 },
 "botorch.acquisition.analytic": {
  "data": {},
  "type": "module"
 },
 "botorch.acquisition.analytic.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "botorch.acquisition.analytic.AcquisitionFunction": {
  "data": {
   "shadows": "botorch.acquisition.acquisition.AcquisitionFunction"
  },
  "type": "import"
 },
 "botorch.acquisition.analytic.AnalyticAcquisitionFunction": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "abc.ABC",
    "botorch.acquisition.acquisition.AcquisitionFunction"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.analytic.AnalyticAcquisitionFunction.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "botorch.acquisition.objective.ScalarizedObjective",
    "botorch.exceptions.UnsupportedError",
    "botorch.models.model.Model",
    "isinstance",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.analytic.AnalyticAcquisitionFunction._get_posterior": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "botorch.posteriors.posterior.Posterior",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.analytic.AnalyticAcquisitionFunction.set_X_pending": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "botorch.exceptions.UnsupportedError",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.analytic.ConstrainedExpectedImprovement": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "botorch.acquisition.analytic.AnalyticAcquisitionFunction"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.analytic.ConstrainedExpectedImprovement.__init__": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "bool",
    "botorch.acquisition.analytic.AnalyticAcquisitionFunction",
    "botorch.acquisition.analytic.torch",
    "botorch.models.model.Model",
    "botorch.utils.transforms.convert_to_target_pre_hook",
    "float",
    "int",
    "super",
    "torch.Tensor",
    "typing.Dict",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.analytic.ConstrainedExpectedImprovement._compute_prob_feas": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "botorch.acquisition.analytic._construct_dist",
    "botorch.acquisition.analytic.torch",
    "len",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.analytic.ConstrainedExpectedImprovement._preprocess_constraint_bounds": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "ValueError",
    "botorch.acquisition.analytic.torch",
    "float",
    "int",
    "len",
    "list",
    "typing.Dict",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.analytic.ConstrainedExpectedImprovement.forward": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "botorch.acquisition.analytic.torch",
    "botorch.utils.transforms.t_batch_mode_transform",
    "torch.Tensor",
    "torch.distributions.Normal"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.analytic.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "botorch.acquisition.analytic.ExpectedImprovement": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "botorch.acquisition.analytic.AnalyticAcquisitionFunction"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.analytic.ExpectedImprovement.__init__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "bool",
    "botorch.acquisition.analytic.torch",
    "botorch.acquisition.objective.ScalarizedObjective",
    "botorch.models.model.Model",
    "float",
    "super",
    "torch.Tensor",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.analytic.ExpectedImprovement.forward": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "botorch.acquisition.analytic.torch",
    "botorch.utils.transforms.t_batch_mode_transform",
    "torch.Tensor",
    "torch.distributions.Normal"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.analytic.FixedNoiseGP": {
  "data": {
   "shadows": "botorch.models.gp_regression.FixedNoiseGP"
  },
  "type": "import"
 },
 "botorch.acquisition.analytic.GPyTorchModel": {
  "data": {
   "shadows": "botorch.models.gpytorch.GPyTorchModel"
  },
  "type": "import"
 },
 "botorch.acquisition.analytic.Model": {
  "data": {
   "shadows": "botorch.models.model.Model"
  },
  "type": "import"
 },
 "botorch.acquisition.analytic.NoisyExpectedImprovement": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "botorch.acquisition.analytic.ExpectedImprovement"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.analytic.NoisyExpectedImprovement.__init__": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "bool",
    "botorch.acquisition.analytic._get_noiseless_fantasy_model",
    "botorch.acquisition.analytic.torch",
    "botorch.exceptions.UnsupportedError",
    "botorch.models.gp_regression.FixedNoiseGP",
    "botorch.models.gpytorch.GPyTorchModel",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "int",
    "isinstance",
    "sampler",
    "super",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.analytic.NoisyExpectedImprovement.forward": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "super",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.analytic.Normal": {
  "data": {
   "shadows": "torch.distributions.Normal"
  },
  "type": "import"
 },
 "botorch.acquisition.analytic.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.acquisition.analytic.Posterior": {
  "data": {
   "shadows": "botorch.posteriors.posterior.Posterior"
  },
  "type": "import"
 },
 "botorch.acquisition.analytic.PosteriorMean": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "botorch.acquisition.analytic.AnalyticAcquisitionFunction"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.analytic.PosteriorMean.forward": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "botorch.utils.transforms.t_batch_mode_transform",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.analytic.ProbabilityOfImprovement": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "botorch.acquisition.analytic.AnalyticAcquisitionFunction"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.analytic.ProbabilityOfImprovement.__init__": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "bool",
    "botorch.acquisition.analytic.torch",
    "botorch.acquisition.objective.ScalarizedObjective",
    "botorch.models.model.Model",
    "float",
    "super",
    "torch.Tensor",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.analytic.ProbabilityOfImprovement.forward": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "botorch.acquisition.analytic.torch",
    "botorch.utils.transforms.t_batch_mode_transform",
    "torch.Tensor",
    "torch.distributions.Normal"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.analytic.ScalarizedObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.ScalarizedObjective"
  },
  "type": "import"
 },
 "botorch.acquisition.analytic.SobolQMCNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.SobolQMCNormalSampler"
  },
  "type": "import"
 },
 "botorch.acquisition.analytic.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.acquisition.analytic.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "botorch.acquisition.analytic.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "botorch.acquisition.analytic.UnsupportedError": {
  "data": {
   "shadows": "botorch.exceptions.UnsupportedError"
  },
  "type": "import"
 },
 "botorch.acquisition.analytic.UpperConfidenceBound": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "botorch.acquisition.analytic.AnalyticAcquisitionFunction"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.analytic.UpperConfidenceBound.__init__": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "bool",
    "botorch.acquisition.analytic.torch",
    "botorch.acquisition.objective.ScalarizedObjective",
    "botorch.models.model.Model",
    "float",
    "super",
    "torch.Tensor",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.analytic.UpperConfidenceBound.forward": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "botorch.utils.transforms.t_batch_mode_transform",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.analytic._construct_dist": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "torch.Tensor",
    "torch.distributions.Normal"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.analytic._get_noiseless_fantasy_model": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "botorch.acquisition.analytic.torch",
    "botorch.models.gp_regression.FixedNoiseGP",
    "copy.deepcopy",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.analytic.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.acquisition.analytic.convert_to_target_pre_hook": {
  "data": {
   "shadows": "botorch.utils.transforms.convert_to_target_pre_hook"
  },
  "type": "import"
 },
 "botorch.acquisition.analytic.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "botorch.acquisition.analytic.t_batch_mode_transform": {
  "data": {
   "shadows": "botorch.utils.transforms.t_batch_mode_transform"
  },
  "type": "import"
 },
 "botorch.acquisition.analytic.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.acquisition.cost_aware": {
  "data": {},
  "type": "module"
 },
 "botorch.acquisition.cost_aware.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "botorch.acquisition.cost_aware.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "botorch.acquisition.cost_aware.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "botorch.acquisition.cost_aware.CostAwareUtility": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "abc.ABC",
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.cost_aware.CostAwareUtility.forward": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "torch.Tensor",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.cost_aware.CostAwareWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.CostAwareWarning"
  },
  "type": "import"
 },
 "botorch.acquisition.cost_aware.GenericCostAwareUtility": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "botorch.acquisition.cost_aware.CostAwareUtility"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.cost_aware.GenericCostAwareUtility.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "super",
    "torch.Tensor",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.cost_aware.GenericCostAwareUtility.forward": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "torch.Tensor",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.cost_aware.IdentityMCObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.IdentityMCObjective"
  },
  "type": "import"
 },
 "botorch.acquisition.cost_aware.InverseCostWeightedUtility": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "botorch.acquisition.cost_aware.CostAwareUtility"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.cost_aware.InverseCostWeightedUtility.__init__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "bool",
    "botorch.acquisition.objective.IdentityMCObjective",
    "botorch.acquisition.objective.MCAcquisitionObjective",
    "botorch.models.model.Model",
    "float",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.cost_aware.InverseCostWeightedUtility.forward": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.acquisition.cost_aware.torch",
    "botorch.acquisition.cost_aware.warnings",
    "botorch.exceptions.warnings.CostAwareWarning",
    "botorch.sampling.samplers.MCSampler",
    "botorch.settings.debug.on",
    "sampler",
    "torch.Tensor",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.cost_aware.MCAcquisitionObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.MCAcquisitionObjective"
  },
  "type": "import"
 },
 "botorch.acquisition.cost_aware.MCSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.MCSampler"
  },
  "type": "import"
 },
 "botorch.acquisition.cost_aware.Model": {
  "data": {
   "shadows": "botorch.models.model.Model"
  },
  "type": "import"
 },
 "botorch.acquisition.cost_aware.Module": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "botorch.acquisition.cost_aware.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.acquisition.cost_aware.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.acquisition.cost_aware.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "botorch.acquisition.cost_aware.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.acquisition.cost_aware.settings": {
  "data": {
   "shadows": "botorch.settings"
  },
  "type": "import"
 },
 "botorch.acquisition.cost_aware.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.acquisition.cost_aware.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "botorch.acquisition.fixed_feature": {
  "data": {},
  "type": "module"
 },
 "botorch.acquisition.fixed_feature.AcquisitionFunction": {
  "data": {
   "shadows": "botorch.acquisition.acquisition.AcquisitionFunction"
  },
  "type": "import"
 },
 "botorch.acquisition.fixed_feature.FixedFeatureAcquisitionFunction": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "botorch.acquisition.acquisition.AcquisitionFunction"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.fixed_feature.FixedFeatureAcquisitionFunction.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "botorch.acquisition.acquisition.AcquisitionFunction",
    "botorch.acquisition.fixed_feature.torch",
    "float",
    "int",
    "range",
    "torch.Tensor",
    "torch.nn.Module.__init__",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.fixed_feature.FixedFeatureAcquisitionFunction._construct_X_full": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ValueError",
    "botorch.acquisition.fixed_feature.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.fixed_feature.FixedFeatureAcquisitionFunction.forward": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.fixed_feature.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.acquisition.fixed_feature.Module": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "botorch.acquisition.fixed_feature.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.acquisition.fixed_feature.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "botorch.acquisition.fixed_feature.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.acquisition.fixed_feature.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.acquisition.get_acquisition_function": {
  "data": {
   "shadows": "botorch.acquisition.utils.get_acquisition_function"
  },
  "type": "import"
 },
 "botorch.acquisition.max_value_entropy_search": {
  "data": {},
  "type": "module"
 },
 "botorch.acquisition.max_value_entropy_search.AffineFidelityCostModel": {
  "data": {
   "shadows": "botorch.models.cost.AffineFidelityCostModel"
  },
  "type": "import"
 },
 "botorch.acquisition.max_value_entropy_search.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "botorch.acquisition.max_value_entropy_search.CLAMP_LB": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "botorch.acquisition.max_value_entropy_search.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "botorch.acquisition.max_value_entropy_search.CostAwareUtility": {
  "data": {
   "shadows": "botorch.acquisition.cost_aware.CostAwareUtility"
  },
  "type": "import"
 },
 "botorch.acquisition.max_value_entropy_search.InverseCostWeightedUtility": {
  "data": {
   "shadows": "botorch.acquisition.cost_aware.InverseCostWeightedUtility"
  },
  "type": "import"
 },
 "botorch.acquisition.max_value_entropy_search.MCAcquisitionFunction": {
  "data": {
   "shadows": "botorch.acquisition.monte_carlo.MCAcquisitionFunction"
  },
  "type": "import"
 },
 "botorch.acquisition.max_value_entropy_search.Model": {
  "data": {
   "shadows": "botorch.models.model.Model"
  },
  "type": "import"
 },
 "botorch.acquisition.max_value_entropy_search.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.acquisition.max_value_entropy_search.SobolQMCNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.SobolQMCNormalSampler"
  },
  "type": "import"
 },
 "botorch.acquisition.max_value_entropy_search.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.acquisition.max_value_entropy_search._sample_max_value_Gumbel": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "bool",
    "botorch.acquisition.max_value_entropy_search.torch",
    "botorch.models.model.Model",
    "int",
    "len",
    "math.log",
    "range",
    "scipy.optimize.brentq",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.max_value_entropy_search._sample_max_value_Thompson": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "bool",
    "botorch.acquisition.max_value_entropy_search.torch",
    "botorch.models.model.Model",
    "int",
    "len",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.max_value_entropy_search.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.acquisition.max_value_entropy_search.brentq": {
  "data": {
   "shadows": "scipy.optimize.brentq"
  },
  "type": "import"
 },
 "botorch.acquisition.max_value_entropy_search.check_no_nans": {
  "data": {
   "shadows": "botorch.models.utils.check_no_nans"
  },
  "type": "import"
 },
 "botorch.acquisition.max_value_entropy_search.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "botorch.acquisition.max_value_entropy_search.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "botorch.acquisition.max_value_entropy_search.match_batch_shape": {
  "data": {
   "shadows": "botorch.utils.transforms.match_batch_shape"
  },
  "type": "import"
 },
 "botorch.acquisition.max_value_entropy_search.psd_safe_cholesky": {
  "data": {
   "shadows": "gpytorch.utils.cholesky.psd_safe_cholesky"
  },
  "type": "import"
 },
 "botorch.acquisition.max_value_entropy_search.qMaxValueEntropy": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "botorch.acquisition.monte_carlo.MCAcquisitionFunction"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.max_value_entropy_search.qMaxValueEntropy.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "botorch.acquisition.max_value_entropy_search.torch",
    "botorch.models.model.Model",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "botorch.utils.transforms.match_batch_shape",
    "int",
    "super",
    "torch.Tensor",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.max_value_entropy_search.qMaxValueEntropy._compute_information_gain": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "botorch.acquisition.max_value_entropy_search.CLAMP_LB",
    "botorch.acquisition.max_value_entropy_search.torch",
    "botorch.models.utils.check_no_nans",
    "gpytorch.utils.cholesky.psd_safe_cholesky",
    "len",
    "range",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.max_value_entropy_search.qMaxValueEntropy._sample_max_values": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "AttributeError",
    "botorch.acquisition.max_value_entropy_search._sample_max_value_Gumbel",
    "botorch.acquisition.max_value_entropy_search._sample_max_value_Thompson",
    "botorch.acquisition.max_value_entropy_search.torch",
    "botorch.utils.transforms.match_batch_shape"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.max_value_entropy_search.qMaxValueEntropy.forward": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "botorch.acquisition.max_value_entropy_search.CLAMP_LB",
    "botorch.models.utils.check_no_nans",
    "botorch.utils.transforms.t_batch_mode_transform",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.max_value_entropy_search.qMaxValueEntropy.set_X_pending": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "AttributeError",
    "super",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.max_value_entropy_search.qMultiFidelityMaxValueEntropy": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "botorch.acquisition.max_value_entropy_search.qMaxValueEntropy"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.max_value_entropy_search.qMultiFidelityMaxValueEntropy.__init__": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "bool",
    "botorch.acquisition.cost_aware.CostAwareUtility",
    "botorch.acquisition.cost_aware.InverseCostWeightedUtility",
    "botorch.models.cost.AffineFidelityCostModel",
    "botorch.models.model.Model",
    "int",
    "super",
    "torch.Tensor",
    "typing.Any",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.max_value_entropy_search.qMultiFidelityMaxValueEntropy.cost_sampler": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "copy.deepcopy",
    "property"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.max_value_entropy_search.qMultiFidelityMaxValueEntropy.forward": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "botorch.acquisition.max_value_entropy_search.CLAMP_LB",
    "botorch.acquisition.max_value_entropy_search.torch",
    "botorch.models.utils.check_no_nans",
    "botorch.utils.transforms.t_batch_mode_transform",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.max_value_entropy_search.t_batch_mode_transform": {
  "data": {
   "shadows": "botorch.utils.transforms.t_batch_mode_transform"
  },
  "type": "import"
 },
 "botorch.acquisition.max_value_entropy_search.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.acquisition.monte_carlo": {
  "data": {},
  "type": "module"
 },
 "botorch.acquisition.monte_carlo.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "botorch.acquisition.monte_carlo.AcquisitionFunction": {
  "data": {
   "shadows": "botorch.acquisition.acquisition.AcquisitionFunction"
  },
  "type": "import"
 },
 "botorch.acquisition.monte_carlo.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "botorch.acquisition.monte_carlo.IdentityMCObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.IdentityMCObjective"
  },
  "type": "import"
 },
 "botorch.acquisition.monte_carlo.MCAcquisitionFunction": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "abc.ABC",
    "botorch.acquisition.acquisition.AcquisitionFunction"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.monte_carlo.MCAcquisitionFunction.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "botorch.acquisition.objective.IdentityMCObjective",
    "botorch.acquisition.objective.MCAcquisitionObjective",
    "botorch.exceptions.errors.UnsupportedError",
    "botorch.models.model.Model",
    "botorch.sampling.samplers.MCSampler",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "isinstance",
    "super",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.monte_carlo.MCAcquisitionFunction.forward": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.monte_carlo.MCAcquisitionObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.MCAcquisitionObjective"
  },
  "type": "import"
 },
 "botorch.acquisition.monte_carlo.MCSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.MCSampler"
  },
  "type": "import"
 },
 "botorch.acquisition.monte_carlo.Model": {
  "data": {
   "shadows": "botorch.models.model.Model"
  },
  "type": "import"
 },
 "botorch.acquisition.monte_carlo.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.acquisition.monte_carlo.SobolQMCNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.SobolQMCNormalSampler"
  },
  "type": "import"
 },
 "botorch.acquisition.monte_carlo.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.acquisition.monte_carlo.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "botorch.acquisition.monte_carlo.UnsupportedError": {
  "data": {
   "shadows": "botorch.exceptions.errors.UnsupportedError"
  },
  "type": "import"
 },
 "botorch.acquisition.monte_carlo.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "botorch.acquisition.monte_carlo.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.acquisition.monte_carlo.concatenate_pending_points": {
  "data": {
   "shadows": "botorch.utils.transforms.concatenate_pending_points"
  },
  "type": "import"
 },
 "botorch.acquisition.monte_carlo.match_batch_shape": {
  "data": {
   "shadows": "botorch.utils.transforms.match_batch_shape"
  },
  "type": "import"
 },
 "botorch.acquisition.monte_carlo.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "botorch.acquisition.monte_carlo.prune_inferior_points": {
  "data": {
   "shadows": "botorch.acquisition.utils.prune_inferior_points"
  },
  "type": "import"
 },
 "botorch.acquisition.monte_carlo.qExpectedImprovement": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "botorch.acquisition.monte_carlo.MCAcquisitionFunction"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.monte_carlo.qExpectedImprovement.__init__": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "botorch.acquisition.monte_carlo.torch",
    "botorch.acquisition.objective.MCAcquisitionObjective",
    "botorch.models.model.Model",
    "botorch.sampling.samplers.MCSampler",
    "float",
    "super",
    "torch.Tensor",
    "typing.Any",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.monte_carlo.qExpectedImprovement.forward": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "botorch.utils.transforms.concatenate_pending_points",
    "botorch.utils.transforms.t_batch_mode_transform",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.monte_carlo.qNoisyExpectedImprovement": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "botorch.acquisition.monte_carlo.MCAcquisitionFunction"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.monte_carlo.qNoisyExpectedImprovement.__init__": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "bool",
    "botorch.acquisition.objective.MCAcquisitionObjective",
    "botorch.acquisition.utils.prune_inferior_points",
    "botorch.models.model.Model",
    "botorch.sampling.samplers.MCSampler",
    "super",
    "torch.Tensor",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.monte_carlo.qNoisyExpectedImprovement.forward": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "botorch.acquisition.monte_carlo.torch",
    "botorch.utils.transforms.concatenate_pending_points",
    "botorch.utils.transforms.match_batch_shape",
    "botorch.utils.transforms.t_batch_mode_transform",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.monte_carlo.qProbabilityOfImprovement": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "botorch.acquisition.monte_carlo.MCAcquisitionFunction"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.monte_carlo.qProbabilityOfImprovement.__init__": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "botorch.acquisition.monte_carlo.torch",
    "botorch.acquisition.objective.MCAcquisitionObjective",
    "botorch.models.model.Model",
    "botorch.sampling.samplers.MCSampler",
    "float",
    "super",
    "torch.Tensor",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.monte_carlo.qProbabilityOfImprovement.forward": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "botorch.acquisition.monte_carlo.torch",
    "botorch.utils.transforms.concatenate_pending_points",
    "botorch.utils.transforms.t_batch_mode_transform",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.monte_carlo.qSimpleRegret": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "botorch.acquisition.monte_carlo.MCAcquisitionFunction"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.monte_carlo.qSimpleRegret.forward": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "botorch.utils.transforms.concatenate_pending_points",
    "botorch.utils.transforms.t_batch_mode_transform",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.monte_carlo.qUpperConfidenceBound": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "botorch.acquisition.monte_carlo.MCAcquisitionFunction"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.monte_carlo.qUpperConfidenceBound.__init__": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "botorch.acquisition.monte_carlo.math",
    "botorch.acquisition.objective.MCAcquisitionObjective",
    "botorch.models.model.Model",
    "botorch.sampling.samplers.MCSampler",
    "float",
    "super",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.monte_carlo.qUpperConfidenceBound.forward": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "botorch.utils.transforms.concatenate_pending_points",
    "botorch.utils.transforms.t_batch_mode_transform",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.monte_carlo.t_batch_mode_transform": {
  "data": {
   "shadows": "botorch.utils.transforms.t_batch_mode_transform"
  },
  "type": "import"
 },
 "botorch.acquisition.monte_carlo.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective": {
  "data": {},
  "type": "module"
 },
 "botorch.acquisition.multi_objective.AnalyticMultiOutputObjective": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.objective.AnalyticMultiOutputObjective"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.ExpectedHypervolumeImprovement": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.analytic.ExpectedHypervolumeImprovement"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.IdentityAnalyticMultiOutputObjective": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.objective.IdentityAnalyticMultiOutputObjective"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.IdentityMCMultiOutputObjective": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.objective.IdentityMCMultiOutputObjective"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.MCMultiOutputObjective": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.objective.MCMultiOutputObjective"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.MultiObjectiveAnalyticAcquisitionFunction": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.analytic.MultiObjectiveAnalyticAcquisitionFunction"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.MultiObjectiveMCAcquisitionFunction": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.monte_carlo.MultiObjectiveMCAcquisitionFunction"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.UnstandardizeAnalyticMultiOutputObjective": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.objective.UnstandardizeAnalyticMultiOutputObjective"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.UnstandardizeMCMultiOutputObjective": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.objective.UnstandardizeMCMultiOutputObjective"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.WeightedMCMultiOutputObjective": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.objective.WeightedMCMultiOutputObjective"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "botorch.acquisition.multi_objective.analytic": {
  "data": {},
  "type": "module"
 },
 "botorch.acquisition.multi_objective.analytic.AcquisitionFunction": {
  "data": {
   "shadows": "botorch.acquisition.acquisition.AcquisitionFunction"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.analytic.AnalyticMultiOutputObjective": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.objective.AnalyticMultiOutputObjective"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.analytic.ExpectedHypervolumeImprovement": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "botorch.acquisition.multi_objective.analytic.MultiObjectiveAnalyticAcquisitionFunction"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.multi_objective.analytic.ExpectedHypervolumeImprovement.__init__": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ValueError",
    "botorch.acquisition.multi_objective.analytic.torch",
    "botorch.acquisition.multi_objective.objective.AnalyticMultiOutputObjective",
    "botorch.models.model.Model",
    "botorch.utils.multi_objective.box_decomposition.NondominatedPartitioning",
    "float",
    "itertools.product",
    "len",
    "list",
    "range",
    "super",
    "torch.distributions.Normal",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.multi_objective.analytic.ExpectedHypervolumeImprovement.forward": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "botorch.acquisition.multi_objective.analytic.torch",
    "botorch.utils.transforms.t_batch_mode_transform",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.multi_objective.analytic.ExpectedHypervolumeImprovement.nu": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.multi_objective.analytic.ExpectedHypervolumeImprovement.psi": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.multi_objective.analytic.IdentityAnalyticMultiOutputObjective": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.objective.IdentityAnalyticMultiOutputObjective"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.analytic.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.analytic.Model": {
  "data": {
   "shadows": "botorch.models.model.Model"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.analytic.MultiObjectiveAnalyticAcquisitionFunction": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "botorch.acquisition.acquisition.AcquisitionFunction"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.multi_objective.analytic.MultiObjectiveAnalyticAcquisitionFunction.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "botorch.acquisition.multi_objective.objective.AnalyticMultiOutputObjective",
    "botorch.acquisition.multi_objective.objective.IdentityAnalyticMultiOutputObjective",
    "botorch.exceptions.errors.UnsupportedError",
    "botorch.models.model.Model",
    "isinstance",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.multi_objective.analytic.MultiObjectiveAnalyticAcquisitionFunction.forward": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.multi_objective.analytic.MultiObjectiveAnalyticAcquisitionFunction.set_X_pending": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "botorch.exceptions.errors.UnsupportedError",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.multi_objective.analytic.NondominatedPartitioning": {
  "data": {
   "shadows": "botorch.utils.multi_objective.box_decomposition.NondominatedPartitioning"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.analytic.Normal": {
  "data": {
   "shadows": "torch.distributions.Normal"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.analytic.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.analytic.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.analytic.UnsupportedError": {
  "data": {
   "shadows": "botorch.exceptions.errors.UnsupportedError"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.analytic.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.analytic.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.analytic.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.analytic.t_batch_mode_transform": {
  "data": {
   "shadows": "botorch.utils.transforms.t_batch_mode_transform"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.analytic.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.monte_carlo": {
  "data": {},
  "type": "module"
 },
 "botorch.acquisition.multi_objective.monte_carlo.AcquisitionFunction": {
  "data": {
   "shadows": "botorch.acquisition.acquisition.AcquisitionFunction"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.monte_carlo.BufferDict": {
  "data": {
   "shadows": "botorch.utils.torch.BufferDict"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.monte_carlo.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.monte_carlo.IdentityMCMultiOutputObjective": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.objective.IdentityMCMultiOutputObjective"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.monte_carlo.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.monte_carlo.MCMultiOutputObjective": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.objective.MCMultiOutputObjective"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.monte_carlo.MCSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.MCSampler"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.monte_carlo.Model": {
  "data": {
   "shadows": "botorch.models.model.Model"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.monte_carlo.MultiObjectiveMCAcquisitionFunction": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "botorch.acquisition.acquisition.AcquisitionFunction"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.multi_objective.monte_carlo.MultiObjectiveMCAcquisitionFunction.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "botorch.acquisition.multi_objective.objective.IdentityMCMultiOutputObjective",
    "botorch.acquisition.multi_objective.objective.MCMultiOutputObjective",
    "botorch.exceptions.errors.UnsupportedError",
    "botorch.models.model.Model",
    "botorch.sampling.samplers.MCSampler",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "isinstance",
    "super",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.multi_objective.monte_carlo.MultiObjectiveMCAcquisitionFunction.forward": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.multi_objective.monte_carlo.NondominatedPartitioning": {
  "data": {
   "shadows": "botorch.utils.multi_objective.box_decomposition.NondominatedPartitioning"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.monte_carlo.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.monte_carlo.SobolQMCNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.SobolQMCNormalSampler"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.monte_carlo.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.monte_carlo.UnsupportedError": {
  "data": {
   "shadows": "botorch.exceptions.errors.UnsupportedError"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.monte_carlo.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.monte_carlo.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.monte_carlo.apply_constraints_nonnegative_soft": {
  "data": {
   "shadows": "botorch.utils.objective.apply_constraints_nonnegative_soft"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.monte_carlo.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.monte_carlo.concatenate_pending_points": {
  "data": {
   "shadows": "botorch.utils.transforms.concatenate_pending_points"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.monte_carlo.qExpectedHypervolumeImprovement": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "botorch.acquisition.multi_objective.monte_carlo.MultiObjectiveMCAcquisitionFunction"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.multi_objective.monte_carlo.qExpectedHypervolumeImprovement.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ValueError",
    "botorch.acquisition.multi_objective.monte_carlo.torch",
    "botorch.acquisition.multi_objective.objective.MCMultiOutputObjective",
    "botorch.models.model.Model",
    "botorch.sampling.samplers.MCSampler",
    "botorch.utils.multi_objective.box_decomposition.NondominatedPartitioning",
    "botorch.utils.torch.BufferDict",
    "float",
    "len",
    "super",
    "torch.Tensor",
    "typing.Callable",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.multi_objective.monte_carlo.qExpectedHypervolumeImprovement._cache_q_subset_indices": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "botorch.acquisition.multi_objective.monte_carlo.torch",
    "botorch.utils.torch.BufferDict",
    "int",
    "itertools.combinations",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.multi_objective.monte_carlo.qExpectedHypervolumeImprovement._compute_qehvi": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "botorch.acquisition.multi_objective.monte_carlo.torch",
    "botorch.utils.objective.apply_constraints_nonnegative_soft",
    "len",
    "range",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.multi_objective.monte_carlo.qExpectedHypervolumeImprovement.forward": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "botorch.utils.transforms.concatenate_pending_points",
    "botorch.utils.transforms.t_batch_mode_transform",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.multi_objective.monte_carlo.t_batch_mode_transform": {
  "data": {
   "shadows": "botorch.utils.transforms.t_batch_mode_transform"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.monte_carlo.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.objective": {
  "data": {},
  "type": "module"
 },
 "botorch.acquisition.multi_objective.objective.AcquisitionObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.AcquisitionObjective"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.objective.AnalyticMultiOutputObjective": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "botorch.acquisition.objective.AcquisitionObjective"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.multi_objective.objective.AnalyticMultiOutputObjective.forward": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "botorch.posteriors.GPyTorchPosterior"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.multi_objective.objective.BotorchError": {
  "data": {
   "shadows": "botorch.exceptions.errors.BotorchError"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.objective.BotorchTensorDimensionError": {
  "data": {
   "shadows": "botorch.exceptions.errors.BotorchTensorDimensionError"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.objective.GPyTorchPosterior": {
  "data": {
   "shadows": "botorch.posteriors.GPyTorchPosterior"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.objective.IdentityAnalyticMultiOutputObjective": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "botorch.acquisition.multi_objective.objective.AnalyticMultiOutputObjective"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.multi_objective.objective.IdentityAnalyticMultiOutputObjective.forward": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "botorch.posteriors.GPyTorchPosterior"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.multi_objective.objective.IdentityMCMultiOutputObjective": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "botorch.acquisition.multi_objective.objective.MCMultiOutputObjective"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.multi_objective.objective.IdentityMCMultiOutputObjective.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "any",
    "botorch.acquisition.multi_objective.objective.torch",
    "botorch.exceptions.errors.BotorchError",
    "botorch.exceptions.errors.BotorchTensorDimensionError",
    "botorch.utils.transforms.normalize_indices",
    "int",
    "len",
    "super",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.multi_objective.objective.IdentityMCMultiOutputObjective.forward": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "hasattr",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.multi_objective.objective.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.objective.MCMultiOutputObjective": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "botorch.acquisition.objective.AcquisitionObjective"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.multi_objective.objective.MCMultiOutputObjective.forward": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.multi_objective.objective.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.objective.Standardize": {
  "data": {
   "shadows": "botorch.models.transforms.outcome.Standardize"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.objective.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.objective.UnstandardizeAnalyticMultiOutputObjective": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "botorch.acquisition.multi_objective.objective.AnalyticMultiOutputObjective"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.multi_objective.objective.UnstandardizeAnalyticMultiOutputObjective.__init__": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "botorch.exceptions.errors.BotorchTensorDimensionError",
    "botorch.models.transforms.outcome.Standardize",
    "super",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.multi_objective.objective.UnstandardizeAnalyticMultiOutputObjective.forward": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "botorch.posteriors.GPyTorchPosterior",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.multi_objective.objective.UnstandardizeMCMultiOutputObjective": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "botorch.acquisition.multi_objective.objective.IdentityMCMultiOutputObjective"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.multi_objective.objective.UnstandardizeMCMultiOutputObjective.__init__": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "botorch.exceptions.errors.BotorchTensorDimensionError",
    "int",
    "len",
    "super",
    "torch.Tensor",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.multi_objective.objective.UnstandardizeMCMultiOutputObjective.forward": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "super",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.multi_objective.objective.WeightedMCMultiOutputObjective": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "botorch.acquisition.multi_objective.objective.IdentityMCMultiOutputObjective"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.multi_objective.objective.WeightedMCMultiOutputObjective.__init__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "botorch.exceptions.errors.BotorchTensorDimensionError",
    "int",
    "len",
    "super",
    "torch.Tensor",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.multi_objective.objective.WeightedMCMultiOutputObjective.forward": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "super",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.multi_objective.objective.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.objective.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.objective.normalize_indices": {
  "data": {
   "shadows": "botorch.utils.transforms.normalize_indices"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.objective.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.acquisition.multi_objective.qExpectedHypervolumeImprovement": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.monte_carlo.qExpectedHypervolumeImprovement"
  },
  "type": "import"
 },
 "botorch.acquisition.objective": {
  "data": {},
  "type": "module"
 },
 "botorch.acquisition.objective.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "botorch.acquisition.objective.AcquisitionObjective": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "abc.ABC",
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.objective.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "botorch.acquisition.objective.ConstrainedMCObjective": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "botorch.acquisition.objective.GenericMCObjective"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.objective.ConstrainedMCObjective.__init__": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "botorch.acquisition.objective.torch",
    "float",
    "super",
    "torch.Tensor",
    "typing.Callable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.objective.ConstrainedMCObjective.forward": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "botorch.utils.apply_constraints",
    "super",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.objective.GPyTorchPosterior": {
  "data": {
   "shadows": "botorch.posteriors.gpytorch.GPyTorchPosterior"
  },
  "type": "import"
 },
 "botorch.acquisition.objective.GenericMCObjective": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "botorch.acquisition.objective.MCAcquisitionObjective"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.objective.GenericMCObjective.__init__": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "super",
    "torch.Tensor",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.objective.GenericMCObjective.forward": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.objective.IdentityMCObjective": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "botorch.acquisition.objective.MCAcquisitionObjective"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.objective.IdentityMCObjective.forward": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.objective.LinearMCObjective": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "botorch.acquisition.objective.MCAcquisitionObjective"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.objective.LinearMCObjective.__init__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.objective.LinearMCObjective.forward": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.acquisition.objective.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.objective.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.acquisition.objective.MCAcquisitionObjective": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "botorch.acquisition.objective.AcquisitionObjective"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.objective.MCAcquisitionObjective.forward": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.objective.Module": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "botorch.acquisition.objective.ScalarizedObjective": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "botorch.acquisition.objective.AcquisitionObjective"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.objective.ScalarizedObjective.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "super",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.objective.ScalarizedObjective.forward": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "botorch.posteriors.gpytorch.GPyTorchPosterior",
    "botorch.posteriors.gpytorch.scalarize_posterior"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.objective.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.acquisition.objective.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "botorch.acquisition.objective.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.acquisition.objective.apply_constraints": {
  "data": {
   "shadows": "botorch.utils.apply_constraints"
  },
  "type": "import"
 },
 "botorch.acquisition.objective.scalarize_posterior": {
  "data": {
   "shadows": "botorch.posteriors.gpytorch.scalarize_posterior"
  },
  "type": "import"
 },
 "botorch.acquisition.objective.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.acquisition.penalized": {
  "data": {},
  "type": "module"
 },
 "botorch.acquisition.penalized.AcquisitionFunction": {
  "data": {
   "shadows": "botorch.acquisition.acquisition.AcquisitionFunction"
  },
  "type": "import"
 },
 "botorch.acquisition.penalized.AnalyticAcquisitionFunction": {
  "data": {
   "shadows": "botorch.acquisition.analytic.AnalyticAcquisitionFunction"
  },
  "type": "import"
 },
 "botorch.acquisition.penalized.GaussianPenalty": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "botorch.acquisition.penalized.torch"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.penalized.GaussianPenalty.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "float",
    "super",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.penalized.GaussianPenalty.forward": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "botorch.acquisition.penalized.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.penalized.GroupLassoPenalty": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "botorch.acquisition.penalized.torch"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.penalized.GroupLassoPenalty.__init__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "int",
    "super",
    "torch.Tensor",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.penalized.GroupLassoPenalty.forward": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.acquisition.penalized.group_lasso_regularizer",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.penalized.L2Penalty": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "botorch.acquisition.penalized.torch"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.penalized.L2Penalty.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "super",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.penalized.L2Penalty.forward": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "botorch.acquisition.penalized.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.penalized.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.acquisition.penalized.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.acquisition.penalized.PenalizedAcquisitionFunction": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "botorch.acquisition.acquisition.AcquisitionFunction"
   ]
  },
  "type": "class"
 },
 "botorch.acquisition.penalized.PenalizedAcquisitionFunction.X_pending": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "property",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.penalized.PenalizedAcquisitionFunction.__init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "botorch.acquisition.acquisition.AcquisitionFunction",
    "botorch.acquisition.penalized.torch",
    "float",
    "super"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.penalized.PenalizedAcquisitionFunction.forward": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.penalized.PenalizedAcquisitionFunction.set_X_pending": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "botorch.acquisition.analytic.AnalyticAcquisitionFunction",
    "botorch.exceptions.UnsupportedError",
    "isinstance",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.penalized.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.acquisition.penalized.UnsupportedError": {
  "data": {
   "shadows": "botorch.exceptions.UnsupportedError"
  },
  "type": "import"
 },
 "botorch.acquisition.penalized.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.acquisition.penalized.group_lasso_regularizer": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "botorch.acquisition.penalized.math",
    "botorch.acquisition.penalized.torch",
    "int",
    "len",
    "torch.Tensor",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.penalized.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "botorch.acquisition.penalized.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.acquisition.qExpectedImprovement": {
  "data": {
   "shadows": "botorch.acquisition.monte_carlo.qExpectedImprovement"
  },
  "type": "import"
 },
 "botorch.acquisition.qKnowledgeGradient": {
  "data": {
   "shadows": "botorch.acquisition.knowledge_gradient.qKnowledgeGradient"
  },
  "type": "import"
 },
 "botorch.acquisition.qMaxValueEntropy": {
  "data": {
   "shadows": "botorch.acquisition.max_value_entropy_search.qMaxValueEntropy"
  },
  "type": "import"
 },
 "botorch.acquisition.qMultiFidelityKnowledgeGradient": {
  "data": {
   "shadows": "botorch.acquisition.knowledge_gradient.qMultiFidelityKnowledgeGradient"
  },
  "type": "import"
 },
 "botorch.acquisition.qMultiFidelityMaxValueEntropy": {
  "data": {
   "shadows": "botorch.acquisition.max_value_entropy_search.qMultiFidelityMaxValueEntropy"
  },
  "type": "import"
 },
 "botorch.acquisition.qNegIntegratedPosteriorVariance": {
  "data": {
   "shadows": "botorch.acquisition.active_learning.qNegIntegratedPosteriorVariance"
  },
  "type": "import"
 },
 "botorch.acquisition.qNoisyExpectedImprovement": {
  "data": {
   "shadows": "botorch.acquisition.monte_carlo.qNoisyExpectedImprovement"
  },
  "type": "import"
 },
 "botorch.acquisition.qProbabilityOfImprovement": {
  "data": {
   "shadows": "botorch.acquisition.monte_carlo.qProbabilityOfImprovement"
  },
  "type": "import"
 },
 "botorch.acquisition.qSimpleRegret": {
  "data": {
   "shadows": "botorch.acquisition.monte_carlo.qSimpleRegret"
  },
  "type": "import"
 },
 "botorch.acquisition.qUpperConfidenceBound": {
  "data": {
   "shadows": "botorch.acquisition.monte_carlo.qUpperConfidenceBound"
  },
  "type": "import"
 },
 "botorch.acquisition.utils": {
  "data": {},
  "type": "module"
 },
 "botorch.acquisition.utils.AcquisitionFunction": {
  "data": {
   "shadows": "botorch.acquisition.acquisition.AcquisitionFunction"
  },
  "type": "import"
 },
 "botorch.acquisition.utils.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "botorch.acquisition.utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "botorch.acquisition.utils.IIDNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.IIDNormalSampler"
  },
  "type": "import"
 },
 "botorch.acquisition.utils.IdentityMCObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.IdentityMCObjective"
  },
  "type": "import"
 },
 "botorch.acquisition.utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.acquisition.utils.MCAcquisitionObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.MCAcquisitionObjective"
  },
  "type": "import"
 },
 "botorch.acquisition.utils.MCSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.MCSampler"
  },
  "type": "import"
 },
 "botorch.acquisition.utils.Model": {
  "data": {
   "shadows": "botorch.models.model.Model"
  },
  "type": "import"
 },
 "botorch.acquisition.utils.NondominatedPartitioning": {
  "data": {
   "shadows": "botorch.utils.multi_objective.box_decomposition.NondominatedPartitioning"
  },
  "type": "import"
 },
 "botorch.acquisition.utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.acquisition.utils.SamplingWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.SamplingWarning"
  },
  "type": "import"
 },
 "botorch.acquisition.utils.SobolEngine": {
  "data": {
   "shadows": "torch.quasirandom.SobolEngine"
  },
  "type": "import"
 },
 "botorch.acquisition.utils.SobolQMCNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.SobolQMCNormalSampler"
  },
  "type": "import"
 },
 "botorch.acquisition.utils.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.acquisition.utils.UnsupportedError": {
  "data": {
   "shadows": "botorch.exceptions.errors.UnsupportedError"
  },
  "type": "import"
 },
 "botorch.acquisition.utils.analytic": {
  "data": {
   "shadows": "botorch.acquisition.analytic"
  },
  "type": "import"
 },
 "botorch.acquisition.utils.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.acquisition.utils.expand_trace_observations": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "botorch.acquisition.utils.torch",
    "int",
    "len",
    "torch.Tensor",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.utils.get_acquisition_function": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "bool",
    "botorch.acquisition.multi_objective.monte_carlo.MCAcquisitionFunction",
    "botorch.acquisition.multi_objective.monte_carlo.qExpectedHypervolumeImprovement",
    "botorch.acquisition.multi_objective.monte_carlo.qExpectedImprovement",
    "botorch.acquisition.multi_objective.monte_carlo.qNoisyExpectedImprovement",
    "botorch.acquisition.multi_objective.monte_carlo.qProbabilityOfImprovement",
    "botorch.acquisition.multi_objective.monte_carlo.qSimpleRegret",
    "botorch.acquisition.multi_objective.monte_carlo.qUpperConfidenceBound",
    "botorch.acquisition.objective.MCAcquisitionObjective",
    "botorch.acquisition.utils.torch",
    "botorch.models.model.Model",
    "botorch.sampling.samplers.IIDNormalSampler",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "botorch.utils.multi_objective.box_decomposition.NondominatedPartitioning",
    "c",
    "int",
    "objective",
    "str",
    "torch.Tensor",
    "typing.Callable",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.utils.get_infeasible_cost": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "botorch.models.model.Model",
    "botorch.utils.transforms.squeeze_last_dim",
    "float",
    "objective",
    "torch.Tensor",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.utils.is_nonnegative": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "bool",
    "botorch.acquisition.acquisition.AcquisitionFunction",
    "botorch.acquisition.analytic.ConstrainedExpectedImprovement",
    "botorch.acquisition.analytic.ExpectedImprovement",
    "botorch.acquisition.analytic.NoisyExpectedImprovement",
    "botorch.acquisition.analytic.ProbabilityOfImprovement",
    "botorch.acquisition.multi_objective.analytic.ExpectedHypervolumeImprovement",
    "botorch.acquisition.multi_objective.monte_carlo.qExpectedHypervolumeImprovement",
    "botorch.acquisition.multi_objective.monte_carlo.qExpectedImprovement",
    "botorch.acquisition.multi_objective.monte_carlo.qNoisyExpectedImprovement",
    "botorch.acquisition.multi_objective.monte_carlo.qProbabilityOfImprovement",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.utils.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "botorch.acquisition.utils.monte_carlo": {
  "data": {
   "shadows": "botorch.acquisition.monte_carlo"
  },
  "type": "import"
 },
 "botorch.acquisition.utils.moo_monte_carlo": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.monte_carlo"
  },
  "type": "import"
 },
 "botorch.acquisition.utils.multi_objective": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective"
  },
  "type": "import"
 },
 "botorch.acquisition.utils.project_to_target_fidelity": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "botorch.acquisition.utils.torch",
    "float",
    "int",
    "range",
    "torch.Tensor",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.utils.prune_inferior_points": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "ValueError",
    "botorch.acquisition.objective.IdentityMCObjective",
    "botorch.acquisition.objective.MCAcquisitionObjective",
    "botorch.acquisition.utils.math",
    "botorch.acquisition.utils.torch",
    "botorch.acquisition.utils.warnings",
    "botorch.exceptions.errors.UnsupportedError",
    "botorch.exceptions.warnings.SamplingWarning",
    "botorch.models.model.Model",
    "botorch.sampling.samplers.IIDNormalSampler",
    "botorch.sampling.samplers.MCSampler",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "botorch.settings.debug.on",
    "float",
    "int",
    "len",
    "objective",
    "sampler",
    "torch.Tensor",
    "torch.quasirandom.SobolEngine.MAXDIM",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.acquisition.utils.settings": {
  "data": {
   "shadows": "botorch.settings"
  },
  "type": "import"
 },
 "botorch.acquisition.utils.squeeze_last_dim": {
  "data": {
   "shadows": "botorch.utils.transforms.squeeze_last_dim"
  },
  "type": "import"
 },
 "botorch.acquisition.utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.acquisition.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "botorch.batch_cross_validation": {
  "data": {
   "shadows": "botorch.cross_validation.batch_cross_validation"
  },
  "type": "import"
 },
 "botorch.cross_validation": {
  "data": {},
  "type": "module"
 },
 "botorch.cross_validation.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "botorch.cross_validation.CVFolds": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "torch.Tensor",
    "typing.NamedTuple",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "botorch.cross_validation.CVResults": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "botorch.models.gpytorch.GPyTorchModel",
    "botorch.posteriors.gpytorch.GPyTorchPosterior",
    "torch.Tensor",
    "typing.NamedTuple",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "botorch.cross_validation.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "botorch.cross_validation.GPyTorchModel": {
  "data": {
   "shadows": "botorch.models.gpytorch.GPyTorchModel"
  },
  "type": "import"
 },
 "botorch.cross_validation.GPyTorchPosterior": {
  "data": {
   "shadows": "botorch.posteriors.gpytorch.GPyTorchPosterior"
  },
  "type": "import"
 },
 "botorch.cross_validation.MarginalLogLikelihood": {
  "data": {
   "shadows": "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood"
  },
  "type": "import"
 },
 "botorch.cross_validation.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "botorch.cross_validation.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.cross_validation.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.cross_validation.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "botorch.cross_validation._filter_kwargs": {
  "data": {
   "shadows": "botorch.optim.utils._filter_kwargs"
  },
  "type": "import"
 },
 "botorch.cross_validation.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.cross_validation.batch_cross_validation": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "bool",
    "botorch.cross_validation.CVFolds",
    "botorch.cross_validation.CVResults",
    "botorch.cross_validation.torch",
    "botorch.fit.fit_gpytorch_model",
    "botorch.models.gpytorch.GPyTorchModel",
    "botorch.optim.utils._filter_kwargs",
    "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood",
    "mll_cls",
    "model_cls",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "botorch.cross_validation.fit_gpytorch_model": {
  "data": {
   "shadows": "botorch.fit.fit_gpytorch_model"
  },
  "type": "import"
 },
 "botorch.cross_validation.gen_loo_cv_folds": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "botorch.cross_validation.CVFolds",
    "botorch.cross_validation.torch",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.cross_validation.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.distributions": {
  "data": {},
  "type": "module"
 },
 "botorch.distributions.Kumaraswamy": {
  "data": {
   "shadows": "botorch.distributions.distributions.Kumaraswamy"
  },
  "type": "import"
 },
 "botorch.distributions.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "botorch.distributions.distributions": {
  "data": {},
  "type": "module"
 },
 "botorch.distributions.distributions.AffineTransform": {
  "data": {
   "shadows": "torch.distributions.transforms.AffineTransform"
  },
  "type": "import"
 },
 "botorch.distributions.distributions.Kumaraswamy": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "torch.distributions.constraints.positive",
    "torch.distributions.constraints.unit_interval",
    "torch.distributions.transformed_distribution.TransformedDistribution"
   ]
  },
  "type": "class"
 },
 "botorch.distributions.distributions.Kumaraswamy.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "bool",
    "botorch.distributions.distributions.torch",
    "float",
    "super",
    "torch.Tensor",
    "torch.distributions.transforms.AffineTransform",
    "torch.distributions.transforms.PowerTransform",
    "torch.distributions.uniform.Uniform",
    "torch.distributions.utils.broadcast_all",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.distributions.distributions.Kumaraswamy.entropy": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "botorch.distributions.distributions.torch",
    "torch.distributions.gumbel.euler_constant"
   ]
  },
  "type": "function"
 },
 "botorch.distributions.distributions.Kumaraswamy.expand": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "botorch.distributions.distributions.Kumaraswamy",
    "botorch.distributions.distributions.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "botorch.distributions.distributions.Kumaraswamy.mean": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "botorch.distributions.distributions._log_moments",
    "property"
   ]
  },
  "type": "function"
 },
 "botorch.distributions.distributions.Kumaraswamy.variance": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "botorch.distributions.distributions._log_moments",
    "botorch.distributions.distributions._weighted_logsumexp",
    "botorch.distributions.distributions.torch",
    "property"
   ]
  },
  "type": "function"
 },
 "botorch.distributions.distributions.PowerTransform": {
  "data": {
   "shadows": "torch.distributions.transforms.PowerTransform"
  },
  "type": "import"
 },
 "botorch.distributions.distributions.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.distributions.distributions.TransformedDistribution": {
  "data": {
   "shadows": "torch.distributions.transformed_distribution.TransformedDistribution"
  },
  "type": "import"
 },
 "botorch.distributions.distributions.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "botorch.distributions.distributions.Uniform": {
  "data": {
   "shadows": "torch.distributions.uniform.Uniform"
  },
  "type": "import"
 },
 "botorch.distributions.distributions.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "botorch.distributions.distributions._log_moments": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "botorch.distributions.distributions.torch",
    "int",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.distributions.distributions._weighted_logsumexp": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "bool",
    "botorch.distributions.distributions.torch",
    "int",
    "torch.Tensor",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "botorch.distributions.distributions.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.distributions.distributions.broadcast_all": {
  "data": {
   "shadows": "torch.distributions.utils.broadcast_all"
  },
  "type": "import"
 },
 "botorch.distributions.distributions.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "botorch.distributions.distributions.euler_constant": {
  "data": {
   "shadows": "torch.distributions.gumbel.euler_constant"
  },
  "type": "import"
 },
 "botorch.distributions.distributions.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.exceptions": {
  "data": {},
  "type": "module"
 },
 "botorch.exceptions.BadInitialCandidatesWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.BadInitialCandidatesWarning"
  },
  "type": "import"
 },
 "botorch.exceptions.BotorchError": {
  "data": {
   "shadows": "botorch.exceptions.errors.BotorchError"
  },
  "type": "import"
 },
 "botorch.exceptions.BotorchTensorDimensionError": {
  "data": {
   "shadows": "botorch.exceptions.errors.BotorchTensorDimensionError"
  },
  "type": "import"
 },
 "botorch.exceptions.BotorchTensorDimensionWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.BotorchTensorDimensionWarning"
  },
  "type": "import"
 },
 "botorch.exceptions.BotorchWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.BotorchWarning"
  },
  "type": "import"
 },
 "botorch.exceptions.CandidateGenerationError": {
  "data": {
   "shadows": "botorch.exceptions.errors.CandidateGenerationError"
  },
  "type": "import"
 },
 "botorch.exceptions.CostAwareWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.CostAwareWarning"
  },
  "type": "import"
 },
 "botorch.exceptions.InputDataError": {
  "data": {
   "shadows": "botorch.exceptions.errors.InputDataError"
  },
  "type": "import"
 },
 "botorch.exceptions.InputDataWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.InputDataWarning"
  },
  "type": "import"
 },
 "botorch.exceptions.OptimizationWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.OptimizationWarning"
  },
  "type": "import"
 },
 "botorch.exceptions.SamplingWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.SamplingWarning"
  },
  "type": "import"
 },
 "botorch.exceptions.UnsupportedError": {
  "data": {
   "shadows": "botorch.exceptions.errors.UnsupportedError"
  },
  "type": "import"
 },
 "botorch.exceptions.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "botorch.exceptions.errors": {
  "data": {},
  "type": "module"
 },
 "botorch.exceptions.errors.BotorchError": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "botorch.exceptions.errors.BotorchTensorDimensionError": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "botorch.exceptions.errors.BotorchError"
   ]
  },
  "type": "class"
 },
 "botorch.exceptions.errors.CandidateGenerationError": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "botorch.exceptions.errors.BotorchError"
   ]
  },
  "type": "class"
 },
 "botorch.exceptions.errors.InputDataError": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "botorch.exceptions.errors.BotorchError"
   ]
  },
  "type": "class"
 },
 "botorch.exceptions.errors.UnsupportedError": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "botorch.exceptions.errors.BotorchError"
   ]
  },
  "type": "class"
 },
 "botorch.exceptions.warnings": {
  "data": {},
  "type": "module"
 },
 "botorch.exceptions.warnings.BadInitialCandidatesWarning": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "botorch.exceptions.warnings.BotorchWarning"
   ]
  },
  "type": "class"
 },
 "botorch.exceptions.warnings.BotorchTensorDimensionWarning": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "botorch.exceptions.warnings.BotorchWarning"
   ]
  },
  "type": "class"
 },
 "botorch.exceptions.warnings.BotorchWarning": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "botorch.exceptions.warnings.CostAwareWarning": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "botorch.exceptions.warnings.BotorchWarning"
   ]
  },
  "type": "class"
 },
 "botorch.exceptions.warnings.InputDataWarning": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "botorch.exceptions.warnings.BotorchWarning"
   ]
  },
  "type": "class"
 },
 "botorch.exceptions.warnings.OptimizationWarning": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "botorch.exceptions.warnings.BotorchWarning"
   ]
  },
  "type": "class"
 },
 "botorch.exceptions.warnings.SamplingWarning": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "botorch.exceptions.warnings.BotorchWarning"
   ]
  },
  "type": "class"
 },
 "botorch.fit": {
  "data": {},
  "type": "module"
 },
 "botorch.fit.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "botorch.fit.BatchedMultiOutputGPyTorchModel": {
  "data": {
   "shadows": "botorch.models.gpytorch.BatchedMultiOutputGPyTorchModel"
  },
  "type": "import"
 },
 "botorch.fit.BotorchError": {
  "data": {
   "shadows": "botorch.exceptions.errors.BotorchError"
  },
  "type": "import"
 },
 "botorch.fit.BotorchWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.BotorchWarning"
  },
  "type": "import"
 },
 "botorch.fit.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "botorch.fit.FAILED_CONVERSION_MSG": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "botorch.fit.HeteroskedasticSingleTaskGP": {
  "data": {
   "shadows": "botorch.models.gp_regression.HeteroskedasticSingleTaskGP"
  },
  "type": "import"
 },
 "botorch.fit.MarginalLogLikelihood": {
  "data": {
   "shadows": "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood"
  },
  "type": "import"
 },
 "botorch.fit.OptimizationWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.OptimizationWarning"
  },
  "type": "import"
 },
 "botorch.fit.SumMarginalLogLikelihood": {
  "data": {
   "shadows": "gpytorch.mlls.sum_marginal_log_likelihood.SumMarginalLogLikelihood"
  },
  "type": "import"
 },
 "botorch.fit.UnsupportedError": {
  "data": {
   "shadows": "botorch.exceptions.errors.UnsupportedError"
  },
  "type": "import"
 },
 "botorch.fit._set_transformed_inputs": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "botorch.exceptions.errors.BotorchError",
    "botorch.models.gp_regression.HeteroskedasticSingleTaskGP",
    "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood",
    "gpytorch.mlls.sum_marginal_log_likelihood.SumMarginalLogLikelihood",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "botorch.fit.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.fit.batched_to_model_list": {
  "data": {
   "shadows": "botorch.models.converter.batched_to_model_list"
  },
  "type": "import"
 },
 "botorch.fit.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "botorch.fit.fit_gpytorch_model": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "AttributeError",
    "RuntimeError",
    "any",
    "botorch.exceptions.errors.UnsupportedError",
    "botorch.exceptions.warnings.BotorchWarning",
    "botorch.exceptions.warnings.OptimizationWarning",
    "botorch.fit.FAILED_CONVERSION_MSG",
    "botorch.fit._set_transformed_inputs",
    "botorch.fit.logging",
    "botorch.fit.warnings",
    "botorch.models.converter.batched_to_model_list",
    "botorch.models.converter.model_list_to_batched",
    "botorch.models.gpytorch.BatchedMultiOutputGPyTorchModel",
    "botorch.optim.fit.fit_gpytorch_scipy",
    "botorch.optim.utils.sample_all_priors",
    "copy.deepcopy",
    "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood",
    "gpytorch.mlls.sum_marginal_log_likelihood.SumMarginalLogLikelihood",
    "hasattr",
    "isinstance",
    "issubclass",
    "optimizer",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "botorch.fit.fit_gpytorch_scipy": {
  "data": {
   "shadows": "botorch.optim.fit.fit_gpytorch_scipy"
  },
  "type": "import"
 },
 "botorch.fit.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "botorch.fit.model_list_to_batched": {
  "data": {
   "shadows": "botorch.models.converter.model_list_to_batched"
  },
  "type": "import"
 },
 "botorch.fit.sample_all_priors": {
  "data": {
   "shadows": "botorch.optim.utils.sample_all_priors"
  },
  "type": "import"
 },
 "botorch.fit.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "botorch.fit_gpytorch_model": {
  "data": {
   "shadows": "botorch.fit.fit_gpytorch_model"
  },
  "type": "import"
 },
 "botorch.gen_candidates_scipy": {
  "data": {
   "shadows": "botorch.generation.gen.gen_candidates_scipy"
  },
  "type": "import"
 },
 "botorch.gen_candidates_torch": {
  "data": {
   "shadows": "botorch.generation.gen.gen_candidates_torch"
  },
  "type": "import"
 },
 "botorch.generation": {
  "data": {},
  "type": "module"
 },
 "botorch.generation.BoltzmannSampling": {
  "data": {
   "shadows": "botorch.generation.sampling.BoltzmannSampling"
  },
  "type": "import"
 },
 "botorch.generation.MaxPosteriorSampling": {
  "data": {
   "shadows": "botorch.generation.sampling.MaxPosteriorSampling"
  },
  "type": "import"
 },
 "botorch.generation.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "botorch.generation.gen": {
  "data": {},
  "type": "module"
 },
 "botorch.generation.gen.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "botorch.generation.gen.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "botorch.generation.gen.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "botorch.generation.gen.ExpMAStoppingCriterion": {
  "data": {
   "shadows": "botorch.optim.stopping.ExpMAStoppingCriterion"
  },
  "type": "import"
 },
 "botorch.generation.gen.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.generation.gen.Module": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "botorch.generation.gen.Optimizer": {
  "data": {
   "shadows": "torch.optim.Optimizer"
  },
  "type": "import"
 },
 "botorch.generation.gen.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.generation.gen.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.generation.gen.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "botorch.generation.gen.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "botorch.generation.gen.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "botorch.generation.gen._arrayify": {
  "data": {
   "shadows": "botorch.optim.parameter_constraints._arrayify"
  },
  "type": "import"
 },
 "botorch.generation.gen._filter_kwargs": {
  "data": {
   "shadows": "botorch.optim.utils._filter_kwargs"
  },
  "type": "import"
 },
 "botorch.generation.gen.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.generation.gen.columnwise_clamp": {
  "data": {
   "shadows": "botorch.optim.utils.columnwise_clamp"
  },
  "type": "import"
 },
 "botorch.generation.gen.fix_features": {
  "data": {
   "shadows": "botorch.optim.utils.fix_features"
  },
  "type": "import"
 },
 "botorch.generation.gen.gen_candidates_scipy": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "acquisition_function",
    "botorch.generation.gen.torch",
    "botorch.optim.parameter_constraints._arrayify",
    "botorch.optim.parameter_constraints.make_scipy_bounds",
    "botorch.optim.parameter_constraints.make_scipy_linear_constraints",
    "botorch.optim.utils.columnwise_clamp",
    "botorch.optim.utils.fix_features",
    "float",
    "int",
    "scipy.optimize.minimize",
    "str",
    "torch.Tensor",
    "torch.nn.Module",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.generation.gen.gen_candidates_scipy.f": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "acquisition_function",
    "botorch.generation.gen.torch",
    "botorch.optim.parameter_constraints._arrayify",
    "botorch.optim.utils.fix_features"
   ]
  },
  "type": "function"
 },
 "botorch.generation.gen.gen_candidates_torch": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "acquisition_function",
    "bool",
    "botorch.generation.gen.torch",
    "botorch.optim.stopping.ExpMAStoppingCriterion",
    "botorch.optim.utils._filter_kwargs",
    "botorch.optim.utils.columnwise_clamp",
    "botorch.optim.utils.fix_features",
    "float",
    "int",
    "optimizer",
    "print",
    "str",
    "torch.Tensor",
    "torch.optim.Optimizer",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.generation.gen.gen_candidates_torch.closure": {
  "data": {
   "lineno": 209
  },
  "type": "function"
 },
 "botorch.generation.gen.get_best_candidates": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "botorch.generation.gen.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.generation.gen.make_scipy_bounds": {
  "data": {
   "shadows": "botorch.optim.parameter_constraints.make_scipy_bounds"
  },
  "type": "import"
 },
 "botorch.generation.gen.make_scipy_linear_constraints": {
  "data": {
   "shadows": "botorch.optim.parameter_constraints.make_scipy_linear_constraints"
  },
  "type": "import"
 },
 "botorch.generation.gen.minimize": {
  "data": {
   "shadows": "scipy.optimize.minimize"
  },
  "type": "import"
 },
 "botorch.generation.gen.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.generation.gen_candidates_scipy": {
  "data": {
   "shadows": "botorch.generation.gen.gen_candidates_scipy"
  },
  "type": "import"
 },
 "botorch.generation.gen_candidates_torch": {
  "data": {
   "shadows": "botorch.generation.gen.gen_candidates_torch"
  },
  "type": "import"
 },
 "botorch.generation.get_best_candidates": {
  "data": {
   "shadows": "botorch.generation.gen.get_best_candidates"
  },
  "type": "import"
 },
 "botorch.generation.sampling": {
  "data": {},
  "type": "module"
 },
 "botorch.generation.sampling.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "botorch.generation.sampling.AcquisitionFunction": {
  "data": {
   "shadows": "botorch.acquisition.acquisition.AcquisitionFunction"
  },
  "type": "import"
 },
 "botorch.generation.sampling.AcquisitionObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.AcquisitionObjective"
  },
  "type": "import"
 },
 "botorch.generation.sampling.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "botorch.generation.sampling.BoltzmannSampling": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "botorch.generation.sampling.SamplingStrategy"
   ]
  },
  "type": "class"
 },
 "botorch.generation.sampling.BoltzmannSampling.__init__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "bool",
    "botorch.acquisition.acquisition.AcquisitionFunction",
    "float",
    "super"
   ]
  },
  "type": "function"
 },
 "botorch.generation.sampling.BoltzmannSampling.forward": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "botorch.generation.sampling.torch",
    "botorch.utils.sampling.batched_multinomial",
    "botorch.utils.transforms.standardize",
    "int",
    "range",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.generation.sampling.IIDNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.IIDNormalSampler"
  },
  "type": "import"
 },
 "botorch.generation.sampling.IdentityMCObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.IdentityMCObjective"
  },
  "type": "import"
 },
 "botorch.generation.sampling.MaxPosteriorSampling": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "botorch.generation.sampling.SamplingStrategy"
   ]
  },
  "type": "class"
 },
 "botorch.generation.sampling.MaxPosteriorSampling.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "bool",
    "botorch.acquisition.objective.AcquisitionObjective",
    "botorch.acquisition.objective.IdentityMCObjective",
    "botorch.models.model.Model",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.generation.sampling.MaxPosteriorSampling.forward": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "botorch.acquisition.objective.ScalarizedObjective",
    "botorch.generation.sampling.torch",
    "botorch.generation.utils._flip_sub_unique",
    "botorch.sampling.samplers.IIDNormalSampler",
    "int",
    "isinstance",
    "range",
    "sampler",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.generation.sampling.Model": {
  "data": {
   "shadows": "botorch.models.model.Model"
  },
  "type": "import"
 },
 "botorch.generation.sampling.Module": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "botorch.generation.sampling.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.generation.sampling.SamplingStrategy": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "abc.ABC",
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "botorch.generation.sampling.SamplingStrategy.forward": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "int",
    "torch.Tensor",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "botorch.generation.sampling.ScalarizedObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.ScalarizedObjective"
  },
  "type": "import"
 },
 "botorch.generation.sampling.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.generation.sampling._flip_sub_unique": {
  "data": {
   "shadows": "botorch.generation.utils._flip_sub_unique"
  },
  "type": "import"
 },
 "botorch.generation.sampling.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "botorch.generation.sampling.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.generation.sampling.batched_multinomial": {
  "data": {
   "shadows": "botorch.utils.sampling.batched_multinomial"
  },
  "type": "import"
 },
 "botorch.generation.sampling.standardize": {
  "data": {
   "shadows": "botorch.utils.transforms.standardize"
  },
  "type": "import"
 },
 "botorch.generation.sampling.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.generation.utils": {
  "data": {},
  "type": "module"
 },
 "botorch.generation.utils.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.generation.utils._flip_sub_unique": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "botorch.generation.utils.torch",
    "enumerate",
    "int",
    "len",
    "set",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.generation.utils.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.generation.utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.generation.utils.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "botorch.get_best_candidates": {
  "data": {
   "shadows": "botorch.generation.gen.get_best_candidates"
  },
  "type": "import"
 },
 "botorch.logging": {
  "data": {
   "symbols_in_volume": [
    "botorch.logging._get_logger",
    "botorch.logging.logging"
   ]
  },
  "type": "module"
 },
 "botorch.logging.LOG_LEVEL_DEFAULT": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "botorch.logging._get_logger": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "botorch.logging.LOG_LEVEL_DEFAULT",
    "botorch.logging.logging",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "botorch.logging.logger": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "botorch.logging.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "botorch.manual_seed": {
  "data": {
   "shadows": "botorch.utils.manual_seed"
  },
  "type": "import"
 },
 "botorch.models": {
  "data": {},
  "type": "module"
 },
 "botorch.models.AffineDeterministicModel": {
  "data": {
   "shadows": "botorch.models.deterministic.AffineDeterministicModel"
  },
  "type": "import"
 },
 "botorch.models.AffineFidelityCostModel": {
  "data": {
   "shadows": "botorch.models.cost.AffineFidelityCostModel"
  },
  "type": "import"
 },
 "botorch.models.FixedNoiseGP": {
  "data": {
   "shadows": "botorch.models.gp_regression.FixedNoiseGP"
  },
  "type": "import"
 },
 "botorch.models.FixedNoiseMultiTaskGP": {
  "data": {
   "shadows": "botorch.models.multitask.FixedNoiseMultiTaskGP"
  },
  "type": "import"
 },
 "botorch.models.GenericDeterministicModel": {
  "data": {
   "shadows": "botorch.models.deterministic.GenericDeterministicModel"
  },
  "type": "import"
 },
 "botorch.models.HeteroskedasticSingleTaskGP": {
  "data": {
   "shadows": "botorch.models.gp_regression.HeteroskedasticSingleTaskGP"
  },
  "type": "import"
 },
 "botorch.models.ModelListGP": {
  "data": {
   "shadows": "botorch.models.model_list_gp_regression.ModelListGP"
  },
  "type": "import"
 },
 "botorch.models.MultiTaskGP": {
  "data": {
   "shadows": "botorch.models.multitask.MultiTaskGP"
  },
  "type": "import"
 },
 "botorch.models.PairwiseGP": {
  "data": {
   "shadows": "botorch.models.pairwise_gp.PairwiseGP"
  },
  "type": "import"
 },
 "botorch.models.PairwiseLaplaceMarginalLogLikelihood": {
  "data": {
   "shadows": "botorch.models.pairwise_gp.PairwiseLaplaceMarginalLogLikelihood"
  },
  "type": "import"
 },
 "botorch.models.SingleTaskGP": {
  "data": {
   "shadows": "botorch.models.gp_regression.SingleTaskGP"
  },
  "type": "import"
 },
 "botorch.models.SingleTaskMultiFidelityGP": {
  "data": {
   "shadows": "botorch.models.gp_regression_fidelity.SingleTaskMultiFidelityGP"
  },
  "type": "import"
 },
 "botorch.models.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "botorch.models.contextual": {
  "data": {},
  "type": "module"
 },
 "botorch.models.contextual.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "botorch.models.contextual.FixedNoiseGP": {
  "data": {
   "shadows": "botorch.models.gp_regression.FixedNoiseGP"
  },
  "type": "import"
 },
 "botorch.models.contextual.LCEAGP": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "botorch.models.gp_regression.FixedNoiseGP"
   ]
  },
  "type": "class"
 },
 "botorch.models.contextual.LCEAGP.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "bool",
    "botorch.models.kernels.contextual_lcea.LCEAKernel",
    "int",
    "str",
    "super",
    "torch.Tensor",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.models.contextual.LCEAKernel": {
  "data": {
   "shadows": "botorch.models.kernels.contextual_lcea.LCEAKernel"
  },
  "type": "import"
 },
 "botorch.models.contextual.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.models.contextual.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.models.contextual.SACGP": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "botorch.models.gp_regression.FixedNoiseGP"
   ]
  },
  "type": "class"
 },
 "botorch.models.contextual.SACGP.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "botorch.models.kernels.contextual_sac.SACKernel",
    "int",
    "str",
    "super",
    "torch.Tensor",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "botorch.models.contextual.SACKernel": {
  "data": {
   "shadows": "botorch.models.kernels.contextual_sac.SACKernel"
  },
  "type": "import"
 },
 "botorch.models.contextual.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.models.contextual_multioutput": {
  "data": {},
  "type": "module"
 },
 "botorch.models.contextual_multioutput.FixedNoiseGaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.gaussian_likelihood.FixedNoiseGaussianLikelihood"
  },
  "type": "import"
 },
 "botorch.models.contextual_multioutput.FixedNoiseLCEMGP": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "botorch.models.contextual_multioutput.LCEMGP"
   ]
  },
  "type": "class"
 },
 "botorch.models.contextual_multioutput.FixedNoiseLCEMGP.__init__": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "gpytorch.likelihoods.gaussian_likelihood.FixedNoiseGaussianLikelihood",
    "int",
    "super",
    "torch.Tensor",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.models.contextual_multioutput.InterpolatedLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.InterpolatedLazyTensor"
  },
  "type": "import"
 },
 "botorch.models.contextual_multioutput.LCEMGP": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "botorch.models.multitask.MultiTaskGP"
   ]
  },
  "type": "class"
 },
 "botorch.models.contextual_multioutput.LCEMGP.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "botorch.models.contextual_multioutput.torch",
    "gpytorch.kernels.rbf_kernel.RBFKernel",
    "gpytorch.priors.torch_priors.UniformPrior",
    "int",
    "len",
    "range",
    "sum",
    "super",
    "torch.Tensor",
    "torch.nn.ModuleList",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.models.contextual_multioutput.LCEMGP._eval_context_covar": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "gpytorch.lazy.LazyTensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.contextual_multioutput.LCEMGP._task_embeddings": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "botorch.models.contextual_multioutput.torch",
    "emb_layer",
    "enumerate",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.contextual_multioutput.LCEMGP.forward": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "gpytorch.distributions.multivariate_normal.MultivariateNormal",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.contextual_multioutput.LCEMGP.task_covar_matrix": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "gpytorch.lazy.InterpolatedLazyTensor",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.contextual_multioutput.LazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.LazyTensor"
  },
  "type": "import"
 },
 "botorch.models.contextual_multioutput.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.models.contextual_multioutput.ModuleList": {
  "data": {
   "shadows": "torch.nn.ModuleList"
  },
  "type": "import"
 },
 "botorch.models.contextual_multioutput.MultiTaskGP": {
  "data": {
   "shadows": "botorch.models.multitask.MultiTaskGP"
  },
  "type": "import"
 },
 "botorch.models.contextual_multioutput.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.multivariate_normal.MultivariateNormal"
  },
  "type": "import"
 },
 "botorch.models.contextual_multioutput.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.models.contextual_multioutput.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.rbf_kernel.RBFKernel"
  },
  "type": "import"
 },
 "botorch.models.contextual_multioutput.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.models.contextual_multioutput.UniformPrior": {
  "data": {
   "shadows": "gpytorch.priors.torch_priors.UniformPrior"
  },
  "type": "import"
 },
 "botorch.models.contextual_multioutput.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.models.cost": {
  "data": {},
  "type": "module"
 },
 "botorch.models.cost.AffineFidelityCostModel": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "botorch.models.deterministic.DeterministicModel"
   ]
  },
  "type": "class"
 },
 "botorch.models.cost.AffineFidelityCostModel.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "botorch.models.cost.torch",
    "float",
    "int",
    "sorted",
    "super",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.models.cost.AffineFidelityCostModel.forward": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "botorch.models.cost.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.cost.DeterministicModel": {
  "data": {
   "shadows": "botorch.models.deterministic.DeterministicModel"
  },
  "type": "import"
 },
 "botorch.models.cost.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "botorch.models.cost.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.models.cost.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.models.cost.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.models.cost.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.models.deterministic": {
  "data": {},
  "type": "module"
 },
 "botorch.models.deterministic.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "botorch.models.deterministic.AffineDeterministicModel": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "botorch.models.deterministic.DeterministicModel"
   ]
  },
  "type": "class"
 },
 "botorch.models.deterministic.AffineDeterministicModel.__init__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ValueError",
    "botorch.models.deterministic.torch",
    "float",
    "super",
    "torch.Tensor",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.models.deterministic.AffineDeterministicModel.forward": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "botorch.models.deterministic.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.deterministic.AffineDeterministicModel.subset_output": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "botorch.models.deterministic.AffineDeterministicModel",
    "int",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "botorch.models.deterministic.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "botorch.models.deterministic.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "botorch.models.deterministic.DeterministicModel": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "abc.ABC",
    "botorch.models.model.Model"
   ]
  },
  "type": "class"
 },
 "botorch.models.deterministic.DeterministicModel.forward": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.deterministic.DeterministicModel.num_outputs": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "botorch.models.deterministic.DeterministicModel.posterior": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "botorch.exceptions.errors.UnsupportedError",
    "botorch.posteriors.deterministic.DeterministicPosterior",
    "int",
    "torch.Tensor",
    "typing.Any",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.models.deterministic.DeterministicPosterior": {
  "data": {
   "shadows": "botorch.posteriors.deterministic.DeterministicPosterior"
  },
  "type": "import"
 },
 "botorch.models.deterministic.GenericDeterministicModel": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "botorch.models.deterministic.DeterministicModel"
   ]
  },
  "type": "class"
 },
 "botorch.models.deterministic.GenericDeterministicModel.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "int",
    "super",
    "torch.Tensor",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "botorch.models.deterministic.GenericDeterministicModel.forward": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.deterministic.GenericDeterministicModel.subset_output": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "botorch.models.deterministic.GenericDeterministicModel",
    "int",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "botorch.models.deterministic.GenericDeterministicModel.subset_output.f_subset": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.deterministic.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.models.deterministic.Model": {
  "data": {
   "shadows": "botorch.models.model.Model"
  },
  "type": "import"
 },
 "botorch.models.deterministic.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.models.deterministic.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.models.deterministic.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "botorch.models.deterministic.UnsupportedError": {
  "data": {
   "shadows": "botorch.exceptions.errors.UnsupportedError"
  },
  "type": "import"
 },
 "botorch.models.deterministic.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "botorch.models.deterministic.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.models.deterministic.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.models.gp_regression": {
  "data": {},
  "type": "module"
 },
 "botorch.models.gp_regression.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "botorch.models.gp_regression.BatchedMultiOutputGPyTorchModel": {
  "data": {
   "shadows": "botorch.models.gpytorch.BatchedMultiOutputGPyTorchModel"
  },
  "type": "import"
 },
 "botorch.models.gp_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.constant_mean.ConstantMean"
  },
  "type": "import"
 },
 "botorch.models.gp_regression.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "botorch.models.gp_regression.ExactGP": {
  "data": {
   "shadows": "gpytorch.models.exact_gp.ExactGP"
  },
  "type": "import"
 },
 "botorch.models.gp_regression.FixedNoiseGP": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "botorch.models.gpytorch.BatchedMultiOutputGPyTorchModel",
    "gpytorch.models.exact_gp.ExactGP"
   ]
  },
  "type": "class"
 },
 "botorch.models.gp_regression.FixedNoiseGP.__init__": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "botorch.models.gp_regression.torch",
    "botorch.models.transforms.input.InputTransform",
    "botorch.models.transforms.outcome.OutcomeTransform",
    "botorch.models.utils.validate_input_scaling",
    "gpytorch.kernels.matern_kernel.MaternKernel",
    "gpytorch.kernels.scale_kernel.ScaleKernel",
    "gpytorch.likelihoods.gaussian_likelihood.FixedNoiseGaussianLikelihood",
    "gpytorch.means.constant_mean.ConstantMean",
    "gpytorch.models.exact_gp.ExactGP.__init__",
    "gpytorch.module.Module",
    "gpytorch.priors.torch_priors.GammaPrior",
    "outcome_transform",
    "torch.Tensor",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.models.gp_regression.FixedNoiseGP.construct_inputs": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "ValueError",
    "botorch.utils.containers.TrainingData",
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "botorch.models.gp_regression.FixedNoiseGP.fantasize": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "bool",
    "botorch.models.gp_regression.FixedNoiseGP",
    "botorch.sampling.samplers.MCSampler",
    "botorch.settings.propagate_grads",
    "sampler",
    "torch.Tensor",
    "typing.Any",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.models.gp_regression.FixedNoiseGP.forward": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "gpytorch.distributions.multivariate_normal.MultivariateNormal",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.gp_regression.FixedNoiseGP.subset_output": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "botorch.models.gpytorch.BatchedMultiOutputGPyTorchModel",
    "int",
    "len",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "botorch.models.gp_regression.FixedNoiseGaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.gaussian_likelihood.FixedNoiseGaussianLikelihood"
  },
  "type": "import"
 },
 "botorch.models.gp_regression.GammaPrior": {
  "data": {
   "shadows": "gpytorch.priors.torch_priors.GammaPrior"
  },
  "type": "import"
 },
 "botorch.models.gp_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"
  },
  "type": "import"
 },
 "botorch.models.gp_regression.GreaterThan": {
  "data": {
   "shadows": "gpytorch.constraints.constraints.GreaterThan"
  },
  "type": "import"
 },
 "botorch.models.gp_regression.HeteroskedasticNoise": {
  "data": {
   "shadows": "gpytorch.likelihoods.noise_models.HeteroskedasticNoise"
  },
  "type": "import"
 },
 "botorch.models.gp_regression.HeteroskedasticSingleTaskGP": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "botorch.models.gp_regression.SingleTaskGP"
   ]
  },
  "type": "class"
 },
 "botorch.models.gp_regression.HeteroskedasticSingleTaskGP.__init__": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "botorch.models.gp_regression.MIN_INFERRED_NOISE_LEVEL",
    "botorch.models.gp_regression.SingleTaskGP",
    "botorch.models.gp_regression.torch",
    "botorch.models.transforms.input.InputTransform",
    "botorch.models.transforms.outcome.Log",
    "botorch.models.transforms.outcome.OutcomeTransform",
    "botorch.models.utils.validate_input_scaling",
    "gpytorch.constraints.constraints.GreaterThan",
    "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood",
    "gpytorch.likelihoods.gaussian_likelihood._GaussianLikelihoodBase",
    "gpytorch.likelihoods.noise_models.HeteroskedasticNoise",
    "gpytorch.mlls.noise_model_added_loss_term.NoiseModelAddedLossTerm",
    "gpytorch.priors.smoothed_box_prior.SmoothedBoxPrior",
    "outcome_transform",
    "super",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.models.gp_regression.HeteroskedasticSingleTaskGP.condition_on_observations": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.models.gp_regression.HeteroskedasticSingleTaskGP",
    "torch.Tensor",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "botorch.models.gp_regression.HeteroskedasticSingleTaskGP.subset_output": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.models.gp_regression.HeteroskedasticSingleTaskGP",
    "int",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "botorch.models.gp_regression.InputTransform": {
  "data": {
   "shadows": "botorch.models.transforms.input.InputTransform"
  },
  "type": "import"
 },
 "botorch.models.gp_regression.Likelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.likelihood.Likelihood"
  },
  "type": "import"
 },
 "botorch.models.gp_regression.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.models.gp_regression.Log": {
  "data": {
   "shadows": "botorch.models.transforms.outcome.Log"
  },
  "type": "import"
 },
 "botorch.models.gp_regression.MCSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.MCSampler"
  },
  "type": "import"
 },
 "botorch.models.gp_regression.MIN_INFERRED_NOISE_LEVEL": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "botorch.models.gp_regression.MaternKernel": {
  "data": {
   "shadows": "gpytorch.kernels.matern_kernel.MaternKernel"
  },
  "type": "import"
 },
 "botorch.models.gp_regression.Module": {
  "data": {
   "shadows": "gpytorch.module.Module"
  },
  "type": "import"
 },
 "botorch.models.gp_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.multivariate_normal.MultivariateNormal"
  },
  "type": "import"
 },
 "botorch.models.gp_regression.NoiseModelAddedLossTerm": {
  "data": {
   "shadows": "gpytorch.mlls.noise_model_added_loss_term.NoiseModelAddedLossTerm"
  },
  "type": "import"
 },
 "botorch.models.gp_regression.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.models.gp_regression.OutcomeTransform": {
  "data": {
   "shadows": "botorch.models.transforms.outcome.OutcomeTransform"
  },
  "type": "import"
 },
 "botorch.models.gp_regression.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.scale_kernel.ScaleKernel"
  },
  "type": "import"
 },
 "botorch.models.gp_regression.SingleTaskGP": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "botorch.models.gpytorch.BatchedMultiOutputGPyTorchModel",
    "gpytorch.models.exact_gp.ExactGP"
   ]
  },
  "type": "class"
 },
 "botorch.models.gp_regression.SingleTaskGP.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "botorch.models.gp_regression.MIN_INFERRED_NOISE_LEVEL",
    "botorch.models.gp_regression.torch",
    "botorch.models.transforms.input.InputTransform",
    "botorch.models.transforms.outcome.OutcomeTransform",
    "botorch.models.utils.validate_input_scaling",
    "gpytorch.constraints.constraints.GreaterThan",
    "gpytorch.kernels.matern_kernel.MaternKernel",
    "gpytorch.kernels.scale_kernel.ScaleKernel",
    "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood",
    "gpytorch.likelihoods.likelihood.Likelihood",
    "gpytorch.means.constant_mean.ConstantMean",
    "gpytorch.models.exact_gp.ExactGP.__init__",
    "gpytorch.module.Module",
    "gpytorch.priors.torch_priors.GammaPrior",
    "outcome_transform",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.models.gp_regression.SingleTaskGP.construct_inputs": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "botorch.utils.containers.TrainingData",
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "botorch.models.gp_regression.SingleTaskGP.forward": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "gpytorch.distributions.multivariate_normal.MultivariateNormal",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.gp_regression.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.smoothed_box_prior.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "botorch.models.gp_regression.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.models.gp_regression.TrainingData": {
  "data": {
   "shadows": "botorch.utils.containers.TrainingData"
  },
  "type": "import"
 },
 "botorch.models.gp_regression.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "botorch.models.gp_regression._GaussianLikelihoodBase": {
  "data": {
   "shadows": "gpytorch.likelihoods.gaussian_likelihood._GaussianLikelihoodBase"
  },
  "type": "import"
 },
 "botorch.models.gp_regression.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.models.gp_regression.settings": {
  "data": {
   "shadows": "botorch.settings"
  },
  "type": "import"
 },
 "botorch.models.gp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.models.gp_regression.validate_input_scaling": {
  "data": {
   "shadows": "botorch.models.utils.validate_input_scaling"
  },
  "type": "import"
 },
 "botorch.models.gpytorch": {
  "data": {},
  "type": "module"
 },
 "botorch.models.gpytorch.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "botorch.models.gpytorch.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "botorch.models.gpytorch.BatchedMultiOutputGPyTorchModel": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "botorch.models.gpytorch.GPyTorchModel",
    "botorch.models.gpytorch.torch",
    "int"
   ]
  },
  "type": "class"
 },
 "botorch.models.gpytorch.BatchedMultiOutputGPyTorchModel._set_dimensions": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "self._aug_batch_shape",
    "self._input_batch_shape",
    "self._num_outputs",
    "self.get_batch_dimensions",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.gpytorch.BatchedMultiOutputGPyTorchModel._transform_tensor_args": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "botorch.models.utils.multioutput_to_batch_mode_transform",
    "self._num_outputs",
    "torch.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "botorch.models.gpytorch.BatchedMultiOutputGPyTorchModel.batch_shape": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "botorch.models.gpytorch.torch",
    "property",
    "self._input_batch_shape"
   ]
  },
  "type": "function"
 },
 "botorch.models.gpytorch.BatchedMultiOutputGPyTorchModel.condition_on_observations": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "botorch.models.gpytorch.BatchedMultiOutputGPyTorchModel",
    "botorch.models.utils.multioutput_to_batch_mode_transform",
    "hasattr",
    "self",
    "self._num_outputs",
    "self._validate_tensor_args",
    "self.outcome_transform",
    "super",
    "torch.Tensor",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "botorch.models.gpytorch.BatchedMultiOutputGPyTorchModel.get_batch_dimensions": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "botorch.models.gpytorch.torch",
    "staticmethod",
    "torch.Tensor",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "botorch.models.gpytorch.BatchedMultiOutputGPyTorchModel.posterior": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "bool",
    "botorch.models.gpytorch.torch",
    "botorch.models.utils.add_output_dim",
    "botorch.models.utils.gpt_posterior_settings",
    "botorch.posteriors.gpytorch.GPyTorchPosterior",
    "gpytorch.distributions.MultitaskMultivariateNormal.from_independent_mvns",
    "gpytorch.distributions.MultivariateNormal",
    "gpytorch.lazy.lazify",
    "gpytorch.likelihoods.gaussian_likelihood.FixedNoiseGaussianLikelihood",
    "hasattr",
    "int",
    "isinstance",
    "range",
    "self",
    "self._input_batch_shape",
    "self._num_outputs",
    "self.eval",
    "self.likelihood",
    "self.likelihood.noise.mean",
    "self.outcome_transform.untransform_posterior",
    "torch.Tensor",
    "typing.Any",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.models.gpytorch.BatchedMultiOutputGPyTorchModel.subset_output": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "AttributeError",
    "NotImplementedError",
    "botorch.models.gpytorch.BatchedMultiOutputGPyTorchModel",
    "botorch.models.gpytorch.itertools",
    "botorch.models.gpytorch.torch",
    "botorch.models.utils.mod_batch_shape",
    "copy.deepcopy",
    "int",
    "len",
    "self",
    "self._subset_batch_dict",
    "tuple",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "botorch.models.gpytorch.BotorchTensorDimensionError": {
  "data": {
   "shadows": "botorch.exceptions.errors.BotorchTensorDimensionError"
  },
  "type": "import"
 },
 "botorch.models.gpytorch.BotorchTensorDimensionWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.BotorchTensorDimensionWarning"
  },
  "type": "import"
 },
 "botorch.models.gpytorch.FixedNoiseGaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.gaussian_likelihood.FixedNoiseGaussianLikelihood"
  },
  "type": "import"
 },
 "botorch.models.gpytorch.GPyTorchModel": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "abc.ABC",
    "botorch.models.model.Model"
   ]
  },
  "type": "class"
 },
 "botorch.models.gpytorch.GPyTorchModel._validate_tensor_args": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "bool",
    "botorch.exceptions.errors.BotorchTensorDimensionError",
    "botorch.exceptions.warnings.BotorchTensorDimensionWarning",
    "botorch.models.gpytorch.warnings",
    "staticmethod",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.models.gpytorch.GPyTorchModel.batch_shape": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "botorch.models.gpytorch.torch",
    "property"
   ]
  },
  "type": "function"
 },
 "botorch.models.gpytorch.GPyTorchModel.condition_on_observations": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "botorch.models.model.Model",
    "hasattr",
    "isinstance",
    "self",
    "self._validate_tensor_args",
    "self.get_fantasy_model",
    "self.outcome_transform",
    "torch.Tensor",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "botorch.models.gpytorch.GPyTorchModel.num_outputs": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "botorch.models.gpytorch.GPyTorchModel.posterior": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "bool",
    "botorch.models.gpytorch.torch",
    "botorch.models.utils.gpt_posterior_settings",
    "botorch.posteriors.gpytorch.GPyTorchPosterior",
    "hasattr",
    "self",
    "self._validate_tensor_args",
    "self.likelihood",
    "self.outcome_transform.untransform_posterior",
    "torch.Tensor",
    "typing.Any",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.models.gpytorch.GPyTorchPosterior": {
  "data": {
   "shadows": "botorch.posteriors.gpytorch.GPyTorchPosterior"
  },
  "type": "import"
 },
 "botorch.models.gpytorch.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "botorch.models.gpytorch.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.models.gpytorch.Model": {
  "data": {
   "shadows": "botorch.models.model.Model"
  },
  "type": "import"
 },
 "botorch.models.gpytorch.ModelListGPyTorchModel": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "abc.ABC",
    "botorch.models.gpytorch.GPyTorchModel"
   ]
  },
  "type": "class"
 },
 "botorch.models.gpytorch.ModelListGPyTorchModel.batch_shape": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.models.gpytorch.torch",
    "property"
   ]
  },
  "type": "function"
 },
 "botorch.models.gpytorch.ModelListGPyTorchModel.condition_on_observations": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.models.gpytorch.ModelListGPyTorchModel",
    "self.__class__.__name__",
    "torch.Tensor",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "botorch.models.gpytorch.ModelListGPyTorchModel.posterior": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "AttributeError",
    "bool",
    "botorch.models.gpytorch.torch",
    "botorch.models.utils.gpt_posterior_settings",
    "botorch.posteriors.gpytorch.GPyTorchPosterior",
    "enumerate",
    "gpytorch.distributions.MultitaskMultivariateNormal.from_independent_mvns",
    "gpytorch.likelihoods.gaussian_likelihood.FixedNoiseGaussianLikelihood",
    "int",
    "isinstance",
    "len",
    "oct",
    "oct.untransform_posterior",
    "range",
    "self",
    "self.eval",
    "self.forward_i",
    "self.likelihood",
    "self.likelihood.likelihoods",
    "self.likelihood_i",
    "self.models.outcome_transform",
    "self.num_outputs",
    "torch.Tensor",
    "typing.Any",
    "typing.Iterator",
    "typing.List",
    "typing.Optional",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "botorch.models.gpytorch.MultiTaskGPyTorchModel": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "abc.ABC",
    "botorch.models.gpytorch.GPyTorchModel"
   ]
  },
  "type": "class"
 },
 "botorch.models.gpytorch.MultiTaskGPyTorchModel.posterior": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "any",
    "bool",
    "botorch.models.utils._make_X_full",
    "botorch.models.utils.gpt_posterior_settings",
    "botorch.posteriors.gpytorch.GPyTorchPosterior",
    "gpytorch.distributions.MultitaskMultivariateNormal",
    "hasattr",
    "int",
    "len",
    "self",
    "self.__class__.__name__",
    "self._output_tasks",
    "self._task_feature",
    "self.eval",
    "torch.Tensor",
    "typing.Any",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.models.gpytorch.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "botorch.models.gpytorch.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "botorch.models.gpytorch.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.models.gpytorch.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.models.gpytorch.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "botorch.models.gpytorch.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "botorch.models.gpytorch._make_X_full": {
  "data": {
   "shadows": "botorch.models.utils._make_X_full"
  },
  "type": "import"
 },
 "botorch.models.gpytorch.add_output_dim": {
  "data": {
   "shadows": "botorch.models.utils.add_output_dim"
  },
  "type": "import"
 },
 "botorch.models.gpytorch.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.models.gpytorch.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "botorch.models.gpytorch.gpt_posterior_settings": {
  "data": {
   "shadows": "botorch.models.utils.gpt_posterior_settings"
  },
  "type": "import"
 },
 "botorch.models.gpytorch.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "botorch.models.gpytorch.lazify": {
  "data": {
   "shadows": "gpytorch.lazy.lazify"
  },
  "type": "import"
 },
 "botorch.models.gpytorch.mod_batch_shape": {
  "data": {
   "shadows": "botorch.models.utils.mod_batch_shape"
  },
  "type": "import"
 },
 "botorch.models.gpytorch.multioutput_to_batch_mode_transform": {
  "data": {
   "shadows": "botorch.models.utils.multioutput_to_batch_mode_transform"
  },
  "type": "import"
 },
 "botorch.models.gpytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.models.gpytorch.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "botorch.models.kernels": {
  "data": {},
  "type": "module"
 },
 "botorch.models.kernels.DownsamplingKernel": {
  "data": {
   "shadows": "botorch.models.kernels.downsampling.DownsamplingKernel"
  },
  "type": "import"
 },
 "botorch.models.kernels.ExponentialDecayKernel": {
  "data": {
   "shadows": "botorch.models.kernels.exponential_decay.ExponentialDecayKernel"
  },
  "type": "import"
 },
 "botorch.models.kernels.LinearTruncatedFidelityKernel": {
  "data": {
   "shadows": "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel"
  },
  "type": "import"
 },
 "botorch.models.kernels.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "botorch.models.kernels.contextual_lcea": {
  "data": {},
  "type": "module"
 },
 "botorch.models.kernels.contextual_lcea.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "botorch.models.kernels.contextual_lcea.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "botorch.models.kernels.contextual_lcea.GammaPrior": {
  "data": {
   "shadows": "gpytorch.priors.torch_priors.GammaPrior"
  },
  "type": "import"
 },
 "botorch.models.kernels.contextual_lcea.Kernel": {
  "data": {
   "shadows": "gpytorch.kernels.kernel.Kernel"
  },
  "type": "import"
 },
 "botorch.models.kernels.contextual_lcea.LCEAKernel": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "gpytorch.kernels.kernel.Kernel"
   ]
  },
  "type": "class"
 },
 "botorch.models.kernels.contextual_lcea.LCEAKernel.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "botorch.models.kernels.contextual_lcea.torch",
    "gpytorch.constraints.Positive",
    "gpytorch.kernels.matern_kernel.MaternKernel",
    "gpytorch.priors.torch_priors.GammaPrior",
    "int",
    "iter",
    "len",
    "list",
    "next",
    "str",
    "super",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.models.kernels.contextual_lcea.LCEAKernel._eval_context_covar": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "len",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.kernels.contextual_lcea.LCEAKernel._set_context_features": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "botorch.models.kernels.contextual_lcea.torch",
    "int",
    "len",
    "range",
    "sum",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.models.kernels.contextual_lcea.LCEAKernel._set_emb_layers": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "botorch.models.kernels.contextual_lcea.torch",
    "len",
    "torch.nn.ModuleList"
   ]
  },
  "type": "function"
 },
 "botorch.models.kernels.contextual_lcea.LCEAKernel._set_outputscale_list": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "botorch.models.kernels.contextual_lcea.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.kernels.contextual_lcea.LCEAKernel._task_embeddings": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "botorch.models.kernels.contextual_lcea.torch",
    "emb_layer",
    "enumerate",
    "range",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.kernels.contextual_lcea.LCEAKernel._task_embeddings_batch": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "botorch.models.kernels.contextual_lcea.torch",
    "len",
    "range",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.kernels.contextual_lcea.LCEAKernel.forward": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "bool",
    "botorch.models.kernels.contextual_lcea.torch",
    "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor",
    "range",
    "sum",
    "torch.Tensor",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "botorch.models.kernels.contextual_lcea.LCEAKernel.outputscale_list": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.kernels.contextual_lcea.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.models.kernels.contextual_lcea.MaternKernel": {
  "data": {
   "shadows": "gpytorch.kernels.matern_kernel.MaternKernel"
  },
  "type": "import"
 },
 "botorch.models.kernels.contextual_lcea.ModuleList": {
  "data": {
   "shadows": "torch.nn.ModuleList"
  },
  "type": "import"
 },
 "botorch.models.kernels.contextual_lcea.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.models.kernels.contextual_lcea.Positive": {
  "data": {
   "shadows": "gpytorch.constraints.Positive"
  },
  "type": "import"
 },
 "botorch.models.kernels.contextual_lcea.SumLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor"
  },
  "type": "import"
 },
 "botorch.models.kernels.contextual_lcea.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.models.kernels.contextual_lcea.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.models.kernels.contextual_sac": {
  "data": {},
  "type": "module"
 },
 "botorch.models.kernels.contextual_sac.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "botorch.models.kernels.contextual_sac.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "botorch.models.kernels.contextual_sac.GammaPrior": {
  "data": {
   "shadows": "gpytorch.priors.torch_priors.GammaPrior"
  },
  "type": "import"
 },
 "botorch.models.kernels.contextual_sac.Kernel": {
  "data": {
   "shadows": "gpytorch.kernels.kernel.Kernel"
  },
  "type": "import"
 },
 "botorch.models.kernels.contextual_sac.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.models.kernels.contextual_sac.MaternKernel": {
  "data": {
   "shadows": "gpytorch.kernels.matern_kernel.MaternKernel"
  },
  "type": "import"
 },
 "botorch.models.kernels.contextual_sac.ModuleDict": {
  "data": {
   "shadows": "torch.nn.ModuleDict"
  },
  "type": "import"
 },
 "botorch.models.kernels.contextual_sac.SACKernel": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "gpytorch.kernels.kernel.Kernel"
   ]
  },
  "type": "class"
 },
 "botorch.models.kernels.contextual_sac.SACKernel.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError",
    "botorch.models.kernels.contextual_sac.torch",
    "gpytorch.kernels.matern_kernel.MaternKernel",
    "gpytorch.kernels.scale_kernel.ScaleKernel",
    "gpytorch.priors.torch_priors.GammaPrior",
    "int",
    "iter",
    "len",
    "list",
    "next",
    "str",
    "super",
    "torch.nn.ModuleDict",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "botorch.models.kernels.contextual_sac.SACKernel.forward": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "bool",
    "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor",
    "sum",
    "torch.Tensor",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "botorch.models.kernels.contextual_sac.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.scale_kernel.ScaleKernel"
  },
  "type": "import"
 },
 "botorch.models.kernels.contextual_sac.SumLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor"
  },
  "type": "import"
 },
 "botorch.models.kernels.contextual_sac.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.models.kernels.contextual_sac.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.models.kernels.downsampling": {
  "data": {},
  "type": "module"
 },
 "botorch.models.kernels.downsampling.DownsamplingKernel": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "gpytorch.kernels.Kernel"
   ]
  },
  "type": "class"
 },
 "botorch.models.kernels.downsampling.DownsamplingKernel.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "botorch.models.kernels.downsampling.torch",
    "gpytorch.constraints.Interval",
    "gpytorch.constraints.Positive",
    "gpytorch.priors.Prior",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.models.kernels.downsampling.DownsamplingKernel._set_offset": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "botorch.models.kernels.downsampling.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.kernels.downsampling.DownsamplingKernel._set_power": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "botorch.models.kernels.downsampling.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.kernels.downsampling.DownsamplingKernel.forward": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "bool",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.models.kernels.downsampling.DownsamplingKernel.offset": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.kernels.downsampling.DownsamplingKernel.power": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.kernels.downsampling.Interval": {
  "data": {
   "shadows": "gpytorch.constraints.Interval"
  },
  "type": "import"
 },
 "botorch.models.kernels.downsampling.Kernel": {
  "data": {
   "shadows": "gpytorch.kernels.Kernel"
  },
  "type": "import"
 },
 "botorch.models.kernels.downsampling.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.models.kernels.downsampling.Positive": {
  "data": {
   "shadows": "gpytorch.constraints.Positive"
  },
  "type": "import"
 },
 "botorch.models.kernels.downsampling.Prior": {
  "data": {
   "shadows": "gpytorch.priors.Prior"
  },
  "type": "import"
 },
 "botorch.models.kernels.downsampling.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.models.kernels.downsampling.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.models.kernels.downsampling.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.models.kernels.exponential_decay": {
  "data": {},
  "type": "module"
 },
 "botorch.models.kernels.exponential_decay.ExponentialDecayKernel": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "gpytorch.kernels.Kernel"
   ]
  },
  "type": "class"
 },
 "botorch.models.kernels.exponential_decay.ExponentialDecayKernel.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "botorch.models.kernels.exponential_decay.torch",
    "gpytorch.constraints.Interval",
    "gpytorch.constraints.Positive",
    "gpytorch.priors.Prior",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.models.kernels.exponential_decay.ExponentialDecayKernel._set_offset": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "botorch.models.kernels.exponential_decay.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.kernels.exponential_decay.ExponentialDecayKernel._set_power": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "botorch.models.kernels.exponential_decay.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.kernels.exponential_decay.ExponentialDecayKernel.forward": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.kernels.exponential_decay.ExponentialDecayKernel.offset": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.kernels.exponential_decay.ExponentialDecayKernel.power": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.kernels.exponential_decay.Interval": {
  "data": {
   "shadows": "gpytorch.constraints.Interval"
  },
  "type": "import"
 },
 "botorch.models.kernels.exponential_decay.Kernel": {
  "data": {
   "shadows": "gpytorch.kernels.Kernel"
  },
  "type": "import"
 },
 "botorch.models.kernels.exponential_decay.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.models.kernels.exponential_decay.Positive": {
  "data": {
   "shadows": "gpytorch.constraints.Positive"
  },
  "type": "import"
 },
 "botorch.models.kernels.exponential_decay.Prior": {
  "data": {
   "shadows": "gpytorch.priors.Prior"
  },
  "type": "import"
 },
 "botorch.models.kernels.exponential_decay.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.models.kernels.exponential_decay.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.models.kernels.exponential_decay.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.models.kernels.linear_truncated_fidelity": {
  "data": {},
  "type": "module"
 },
 "botorch.models.kernels.linear_truncated_fidelity.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "botorch.models.kernels.linear_truncated_fidelity.GammaPrior": {
  "data": {
   "shadows": "gpytorch.priors.torch_priors.GammaPrior"
  },
  "type": "import"
 },
 "botorch.models.kernels.linear_truncated_fidelity.Interval": {
  "data": {
   "shadows": "gpytorch.constraints.Interval"
  },
  "type": "import"
 },
 "botorch.models.kernels.linear_truncated_fidelity.Kernel": {
  "data": {
   "shadows": "gpytorch.kernels.Kernel"
  },
  "type": "import"
 },
 "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "gpytorch.kernels.Kernel"
   ]
  },
  "type": "class"
 },
 "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel.__getitem__": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel",
    "botorch.models.kernels.linear_truncated_fidelity.torch",
    "copy.deepcopy",
    "int",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ValueError",
    "botorch.exceptions.UnsupportedError",
    "botorch.models.kernels.linear_truncated_fidelity.torch",
    "float",
    "gpytorch.constraints.Interval",
    "gpytorch.constraints.Positive",
    "gpytorch.kernels.Kernel",
    "gpytorch.kernels.matern_kernel.MaternKernel",
    "gpytorch.priors.Prior",
    "gpytorch.priors.torch_priors.GammaPrior",
    "int",
    "len",
    "set",
    "super",
    "typing.Any",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel._set_power": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "botorch.models.kernels.linear_truncated_fidelity.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel.forward": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "bool",
    "botorch.models.kernels.linear_truncated_fidelity.torch",
    "len",
    "range",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel.power": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.kernels.linear_truncated_fidelity.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.models.kernels.linear_truncated_fidelity.MaternKernel": {
  "data": {
   "shadows": "gpytorch.kernels.matern_kernel.MaternKernel"
  },
  "type": "import"
 },
 "botorch.models.kernels.linear_truncated_fidelity.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.models.kernels.linear_truncated_fidelity.Positive": {
  "data": {
   "shadows": "gpytorch.constraints.Positive"
  },
  "type": "import"
 },
 "botorch.models.kernels.linear_truncated_fidelity.Prior": {
  "data": {
   "shadows": "gpytorch.priors.Prior"
  },
  "type": "import"
 },
 "botorch.models.kernels.linear_truncated_fidelity.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.models.kernels.linear_truncated_fidelity.UnsupportedError": {
  "data": {
   "shadows": "botorch.exceptions.UnsupportedError"
  },
  "type": "import"
 },
 "botorch.models.kernels.linear_truncated_fidelity.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.models.kernels.linear_truncated_fidelity.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "botorch.models.kernels.linear_truncated_fidelity.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.models.model": {
  "data": {},
  "type": "module"
 },
 "botorch.models.model.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "botorch.models.model.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "botorch.models.model.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "botorch.models.model.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.models.model.MCSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.MCSampler"
  },
  "type": "import"
 },
 "botorch.models.model.Model": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "abc.ABC",
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "botorch.models.model.Model.batch_shape": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.models.model.torch",
    "property"
   ]
  },
  "type": "function"
 },
 "botorch.models.model.Model.condition_on_observations": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.models.model.Model",
    "torch.Tensor",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "botorch.models.model.Model.construct_inputs": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.utils.containers.TrainingData",
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "botorch.models.model.Model.fantasize": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "bool",
    "botorch.models.model.Model",
    "botorch.sampling.samplers.MCSampler",
    "botorch.settings.propagate_grads",
    "sampler",
    "torch.Tensor",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "botorch.models.model.Model.num_outputs": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "botorch.models.model.Model.posterior": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "bool",
    "botorch.posteriors.Posterior",
    "int",
    "torch.Tensor",
    "typing.Any",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.models.model.Model.subset_output": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.models.model.Model",
    "int",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "botorch.models.model.Model.transform_inputs": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "AttributeError",
    "input_transform",
    "torch.Tensor",
    "torch.nn.Module",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.models.model.Module": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "botorch.models.model.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.models.model.Posterior": {
  "data": {
   "shadows": "botorch.posteriors.Posterior"
  },
  "type": "import"
 },
 "botorch.models.model.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.models.model.TrainingData": {
  "data": {
   "shadows": "botorch.utils.containers.TrainingData"
  },
  "type": "import"
 },
 "botorch.models.model.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "botorch.models.model.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.models.model.settings": {
  "data": {
   "shadows": "botorch.settings"
  },
  "type": "import"
 },
 "botorch.models.model.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.models.model_list_gp_regression": {
  "data": {},
  "type": "module"
 },
 "botorch.models.model_list_gp_regression.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "botorch.models.model_list_gp_regression.BotorchTensorDimensionError": {
  "data": {
   "shadows": "botorch.exceptions.errors.BotorchTensorDimensionError"
  },
  "type": "import"
 },
 "botorch.models.model_list_gp_regression.GPyTorchModel": {
  "data": {
   "shadows": "botorch.models.gpytorch.GPyTorchModel"
  },
  "type": "import"
 },
 "botorch.models.model_list_gp_regression.IndependentModelList": {
  "data": {
   "shadows": "gpytorch.models.IndependentModelList"
  },
  "type": "import"
 },
 "botorch.models.model_list_gp_regression.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.models.model_list_gp_regression.ModelListGP": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "botorch.models.gpytorch.ModelListGPyTorchModel",
    "gpytorch.models.IndependentModelList"
   ]
  },
  "type": "class"
 },
 "botorch.models.model_list_gp_regression.ModelListGP.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "botorch.models.gpytorch.GPyTorchModel",
    "super"
   ]
  },
  "type": "function"
 },
 "botorch.models.model_list_gp_regression.ModelListGP.condition_on_observations": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "botorch.exceptions.errors.BotorchTensorDimensionError",
    "botorch.models.model_list_gp_regression.ModelListGP",
    "range",
    "super",
    "torch.Tensor",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "botorch.models.model_list_gp_regression.ModelListGP.subset_output": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "botorch.models.model_list_gp_regression.ModelListGP",
    "copy.deepcopy",
    "int",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "botorch.models.model_list_gp_regression.ModelListGPyTorchModel": {
  "data": {
   "shadows": "botorch.models.gpytorch.ModelListGPyTorchModel"
  },
  "type": "import"
 },
 "botorch.models.model_list_gp_regression.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.models.model_list_gp_regression.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.models.model_list_gp_regression.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "botorch.models.multitask": {
  "data": {},
  "type": "module"
 },
 "botorch.models.multitask.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "botorch.models.multitask.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.constant_mean.ConstantMean"
  },
  "type": "import"
 },
 "botorch.models.multitask.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "botorch.models.multitask.ExactGP": {
  "data": {
   "shadows": "gpytorch.models.exact_gp.ExactGP"
  },
  "type": "import"
 },
 "botorch.models.multitask.FixedNoiseGaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.gaussian_likelihood.FixedNoiseGaussianLikelihood"
  },
  "type": "import"
 },
 "botorch.models.multitask.FixedNoiseMultiTaskGP": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "botorch.models.multitask.MultiTaskGP"
   ]
  },
  "type": "class"
 },
 "botorch.models.multitask.FixedNoiseMultiTaskGP.__init__": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "botorch.models.multitask.torch",
    "botorch.models.transforms.input.InputTransform",
    "gpytorch.likelihoods.gaussian_likelihood.FixedNoiseGaussianLikelihood",
    "gpytorch.priors.prior.Prior",
    "int",
    "super",
    "torch.Tensor",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.models.multitask.FixedNoiseMultiTaskGP.construct_inputs": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "ValueError",
    "botorch.utils.containers.TrainingData",
    "classmethod",
    "str",
    "super",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "botorch.models.multitask.GammaPrior": {
  "data": {
   "shadows": "gpytorch.priors.torch_priors.GammaPrior"
  },
  "type": "import"
 },
 "botorch.models.multitask.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"
  },
  "type": "import"
 },
 "botorch.models.multitask.IndexKernel": {
  "data": {
   "shadows": "gpytorch.kernels.index_kernel.IndexKernel"
  },
  "type": "import"
 },
 "botorch.models.multitask.InputTransform": {
  "data": {
   "shadows": "botorch.models.transforms.input.InputTransform"
  },
  "type": "import"
 },
 "botorch.models.multitask.LKJCovariancePrior": {
  "data": {
   "shadows": "gpytorch.priors.lkj_prior.LKJCovariancePrior"
  },
  "type": "import"
 },
 "botorch.models.multitask.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.models.multitask.MaternKernel": {
  "data": {
   "shadows": "gpytorch.kernels.matern_kernel.MaternKernel"
  },
  "type": "import"
 },
 "botorch.models.multitask.MultiTaskGP": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "botorch.models.gpytorch.MultiTaskGPyTorchModel",
    "gpytorch.models.exact_gp.ExactGP"
   ]
  },
  "type": "class"
 },
 "botorch.models.multitask.MultiTaskGP.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.models.multitask.torch",
    "botorch.models.transforms.input.InputTransform",
    "gpytorch.kernels.index_kernel.IndexKernel",
    "gpytorch.kernels.matern_kernel.MaternKernel",
    "gpytorch.kernels.scale_kernel.ScaleKernel",
    "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood",
    "gpytorch.means.constant_mean.ConstantMean",
    "gpytorch.priors.prior.Prior",
    "gpytorch.priors.torch_priors.GammaPrior",
    "int",
    "len",
    "set",
    "super",
    "torch.Tensor",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.models.multitask.MultiTaskGP._split_inputs": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "botorch.models.multitask.torch",
    "torch.Tensor",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "botorch.models.multitask.MultiTaskGP.construct_inputs": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "ValueError",
    "botorch.models.multitask.MultiTaskGP",
    "botorch.models.multitask.torch",
    "botorch.utils.containers.TrainingData",
    "classmethod",
    "float",
    "gpytorch.priors.lkj_prior.LKJCovariancePrior",
    "gpytorch.priors.torch_priors.GammaPrior",
    "int",
    "isinstance",
    "len",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "botorch.models.multitask.MultiTaskGP.forward": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "gpytorch.distributions.multivariate_normal.MultivariateNormal",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.multitask.MultiTaskGP.get_all_tasks": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "ValueError",
    "botorch.models.multitask.torch",
    "classmethod",
    "int",
    "torch.Tensor",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "botorch.models.multitask.MultiTaskGPyTorchModel": {
  "data": {
   "shadows": "botorch.models.gpytorch.MultiTaskGPyTorchModel"
  },
  "type": "import"
 },
 "botorch.models.multitask.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.multivariate_normal.MultivariateNormal"
  },
  "type": "import"
 },
 "botorch.models.multitask.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.models.multitask.Prior": {
  "data": {
   "shadows": "gpytorch.priors.prior.Prior"
  },
  "type": "import"
 },
 "botorch.models.multitask.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.scale_kernel.ScaleKernel"
  },
  "type": "import"
 },
 "botorch.models.multitask.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.models.multitask.TrainingData": {
  "data": {
   "shadows": "botorch.utils.containers.TrainingData"
  },
  "type": "import"
 },
 "botorch.models.multitask.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "botorch.models.multitask.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.models.multitask.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.models.pairwise_gp": {
  "data": {},
  "type": "module"
 },
 "botorch.models.pairwise_gp.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "botorch.models.pairwise_gp.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.constant_mean.ConstantMean"
  },
  "type": "import"
 },
 "botorch.models.pairwise_gp.GP": {
  "data": {
   "shadows": "gpytorch.models.gp.GP"
  },
  "type": "import"
 },
 "botorch.models.pairwise_gp.GPyTorchPosterior": {
  "data": {
   "shadows": "botorch.posteriors.gpytorch.GPyTorchPosterior"
  },
  "type": "import"
 },
 "botorch.models.pairwise_gp.GammaPrior": {
  "data": {
   "shadows": "gpytorch.priors.torch_priors.GammaPrior"
  },
  "type": "import"
 },
 "botorch.models.pairwise_gp.LazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.lazy_tensor.LazyTensor"
  },
  "type": "import"
 },
 "botorch.models.pairwise_gp.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.models.pairwise_gp.MarginalLogLikelihood": {
  "data": {
   "shadows": "gpytorch.mlls.MarginalLogLikelihood"
  },
  "type": "import"
 },
 "botorch.models.pairwise_gp.Model": {
  "data": {
   "shadows": "botorch.models.model.Model"
  },
  "type": "import"
 },
 "botorch.models.pairwise_gp.Module": {
  "data": {
   "shadows": "gpytorch.module.Module"
  },
  "type": "import"
 },
 "botorch.models.pairwise_gp.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.multivariate_normal.MultivariateNormal"
  },
  "type": "import"
 },
 "botorch.models.pairwise_gp.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.models.pairwise_gp.PairwiseGP": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "botorch.models.model.Model",
    "gpytorch.models.gp.GP"
   ]
  },
  "type": "class"
 },
 "botorch.models.pairwise_gp.PairwiseGP.__deepcopy__": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "any",
    "botorch.models.pairwise_gp.PairwiseGP",
    "copy.deepcopy",
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "botorch.models.pairwise_gp.PairwiseGP.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "botorch.models.pairwise_gp.torch",
    "gpytorch.constraints.Positive",
    "gpytorch.kernels.rbf_kernel.RBFKernel",
    "gpytorch.kernels.scale_kernel.ScaleKernel",
    "gpytorch.means.constant_mean.ConstantMean",
    "gpytorch.module.Module",
    "gpytorch.priors.smoothed_box_prior.SmoothedBoxPrior",
    "gpytorch.priors.torch_priors.GammaPrior",
    "super",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.models.pairwise_gp.PairwiseGP._add_jitter": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "RuntimeError",
    "RuntimeWarning",
    "botorch.models.pairwise_gp.torch",
    "botorch.models.pairwise_gp.warnings",
    "range",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.pairwise_gp.PairwiseGP._batch_chol_inv": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "botorch.models.pairwise_gp.torch",
    "len",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.pairwise_gp.PairwiseGP._calc_covar": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "gpytorch.lazy.lazy_tensor.LazyTensor",
    "torch.Tensor",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.models.pairwise_gp.PairwiseGP._calc_z": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "botorch.models.pairwise_gp.math",
    "botorch.models.pairwise_gp.torch",
    "torch.Tensor",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "botorch.models.pairwise_gp.PairwiseGP._grad_likelihood_f_sum": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "botorch.models.pairwise_gp.math",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.pairwise_gp.PairwiseGP._grad_posterior_f": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "bool",
    "botorch.models.pairwise_gp.torch",
    "numpy.ndarray",
    "torch.Tensor",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.models.pairwise_gp.PairwiseGP._has_no_data": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "botorch.models.pairwise_gp.PairwiseGP._hess_likelihood_f_sum": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.pairwise_gp.PairwiseGP._hess_posterior_f": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "bool",
    "botorch.models.pairwise_gp.torch",
    "numpy.ndarray",
    "torch.Tensor",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.models.pairwise_gp.PairwiseGP._posterior_f": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "botorch.models.pairwise_gp.torch",
    "numpy.ndarray",
    "torch.Tensor",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.models.pairwise_gp.PairwiseGP._prior_mean": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "gpytorch.lazy.lazy_tensor.LazyTensor",
    "torch.Tensor",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.models.pairwise_gp.PairwiseGP._prior_predict": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "torch.Tensor",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "botorch.models.pairwise_gp.PairwiseGP._transform_batch_shape": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "len",
    "torch.Tensor",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "botorch.models.pairwise_gp.PairwiseGP._update": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "RuntimeWarning",
    "botorch.models.pairwise_gp.torch",
    "botorch.models.pairwise_gp.warnings",
    "len",
    "numpy.empty",
    "numpy.random.rand",
    "range",
    "scipy.optimize.fsolve"
   ]
  },
  "type": "function"
 },
 "botorch.models.pairwise_gp.PairwiseGP._update_covar": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "gpytorch.utils.cholesky.psd_safe_cholesky"
   ]
  },
  "type": "function"
 },
 "botorch.models.pairwise_gp.PairwiseGP._update_utility_derived_values": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "botorch.models.pairwise_gp.torch"
   ]
  },
  "type": "function"
 },
 "botorch.models.pairwise_gp.PairwiseGP._util_newton_updates": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "botorch.models.pairwise_gp.torch",
    "float",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.pairwise_gp.PairwiseGP.batch_shape": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "botorch.models.pairwise_gp.torch",
    "property"
   ]
  },
  "type": "function"
 },
 "botorch.models.pairwise_gp.PairwiseGP.condition_on_observations": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.models.model.Model",
    "botorch.models.pairwise_gp.torch",
    "copy.deepcopy",
    "self",
    "self._has_no_data",
    "self.comparisons.expand",
    "self.comparisons.shape",
    "self.datapoints.expand",
    "self.datapoints.shape",
    "self.n",
    "torch.Tensor",
    "torch.float32",
    "torch.float64",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "botorch.models.pairwise_gp.PairwiseGP.forward": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.models.pairwise_gp.torch",
    "gpytorch.distributions.multivariate_normal.MultivariateNormal",
    "gpytorch.settings.prior_mode.on",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.pairwise_gp.PairwiseGP.num_outputs": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "botorch.models.pairwise_gp.PairwiseGP.posterior": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "RuntimeError",
    "bool",
    "botorch.posteriors.gpytorch.GPyTorchPosterior",
    "botorch.posteriors.posterior.Posterior",
    "int",
    "self",
    "torch.Tensor",
    "typing.Any",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.models.pairwise_gp.PairwiseGP.set_train_data": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "bool",
    "botorch.models.pairwise_gp.torch",
    "enumerate",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.pairwise_gp.PairwiseLaplaceMarginalLogLikelihood": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "gpytorch.mlls.MarginalLogLikelihood"
   ]
  },
  "type": "class"
 },
 "botorch.models.pairwise_gp.PairwiseLaplaceMarginalLogLikelihood.__init__": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "botorch.models.pairwise_gp.PairwiseGP",
    "super"
   ]
  },
  "type": "function"
 },
 "botorch.models.pairwise_gp.PairwiseLaplaceMarginalLogLikelihood.forward": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.models.pairwise_gp.torch",
    "botorch.posteriors.posterior.Posterior",
    "closure",
    "self.model",
    "self.named_priors",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.pairwise_gp.Positive": {
  "data": {
   "shadows": "gpytorch.constraints.Positive"
  },
  "type": "import"
 },
 "botorch.models.pairwise_gp.Posterior": {
  "data": {
   "shadows": "botorch.posteriors.posterior.Posterior"
  },
  "type": "import"
 },
 "botorch.models.pairwise_gp.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.rbf_kernel.RBFKernel"
  },
  "type": "import"
 },
 "botorch.models.pairwise_gp.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.scale_kernel.ScaleKernel"
  },
  "type": "import"
 },
 "botorch.models.pairwise_gp.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.smoothed_box_prior.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "botorch.models.pairwise_gp.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.models.pairwise_gp.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "botorch.models.pairwise_gp.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "botorch.models.pairwise_gp.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.models.pairwise_gp.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "botorch.models.pairwise_gp.float32": {
  "data": {
   "shadows": "torch.float32"
  },
  "type": "import"
 },
 "botorch.models.pairwise_gp.float64": {
  "data": {
   "shadows": "torch.float64"
  },
  "type": "import"
 },
 "botorch.models.pairwise_gp.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "botorch.models.pairwise_gp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "botorch.models.pairwise_gp.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "botorch.models.pairwise_gp.psd_safe_cholesky": {
  "data": {
   "shadows": "gpytorch.utils.cholesky.psd_safe_cholesky"
  },
  "type": "import"
 },
 "botorch.models.pairwise_gp.settings": {
  "data": {
   "shadows": "gpytorch.settings"
  },
  "type": "import"
 },
 "botorch.models.pairwise_gp.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.models.pairwise_gp.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "botorch.models.transforms": {
  "data": {},
  "type": "module"
 },
 "botorch.models.transforms.ChainedInputTransform": {
  "data": {
   "shadows": "botorch.models.transforms.input.ChainedInputTransform"
  },
  "type": "import"
 },
 "botorch.models.transforms.ChainedOutcomeTransform": {
  "data": {
   "shadows": "botorch.models.transforms.outcome.ChainedOutcomeTransform"
  },
  "type": "import"
 },
 "botorch.models.transforms.Normalize": {
  "data": {
   "shadows": "botorch.models.transforms.input.Normalize"
  },
  "type": "import"
 },
 "botorch.models.transforms.Round": {
  "data": {
   "shadows": "botorch.models.transforms.input.Round"
  },
  "type": "import"
 },
 "botorch.models.transforms.Standardize": {
  "data": {
   "shadows": "botorch.models.transforms.outcome.Standardize"
  },
  "type": "import"
 },
 "botorch.models.transforms.Warp": {
  "data": {
   "shadows": "botorch.models.transforms.input.Warp"
  },
  "type": "import"
 },
 "botorch.models.transforms.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "botorch.models.transforms.input": {
  "data": {},
  "type": "module"
 },
 "botorch.models.transforms.input.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "botorch.models.transforms.input.BotorchTensorDimensionError": {
  "data": {
   "shadows": "botorch.exceptions.errors.BotorchTensorDimensionError"
  },
  "type": "import"
 },
 "botorch.models.transforms.input.ChainedInputTransform": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "botorch.models.transforms.input.InputTransform",
    "torch.nn.ModuleDict"
   ]
  },
  "type": "class"
 },
 "botorch.models.transforms.input.ChainedInputTransform.__init__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "botorch.models.transforms.input.InputTransform",
    "collections.OrderedDict",
    "super"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.input.ChainedInputTransform.equals": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "all",
    "bool",
    "botorch.models.transforms.input.InputTransform",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.input.ChainedInputTransform.preprocess_transform": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.input.ChainedInputTransform.transform": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.input.ChainedInputTransform.untransform": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "reversed",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.input.GPyTorchModule": {
  "data": {
   "shadows": "gpytorch.Module"
  },
  "type": "import"
 },
 "botorch.models.transforms.input.GreaterThan": {
  "data": {
   "shadows": "gpytorch.constraints.GreaterThan"
  },
  "type": "import"
 },
 "botorch.models.transforms.input.InputTransform": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "abc.ABC",
    "bool"
   ]
  },
  "type": "class"
 },
 "botorch.models.transforms.input.InputTransform.equals": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "all",
    "bool",
    "botorch.models.transforms.input.InputTransform",
    "botorch.models.transforms.input.torch",
    "type"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.input.InputTransform.forward": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.input.InputTransform.preprocess_transform": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.input.InputTransform.transform": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.input.InputTransform.untransform": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "NotImplementedError",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.input.Kumaraswamy": {
  "data": {
   "shadows": "botorch.distributions.distributions.Kumaraswamy"
  },
  "type": "import"
 },
 "botorch.models.transforms.input.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.models.transforms.input.Log10": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "botorch.models.transforms.input.ReversibleInputTransform",
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "botorch.models.transforms.input.Log10.__init__": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "bool",
    "botorch.models.transforms.input.torch",
    "int",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.input.Log10._transform": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.input.Log10._untransform": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.input.Module": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "botorch.models.transforms.input.ModuleDict": {
  "data": {
   "shadows": "torch.nn.ModuleDict"
  },
  "type": "import"
 },
 "botorch.models.transforms.input.Normalize": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "botorch.models.transforms.input.ReversibleInputTransform",
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "botorch.models.transforms.input.Normalize.__init__": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "bool",
    "botorch.exceptions.errors.BotorchTensorDimensionError",
    "botorch.models.transforms.input.torch",
    "int",
    "super",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.input.Normalize._transform": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "botorch.exceptions.errors.BotorchTensorDimensionError",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.input.Normalize._untransform": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.input.Normalize.bounds": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "botorch.models.transforms.input.torch",
    "property",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.input.Normalize.equals": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "bool",
    "botorch.models.transforms.input.InputTransform",
    "super"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.input.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.models.transforms.input.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "botorch.models.transforms.input.Prior": {
  "data": {
   "shadows": "gpytorch.priors.Prior"
  },
  "type": "import"
 },
 "botorch.models.transforms.input.ReversibleInputTransform": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "abc.ABC",
    "bool",
    "botorch.models.transforms.input.InputTransform"
   ]
  },
  "type": "class"
 },
 "botorch.models.transforms.input.ReversibleInputTransform._transform": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.input.ReversibleInputTransform._untransform": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.input.ReversibleInputTransform.equals": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "bool",
    "botorch.models.transforms.input.InputTransform",
    "super"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.input.ReversibleInputTransform.transform": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.input.ReversibleInputTransform.untransform": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.input.Round": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "botorch.models.transforms.input.InputTransform",
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "botorch.models.transforms.input.Round.__init__": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "bool",
    "botorch.models.transforms.input.torch",
    "float",
    "int",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.input.Round.equals": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "bool",
    "botorch.models.transforms.input.InputTransform",
    "super"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.input.Round.transform": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "botorch.utils.rounding.approximate_round",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.input.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.models.transforms.input.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "botorch.models.transforms.input.Warp": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "botorch.models.transforms.input.ReversibleInputTransform",
    "gpytorch.Module"
   ]
  },
  "type": "class"
 },
 "botorch.models.transforms.input.Warp.__init__": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "bool",
    "botorch.models.transforms.input.torch",
    "float",
    "gpytorch.constraints.GreaterThan",
    "gpytorch.priors.Prior",
    "int",
    "super",
    "torch.nn.Parameter",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.input.Warp._set_concentration": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "botorch.models.transforms.input.torch",
    "float",
    "int",
    "torch.Tensor",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.input.Warp._transform": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "botorch.distributions.distributions.Kumaraswamy",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.input.Warp._untransform": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "botorch.distributions.distributions.Kumaraswamy",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.input.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "botorch.models.transforms.input.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.models.transforms.input.approximate_round": {
  "data": {
   "shadows": "botorch.utils.rounding.approximate_round"
  },
  "type": "import"
 },
 "botorch.models.transforms.input.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "botorch.models.transforms.input.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.models.transforms.outcome": {
  "data": {},
  "type": "module"
 },
 "botorch.models.transforms.outcome.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "botorch.models.transforms.outcome.ChainedOutcomeTransform": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "botorch.models.transforms.outcome.OutcomeTransform",
    "torch.nn.ModuleDict"
   ]
  },
  "type": "class"
 },
 "botorch.models.transforms.outcome.ChainedOutcomeTransform.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "botorch.models.transforms.outcome.OutcomeTransform",
    "collections.OrderedDict",
    "super"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.outcome.ChainedOutcomeTransform.forward": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "torch.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.outcome.ChainedOutcomeTransform.untransform": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "reversed",
    "torch.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.outcome.ChainedOutcomeTransform.untransform_posterior": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "botorch.posteriors.Posterior",
    "reversed"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.outcome.CholLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.CholLazyTensor"
  },
  "type": "import"
 },
 "botorch.models.transforms.outcome.DiagLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.DiagLazyTensor"
  },
  "type": "import"
 },
 "botorch.models.transforms.outcome.GPyTorchPosterior": {
  "data": {
   "shadows": "botorch.posteriors.GPyTorchPosterior"
  },
  "type": "import"
 },
 "botorch.models.transforms.outcome.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.models.transforms.outcome.Log": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "botorch.models.transforms.outcome.OutcomeTransform"
   ]
  },
  "type": "class"
 },
 "botorch.models.transforms.outcome.Log.__init__": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "int",
    "super",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.outcome.Log.forward": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.models.transforms.outcome.torch",
    "botorch.utils.transforms.normalize_indices",
    "range",
    "torch.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.outcome.Log.untransform": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.models.transforms.outcome.torch",
    "botorch.utils.transforms.normalize_indices",
    "range",
    "torch.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.outcome.Log.untransform_posterior": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.models.transforms.outcome.torch",
    "botorch.models.transforms.utils.norm_to_lognorm_mean",
    "botorch.models.transforms.utils.norm_to_lognorm_variance",
    "botorch.posteriors.Posterior",
    "botorch.posteriors.TransformedPosterior"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.outcome.Module": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "botorch.models.transforms.outcome.ModuleDict": {
  "data": {
   "shadows": "torch.nn.ModuleDict"
  },
  "type": "import"
 },
 "botorch.models.transforms.outcome.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.models.transforms.outcome.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "botorch.models.transforms.outcome.OutcomeTransform": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "abc.ABC",
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "botorch.models.transforms.outcome.OutcomeTransform.forward": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "torch.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.outcome.OutcomeTransform.untransform": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "NotImplementedError",
    "torch.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.outcome.OutcomeTransform.untransform_posterior": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.posteriors.Posterior"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.outcome.Posterior": {
  "data": {
   "shadows": "botorch.posteriors.Posterior"
  },
  "type": "import"
 },
 "botorch.models.transforms.outcome.Standardize": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "botorch.models.transforms.outcome.OutcomeTransform"
   ]
  },
  "type": "class"
 },
 "botorch.models.transforms.outcome.Standardize.__init__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "botorch.models.transforms.outcome.torch",
    "botorch.utils.transforms.normalize_indices",
    "float",
    "int",
    "super",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.outcome.Standardize.forward": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.models.transforms.outcome.torch",
    "range",
    "torch.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.outcome.Standardize.untransform": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "torch.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.outcome.Standardize.untransform_posterior": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "botorch.models.transforms.outcome.torch",
    "botorch.posteriors.GPyTorchPosterior",
    "botorch.posteriors.Posterior",
    "botorch.posteriors.TransformedPosterior",
    "gpytorch.lazy.CholLazyTensor",
    "gpytorch.lazy.DiagLazyTensor",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.outcome.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.models.transforms.outcome.TransformedPosterior": {
  "data": {
   "shadows": "botorch.posteriors.TransformedPosterior"
  },
  "type": "import"
 },
 "botorch.models.transforms.outcome.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "botorch.models.transforms.outcome.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "botorch.models.transforms.outcome.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.models.transforms.outcome.norm_to_lognorm_mean": {
  "data": {
   "shadows": "botorch.models.transforms.utils.norm_to_lognorm_mean"
  },
  "type": "import"
 },
 "botorch.models.transforms.outcome.norm_to_lognorm_variance": {
  "data": {
   "shadows": "botorch.models.transforms.utils.norm_to_lognorm_variance"
  },
  "type": "import"
 },
 "botorch.models.transforms.outcome.normalize_indices": {
  "data": {
   "shadows": "botorch.utils.transforms.normalize_indices"
  },
  "type": "import"
 },
 "botorch.models.transforms.outcome.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.models.transforms.utils": {
  "data": {},
  "type": "module"
 },
 "botorch.models.transforms.utils.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.models.transforms.utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "botorch.models.transforms.utils.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.models.transforms.utils.lognorm_to_norm": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "botorch.models.transforms.utils.torch",
    "torch.Tensor",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.utils.norm_to_lognorm": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "botorch.models.transforms.utils.torch",
    "torch.Tensor",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.utils.norm_to_lognorm_mean": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "botorch.models.transforms.utils.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.utils.norm_to_lognorm_variance": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "botorch.models.transforms.utils.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.transforms.utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.models.utils": {
  "data": {},
  "type": "module"
 },
 "botorch.models.utils.ExitStack": {
  "data": {
   "shadows": "contextlib.ExitStack"
  },
  "type": "import"
 },
 "botorch.models.utils.InputDataError": {
  "data": {
   "shadows": "botorch.exceptions.InputDataError"
  },
  "type": "import"
 },
 "botorch.models.utils.InputDataWarning": {
  "data": {
   "shadows": "botorch.exceptions.InputDataWarning"
  },
  "type": "import"
 },
 "botorch.models.utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.models.utils.Module": {
  "data": {
   "shadows": "gpytorch.module.Module"
  },
  "type": "import"
 },
 "botorch.models.utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.models.utils.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.models.utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "botorch.models.utils._make_X_full": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "botorch.models.utils.torch",
    "int",
    "torch.Tensor",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "botorch.models.utils._mul_broadcast_shape": {
  "data": {
   "shadows": "gpytorch.utils.broadcasting._mul_broadcast_shape"
  },
  "type": "import"
 },
 "botorch.models.utils.add_output_dim": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "botorch.models.utils.torch",
    "gpytorch.utils.broadcasting._mul_broadcast_shape",
    "int",
    "len",
    "max",
    "torch.Tensor",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "botorch.models.utils.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.models.utils.check_min_max_scaling": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "bool",
    "botorch.exceptions.InputDataError",
    "botorch.exceptions.InputDataWarning",
    "botorch.models.utils.torch",
    "botorch.models.utils.warnings",
    "float",
    "max",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.utils.check_no_nans": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "botorch.exceptions.InputDataError",
    "botorch.models.utils.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.utils.check_standardization": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "bool",
    "botorch.exceptions.InputDataError",
    "botorch.exceptions.InputDataWarning",
    "botorch.models.utils.torch",
    "botorch.models.utils.warnings",
    "float",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.models.utils.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "botorch.models.utils.gpt_posterior_settings": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "contextlib.ExitStack",
    "contextlib.contextmanager",
    "gpytorch.settings.debug",
    "gpytorch.settings.debug.is_default",
    "gpytorch.settings.detach_test_caches",
    "gpytorch.settings.fast_pred_var",
    "gpytorch.settings.fast_pred_var.is_default",
    "gpytorch.settings.propagate_grads.off"
   ]
  },
  "type": "function"
 },
 "botorch.models.utils.gpt_settings": {
  "data": {
   "shadows": "gpytorch.settings"
  },
  "type": "import"
 },
 "botorch.models.utils.mod_batch_shape": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "botorch.models.utils.torch",
    "getattr",
    "gpytorch.module.Module",
    "hasattr",
    "int",
    "len",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "botorch.models.utils.multioutput_to_batch_mode_transform": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "botorch.models.utils.torch",
    "int",
    "torch.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "botorch.models.utils.settings": {
  "data": {
   "shadows": "botorch.settings"
  },
  "type": "import"
 },
 "botorch.models.utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.models.utils.validate_input_scaling": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "bool",
    "botorch.exceptions.InputDataError",
    "botorch.models.utils.check_min_max_scaling",
    "botorch.models.utils.check_no_nans",
    "botorch.models.utils.check_standardization",
    "botorch.models.utils.torch",
    "gpytorch.settings.validate_input_scaling.off",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.models.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "botorch.optim": {
  "data": {},
  "type": "module"
 },
 "botorch.optim.ExpMAStoppingCriterion": {
  "data": {
   "shadows": "botorch.optim.stopping.ExpMAStoppingCriterion"
  },
  "type": "import"
 },
 "botorch.optim.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "botorch.optim.fit": {
  "data": {
   "symbols_in_volume": [
    "botorch.optim.fit.ParameterBounds",
    "botorch.optim.numpy_converter.TorchAttr",
    "float",
    "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood",
    "numpy.ndarray",
    "str",
    "torch.nn.Module",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "module"
 },
 "botorch.optim.fit.Adam": {
  "data": {
   "shadows": "torch.optim.adam.Adam"
  },
  "type": "import"
 },
 "botorch.optim.fit.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "botorch.optim.fit.Bounds": {
  "data": {
   "shadows": "scipy.optimize.Bounds"
  },
  "type": "import"
 },
 "botorch.optim.fit.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "botorch.optim.fit.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "botorch.optim.fit.ExpMAStoppingCriterion": {
  "data": {
   "shadows": "botorch.optim.stopping.ExpMAStoppingCriterion"
  },
  "type": "import"
 },
 "botorch.optim.fit.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.optim.fit.MarginalLogLikelihood": {
  "data": {
   "shadows": "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood"
  },
  "type": "import"
 },
 "botorch.optim.fit.Module": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "botorch.optim.fit.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "botorch.optim.fit.OptimizationIteration": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "botorch.optim.fit.time",
    "float",
    "int",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "botorch.optim.fit.OptimizationWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.OptimizationWarning"
  },
  "type": "import"
 },
 "botorch.optim.fit.Optimizer": {
  "data": {
   "shadows": "torch.optim.optimizer.Optimizer"
  },
  "type": "import"
 },
 "botorch.optim.fit.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.optim.fit.ParameterBounds": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "botorch.optim.fit.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "botorch.optim.fit.TArrayToMod": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "botorch.optim.fit.TModToArray": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "botorch.optim.fit.TScipyObjective": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "botorch.optim.fit.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.optim.fit.TorchAttr": {
  "data": {
   "shadows": "botorch.optim.numpy_converter.TorchAttr"
  },
  "type": "import"
 },
 "botorch.optim.fit.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "botorch.optim.fit.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "botorch.optim.fit._filter_kwargs": {
  "data": {
   "shadows": "botorch.optim.utils._filter_kwargs"
  },
  "type": "import"
 },
 "botorch.optim.fit._get_extra_mll_args": {
  "data": {
   "shadows": "botorch.optim.utils._get_extra_mll_args"
  },
  "type": "import"
 },
 "botorch.optim.fit._scipy_objective_and_grad": {
  "data": {
   "shadows": "botorch.optim.utils._scipy_objective_and_grad"
  },
  "type": "import"
 },
 "botorch.optim.fit.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.optim.fit.fit_gpytorch_scipy": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "AttributeError",
    "bool",
    "botorch.exceptions.warnings.OptimizationWarning",
    "botorch.optim.fit.OptimizationIteration",
    "botorch.optim.fit.ParameterBounds",
    "botorch.optim.fit.TArrayToMod",
    "botorch.optim.fit.TModToArray",
    "botorch.optim.fit.TScipyObjective",
    "botorch.optim.fit.time",
    "botorch.optim.fit.warnings",
    "botorch.optim.numpy_converter.module_to_array",
    "botorch.optim.numpy_converter.set_params_with_array",
    "botorch.optim.utils._scipy_objective_and_grad",
    "enumerate",
    "float",
    "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood",
    "gpytorch.settings.fast_computations",
    "mll",
    "module_from_array_func",
    "module_to_array_func",
    "numpy.float64",
    "scipy.optimize.Bounds",
    "scipy.optimize.minimize",
    "scipy_objective",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.optim.fit.fit_gpytorch_scipy.store_iteration": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "botorch.optim.fit.time"
   ]
  },
  "type": "function"
 },
 "botorch.optim.fit.fit_gpytorch_torch": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "bool",
    "botorch.optim.fit.OptimizationIteration",
    "botorch.optim.fit.ParameterBounds",
    "botorch.optim.fit.time",
    "botorch.optim.stopping.ExpMAStoppingCriterion",
    "botorch.optim.utils._filter_kwargs",
    "botorch.optim.utils._get_extra_mll_args",
    "float",
    "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood",
    "gpytorch.settings.fast_computations",
    "hasattr",
    "list",
    "mll",
    "mll.named_parameters",
    "optimizer_cls",
    "print",
    "str",
    "torch.Tensor",
    "torch.optim.adam.Adam",
    "torch.optim.optimizer.Optimizer",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.optim.fit.gpt_settings": {
  "data": {
   "shadows": "gpytorch.settings"
  },
  "type": "import"
 },
 "botorch.optim.fit.minimize": {
  "data": {
   "shadows": "scipy.optimize.minimize"
  },
  "type": "import"
 },
 "botorch.optim.fit.module_to_array": {
  "data": {
   "shadows": "botorch.optim.numpy_converter.module_to_array"
  },
  "type": "import"
 },
 "botorch.optim.fit.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "botorch.optim.fit.set_params_with_array": {
  "data": {
   "shadows": "botorch.optim.numpy_converter.set_params_with_array"
  },
  "type": "import"
 },
 "botorch.optim.fit.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "botorch.optim.fit.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "botorch.optim.gen_batch_initial_conditions": {
  "data": {
   "shadows": "botorch.optim.optimize.gen_batch_initial_conditions"
  },
  "type": "import"
 },
 "botorch.optim.initialize_q_batch": {
  "data": {
   "shadows": "botorch.optim.initializers.initialize_q_batch"
  },
  "type": "import"
 },
 "botorch.optim.initialize_q_batch_nonneg": {
  "data": {
   "shadows": "botorch.optim.initializers.initialize_q_batch_nonneg"
  },
  "type": "import"
 },
 "botorch.optim.initializers": {
  "data": {},
  "type": "module"
 },
 "botorch.optim.initializers.AcquisitionFunction": {
  "data": {
   "shadows": "botorch.acquisition.acquisition.AcquisitionFunction"
  },
  "type": "import"
 },
 "botorch.optim.initializers.BadInitialCandidatesWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.BadInitialCandidatesWarning"
  },
  "type": "import"
 },
 "botorch.optim.initializers.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "botorch.optim.initializers.Model": {
  "data": {
   "shadows": "botorch.models.model.Model"
  },
  "type": "import"
 },
 "botorch.optim.initializers.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.optim.initializers.SamplingWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.SamplingWarning"
  },
  "type": "import"
 },
 "botorch.optim.initializers.SobolEngine": {
  "data": {
   "shadows": "torch.quasirandom.SobolEngine"
  },
  "type": "import"
 },
 "botorch.optim.initializers.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.optim.initializers.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "botorch.optim.initializers._get_value_function": {
  "data": {
   "shadows": "botorch.acquisition.knowledge_gradient._get_value_function"
  },
  "type": "import"
 },
 "botorch.optim.initializers.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.optim.initializers.batched_multinomial": {
  "data": {
   "shadows": "botorch.utils.sampling.batched_multinomial"
  },
  "type": "import"
 },
 "botorch.optim.initializers.draw_sobol_samples": {
  "data": {
   "shadows": "botorch.utils.sampling.draw_sobol_samples"
  },
  "type": "import"
 },
 "botorch.optim.initializers.gen_batch_initial_conditions": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "acq_function",
    "any",
    "bool",
    "botorch.acquisition.acquisition.AcquisitionFunction",
    "botorch.acquisition.utils.is_nonnegative",
    "botorch.exceptions.warnings.BadInitialCandidatesWarning",
    "botorch.exceptions.warnings.SamplingWarning",
    "botorch.optim.initializers.torch",
    "botorch.optim.initializers.warnings",
    "botorch.settings.debug.on",
    "botorch.utils.sampling.draw_sobol_samples",
    "botorch.utils.sampling.manual_seed",
    "float",
    "init_func",
    "int",
    "issubclass",
    "min",
    "str",
    "torch.Tensor",
    "torch.quasirandom.SobolEngine.MAXDIM",
    "typing.Dict",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.optim.initializers.gen_one_shot_kg_initial_conditions": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ValueError",
    "acq_function",
    "acq_function.get_augmented_q_batch_size",
    "acq_function.inner_sampler",
    "acq_function.model",
    "acq_function.objective",
    "bool",
    "botorch.acquisition.knowledge_gradient._get_value_function",
    "botorch.acquisition.knowledge_gradient.qKnowledgeGradient",
    "botorch.optim.initializers.gen_batch_initial_conditions",
    "botorch.optim.initializers.torch",
    "botorch.optim.optimize.optimize_acqf",
    "botorch.utils.transforms.standardize",
    "float",
    "getattr",
    "int",
    "str",
    "torch.Tensor",
    "typing.Dict",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.optim.initializers.gen_value_function_initial_conditions": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "ValueError",
    "acq_function",
    "acq_function.model.batch_shape",
    "acq_function.objective",
    "bool",
    "botorch.acquisition.acquisition.AcquisitionFunction",
    "botorch.acquisition.knowledge_gradient._get_value_function",
    "botorch.models.model.Model",
    "botorch.optim.initializers.initialize_q_batch",
    "botorch.optim.initializers.torch",
    "botorch.optim.optimize.optimize_acqf",
    "botorch.utils.sampling.batched_multinomial",
    "botorch.utils.sampling.draw_sobol_samples",
    "botorch.utils.transforms.standardize",
    "float",
    "getattr",
    "int",
    "len",
    "range",
    "str",
    "torch.Tensor",
    "typing.Dict",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.optim.initializers.initialize_q_batch": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.exceptions.warnings.BadInitialCandidatesWarning",
    "botorch.optim.initializers.torch",
    "botorch.optim.initializers.warnings",
    "botorch.utils.sampling.batched_multinomial",
    "float",
    "int",
    "len",
    "range",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.optim.initializers.initialize_q_batch_nonneg": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.exceptions.warnings.BadInitialCandidatesWarning",
    "botorch.optim.initializers.torch",
    "botorch.optim.initializers.warnings",
    "float",
    "int",
    "len",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.optim.initializers.is_nonnegative": {
  "data": {
   "shadows": "botorch.acquisition.utils.is_nonnegative"
  },
  "type": "import"
 },
 "botorch.optim.initializers.manual_seed": {
  "data": {
   "shadows": "botorch.utils.sampling.manual_seed"
  },
  "type": "import"
 },
 "botorch.optim.initializers.optimize_acqf": {
  "data": {
   "shadows": "botorch.optim.optimize.optimize_acqf"
  },
  "type": "import"
 },
 "botorch.optim.initializers.qKnowledgeGradient": {
  "data": {
   "shadows": "botorch.acquisition.knowledge_gradient.qKnowledgeGradient"
  },
  "type": "import"
 },
 "botorch.optim.initializers.settings": {
  "data": {
   "shadows": "botorch.settings"
  },
  "type": "import"
 },
 "botorch.optim.initializers.standardize": {
  "data": {
   "shadows": "botorch.utils.transforms.standardize"
  },
  "type": "import"
 },
 "botorch.optim.initializers.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.optim.initializers.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "botorch.optim.module_to_array": {
  "data": {
   "shadows": "botorch.optim.numpy_converter.module_to_array"
  },
  "type": "import"
 },
 "botorch.optim.numpy_converter": {
  "data": {
   "symbols_in_volume": [
    "float",
    "str",
    "typing.Dict",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "module"
 },
 "botorch.optim.numpy_converter.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "botorch.optim.numpy_converter.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.optim.numpy_converter.Module": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "botorch.optim.numpy_converter.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "botorch.optim.numpy_converter.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.optim.numpy_converter.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "botorch.optim.numpy_converter.ParameterBounds": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "botorch.optim.numpy_converter.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "botorch.optim.numpy_converter.TorchAttr": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "botorch.optim.numpy_converter.torch",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "botorch.optim.numpy_converter.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "botorch.optim.numpy_converter.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.optim.numpy_converter.inf": {
  "data": {
   "shadows": "math.inf"
  },
  "type": "import"
 },
 "botorch.optim.numpy_converter.module_to_array": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "all",
    "botorch.optim.numpy_converter.ParameterBounds",
    "botorch.optim.numpy_converter.TorchAttr",
    "botorch.optim.numpy_converter.torch",
    "collections.OrderedDict",
    "hasattr",
    "math.inf",
    "numpy.concatenate",
    "numpy.full",
    "numpy.isinf",
    "numpy.ndarray",
    "numpy.stack",
    "set",
    "str",
    "torch.nn.Module",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "botorch.optim.numpy_converter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "botorch.optim.numpy_converter.set_params_with_array": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "botorch.optim.numpy_converter.TorchAttr",
    "botorch.optim.numpy_converter.torch",
    "collections.OrderedDict",
    "len",
    "numpy.ndarray",
    "numpy.prod",
    "str",
    "torch.nn.Module",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "botorch.optim.numpy_converter.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.optim.optimize": {
  "data": {},
  "type": "module"
 },
 "botorch.optim.optimize.AcquisitionFunction": {
  "data": {
   "shadows": "botorch.acquisition.acquisition.AcquisitionFunction"
  },
  "type": "import"
 },
 "botorch.optim.optimize.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "botorch.optim.optimize.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "botorch.optim.optimize.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "botorch.optim.optimize.ExpMAStoppingCriterion": {
  "data": {
   "shadows": "botorch.optim.stopping.ExpMAStoppingCriterion"
  },
  "type": "import"
 },
 "botorch.optim.optimize.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.optim.optimize.OneShotAcquisitionFunction": {
  "data": {
   "shadows": "botorch.acquisition.acquisition.OneShotAcquisitionFunction"
  },
  "type": "import"
 },
 "botorch.optim.optimize.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.optim.optimize.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.optim.optimize.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "botorch.optim.optimize.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "botorch.optim.optimize.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.optim.optimize.gen_batch_initial_conditions": {
  "data": {
   "shadows": "botorch.optim.initializers.gen_batch_initial_conditions"
  },
  "type": "import"
 },
 "botorch.optim.optimize.gen_candidates_scipy": {
  "data": {
   "shadows": "botorch.generation.gen.gen_candidates_scipy"
  },
  "type": "import"
 },
 "botorch.optim.optimize.gen_one_shot_kg_initial_conditions": {
  "data": {
   "shadows": "botorch.optim.initializers.gen_one_shot_kg_initial_conditions"
  },
  "type": "import"
 },
 "botorch.optim.optimize.logger": {
  "data": {
   "shadows": "botorch.logging.logger"
  },
  "type": "import"
 },
 "botorch.optim.optimize.optimize_acqf": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "botorch.acquisition.acquisition.AcquisitionFunction",
    "botorch.acquisition.acquisition.OneShotAcquisitionFunction",
    "botorch.acquisition.knowledge_gradient.qKnowledgeGradient",
    "botorch.generation.gen.gen_candidates_scipy",
    "botorch.logging.logger.info",
    "botorch.optim.initializers.gen_batch_initial_conditions",
    "botorch.optim.initializers.gen_one_shot_kg_initial_conditions",
    "botorch.optim.optimize.torch",
    "float",
    "ic_gen",
    "int",
    "isinstance",
    "len",
    "list",
    "min",
    "post_processing_func",
    "range",
    "str",
    "torch.Tensor",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.optim.optimize.optimize_acqf_cyclic": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "bool",
    "botorch.acquisition.acquisition.AcquisitionFunction",
    "botorch.optim.optimize.optimize_acqf",
    "botorch.optim.optimize.torch",
    "botorch.optim.stopping.ExpMAStoppingCriterion",
    "float",
    "int",
    "post_processing_func",
    "range",
    "str",
    "torch.Tensor",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.optim.optimize.optimize_acqf_list": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "botorch.acquisition.acquisition.AcquisitionFunction",
    "botorch.optim.optimize.optimize_acqf",
    "botorch.optim.optimize.torch",
    "float",
    "int",
    "post_processing_func",
    "str",
    "torch.Tensor",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.optim.optimize.qKnowledgeGradient": {
  "data": {
   "shadows": "botorch.acquisition.knowledge_gradient.qKnowledgeGradient"
  },
  "type": "import"
 },
 "botorch.optim.optimize.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.optim.optimize_acqf": {
  "data": {
   "shadows": "botorch.optim.optimize.optimize_acqf"
  },
  "type": "import"
 },
 "botorch.optim.optimize_acqf_cyclic": {
  "data": {
   "shadows": "botorch.optim.optimize.optimize_acqf_cyclic"
  },
  "type": "import"
 },
 "botorch.optim.parameter_constraints": {
  "data": {
   "symbols_in_volume": [
    "float",
    "numpy.ndarray",
    "str",
    "typing.Callable",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "botorch.optim.parameter_constraints.Bounds": {
  "data": {
   "shadows": "scipy.optimize.Bounds"
  },
  "type": "import"
 },
 "botorch.optim.parameter_constraints.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "botorch.optim.parameter_constraints.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "botorch.optim.parameter_constraints.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.optim.parameter_constraints.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.optim.parameter_constraints.ScipyConstraintDict": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "botorch.optim.parameter_constraints.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.optim.parameter_constraints.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "botorch.optim.parameter_constraints.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "botorch.optim.parameter_constraints.UnsupportedError": {
  "data": {
   "shadows": "botorch.exceptions.errors.UnsupportedError"
  },
  "type": "import"
 },
 "botorch.optim.parameter_constraints._arrayify": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.ndarray",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.optim.parameter_constraints._make_linear_constraints": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "bool",
    "botorch.exceptions.errors.UnsupportedError",
    "botorch.optim.parameter_constraints.ScipyConstraintDict",
    "botorch.optim.parameter_constraints._arrayify",
    "botorch.optim.parameter_constraints.eval_lin_constraint",
    "botorch.optim.parameter_constraints.lin_constraint_jac",
    "botorch.optim.parameter_constraints.torch",
    "float",
    "functools.partial",
    "len",
    "range",
    "torch.Tensor",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "botorch.optim.parameter_constraints.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.optim.parameter_constraints.eval_lin_constraint": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.float64",
    "numpy.ndarray",
    "numpy.sum",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "botorch.optim.parameter_constraints.lin_constraint_jac": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "int",
    "numpy.ndarray",
    "numpy.zeros",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "botorch.optim.parameter_constraints.make_scipy_bounds": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "_expand",
    "float",
    "scipy.optimize.Bounds",
    "torch.Tensor",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.optim.parameter_constraints.make_scipy_bounds._expand": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "bool",
    "botorch.optim.parameter_constraints._arrayify",
    "botorch.optim.parameter_constraints.torch",
    "float",
    "torch.Tensor",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.optim.parameter_constraints.make_scipy_linear_constraints": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "botorch.optim.parameter_constraints.ScipyConstraintDict",
    "botorch.optim.parameter_constraints._make_linear_constraints",
    "botorch.optim.parameter_constraints.torch",
    "float",
    "torch.Tensor",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "botorch.optim.parameter_constraints.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "botorch.optim.parameter_constraints.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "botorch.optim.parameter_constraints.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.optim.set_params_with_array": {
  "data": {
   "shadows": "botorch.optim.numpy_converter.set_params_with_array"
  },
  "type": "import"
 },
 "botorch.optim.stopping": {
  "data": {},
  "type": "module"
 },
 "botorch.optim.stopping.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "botorch.optim.stopping.ExpMAStoppingCriterion": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "botorch.optim.stopping.StoppingCriterion"
   ]
  },
  "type": "class"
 },
 "botorch.optim.stopping.ExpMAStoppingCriterion.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "bool",
    "botorch.optim.stopping.torch",
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "botorch.optim.stopping.ExpMAStoppingCriterion.evaluate": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "bool",
    "botorch.optim.stopping.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.optim.stopping.StoppingCriterion": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "botorch.optim.stopping.StoppingCriterion.evaluate": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "bool",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.optim.stopping.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.optim.stopping.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "botorch.optim.stopping.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.optim.stopping.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.optim.stopping.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "botorch.optim.utils": {
  "data": {},
  "type": "module"
 },
 "botorch.optim.utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "botorch.optim.utils.BotorchError": {
  "data": {
   "shadows": "botorch.exceptions.errors.BotorchError"
  },
  "type": "import"
 },
 "botorch.optim.utils.BotorchWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.BotorchWarning"
  },
  "type": "import"
 },
 "botorch.optim.utils.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "botorch.optim.utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "botorch.optim.utils.ExactMarginalLogLikelihood": {
  "data": {
   "shadows": "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood"
  },
  "type": "import"
 },
 "botorch.optim.utils.GPyTorchModel": {
  "data": {
   "shadows": "botorch.models.gpytorch.GPyTorchModel"
  },
  "type": "import"
 },
 "botorch.optim.utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.optim.utils.MarginalLogLikelihood": {
  "data": {
   "shadows": "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood"
  },
  "type": "import"
 },
 "botorch.optim.utils.NanError": {
  "data": {
   "shadows": "gpytorch.utils.errors.NanError"
  },
  "type": "import"
 },
 "botorch.optim.utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.optim.utils.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "botorch.optim.utils.SumMarginalLogLikelihood": {
  "data": {
   "shadows": "gpytorch.mlls.sum_marginal_log_likelihood.SumMarginalLogLikelihood"
  },
  "type": "import"
 },
 "botorch.optim.utils.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.optim.utils.TorchAttr": {
  "data": {
   "shadows": "botorch.optim.numpy_converter.TorchAttr"
  },
  "type": "import"
 },
 "botorch.optim.utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "botorch.optim.utils.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "botorch.optim.utils._expand_bounds": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.optim.utils.torch",
    "float",
    "torch.Tensor",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.optim.utils._filter_kwargs": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "inspect.signature",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "botorch.optim.utils._fix_feature": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "botorch.optim.utils.torch",
    "float",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.optim.utils._get_extra_mll_args": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
    "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood",
    "gpytorch.mlls.sum_marginal_log_likelihood.SumMarginalLogLikelihood",
    "isinstance",
    "list",
    "torch.Tensor",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.optim.utils._scipy_objective_and_grad": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.optim.numpy_converter.TorchAttr",
    "botorch.optim.numpy_converter.set_params_with_array",
    "botorch.optim.utils._get_extra_mll_args",
    "collections.OrderedDict",
    "float",
    "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood",
    "gpytorch.utils.errors.NanError",
    "isinstance",
    "mll",
    "mll.named_parameters",
    "mll.zero_grad",
    "numpy.concatenate",
    "numpy.full_like",
    "numpy.ndarray",
    "numpy.zeros",
    "str",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "botorch.optim.utils.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.optim.utils.columnwise_clamp": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "botorch.exceptions.errors.BotorchError",
    "botorch.optim.utils._expand_bounds",
    "botorch.optim.utils.torch",
    "float",
    "torch.Tensor",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "botorch.optim.utils.fix_features": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "botorch.optim.utils._fix_feature",
    "botorch.optim.utils.torch",
    "float",
    "int",
    "range",
    "torch.Tensor",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.optim.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "botorch.optim.utils.sample_all_priors": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "botorch.exceptions.warnings.BotorchWarning",
    "botorch.models.gpytorch.GPyTorchModel",
    "botorch.optim.utils.warnings",
    "closure",
    "setting_closure",
    "type"
   ]
  },
  "type": "function"
 },
 "botorch.optim.utils.set_params_with_array": {
  "data": {
   "shadows": "botorch.optim.numpy_converter.set_params_with_array"
  },
  "type": "import"
 },
 "botorch.optim.utils.signature": {
  "data": {
   "shadows": "inspect.signature"
  },
  "type": "import"
 },
 "botorch.optim.utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.optim.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "botorch.posteriors": {
  "data": {},
  "type": "module"
 },
 "botorch.posteriors.DeterministicPosterior": {
  "data": {
   "shadows": "botorch.posteriors.deterministic.DeterministicPosterior"
  },
  "type": "import"
 },
 "botorch.posteriors.GPyTorchPosterior": {
  "data": {
   "shadows": "botorch.posteriors.gpytorch.GPyTorchPosterior"
  },
  "type": "import"
 },
 "botorch.posteriors.Posterior": {
  "data": {
   "shadows": "botorch.posteriors.posterior.Posterior"
  },
  "type": "import"
 },
 "botorch.posteriors.TransformedPosterior": {
  "data": {
   "shadows": "botorch.posteriors.transformed.TransformedPosterior"
  },
  "type": "import"
 },
 "botorch.posteriors.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "botorch.posteriors.deterministic": {
  "data": {},
  "type": "module"
 },
 "botorch.posteriors.deterministic.DeterministicPosterior": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "botorch.posteriors.posterior.Posterior"
   ]
  },
  "type": "class"
 },
 "botorch.posteriors.deterministic.DeterministicPosterior.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.posteriors.deterministic.DeterministicPosterior.device": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "botorch.posteriors.deterministic.torch",
    "property"
   ]
  },
  "type": "function"
 },
 "botorch.posteriors.deterministic.DeterministicPosterior.dtype": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "botorch.posteriors.deterministic.torch",
    "property"
   ]
  },
  "type": "function"
 },
 "botorch.posteriors.deterministic.DeterministicPosterior.event_shape": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "botorch.posteriors.deterministic.torch",
    "property"
   ]
  },
  "type": "function"
 },
 "botorch.posteriors.deterministic.DeterministicPosterior.mean": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "property",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.posteriors.deterministic.DeterministicPosterior.rsample": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.posteriors.deterministic.torch",
    "len",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.posteriors.deterministic.DeterministicPosterior.variance": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "botorch.posteriors.deterministic.torch",
    "property",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.posteriors.deterministic.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.posteriors.deterministic.Posterior": {
  "data": {
   "shadows": "botorch.posteriors.posterior.Posterior"
  },
  "type": "import"
 },
 "botorch.posteriors.deterministic.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.posteriors.deterministic.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.posteriors.deterministic.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.posteriors.gpytorch": {
  "data": {},
  "type": "module"
 },
 "botorch.posteriors.gpytorch.BlockDiagLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.BlockDiagLazyTensor"
  },
  "type": "import"
 },
 "botorch.posteriors.gpytorch.BotorchTensorDimensionError": {
  "data": {
   "shadows": "botorch.exceptions.errors.BotorchTensorDimensionError"
  },
  "type": "import"
 },
 "botorch.posteriors.gpytorch.GPyTorchPosterior": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "botorch.posteriors.posterior.Posterior"
   ]
  },
  "type": "class"
 },
 "botorch.posteriors.gpytorch.GPyTorchPosterior.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "gpytorch.distributions.MultitaskMultivariateNormal",
    "gpytorch.distributions.MultivariateNormal",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "botorch.posteriors.gpytorch.GPyTorchPosterior.device": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "botorch.posteriors.gpytorch.torch",
    "property"
   ]
  },
  "type": "function"
 },
 "botorch.posteriors.gpytorch.GPyTorchPosterior.dtype": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "botorch.posteriors.gpytorch.torch",
    "property"
   ]
  },
  "type": "function"
 },
 "botorch.posteriors.gpytorch.GPyTorchPosterior.event_shape": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "botorch.posteriors.gpytorch.torch",
    "property"
   ]
  },
  "type": "function"
 },
 "botorch.posteriors.gpytorch.GPyTorchPosterior.mean": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "property",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.posteriors.gpytorch.GPyTorchPosterior.rsample": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.posteriors.gpytorch.gpytorch",
    "botorch.posteriors.gpytorch.torch",
    "len",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.posteriors.gpytorch.GPyTorchPosterior.variance": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "property",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.posteriors.gpytorch.LazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.LazyTensor"
  },
  "type": "import"
 },
 "botorch.posteriors.gpytorch.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "botorch.posteriors.gpytorch.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "botorch.posteriors.gpytorch.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.posteriors.gpytorch.Posterior": {
  "data": {
   "shadows": "botorch.posteriors.posterior.Posterior"
  },
  "type": "import"
 },
 "botorch.posteriors.gpytorch.SumLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.SumLazyTensor"
  },
  "type": "import"
 },
 "botorch.posteriors.gpytorch.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.posteriors.gpytorch.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.posteriors.gpytorch.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "botorch.posteriors.gpytorch.scalarize_posterior": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.exceptions.errors.BotorchTensorDimensionError",
    "botorch.posteriors.gpytorch.GPyTorchPosterior",
    "botorch.posteriors.gpytorch.torch",
    "float",
    "gpytorch.distributions.MultivariateNormal",
    "gpytorch.lazy.BlockDiagLazyTensor",
    "gpytorch.lazy.LazyTensor",
    "gpytorch.lazy.SumLazyTensor",
    "isinstance",
    "range",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.posteriors.gpytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.posteriors.posterior": {
  "data": {},
  "type": "module"
 },
 "botorch.posteriors.posterior.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "botorch.posteriors.posterior.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.posteriors.posterior.Posterior": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "botorch.posteriors.posterior.Posterior.device": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "abc.abstractproperty",
    "botorch.posteriors.posterior.torch"
   ]
  },
  "type": "function"
 },
 "botorch.posteriors.posterior.Posterior.dtype": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "abc.abstractproperty",
    "botorch.posteriors.posterior.torch"
   ]
  },
  "type": "function"
 },
 "botorch.posteriors.posterior.Posterior.event_shape": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "abc.abstractproperty",
    "botorch.posteriors.posterior.torch"
   ]
  },
  "type": "function"
 },
 "botorch.posteriors.posterior.Posterior.mean": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "NotImplementedError",
    "property",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.posteriors.posterior.Posterior.rsample": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "botorch.posteriors.posterior.torch",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.posteriors.posterior.Posterior.sample": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "botorch.posteriors.posterior.torch",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.posteriors.posterior.Posterior.variance": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "NotImplementedError",
    "property",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.posteriors.posterior.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.posteriors.posterior.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "botorch.posteriors.posterior.abstractproperty": {
  "data": {
   "shadows": "abc.abstractproperty"
  },
  "type": "import"
 },
 "botorch.posteriors.posterior.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.posteriors.posterior.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.posteriors.transformed": {
  "data": {},
  "type": "module"
 },
 "botorch.posteriors.transformed.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "botorch.posteriors.transformed.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.posteriors.transformed.Posterior": {
  "data": {
   "shadows": "botorch.posteriors.posterior.Posterior"
  },
  "type": "import"
 },
 "botorch.posteriors.transformed.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.posteriors.transformed.TransformedPosterior": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "botorch.posteriors.posterior.Posterior"
   ]
  },
  "type": "class"
 },
 "botorch.posteriors.transformed.TransformedPosterior.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "botorch.posteriors.posterior.Posterior",
    "torch.Tensor",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.posteriors.transformed.TransformedPosterior.device": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "botorch.posteriors.transformed.torch",
    "property"
   ]
  },
  "type": "function"
 },
 "botorch.posteriors.transformed.TransformedPosterior.dtype": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "botorch.posteriors.transformed.torch",
    "property"
   ]
  },
  "type": "function"
 },
 "botorch.posteriors.transformed.TransformedPosterior.event_shape": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "botorch.posteriors.transformed.torch",
    "property"
   ]
  },
  "type": "function"
 },
 "botorch.posteriors.transformed.TransformedPosterior.mean": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "NotImplementedError",
    "property",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.posteriors.transformed.TransformedPosterior.rsample": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "botorch.posteriors.transformed.torch",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.posteriors.transformed.TransformedPosterior.variance": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "NotImplementedError",
    "property",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.posteriors.transformed.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.posteriors.transformed.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.sampling": {
  "data": {},
  "type": "module"
 },
 "botorch.sampling.IIDNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.IIDNormalSampler"
  },
  "type": "import"
 },
 "botorch.sampling.MCSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.MCSampler"
  },
  "type": "import"
 },
 "botorch.sampling.MultivariateNormalQMCEngine": {
  "data": {
   "shadows": "botorch.sampling.qmc.MultivariateNormalQMCEngine"
  },
  "type": "import"
 },
 "botorch.sampling.NormalQMCEngine": {
  "data": {
   "shadows": "botorch.sampling.qmc.NormalQMCEngine"
  },
  "type": "import"
 },
 "botorch.sampling.PairwiseIIDNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.pairwise_samplers.PairwiseIIDNormalSampler"
  },
  "type": "import"
 },
 "botorch.sampling.PairwiseMCSampler": {
  "data": {
   "shadows": "botorch.sampling.pairwise_samplers.PairwiseMCSampler"
  },
  "type": "import"
 },
 "botorch.sampling.PairwiseSobolQMCNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.pairwise_samplers.PairwiseSobolQMCNormalSampler"
  },
  "type": "import"
 },
 "botorch.sampling.SobolEngine": {
  "data": {
   "shadows": "torch.quasirandom.SobolEngine"
  },
  "type": "import"
 },
 "botorch.sampling.SobolQMCNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.SobolQMCNormalSampler"
  },
  "type": "import"
 },
 "botorch.sampling.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "botorch.sampling.pairwise_samplers": {
  "data": {},
  "type": "module"
 },
 "botorch.sampling.pairwise_samplers.IIDNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.IIDNormalSampler"
  },
  "type": "import"
 },
 "botorch.sampling.pairwise_samplers.MCSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.MCSampler"
  },
  "type": "import"
 },
 "botorch.sampling.pairwise_samplers.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.sampling.pairwise_samplers.PairwiseIIDNormalSampler": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "botorch.sampling.pairwise_samplers.PairwiseMCSampler",
    "botorch.sampling.samplers.IIDNormalSampler"
   ]
  },
  "type": "class"
 },
 "botorch.sampling.pairwise_samplers.PairwiseIIDNormalSampler.__init__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "bool",
    "botorch.sampling.pairwise_samplers.PairwiseMCSampler",
    "botorch.sampling.samplers.IIDNormalSampler.__init__",
    "int",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.sampling.pairwise_samplers.PairwiseMCSampler": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "botorch.sampling.samplers.MCSampler"
   ]
  },
  "type": "class"
 },
 "botorch.sampling.pairwise_samplers.PairwiseMCSampler.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "botorch.sampling.pairwise_samplers.torch",
    "int"
   ]
  },
  "type": "function"
 },
 "botorch.sampling.pairwise_samplers.PairwiseMCSampler.forward": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.posteriors.posterior.Posterior",
    "botorch.sampling.pairwise_samplers.torch",
    "itertools.combinations",
    "len",
    "list",
    "min",
    "numpy.array",
    "numpy.choose",
    "numpy.random.choice",
    "numpy.random.seed",
    "range",
    "super",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.sampling.pairwise_samplers.PairwiseSobolQMCNormalSampler": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "botorch.sampling.pairwise_samplers.PairwiseMCSampler",
    "botorch.sampling.samplers.SobolQMCNormalSampler"
   ]
  },
  "type": "class"
 },
 "botorch.sampling.pairwise_samplers.PairwiseSobolQMCNormalSampler.__init__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "bool",
    "botorch.sampling.pairwise_samplers.PairwiseMCSampler",
    "botorch.sampling.samplers.SobolQMCNormalSampler.__init__",
    "int",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.sampling.pairwise_samplers.Posterior": {
  "data": {
   "shadows": "botorch.posteriors.posterior.Posterior"
  },
  "type": "import"
 },
 "botorch.sampling.pairwise_samplers.SobolQMCNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.SobolQMCNormalSampler"
  },
  "type": "import"
 },
 "botorch.sampling.pairwise_samplers.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.sampling.pairwise_samplers.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.sampling.pairwise_samplers.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "botorch.sampling.pairwise_samplers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "botorch.sampling.pairwise_samplers.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.sampling.qmc": {
  "data": {},
  "type": "module"
 },
 "botorch.sampling.qmc.MultivariateNormalQMCEngine": {
  "data": {
   "lineno": 96
  },
  "type": "class"
 },
 "botorch.sampling.qmc.MultivariateNormalQMCEngine.__init__": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "bool",
    "botorch.sampling.qmc.NormalQMCEngine",
    "botorch.sampling.qmc.torch",
    "int",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.sampling.qmc.MultivariateNormalQMCEngine.draw": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "int",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.sampling.qmc.NormalQMCEngine": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "botorch.sampling.qmc.NormalQMCEngine.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "bool",
    "botorch.sampling.qmc.math",
    "int",
    "torch.quasirandom.SobolEngine",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.sampling.qmc.NormalQMCEngine.draw": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "botorch.sampling.qmc.math",
    "botorch.sampling.qmc.torch",
    "int",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.sampling.qmc.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.sampling.qmc.SobolEngine": {
  "data": {
   "shadows": "torch.quasirandom.SobolEngine"
  },
  "type": "import"
 },
 "botorch.sampling.qmc.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.sampling.qmc.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.sampling.qmc.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "botorch.sampling.qmc.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.settings": {
  "data": {
   "shadows": "botorch.settings"
  },
  "type": "import"
 },
 "botorch.settings.BotorchWarning": {
  "data": {
   "shadows": "botorch.exceptions.BotorchWarning"
  },
  "type": "import"
 },
 "botorch.settings.LOG_LEVEL_DEFAULT": {
  "data": {
   "shadows": "botorch.logging.LOG_LEVEL_DEFAULT"
  },
  "type": "import"
 },
 "botorch.settings._Flag": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "class"
 },
 "botorch.settings._Flag.__enter__": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "botorch.settings._Flag.__exit__": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "botorch.settings._Flag.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "botorch.settings._Flag._set_state": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "bool",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "botorch.settings._Flag.off": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "bool",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "botorch.settings._Flag.on": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "bool",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "botorch.settings.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.settings.debug": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "bool",
    "botorch.settings._Flag",
    "botorch.settings.suppress_botorch_warnings"
   ]
  },
  "type": "class"
 },
 "botorch.settings.debug._set_state": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "bool",
    "botorch.settings.suppress_botorch_warnings",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "botorch.settings.log_level": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "botorch.logging.LOG_LEVEL_DEFAULT",
    "int"
   ]
  },
  "type": "class"
 },
 "botorch.settings.log_level.__enter__": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "botorch.settings.log_level.__exit__": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "botorch.settings.log_level.__init__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "botorch.logging.LOG_LEVEL_DEFAULT",
    "int"
   ]
  },
  "type": "function"
 },
 "botorch.settings.log_level._set_level": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "botorch.logging.logger.setLevel",
    "classmethod",
    "int"
   ]
  },
  "type": "function"
 },
 "botorch.settings.logger": {
  "data": {
   "shadows": "botorch.logging.logger"
  },
  "type": "import"
 },
 "botorch.settings.propagate_grads": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "bool",
    "botorch.settings._Flag"
   ]
  },
  "type": "class"
 },
 "botorch.settings.suppress_botorch_warnings": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "bool",
    "botorch.exceptions.BotorchWarning",
    "botorch.settings.warnings"
   ]
  },
  "type": "function"
 },
 "botorch.settings.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "botorch.settings.validate_input_scaling": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "bool",
    "botorch.settings._Flag"
   ]
  },
  "type": "class"
 },
 "botorch.settings.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "botorch.test_functions": {
  "data": {},
  "type": "module"
 },
 "botorch.test_functions.Ackley": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.Ackley"
  },
  "type": "import"
 },
 "botorch.test_functions.AugmentedBranin": {
  "data": {
   "shadows": "botorch.test_functions.multi_fidelity.AugmentedBranin"
  },
  "type": "import"
 },
 "botorch.test_functions.AugmentedHartmann": {
  "data": {
   "shadows": "botorch.test_functions.multi_fidelity.AugmentedHartmann"
  },
  "type": "import"
 },
 "botorch.test_functions.AugmentedRosenbrock": {
  "data": {
   "shadows": "botorch.test_functions.multi_fidelity.AugmentedRosenbrock"
  },
  "type": "import"
 },
 "botorch.test_functions.BNH": {
  "data": {
   "shadows": "botorch.test_functions.multi_objective.BNH"
  },
  "type": "import"
 },
 "botorch.test_functions.Beale": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.Beale"
  },
  "type": "import"
 },
 "botorch.test_functions.Branin": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.Branin"
  },
  "type": "import"
 },
 "botorch.test_functions.BraninCurrin": {
  "data": {
   "shadows": "botorch.test_functions.multi_objective.BraninCurrin"
  },
  "type": "import"
 },
 "botorch.test_functions.Bukin": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.Bukin"
  },
  "type": "import"
 },
 "botorch.test_functions.C2DTLZ2": {
  "data": {
   "shadows": "botorch.test_functions.multi_objective.C2DTLZ2"
  },
  "type": "import"
 },
 "botorch.test_functions.CONSTR": {
  "data": {
   "shadows": "botorch.test_functions.multi_objective.CONSTR"
  },
  "type": "import"
 },
 "botorch.test_functions.ConstrainedBraninCurrin": {
  "data": {
   "shadows": "botorch.test_functions.multi_objective.ConstrainedBraninCurrin"
  },
  "type": "import"
 },
 "botorch.test_functions.Cosine8": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.Cosine8"
  },
  "type": "import"
 },
 "botorch.test_functions.DTLZ1": {
  "data": {
   "shadows": "botorch.test_functions.multi_objective.DTLZ1"
  },
  "type": "import"
 },
 "botorch.test_functions.DTLZ2": {
  "data": {
   "shadows": "botorch.test_functions.multi_objective.DTLZ2"
  },
  "type": "import"
 },
 "botorch.test_functions.DixonPrice": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.DixonPrice"
  },
  "type": "import"
 },
 "botorch.test_functions.DropWave": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.DropWave"
  },
  "type": "import"
 },
 "botorch.test_functions.EggHolder": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.EggHolder"
  },
  "type": "import"
 },
 "botorch.test_functions.Griewank": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.Griewank"
  },
  "type": "import"
 },
 "botorch.test_functions.Hartmann": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.Hartmann"
  },
  "type": "import"
 },
 "botorch.test_functions.HolderTable": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.HolderTable"
  },
  "type": "import"
 },
 "botorch.test_functions.Levy": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.Levy"
  },
  "type": "import"
 },
 "botorch.test_functions.Michalewicz": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.Michalewicz"
  },
  "type": "import"
 },
 "botorch.test_functions.Powell": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.Powell"
  },
  "type": "import"
 },
 "botorch.test_functions.Rastrigin": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.Rastrigin"
  },
  "type": "import"
 },
 "botorch.test_functions.Rosenbrock": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.Rosenbrock"
  },
  "type": "import"
 },
 "botorch.test_functions.SRN": {
  "data": {
   "shadows": "botorch.test_functions.multi_objective.SRN"
  },
  "type": "import"
 },
 "botorch.test_functions.Shekel": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.Shekel"
  },
  "type": "import"
 },
 "botorch.test_functions.SixHumpCamel": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.SixHumpCamel"
  },
  "type": "import"
 },
 "botorch.test_functions.StyblinskiTang": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.StyblinskiTang"
  },
  "type": "import"
 },
 "botorch.test_functions.SyntheticTestFunction": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.SyntheticTestFunction"
  },
  "type": "import"
 },
 "botorch.test_functions.ThreeHumpCamel": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.ThreeHumpCamel"
  },
  "type": "import"
 },
 "botorch.test_functions.VehicleSafety": {
  "data": {
   "shadows": "botorch.test_functions.multi_objective.VehicleSafety"
  },
  "type": "import"
 },
 "botorch.test_functions.ZDT1": {
  "data": {
   "shadows": "botorch.test_functions.multi_objective.ZDT1"
  },
  "type": "import"
 },
 "botorch.test_functions.ZDT2": {
  "data": {
   "shadows": "botorch.test_functions.multi_objective.ZDT2"
  },
  "type": "import"
 },
 "botorch.test_functions.ZDT3": {
  "data": {
   "shadows": "botorch.test_functions.multi_objective.ZDT3"
  },
  "type": "import"
 },
 "botorch.test_functions.__all__": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "botorch.test_functions.base": {
  "data": {},
  "type": "module"
 },
 "botorch.test_functions.base.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "botorch.test_functions.base.BaseTestProblem": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "abc.ABC",
    "bool",
    "float",
    "int",
    "torch.nn.Module",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.base.BaseTestProblem.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "bool",
    "botorch.test_functions.base.torch",
    "float",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.base.BaseTestProblem.evaluate_true": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.base.BaseTestProblem.forward": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "bool",
    "botorch.test_functions.base.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.base.ConstrainedBaseTestProblem": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "abc.ABC",
    "bool",
    "botorch.test_functions.base.BaseTestProblem",
    "int"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.base.ConstrainedBaseTestProblem.evaluate_slack": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "bool",
    "botorch.test_functions.base.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.base.ConstrainedBaseTestProblem.evaluate_slack_true": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.base.ConstrainedBaseTestProblem.is_feasible": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "bool",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.base.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.test_functions.base.Module": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "botorch.test_functions.base.MultiObjectiveTestProblem": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "botorch.test_functions.base.BaseTestProblem",
    "float",
    "int",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.base.MultiObjectiveTestProblem.__init__": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "bool",
    "botorch.test_functions.base.torch",
    "float",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.base.MultiObjectiveTestProblem.gen_pareto_front": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.base.MultiObjectiveTestProblem.max_hv": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "AttributeError",
    "NotImplementedError",
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.base.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.test_functions.base.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.test_functions.base.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "botorch.test_functions.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "botorch.test_functions.base.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.test_functions.base.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.test_functions.multi_fidelity": {
  "data": {},
  "type": "module"
 },
 "botorch.test_functions.multi_fidelity.AugmentedBranin": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "botorch.test_functions.multi_fidelity.math",
    "botorch.test_functions.synthetic.SyntheticTestFunction"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.multi_fidelity.AugmentedBranin.evaluate_true": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "botorch.test_functions.multi_fidelity.math",
    "botorch.test_functions.multi_fidelity.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_fidelity.AugmentedHartmann": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.SyntheticTestFunction",
    "range"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.multi_fidelity.AugmentedHartmann.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "bool",
    "botorch.test_functions.multi_fidelity.torch",
    "float",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_fidelity.AugmentedHartmann.evaluate_true": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "botorch.test_functions.multi_fidelity.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_fidelity.AugmentedRosenbrock": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.SyntheticTestFunction"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.multi_fidelity.AugmentedRosenbrock.__init__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "float",
    "range",
    "super",
    "tuple",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_fidelity.AugmentedRosenbrock.evaluate_true": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_fidelity.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.test_functions.multi_fidelity.SyntheticTestFunction": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.SyntheticTestFunction"
  },
  "type": "import"
 },
 "botorch.test_functions.multi_fidelity.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.test_functions.multi_fidelity.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.test_functions.multi_fidelity.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "botorch.test_functions.multi_fidelity.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.test_functions.multi_objective": {
  "data": {},
  "type": "module"
 },
 "botorch.test_functions.multi_objective.BNH": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "botorch.test_functions.base.ConstrainedBaseTestProblem",
    "botorch.test_functions.base.MultiObjectiveTestProblem"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.multi_objective.BNH.evaluate_slack_true": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_objective.BNH.evaluate_true": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_objective.Branin": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.Branin"
  },
  "type": "import"
 },
 "botorch.test_functions.multi_objective.BraninCurrin": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "botorch.test_functions.base.MultiObjectiveTestProblem"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.multi_objective.BraninCurrin.__init__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "bool",
    "botorch.test_functions.synthetic.Branin",
    "float",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_objective.BraninCurrin._currin": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.torch",
    "staticmethod",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_objective.BraninCurrin._rescaled_branin": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_objective.BraninCurrin.evaluate_true": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_objective.C2DTLZ2": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "botorch.test_functions.base.ConstrainedBaseTestProblem",
    "botorch.test_functions.multi_objective.DTLZ2"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.multi_objective.C2DTLZ2.evaluate_slack_true": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.test_functions.multi_objective.math",
    "botorch.test_functions.multi_objective.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_objective.CONSTR": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "botorch.test_functions.base.ConstrainedBaseTestProblem",
    "botorch.test_functions.base.MultiObjectiveTestProblem"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.multi_objective.CONSTR.evaluate_slack_true": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_objective.CONSTR.evaluate_true": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_objective.ConstrainedBaseTestProblem": {
  "data": {
   "shadows": "botorch.test_functions.base.ConstrainedBaseTestProblem"
  },
  "type": "import"
 },
 "botorch.test_functions.multi_objective.ConstrainedBraninCurrin": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "botorch.test_functions.base.ConstrainedBaseTestProblem",
    "botorch.test_functions.multi_objective.BraninCurrin"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.multi_objective.ConstrainedBraninCurrin.__init__": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "bool",
    "botorch.test_functions.multi_objective.torch",
    "float",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_objective.ConstrainedBraninCurrin.evaluate_slack_true": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "botorch.utils.transforms.unnormalize",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_objective.DTLZ": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "botorch.test_functions.base.MultiObjectiveTestProblem"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.multi_objective.DTLZ.__init__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "float",
    "int",
    "range",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_objective.DTLZ1": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.DTLZ"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.multi_objective.DTLZ1._max_hv": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_objective.DTLZ1.evaluate_true": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.math",
    "botorch.test_functions.multi_objective.torch",
    "range",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_objective.DTLZ1.gen_pareto_front": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "botorch.utils.sampling.sample_simplex",
    "int",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_objective.DTLZ2": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.DTLZ"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.multi_objective.DTLZ2._max_hv": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.math",
    "float",
    "property",
    "scipy.special.gamma"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_objective.DTLZ2.evaluate_true": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.math",
    "botorch.test_functions.multi_objective.torch",
    "range",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_objective.DTLZ2.gen_pareto_front": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "botorch.utils.sampling.sample_hypersphere",
    "int",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_objective.MultiObjectiveTestProblem": {
  "data": {
   "shadows": "botorch.test_functions.base.MultiObjectiveTestProblem"
  },
  "type": "import"
 },
 "botorch.test_functions.multi_objective.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.test_functions.multi_objective.SRN": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "botorch.test_functions.base.ConstrainedBaseTestProblem",
    "botorch.test_functions.base.MultiObjectiveTestProblem"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.multi_objective.SRN.evaluate_slack_true": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_objective.SRN.evaluate_true": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_objective.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.test_functions.multi_objective.VehicleSafety": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "botorch.test_functions.base.MultiObjectiveTestProblem"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.multi_objective.VehicleSafety.evaluate_true": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_objective.ZDT": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "botorch.test_functions.base.MultiObjectiveTestProblem"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.multi_objective.ZDT.__init__": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "bool",
    "float",
    "int",
    "range",
    "super",
    "type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_objective.ZDT._g": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "staticmethod",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_objective.ZDT1": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.ZDT"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.multi_objective.ZDT1.evaluate_true": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_objective.ZDT1.gen_pareto_front": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.torch",
    "int",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_objective.ZDT2": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.ZDT"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.multi_objective.ZDT2.evaluate_true": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_objective.ZDT2.gen_pareto_front": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.torch",
    "int",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_objective.ZDT3": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.ZDT"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.multi_objective.ZDT3.evaluate_true": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.math",
    "botorch.test_functions.multi_objective.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_objective.ZDT3.gen_pareto_front": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.math",
    "botorch.test_functions.multi_objective.torch",
    "enumerate",
    "int",
    "len",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.multi_objective.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.test_functions.multi_objective.gamma": {
  "data": {
   "shadows": "scipy.special.gamma"
  },
  "type": "import"
 },
 "botorch.test_functions.multi_objective.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "botorch.test_functions.multi_objective.sample_hypersphere": {
  "data": {
   "shadows": "botorch.utils.sampling.sample_hypersphere"
  },
  "type": "import"
 },
 "botorch.test_functions.multi_objective.sample_simplex": {
  "data": {
   "shadows": "botorch.utils.sampling.sample_simplex"
  },
  "type": "import"
 },
 "botorch.test_functions.multi_objective.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.test_functions.multi_objective.unnormalize": {
  "data": {
   "shadows": "botorch.utils.transforms.unnormalize"
  },
  "type": "import"
 },
 "botorch.test_functions.synthetic": {
  "data": {},
  "type": "module"
 },
 "botorch.test_functions.synthetic.Ackley": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "bool",
    "botorch.test_functions.synthetic.SyntheticTestFunction"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.synthetic.Ackley.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "bool",
    "botorch.test_functions.synthetic.math",
    "float",
    "int",
    "range",
    "super",
    "tuple",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.Ackley.evaluate_true": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.math",
    "botorch.test_functions.synthetic.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.BaseTestProblem": {
  "data": {
   "shadows": "botorch.test_functions.base.BaseTestProblem"
  },
  "type": "import"
 },
 "botorch.test_functions.synthetic.Beale": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.SyntheticTestFunction"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.synthetic.Beale.evaluate_true": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.Branin": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.SyntheticTestFunction",
    "botorch.test_functions.synthetic.math"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.synthetic.Branin.evaluate_true": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.math",
    "botorch.test_functions.synthetic.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.Bukin": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "bool",
    "botorch.test_functions.synthetic.SyntheticTestFunction"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.synthetic.Bukin.evaluate_true": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.Cosine8": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.SyntheticTestFunction",
    "range",
    "tuple"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.synthetic.Cosine8.evaluate_true": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.math",
    "botorch.test_functions.synthetic.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.DixonPrice": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.SyntheticTestFunction"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.synthetic.DixonPrice.__init__": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "bool",
    "botorch.test_functions.synthetic.math",
    "float",
    "range",
    "super",
    "tuple",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.DixonPrice.evaluate_true": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.torch",
    "range",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.DropWave": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.SyntheticTestFunction"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.synthetic.DropWave.evaluate_true": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.EggHolder": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "bool",
    "botorch.test_functions.synthetic.SyntheticTestFunction"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.synthetic.EggHolder.evaluate_true": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.Griewank": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.SyntheticTestFunction"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.synthetic.Griewank.__init__": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "bool",
    "float",
    "range",
    "super",
    "tuple",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.Griewank.evaluate_true": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.torch",
    "range",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.Hartmann": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.SyntheticTestFunction"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.synthetic.Hartmann.__init__": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "botorch.test_functions.synthetic.torch",
    "float",
    "range",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.Hartmann.evaluate_true": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.Hartmann.optimal_value": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "NotImplementedError",
    "float",
    "property",
    "super"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.Hartmann.optimizers": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "NotImplementedError",
    "property",
    "super",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.HolderTable": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.SyntheticTestFunction"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.synthetic.HolderTable.evaluate_true": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.math",
    "botorch.test_functions.synthetic.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.Levy": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.SyntheticTestFunction"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.synthetic.Levy.__init__": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "bool",
    "float",
    "range",
    "super",
    "tuple",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.Levy.evaluate_true": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.math",
    "botorch.test_functions.synthetic.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.test_functions.synthetic.Michalewicz": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.SyntheticTestFunction"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.synthetic.Michalewicz.__init__": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "bool",
    "botorch.test_functions.synthetic.math",
    "botorch.test_functions.synthetic.torch",
    "float",
    "range",
    "super",
    "tuple",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.Michalewicz.evaluate_true": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.math",
    "botorch.test_functions.synthetic.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.Michalewicz.optimizers": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "NotImplementedError",
    "property",
    "super",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.test_functions.synthetic.Powell": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.SyntheticTestFunction"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.synthetic.Powell.__init__": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "bool",
    "float",
    "range",
    "super",
    "tuple",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.Powell.evaluate_true": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.torch",
    "range",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.Rastrigin": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.SyntheticTestFunction"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.synthetic.Rastrigin.__init__": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "bool",
    "float",
    "range",
    "super",
    "tuple",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.Rastrigin.evaluate_true": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.math",
    "botorch.test_functions.synthetic.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.Rosenbrock": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.SyntheticTestFunction"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.synthetic.Rosenbrock.__init__": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "bool",
    "float",
    "range",
    "super",
    "tuple",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.Rosenbrock.evaluate_true": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.Shekel": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.SyntheticTestFunction"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.synthetic.Shekel.__init__": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "bool",
    "botorch.test_functions.synthetic.torch",
    "float",
    "int",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.Shekel.evaluate_true": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.torch",
    "range",
    "sum",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.SixHumpCamel": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.SyntheticTestFunction"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.synthetic.SixHumpCamel.evaluate_true": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.StyblinskiTang": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.SyntheticTestFunction"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.synthetic.StyblinskiTang.__init__": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "bool",
    "float",
    "range",
    "super",
    "tuple",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.StyblinskiTang.evaluate_true": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.SyntheticTestFunction": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "botorch.test_functions.base.BaseTestProblem",
    "float",
    "int",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.synthetic.SyntheticTestFunction.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "bool",
    "botorch.test_functions.synthetic.torch",
    "float",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.SyntheticTestFunction.optimal_value": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.test_functions.synthetic.ThreeHumpCamel": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.SyntheticTestFunction"
   ]
  },
  "type": "class"
 },
 "botorch.test_functions.synthetic.ThreeHumpCamel.evaluate_true": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.test_functions.synthetic.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "botorch.test_functions.synthetic.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.test_functions.synthetic.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "botorch.test_functions.synthetic.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.utils": {
  "data": {},
  "type": "module"
 },
 "botorch.utils.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "botorch.utils.apply_constraints": {
  "data": {
   "shadows": "botorch.utils.objective.apply_constraints"
  },
  "type": "import"
 },
 "botorch.utils.approximate_round": {
  "data": {
   "shadows": "botorch.utils.rounding.approximate_round"
  },
  "type": "import"
 },
 "botorch.utils.batched_multinomial": {
  "data": {
   "shadows": "botorch.utils.sampling.batched_multinomial"
  },
  "type": "import"
 },
 "botorch.utils.constraints": {
  "data": {},
  "type": "module"
 },
 "botorch.utils.constraints.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "botorch.utils.constraints.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.utils.constraints.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.utils.constraints.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.utils.constraints.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "botorch.utils.constraints.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.utils.constraints.get_outcome_constraint_transforms": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "functools.partial",
    "torch.Tensor",
    "typing.Callable",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "botorch.utils.constraints.get_outcome_constraint_transforms._oc": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "botorch.utils.constraints.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.utils.constraints.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "botorch.utils.constraints.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.utils.construct_base_samples": {
  "data": {
   "shadows": "botorch.utils.sampling.construct_base_samples"
  },
  "type": "import"
 },
 "botorch.utils.construct_base_samples_from_posterior": {
  "data": {
   "shadows": "botorch.utils.sampling.construct_base_samples_from_posterior"
  },
  "type": "import"
 },
 "botorch.utils.containers": {
  "data": {},
  "type": "module"
 },
 "botorch.utils.containers.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "botorch.utils.containers.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.utils.containers.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.utils.containers.TrainingData": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "torch.Tensor",
    "typing.NamedTuple",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "botorch.utils.draw_sobol_normal_samples": {
  "data": {
   "shadows": "botorch.utils.sampling.draw_sobol_normal_samples"
  },
  "type": "import"
 },
 "botorch.utils.draw_sobol_samples": {
  "data": {
   "shadows": "botorch.utils.sampling.draw_sobol_samples"
  },
  "type": "import"
 },
 "botorch.utils.estimate_feasible_volume": {
  "data": {
   "shadows": "botorch.utils.feasible_volume.estimate_feasible_volume"
  },
  "type": "import"
 },
 "botorch.utils.feasible_volume": {
  "data": {
   "symbols_in_volume": [
    "botorch.logging._get_logger"
   ]
  },
  "type": "module"
 },
 "botorch.utils.feasible_volume.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "botorch.utils.feasible_volume.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.utils.feasible_volume.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.utils.feasible_volume.SobolQMCNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.SobolQMCNormalSampler"
  },
  "type": "import"
 },
 "botorch.utils.feasible_volume.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.utils.feasible_volume.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "botorch.utils.feasible_volume._get_logger": {
  "data": {
   "shadows": "botorch.logging._get_logger"
  },
  "type": "import"
 },
 "botorch.utils.feasible_volume.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.utils.feasible_volume.estimate_feasible_volume": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "bool",
    "botorch.models.model",
    "botorch.models.model.Model",
    "botorch.utils.feasible_volume.get_feasible_samples",
    "botorch.utils.feasible_volume.get_outcome_feasibility_probability",
    "botorch.utils.feasible_volume.logger",
    "botorch.utils.feasible_volume.torch",
    "botorch.utils.sampling.manual_seed",
    "float",
    "int",
    "torch.Tensor",
    "typing.Callable",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "botorch.utils.feasible_volume.get_feasible_samples": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "botorch.utils.feasible_volume.torch",
    "float",
    "torch.Tensor",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "botorch.utils.feasible_volume.get_outcome_feasibility_probability": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "botorch.models.model.Model",
    "botorch.models.model.posterior",
    "botorch.sampling.SobolQMCNormalSampler",
    "botorch.utils.feasible_volume.torch",
    "float",
    "int",
    "oc",
    "sampler",
    "torch.Tensor",
    "typing.Callable",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.utils.feasible_volume.logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "botorch.utils.feasible_volume.manual_seed": {
  "data": {
   "shadows": "botorch.utils.sampling.manual_seed"
  },
  "type": "import"
 },
 "botorch.utils.feasible_volume.model": {
  "data": {
   "shadows": "botorch.models.model"
  },
  "type": "import"
 },
 "botorch.utils.feasible_volume.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.utils.get_objective_weights_transform": {
  "data": {
   "shadows": "botorch.utils.objective.get_objective_weights_transform"
  },
  "type": "import"
 },
 "botorch.utils.get_outcome_constraint_transforms": {
  "data": {
   "shadows": "botorch.utils.constraints.get_outcome_constraint_transforms"
  },
  "type": "import"
 },
 "botorch.utils.manual_seed": {
  "data": {
   "shadows": "botorch.utils.sampling.manual_seed"
  },
  "type": "import"
 },
 "botorch.utils.multi_objective": {
  "data": {},
  "type": "module"
 },
 "botorch.utils.multi_objective.Hypervolume": {
  "data": {
   "shadows": "botorch.utils.multi_objective.hypervolume.Hypervolume"
  },
  "type": "import"
 },
 "botorch.utils.multi_objective.NondominatedPartitioning": {
  "data": {
   "shadows": "botorch.utils.multi_objective.box_decomposition.NondominatedPartitioning"
  },
  "type": "import"
 },
 "botorch.utils.multi_objective.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "botorch.utils.multi_objective.box_decomposition": {
  "data": {},
  "type": "module"
 },
 "botorch.utils.multi_objective.box_decomposition.BotorchError": {
  "data": {
   "shadows": "botorch.exceptions.errors.BotorchError"
  },
  "type": "import"
 },
 "botorch.utils.multi_objective.box_decomposition.BotorchTensorDimensionError": {
  "data": {
   "shadows": "botorch.exceptions.errors.BotorchTensorDimensionError"
  },
  "type": "import"
 },
 "botorch.utils.multi_objective.box_decomposition.Module": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "botorch.utils.multi_objective.box_decomposition.NondominatedPartitioning": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "botorch.utils.multi_objective.box_decomposition.NondominatedPartitioning.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "float",
    "int",
    "super",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.utils.multi_objective.box_decomposition.NondominatedPartitioning._get_augmented_pareto_front_indices": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "botorch.utils.multi_objective.box_decomposition.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.utils.multi_objective.box_decomposition.NondominatedPartitioning._get_hypercell_bounds": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "botorch.utils.multi_objective.box_decomposition.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.utils.multi_objective.box_decomposition.NondominatedPartitioning._update_pareto_Y": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "bool",
    "botorch.utils.multi_objective.box_decomposition.torch",
    "botorch.utils.multi_objective.pareto.is_non_dominated",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "botorch.utils.multi_objective.box_decomposition.NondominatedPartitioning.binary_partition_non_dominated_space": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "botorch.utils.multi_objective.box_decomposition.torch",
    "int",
    "len",
    "round"
   ]
  },
  "type": "function"
 },
 "botorch.utils.multi_objective.box_decomposition.NondominatedPartitioning.compute_hypervolume": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "ValueError",
    "botorch.utils.multi_objective.box_decomposition.torch",
    "float",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.utils.multi_objective.box_decomposition.NondominatedPartitioning.eps": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "AttributeError",
    "botorch.utils.multi_objective.box_decomposition.torch",
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "botorch.utils.multi_objective.box_decomposition.NondominatedPartitioning.get_hypercell_bounds": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "botorch.utils.multi_objective.box_decomposition.torch",
    "float",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.utils.multi_objective.box_decomposition.NondominatedPartitioning.pareto_Y": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "botorch.exceptions.errors.BotorchError",
    "hasattr",
    "property",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.utils.multi_objective.box_decomposition.NondominatedPartitioning.partition_non_dominated_space_2d": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "botorch.exceptions.errors.BotorchTensorDimensionError",
    "botorch.utils.multi_objective.box_decomposition.torch"
   ]
  },
  "type": "function"
 },
 "botorch.utils.multi_objective.box_decomposition.NondominatedPartitioning.update": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.utils.multi_objective.box_decomposition.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.utils.multi_objective.box_decomposition.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.utils.multi_objective.box_decomposition.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.utils.multi_objective.box_decomposition.is_non_dominated": {
  "data": {
   "shadows": "botorch.utils.multi_objective.pareto.is_non_dominated"
  },
  "type": "import"
 },
 "botorch.utils.multi_objective.box_decomposition.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.utils.multi_objective.get_chebyshev_scalarization": {
  "data": {
   "shadows": "botorch.utils.multi_objective.scalarization.get_chebyshev_scalarization"
  },
  "type": "import"
 },
 "botorch.utils.multi_objective.is_non_dominated": {
  "data": {
   "shadows": "botorch.utils.multi_objective.pareto.is_non_dominated"
  },
  "type": "import"
 },
 "botorch.utils.multi_objective.pareto": {
  "data": {},
  "type": "module"
 },
 "botorch.utils.multi_objective.pareto.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.utils.multi_objective.pareto.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.utils.multi_objective.pareto.is_non_dominated": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.utils.multi_objective.scalarization": {
  "data": {},
  "type": "module"
 },
 "botorch.utils.multi_objective.scalarization.BotorchTensorDimensionError": {
  "data": {
   "shadows": "botorch.exceptions.errors.BotorchTensorDimensionError"
  },
  "type": "import"
 },
 "botorch.utils.multi_objective.scalarization.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "botorch.utils.multi_objective.scalarization.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.utils.multi_objective.scalarization.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.utils.multi_objective.scalarization.get_chebyshev_scalarization": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.exceptions.errors.BotorchTensorDimensionError",
    "botorch.utils.multi_objective.scalarization.torch",
    "float",
    "torch.Tensor",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "botorch.utils.multi_objective.scalarization.get_chebyshev_scalarization.obj": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "botorch.utils.transforms.normalize",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.utils.multi_objective.scalarization.normalize": {
  "data": {
   "shadows": "botorch.utils.transforms.normalize"
  },
  "type": "import"
 },
 "botorch.utils.multi_objective.scalarization.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.utils.objective": {
  "data": {},
  "type": "module"
 },
 "botorch.utils.objective.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "botorch.utils.objective.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.utils.objective.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.utils.objective.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.utils.objective.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.utils.objective.apply_constraints": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "botorch.utils.objective.apply_constraints_nonnegative_soft",
    "float",
    "torch.Tensor",
    "typing.Callable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "botorch.utils.objective.apply_constraints_nonnegative_soft": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "botorch.utils.objective.soft_eval_constraint",
    "constraint",
    "float",
    "torch.Tensor",
    "typing.Callable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "botorch.utils.objective.get_objective_weights_transform": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "torch.Tensor",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.utils.objective.get_objective_weights_transform._objective": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "botorch.utils.objective.torch"
   ]
  },
  "type": "function"
 },
 "botorch.utils.objective.soft_eval_constraint": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "botorch.utils.objective.torch",
    "float",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.utils.objective.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.utils.rounding": {
  "data": {},
  "type": "module"
 },
 "botorch.utils.rounding.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.utils.rounding.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.utils.rounding.approximate_round": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "botorch.utils.rounding.torch",
    "float",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.utils.rounding.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.utils.sampling": {
  "data": {},
  "type": "module"
 },
 "botorch.utils.sampling.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "botorch.utils.sampling.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "botorch.utils.sampling.LongTensor": {
  "data": {
   "shadows": "torch.LongTensor"
  },
  "type": "import"
 },
 "botorch.utils.sampling.NormalQMCEngine": {
  "data": {
   "shadows": "botorch.sampling.qmc.NormalQMCEngine"
  },
  "type": "import"
 },
 "botorch.utils.sampling.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.utils.sampling.PolytopeSampler": {
  "data": {
   "lineno": 347
  },
  "type": "class"
 },
 "botorch.utils.sampling.PolytopeSampler.__init__": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "ValueError",
    "botorch.utils.sampling.torch",
    "int",
    "torch.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "botorch.utils.sampling.PolytopeSampler.draw": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "botorch.utils.sampling.sample_polytope",
    "botorch.utils.sampling.torch",
    "int",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.utils.sampling.PolytopeSampler.feasible": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "bool",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.utils.sampling.PolytopeSampler.find_initial_point": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "ValueError",
    "botorch.utils.sampling.scipy",
    "botorch.utils.sampling.torch",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "botorch.utils.sampling.Posterior": {
  "data": {
   "shadows": "botorch.posteriors.posterior.Posterior"
  },
  "type": "import"
 },
 "botorch.utils.sampling.SamplingWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.SamplingWarning"
  },
  "type": "import"
 },
 "botorch.utils.sampling.SobolEngine": {
  "data": {
   "shadows": "torch.quasirandom.SobolEngine"
  },
  "type": "import"
 },
 "botorch.utils.sampling.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.utils.sampling.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "botorch.utils.sampling.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.utils.sampling.batched_multinomial": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "bool",
    "botorch.utils.sampling.torch",
    "int",
    "torch.LongTensor",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.utils.sampling.construct_base_samples": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "bool",
    "botorch.exceptions.warnings.SamplingWarning",
    "botorch.utils.sampling.draw_sobol_normal_samples",
    "botorch.utils.sampling.manual_seed",
    "botorch.utils.sampling.torch",
    "botorch.utils.sampling.warnings",
    "int",
    "torch.Tensor",
    "torch.quasirandom.SobolEngine.MAXDIM",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.utils.sampling.construct_base_samples_from_posterior": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "bool",
    "botorch.posteriors.posterior.Posterior",
    "botorch.utils.sampling.construct_base_samples",
    "botorch.utils.sampling.torch",
    "int",
    "len",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.utils.sampling.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "botorch.utils.sampling.draw_sobol_normal_samples": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "botorch.sampling.qmc.NormalQMCEngine",
    "botorch.utils.sampling.torch",
    "int",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.utils.sampling.draw_sobol_samples": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "botorch.utils.sampling.torch",
    "int",
    "len",
    "range",
    "torch.Tensor",
    "torch.quasirandom.SobolEngine",
    "typing.Iterable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.utils.sampling.manual_seed": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "botorch.utils.sampling.torch",
    "contextlib.contextmanager",
    "int",
    "typing.Generator",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.utils.sampling.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "botorch.utils.sampling.sample_hypersphere": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "bool",
    "botorch.utils.sampling.draw_sobol_normal_samples",
    "botorch.utils.sampling.manual_seed",
    "botorch.utils.sampling.torch",
    "int",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.utils.sampling.sample_polytope": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "botorch.utils.sampling.manual_seed",
    "botorch.utils.sampling.sample_hypersphere",
    "botorch.utils.sampling.torch",
    "enumerate",
    "int",
    "torch.Tensor",
    "typing.Optional",
    "zip"
   ]
  },
  "type": "function"
 },
 "botorch.utils.sampling.sample_simplex": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "bool",
    "botorch.utils.sampling.manual_seed",
    "botorch.utils.sampling.torch",
    "int",
    "torch.Tensor",
    "torch.quasirandom.SobolEngine",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.utils.sampling.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "botorch.utils.sampling.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.utils.sampling.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "botorch.utils.squeeze_last_dim": {
  "data": {
   "shadows": "botorch.utils.transforms.squeeze_last_dim"
  },
  "type": "import"
 },
 "botorch.utils.standardize": {
  "data": {
   "shadows": "botorch.utils.transforms.standardize"
  },
  "type": "import"
 },
 "botorch.utils.t_batch_mode_transform": {
  "data": {
   "shadows": "botorch.utils.transforms.t_batch_mode_transform"
  },
  "type": "import"
 },
 "botorch.utils.testing": {
  "data": {
   "symbols_in_volume": [
    "botorch.utils.testing.torch"
   ]
  },
  "type": "module"
 },
 "botorch.utils.testing.AddedDiagLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.AddedDiagLazyTensor"
  },
  "type": "import"
 },
 "botorch.utils.testing.BaseTestProblem": {
  "data": {
   "shadows": "botorch.test_functions.base.BaseTestProblem"
  },
  "type": "import"
 },
 "botorch.utils.testing.BaseTestProblemBaseTestCase": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "botorch.test_functions.base.BaseTestProblem",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "botorch.utils.testing.BaseTestProblemBaseTestCase.test_forward": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "botorch.utils.testing.torch",
    "f",
    "f.num_objectives"
   ]
  },
  "type": "function"
 },
 "botorch.utils.testing.BotorchTestCase": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "botorch.utils.testing.torch",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "botorch.utils.testing.BotorchTestCase.setUp": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "botorch.settings.debug._set_state",
    "botorch.utils.testing.warnings"
   ]
  },
  "type": "function"
 },
 "botorch.utils.testing.ConstrainedMultiObjectiveTestProblemBaseTestCase": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "botorch.utils.testing.MultiObjectiveTestProblemBaseTestCase"
   ]
  },
  "type": "class"
 },
 "botorch.utils.testing.ConstrainedMultiObjectiveTestProblemBaseTestCase.test_evaluate_slack_true": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "botorch.utils.testing.torch",
    "botorch.utils.transforms.unnormalize",
    "f",
    "f.bounds",
    "f.dim",
    "f.evaluate_slack_true",
    "f.num_constraints",
    "f.to"
   ]
  },
  "type": "function"
 },
 "botorch.utils.testing.ConstrainedMultiObjectiveTestProblemBaseTestCase.test_num_constraints": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "f",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "botorch.utils.testing.DiagLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.DiagLazyTensor"
  },
  "type": "import"
 },
 "botorch.utils.testing.EMPTY_SIZE": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "botorch.utils.testing.GPyTorchPosterior": {
  "data": {
   "shadows": "botorch.posteriors.gpytorch.GPyTorchPosterior"
  },
  "type": "import"
 },
 "botorch.utils.testing.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.utils.testing.MockAcquisitionFunction": {
  "data": {
   "lineno": 186
  },
  "type": "class"
 },
 "botorch.utils.testing.MockAcquisitionFunction.__call__": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "botorch.utils.testing.MockAcquisitionFunction.__init__": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "botorch.utils.testing.MockAcquisitionFunction.set_X_pending": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.utils.testing.MockModel": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "botorch.models.model.Model"
   ]
  },
  "type": "class"
 },
 "botorch.utils.testing.MockModel.__init__": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "botorch.models.model.Model",
    "botorch.utils.testing.MockPosterior",
    "super"
   ]
  },
  "type": "function"
 },
 "botorch.utils.testing.MockModel.batch_shape": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "botorch.utils.testing.torch",
    "property"
   ]
  },
  "type": "function"
 },
 "botorch.utils.testing.MockModel.load_state_dict": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "bool",
    "collections.OrderedDict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.utils.testing.MockModel.num_outputs": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "int",
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "botorch.utils.testing.MockModel.posterior": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "bool",
    "botorch.utils.testing.MockPosterior",
    "int",
    "torch.Tensor",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.utils.testing.MockModel.state_dict": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "botorch.utils.testing.MockPosterior": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "botorch.posteriors.posterior.Posterior"
   ]
  },
  "type": "class"
 },
 "botorch.utils.testing.MockPosterior.__init__": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "botorch.utils.testing.MockPosterior.device": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "botorch.utils.testing.torch",
    "property"
   ]
  },
  "type": "function"
 },
 "botorch.utils.testing.MockPosterior.dtype": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "botorch.utils.testing.torch",
    "property"
   ]
  },
  "type": "function"
 },
 "botorch.utils.testing.MockPosterior.event_shape": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "botorch.utils.testing.torch",
    "property"
   ]
  },
  "type": "function"
 },
 "botorch.utils.testing.MockPosterior.mean": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "botorch.utils.testing.MockPosterior.rsample": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.utils.testing.torch",
    "len",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.utils.testing.MockPosterior.variance": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "botorch.utils.testing.Model": {
  "data": {
   "shadows": "botorch.models.model.Model"
  },
  "type": "import"
 },
 "botorch.utils.testing.MultiObjectiveTestProblemBaseTestCase": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "botorch.utils.testing.BaseTestProblemBaseTestCase"
   ]
  },
  "type": "class"
 },
 "botorch.utils.testing.MultiObjectiveTestProblemBaseTestCase.test_attributes": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "botorch.utils.testing.torch",
    "f",
    "f.bounds.shape",
    "f.dim",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "botorch.utils.testing.MultiObjectiveTestProblemBaseTestCase.test_max_hv": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.utils.testing.torch",
    "f",
    "f._max_hv",
    "f.max_hv",
    "f.to",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "botorch.utils.testing.MultiObjectiveTestProblemBaseTestCase.test_ref_point": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "botorch.utils.testing.torch",
    "f",
    "f._ref_point",
    "f.ref_point",
    "f.to"
   ]
  },
  "type": "function"
 },
 "botorch.utils.testing.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "botorch.utils.testing.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "botorch.utils.testing.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.utils.testing.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "botorch.utils.testing.Posterior": {
  "data": {
   "shadows": "botorch.posteriors.posterior.Posterior"
  },
  "type": "import"
 },
 "botorch.utils.testing.SyntheticTestFunctionBaseTestCase": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "botorch.utils.testing.BaseTestProblemBaseTestCase"
   ]
  },
  "type": "class"
 },
 "botorch.utils.testing.SyntheticTestFunctionBaseTestCase.test_optimal_value": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.utils.testing.torch",
    "f",
    "f._optimal_value",
    "f.negate",
    "f.optimal_value",
    "f.to"
   ]
  },
  "type": "function"
 },
 "botorch.utils.testing.SyntheticTestFunctionBaseTestCase.test_optimizer": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.utils.testing.torch",
    "f",
    "f._check_grad_at_opt",
    "f.optimal_value",
    "f.optimizers.clone",
    "f.to"
   ]
  },
  "type": "function"
 },
 "botorch.utils.testing.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.utils.testing.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "botorch.utils.testing.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "botorch.utils.testing._get_random_data": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "botorch.utils.testing.math",
    "botorch.utils.testing.torch",
    "int",
    "torch.Tensor",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "botorch.utils.testing._get_test_posterior": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "bool",
    "botorch.posteriors.gpytorch.GPyTorchPosterior",
    "botorch.utils.testing.torch",
    "gpytorch.distributions.MultitaskMultivariateNormal",
    "gpytorch.distributions.MultitaskMultivariateNormal.from_independent_mvns",
    "gpytorch.distributions.MultivariateNormal",
    "gpytorch.lazy.AddedDiagLazyTensor",
    "gpytorch.lazy.DiagLazyTensor",
    "int",
    "range"
   ]
  },
  "type": "function"
 },
 "botorch.utils.testing.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.utils.testing.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "botorch.utils.testing.settings": {
  "data": {
   "shadows": "botorch.settings"
  },
  "type": "import"
 },
 "botorch.utils.testing.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.utils.testing.unnormalize": {
  "data": {
   "shadows": "botorch.utils.transforms.unnormalize"
  },
  "type": "import"
 },
 "botorch.utils.testing.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "botorch.utils.torch": {
  "data": {},
  "type": "module"
 },
 "botorch.utils.torch.BufferDict": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "botorch.utils.torch.BufferDict.__call__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "botorch.utils.torch.BufferDict.__contains__": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "botorch.utils.torch.BufferDict.__delitem__": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "botorch.utils.torch.BufferDict.__getitem__": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "botorch.utils.torch.BufferDict.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "botorch.utils.torch.BufferDict",
    "super"
   ]
  },
  "type": "function"
 },
 "botorch.utils.torch.BufferDict.__iter__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "botorch.utils.torch.BufferDict.__len__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "botorch.utils.torch.BufferDict.__setitem__": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "botorch.utils.torch.BufferDict.clear": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "botorch.utils.torch.BufferDict.extra_repr": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "botorch.utils.torch.torch",
    "str"
   ]
  },
  "type": "function"
 },
 "botorch.utils.torch.BufferDict.items": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "botorch.utils.torch.BufferDict.keys": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "botorch.utils.torch.BufferDict.pop": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "botorch.utils.torch.BufferDict.update": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "botorch.utils.torch.BufferDict",
    "collections.OrderedDict",
    "enumerate",
    "isinstance",
    "len",
    "sorted",
    "str",
    "torch._six.container_abcs.Iterable",
    "torch._six.container_abcs.Mapping",
    "type"
   ]
  },
  "type": "function"
 },
 "botorch.utils.torch.BufferDict.values": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "botorch.utils.torch.Module": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "botorch.utils.torch.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "botorch.utils.torch.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.utils.torch.container_abcs": {
  "data": {
   "shadows": "torch._six.container_abcs"
  },
  "type": "import"
 },
 "botorch.utils.torch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.utils.transforms": {
  "data": {},
  "type": "module"
 },
 "botorch.utils.transforms.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "botorch.utils.transforms.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "botorch.utils.transforms.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "botorch.utils.transforms.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "botorch.utils.transforms.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "botorch.utils.transforms.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "botorch.utils.transforms.concatenate_pending_points": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "torch.Tensor",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "botorch.utils.transforms.concatenate_pending_points.decorated": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "botorch.utils.transforms.match_batch_shape",
    "botorch.utils.transforms.torch",
    "functools.wraps",
    "method",
    "torch.Tensor",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "botorch.utils.transforms.convert_to_target_pre_hook": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "botorch.utils.transforms.match_batch_shape": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.utils.transforms.normalize": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.utils.transforms.normalize_indices": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.utils.transforms.squeeze_last_dim": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.utils.transforms.standardize": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "botorch.utils.transforms.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.utils.transforms.t_batch_mode_transform": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "int",
    "torch.Tensor",
    "typing.Any",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "botorch.utils.transforms.t_batch_mode_transform.decorator": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "torch.Tensor",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "botorch.utils.transforms.t_batch_mode_transform.decorator.decorated": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "functools.wraps",
    "method",
    "torch.Tensor",
    "type",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "botorch.utils.transforms.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "botorch.utils.transforms.unnormalize": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "botorch.utils.transforms.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "botorch.version": {
  "data": {},
  "type": "module"
 },
 "botorch.version.version": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "test": {
  "data": {},
  "type": "module"
 },
 "test.acquisition": {
  "data": {},
  "type": "module"
 },
 "test.acquisition.multi_objective": {
  "data": {},
  "type": "module"
 },
 "test.acquisition.multi_objective.test_analytic": {
  "data": {},
  "type": "module"
 },
 "test.acquisition.multi_objective.test_analytic.AnalyticMultiOutputObjective": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.objective.AnalyticMultiOutputObjective"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_analytic.BotorchError": {
  "data": {
   "shadows": "botorch.exceptions.errors.BotorchError"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_analytic.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_analytic.DummyAnalyticMultiOutputObjective": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "botorch.acquisition.multi_objective.objective.AnalyticMultiOutputObjective"
   ]
  },
  "type": "class"
 },
 "test.acquisition.multi_objective.test_analytic.DummyAnalyticMultiOutputObjective.forward": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "test.acquisition.multi_objective.test_analytic.DummyMultiObjectiveAnalyticAcquisitionFunction": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "botorch.acquisition.multi_objective.analytic.MultiObjectiveAnalyticAcquisitionFunction"
   ]
  },
  "type": "class"
 },
 "test.acquisition.multi_objective.test_analytic.DummyMultiObjectiveAnalyticAcquisitionFunction.forward": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "test.acquisition.multi_objective.test_analytic.ExpectedHypervolumeImprovement": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.analytic.ExpectedHypervolumeImprovement"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_analytic.IdentityAnalyticMultiOutputObjective": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.objective.IdentityAnalyticMultiOutputObjective"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_analytic.IdentityMCMultiOutputObjective": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.objective.IdentityMCMultiOutputObjective"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_analytic.MockModel": {
  "data": {
   "shadows": "botorch.utils.testing.MockModel"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_analytic.MockPosterior": {
  "data": {
   "shadows": "botorch.utils.testing.MockPosterior"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_analytic.MultiObjectiveAnalyticAcquisitionFunction": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.analytic.MultiObjectiveAnalyticAcquisitionFunction"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_analytic.NondominatedPartitioning": {
  "data": {
   "shadows": "botorch.utils.multi_objective.box_decomposition.NondominatedPartitioning"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_analytic.TestExpectedHypervolumeImprovement": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.multi_objective.test_analytic.TestExpectedHypervolumeImprovement.test_expected_hypervolume_improvement": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "acqf",
    "acqf._cross_product_indices",
    "acqf.ref_point",
    "botorch.acquisition.multi_objective.analytic.ExpectedHypervolumeImprovement",
    "botorch.exceptions.errors.BotorchError",
    "botorch.utils.multi_objective.box_decomposition.NondominatedPartitioning",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "hasattr",
    "test.acquisition.multi_objective.test_analytic.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.multi_objective.test_analytic.TestMultiObjectiveAnalyticAcquisitionFunction": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.multi_objective.test_analytic.TestMultiObjectiveAnalyticAcquisitionFunction.test_abstract_raises": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "TypeError",
    "botorch.acquisition.multi_objective.analytic.MultiObjectiveAnalyticAcquisitionFunction"
   ]
  },
  "type": "function"
 },
 "test.acquisition.multi_objective.test_analytic.TestMultiObjectiveAnalyticAcquisitionFunction.test_init": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "botorch.acquisition.multi_objective.objective.IdentityAnalyticMultiOutputObjective",
    "botorch.acquisition.multi_objective.objective.IdentityMCMultiOutputObjective",
    "botorch.exceptions.errors.UnsupportedError",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "test.acquisition.multi_objective.test_analytic.DummyAnalyticMultiOutputObjective",
    "test.acquisition.multi_objective.test_analytic.DummyMultiObjectiveAnalyticAcquisitionFunction",
    "test.acquisition.multi_objective.test_analytic.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.multi_objective.test_analytic.UnsupportedError": {
  "data": {
   "shadows": "botorch.exceptions.errors.UnsupportedError"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_analytic.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_monte_carlo": {
  "data": {},
  "type": "module"
 },
 "test.acquisition.multi_objective.test_monte_carlo.BotorchError": {
  "data": {
   "shadows": "botorch.exceptions.errors.BotorchError"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_monte_carlo.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_monte_carlo.BotorchWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.BotorchWarning"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_monte_carlo.DummyMCMultiOutputObjective": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "botorch.acquisition.multi_objective.objective.MCMultiOutputObjective"
   ]
  },
  "type": "class"
 },
 "test.acquisition.multi_objective.test_monte_carlo.DummyMCMultiOutputObjective.forward": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "test.acquisition.multi_objective.test_monte_carlo.DummyMultiObjectiveMCAcquisitionFunction": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "botorch.acquisition.multi_objective.monte_carlo.MultiObjectiveMCAcquisitionFunction"
   ]
  },
  "type": "class"
 },
 "test.acquisition.multi_objective.test_monte_carlo.DummyMultiObjectiveMCAcquisitionFunction.forward": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "test.acquisition.multi_objective.test_monte_carlo.IIDNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.IIDNormalSampler"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_monte_carlo.IdentityMCMultiOutputObjective": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.objective.IdentityMCMultiOutputObjective"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_monte_carlo.IdentityMCObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.IdentityMCObjective"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_monte_carlo.MCMultiOutputObjective": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.objective.MCMultiOutputObjective"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_monte_carlo.MockModel": {
  "data": {
   "shadows": "botorch.utils.testing.MockModel"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_monte_carlo.MockPosterior": {
  "data": {
   "shadows": "botorch.utils.testing.MockPosterior"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_monte_carlo.MultiObjectiveMCAcquisitionFunction": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.monte_carlo.MultiObjectiveMCAcquisitionFunction"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_monte_carlo.NondominatedPartitioning": {
  "data": {
   "shadows": "botorch.utils.multi_objective.box_decomposition.NondominatedPartitioning"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_monte_carlo.SobolQMCNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.SobolQMCNormalSampler"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_monte_carlo.TestMultiObjectiveMCAcquisitionFunction": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.multi_objective.test_monte_carlo.TestMultiObjectiveMCAcquisitionFunction.test_abstract_raises": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "TypeError",
    "botorch.acquisition.multi_objective.monte_carlo.MultiObjectiveMCAcquisitionFunction"
   ]
  },
  "type": "function"
 },
 "test.acquisition.multi_objective.test_monte_carlo.TestMultiObjectiveMCAcquisitionFunction.test_init": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "botorch.acquisition.multi_objective.objective.IdentityMCMultiOutputObjective",
    "botorch.acquisition.objective.IdentityMCObjective",
    "botorch.exceptions.errors.UnsupportedError",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "test.acquisition.multi_objective.test_monte_carlo.DummyMCMultiOutputObjective",
    "test.acquisition.multi_objective.test_monte_carlo.DummyMultiObjectiveMCAcquisitionFunction",
    "test.acquisition.multi_objective.test_monte_carlo.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.multi_objective.test_monte_carlo.TestQExpectedHypervolumeImprovement": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.multi_objective.test_monte_carlo.TestQExpectedHypervolumeImprovement.test_constrained_q_expected_hypervolume_improvement": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "acqf",
    "botorch.acquisition.multi_objective.monte_carlo.qExpectedHypervolumeImprovement",
    "botorch.sampling.samplers.IIDNormalSampler",
    "botorch.utils.multi_objective.box_decomposition.NondominatedPartitioning",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "test.acquisition.multi_objective.test_monte_carlo.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.multi_objective.test_monte_carlo.TestQExpectedHypervolumeImprovement.test_q_expected_hypervolume_improvement": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ValueError",
    "acqf",
    "acqf.X_pending",
    "acqf.model",
    "acqf.q_subset_indices",
    "acqf.ref_point",
    "acqf.sampler.base_samples",
    "acqf.sampler.base_samples.clone",
    "acqf.sampler.base_samples.shape",
    "acqf.set_X_pending",
    "botorch.acquisition.multi_objective.monte_carlo.qExpectedHypervolumeImprovement",
    "botorch.acquisition.multi_objective.objective.IdentityMCMultiOutputObjective",
    "botorch.exceptions.errors.BotorchError",
    "botorch.exceptions.warnings.BotorchWarning",
    "botorch.sampling.samplers.IIDNormalSampler",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "botorch.settings.debug",
    "botorch.utils.multi_objective.box_decomposition.NondominatedPartitioning",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "hasattr",
    "issubclass",
    "len",
    "test.acquisition.multi_objective.test_monte_carlo.torch",
    "test.acquisition.multi_objective.test_monte_carlo.warnings"
   ]
  },
  "type": "function"
 },
 "test.acquisition.multi_objective.test_monte_carlo.UnsupportedError": {
  "data": {
   "shadows": "botorch.exceptions.errors.UnsupportedError"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_monte_carlo.qExpectedHypervolumeImprovement": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.monte_carlo.qExpectedHypervolumeImprovement"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_monte_carlo.settings": {
  "data": {
   "shadows": "botorch.settings"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_monte_carlo.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_monte_carlo.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_objective": {
  "data": {},
  "type": "module"
 },
 "test.acquisition.multi_objective.test_objective.BotorchError": {
  "data": {
   "shadows": "botorch.exceptions.errors.BotorchError"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_objective.BotorchTensorDimensionError": {
  "data": {
   "shadows": "botorch.exceptions.errors.BotorchTensorDimensionError"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_objective.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_objective.IdentityMCMultiOutputObjective": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.objective.IdentityMCMultiOutputObjective"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_objective.MCMultiOutputObjective": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.objective.MCMultiOutputObjective"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_objective.MockPosterior": {
  "data": {
   "shadows": "botorch.utils.testing.MockPosterior"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_objective.Standardize": {
  "data": {
   "shadows": "botorch.models.transforms.outcome.Standardize"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_objective.TestIdentityMCMultiOutputObjective": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.multi_objective.test_objective.TestIdentityMCMultiOutputObjective.test_identity_mc_multi_output_objective": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "botorch.acquisition.multi_objective.objective.IdentityMCMultiOutputObjective",
    "botorch.exceptions.errors.BotorchError",
    "botorch.exceptions.errors.BotorchTensorDimensionError",
    "objective",
    "test.acquisition.multi_objective.test_objective.itertools",
    "test.acquisition.multi_objective.test_objective.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.multi_objective.test_objective.TestMCMultiOutputObjective": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.multi_objective.test_objective.TestMCMultiOutputObjective.test_abstract_raises": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "TypeError",
    "botorch.acquisition.multi_objective.objective.MCMultiOutputObjective"
   ]
  },
  "type": "function"
 },
 "test.acquisition.multi_objective.test_objective.TestUnstandardizeMultiOutputObjective": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.multi_objective.test_objective.TestUnstandardizeMultiOutputObjective.test_unstandardize_mo_objective": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "botorch.acquisition.multi_objective.objective.UnstandardizeAnalyticMultiOutputObjective",
    "botorch.acquisition.multi_objective.objective.UnstandardizeMCMultiOutputObjective",
    "botorch.exceptions.errors.BotorchTensorDimensionError",
    "botorch.models.transforms.outcome.Standardize",
    "botorch.utils.testing.MockPosterior",
    "objective",
    "objective_class",
    "test.acquisition.multi_objective.test_objective.itertools",
    "test.acquisition.multi_objective.test_objective.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.multi_objective.test_objective.TestWeightedMCMultiOutputObjective": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.multi_objective.test_objective.TestWeightedMCMultiOutputObjective.test_weighted_mc_multi_output_objective": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "botorch.acquisition.multi_objective.objective.WeightedMCMultiOutputObjective",
    "botorch.exceptions.errors.BotorchTensorDimensionError",
    "objective",
    "test.acquisition.multi_objective.test_objective.itertools",
    "test.acquisition.multi_objective.test_objective.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.multi_objective.test_objective.UnstandardizeAnalyticMultiOutputObjective": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.objective.UnstandardizeAnalyticMultiOutputObjective"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_objective.UnstandardizeMCMultiOutputObjective": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.objective.UnstandardizeMCMultiOutputObjective"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_objective.WeightedMCMultiOutputObjective": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.objective.WeightedMCMultiOutputObjective"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_objective.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "test.acquisition.multi_objective.test_objective.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.acquisition.test_acquisition": {
  "data": {},
  "type": "module"
 },
 "test.acquisition.test_acquisition.AcquisitionFunction": {
  "data": {
   "shadows": "botorch.acquisition.acquisition.AcquisitionFunction"
  },
  "type": "import"
 },
 "test.acquisition.test_acquisition.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.acquisition.test_acquisition.OneShotAcquisitionFunction": {
  "data": {
   "shadows": "botorch.acquisition.acquisition.OneShotAcquisitionFunction"
  },
  "type": "import"
 },
 "test.acquisition.test_acquisition.TestAcquisitionFunction": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_acquisition.TestAcquisitionFunction.test_abstract_raises": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "TypeError",
    "botorch.acquisition.acquisition.AcquisitionFunction"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_acquisition.TestOneShotAcquisitionFunction": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_acquisition.TestOneShotAcquisitionFunction.test_abstract_raises": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "TypeError",
    "botorch.acquisition.acquisition.OneShotAcquisitionFunction"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_active_learning": {
  "data": {},
  "type": "module"
 },
 "test.acquisition.test_active_learning.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.acquisition.test_active_learning.GPyTorchPosterior": {
  "data": {
   "shadows": "botorch.posteriors.gpytorch.GPyTorchPosterior"
  },
  "type": "import"
 },
 "test.acquisition.test_active_learning.IIDNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.IIDNormalSampler"
  },
  "type": "import"
 },
 "test.acquisition.test_active_learning.IdentityMCObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.IdentityMCObjective"
  },
  "type": "import"
 },
 "test.acquisition.test_active_learning.MockModel": {
  "data": {
   "shadows": "botorch.utils.testing.MockModel"
  },
  "type": "import"
 },
 "test.acquisition.test_active_learning.MockPosterior": {
  "data": {
   "shadows": "botorch.utils.testing.MockPosterior"
  },
  "type": "import"
 },
 "test.acquisition.test_active_learning.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "test.acquisition.test_active_learning.ScalarizedObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.ScalarizedObjective"
  },
  "type": "import"
 },
 "test.acquisition.test_active_learning.SobolQMCNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.SobolQMCNormalSampler"
  },
  "type": "import"
 },
 "test.acquisition.test_active_learning.TestQNegIntegratedPosteriorVariance": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_active_learning.TestQNegIntegratedPosteriorVariance.test_init": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "botorch.acquisition.active_learning.qNegIntegratedPosteriorVariance",
    "botorch.sampling.samplers.IIDNormalSampler",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "test.acquisition.test_active_learning.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_active_learning.TestQNegIntegratedPosteriorVariance.test_q_neg_int_post_variance": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "botorch.acquisition.active_learning.qNegIntegratedPosteriorVariance",
    "botorch.acquisition.objective.IdentityMCObjective",
    "botorch.acquisition.objective.ScalarizedObjective",
    "botorch.exceptions.errors.UnsupportedError",
    "botorch.posteriors.gpytorch.GPyTorchPosterior",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "gpytorch.distributions.MultitaskMultivariateNormal",
    "qNIPV",
    "test.acquisition.test_active_learning.torch",
    "unittest.mock.PropertyMock",
    "unittest.mock.patch",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_active_learning.UnsupportedError": {
  "data": {
   "shadows": "botorch.exceptions.errors.UnsupportedError"
  },
  "type": "import"
 },
 "test.acquisition.test_active_learning.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "test.acquisition.test_active_learning.qNegIntegratedPosteriorVariance": {
  "data": {
   "shadows": "botorch.acquisition.active_learning.qNegIntegratedPosteriorVariance"
  },
  "type": "import"
 },
 "test.acquisition.test_active_learning.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.acquisition.test_analytic": {
  "data": {},
  "type": "module"
 },
 "test.acquisition.test_analytic.AnalyticAcquisitionFunction": {
  "data": {
   "shadows": "botorch.acquisition.analytic.AnalyticAcquisitionFunction"
  },
  "type": "import"
 },
 "test.acquisition.test_analytic.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.acquisition.test_analytic.ConstrainedExpectedImprovement": {
  "data": {
   "shadows": "botorch.acquisition.analytic.ConstrainedExpectedImprovement"
  },
  "type": "import"
 },
 "test.acquisition.test_analytic.DummyAnalyticAcquisitionFunction": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "botorch.acquisition.analytic.AnalyticAcquisitionFunction"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_analytic.DummyAnalyticAcquisitionFunction.forward": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "test.acquisition.test_analytic.ExpectedImprovement": {
  "data": {
   "shadows": "botorch.acquisition.analytic.ExpectedImprovement"
  },
  "type": "import"
 },
 "test.acquisition.test_analytic.FixedNoiseGP": {
  "data": {
   "shadows": "botorch.models.FixedNoiseGP"
  },
  "type": "import"
 },
 "test.acquisition.test_analytic.GPyTorchPosterior": {
  "data": {
   "shadows": "botorch.posteriors.GPyTorchPosterior"
  },
  "type": "import"
 },
 "test.acquisition.test_analytic.IdentityMCObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.IdentityMCObjective"
  },
  "type": "import"
 },
 "test.acquisition.test_analytic.MockModel": {
  "data": {
   "shadows": "botorch.utils.testing.MockModel"
  },
  "type": "import"
 },
 "test.acquisition.test_analytic.MockPosterior": {
  "data": {
   "shadows": "botorch.utils.testing.MockPosterior"
  },
  "type": "import"
 },
 "test.acquisition.test_analytic.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "test.acquisition.test_analytic.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.acquisition.test_analytic.NEI_NOISE": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "test.acquisition.test_analytic.NoisyExpectedImprovement": {
  "data": {
   "shadows": "botorch.acquisition.analytic.NoisyExpectedImprovement"
  },
  "type": "import"
 },
 "test.acquisition.test_analytic.PosteriorMean": {
  "data": {
   "shadows": "botorch.acquisition.analytic.PosteriorMean"
  },
  "type": "import"
 },
 "test.acquisition.test_analytic.ProbabilityOfImprovement": {
  "data": {
   "shadows": "botorch.acquisition.analytic.ProbabilityOfImprovement"
  },
  "type": "import"
 },
 "test.acquisition.test_analytic.ScalarizedObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.ScalarizedObjective"
  },
  "type": "import"
 },
 "test.acquisition.test_analytic.SingleTaskGP": {
  "data": {
   "shadows": "botorch.models.SingleTaskGP"
  },
  "type": "import"
 },
 "test.acquisition.test_analytic.TestAnalyticAcquisitionFunction": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_analytic.TestAnalyticAcquisitionFunction.test_abstract_raises": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "TypeError",
    "botorch.acquisition.analytic.AnalyticAcquisitionFunction",
    "botorch.exceptions.UnsupportedError",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "test.acquisition.test_analytic.DummyAnalyticAcquisitionFunction",
    "test.acquisition.test_analytic.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_analytic.TestConstrainedExpectedImprovement": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_analytic.TestConstrainedExpectedImprovement.test_constrained_expected_improvement": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "ValueError",
    "botorch.acquisition.analytic.ConstrainedExpectedImprovement",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "ei",
    "module",
    "module_min",
    "test.acquisition.test_analytic.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_analytic.TestConstrainedExpectedImprovement.test_constrained_expected_improvement_batch": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "botorch.acquisition.analytic.ConstrainedExpectedImprovement",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "ei",
    "ei.shape",
    "module",
    "test.acquisition.test_analytic.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_analytic.TestExpectedImprovement": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_analytic.TestExpectedImprovement.test_expected_improvement": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "botorch.acquisition.analytic.ExpectedImprovement",
    "botorch.acquisition.objective.ScalarizedObjective",
    "botorch.exceptions.UnsupportedError",
    "botorch.posteriors.GPyTorchPosterior",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "ei",
    "gpytorch.distributions.MultitaskMultivariateNormal",
    "gpytorch.distributions.MultivariateNormal",
    "module",
    "module.set_X_pending",
    "test.acquisition.test_analytic.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_analytic.TestExpectedImprovement.test_expected_improvement_batch": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "botorch.acquisition.analytic.ExpectedImprovement",
    "botorch.acquisition.objective.IdentityMCObjective",
    "botorch.acquisition.objective.ScalarizedObjective",
    "botorch.exceptions.UnsupportedError",
    "botorch.posteriors.GPyTorchPosterior",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "ei",
    "gpytorch.distributions.MultitaskMultivariateNormal",
    "gpytorch.distributions.MultivariateNormal",
    "module",
    "test.acquisition.test_analytic.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_analytic.TestNoisyExpectedImprovement": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_analytic.TestNoisyExpectedImprovement._get_model": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "botorch.models.FixedNoiseGP",
    "test.acquisition.test_analytic.NEI_NOISE",
    "test.acquisition.test_analytic.math",
    "test.acquisition.test_analytic.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_analytic.TestNoisyExpectedImprovement.test_noisy_expected_improvement": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "botorch.acquisition.analytic.NoisyExpectedImprovement",
    "botorch.exceptions.UnsupportedError",
    "botorch.models.SingleTaskGP",
    "nEI",
    "test.acquisition.test_analytic.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_analytic.TestPosteriorMean": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_analytic.TestPosteriorMean.test_posterior_mean": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "botorch.acquisition.analytic.PosteriorMean",
    "botorch.exceptions.UnsupportedError",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "module",
    "test.acquisition.test_analytic.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_analytic.TestPosteriorMean.test_posterior_mean_batch": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "botorch.acquisition.analytic.PosteriorMean",
    "botorch.exceptions.UnsupportedError",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "module",
    "test.acquisition.test_analytic.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_analytic.TestProbabilityOfImprovement": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_analytic.TestProbabilityOfImprovement.test_probability_of_improvement": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "botorch.acquisition.analytic.ProbabilityOfImprovement",
    "botorch.exceptions.UnsupportedError",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "module",
    "test.acquisition.test_analytic.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_analytic.TestProbabilityOfImprovement.test_probability_of_improvement_batch": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "botorch.acquisition.analytic.ProbabilityOfImprovement",
    "botorch.exceptions.UnsupportedError",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "module",
    "test.acquisition.test_analytic.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_analytic.TestUpperConfidenceBound": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_analytic.TestUpperConfidenceBound.test_upper_confidence_bound": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "botorch.acquisition.analytic.UpperConfidenceBound",
    "botorch.exceptions.UnsupportedError",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "module",
    "test.acquisition.test_analytic.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_analytic.TestUpperConfidenceBound.test_upper_confidence_bound_batch": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "botorch.acquisition.analytic.UpperConfidenceBound",
    "botorch.exceptions.UnsupportedError",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "module",
    "test.acquisition.test_analytic.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_analytic.UnsupportedError": {
  "data": {
   "shadows": "botorch.exceptions.UnsupportedError"
  },
  "type": "import"
 },
 "test.acquisition.test_analytic.UpperConfidenceBound": {
  "data": {
   "shadows": "botorch.acquisition.analytic.UpperConfidenceBound"
  },
  "type": "import"
 },
 "test.acquisition.test_analytic.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.acquisition.test_analytic.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.acquisition.test_cost_aware": {
  "data": {},
  "type": "module"
 },
 "test.acquisition.test_cost_aware.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.acquisition.test_cost_aware.CostAwareUtility": {
  "data": {
   "shadows": "botorch.acquisition.cost_aware.CostAwareUtility"
  },
  "type": "import"
 },
 "test.acquisition.test_cost_aware.CostAwareWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.CostAwareWarning"
  },
  "type": "import"
 },
 "test.acquisition.test_cost_aware.GenericCostAwareUtility": {
  "data": {
   "shadows": "botorch.acquisition.cost_aware.GenericCostAwareUtility"
  },
  "type": "import"
 },
 "test.acquisition.test_cost_aware.IIDNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.IIDNormalSampler"
  },
  "type": "import"
 },
 "test.acquisition.test_cost_aware.InverseCostWeightedUtility": {
  "data": {
   "shadows": "botorch.acquisition.cost_aware.InverseCostWeightedUtility"
  },
  "type": "import"
 },
 "test.acquisition.test_cost_aware.MockModel": {
  "data": {
   "shadows": "botorch.utils.testing.MockModel"
  },
  "type": "import"
 },
 "test.acquisition.test_cost_aware.MockPosterior": {
  "data": {
   "shadows": "botorch.utils.testing.MockPosterior"
  },
  "type": "import"
 },
 "test.acquisition.test_cost_aware.TestCostAwareUtilities": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_cost_aware.TestCostAwareUtilities.test_GenericCostAwareUtility": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "botorch.acquisition.cost_aware.GenericCostAwareUtility",
    "cost",
    "test.acquisition.test_cost_aware.torch",
    "u"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_cost_aware.TestCostAwareUtilities.test_GenericCostAwareUtility.cost": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "test.acquisition.test_cost_aware.TestCostAwareUtilities.test_InverseCostWeightedUtility": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "RuntimeError",
    "any",
    "botorch.acquisition.cost_aware.InverseCostWeightedUtility",
    "botorch.exceptions.warnings.CostAwareWarning",
    "botorch.sampling.IIDNormalSampler",
    "botorch.settings.debug",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "icwu",
    "issubclass",
    "test.acquisition.test_cost_aware.torch",
    "test.acquisition.test_cost_aware.warnings"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_cost_aware.TestCostAwareUtilities.test_abstract_raises": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "TypeError",
    "botorch.acquisition.cost_aware.CostAwareUtility"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_cost_aware.settings": {
  "data": {
   "shadows": "botorch.settings"
  },
  "type": "import"
 },
 "test.acquisition.test_cost_aware.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.acquisition.test_cost_aware.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.acquisition.test_fixed_feature": {
  "data": {},
  "type": "module"
 },
 "test.acquisition.test_fixed_feature.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.acquisition.test_fixed_feature.FixedFeatureAcquisitionFunction": {
  "data": {
   "shadows": "botorch.acquisition.fixed_feature.FixedFeatureAcquisitionFunction"
  },
  "type": "import"
 },
 "test.acquisition.test_fixed_feature.SingleTaskGP": {
  "data": {
   "shadows": "botorch.models.SingleTaskGP"
  },
  "type": "import"
 },
 "test.acquisition.test_fixed_feature.TestFixedFeatureAcquisitionFunction": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_fixed_feature.TestFixedFeatureAcquisitionFunction.test_fixed_features": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ValueError",
    "botorch.acquisition.fixed_feature.FixedFeatureAcquisitionFunction",
    "botorch.acquisition.monte_carlo.qExpectedImprovement",
    "botorch.models.SingleTaskGP",
    "qEI",
    "qEI_ff",
    "test.acquisition.test_fixed_feature.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_fixed_feature.qExpectedImprovement": {
  "data": {
   "shadows": "botorch.acquisition.monte_carlo.qExpectedImprovement"
  },
  "type": "import"
 },
 "test.acquisition.test_fixed_feature.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.acquisition.test_knowledge_gradient": {
  "data": {},
  "type": "module"
 },
 "test.acquisition.test_knowledge_gradient.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.acquisition.test_knowledge_gradient.ExitStack": {
  "data": {
   "shadows": "contextlib.ExitStack"
  },
  "type": "import"
 },
 "test.acquisition.test_knowledge_gradient.GPyTorchPosterior": {
  "data": {
   "shadows": "botorch.posteriors.gpytorch.GPyTorchPosterior"
  },
  "type": "import"
 },
 "test.acquisition.test_knowledge_gradient.GenericCostAwareUtility": {
  "data": {
   "shadows": "botorch.acquisition.cost_aware.GenericCostAwareUtility"
  },
  "type": "import"
 },
 "test.acquisition.test_knowledge_gradient.GenericMCObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.GenericMCObjective"
  },
  "type": "import"
 },
 "test.acquisition.test_knowledge_gradient.IIDNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.IIDNormalSampler"
  },
  "type": "import"
 },
 "test.acquisition.test_knowledge_gradient.MockModel": {
  "data": {
   "shadows": "botorch.utils.testing.MockModel"
  },
  "type": "import"
 },
 "test.acquisition.test_knowledge_gradient.MockPosterior": {
  "data": {
   "shadows": "botorch.utils.testing.MockPosterior"
  },
  "type": "import"
 },
 "test.acquisition.test_knowledge_gradient.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "test.acquisition.test_knowledge_gradient.NO": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "test.acquisition.test_knowledge_gradient.PosteriorMean": {
  "data": {
   "shadows": "botorch.acquisition.analytic.PosteriorMean"
  },
  "type": "import"
 },
 "test.acquisition.test_knowledge_gradient.ProjectedAcquisitionFunction": {
  "data": {
   "shadows": "botorch.acquisition.knowledge_gradient.ProjectedAcquisitionFunction"
  },
  "type": "import"
 },
 "test.acquisition.test_knowledge_gradient.ScalarizedObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.ScalarizedObjective"
  },
  "type": "import"
 },
 "test.acquisition.test_knowledge_gradient.SingleTaskGP": {
  "data": {
   "shadows": "botorch.models.SingleTaskGP"
  },
  "type": "import"
 },
 "test.acquisition.test_knowledge_gradient.SobolQMCNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.SobolQMCNormalSampler"
  },
  "type": "import"
 },
 "test.acquisition.test_knowledge_gradient.TestKGUtils": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_knowledge_gradient.TestKGUtils.test_get_value_function": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "botorch.acquisition.analytic.PosteriorMean",
    "botorch.acquisition.knowledge_gradient.ProjectedAcquisitionFunction",
    "botorch.acquisition.knowledge_gradient._get_value_function",
    "botorch.acquisition.monte_carlo.qSimpleRegret",
    "botorch.acquisition.objective.GenericMCObjective",
    "botorch.sampling.samplers.IIDNormalSampler",
    "botorch.utils.testing.MockModel",
    "test.acquisition.test_knowledge_gradient.NO",
    "test.acquisition.test_knowledge_gradient.torch",
    "unittest.mock.Mock",
    "unittest.mock.PropertyMock",
    "unittest.mock.patch",
    "unittest.mock.patch.object",
    "vf"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_knowledge_gradient.TestKGUtils.test_split_fantasy_points": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "ValueError",
    "botorch.acquisition.knowledge_gradient._split_fantasy_points",
    "test.acquisition.test_knowledge_gradient.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_knowledge_gradient.TestQKnowledgeGradient": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_knowledge_gradient.TestQKnowledgeGradient.test_evaluate_kg": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "botorch.acquisition.knowledge_gradient.qKnowledgeGradient",
    "botorch.acquisition.objective.GenericMCObjective",
    "botorch.models.SingleTaskGP",
    "qKG",
    "qKG.evaluate",
    "test.acquisition.test_knowledge_gradient.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_knowledge_gradient.TestQKnowledgeGradient.test_evaluate_q_knowledge_gradient": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "botorch.acquisition.knowledge_gradient.qKnowledgeGradient",
    "botorch.acquisition.objective.GenericMCObjective",
    "botorch.acquisition.objective.ScalarizedObjective",
    "botorch.posteriors.gpytorch.GPyTorchPosterior",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "gpytorch.distributions.MultitaskMultivariateNormal",
    "objective",
    "qKG",
    "qKG.extract_candidates",
    "test.acquisition.test_knowledge_gradient.NO",
    "test.acquisition.test_knowledge_gradient.torch",
    "unittest.mock.PropertyMock",
    "unittest.mock.patch",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_knowledge_gradient.TestQKnowledgeGradient.test_initialize_q_knowledge_gradient": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "botorch.acquisition.knowledge_gradient.qKnowledgeGradient",
    "botorch.acquisition.objective.GenericMCObjective",
    "botorch.acquisition.objective.ScalarizedObjective",
    "botorch.exceptions.errors.UnsupportedError",
    "botorch.sampling.samplers.IIDNormalSampler",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "test.acquisition.test_knowledge_gradient.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_knowledge_gradient.TestQMultiFidelityKnowledgeGradient": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_knowledge_gradient.TestQMultiFidelityKnowledgeGradient.test_evaluate_qMFKG": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "botorch.acquisition.cost_aware.GenericCostAwareUtility",
    "botorch.acquisition.knowledge_gradient.qMultiFidelityKnowledgeGradient",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "cau",
    "contextlib.ExitStack",
    "qMFKG",
    "qMFKG.evaluate",
    "test.acquisition.test_knowledge_gradient.NO",
    "test.acquisition.test_knowledge_gradient.mock_util",
    "test.acquisition.test_knowledge_gradient.torch",
    "unittest.mock.PropertyMock",
    "unittest.mock.patch",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_knowledge_gradient.TestQMultiFidelityKnowledgeGradient.test_evaluate_q_multi_fidelity_knowledge_gradient": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "botorch.acquisition.cost_aware.GenericCostAwareUtility",
    "botorch.acquisition.knowledge_gradient.qMultiFidelityKnowledgeGradient",
    "botorch.acquisition.objective.GenericMCObjective",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "objective",
    "qMFKG",
    "qMFKG.extract_candidates",
    "test.acquisition.test_knowledge_gradient.NO",
    "test.acquisition.test_knowledge_gradient.mock_util",
    "test.acquisition.test_knowledge_gradient.torch",
    "unittest.mock.PropertyMock",
    "unittest.mock.patch",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_knowledge_gradient.TestQMultiFidelityKnowledgeGradient.test_initialize_q_multi_fidelity_knowledge_gradient": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "botorch.acquisition.knowledge_gradient.qMultiFidelityKnowledgeGradient",
    "botorch.exceptions.errors.UnsupportedError",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "test.acquisition.test_knowledge_gradient.torch",
    "unittest.mock.Mock"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_knowledge_gradient.UnsupportedError": {
  "data": {
   "shadows": "botorch.exceptions.errors.UnsupportedError"
  },
  "type": "import"
 },
 "test.acquisition.test_knowledge_gradient._get_value_function": {
  "data": {
   "shadows": "botorch.acquisition.knowledge_gradient._get_value_function"
  },
  "type": "import"
 },
 "test.acquisition.test_knowledge_gradient._split_fantasy_points": {
  "data": {
   "shadows": "botorch.acquisition.knowledge_gradient._split_fantasy_points"
  },
  "type": "import"
 },
 "test.acquisition.test_knowledge_gradient.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "test.acquisition.test_knowledge_gradient.mock_util": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "test.acquisition.test_knowledge_gradient.qKnowledgeGradient": {
  "data": {
   "shadows": "botorch.acquisition.knowledge_gradient.qKnowledgeGradient"
  },
  "type": "import"
 },
 "test.acquisition.test_knowledge_gradient.qMultiFidelityKnowledgeGradient": {
  "data": {
   "shadows": "botorch.acquisition.knowledge_gradient.qMultiFidelityKnowledgeGradient"
  },
  "type": "import"
 },
 "test.acquisition.test_knowledge_gradient.qSimpleRegret": {
  "data": {
   "shadows": "botorch.acquisition.monte_carlo.qSimpleRegret"
  },
  "type": "import"
 },
 "test.acquisition.test_knowledge_gradient.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.acquisition.test_max_value_entropy_search": {
  "data": {},
  "type": "module"
 },
 "test.acquisition.test_max_value_entropy_search.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.acquisition.test_max_value_entropy_search.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "test.acquisition.test_max_value_entropy_search.GPyTorchPosterior": {
  "data": {
   "shadows": "botorch.posteriors.GPyTorchPosterior"
  },
  "type": "import"
 },
 "test.acquisition.test_max_value_entropy_search.InverseCostWeightedUtility": {
  "data": {
   "shadows": "botorch.acquisition.cost_aware.InverseCostWeightedUtility"
  },
  "type": "import"
 },
 "test.acquisition.test_max_value_entropy_search.MESMockModel": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "botorch.utils.testing.MockModel"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_max_value_entropy_search.MESMockModel.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_max_value_entropy_search.MESMockModel.num_outputs": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_max_value_entropy_search.MESMockModel.posterior": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "bool",
    "botorch.posteriors.GPyTorchPosterior",
    "botorch.utils.testing.MockPosterior",
    "gpytorch.distributions.MultivariateNormal",
    "list",
    "test.acquisition.test_max_value_entropy_search.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_max_value_entropy_search.MockModel": {
  "data": {
   "shadows": "botorch.utils.testing.MockModel"
  },
  "type": "import"
 },
 "test.acquisition.test_max_value_entropy_search.MockPosterior": {
  "data": {
   "shadows": "botorch.utils.testing.MockPosterior"
  },
  "type": "import"
 },
 "test.acquisition.test_max_value_entropy_search.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.acquisition.test_max_value_entropy_search.SobolQMCNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.SobolQMCNormalSampler"
  },
  "type": "import"
 },
 "test.acquisition.test_max_value_entropy_search.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "test.acquisition.test_max_value_entropy_search.TestMaxValueEntropySearch": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_max_value_entropy_search.TestMaxValueEntropySearch.test_q_max_value_entropy": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "botorch.acquisition.max_value_entropy_search.qMaxValueEntropy",
    "botorch.exceptions.errors.UnsupportedError",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "qMVE",
    "qMVE._init_model",
    "qMVE.model",
    "qMVE.set_X_pending",
    "test.acquisition.test_max_value_entropy_search.MESMockModel",
    "test.acquisition.test_max_value_entropy_search.torch",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_max_value_entropy_search.TestMaxValueEntropySearch.test_q_multi_fidelity_max_value_entropy": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "botorch.acquisition.cost_aware.InverseCostWeightedUtility",
    "botorch.acquisition.max_value_entropy_search.qMultiFidelityMaxValueEntropy",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "qMF_MVE",
    "test.acquisition.test_max_value_entropy_search.MESMockModel",
    "test.acquisition.test_max_value_entropy_search.torch",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_max_value_entropy_search.TestMaxValueEntropySearch.test_sample_max_value_Gumbel": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "botorch.acquisition.max_value_entropy_search._sample_max_value_Gumbel",
    "test.acquisition.test_max_value_entropy_search.MESMockModel",
    "test.acquisition.test_max_value_entropy_search.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_max_value_entropy_search.TestMaxValueEntropySearch.test_sample_max_value_Thompson": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "botorch.acquisition.max_value_entropy_search._sample_max_value_Thompson",
    "test.acquisition.test_max_value_entropy_search.MESMockModel",
    "test.acquisition.test_max_value_entropy_search.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_max_value_entropy_search.UnsupportedError": {
  "data": {
   "shadows": "botorch.exceptions.errors.UnsupportedError"
  },
  "type": "import"
 },
 "test.acquisition.test_max_value_entropy_search._sample_max_value_Gumbel": {
  "data": {
   "shadows": "botorch.acquisition.max_value_entropy_search._sample_max_value_Gumbel"
  },
  "type": "import"
 },
 "test.acquisition.test_max_value_entropy_search._sample_max_value_Thompson": {
  "data": {
   "shadows": "botorch.acquisition.max_value_entropy_search._sample_max_value_Thompson"
  },
  "type": "import"
 },
 "test.acquisition.test_max_value_entropy_search.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "test.acquisition.test_max_value_entropy_search.qMaxValueEntropy": {
  "data": {
   "shadows": "botorch.acquisition.max_value_entropy_search.qMaxValueEntropy"
  },
  "type": "import"
 },
 "test.acquisition.test_max_value_entropy_search.qMultiFidelityMaxValueEntropy": {
  "data": {
   "shadows": "botorch.acquisition.max_value_entropy_search.qMultiFidelityMaxValueEntropy"
  },
  "type": "import"
 },
 "test.acquisition.test_max_value_entropy_search.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.acquisition.test_monte_carlo": {
  "data": {},
  "type": "module"
 },
 "test.acquisition.test_monte_carlo.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.acquisition.test_monte_carlo.BotorchWarning": {
  "data": {
   "shadows": "botorch.exceptions.BotorchWarning"
  },
  "type": "import"
 },
 "test.acquisition.test_monte_carlo.DummyMCAcquisitionFunction": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "botorch.acquisition.monte_carlo.MCAcquisitionFunction"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_monte_carlo.DummyMCAcquisitionFunction.forward": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "test.acquisition.test_monte_carlo.IIDNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.IIDNormalSampler"
  },
  "type": "import"
 },
 "test.acquisition.test_monte_carlo.MCAcquisitionFunction": {
  "data": {
   "shadows": "botorch.acquisition.monte_carlo.MCAcquisitionFunction"
  },
  "type": "import"
 },
 "test.acquisition.test_monte_carlo.MockModel": {
  "data": {
   "shadows": "botorch.utils.testing.MockModel"
  },
  "type": "import"
 },
 "test.acquisition.test_monte_carlo.MockPosterior": {
  "data": {
   "shadows": "botorch.utils.testing.MockPosterior"
  },
  "type": "import"
 },
 "test.acquisition.test_monte_carlo.ScalarizedObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.ScalarizedObjective"
  },
  "type": "import"
 },
 "test.acquisition.test_monte_carlo.SobolQMCNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.SobolQMCNormalSampler"
  },
  "type": "import"
 },
 "test.acquisition.test_monte_carlo.TestMCAcquisitionFunction": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_monte_carlo.TestMCAcquisitionFunction.test_abstract_raises": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "TypeError",
    "botorch.acquisition.monte_carlo.MCAcquisitionFunction",
    "botorch.exceptions.UnsupportedError",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "test.acquisition.test_monte_carlo.DummyMCAcquisitionFunction",
    "unittest.mock.PropertyMock",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_monte_carlo.TestQExpectedImprovement": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_monte_carlo.TestQExpectedImprovement.test_q_expected_improvement": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "acqf",
    "acqf.X_pending",
    "acqf.sampler.base_samples",
    "acqf.sampler.base_samples.clone",
    "acqf.sampler.base_samples.shape",
    "acqf.set_X_pending",
    "botorch.acquisition.monte_carlo.qExpectedImprovement",
    "botorch.acquisition.objective.ScalarizedObjective",
    "botorch.exceptions.BotorchWarning",
    "botorch.exceptions.UnsupportedError",
    "botorch.sampling.samplers.IIDNormalSampler",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "botorch.settings.debug",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "issubclass",
    "len",
    "test.acquisition.test_monte_carlo.torch",
    "test.acquisition.test_monte_carlo.warnings"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_monte_carlo.TestQExpectedImprovement.test_q_expected_improvement_batch": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "acqf",
    "acqf.sampler.base_samples",
    "acqf.sampler.base_samples.clone",
    "acqf.sampler.base_samples.shape",
    "botorch.acquisition.monte_carlo.qExpectedImprovement",
    "botorch.sampling.samplers.IIDNormalSampler",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "test.acquisition.test_monte_carlo.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_monte_carlo.TestQNoisyExpectedImprovement": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_monte_carlo.TestQNoisyExpectedImprovement.test_prune_baseline": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "acqf",
    "acqf.X_baseline",
    "botorch.acquisition.monte_carlo.qNoisyExpectedImprovement",
    "botorch.utils.testing.MockModel",
    "test.acquisition.test_monte_carlo.torch",
    "unittest.mock.Mock",
    "unittest.mock.PropertyMock",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_monte_carlo.TestQNoisyExpectedImprovement.test_q_noisy_expected_improvement": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "acqf",
    "acqf.X_pending",
    "acqf.sampler.base_samples",
    "acqf.sampler.base_samples.clone",
    "acqf.sampler.base_samples.shape",
    "acqf.set_X_pending",
    "botorch.acquisition.monte_carlo.qNoisyExpectedImprovement",
    "botorch.exceptions.BotorchWarning",
    "botorch.sampling.samplers.IIDNormalSampler",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "botorch.settings.debug",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "issubclass",
    "len",
    "test.acquisition.test_monte_carlo.torch",
    "test.acquisition.test_monte_carlo.warnings"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_monte_carlo.TestQNoisyExpectedImprovement.test_q_noisy_expected_improvement_batch": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "acqf",
    "acqf.sampler.base_samples",
    "acqf.sampler.base_samples.clone",
    "acqf.sampler.base_samples.shape",
    "botorch.acquisition.monte_carlo.qNoisyExpectedImprovement",
    "botorch.sampling.samplers.IIDNormalSampler",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "test.acquisition.test_monte_carlo.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_monte_carlo.TestQProbabilityOfImprovement": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_monte_carlo.TestQProbabilityOfImprovement.test_q_probability_of_improvement": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "acqf",
    "acqf.X_pending",
    "acqf.sampler.base_samples",
    "acqf.sampler.base_samples.clone",
    "acqf.sampler.base_samples.shape",
    "acqf.set_X_pending",
    "botorch.acquisition.monte_carlo.qProbabilityOfImprovement",
    "botorch.exceptions.BotorchWarning",
    "botorch.sampling.samplers.IIDNormalSampler",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "botorch.settings.debug",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "issubclass",
    "len",
    "test.acquisition.test_monte_carlo.torch",
    "test.acquisition.test_monte_carlo.warnings"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_monte_carlo.TestQProbabilityOfImprovement.test_q_probability_of_improvement_batch": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "acqf",
    "acqf.sampler.base_samples",
    "acqf.sampler.base_samples.clone",
    "acqf.sampler.base_samples.shape",
    "botorch.acquisition.monte_carlo.qProbabilityOfImprovement",
    "botorch.sampling.samplers.IIDNormalSampler",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "test.acquisition.test_monte_carlo.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_monte_carlo.TestQSimpleRegret": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_monte_carlo.TestQSimpleRegret.test_q_simple_regret": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "acqf",
    "acqf.X_pending",
    "acqf.sampler.base_samples",
    "acqf.sampler.base_samples.clone",
    "acqf.sampler.base_samples.shape",
    "acqf.set_X_pending",
    "botorch.acquisition.monte_carlo.qSimpleRegret",
    "botorch.exceptions.BotorchWarning",
    "botorch.sampling.samplers.IIDNormalSampler",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "botorch.settings.debug",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "issubclass",
    "len",
    "test.acquisition.test_monte_carlo.torch",
    "test.acquisition.test_monte_carlo.warnings"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_monte_carlo.TestQSimpleRegret.test_q_simple_regret_batch": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "acqf",
    "acqf.sampler.base_samples",
    "acqf.sampler.base_samples.clone",
    "acqf.sampler.base_samples.shape",
    "botorch.acquisition.monte_carlo.qSimpleRegret",
    "botorch.sampling.samplers.IIDNormalSampler",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "test.acquisition.test_monte_carlo.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_monte_carlo.TestQUpperConfidenceBound": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_monte_carlo.TestQUpperConfidenceBound.test_q_upper_confidence_bound": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "acqf",
    "acqf.X_pending",
    "acqf.sampler.base_samples",
    "acqf.sampler.base_samples.clone",
    "acqf.sampler.base_samples.shape",
    "acqf.set_X_pending",
    "botorch.acquisition.monte_carlo.qUpperConfidenceBound",
    "botorch.exceptions.BotorchWarning",
    "botorch.sampling.samplers.IIDNormalSampler",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "botorch.settings.debug",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "issubclass",
    "len",
    "test.acquisition.test_monte_carlo.torch",
    "test.acquisition.test_monte_carlo.warnings"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_monte_carlo.TestQUpperConfidenceBound.test_q_upper_confidence_bound_batch": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "acqf",
    "acqf.X_pending",
    "acqf.sampler.base_samples",
    "acqf.sampler.base_samples.clone",
    "acqf.sampler.base_samples.shape",
    "acqf.set_X_pending",
    "botorch.acquisition.monte_carlo.qUpperConfidenceBound",
    "botorch.exceptions.BotorchWarning",
    "botorch.sampling.samplers.IIDNormalSampler",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "botorch.settings.debug",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "issubclass",
    "len",
    "test.acquisition.test_monte_carlo.torch",
    "test.acquisition.test_monte_carlo.warnings"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_monte_carlo.UnsupportedError": {
  "data": {
   "shadows": "botorch.exceptions.UnsupportedError"
  },
  "type": "import"
 },
 "test.acquisition.test_monte_carlo.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "test.acquisition.test_monte_carlo.qExpectedImprovement": {
  "data": {
   "shadows": "botorch.acquisition.monte_carlo.qExpectedImprovement"
  },
  "type": "import"
 },
 "test.acquisition.test_monte_carlo.qNoisyExpectedImprovement": {
  "data": {
   "shadows": "botorch.acquisition.monte_carlo.qNoisyExpectedImprovement"
  },
  "type": "import"
 },
 "test.acquisition.test_monte_carlo.qProbabilityOfImprovement": {
  "data": {
   "shadows": "botorch.acquisition.monte_carlo.qProbabilityOfImprovement"
  },
  "type": "import"
 },
 "test.acquisition.test_monte_carlo.qSimpleRegret": {
  "data": {
   "shadows": "botorch.acquisition.monte_carlo.qSimpleRegret"
  },
  "type": "import"
 },
 "test.acquisition.test_monte_carlo.qUpperConfidenceBound": {
  "data": {
   "shadows": "botorch.acquisition.monte_carlo.qUpperConfidenceBound"
  },
  "type": "import"
 },
 "test.acquisition.test_monte_carlo.settings": {
  "data": {
   "shadows": "botorch.settings"
  },
  "type": "import"
 },
 "test.acquisition.test_monte_carlo.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.acquisition.test_monte_carlo.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.acquisition.test_objective": {
  "data": {},
  "type": "module"
 },
 "test.acquisition.test_objective.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.acquisition.test_objective.ConstrainedMCObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.ConstrainedMCObjective"
  },
  "type": "import"
 },
 "test.acquisition.test_objective.GenericMCObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.GenericMCObjective"
  },
  "type": "import"
 },
 "test.acquisition.test_objective.IdentityMCObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.IdentityMCObjective"
  },
  "type": "import"
 },
 "test.acquisition.test_objective.LinearMCObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.LinearMCObjective"
  },
  "type": "import"
 },
 "test.acquisition.test_objective.MCAcquisitionObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.MCAcquisitionObjective"
  },
  "type": "import"
 },
 "test.acquisition.test_objective.ScalarizedObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.ScalarizedObjective"
  },
  "type": "import"
 },
 "test.acquisition.test_objective.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "test.acquisition.test_objective.TestConstrainedMCObjective": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_objective.TestConstrainedMCObjective.test_constrained_mc_objective": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "botorch.acquisition.objective.ConstrainedMCObjective",
    "botorch.utils.apply_constraints",
    "obj",
    "test.acquisition.test_objective.feasible_con",
    "test.acquisition.test_objective.generic_obj",
    "test.acquisition.test_objective.infeasible_con",
    "test.acquisition.test_objective.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_objective.TestGenericMCObjective": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_objective.TestGenericMCObjective.test_generic_mc_objective": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "botorch.acquisition.objective.GenericMCObjective",
    "obj",
    "test.acquisition.test_objective.generic_obj",
    "test.acquisition.test_objective.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_objective.TestIdentityMCObjective": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_objective.TestIdentityMCObjective.test_identity_mc_objective": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "botorch.acquisition.objective.IdentityMCObjective",
    "obj",
    "test.acquisition.test_objective.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_objective.TestLinearMCObjective": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_objective.TestLinearMCObjective.test_linear_mc_objective": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "botorch.acquisition.objective.LinearMCObjective",
    "obj",
    "test.acquisition.test_objective.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_objective.TestMCAcquisitionObjective": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_objective.TestMCAcquisitionObjective.test_abstract_raises": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "TypeError",
    "botorch.acquisition.objective.MCAcquisitionObjective"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_objective.TestScalarizedObjective": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_objective.TestScalarizedObjective.test_affine_acquisition_objective": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "botorch.acquisition.objective.ScalarizedObjective",
    "botorch.utils.testing._get_test_posterior",
    "obj",
    "test.acquisition.test_objective.itertools",
    "test.acquisition.test_objective.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_objective._get_test_posterior": {
  "data": {
   "shadows": "botorch.utils.testing._get_test_posterior"
  },
  "type": "import"
 },
 "test.acquisition.test_objective.apply_constraints": {
  "data": {
   "shadows": "botorch.utils.apply_constraints"
  },
  "type": "import"
 },
 "test.acquisition.test_objective.feasible_con": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "test.acquisition.test_objective.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_objective.generic_obj": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "test.acquisition.test_objective.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_objective.infeasible_con": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "test.acquisition.test_objective.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_objective.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "test.acquisition.test_objective.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.acquisition.test_penalized": {
  "data": {},
  "type": "module"
 },
 "test.acquisition.test_penalized.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.acquisition.test_penalized.ExpectedImprovement": {
  "data": {
   "shadows": "botorch.acquisition.analytic.ExpectedImprovement"
  },
  "type": "import"
 },
 "test.acquisition.test_penalized.GaussianPenalty": {
  "data": {
   "shadows": "botorch.acquisition.penalized.GaussianPenalty"
  },
  "type": "import"
 },
 "test.acquisition.test_penalized.GroupLassoPenalty": {
  "data": {
   "shadows": "botorch.acquisition.penalized.GroupLassoPenalty"
  },
  "type": "import"
 },
 "test.acquisition.test_penalized.IIDNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.IIDNormalSampler"
  },
  "type": "import"
 },
 "test.acquisition.test_penalized.L2Penalty": {
  "data": {
   "shadows": "botorch.acquisition.penalized.L2Penalty"
  },
  "type": "import"
 },
 "test.acquisition.test_penalized.MockModel": {
  "data": {
   "shadows": "botorch.utils.testing.MockModel"
  },
  "type": "import"
 },
 "test.acquisition.test_penalized.MockPosterior": {
  "data": {
   "shadows": "botorch.utils.testing.MockPosterior"
  },
  "type": "import"
 },
 "test.acquisition.test_penalized.PenalizedAcquisitionFunction": {
  "data": {
   "shadows": "botorch.acquisition.penalized.PenalizedAcquisitionFunction"
  },
  "type": "import"
 },
 "test.acquisition.test_penalized.TestGaussianPenalty": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_penalized.TestGaussianPenalty.test_gaussian_penalty": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "botorch.acquisition.penalized.GaussianPenalty",
    "gaussian_module",
    "test.acquisition.test_penalized.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_penalized.TestGroupLassoPenalty": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_penalized.TestGroupLassoPenalty.test_group_lasso_penalty": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.acquisition.penalized.GroupLassoPenalty",
    "botorch.acquisition.penalized.group_lasso_regularizer",
    "group_lasso_module",
    "test.acquisition.test_penalized.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_penalized.TestL2Penalty": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_penalized.TestL2Penalty.test_gaussian_penalty": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "botorch.acquisition.penalized.L2Penalty",
    "l2_module",
    "test.acquisition.test_penalized.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_penalized.TestPenalizedAcquisitionFunction": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_penalized.TestPenalizedAcquisitionFunction.test_penalized_acquisition_function": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "acqf",
    "acqf.set_X_pending",
    "botorch.acquisition.analytic.ExpectedImprovement",
    "botorch.acquisition.monte_carlo.qExpectedImprovement",
    "botorch.acquisition.penalized.GroupLassoPenalty",
    "botorch.acquisition.penalized.L2Penalty",
    "botorch.acquisition.penalized.PenalizedAcquisitionFunction",
    "botorch.exceptions.UnsupportedError",
    "botorch.sampling.samplers.IIDNormalSampler",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "l2_module",
    "penalty",
    "raw_acqf",
    "test.acquisition.test_penalized.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_penalized.UnsupportedError": {
  "data": {
   "shadows": "botorch.exceptions.UnsupportedError"
  },
  "type": "import"
 },
 "test.acquisition.test_penalized.group_lasso_regularizer": {
  "data": {
   "shadows": "botorch.acquisition.penalized.group_lasso_regularizer"
  },
  "type": "import"
 },
 "test.acquisition.test_penalized.qExpectedImprovement": {
  "data": {
   "shadows": "botorch.acquisition.monte_carlo.qExpectedImprovement"
  },
  "type": "import"
 },
 "test.acquisition.test_penalized.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.acquisition.test_utils": {
  "data": {},
  "type": "module"
 },
 "test.acquisition.test_utils.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.acquisition.test_utils.DummyMCMultiOutputObjective": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "botorch.acquisition.multi_objective.MCMultiOutputObjective"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_utils.DummyMCMultiOutputObjective.forward": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_utils.DummyMCObjective": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "botorch.acquisition.objective.MCAcquisitionObjective"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_utils.DummyMCObjective.forward": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_utils.ExitStack": {
  "data": {
   "shadows": "contextlib.ExitStack"
  },
  "type": "import"
 },
 "test.acquisition.test_utils.GenericMCObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.GenericMCObjective"
  },
  "type": "import"
 },
 "test.acquisition.test_utils.IIDNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.IIDNormalSampler"
  },
  "type": "import"
 },
 "test.acquisition.test_utils.MCAcquisitionObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.MCAcquisitionObjective"
  },
  "type": "import"
 },
 "test.acquisition.test_utils.MCMultiOutputObjective": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.MCMultiOutputObjective"
  },
  "type": "import"
 },
 "test.acquisition.test_utils.MockModel": {
  "data": {
   "shadows": "botorch.utils.testing.MockModel"
  },
  "type": "import"
 },
 "test.acquisition.test_utils.MockPosterior": {
  "data": {
   "shadows": "botorch.utils.testing.MockPosterior"
  },
  "type": "import"
 },
 "test.acquisition.test_utils.NondominatedPartitioning": {
  "data": {
   "shadows": "botorch.utils.multi_objective.box_decomposition.NondominatedPartitioning"
  },
  "type": "import"
 },
 "test.acquisition.test_utils.SamplingWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.SamplingWarning"
  },
  "type": "import"
 },
 "test.acquisition.test_utils.SobolQMCNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.SobolQMCNormalSampler"
  },
  "type": "import"
 },
 "test.acquisition.test_utils.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "test.acquisition.test_utils.TestFidelityUtils": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_utils.TestFidelityUtils.test_expand_trace_observations": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "botorch.acquisition.utils.expand_trace_observations",
    "range",
    "sum",
    "test.acquisition.test_utils.itertools",
    "test.acquisition.test_utils.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_utils.TestFidelityUtils.test_project_to_target_fidelity": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "botorch.acquisition.utils.project_to_target_fidelity",
    "test.acquisition.test_utils.itertools",
    "test.acquisition.test_utils.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_utils.TestGetAcquisitionFunction": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_utils.TestGetAcquisitionFunction.setUp": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "super",
    "test.acquisition.test_utils.DummyMCMultiOutputObjective",
    "test.acquisition.test_utils.DummyMCObjective",
    "test.acquisition.test_utils.torch",
    "unittest.mock.MagicMock"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_utils.TestGetAcquisitionFunction.test_GetQEHVI": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "ValueError",
    "botorch.acquisition.multi_objective.monte_carlo.__name__",
    "botorch.acquisition.utils.get_acquisition_function",
    "botorch.sampling.samplers.IIDNormalSampler",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "botorch.utils.multi_objective.box_decomposition.NondominatedPartitioning",
    "test.acquisition.test_utils.DummyMCMultiOutputObjective",
    "test.acquisition.test_utils.torch",
    "unittest.mock.ANY",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_utils.TestGetAcquisitionFunction.test_GetQEI": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "botorch.acquisition.multi_objective.monte_carlo.__name__",
    "botorch.acquisition.utils.get_acquisition_function",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "test.acquisition.test_utils.torch",
    "unittest.mock.ANY",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_utils.TestGetAcquisitionFunction.test_GetQNEI": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "botorch.acquisition.multi_objective.monte_carlo.__name__",
    "botorch.acquisition.utils.get_acquisition_function",
    "botorch.sampling.samplers.IIDNormalSampler",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "test.acquisition.test_utils.torch",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_utils.TestGetAcquisitionFunction.test_GetQPI": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "botorch.acquisition.multi_objective.monte_carlo.__name__",
    "botorch.acquisition.utils.get_acquisition_function",
    "botorch.sampling.samplers.IIDNormalSampler",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "test.acquisition.test_utils.torch",
    "unittest.mock.ANY",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_utils.TestGetAcquisitionFunction.test_GetQSR": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "botorch.acquisition.multi_objective.monte_carlo.__name__",
    "botorch.acquisition.utils.get_acquisition_function",
    "botorch.sampling.samplers.IIDNormalSampler",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "test.acquisition.test_utils.torch",
    "unittest.mock.ANY",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_utils.TestGetAcquisitionFunction.test_GetQUCB": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "ValueError",
    "botorch.acquisition.multi_objective.monte_carlo.__name__",
    "botorch.acquisition.utils.get_acquisition_function",
    "botorch.sampling.samplers.IIDNormalSampler",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "test.acquisition.test_utils.torch",
    "unittest.mock.ANY",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_utils.TestGetAcquisitionFunction.test_GetUnknownAcquisitionFunction": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.acquisition.utils.get_acquisition_function"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_utils.TestGetInfeasibleCost": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_utils.TestGetInfeasibleCost.test_get_infeasible_cost": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "botorch.acquisition.utils.get_infeasible_cost",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "test.acquisition.test_utils.torch"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_utils.TestPruneInferiorPoints": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.acquisition.test_utils.TestPruneInferiorPoints.test_prune_inferior_points": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "ValueError",
    "botorch.acquisition.objective.GenericMCObjective",
    "botorch.acquisition.utils.prune_inferior_points",
    "botorch.exceptions.errors.UnsupportedError",
    "botorch.exceptions.warnings.SamplingWarning",
    "botorch.settings.debug",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "contextlib.ExitStack",
    "issubclass",
    "test.acquisition.test_utils.torch",
    "test.acquisition.test_utils.warnings",
    "unittest.mock.PropertyMock",
    "unittest.mock.patch",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "test.acquisition.test_utils.UnsupportedError": {
  "data": {
   "shadows": "botorch.exceptions.errors.UnsupportedError"
  },
  "type": "import"
 },
 "test.acquisition.test_utils.expand_trace_observations": {
  "data": {
   "shadows": "botorch.acquisition.utils.expand_trace_observations"
  },
  "type": "import"
 },
 "test.acquisition.test_utils.get_acquisition_function": {
  "data": {
   "shadows": "botorch.acquisition.utils.get_acquisition_function"
  },
  "type": "import"
 },
 "test.acquisition.test_utils.get_infeasible_cost": {
  "data": {
   "shadows": "botorch.acquisition.utils.get_infeasible_cost"
  },
  "type": "import"
 },
 "test.acquisition.test_utils.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "test.acquisition.test_utils.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "test.acquisition.test_utils.monte_carlo": {
  "data": {
   "shadows": "botorch.acquisition.monte_carlo"
  },
  "type": "import"
 },
 "test.acquisition.test_utils.moo_monte_carlo": {
  "data": {
   "shadows": "botorch.acquisition.multi_objective.monte_carlo"
  },
  "type": "import"
 },
 "test.acquisition.test_utils.project_to_target_fidelity": {
  "data": {
   "shadows": "botorch.acquisition.utils.project_to_target_fidelity"
  },
  "type": "import"
 },
 "test.acquisition.test_utils.prune_inferior_points": {
  "data": {
   "shadows": "botorch.acquisition.utils.prune_inferior_points"
  },
  "type": "import"
 },
 "test.acquisition.test_utils.settings": {
  "data": {
   "shadows": "botorch.settings"
  },
  "type": "import"
 },
 "test.acquisition.test_utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.acquisition.test_utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.distributions": {
  "data": {},
  "type": "module"
 },
 "test.distributions.test_distributions": {
  "data": {
   "symbols_in_volume": [
    "botorch.distributions.Kumaraswamy",
    "collections.namedtuple",
    "test.distributions.test_distributions.Example",
    "test.distributions.test_distributions.torch"
   ]
  },
  "type": "module"
 },
 "test.distributions.test_distributions.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.distributions.test_distributions.Constraint": {
  "data": {
   "shadows": "torch.distributions.constraints.Constraint"
  },
  "type": "import"
 },
 "test.distributions.test_distributions.Distribution": {
  "data": {
   "shadows": "torch.distributions.Distribution"
  },
  "type": "import"
 },
 "test.distributions.test_distributions.EXAMPLES": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "test.distributions.test_distributions.Example": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "test.distributions.test_distributions.Independent": {
  "data": {
   "shadows": "torch.distributions.Independent"
  },
  "type": "import"
 },
 "test.distributions.test_distributions.Kumaraswamy": {
  "data": {
   "shadows": "botorch.distributions.Kumaraswamy"
  },
  "type": "import"
 },
 "test.distributions.test_distributions.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "test.distributions.test_distributions.SEED": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "test.distributions.test_distributions.TestCase": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "test.distributions.test_distributions.unittest"
   ]
  },
  "type": "class"
 },
 "test.distributions.test_distributions.TestCase.assertEqual": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "abs",
    "assertTensorsEqual",
    "bool",
    "isinstance",
    "len",
    "numbers.Number",
    "set",
    "str",
    "super",
    "test.distributions.test_distributions.TestCase",
    "test.distributions.test_distributions.is_iterable",
    "test.distributions.test_distributions.torch",
    "torch._six.inf",
    "torch._six.string_classes",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_distributions.TestCase.assertEqual.assertTensorsEqual": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "super",
    "test.distributions.test_distributions.TestCase",
    "test.distributions.test_distributions.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_distributions.TestCase.setUp": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "test.distributions.test_distributions.SEED",
    "test.distributions.test_distributions.set_rng_seed"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_distributions.TestDistributionShapes": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase",
    "test.distributions.test_distributions.TestCase"
   ]
  },
  "type": "class"
 },
 "test.distributions.test_distributions.TestDistributionShapes.setUp": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "super",
    "test.distributions.test_distributions.torch",
    "torch.distributions.Distribution.set_default_validate_args"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_distributions.TestDistributionShapes.tearDown": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "super",
    "torch.distributions.Distribution.set_default_validate_args"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_distributions.TestDistributionShapes.test_entropy_shape": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "Dist",
    "Dist.__name__",
    "NotImplementedError",
    "dist",
    "dist.batch_shape",
    "dist.entropy",
    "enumerate",
    "len",
    "test.distributions.test_distributions.EXAMPLES",
    "test.distributions.test_distributions.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_distributions.TestDistributionShapes.test_kumaraswamy_shape_scalar_params": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "botorch.distributions.Kumaraswamy",
    "test.distributions.test_distributions.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_distributions.TestKumaraswamy": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase",
    "test.distributions.test_distributions.TestCase"
   ]
  },
  "type": "class"
 },
 "test.distributions.test_distributions.TestKumaraswamy._check_enumerate_support": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "dist",
    "test.distributions.test_distributions.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_distributions.TestKumaraswamy.test_cdf_icdf_inverse": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "Dist",
    "Dist.__name__",
    "NotImplementedError",
    "dist",
    "dist.cdf",
    "dist.icdf",
    "dist.sample",
    "enumerate",
    "len",
    "test.distributions.test_distributions.EXAMPLES",
    "test.distributions.test_distributions.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_distributions.TestKumaraswamy.test_cdf_log_prob": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "Dist",
    "Dist.__name__",
    "NotImplementedError",
    "dist",
    "dist.cdf",
    "dist.log_prob",
    "dist.sample",
    "enumerate",
    "len",
    "test.distributions.test_distributions.EXAMPLES",
    "torch.autograd.grad"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_distributions.TestKumaraswamy.test_distribution_expand": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "Dist",
    "NotImplementedError",
    "list",
    "test.distributions.test_distributions.EXAMPLES",
    "test.distributions.test_distributions.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_distributions.TestKumaraswamy.test_distribution_subclass_expand": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "Dist",
    "SubClass",
    "test.distributions.test_distributions.EXAMPLES",
    "test.distributions.test_distributions.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_distributions.TestKumaraswamy.test_distribution_subclass_expand.SubClass": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "Dist"
   ]
  },
  "type": "class"
 },
 "test.distributions.test_distributions.TestKumaraswamy.test_entropy_monte_carlo": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "Dist",
    "Dist.__name__",
    "NotImplementedError",
    "dist",
    "dist.entropy",
    "dist.log_prob",
    "dist.sample",
    "enumerate",
    "len",
    "test.distributions.test_distributions.EXAMPLES",
    "test.distributions.test_distributions.set_rng_seed",
    "test.distributions.test_distributions.torch",
    "torch._six.inf"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_distributions.TestKumaraswamy.test_enumerate_support_type": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "Dist",
    "Dist.__name__",
    "NotImplementedError",
    "dist",
    "dist.enumerate_support",
    "dist.sample",
    "enumerate",
    "len",
    "test.distributions.test_distributions.EXAMPLES",
    "type"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_distributions.TestKumaraswamy.test_independent_expand": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "Dist",
    "len",
    "range",
    "test.distributions.test_distributions.EXAMPLES",
    "test.distributions.test_distributions.torch",
    "torch.distributions.Independent"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_distributions.TestKumaraswamy.test_independent_shape": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "Dist",
    "NotImplementedError",
    "len",
    "range",
    "test.distributions.test_distributions.EXAMPLES",
    "torch.distributions.Independent"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_distributions.TestKumaraswamy.test_invalid_parameter_broadcasting": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.distributions.Kumaraswamy",
    "test.distributions.test_distributions.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_distributions.TestKumaraswamy.test_kumaraswamy_mean_variance": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "botorch.distributions.Kumaraswamy",
    "enumerate",
    "len",
    "max",
    "test.distributions.test_distributions.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_distributions.TestKumaraswamy.test_kumaraswamy_shape": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "botorch.distributions.Kumaraswamy",
    "test.distributions.test_distributions.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_distributions.TestKumaraswamy.test_params_contains": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "Dist",
    "Dist.__name__",
    "KeyError",
    "dist",
    "dist.arg_constraints",
    "enumerate",
    "isinstance",
    "len",
    "numbers.Number",
    "test.distributions.test_distributions.EXAMPLES",
    "test.distributions.test_distributions.torch",
    "torch.distributions.constraints.is_dependent"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_distributions.TestKumaraswamy.test_repr": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "Dist",
    "dist",
    "dist.__class__.__name__",
    "repr",
    "test.distributions.test_distributions.EXAMPLES"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_distributions.TestKumaraswamy.test_rsample_requires_grad": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "Dist",
    "Dist.__name__",
    "any",
    "dist",
    "dist.has_rsample",
    "dist.rsample",
    "enumerate",
    "getattr",
    "len",
    "test.distributions.test_distributions.EXAMPLES"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_distributions.TestKumaraswamy.test_sample_detached": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "Dist",
    "Dist.__name__",
    "dist",
    "dist.sample",
    "enumerate",
    "getattr",
    "len",
    "test.distributions.test_distributions.EXAMPLES"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_distributions.TestKumaraswamy.test_support_contains": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "Dist",
    "Dist.__name__",
    "Dist.support",
    "dist",
    "dist.sample",
    "dist.support",
    "enumerate",
    "len",
    "test.distributions.test_distributions.EXAMPLES",
    "torch.distributions.constraints.Constraint"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_distributions.TestKumaraswamy.test_valid_parameter_broadcasting": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "botorch.distributions.Kumaraswamy",
    "test.distributions.test_distributions.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_distributions.grad": {
  "data": {
   "shadows": "torch.autograd.grad"
  },
  "type": "import"
 },
 "test.distributions.test_distributions.inf": {
  "data": {
   "shadows": "torch._six.inf"
  },
  "type": "import"
 },
 "test.distributions.test_distributions.is_dependent": {
  "data": {
   "shadows": "torch.distributions.constraints.is_dependent"
  },
  "type": "import"
 },
 "test.distributions.test_distributions.is_iterable": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "TypeError",
    "iter"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_distributions.iter_indices": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "itertools.product",
    "range"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_distributions.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "test.distributions.test_distributions.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "test.distributions.test_distributions.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.distributions.test_distributions.set_rng_seed": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "test.distributions.test_distributions.random",
    "test.distributions.test_distributions.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_distributions.string_classes": {
  "data": {
   "shadows": "torch._six.string_classes"
  },
  "type": "import"
 },
 "test.distributions.test_distributions.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.distributions.test_distributions.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.exceptions": {
  "data": {},
  "type": "module"
 },
 "test.exceptions.test_errors": {
  "data": {},
  "type": "module"
 },
 "test.exceptions.test_errors.BotorchError": {
  "data": {
   "shadows": "botorch.exceptions.errors.BotorchError"
  },
  "type": "import"
 },
 "test.exceptions.test_errors.BotorchTensorDimensionError": {
  "data": {
   "shadows": "botorch.exceptions.errors.BotorchTensorDimensionError"
  },
  "type": "import"
 },
 "test.exceptions.test_errors.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.exceptions.test_errors.CandidateGenerationError": {
  "data": {
   "shadows": "botorch.exceptions.errors.CandidateGenerationError"
  },
  "type": "import"
 },
 "test.exceptions.test_errors.InputDataError": {
  "data": {
   "shadows": "botorch.exceptions.errors.InputDataError"
  },
  "type": "import"
 },
 "test.exceptions.test_errors.TestBotorchExceptions": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.exceptions.test_errors.TestBotorchExceptions.test_botorch_exception_hierarchy": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Exception",
    "botorch.exceptions.errors.BotorchError",
    "botorch.exceptions.errors.BotorchTensorDimensionError",
    "botorch.exceptions.errors.CandidateGenerationError",
    "botorch.exceptions.errors.InputDataError",
    "botorch.exceptions.errors.UnsupportedError"
   ]
  },
  "type": "function"
 },
 "test.exceptions.test_errors.TestBotorchExceptions.test_raise_botorch_exceptions": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ErrorClass",
    "botorch.exceptions.errors.BotorchError",
    "botorch.exceptions.errors.BotorchTensorDimensionError",
    "botorch.exceptions.errors.CandidateGenerationError",
    "botorch.exceptions.errors.InputDataError",
    "botorch.exceptions.errors.UnsupportedError"
   ]
  },
  "type": "function"
 },
 "test.exceptions.test_errors.UnsupportedError": {
  "data": {
   "shadows": "botorch.exceptions.errors.UnsupportedError"
  },
  "type": "import"
 },
 "test.exceptions.test_warnings": {
  "data": {},
  "type": "module"
 },
 "test.exceptions.test_warnings.BadInitialCandidatesWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.BadInitialCandidatesWarning"
  },
  "type": "import"
 },
 "test.exceptions.test_warnings.BotorchTensorDimensionWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.BotorchTensorDimensionWarning"
  },
  "type": "import"
 },
 "test.exceptions.test_warnings.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.exceptions.test_warnings.BotorchWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.BotorchWarning"
  },
  "type": "import"
 },
 "test.exceptions.test_warnings.CostAwareWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.CostAwareWarning"
  },
  "type": "import"
 },
 "test.exceptions.test_warnings.InputDataWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.InputDataWarning"
  },
  "type": "import"
 },
 "test.exceptions.test_warnings.OptimizationWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.OptimizationWarning"
  },
  "type": "import"
 },
 "test.exceptions.test_warnings.SamplingWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.SamplingWarning"
  },
  "type": "import"
 },
 "test.exceptions.test_warnings.TestBotorchWarnings": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.exceptions.test_warnings.TestBotorchWarnings.test_botorch_warnings": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "botorch.exceptions.warnings.BadInitialCandidatesWarning",
    "botorch.exceptions.warnings.BotorchTensorDimensionWarning",
    "botorch.exceptions.warnings.BotorchWarning",
    "botorch.exceptions.warnings.CostAwareWarning",
    "botorch.exceptions.warnings.InputDataWarning",
    "botorch.exceptions.warnings.OptimizationWarning",
    "botorch.exceptions.warnings.SamplingWarning",
    "botorch.settings.debug",
    "issubclass",
    "len",
    "str",
    "test.exceptions.test_warnings.warnings"
   ]
  },
  "type": "function"
 },
 "test.exceptions.test_warnings.TestBotorchWarnings.test_botorch_warnings_hierarchy": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "Warning",
    "botorch.exceptions.warnings.BadInitialCandidatesWarning",
    "botorch.exceptions.warnings.BotorchTensorDimensionWarning",
    "botorch.exceptions.warnings.BotorchWarning",
    "botorch.exceptions.warnings.CostAwareWarning",
    "botorch.exceptions.warnings.InputDataWarning",
    "botorch.exceptions.warnings.OptimizationWarning",
    "botorch.exceptions.warnings.SamplingWarning"
   ]
  },
  "type": "function"
 },
 "test.exceptions.test_warnings.settings": {
  "data": {
   "shadows": "botorch.settings"
  },
  "type": "import"
 },
 "test.exceptions.test_warnings.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.generation": {
  "data": {},
  "type": "module"
 },
 "test.generation.test_gen": {
  "data": {},
  "type": "module"
 },
 "test.generation.test_gen.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.generation.test_gen.EPS": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "test.generation.test_gen.ExactMarginalLogLikelihood": {
  "data": {
   "shadows": "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood"
  },
  "type": "import"
 },
 "test.generation.test_gen.NOISE": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "test.generation.test_gen.OptimizationWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.OptimizationWarning"
  },
  "type": "import"
 },
 "test.generation.test_gen.SingleTaskGP": {
  "data": {
   "shadows": "botorch.models.SingleTaskGP"
  },
  "type": "import"
 },
 "test.generation.test_gen.TestBaseCandidateGeneration": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.generation.test_gen.TestBaseCandidateGeneration._setUp": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "botorch.exceptions.warnings.OptimizationWarning",
    "botorch.fit.fit_gpytorch_model",
    "botorch.models.SingleTaskGP",
    "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
    "test.generation.test_gen.NOISE",
    "test.generation.test_gen.math",
    "test.generation.test_gen.torch",
    "test.generation.test_gen.warnings"
   ]
  },
  "type": "function"
 },
 "test.generation.test_gen.TestGenCandidates": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "test.generation.test_gen.TestBaseCandidateGeneration"
   ]
  },
  "type": "class"
 },
 "test.generation.test_gen.TestGenCandidates.test_gen_candidates": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "botorch.acquisition.qExpectedImprovement",
    "botorch.generation.gen.gen_candidates_scipy",
    "gen_candidates",
    "test.generation.test_gen.EPS"
   ]
  },
  "type": "function"
 },
 "test.generation.test_gen.TestGenCandidates.test_gen_candidates_torch": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "botorch.generation.gen.gen_candidates_torch"
   ]
  },
  "type": "function"
 },
 "test.generation.test_gen.TestGenCandidates.test_gen_candidates_torch_with_fixed_features": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "botorch.generation.gen.gen_candidates_torch"
   ]
  },
  "type": "function"
 },
 "test.generation.test_gen.TestGenCandidates.test_gen_candidates_torch_with_none_fixed_features": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "botorch.generation.gen.gen_candidates_torch"
   ]
  },
  "type": "function"
 },
 "test.generation.test_gen.TestGenCandidates.test_gen_candidates_with_fixed_features": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "botorch.acquisition.qExpectedImprovement",
    "botorch.generation.gen.gen_candidates_scipy",
    "gen_candidates",
    "test.generation.test_gen.EPS"
   ]
  },
  "type": "function"
 },
 "test.generation.test_gen.TestGenCandidates.test_gen_candidates_with_none_fixed_features": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "botorch.acquisition.qExpectedImprovement",
    "botorch.generation.gen.gen_candidates_scipy",
    "gen_candidates",
    "test.generation.test_gen.EPS"
   ]
  },
  "type": "function"
 },
 "test.generation.test_gen.TestRandomRestartOptimization": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "test.generation.test_gen.TestBaseCandidateGeneration"
   ]
  },
  "type": "class"
 },
 "test.generation.test_gen.TestRandomRestartOptimization.test_random_restart_optimization": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "botorch.acquisition.qExpectedImprovement",
    "botorch.generation.gen.gen_candidates_scipy",
    "botorch.generation.gen.get_best_candidates",
    "gpytorch.settings.debug",
    "test.generation.test_gen.EPS",
    "test.generation.test_gen.torch"
   ]
  },
  "type": "function"
 },
 "test.generation.test_gen.fit_gpytorch_model": {
  "data": {
   "shadows": "botorch.fit.fit_gpytorch_model"
  },
  "type": "import"
 },
 "test.generation.test_gen.gen_candidates_scipy": {
  "data": {
   "shadows": "botorch.generation.gen.gen_candidates_scipy"
  },
  "type": "import"
 },
 "test.generation.test_gen.gen_candidates_torch": {
  "data": {
   "shadows": "botorch.generation.gen.gen_candidates_torch"
  },
  "type": "import"
 },
 "test.generation.test_gen.get_best_candidates": {
  "data": {
   "shadows": "botorch.generation.gen.get_best_candidates"
  },
  "type": "import"
 },
 "test.generation.test_gen.gpt_settings": {
  "data": {
   "shadows": "gpytorch.settings"
  },
  "type": "import"
 },
 "test.generation.test_gen.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.generation.test_gen.qExpectedImprovement": {
  "data": {
   "shadows": "botorch.acquisition.qExpectedImprovement"
  },
  "type": "import"
 },
 "test.generation.test_gen.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.generation.test_gen.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.generation.test_sampling": {
  "data": {},
  "type": "module"
 },
 "test.generation.test_sampling.BoltzmannSampling": {
  "data": {
   "shadows": "botorch.generation.sampling.BoltzmannSampling"
  },
  "type": "import"
 },
 "test.generation.test_sampling.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.generation.test_sampling.IdentityMCObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.IdentityMCObjective"
  },
  "type": "import"
 },
 "test.generation.test_sampling.LinearMCObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.LinearMCObjective"
  },
  "type": "import"
 },
 "test.generation.test_sampling.MaxPosteriorSampling": {
  "data": {
   "shadows": "botorch.generation.sampling.MaxPosteriorSampling"
  },
  "type": "import"
 },
 "test.generation.test_sampling.MockModel": {
  "data": {
   "shadows": "botorch.utils.testing.MockModel"
  },
  "type": "import"
 },
 "test.generation.test_sampling.MockPosterior": {
  "data": {
   "shadows": "botorch.utils.testing.MockPosterior"
  },
  "type": "import"
 },
 "test.generation.test_sampling.PosteriorMean": {
  "data": {
   "shadows": "botorch.acquisition.analytic.PosteriorMean"
  },
  "type": "import"
 },
 "test.generation.test_sampling.SamplingStrategy": {
  "data": {
   "shadows": "botorch.generation.sampling.SamplingStrategy"
  },
  "type": "import"
 },
 "test.generation.test_sampling.ScalarizedObjective": {
  "data": {
   "shadows": "botorch.acquisition.objective.ScalarizedObjective"
  },
  "type": "import"
 },
 "test.generation.test_sampling.TestBoltzmannSampling": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.generation.test_sampling.TestBoltzmannSampling.test_boltzmann_sampling": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "BS",
    "botorch.generation.sampling.BoltzmannSampling",
    "test.generation.test_sampling.itertools",
    "test.generation.test_sampling.torch",
    "unittest.mock.Mock"
   ]
  },
  "type": "function"
 },
 "test.generation.test_sampling.TestBoltzmannSampling.test_init": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "botorch.acquisition.analytic.PosteriorMean",
    "botorch.generation.sampling.BoltzmannSampling",
    "botorch.utils.testing.MockModel",
    "unittest.mock.PropertyMock",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "test.generation.test_sampling.TestMaxPosteriorSampling": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.generation.test_sampling.TestMaxPosteriorSampling.test_init": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "botorch.acquisition.objective.IdentityMCObjective",
    "botorch.acquisition.objective.LinearMCObjective",
    "botorch.generation.sampling.MaxPosteriorSampling",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "test.generation.test_sampling.torch"
   ]
  },
  "type": "function"
 },
 "test.generation.test_sampling.TestMaxPosteriorSampling.test_max_posterior_sampling": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "MPS",
    "NotImplementedError",
    "botorch.acquisition.objective.ScalarizedObjective",
    "botorch.generation.sampling.MaxPosteriorSampling",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "len",
    "test.generation.test_sampling.itertools",
    "test.generation.test_sampling.torch",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "test.generation.test_sampling.TestSamplingStrategy": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.generation.test_sampling.TestSamplingStrategy.test_abstract_raises": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "TypeError",
    "botorch.generation.sampling.SamplingStrategy"
   ]
  },
  "type": "function"
 },
 "test.generation.test_sampling.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "test.generation.test_sampling.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "test.generation.test_sampling.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "test.generation.test_sampling.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.generation.test_utils": {
  "data": {},
  "type": "module"
 },
 "test.generation.test_utils.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.generation.test_utils.TestGenerationUtils": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.generation.test_utils.TestGenerationUtils.test_flip_sub_unique": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "botorch.generation.utils._flip_sub_unique",
    "test.generation.test_utils.torch"
   ]
  },
  "type": "function"
 },
 "test.generation.test_utils._flip_sub_unique": {
  "data": {
   "shadows": "botorch.generation.utils._flip_sub_unique"
  },
  "type": "import"
 },
 "test.generation.test_utils.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "test.generation.test_utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.models": {
  "data": {},
  "type": "module"
 },
 "test.models.kernels": {
  "data": {},
  "type": "module"
 },
 "test.models.kernels.test_contextual": {
  "data": {},
  "type": "module"
 },
 "test.models.kernels.test_contextual.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.models.kernels.test_contextual.ContextualKernelTest": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.models.kernels.test_contextual.ContextualKernelTest.testLCEAKernel": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "botorch.models.kernels.contextual_lcea.LCEAKernel",
    "gpytorch.kernels.matern_kernel.MaternKernel",
    "kernel",
    "kernel._eval_context_covar",
    "kernel._task_embeddings",
    "kernel.base_kernel",
    "kernel.context_cat_feature",
    "kernel.context_emb_feature",
    "kernel.context_list",
    "kernel.decomposition",
    "kernel.emb_dims",
    "kernel.emb_layers",
    "kernel.initialize",
    "kernel.n_embs",
    "kernel.num_contexts",
    "kernel.outputscale_list",
    "kernel.outputscale_list.shape",
    "kernel.task_covar_module",
    "kernel.train_embedding",
    "len",
    "test.models.kernels.test_contextual.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_contextual.ContextualKernelTest.test_SACKernel": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "botorch.models.kernels.contextual_sac.SACKernel",
    "gpytorch.kernels.matern_kernel.MaternKernel",
    "kernel",
    "test.models.kernels.test_contextual.torch",
    "torch.nn.ModuleDict"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_contextual.LCEAKernel": {
  "data": {
   "shadows": "botorch.models.kernels.contextual_lcea.LCEAKernel"
  },
  "type": "import"
 },
 "test.models.kernels.test_contextual.MaternKernel": {
  "data": {
   "shadows": "gpytorch.kernels.matern_kernel.MaternKernel"
  },
  "type": "import"
 },
 "test.models.kernels.test_contextual.ModuleDict": {
  "data": {
   "shadows": "torch.nn.ModuleDict"
  },
  "type": "import"
 },
 "test.models.kernels.test_contextual.SACKernel": {
  "data": {
   "shadows": "botorch.models.kernels.contextual_sac.SACKernel"
  },
  "type": "import"
 },
 "test.models.kernels.test_contextual.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "test.models.kernels.test_contextual.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.models.kernels.test_downsampling": {
  "data": {},
  "type": "module"
 },
 "test.models.kernels.test_downsampling.BaseKernelTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  },
  "type": "import"
 },
 "test.models.kernels.test_downsampling.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.models.kernels.test_downsampling.DownsamplingKernel": {
  "data": {
   "shadows": "botorch.models.kernels.downsampling.DownsamplingKernel"
  },
  "type": "import"
 },
 "test.models.kernels.test_downsampling.GammaPrior": {
  "data": {
   "shadows": "gpytorch.priors.torch_priors.GammaPrior"
  },
  "type": "import"
 },
 "test.models.kernels.test_downsampling.NormalPrior": {
  "data": {
   "shadows": "gpytorch.priors.torch_priors.NormalPrior"
  },
  "type": "import"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase",
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
   ]
  },
  "type": "class"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.create_data_double_batch": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "test.models.kernels.test_downsampling.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.create_data_no_batch": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "test.models.kernels.test_downsampling.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.create_data_single_batch": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "test.models.kernels.test_downsampling.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "botorch.models.kernels.downsampling.DownsamplingKernel"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.test_active_dims_list": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.test_active_dims_range": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.test_computes_downsampling_function": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "botorch.models.kernels.downsampling.DownsamplingKernel",
    "kernel",
    "kernel.eval",
    "kernel.initialize",
    "test.models.kernels.test_downsampling.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.test_computes_downsampling_function_batch": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "botorch.models.kernels.downsampling.DownsamplingKernel",
    "kernel",
    "kernel.eval",
    "kernel.initialize",
    "test.models.kernels.test_downsampling.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.test_diag_calculation": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "botorch.models.kernels.downsampling.DownsamplingKernel",
    "kernel",
    "kernel.eval",
    "kernel.initialize",
    "test.models.kernels.test_downsampling.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.test_initialize_offset": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "botorch.models.kernels.downsampling.DownsamplingKernel",
    "kernel",
    "kernel.initialize",
    "kernel.offset",
    "test.models.kernels.test_downsampling.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.test_initialize_offset_batch": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "botorch.models.kernels.downsampling.DownsamplingKernel",
    "kernel",
    "kernel.initialize",
    "kernel.offset",
    "test.models.kernels.test_downsampling.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.test_initialize_offset_prior": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "botorch.models.kernels.downsampling.DownsamplingKernel",
    "gpytorch.priors.torch_priors.GammaPrior",
    "gpytorch.priors.torch_priors.NormalPrior",
    "isinstance",
    "kernel",
    "kernel.offset_prior"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.test_initialize_power": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "botorch.models.kernels.downsampling.DownsamplingKernel",
    "kernel",
    "kernel.initialize",
    "kernel.power",
    "test.models.kernels.test_downsampling.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.test_initialize_power_batch": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "botorch.models.kernels.downsampling.DownsamplingKernel",
    "kernel",
    "kernel.initialize",
    "kernel.power",
    "test.models.kernels.test_downsampling.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.test_initialize_power_prior": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "botorch.models.kernels.downsampling.DownsamplingKernel",
    "gpytorch.priors.torch_priors.GammaPrior",
    "gpytorch.priors.torch_priors.NormalPrior",
    "isinstance",
    "kernel",
    "kernel.power_prior"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.test_last_dim_is_batch": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "botorch.models.kernels.downsampling.DownsamplingKernel",
    "kernel",
    "kernel.eval",
    "kernel.initialize",
    "test.models.kernels.test_downsampling.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.test_subset_active_compute_downsampling_function": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "botorch.models.kernels.downsampling.DownsamplingKernel",
    "kernel",
    "test.models.kernels.test_downsampling.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_downsampling.TestDownsamplingKernel.test_subset_computes_active_downsampling_function_batch": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "botorch.models.kernels.downsampling.DownsamplingKernel",
    "kernel",
    "kernel.eval",
    "kernel.initialize",
    "test.models.kernels.test_downsampling.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_downsampling.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.models.kernels.test_exponential_decay": {
  "data": {},
  "type": "module"
 },
 "test.models.kernels.test_exponential_decay.BaseKernelTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  },
  "type": "import"
 },
 "test.models.kernels.test_exponential_decay.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.models.kernels.test_exponential_decay.ExponentialDecayKernel": {
  "data": {
   "shadows": "botorch.models.kernels.exponential_decay.ExponentialDecayKernel"
  },
  "type": "import"
 },
 "test.models.kernels.test_exponential_decay.GammaPrior": {
  "data": {
   "shadows": "gpytorch.priors.torch_priors.GammaPrior"
  },
  "type": "import"
 },
 "test.models.kernels.test_exponential_decay.NormalPrior": {
  "data": {
   "shadows": "gpytorch.priors.torch_priors.NormalPrior"
  },
  "type": "import"
 },
 "test.models.kernels.test_exponential_decay.TestExponentialDecayKernel": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase",
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
   ]
  },
  "type": "class"
 },
 "test.models.kernels.test_exponential_decay.TestExponentialDecayKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "botorch.models.kernels.exponential_decay.ExponentialDecayKernel"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_exponential_decay.TestExponentialDecayKernel.test_computes_exponential_decay_function": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "botorch.models.kernels.exponential_decay.ExponentialDecayKernel",
    "kernel",
    "kernel.eval",
    "kernel.initialize",
    "test.models.kernels.test_exponential_decay.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_exponential_decay.TestExponentialDecayKernel.test_computes_exponential_decay_function_batch": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "botorch.models.kernels.exponential_decay.ExponentialDecayKernel",
    "kernel",
    "kernel.eval",
    "kernel.initialize",
    "test.models.kernels.test_exponential_decay.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_exponential_decay.TestExponentialDecayKernel.test_initialize_lengthscale": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "botorch.models.kernels.exponential_decay.ExponentialDecayKernel",
    "kernel",
    "kernel.initialize",
    "kernel.lengthscale",
    "test.models.kernels.test_exponential_decay.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_exponential_decay.TestExponentialDecayKernel.test_initialize_lengthscale_batch": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "botorch.models.kernels.exponential_decay.ExponentialDecayKernel",
    "kernel",
    "kernel.initialize",
    "kernel.lengthscale",
    "test.models.kernels.test_exponential_decay.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_exponential_decay.TestExponentialDecayKernel.test_initialize_offset": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "botorch.models.kernels.exponential_decay.ExponentialDecayKernel",
    "kernel",
    "kernel.initialize",
    "kernel.offset",
    "test.models.kernels.test_exponential_decay.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_exponential_decay.TestExponentialDecayKernel.test_initialize_offset_batch": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "botorch.models.kernels.exponential_decay.ExponentialDecayKernel",
    "kernel",
    "kernel.initialize",
    "kernel.offset",
    "test.models.kernels.test_exponential_decay.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_exponential_decay.TestExponentialDecayKernel.test_initialize_offset_prior": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "botorch.models.kernels.exponential_decay.ExponentialDecayKernel",
    "gpytorch.priors.torch_priors.GammaPrior",
    "gpytorch.priors.torch_priors.NormalPrior",
    "isinstance",
    "kernel",
    "kernel.offset_prior"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_exponential_decay.TestExponentialDecayKernel.test_initialize_power": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "botorch.models.kernels.exponential_decay.ExponentialDecayKernel",
    "kernel",
    "kernel.initialize",
    "kernel.power",
    "test.models.kernels.test_exponential_decay.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_exponential_decay.TestExponentialDecayKernel.test_initialize_power_batch": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "botorch.models.kernels.exponential_decay.ExponentialDecayKernel",
    "kernel",
    "kernel.initialize",
    "kernel.power",
    "test.models.kernels.test_exponential_decay.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_exponential_decay.TestExponentialDecayKernel.test_initialize_power_prior": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "botorch.models.kernels.exponential_decay.ExponentialDecayKernel",
    "gpytorch.priors.torch_priors.GammaPrior",
    "gpytorch.priors.torch_priors.NormalPrior",
    "isinstance",
    "kernel",
    "kernel.power_prior"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_exponential_decay.TestExponentialDecayKernel.test_subset_active_compute_exponential_decay_function": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "botorch.models.kernels.exponential_decay.ExponentialDecayKernel",
    "kernel",
    "test.models.kernels.test_exponential_decay.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_exponential_decay.TestExponentialDecayKernel.test_subset_active_exponential_decay_function_batch": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "botorch.models.kernels.exponential_decay.ExponentialDecayKernel",
    "kernel",
    "kernel.eval",
    "kernel.initialize",
    "test.models.kernels.test_exponential_decay.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_exponential_decay.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.models.kernels.test_linear_truncated_fidelity": {
  "data": {},
  "type": "module"
 },
 "test.models.kernels.test_linear_truncated_fidelity.BaseKernelTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  },
  "type": "import"
 },
 "test.models.kernels.test_linear_truncated_fidelity.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.models.kernels.test_linear_truncated_fidelity.GammaPrior": {
  "data": {
   "shadows": "gpytorch.priors.torch_priors.GammaPrior"
  },
  "type": "import"
 },
 "test.models.kernels.test_linear_truncated_fidelity.LinearTruncatedFidelityKernel": {
  "data": {
   "shadows": "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel"
  },
  "type": "import"
 },
 "test.models.kernels.test_linear_truncated_fidelity.MaternKernel": {
  "data": {
   "shadows": "gpytorch.kernels.matern_kernel.MaternKernel"
  },
  "type": "import"
 },
 "test.models.kernels.test_linear_truncated_fidelity.NormalPrior": {
  "data": {
   "shadows": "gpytorch.priors.torch_priors.NormalPrior"
  },
  "type": "import"
 },
 "test.models.kernels.test_linear_truncated_fidelity.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.rbf_kernel.RBFKernel"
  },
  "type": "import"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase",
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
   ]
  },
  "type": "class"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel.create_data_double_batch": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "test.models.kernels.test_linear_truncated_fidelity.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel.create_data_no_batch": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "test.models.kernels.test_linear_truncated_fidelity.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel.create_data_single_batch": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "test.models.kernels.test_linear_truncated_fidelity.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel.test_active_dims_list": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel",
    "kernel",
    "kernel_basic",
    "test.models.kernels.test_linear_truncated_fidelity.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel.test_active_dims_range": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel",
    "kernel",
    "kernel_basic",
    "list",
    "range",
    "test.models.kernels.test_linear_truncated_fidelity.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel.test_compute_linear_truncated_kernel_no_batch": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel",
    "gpytorch.kernels.matern_kernel.MaternKernel",
    "kernel",
    "len",
    "matern_ker",
    "test.models.kernels.test_linear_truncated_fidelity.itertools",
    "test.models.kernels.test_linear_truncated_fidelity.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel.test_compute_linear_truncated_kernel_with_batch": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel",
    "gpytorch.kernels.matern_kernel.MaternKernel",
    "kernel",
    "kernel.power",
    "len",
    "matern_ker",
    "test.models.kernels.test_linear_truncated_fidelity.itertools",
    "test.models.kernels.test_linear_truncated_fidelity.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel.test_error_on_fidelity_only": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel",
    "kernel",
    "test.models.kernels.test_linear_truncated_fidelity.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel.test_initialize_covar_module": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel",
    "gpytorch.kernels.matern_kernel.MaternKernel",
    "gpytorch.kernels.rbf_kernel.RBFKernel",
    "isinstance",
    "kernel",
    "kernel.covar_module_biased",
    "kernel.covar_module_unbiased"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel.test_initialize_lengthscale_prior": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel",
    "gpytorch.priors.torch_priors.GammaPrior",
    "gpytorch.priors.torch_priors.NormalPrior",
    "isinstance",
    "kernel",
    "kernel.covar_module_biased.lengthscale_prior",
    "kernel.covar_module_unbiased.lengthscale_prior"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel.test_initialize_power": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel",
    "kernel",
    "kernel.initialize",
    "kernel.power",
    "test.models.kernels.test_linear_truncated_fidelity.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel.test_initialize_power_batch": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel",
    "kernel",
    "kernel.initialize",
    "kernel.power",
    "test.models.kernels.test_linear_truncated_fidelity.torch"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel.test_initialize_power_prior": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel",
    "gpytorch.priors.torch_priors.NormalPrior",
    "isinstance",
    "kernel",
    "kernel.power_prior"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel.test_kernel_pickle_unpickle": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "test.models.kernels.test_linear_truncated_fidelity.unittest"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_linear_truncated_fidelity.TestLinearTruncatedFidelityKernel.test_raise_init_errors": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ValueError",
    "botorch.exceptions.UnsupportedError",
    "botorch.models.kernels.linear_truncated_fidelity.LinearTruncatedFidelityKernel"
   ]
  },
  "type": "function"
 },
 "test.models.kernels.test_linear_truncated_fidelity.UnsupportedError": {
  "data": {
   "shadows": "botorch.exceptions.UnsupportedError"
  },
  "type": "import"
 },
 "test.models.kernels.test_linear_truncated_fidelity.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "test.models.kernels.test_linear_truncated_fidelity.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.models.kernels.test_linear_truncated_fidelity.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.models.test_contextual": {
  "data": {},
  "type": "module"
 },
 "test.models.test_contextual.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.models.test_contextual.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.models.test_contextual.ContextualGPTest": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.models.test_contextual.ContextualGPTest.testLCEAGP": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "botorch.fit_gpytorch_model",
    "botorch.models.contextual.LCEAGP",
    "botorch.models.kernels.contextual_lcea.LCEAKernel",
    "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
    "test.models.test_contextual.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_contextual.ContextualGPTest.test_SACGP": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "botorch.fit_gpytorch_model",
    "botorch.models.contextual.SACGP",
    "botorch.models.gp_regression.FixedNoiseGP",
    "botorch.models.kernels.contextual_sac.SACKernel",
    "gpytorch.distributions.multivariate_normal.MultivariateNormal",
    "gpytorch.means.ConstantMean",
    "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
    "test.models.test_contextual.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_contextual.ExactMarginalLogLikelihood": {
  "data": {
   "shadows": "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood"
  },
  "type": "import"
 },
 "test.models.test_contextual.FixedNoiseGP": {
  "data": {
   "shadows": "botorch.models.gp_regression.FixedNoiseGP"
  },
  "type": "import"
 },
 "test.models.test_contextual.LCEAGP": {
  "data": {
   "shadows": "botorch.models.contextual.LCEAGP"
  },
  "type": "import"
 },
 "test.models.test_contextual.LCEAKernel": {
  "data": {
   "shadows": "botorch.models.kernels.contextual_lcea.LCEAKernel"
  },
  "type": "import"
 },
 "test.models.test_contextual.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.multivariate_normal.MultivariateNormal"
  },
  "type": "import"
 },
 "test.models.test_contextual.SACGP": {
  "data": {
   "shadows": "botorch.models.contextual.SACGP"
  },
  "type": "import"
 },
 "test.models.test_contextual.SACKernel": {
  "data": {
   "shadows": "botorch.models.kernels.contextual_sac.SACKernel"
  },
  "type": "import"
 },
 "test.models.test_contextual.fit_gpytorch_model": {
  "data": {
   "shadows": "botorch.fit_gpytorch_model"
  },
  "type": "import"
 },
 "test.models.test_contextual.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.models.test_contextual_multioutput": {
  "data": {},
  "type": "module"
 },
 "test.models.test_contextual_multioutput.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.models.test_contextual_multioutput.ContextualMultiOutputTest": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.models.test_contextual_multioutput.ContextualMultiOutputTest.testFixedNoiseLCEMGP": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "botorch.models.contextual_multioutput.FixedNoiseLCEMGP",
    "model",
    "test.models.test_contextual_multioutput.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_contextual_multioutput.ContextualMultiOutputTest.testLCEMGP": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "botorch.fit_gpytorch_model",
    "botorch.models.contextual_multioutput.LCEMGP",
    "botorch.models.multitask.MultiTaskGP",
    "botorch.posteriors.GPyTorchPosterior",
    "gpytorch.distributions.MultitaskMultivariateNormal",
    "gpytorch.distributions.MultivariateNormal",
    "gpytorch.lazy.LazyTensor",
    "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
    "len",
    "model",
    "model.posterior",
    "test.models.test_contextual_multioutput.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "test.models.test_contextual_multioutput.ExactMarginalLogLikelihood": {
  "data": {
   "shadows": "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood"
  },
  "type": "import"
 },
 "test.models.test_contextual_multioutput.FixedNoiseLCEMGP": {
  "data": {
   "shadows": "botorch.models.contextual_multioutput.FixedNoiseLCEMGP"
  },
  "type": "import"
 },
 "test.models.test_contextual_multioutput.GPyTorchPosterior": {
  "data": {
   "shadows": "botorch.posteriors.GPyTorchPosterior"
  },
  "type": "import"
 },
 "test.models.test_contextual_multioutput.LCEMGP": {
  "data": {
   "shadows": "botorch.models.contextual_multioutput.LCEMGP"
  },
  "type": "import"
 },
 "test.models.test_contextual_multioutput.LazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.LazyTensor"
  },
  "type": "import"
 },
 "test.models.test_contextual_multioutput.MultiTaskGP": {
  "data": {
   "shadows": "botorch.models.multitask.MultiTaskGP"
  },
  "type": "import"
 },
 "test.models.test_contextual_multioutput.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "test.models.test_contextual_multioutput.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.models.test_contextual_multioutput.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "test.models.test_contextual_multioutput.fit_gpytorch_model": {
  "data": {
   "shadows": "botorch.fit_gpytorch_model"
  },
  "type": "import"
 },
 "test.models.test_contextual_multioutput.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.models.test_converter": {
  "data": {},
  "type": "module"
 },
 "test.models.test_converter.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.models.test_converter.FixedNoiseGP": {
  "data": {
   "shadows": "botorch.models.FixedNoiseGP"
  },
  "type": "import"
 },
 "test.models.test_converter.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.models.test_converter.HeteroskedasticSingleTaskGP": {
  "data": {
   "shadows": "botorch.models.HeteroskedasticSingleTaskGP"
  },
  "type": "import"
 },
 "test.models.test_converter.ModelListGP": {
  "data": {
   "shadows": "botorch.models.ModelListGP"
  },
  "type": "import"
 },
 "test.models.test_converter.Normalize": {
  "data": {
   "shadows": "botorch.models.transforms.input.Normalize"
  },
  "type": "import"
 },
 "test.models.test_converter.SingleTaskGP": {
  "data": {
   "shadows": "botorch.models.SingleTaskGP"
  },
  "type": "import"
 },
 "test.models.test_converter.SingleTaskMultiFidelityGP": {
  "data": {
   "shadows": "botorch.models.SingleTaskMultiFidelityGP"
  },
  "type": "import"
 },
 "test.models.test_converter.TestConverters": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.models.test_converter.TestConverters.test_batched_to_model_list": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.models.FixedNoiseGP",
    "botorch.models.HeteroskedasticSingleTaskGP",
    "botorch.models.ModelListGP",
    "botorch.models.SingleTaskGP",
    "botorch.models.SingleTaskMultiFidelityGP",
    "botorch.models.converter.batched_to_model_list",
    "botorch.models.transforms.input.Normalize",
    "test.models.test_converter.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_converter.TestConverters.test_model_list_to_batched": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "NotImplementedError",
    "SimpleGPyTorchModel",
    "botorch.exceptions.UnsupportedError",
    "botorch.models.FixedNoiseGP",
    "botorch.models.HeteroskedasticSingleTaskGP",
    "botorch.models.ModelListGP",
    "botorch.models.SingleTaskGP",
    "botorch.models.SingleTaskMultiFidelityGP",
    "botorch.models.converter.model_list_to_batched",
    "botorch.models.transforms.input.Normalize",
    "gpytorch.likelihoods.GaussianLikelihood",
    "test.models.test_converter.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_converter.TestConverters.test_roundtrip": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "all",
    "botorch.models.FixedNoiseGP",
    "botorch.models.SingleTaskGP",
    "botorch.models.SingleTaskMultiFidelityGP",
    "botorch.models.converter.batched_to_model_list",
    "botorch.models.converter.model_list_to_batched",
    "set",
    "test.models.test_converter.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_converter.UnsupportedError": {
  "data": {
   "shadows": "botorch.exceptions.UnsupportedError"
  },
  "type": "import"
 },
 "test.models.test_converter.batched_to_model_list": {
  "data": {
   "shadows": "botorch.models.converter.batched_to_model_list"
  },
  "type": "import"
 },
 "test.models.test_converter.model_list_to_batched": {
  "data": {
   "shadows": "botorch.models.converter.model_list_to_batched"
  },
  "type": "import"
 },
 "test.models.test_converter.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.models.test_cost": {
  "data": {},
  "type": "module"
 },
 "test.models.test_cost.AffineFidelityCostModel": {
  "data": {
   "shadows": "botorch.models.cost.AffineFidelityCostModel"
  },
  "type": "import"
 },
 "test.models.test_cost.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.models.test_cost.TestCostModels": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.models.test_cost.TestCostModels.test_affine_fidelity_cost_model": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "botorch.models.cost.AffineFidelityCostModel",
    "model",
    "model.fidelity_dims",
    "model.fixed_cost",
    "random.random",
    "sum",
    "test.models.test_cost.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_cost.random": {
  "data": {
   "shadows": "random.random"
  },
  "type": "import"
 },
 "test.models.test_cost.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.models.test_deterministic": {
  "data": {},
  "type": "module"
 },
 "test.models.test_deterministic.AffineDeterministicModel": {
  "data": {
   "shadows": "botorch.models.deterministic.AffineDeterministicModel"
  },
  "type": "import"
 },
 "test.models.test_deterministic.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.models.test_deterministic.DeterministicModel": {
  "data": {
   "shadows": "botorch.models.deterministic.DeterministicModel"
  },
  "type": "import"
 },
 "test.models.test_deterministic.DeterministicPosterior": {
  "data": {
   "shadows": "botorch.posteriors.deterministic.DeterministicPosterior"
  },
  "type": "import"
 },
 "test.models.test_deterministic.GenericDeterministicModel": {
  "data": {
   "shadows": "botorch.models.deterministic.GenericDeterministicModel"
  },
  "type": "import"
 },
 "test.models.test_deterministic.TestDeterministicModels": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.models.test_deterministic.TestDeterministicModels.test_AffineDeterministicModel": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "botorch.models.deterministic.AffineDeterministicModel",
    "test.models.test_deterministic.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_deterministic.TestDeterministicModels.test_GenericDeterministicModel": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "botorch.exceptions.errors.UnsupportedError",
    "botorch.models.deterministic.GenericDeterministicModel",
    "botorch.posteriors.deterministic.DeterministicPosterior",
    "f",
    "test.models.test_deterministic.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_deterministic.TestDeterministicModels.test_GenericDeterministicModel.f": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "test.models.test_deterministic.TestDeterministicModels.test_abstract_base_model": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "TypeError",
    "botorch.models.deterministic.DeterministicModel"
   ]
  },
  "type": "function"
 },
 "test.models.test_deterministic.UnsupportedError": {
  "data": {
   "shadows": "botorch.exceptions.errors.UnsupportedError"
  },
  "type": "import"
 },
 "test.models.test_deterministic.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.models.test_gp_regression": {
  "data": {},
  "type": "module"
 },
 "test.models.test_gp_regression.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.models.test_gp_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.models.test_gp_regression.ExactMarginalLogLikelihood": {
  "data": {
   "shadows": "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood"
  },
  "type": "import"
 },
 "test.models.test_gp_regression.FixedNoiseGP": {
  "data": {
   "shadows": "botorch.models.gp_regression.FixedNoiseGP"
  },
  "type": "import"
 },
 "test.models.test_gp_regression.FixedNoiseGaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.FixedNoiseGaussianLikelihood"
  },
  "type": "import"
 },
 "test.models.test_gp_regression.GPyTorchPosterior": {
  "data": {
   "shadows": "botorch.posteriors.GPyTorchPosterior"
  },
  "type": "import"
 },
 "test.models.test_gp_regression.GammaPrior": {
  "data": {
   "shadows": "gpytorch.priors.GammaPrior"
  },
  "type": "import"
 },
 "test.models.test_gp_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.models.test_gp_regression.HeteroskedasticNoise": {
  "data": {
   "shadows": "gpytorch.likelihoods.HeteroskedasticNoise"
  },
  "type": "import"
 },
 "test.models.test_gp_regression.HeteroskedasticSingleTaskGP": {
  "data": {
   "shadows": "botorch.models.gp_regression.HeteroskedasticSingleTaskGP"
  },
  "type": "import"
 },
 "test.models.test_gp_regression.MaternKernel": {
  "data": {
   "shadows": "gpytorch.kernels.MaternKernel"
  },
  "type": "import"
 },
 "test.models.test_gp_regression.NoiseModelAddedLossTerm": {
  "data": {
   "shadows": "gpytorch.mlls.noise_model_added_loss_term.NoiseModelAddedLossTerm"
  },
  "type": "import"
 },
 "test.models.test_gp_regression.Normalize": {
  "data": {
   "shadows": "botorch.models.transforms.Normalize"
  },
  "type": "import"
 },
 "test.models.test_gp_regression.OptimizationWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.OptimizationWarning"
  },
  "type": "import"
 },
 "test.models.test_gp_regression.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.models.test_gp_regression.SingleTaskGP": {
  "data": {
   "shadows": "botorch.models.gp_regression.SingleTaskGP"
  },
  "type": "import"
 },
 "test.models.test_gp_regression.SobolQMCNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.SobolQMCNormalSampler"
  },
  "type": "import"
 },
 "test.models.test_gp_regression.Standardize": {
  "data": {
   "shadows": "botorch.models.transforms.Standardize"
  },
  "type": "import"
 },
 "test.models.test_gp_regression.TestFixedNoiseGP": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "test.models.test_gp_regression.TestSingleTaskGP"
   ]
  },
  "type": "class"
 },
 "test.models.test_gp_regression.TestFixedNoiseGP._get_model_and_data": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "botorch.models.gp_regression.FixedNoiseGP",
    "botorch.utils.testing._get_random_data",
    "test.models.test_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_gp_regression.TestFixedNoiseGP.test_construct_inputs": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "ValueError",
    "botorch.utils.containers.TrainingData",
    "test.models.test_gp_regression.itertools",
    "test.models.test_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_gp_regression.TestFixedNoiseGP.test_fixed_noise_likelihood": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "gpytorch.likelihoods.FixedNoiseGaussianLikelihood",
    "test.models.test_gp_regression.itertools",
    "test.models.test_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_gp_regression.TestHeteroskedasticSingleTaskGP": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "test.models.test_gp_regression.TestSingleTaskGP"
   ]
  },
  "type": "class"
 },
 "test.models.test_gp_regression.TestHeteroskedasticSingleTaskGP._get_model_and_data": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "botorch.models.gp_regression.HeteroskedasticSingleTaskGP",
    "botorch.utils.sampling.manual_seed",
    "botorch.utils.testing._get_random_data",
    "test.models.test_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_gp_regression.TestHeteroskedasticSingleTaskGP.test_condition_on_observations": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "NotImplementedError",
    "super"
   ]
  },
  "type": "function"
 },
 "test.models.test_gp_regression.TestHeteroskedasticSingleTaskGP.test_fantasize": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "NotImplementedError",
    "super"
   ]
  },
  "type": "function"
 },
 "test.models.test_gp_regression.TestHeteroskedasticSingleTaskGP.test_heteroskedastic_likelihood": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "botorch.models.gp_regression.SingleTaskGP",
    "gpytorch.likelihoods.GaussianLikelihood",
    "gpytorch.likelihoods.HeteroskedasticNoise",
    "gpytorch.likelihoods._GaussianLikelihoodBase",
    "gpytorch.mlls.noise_model_added_loss_term.NoiseModelAddedLossTerm",
    "isinstance",
    "test.models.test_gp_regression.itertools",
    "test.models.test_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_gp_regression.TestHeteroskedasticSingleTaskGP.test_subset_model": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "NotImplementedError",
    "super"
   ]
  },
  "type": "function"
 },
 "test.models.test_gp_regression.TestSingleTaskGP": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.models.test_gp_regression.TestSingleTaskGP._get_model_and_data": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "botorch.models.gp_regression.SingleTaskGP",
    "botorch.utils.testing._get_random_data"
   ]
  },
  "type": "function"
 },
 "test.models.test_gp_regression.TestSingleTaskGP.test_condition_on_observations": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "botorch.models.gp_regression.FixedNoiseGP",
    "botorch.models.transforms.Standardize",
    "botorch.utils.testing._get_random_data",
    "isinstance",
    "len",
    "test.models.test_gp_regression.itertools",
    "test.models.test_gp_regression.torch",
    "type"
   ]
  },
  "type": "function"
 },
 "test.models.test_gp_regression.TestSingleTaskGP.test_construct_inputs": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "botorch.utils.containers.TrainingData",
    "test.models.test_gp_regression.itertools",
    "test.models.test_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_gp_regression.TestSingleTaskGP.test_fantasize": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "botorch.models.transforms.Standardize",
    "botorch.sampling.SobolQMCNormalSampler",
    "test.models.test_gp_regression.itertools",
    "test.models.test_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_gp_regression.TestSingleTaskGP.test_gp": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "botorch.exceptions.warnings.OptimizationWarning",
    "botorch.fit_gpytorch_model",
    "botorch.models.transforms.Normalize",
    "botorch.models.transforms.Standardize",
    "botorch.posteriors.GPyTorchPosterior",
    "dict",
    "gpytorch.kernels.MaternKernel",
    "gpytorch.kernels.ScaleKernel",
    "gpytorch.means.ConstantMean",
    "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
    "gpytorch.priors.GammaPrior",
    "intf",
    "test.models.test_gp_regression._get_pvar_expected",
    "test.models.test_gp_regression.itertools",
    "test.models.test_gp_regression.torch",
    "test.models.test_gp_regression.warnings"
   ]
  },
  "type": "function"
 },
 "test.models.test_gp_regression.TestSingleTaskGP.test_subset_model": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "test.models.test_gp_regression.itertools",
    "test.models.test_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_gp_regression.TrainingData": {
  "data": {
   "shadows": "botorch.utils.containers.TrainingData"
  },
  "type": "import"
 },
 "test.models.test_gp_regression._GaussianLikelihoodBase": {
  "data": {
   "shadows": "gpytorch.likelihoods._GaussianLikelihoodBase"
  },
  "type": "import"
 },
 "test.models.test_gp_regression._get_pvar_expected": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "botorch.models.utils.add_output_dim",
    "gpytorch.likelihoods.FixedNoiseGaussianLikelihood",
    "isinstance",
    "model",
    "range",
    "test.models.test_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_gp_regression._get_random_data": {
  "data": {
   "shadows": "botorch.utils.testing._get_random_data"
  },
  "type": "import"
 },
 "test.models.test_gp_regression.add_output_dim": {
  "data": {
   "shadows": "botorch.models.utils.add_output_dim"
  },
  "type": "import"
 },
 "test.models.test_gp_regression.fit_gpytorch_model": {
  "data": {
   "shadows": "botorch.fit_gpytorch_model"
  },
  "type": "import"
 },
 "test.models.test_gp_regression.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "test.models.test_gp_regression.manual_seed": {
  "data": {
   "shadows": "botorch.utils.sampling.manual_seed"
  },
  "type": "import"
 },
 "test.models.test_gp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.models.test_gp_regression.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.models.test_gp_regression_fidelity": {
  "data": {},
  "type": "module"
 },
 "test.models.test_gp_regression_fidelity.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.models.test_gp_regression_fidelity.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.models.test_gp_regression_fidelity.ExactMarginalLogLikelihood": {
  "data": {
   "shadows": "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood"
  },
  "type": "import"
 },
 "test.models.test_gp_regression_fidelity.FixedNoiseGP": {
  "data": {
   "shadows": "botorch.models.gp_regression.FixedNoiseGP"
  },
  "type": "import"
 },
 "test.models.test_gp_regression_fidelity.FixedNoiseGaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.FixedNoiseGaussianLikelihood"
  },
  "type": "import"
 },
 "test.models.test_gp_regression_fidelity.FixedNoiseMultiFidelityGP": {
  "data": {
   "shadows": "botorch.models.gp_regression_fidelity.FixedNoiseMultiFidelityGP"
  },
  "type": "import"
 },
 "test.models.test_gp_regression_fidelity.GPyTorchPosterior": {
  "data": {
   "shadows": "botorch.posteriors.GPyTorchPosterior"
  },
  "type": "import"
 },
 "test.models.test_gp_regression_fidelity.Normalize": {
  "data": {
   "shadows": "botorch.models.transforms.Normalize"
  },
  "type": "import"
 },
 "test.models.test_gp_regression_fidelity.OptimizationWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.OptimizationWarning"
  },
  "type": "import"
 },
 "test.models.test_gp_regression_fidelity.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.scale_kernel.ScaleKernel"
  },
  "type": "import"
 },
 "test.models.test_gp_regression_fidelity.SingleTaskMultiFidelityGP": {
  "data": {
   "shadows": "botorch.models.gp_regression_fidelity.SingleTaskMultiFidelityGP"
  },
  "type": "import"
 },
 "test.models.test_gp_regression_fidelity.SobolQMCNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.SobolQMCNormalSampler"
  },
  "type": "import"
 },
 "test.models.test_gp_regression_fidelity.Standardize": {
  "data": {
   "shadows": "botorch.models.transforms.Standardize"
  },
  "type": "import"
 },
 "test.models.test_gp_regression_fidelity.TestFixedNoiseMultiFidelityGP": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "test.models.test_gp_regression_fidelity.TestSingleTaskMultiFidelityGP"
   ]
  },
  "type": "class"
 },
 "test.models.test_gp_regression_fidelity.TestFixedNoiseMultiFidelityGP._get_model_and_data": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "botorch.models.gp_regression_fidelity.FixedNoiseMultiFidelityGP",
    "test.models.test_gp_regression_fidelity._get_random_data_with_fidelity",
    "test.models.test_gp_regression_fidelity.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_gp_regression_fidelity.TestFixedNoiseMultiFidelityGP.test_construct_inputs": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "ValueError",
    "botorch.utils.containers.TrainingData",
    "test.models.test_gp_regression_fidelity.itertools",
    "test.models.test_gp_regression_fidelity.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_gp_regression_fidelity.TestFixedNoiseMultiFidelityGP.test_fixed_noise_likelihood": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "gpytorch.likelihoods.FixedNoiseGaussianLikelihood",
    "test.models.test_gp_regression_fidelity.itertools",
    "test.models.test_gp_regression_fidelity.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_gp_regression_fidelity.TestFixedNoiseMultiFidelityGP.test_init_error": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "botorch.exceptions.errors.UnsupportedError",
    "botorch.models.gp_regression_fidelity.FixedNoiseMultiFidelityGP",
    "test.models.test_gp_regression_fidelity.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_gp_regression_fidelity.TestSingleTaskMultiFidelityGP": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.models.test_gp_regression_fidelity.TestSingleTaskMultiFidelityGP._get_model_and_data": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "botorch.models.gp_regression_fidelity.SingleTaskMultiFidelityGP",
    "test.models.test_gp_regression_fidelity._get_random_data_with_fidelity"
   ]
  },
  "type": "function"
 },
 "test.models.test_gp_regression_fidelity.TestSingleTaskMultiFidelityGP.test_condition_on_observations": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "botorch.models.gp_regression.FixedNoiseGP",
    "isinstance",
    "len",
    "test.models.test_gp_regression_fidelity._get_random_data_with_fidelity",
    "test.models.test_gp_regression_fidelity.itertools",
    "test.models.test_gp_regression_fidelity.torch",
    "type"
   ]
  },
  "type": "function"
 },
 "test.models.test_gp_regression_fidelity.TestSingleTaskMultiFidelityGP.test_construct_inputs": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "ValueError",
    "botorch.utils.containers.TrainingData",
    "test.models.test_gp_regression_fidelity.itertools",
    "test.models.test_gp_regression_fidelity.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_gp_regression_fidelity.TestSingleTaskMultiFidelityGP.test_fantasize": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "botorch.sampling.SobolQMCNormalSampler",
    "test.models.test_gp_regression_fidelity.itertools",
    "test.models.test_gp_regression_fidelity.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_gp_regression_fidelity.TestSingleTaskMultiFidelityGP.test_gp": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "botorch.exceptions.warnings.OptimizationWarning",
    "botorch.fit_gpytorch_model",
    "botorch.models.transforms.Normalize",
    "botorch.models.transforms.Standardize",
    "botorch.posteriors.GPyTorchPosterior",
    "dict",
    "gpytorch.kernels.scale_kernel.ScaleKernel",
    "gpytorch.means.ConstantMean",
    "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
    "intf",
    "test.models.test_gp_regression_fidelity.itertools",
    "test.models.test_gp_regression_fidelity.torch",
    "test.models.test_gp_regression_fidelity.warnings"
   ]
  },
  "type": "function"
 },
 "test.models.test_gp_regression_fidelity.TestSingleTaskMultiFidelityGP.test_init_error": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "botorch.exceptions.errors.UnsupportedError",
    "botorch.models.gp_regression_fidelity.SingleTaskMultiFidelityGP",
    "test.models.test_gp_regression_fidelity.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_gp_regression_fidelity.TestSingleTaskMultiFidelityGP.test_subset_model": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "test.models.test_gp_regression_fidelity.itertools",
    "test.models.test_gp_regression_fidelity.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_gp_regression_fidelity.TrainingData": {
  "data": {
   "shadows": "botorch.utils.containers.TrainingData"
  },
  "type": "import"
 },
 "test.models.test_gp_regression_fidelity.UnsupportedError": {
  "data": {
   "shadows": "botorch.exceptions.errors.UnsupportedError"
  },
  "type": "import"
 },
 "test.models.test_gp_regression_fidelity._get_random_data": {
  "data": {
   "shadows": "botorch.utils.testing._get_random_data"
  },
  "type": "import"
 },
 "test.models.test_gp_regression_fidelity._get_random_data_with_fidelity": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "botorch.utils.testing._get_random_data",
    "test.models.test_gp_regression_fidelity.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_gp_regression_fidelity.fit_gpytorch_model": {
  "data": {
   "shadows": "botorch.fit_gpytorch_model"
  },
  "type": "import"
 },
 "test.models.test_gp_regression_fidelity.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "test.models.test_gp_regression_fidelity.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.models.test_gp_regression_fidelity.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.models.test_gpytorch": {
  "data": {},
  "type": "module"
 },
 "test.models.test_gpytorch.BatchedMultiOutputGPyTorchModel": {
  "data": {
   "shadows": "botorch.models.gpytorch.BatchedMultiOutputGPyTorchModel"
  },
  "type": "import"
 },
 "test.models.test_gpytorch.BotorchTensorDimensionError": {
  "data": {
   "shadows": "botorch.exceptions.BotorchTensorDimensionError"
  },
  "type": "import"
 },
 "test.models.test_gpytorch.BotorchTensorDimensionWarning": {
  "data": {
   "shadows": "botorch.exceptions.BotorchTensorDimensionWarning"
  },
  "type": "import"
 },
 "test.models.test_gpytorch.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.models.test_gpytorch.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.models.test_gpytorch.ExactGP": {
  "data": {
   "shadows": "gpytorch.models.ExactGP"
  },
  "type": "import"
 },
 "test.models.test_gpytorch.GPyTorchModel": {
  "data": {
   "shadows": "botorch.models.gpytorch.GPyTorchModel"
  },
  "type": "import"
 },
 "test.models.test_gpytorch.GPyTorchPosterior": {
  "data": {
   "shadows": "botorch.posteriors.gpytorch.GPyTorchPosterior"
  },
  "type": "import"
 },
 "test.models.test_gpytorch.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.models.test_gpytorch.IndependentModelList": {
  "data": {
   "shadows": "gpytorch.models.IndependentModelList"
  },
  "type": "import"
 },
 "test.models.test_gpytorch.ModelListGPyTorchModel": {
  "data": {
   "shadows": "botorch.models.gpytorch.ModelListGPyTorchModel"
  },
  "type": "import"
 },
 "test.models.test_gpytorch.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.models.test_gpytorch.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.models.test_gpytorch.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.models.test_gpytorch.SimpleBatchedMultiOutputGPyTorchModel": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "botorch.models.gpytorch.BatchedMultiOutputGPyTorchModel",
    "gpytorch.models.ExactGP"
   ]
  },
  "type": "class"
 },
 "test.models.test_gpytorch.SimpleBatchedMultiOutputGPyTorchModel.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "gpytorch.likelihoods.GaussianLikelihood",
    "gpytorch.means.ConstantMean",
    "super"
   ]
  },
  "type": "function"
 },
 "test.models.test_gpytorch.SimpleBatchedMultiOutputGPyTorchModel.forward": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "gpytorch.distributions.MultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.models.test_gpytorch.SimpleGPyTorchModel": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "botorch.models.gpytorch.GPyTorchModel",
    "gpytorch.models.ExactGP"
   ]
  },
  "type": "class"
 },
 "test.models.test_gpytorch.SimpleGPyTorchModel.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "gpytorch.likelihoods.GaussianLikelihood",
    "gpytorch.means.ConstantMean",
    "outcome_transform",
    "super"
   ]
  },
  "type": "function"
 },
 "test.models.test_gpytorch.SimpleGPyTorchModel.forward": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "gpytorch.distributions.MultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.models.test_gpytorch.SimpleModelListGPyTorchModel": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "botorch.models.gpytorch.ModelListGPyTorchModel",
    "gpytorch.models.IndependentModelList"
   ]
  },
  "type": "class"
 },
 "test.models.test_gpytorch.SimpleModelListGPyTorchModel.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "botorch.models.gpytorch.GPyTorchModel",
    "super"
   ]
  },
  "type": "function"
 },
 "test.models.test_gpytorch.SobolQMCNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.SobolQMCNormalSampler"
  },
  "type": "import"
 },
 "test.models.test_gpytorch.Standardize": {
  "data": {
   "shadows": "botorch.models.transforms.Standardize"
  },
  "type": "import"
 },
 "test.models.test_gpytorch.TestBatchedMultiOutputGPyTorchModel": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.models.test_gpytorch.TestBatchedMultiOutputGPyTorchModel.test_batched_multi_output_gpytorch_model": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.posteriors.gpytorch.GPyTorchPosterior",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "get_batch_dims",
    "test.models.test_gpytorch.SimpleBatchedMultiOutputGPyTorchModel",
    "test.models.test_gpytorch.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_gpytorch.TestGPyTorchModel": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.models.test_gpytorch.TestGPyTorchModel.test_gpytorch_model": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.exceptions.BotorchTensorDimensionError",
    "botorch.models.transforms.Standardize",
    "botorch.posteriors.gpytorch.GPyTorchPosterior",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "test.models.test_gpytorch.SimpleGPyTorchModel",
    "test.models.test_gpytorch.itertools",
    "test.models.test_gpytorch.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_gpytorch.TestGPyTorchModel.test_validate_tensor_args": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "botorch.exceptions.BotorchTensorDimensionError",
    "botorch.exceptions.BotorchTensorDimensionWarning",
    "botorch.models.gpytorch.GPyTorchModel._validate_tensor_args",
    "botorch.settings.debug",
    "len",
    "test.models.test_gpytorch.itertools",
    "test.models.test_gpytorch.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_gpytorch.TestModelListGPyTorchModel": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.models.test_gpytorch.TestModelListGPyTorchModel.test_model_list_gpytorch_model": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.posteriors.gpytorch.GPyTorchPosterior",
    "test.models.test_gpytorch.SimpleGPyTorchModel",
    "test.models.test_gpytorch.SimpleModelListGPyTorchModel",
    "test.models.test_gpytorch.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_gpytorch.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "test.models.test_gpytorch.settings": {
  "data": {
   "shadows": "botorch.settings"
  },
  "type": "import"
 },
 "test.models.test_gpytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.models.test_model": {
  "data": {},
  "type": "module"
 },
 "test.models.test_model.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.models.test_model.Model": {
  "data": {
   "shadows": "botorch.models.model.Model"
  },
  "type": "import"
 },
 "test.models.test_model.NotSoAbstractBaseModel": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "botorch.models.model.Model"
   ]
  },
  "type": "class"
 },
 "test.models.test_model.NotSoAbstractBaseModel.posterior": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "test.models.test_model.TestBaseModel": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.models.test_model.TestBaseModel.test_abstract_base_model": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "TypeError",
    "botorch.models.model.Model"
   ]
  },
  "type": "function"
 },
 "test.models.test_model.TestBaseModel.test_not_so_abstract_base_model": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "NotImplementedError",
    "test.models.test_model.NotSoAbstractBaseModel"
   ]
  },
  "type": "function"
 },
 "test.models.test_model_list_gp_regression": {
  "data": {},
  "type": "module"
 },
 "test.models.test_model_list_gp_regression.BotorchTensorDimensionError": {
  "data": {
   "shadows": "botorch.exceptions.errors.BotorchTensorDimensionError"
  },
  "type": "import"
 },
 "test.models.test_model_list_gp_regression.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.models.test_model_list_gp_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.models.test_model_list_gp_regression.ExactMarginalLogLikelihood": {
  "data": {
   "shadows": "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood"
  },
  "type": "import"
 },
 "test.models.test_model_list_gp_regression.FixedNoiseGP": {
  "data": {
   "shadows": "botorch.models.gp_regression.FixedNoiseGP"
  },
  "type": "import"
 },
 "test.models.test_model_list_gp_regression.GPyTorchPosterior": {
  "data": {
   "shadows": "botorch.posteriors.GPyTorchPosterior"
  },
  "type": "import"
 },
 "test.models.test_model_list_gp_regression.GammaPrior": {
  "data": {
   "shadows": "gpytorch.priors.GammaPrior"
  },
  "type": "import"
 },
 "test.models.test_model_list_gp_regression.LikelihoodList": {
  "data": {
   "shadows": "gpytorch.likelihoods.LikelihoodList"
  },
  "type": "import"
 },
 "test.models.test_model_list_gp_regression.MaternKernel": {
  "data": {
   "shadows": "gpytorch.kernels.MaternKernel"
  },
  "type": "import"
 },
 "test.models.test_model_list_gp_regression.ModelListGP": {
  "data": {
   "shadows": "botorch.models.ModelListGP"
  },
  "type": "import"
 },
 "test.models.test_model_list_gp_regression.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "test.models.test_model_list_gp_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.models.test_model_list_gp_regression.OptimizationWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.OptimizationWarning"
  },
  "type": "import"
 },
 "test.models.test_model_list_gp_regression.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.models.test_model_list_gp_regression.SingleTaskGP": {
  "data": {
   "shadows": "botorch.models.gp_regression.SingleTaskGP"
  },
  "type": "import"
 },
 "test.models.test_model_list_gp_regression.Standardize": {
  "data": {
   "shadows": "botorch.models.transforms.Standardize"
  },
  "type": "import"
 },
 "test.models.test_model_list_gp_regression.SumMarginalLogLikelihood": {
  "data": {
   "shadows": "gpytorch.mlls.SumMarginalLogLikelihood"
  },
  "type": "import"
 },
 "test.models.test_model_list_gp_regression.TestModelListGP": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.models.test_model_list_gp_regression.TestModelListGP.test_ModelListGP": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "all",
    "botorch.exceptions.errors.BotorchTensorDimensionError",
    "botorch.exceptions.warnings.OptimizationWarning",
    "botorch.fit.fit_gpytorch_model",
    "botorch.models.ModelListGP",
    "botorch.models.transforms.Standardize",
    "botorch.posteriors.GPyTorchPosterior",
    "gpytorch.distributions.MultitaskMultivariateNormal",
    "gpytorch.distributions.MultivariateNormal",
    "gpytorch.kernels.MaternKernel",
    "gpytorch.kernels.ScaleKernel",
    "gpytorch.likelihoods.LikelihoodList",
    "gpytorch.means.ConstantMean",
    "gpytorch.mlls.SumMarginalLogLikelihood",
    "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
    "gpytorch.priors.GammaPrior",
    "len",
    "set",
    "test.models.test_model_list_gp_regression._get_model",
    "test.models.test_model_list_gp_regression.itertools",
    "test.models.test_model_list_gp_regression.torch",
    "test.models.test_model_list_gp_regression.warnings"
   ]
  },
  "type": "function"
 },
 "test.models.test_model_list_gp_regression.TestModelListGP.test_ModelListGP_fixed_noise": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "botorch.exceptions.errors.BotorchTensorDimensionError",
    "botorch.exceptions.warnings.OptimizationWarning",
    "botorch.fit.fit_gpytorch_model",
    "botorch.models.ModelListGP",
    "botorch.posteriors.GPyTorchPosterior",
    "gpytorch.distributions.MultitaskMultivariateNormal",
    "gpytorch.distributions.MultivariateNormal",
    "gpytorch.kernels.MaternKernel",
    "gpytorch.kernels.ScaleKernel",
    "gpytorch.likelihoods.LikelihoodList",
    "gpytorch.means.ConstantMean",
    "gpytorch.mlls.SumMarginalLogLikelihood",
    "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
    "gpytorch.priors.GammaPrior",
    "test.models.test_model_list_gp_regression._get_model",
    "test.models.test_model_list_gp_regression.itertools",
    "test.models.test_model_list_gp_regression.torch",
    "test.models.test_model_list_gp_regression.warnings"
   ]
  },
  "type": "function"
 },
 "test.models.test_model_list_gp_regression.TestModelListGP.test_ModelListGP_single": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "botorch.models.ModelListGP",
    "botorch.models.gp_regression.SingleTaskGP",
    "botorch.posteriors.GPyTorchPosterior",
    "botorch.utils.testing._get_random_data",
    "gpytorch.distributions.MultivariateNormal",
    "test.models.test_model_list_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_model_list_gp_regression._get_model": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "botorch.models.ModelListGP",
    "botorch.models.gp_regression.FixedNoiseGP",
    "botorch.models.gp_regression.SingleTaskGP",
    "botorch.models.transforms.Standardize",
    "botorch.utils.testing._get_random_data",
    "test.models.test_model_list_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_model_list_gp_regression._get_random_data": {
  "data": {
   "shadows": "botorch.utils.testing._get_random_data"
  },
  "type": "import"
 },
 "test.models.test_model_list_gp_regression.fit_gpytorch_model": {
  "data": {
   "shadows": "botorch.fit.fit_gpytorch_model"
  },
  "type": "import"
 },
 "test.models.test_model_list_gp_regression.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "test.models.test_model_list_gp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.models.test_model_list_gp_regression.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.models.test_multitask": {
  "data": {},
  "type": "module"
 },
 "test.models.test_multitask.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.models.test_multitask.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.models.test_multitask.ExactMarginalLogLikelihood": {
  "data": {
   "shadows": "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood"
  },
  "type": "import"
 },
 "test.models.test_multitask.FixedNoiseGaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.FixedNoiseGaussianLikelihood"
  },
  "type": "import"
 },
 "test.models.test_multitask.FixedNoiseMultiTaskGP": {
  "data": {
   "shadows": "botorch.models.multitask.FixedNoiseMultiTaskGP"
  },
  "type": "import"
 },
 "test.models.test_multitask.GPyTorchPosterior": {
  "data": {
   "shadows": "botorch.posteriors.GPyTorchPosterior"
  },
  "type": "import"
 },
 "test.models.test_multitask.GammaPrior": {
  "data": {
   "shadows": "gpytorch.priors.GammaPrior"
  },
  "type": "import"
 },
 "test.models.test_multitask.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.models.test_multitask.IndexKernel": {
  "data": {
   "shadows": "gpytorch.kernels.IndexKernel"
  },
  "type": "import"
 },
 "test.models.test_multitask.LKJCovariancePrior": {
  "data": {
   "shadows": "gpytorch.priors.lkj_prior.LKJCovariancePrior"
  },
  "type": "import"
 },
 "test.models.test_multitask.MaternKernel": {
  "data": {
   "shadows": "gpytorch.kernels.MaternKernel"
  },
  "type": "import"
 },
 "test.models.test_multitask.MultiTaskGP": {
  "data": {
   "shadows": "botorch.models.multitask.MultiTaskGP"
  },
  "type": "import"
 },
 "test.models.test_multitask.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "test.models.test_multitask.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.models.test_multitask.Normalize": {
  "data": {
   "shadows": "botorch.models.transforms.input.Normalize"
  },
  "type": "import"
 },
 "test.models.test_multitask.OptimizationWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.OptimizationWarning"
  },
  "type": "import"
 },
 "test.models.test_multitask.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.models.test_multitask.TestFixedNoiseMultiTaskGP": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.models.test_multitask.TestFixedNoiseMultiTaskGP.test_FixedNoiseMultiTaskGP": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "ValueError",
    "botorch.exceptions.warnings.OptimizationWarning",
    "botorch.fit.fit_gpytorch_model",
    "botorch.models.multitask.FixedNoiseMultiTaskGP",
    "botorch.models.transforms.input.Normalize",
    "botorch.posteriors.GPyTorchPosterior",
    "gpytorch.distributions.MultitaskMultivariateNormal",
    "gpytorch.distributions.MultivariateNormal",
    "gpytorch.kernels.IndexKernel",
    "gpytorch.kernels.MaternKernel",
    "gpytorch.kernels.ScaleKernel",
    "gpytorch.likelihoods.FixedNoiseGaussianLikelihood",
    "gpytorch.means.ConstantMean",
    "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
    "gpytorch.priors.GammaPrior",
    "test.models.test_multitask._get_fixed_noise_model_and_training_data",
    "test.models.test_multitask._get_random_mt_data",
    "test.models.test_multitask.itertools",
    "test.models.test_multitask.torch",
    "test.models.test_multitask.warnings"
   ]
  },
  "type": "function"
 },
 "test.models.test_multitask.TestFixedNoiseMultiTaskGP.test_FixedNoiseMultiTaskGP_construct_inputs": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "ValueError",
    "botorch.utils.containers.TrainingData",
    "gpytorch.priors.lkj_prior.LKJCovariancePrior",
    "test.models.test_multitask._get_fixed_noise_model_and_training_data",
    "test.models.test_multitask.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_multitask.TestFixedNoiseMultiTaskGP.test_FixedNoiseMultiTaskGP_fixed_prior": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "botorch.models.multitask.FixedNoiseMultiTaskGP",
    "gpytorch.kernels.IndexKernel",
    "gpytorch.priors.lkj_prior.LKJCovariancePrior",
    "test.models.test_multitask._get_fixed_noise_and_prior_model",
    "test.models.test_multitask.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_multitask.TestFixedNoiseMultiTaskGP.test_FixedNoiseMultiTaskGP_single_output": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "botorch.exceptions.warnings.OptimizationWarning",
    "botorch.fit.fit_gpytorch_model",
    "botorch.models.multitask.FixedNoiseMultiTaskGP",
    "botorch.posteriors.GPyTorchPosterior",
    "gpytorch.distributions.MultivariateNormal",
    "gpytorch.kernels.IndexKernel",
    "gpytorch.kernels.MaternKernel",
    "gpytorch.kernels.ScaleKernel",
    "gpytorch.likelihoods.FixedNoiseGaussianLikelihood",
    "gpytorch.means.ConstantMean",
    "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
    "gpytorch.priors.GammaPrior",
    "test.models.test_multitask._get_fixed_noise_model_single_output",
    "test.models.test_multitask.torch",
    "test.models.test_multitask.warnings"
   ]
  },
  "type": "function"
 },
 "test.models.test_multitask.TestFixedNoiseMultiTaskGP.test_MultiTaskGP_construct_inputs": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "ValueError",
    "botorch.utils.containers.TrainingData",
    "gpytorch.priors.lkj_prior.LKJCovariancePrior",
    "test.models.test_multitask._get_model_and_training_data",
    "test.models.test_multitask.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_multitask.TestMultiTaskGP": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.models.test_multitask.TestMultiTaskGP.test_MultiTaskGP": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "ValueError",
    "botorch.exceptions.warnings.OptimizationWarning",
    "botorch.fit.fit_gpytorch_model",
    "botorch.models.multitask.MultiTaskGP",
    "botorch.models.transforms.input.Normalize",
    "botorch.posteriors.GPyTorchPosterior",
    "gpytorch.distributions.MultitaskMultivariateNormal",
    "gpytorch.distributions.MultivariateNormal",
    "gpytorch.kernels.IndexKernel",
    "gpytorch.kernels.MaternKernel",
    "gpytorch.kernels.ScaleKernel",
    "gpytorch.likelihoods.GaussianLikelihood",
    "gpytorch.means.ConstantMean",
    "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
    "gpytorch.priors.GammaPrior",
    "test.models.test_multitask._get_model_and_training_data",
    "test.models.test_multitask._get_random_mt_data",
    "test.models.test_multitask.itertools",
    "test.models.test_multitask.torch",
    "test.models.test_multitask.warnings"
   ]
  },
  "type": "function"
 },
 "test.models.test_multitask.TestMultiTaskGP.test_MultiTaskGP_fixed_prior": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "botorch.models.multitask.MultiTaskGP",
    "gpytorch.kernels.IndexKernel",
    "gpytorch.priors.lkj_prior.LKJCovariancePrior",
    "test.models.test_multitask._get_fixed_prior_model",
    "test.models.test_multitask.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_multitask.TestMultiTaskGP.test_MultiTaskGP_single_output": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "botorch.exceptions.warnings.OptimizationWarning",
    "botorch.fit.fit_gpytorch_model",
    "botorch.models.multitask.MultiTaskGP",
    "botorch.posteriors.GPyTorchPosterior",
    "gpytorch.distributions.MultivariateNormal",
    "gpytorch.kernels.IndexKernel",
    "gpytorch.kernels.MaternKernel",
    "gpytorch.kernels.ScaleKernel",
    "gpytorch.likelihoods.GaussianLikelihood",
    "gpytorch.means.ConstantMean",
    "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
    "gpytorch.priors.GammaPrior",
    "test.models.test_multitask._get_model_single_output",
    "test.models.test_multitask.torch",
    "test.models.test_multitask.warnings"
   ]
  },
  "type": "function"
 },
 "test.models.test_multitask.TrainingData": {
  "data": {
   "shadows": "botorch.utils.containers.TrainingData"
  },
  "type": "import"
 },
 "test.models.test_multitask._get_fixed_noise_and_prior_model": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "botorch.models.multitask.FixedNoiseMultiTaskGP",
    "gpytorch.priors.GammaPrior",
    "gpytorch.priors.lkj_prior.LKJCovariancePrior",
    "test.models.test_multitask._get_random_mt_data",
    "test.models.test_multitask.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_multitask._get_fixed_noise_model": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "test.models.test_multitask._get_fixed_noise_model_and_training_data"
   ]
  },
  "type": "function"
 },
 "test.models.test_multitask._get_fixed_noise_model_and_training_data": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "botorch.models.multitask.FixedNoiseMultiTaskGP",
    "test.models.test_multitask._get_random_mt_data",
    "test.models.test_multitask.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_multitask._get_fixed_noise_model_single_output": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "botorch.models.multitask.FixedNoiseMultiTaskGP",
    "test.models.test_multitask._get_random_mt_data",
    "test.models.test_multitask.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_multitask._get_fixed_prior_model": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "botorch.models.multitask.MultiTaskGP",
    "gpytorch.priors.GammaPrior",
    "gpytorch.priors.lkj_prior.LKJCovariancePrior",
    "test.models.test_multitask._get_random_mt_data",
    "test.models.test_multitask.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_multitask._get_model": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "test.models.test_multitask._get_model_and_training_data"
   ]
  },
  "type": "function"
 },
 "test.models.test_multitask._get_model_and_training_data": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "botorch.models.multitask.MultiTaskGP",
    "test.models.test_multitask._get_random_mt_data"
   ]
  },
  "type": "function"
 },
 "test.models.test_multitask._get_model_single_output": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "botorch.models.multitask.MultiTaskGP",
    "test.models.test_multitask._get_random_mt_data"
   ]
  },
  "type": "function"
 },
 "test.models.test_multitask._get_random_mt_data": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "test.models.test_multitask.math",
    "test.models.test_multitask.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_multitask.fit_gpytorch_model": {
  "data": {
   "shadows": "botorch.fit.fit_gpytorch_model"
  },
  "type": "import"
 },
 "test.models.test_multitask.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "test.models.test_multitask.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.models.test_multitask.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.models.test_multitask.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.models.test_pairwise_gp": {
  "data": {},
  "type": "module"
 },
 "test.models.test_pairwise_gp.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.models.test_pairwise_gp.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.models.test_pairwise_gp.GPyTorchPosterior": {
  "data": {
   "shadows": "botorch.posteriors.GPyTorchPosterior"
  },
  "type": "import"
 },
 "test.models.test_pairwise_gp.GammaPrior": {
  "data": {
   "shadows": "gpytorch.priors.GammaPrior"
  },
  "type": "import"
 },
 "test.models.test_pairwise_gp.LinearKernel": {
  "data": {
   "shadows": "gpytorch.kernels.linear_kernel.LinearKernel"
  },
  "type": "import"
 },
 "test.models.test_pairwise_gp.OptimizationWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.OptimizationWarning"
  },
  "type": "import"
 },
 "test.models.test_pairwise_gp.PairwiseGP": {
  "data": {
   "shadows": "botorch.models.pairwise_gp.PairwiseGP"
  },
  "type": "import"
 },
 "test.models.test_pairwise_gp.PairwiseLaplaceMarginalLogLikelihood": {
  "data": {
   "shadows": "botorch.models.pairwise_gp.PairwiseLaplaceMarginalLogLikelihood"
  },
  "type": "import"
 },
 "test.models.test_pairwise_gp.PairwiseSobolQMCNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.pairwise_samplers.PairwiseSobolQMCNormalSampler"
  },
  "type": "import"
 },
 "test.models.test_pairwise_gp.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.models.test_pairwise_gp.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.models.test_pairwise_gp.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.models.test_pairwise_gp.TestPairwiseGP": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.models.test_pairwise_gp.TestPairwiseGP._get_model_and_data": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "botorch.models.pairwise_gp.PairwiseGP"
   ]
  },
  "type": "function"
 },
 "test.models.test_pairwise_gp.TestPairwiseGP._make_rand_mini_data": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "test.models.test_pairwise_gp.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_pairwise_gp.TestPairwiseGP.test_condition_on_observations": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.models.pairwise_gp.PairwiseGP",
    "len",
    "prior_m",
    "prior_m.condition_on_observations",
    "test.models.test_pairwise_gp.itertools",
    "test.models.test_pairwise_gp.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_pairwise_gp.TestPairwiseGP.test_fantasize": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "botorch.sampling.pairwise_samplers.PairwiseSobolQMCNormalSampler",
    "test.models.test_pairwise_gp.itertools",
    "test.models.test_pairwise_gp.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_pairwise_gp.TestPairwiseGP.test_pairwise_gp": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "RuntimeError",
    "RuntimeWarning",
    "botorch.exceptions.warnings.OptimizationWarning",
    "botorch.fit_gpytorch_model",
    "botorch.models.pairwise_gp.PairwiseGP",
    "botorch.models.pairwise_gp.PairwiseLaplaceMarginalLogLikelihood",
    "botorch.posteriors.GPyTorchPosterior",
    "custom_m",
    "custom_m.covar_module",
    "custom_m.posterior",
    "custom_mll",
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "gpytorch.kernels.linear_kernel.LinearKernel",
    "gpytorch.means.ConstantMean",
    "gpytorch.priors.GammaPrior",
    "gpytorch.priors.SmoothedBoxPrior",
    "prior_m",
    "prior_m.eval",
    "prior_m.posterior",
    "test.models.test_pairwise_gp.itertools",
    "test.models.test_pairwise_gp.torch",
    "test.models.test_pairwise_gp.warnings"
   ]
  },
  "type": "function"
 },
 "test.models.test_pairwise_gp.fit_gpytorch_model": {
  "data": {
   "shadows": "botorch.fit_gpytorch_model"
  },
  "type": "import"
 },
 "test.models.test_pairwise_gp.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "test.models.test_pairwise_gp.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.models.test_pairwise_gp.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.models.test_utils": {
  "data": {},
  "type": "module"
 },
 "test.models.test_utils.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.models.test_utils.InputDataError": {
  "data": {
   "shadows": "botorch.exceptions.InputDataError"
  },
  "type": "import"
 },
 "test.models.test_utils.InputDataWarning": {
  "data": {
   "shadows": "botorch.exceptions.InputDataWarning"
  },
  "type": "import"
 },
 "test.models.test_utils.TestAddOutputDim": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.models.test_utils.TestAddOutputDim.test_add_output_dim": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.models.utils.add_output_dim",
    "test.models.test_utils.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_utils.TestGPTPosteriorSettings": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.models.test_utils.TestGPTPosteriorSettings.test_gpt_posterior_settings": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "botorch.models.utils.gpt_posterior_settings",
    "gpytorch.settings.debug.off",
    "gpytorch.settings.detach_test_caches.off",
    "gpytorch.settings.detach_test_caches.on",
    "gpytorch.settings.fast_pred_var.on",
    "gpytorch.settings.propagate_grads",
    "gpytorch.settings.propagate_grads.off"
   ]
  },
  "type": "function"
 },
 "test.models.test_utils.TestInputDataChecks": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.models.test_utils.TestInputDataChecks.test_check_min_max_scaling": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "any",
    "botorch.exceptions.InputDataError",
    "botorch.exceptions.InputDataWarning",
    "botorch.models.utils.check_min_max_scaling",
    "gpytorch.settings.debug",
    "issubclass",
    "str",
    "test.models.test_utils.torch",
    "test.models.test_utils.warnings"
   ]
  },
  "type": "function"
 },
 "test.models.test_utils.TestInputDataChecks.test_check_no_nans": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "botorch.exceptions.InputDataError",
    "botorch.models.utils.check_no_nans",
    "float",
    "test.models.test_utils.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_utils.TestInputDataChecks.test_check_standardization": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "any",
    "botorch.exceptions.InputDataError",
    "botorch.exceptions.InputDataWarning",
    "botorch.models.utils.check_standardization",
    "gpytorch.settings.debug",
    "issubclass",
    "str",
    "test.models.test_utils.torch",
    "test.models.test_utils.warnings"
   ]
  },
  "type": "function"
 },
 "test.models.test_utils.TestInputDataChecks.test_validate_input_scaling": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "any",
    "botorch.exceptions.InputDataError",
    "botorch.exceptions.InputDataWarning",
    "botorch.models.utils.validate_input_scaling",
    "float",
    "gpytorch.settings.debug",
    "gpytorch.settings.validate_input_scaling",
    "issubclass",
    "test.models.test_utils.torch",
    "test.models.test_utils.warnings"
   ]
  },
  "type": "function"
 },
 "test.models.test_utils.TestMultiOutputToBatchModeTransform": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.models.test_utils.TestMultiOutputToBatchModeTransform.test_multioutput_to_batch_mode_transform": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "botorch.models.utils.multioutput_to_batch_mode_transform",
    "test.models.test_utils.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_utils.add_output_dim": {
  "data": {
   "shadows": "botorch.models.utils.add_output_dim"
  },
  "type": "import"
 },
 "test.models.test_utils.check_min_max_scaling": {
  "data": {
   "shadows": "botorch.models.utils.check_min_max_scaling"
  },
  "type": "import"
 },
 "test.models.test_utils.check_no_nans": {
  "data": {
   "shadows": "botorch.models.utils.check_no_nans"
  },
  "type": "import"
 },
 "test.models.test_utils.check_standardization": {
  "data": {
   "shadows": "botorch.models.utils.check_standardization"
  },
  "type": "import"
 },
 "test.models.test_utils.gpt_posterior_settings": {
  "data": {
   "shadows": "botorch.models.utils.gpt_posterior_settings"
  },
  "type": "import"
 },
 "test.models.test_utils.gpt_settings": {
  "data": {
   "shadows": "gpytorch.settings"
  },
  "type": "import"
 },
 "test.models.test_utils.multioutput_to_batch_mode_transform": {
  "data": {
   "shadows": "botorch.models.utils.multioutput_to_batch_mode_transform"
  },
  "type": "import"
 },
 "test.models.test_utils.settings": {
  "data": {
   "shadows": "botorch.settings"
  },
  "type": "import"
 },
 "test.models.test_utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.models.test_utils.validate_input_scaling": {
  "data": {
   "shadows": "botorch.models.utils.validate_input_scaling"
  },
  "type": "import"
 },
 "test.models.test_utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.models.transforms": {
  "data": {},
  "type": "module"
 },
 "test.models.transforms.test_input": {
  "data": {},
  "type": "module"
 },
 "test.models.transforms.test_input.BotorchTensorDimensionError": {
  "data": {
   "shadows": "botorch.exceptions.errors.BotorchTensorDimensionError"
  },
  "type": "import"
 },
 "test.models.transforms.test_input.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.models.transforms.test_input.ChainedInputTransform": {
  "data": {
   "shadows": "botorch.models.transforms.input.ChainedInputTransform"
  },
  "type": "import"
 },
 "test.models.transforms.test_input.InputTransform": {
  "data": {
   "shadows": "botorch.models.transforms.input.InputTransform"
  },
  "type": "import"
 },
 "test.models.transforms.test_input.Kumaraswamy": {
  "data": {
   "shadows": "botorch.distributions.distributions.Kumaraswamy"
  },
  "type": "import"
 },
 "test.models.transforms.test_input.Log10": {
  "data": {
   "shadows": "botorch.models.transforms.input.Log10"
  },
  "type": "import"
 },
 "test.models.transforms.test_input.LogNormalPrior": {
  "data": {
   "shadows": "gpytorch.priors.LogNormalPrior"
  },
  "type": "import"
 },
 "test.models.transforms.test_input.Module": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "test.models.transforms.test_input.Normalize": {
  "data": {
   "shadows": "botorch.models.transforms.input.Normalize"
  },
  "type": "import"
 },
 "test.models.transforms.test_input.NotSoAbstractInputTransform": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "botorch.models.transforms.input.InputTransform",
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "test.models.transforms.test_input.NotSoAbstractInputTransform.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "test.models.transforms.test_input.NotSoAbstractInputTransform.transform": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "test.models.transforms.test_input.Round": {
  "data": {
   "shadows": "botorch.models.transforms.input.Round"
  },
  "type": "import"
 },
 "test.models.transforms.test_input.TestInputTransforms": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.models.transforms.test_input.TestInputTransforms.test_abstract_base_input_transform": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "botorch.models.transforms.input.InputTransform",
    "ipt",
    "ipt.equals",
    "ipt.eval",
    "ipt.untransform",
    "test.models.transforms.test_input.NotSoAbstractInputTransform",
    "test.models.transforms.test_input.torch"
   ]
  },
  "type": "function"
 },
 "test.models.transforms.test_input.TestInputTransforms.test_chained_input_transform": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "botorch.models.transforms.input.ChainedInputTransform",
    "botorch.models.transforms.input.Normalize",
    "copy.deepcopy",
    "sorted",
    "test.models.transforms.test_input.itertools",
    "test.models.transforms.test_input.torch",
    "tf",
    "tf.equals",
    "tf.eval",
    "tf.preprocess_transform",
    "tf.untransform",
    "tf1_",
    "tf2_"
   ]
  },
  "type": "function"
 },
 "test.models.transforms.test_input.TestInputTransforms.test_log10_transform": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "botorch.models.transforms.input.Log10",
    "log_tf",
    "log_tf.equals",
    "log_tf.eval",
    "log_tf.preprocess_transform",
    "log_tf.transform_on_preprocess",
    "log_tf.untransform",
    "test.models.transforms.test_input.torch"
   ]
  },
  "type": "function"
 },
 "test.models.transforms.test_input.TestInputTransforms.test_normalize": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "botorch.exceptions.errors.BotorchTensorDimensionError",
    "botorch.models.transforms.input.Normalize",
    "nlz",
    "nlz.bounds",
    "nlz.equals",
    "nlz.eval",
    "nlz.untransform",
    "test.models.transforms.test_input.torch"
   ]
  },
  "type": "function"
 },
 "test.models.transforms.test_input.TestInputTransforms.test_round_transform": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.models.transforms.input.Round",
    "round_tf",
    "round_tf.equals",
    "round_tf.eval",
    "round_tf.preprocess_transform",
    "round_tf.transform_on_preprocess",
    "round_tf.untransform",
    "test.models.transforms.test_input.itertools",
    "test.models.transforms.test_input.torch"
   ]
  },
  "type": "function"
 },
 "test.models.transforms.test_input.TestInputTransforms.test_warp_transform": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "botorch.distributions.distributions.Kumaraswamy",
    "enumerate",
    "gpytorch.priors.LogNormalPrior",
    "test.models.transforms.test_input.get_test_warp",
    "test.models.transforms.test_input.torch",
    "warp_tf",
    "warp_tf._set_concentration",
    "warp_tf.concentration0.grad",
    "warp_tf.concentration0.shape",
    "warp_tf.concentration1.grad",
    "warp_tf.concentration1.shape",
    "warp_tf.eps",
    "warp_tf.equals",
    "warp_tf.eval",
    "warp_tf.named_priors",
    "warp_tf.preprocess_transform",
    "warp_tf.transform_on_preprocess",
    "warp_tf.untransform"
   ]
  },
  "type": "function"
 },
 "test.models.transforms.test_input.Warp": {
  "data": {
   "shadows": "botorch.models.transforms.input.Warp"
  },
  "type": "import"
 },
 "test.models.transforms.test_input.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "test.models.transforms.test_input.get_test_warp": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "botorch.models.transforms.input.Warp",
    "test.models.transforms.test_input.torch"
   ]
  },
  "type": "function"
 },
 "test.models.transforms.test_input.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "test.models.transforms.test_input.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.models.transforms.test_outcome": {
  "data": {},
  "type": "module"
 },
 "test.models.transforms.test_outcome.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.models.transforms.test_outcome.ChainedOutcomeTransform": {
  "data": {
   "shadows": "botorch.models.transforms.outcome.ChainedOutcomeTransform"
  },
  "type": "import"
 },
 "test.models.transforms.test_outcome.GPyTorchPosterior": {
  "data": {
   "shadows": "botorch.posteriors.GPyTorchPosterior"
  },
  "type": "import"
 },
 "test.models.transforms.test_outcome.Log": {
  "data": {
   "shadows": "botorch.models.transforms.outcome.Log"
  },
  "type": "import"
 },
 "test.models.transforms.test_outcome.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "test.models.transforms.test_outcome.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.models.transforms.test_outcome.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.models.transforms.test_outcome.NotSoAbstractOutcomeTransform": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "botorch.models.transforms.outcome.OutcomeTransform"
   ]
  },
  "type": "class"
 },
 "test.models.transforms.test_outcome.NotSoAbstractOutcomeTransform.forward": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "test.models.transforms.test_outcome.OutcomeTransform": {
  "data": {
   "shadows": "botorch.models.transforms.outcome.OutcomeTransform"
  },
  "type": "import"
 },
 "test.models.transforms.test_outcome.Standardize": {
  "data": {
   "shadows": "botorch.models.transforms.outcome.Standardize"
  },
  "type": "import"
 },
 "test.models.transforms.test_outcome.TestOutcomeTransforms": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.models.transforms.test_outcome.TestOutcomeTransforms.test_abstract_base_outcome_transform": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "botorch.models.transforms.outcome.OutcomeTransform",
    "oct",
    "oct.untransform",
    "oct.untransform_posterior",
    "test.models.transforms.test_outcome.NotSoAbstractOutcomeTransform"
   ]
  },
  "type": "function"
 },
 "test.models.transforms.test_outcome.TestOutcomeTransforms.test_chained_outcome_transform": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.models.transforms.outcome.ChainedOutcomeTransform",
    "botorch.models.transforms.outcome.Log",
    "botorch.models.transforms.outcome.Standardize",
    "botorch.posteriors.TransformedPosterior",
    "copy.deepcopy",
    "list",
    "sorted",
    "test.models.transforms.test_outcome._get_test_posterior",
    "test.models.transforms.test_outcome.itertools",
    "test.models.transforms.test_outcome.torch",
    "tf",
    "tf._outputs",
    "tf.eval",
    "tf.keys",
    "tf.training",
    "tf.untransform",
    "tf.untransform_posterior",
    "tf1_",
    "tf2_"
   ]
  },
  "type": "function"
 },
 "test.models.transforms.test_outcome.TestOutcomeTransforms.test_log": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.models.transforms.outcome.Log",
    "botorch.models.transforms.utils.norm_to_lognorm_mean",
    "botorch.models.transforms.utils.norm_to_lognorm_variance",
    "botorch.posteriors.TransformedPosterior",
    "test.models.transforms.test_outcome._get_test_posterior",
    "test.models.transforms.test_outcome.itertools",
    "test.models.transforms.test_outcome.torch",
    "tf",
    "tf._outputs",
    "tf.eval",
    "tf.training",
    "tf.untransform",
    "tf.untransform_posterior"
   ]
  },
  "type": "function"
 },
 "test.models.transforms.test_outcome.TestOutcomeTransforms.test_standardize": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "botorch.models.transforms.outcome.Standardize",
    "botorch.posteriors.TransformedPosterior",
    "str",
    "test.models.transforms.test_outcome._get_test_posterior",
    "test.models.transforms.test_outcome.itertools",
    "test.models.transforms.test_outcome.torch",
    "tf",
    "tf._batch_shape",
    "tf._m",
    "tf._min_stdv",
    "tf._outputs",
    "tf.eval",
    "tf.means",
    "tf.stdvs",
    "tf.training",
    "tf.untransform",
    "tf.untransform_posterior"
   ]
  },
  "type": "function"
 },
 "test.models.transforms.test_outcome.TransformedPosterior": {
  "data": {
   "shadows": "botorch.posteriors.TransformedPosterior"
  },
  "type": "import"
 },
 "test.models.transforms.test_outcome._get_test_posterior": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "botorch.posteriors.GPyTorchPosterior",
    "gpytorch.distributions.MultitaskMultivariateNormal",
    "gpytorch.distributions.MultivariateNormal",
    "gpytorch.lazy.NonLazyTensor",
    "test.models.transforms.test_outcome.torch"
   ]
  },
  "type": "function"
 },
 "test.models.transforms.test_outcome.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "test.models.transforms.test_outcome.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "test.models.transforms.test_outcome.norm_to_lognorm_mean": {
  "data": {
   "shadows": "botorch.models.transforms.utils.norm_to_lognorm_mean"
  },
  "type": "import"
 },
 "test.models.transforms.test_outcome.norm_to_lognorm_variance": {
  "data": {
   "shadows": "botorch.models.transforms.utils.norm_to_lognorm_variance"
  },
  "type": "import"
 },
 "test.models.transforms.test_outcome.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.models.transforms.test_utils": {
  "data": {},
  "type": "module"
 },
 "test.models.transforms.test_utils.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.models.transforms.test_utils.TestTransformUtils": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.models.transforms.test_utils.TestTransformUtils.test_lognorm_to_norm": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "botorch.models.transforms.utils.lognorm_to_norm",
    "test.models.transforms.test_utils.math",
    "test.models.transforms.test_utils.torch"
   ]
  },
  "type": "function"
 },
 "test.models.transforms.test_utils.TestTransformUtils.test_norm_to_lognorm": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "botorch.models.transforms.utils.norm_to_lognorm",
    "botorch.models.transforms.utils.norm_to_lognorm_mean",
    "botorch.models.transforms.utils.norm_to_lognorm_variance",
    "test.models.transforms.test_utils.torch"
   ]
  },
  "type": "function"
 },
 "test.models.transforms.test_utils.TestTransformUtils.test_round_trip": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "botorch.models.transforms.utils.lognorm_to_norm",
    "botorch.models.transforms.utils.norm_to_lognorm",
    "test.models.transforms.test_utils.torch"
   ]
  },
  "type": "function"
 },
 "test.models.transforms.test_utils.lognorm_to_norm": {
  "data": {
   "shadows": "botorch.models.transforms.utils.lognorm_to_norm"
  },
  "type": "import"
 },
 "test.models.transforms.test_utils.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.models.transforms.test_utils.norm_to_lognorm": {
  "data": {
   "shadows": "botorch.models.transforms.utils.norm_to_lognorm"
  },
  "type": "import"
 },
 "test.models.transforms.test_utils.norm_to_lognorm_mean": {
  "data": {
   "shadows": "botorch.models.transforms.utils.norm_to_lognorm_mean"
  },
  "type": "import"
 },
 "test.models.transforms.test_utils.norm_to_lognorm_variance": {
  "data": {
   "shadows": "botorch.models.transforms.utils.norm_to_lognorm_variance"
  },
  "type": "import"
 },
 "test.models.transforms.test_utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.optim": {
  "data": {},
  "type": "module"
 },
 "test.optim.test_initializers": {
  "data": {},
  "type": "module"
 },
 "test.optim.test_initializers.BadInitialCandidatesWarning": {
  "data": {
   "shadows": "botorch.exceptions.BadInitialCandidatesWarning"
  },
  "type": "import"
 },
 "test.optim.test_initializers.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.optim.test_initializers.ExitStack": {
  "data": {
   "shadows": "contextlib.ExitStack"
  },
  "type": "import"
 },
 "test.optim.test_initializers.IIDNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.IIDNormalSampler"
  },
  "type": "import"
 },
 "test.optim.test_initializers.MockAcquisitionFunction": {
  "data": {
   "shadows": "botorch.utils.testing.MockAcquisitionFunction"
  },
  "type": "import"
 },
 "test.optim.test_initializers.MockModel": {
  "data": {
   "shadows": "botorch.utils.testing.MockModel"
  },
  "type": "import"
 },
 "test.optim.test_initializers.MockPosterior": {
  "data": {
   "shadows": "botorch.utils.testing.MockPosterior"
  },
  "type": "import"
 },
 "test.optim.test_initializers.PosteriorMean": {
  "data": {
   "shadows": "botorch.acquisition.analytic.PosteriorMean"
  },
  "type": "import"
 },
 "test.optim.test_initializers.SamplingWarning": {
  "data": {
   "shadows": "botorch.exceptions.SamplingWarning"
  },
  "type": "import"
 },
 "test.optim.test_initializers.SingleTaskGP": {
  "data": {
   "shadows": "botorch.models.SingleTaskGP"
  },
  "type": "import"
 },
 "test.optim.test_initializers.TestGenBatchInitialCandidates": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.optim.test_initializers.TestGenBatchInitialCandidates.test_gen_batch_initial_conditions": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "botorch.optim.initializers.gen_batch_initial_conditions",
    "botorch.utils.testing.MockAcquisitionFunction",
    "test.optim.test_initializers.torch",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "test.optim.test_initializers.TestGenBatchInitialCandidates.test_gen_batch_initial_conditions_highdim": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "any",
    "botorch.exceptions.SamplingWarning",
    "botorch.optim.initializers.gen_batch_initial_conditions",
    "botorch.settings.debug",
    "botorch.utils.testing.MockAcquisitionFunction",
    "issubclass",
    "test.optim.test_initializers.torch",
    "test.optim.test_initializers.warnings"
   ]
  },
  "type": "function"
 },
 "test.optim.test_initializers.TestGenBatchInitialCandidates.test_gen_batch_initial_conditions_warning": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "any",
    "botorch.exceptions.BadInitialCandidatesWarning",
    "botorch.optim.initializers.gen_batch_initial_conditions",
    "botorch.settings.debug",
    "botorch.utils.testing.MockAcquisitionFunction",
    "contextlib.ExitStack",
    "issubclass",
    "len",
    "test.optim.test_initializers.torch",
    "test.optim.test_initializers.warnings",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "test.optim.test_initializers.TestGenOneShotKGInitialConditions": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.optim.test_initializers.TestGenOneShotKGInitialConditions.test_gen_one_shot_kg_initial_conditions": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "ValueError",
    "botorch.acquisition.knowledge_gradient.qKnowledgeGradient",
    "botorch.optim.initializers.gen_one_shot_kg_initial_conditions",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "contextlib.ExitStack",
    "int",
    "test.optim.test_initializers.torch",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "test.optim.test_initializers.TestGenValueFunctionInitialConditions": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.optim.test_initializers.TestGenValueFunctionInitialConditions.test_gen_value_function_initial_conditions": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "ValueError",
    "botorch.acquisition.analytic.PosteriorMean",
    "botorch.models.SingleTaskGP",
    "botorch.optim.initializers.gen_value_function_initial_conditions",
    "botorch.sampling.IIDNormalSampler",
    "test.optim.test_initializers.torch"
   ]
  },
  "type": "function"
 },
 "test.optim.test_initializers.TestInitializeQBatch": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.optim.test_initializers.TestInitializeQBatch.test_initialize_q_batch": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.exceptions.BadInitialCandidatesWarning",
    "botorch.optim.initialize_q_batch",
    "botorch.settings.debug",
    "issubclass",
    "len",
    "test.optim.test_initializers.torch",
    "test.optim.test_initializers.warnings"
   ]
  },
  "type": "function"
 },
 "test.optim.test_initializers.TestInitializeQBatch.test_initialize_q_batch_largeZ": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "botorch.optim.initialize_q_batch",
    "test.optim.test_initializers.torch"
   ]
  },
  "type": "function"
 },
 "test.optim.test_initializers.TestInitializeQBatch.test_initialize_q_batch_nonneg": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.exceptions.BadInitialCandidatesWarning",
    "botorch.optim.initialize_q_batch_nonneg",
    "botorch.settings.debug",
    "issubclass",
    "len",
    "test.optim.test_initializers.torch",
    "test.optim.test_initializers.warnings"
   ]
  },
  "type": "function"
 },
 "test.optim.test_initializers.gen_batch_initial_conditions": {
  "data": {
   "shadows": "botorch.optim.initializers.gen_batch_initial_conditions"
  },
  "type": "import"
 },
 "test.optim.test_initializers.gen_one_shot_kg_initial_conditions": {
  "data": {
   "shadows": "botorch.optim.initializers.gen_one_shot_kg_initial_conditions"
  },
  "type": "import"
 },
 "test.optim.test_initializers.gen_value_function_initial_conditions": {
  "data": {
   "shadows": "botorch.optim.initializers.gen_value_function_initial_conditions"
  },
  "type": "import"
 },
 "test.optim.test_initializers.initialize_q_batch": {
  "data": {
   "shadows": "botorch.optim.initialize_q_batch"
  },
  "type": "import"
 },
 "test.optim.test_initializers.initialize_q_batch_nonneg": {
  "data": {
   "shadows": "botorch.optim.initialize_q_batch_nonneg"
  },
  "type": "import"
 },
 "test.optim.test_initializers.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "test.optim.test_initializers.qKnowledgeGradient": {
  "data": {
   "shadows": "botorch.acquisition.knowledge_gradient.qKnowledgeGradient"
  },
  "type": "import"
 },
 "test.optim.test_initializers.settings": {
  "data": {
   "shadows": "botorch.settings"
  },
  "type": "import"
 },
 "test.optim.test_initializers.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.optim.test_initializers.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.optim.test_numpy_converter": {
  "data": {},
  "type": "module"
 },
 "test.optim.test_numpy_converter.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.optim.test_numpy_converter.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.constant_mean.ConstantMean"
  },
  "type": "import"
 },
 "test.optim.test_numpy_converter.ExactGP": {
  "data": {
   "shadows": "gpytorch.models.exact_gp.ExactGP"
  },
  "type": "import"
 },
 "test.optim.test_numpy_converter.ExactMarginalLogLikelihood": {
  "data": {
   "shadows": "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood"
  },
  "type": "import"
 },
 "test.optim.test_numpy_converter.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.optim.test_numpy_converter.GreaterThan": {
  "data": {
   "shadows": "gpytorch.constraints.GreaterThan"
  },
  "type": "import"
 },
 "test.optim.test_numpy_converter.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.rbf_kernel.RBFKernel"
  },
  "type": "import"
 },
 "test.optim.test_numpy_converter.TestModuleToArray": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.optim.test_numpy_converter.TestModuleToArray.test_basic": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "botorch.optim.numpy_converter.module_to_array",
    "gpytorch.kernels.rbf_kernel.RBFKernel",
    "gpytorch.likelihoods.GaussianLikelihood",
    "gpytorch.means.constant_mean.ConstantMean",
    "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
    "gpytorch.models.exact_gp.ExactGP",
    "numpy.array_equal",
    "numpy.zeros",
    "set",
    "test.optim.test_numpy_converter.torch"
   ]
  },
  "type": "function"
 },
 "test.optim.test_numpy_converter.TestModuleToArray.test_exclude": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "botorch.optim.numpy_converter.module_to_array",
    "gpytorch.kernels.rbf_kernel.RBFKernel",
    "gpytorch.likelihoods.GaussianLikelihood",
    "gpytorch.means.constant_mean.ConstantMean",
    "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
    "gpytorch.models.exact_gp.ExactGP",
    "numpy.array_equal",
    "numpy.zeros",
    "set",
    "test.optim.test_numpy_converter.torch"
   ]
  },
  "type": "function"
 },
 "test.optim.test_numpy_converter.TestModuleToArray.test_manual_bounds": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "botorch.optim.numpy_converter.module_to_array",
    "gpytorch.kernels.rbf_kernel.RBFKernel",
    "gpytorch.likelihoods.GaussianLikelihood",
    "gpytorch.means.constant_mean.ConstantMean",
    "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
    "gpytorch.models.exact_gp.ExactGP",
    "numpy.array_equal",
    "numpy.equal",
    "numpy.full_like",
    "numpy.inf",
    "numpy.zeros",
    "set",
    "test.optim.test_numpy_converter._get_index",
    "test.optim.test_numpy_converter.torch"
   ]
  },
  "type": "function"
 },
 "test.optim.test_numpy_converter.TestModuleToArray.test_module_bounds": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "botorch.optim.numpy_converter.module_to_array",
    "gpytorch.constraints.GreaterThan",
    "gpytorch.kernels.rbf_kernel.RBFKernel",
    "gpytorch.likelihoods.GaussianLikelihood",
    "gpytorch.means.constant_mean.ConstantMean",
    "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
    "gpytorch.models.exact_gp.ExactGP",
    "numpy.allclose",
    "numpy.array_equal",
    "numpy.equal",
    "numpy.full_like",
    "numpy.inf",
    "numpy.zeros",
    "set",
    "test.optim.test_numpy_converter._get_index",
    "test.optim.test_numpy_converter.torch"
   ]
  },
  "type": "function"
 },
 "test.optim.test_numpy_converter.TestSetParamsWithArray": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.optim.test_numpy_converter.TestSetParamsWithArray.test_set_parameters": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "botorch.optim.numpy_converter.module_to_array",
    "botorch.optim.numpy_converter.set_params_with_array",
    "dict",
    "gpytorch.kernels.rbf_kernel.RBFKernel",
    "gpytorch.likelihoods.GaussianLikelihood",
    "gpytorch.means.constant_mean.ConstantMean",
    "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
    "gpytorch.models.exact_gp.ExactGP",
    "numpy.array",
    "numpy.array_equal",
    "test.optim.test_numpy_converter.torch"
   ]
  },
  "type": "function"
 },
 "test.optim.test_numpy_converter._get_index": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "test.optim.test_numpy_converter.module_to_array": {
  "data": {
   "shadows": "botorch.optim.numpy_converter.module_to_array"
  },
  "type": "import"
 },
 "test.optim.test_numpy_converter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.optim.test_numpy_converter.set_params_with_array": {
  "data": {
   "shadows": "botorch.optim.numpy_converter.set_params_with_array"
  },
  "type": "import"
 },
 "test.optim.test_numpy_converter.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.optim.test_optimize": {
  "data": {},
  "type": "module"
 },
 "test.optim.test_optimize.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.optim.test_optimize.MockAcquisitionFunction": {
  "data": {
   "shadows": "botorch.utils.testing.MockAcquisitionFunction"
  },
  "type": "import"
 },
 "test.optim.test_optimize.MockOneShotAcquisitionFunction": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "botorch.acquisition.acquisition.OneShotAcquisitionFunction",
    "botorch.utils.testing.MockAcquisitionFunction"
   ]
  },
  "type": "class"
 },
 "test.optim.test_optimize.MockOneShotAcquisitionFunction.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "test.optim.test_optimize.MockOneShotAcquisitionFunction.extract_candidates": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "test.optim.test_optimize.MockOneShotAcquisitionFunction.forward": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "test.optim.test_optimize.MockOneShotAcquisitionFunction.get_augmented_q_batch_size": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "test.optim.test_optimize.OneShotAcquisitionFunction": {
  "data": {
   "shadows": "botorch.acquisition.acquisition.OneShotAcquisitionFunction"
  },
  "type": "import"
 },
 "test.optim.test_optimize.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "test.optim.test_optimize.TestOptimizeAcqf": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.optim.test_optimize.TestOptimizeAcqf.test_optimize_acqf_joint": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "botorch.optim.optimize.optimize_acqf",
    "botorch.utils.testing.MockAcquisitionFunction",
    "range",
    "test.optim.test_optimize.MockOneShotAcquisitionFunction",
    "test.optim.test_optimize.torch",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "test.optim.test_optimize.TestOptimizeAcqf.test_optimize_acqf_sequential": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.acquisition.acquisition.OneShotAcquisitionFunction",
    "botorch.optim.optimize.optimize_acqf",
    "botorch.utils.testing.MockAcquisitionFunction",
    "range",
    "test.optim.test_optimize.rounding_func",
    "test.optim.test_optimize.torch",
    "unittest.mock.Mock",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "test.optim.test_optimize.TestOptimizeAcqf.test_optimize_acqf_sequential_notimplemented": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.optim.optimize.optimize_acqf",
    "botorch.utils.testing.MockAcquisitionFunction",
    "test.optim.test_optimize.torch"
   ]
  },
  "type": "function"
 },
 "test.optim.test_optimize.TestOptimizeAcqfCyclic": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.optim.test_optimize.TestOptimizeAcqfCyclic.test_optimize_acqf_cyclic": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "botorch.optim.optimize.optimize_acqf_cyclic",
    "botorch.utils.testing.MockAcquisitionFunction",
    "len",
    "list",
    "range",
    "test.optim.test_optimize.itertools",
    "test.optim.test_optimize.rounding_func",
    "test.optim.test_optimize.torch",
    "unittest.mock.patch",
    "unittest.mock.patch.object",
    "zip"
   ]
  },
  "type": "function"
 },
 "test.optim.test_optimize.TestOptimizeAcqfList": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.optim.test_optimize.TestOptimizeAcqfList.test_optimize_acqf_list": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "botorch.optim.optimize.optimize_acqf_list",
    "botorch.utils.testing.MockAcquisitionFunction",
    "len",
    "list",
    "range",
    "test.optim.test_optimize.itertools",
    "test.optim.test_optimize.rounding_func",
    "test.optim.test_optimize.torch",
    "unittest.mock.patch",
    "unittest.mock.patch.object",
    "zip"
   ]
  },
  "type": "function"
 },
 "test.optim.test_optimize.TestOptimizeAcqfList.test_optimize_acqf_list_empty_list": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "ValueError",
    "botorch.optim.optimize.optimize_acqf_list",
    "test.optim.test_optimize.torch"
   ]
  },
  "type": "function"
 },
 "test.optim.test_optimize.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "test.optim.test_optimize.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "test.optim.test_optimize.optimize_acqf": {
  "data": {
   "shadows": "botorch.optim.optimize.optimize_acqf"
  },
  "type": "import"
 },
 "test.optim.test_optimize.optimize_acqf_cyclic": {
  "data": {
   "shadows": "botorch.optim.optimize.optimize_acqf_cyclic"
  },
  "type": "import"
 },
 "test.optim.test_optimize.optimize_acqf_list": {
  "data": {
   "shadows": "botorch.optim.optimize.optimize_acqf_list"
  },
  "type": "import"
 },
 "test.optim.test_optimize.rounding_func": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "test.optim.test_optimize.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "test.optim.test_optimize.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.optim.test_parameter_constraints": {
  "data": {},
  "type": "module"
 },
 "test.optim.test_parameter_constraints.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.optim.test_parameter_constraints.Bounds": {
  "data": {
   "shadows": "scipy.optimize.Bounds"
  },
  "type": "import"
 },
 "test.optim.test_parameter_constraints.TestMakeScipyBounds": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.optim.test_parameter_constraints.TestMakeScipyBounds.test_make_scipy_bounds": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "botorch.optim.parameter_constraints.make_scipy_bounds",
    "float",
    "numpy.all",
    "numpy.equal",
    "numpy.full",
    "numpy.ones",
    "numpy.zeros",
    "scipy.optimize.Bounds",
    "test.optim.test_parameter_constraints.torch"
   ]
  },
  "type": "function"
 },
 "test.optim.test_parameter_constraints.TestParameterConstraints": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.optim.test_parameter_constraints.TestParameterConstraints.test_arrayify": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "botorch.optim.parameter_constraints._arrayify",
    "numpy.float64",
    "numpy.ndarray",
    "test.optim.test_parameter_constraints.torch"
   ]
  },
  "type": "function"
 },
 "test.optim.test_parameter_constraints.TestParameterConstraints.test_eval_lin_constraint": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "botorch.optim.parameter_constraints.eval_lin_constraint",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "test.optim.test_parameter_constraints.TestParameterConstraints.test_lin_constraint_jac": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "all",
    "botorch.optim.parameter_constraints.lin_constraint_jac",
    "numpy.array",
    "numpy.equal"
   ]
  },
  "type": "function"
 },
 "test.optim.test_parameter_constraints.TestParameterConstraints.test_make_linear_constraints": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "botorch.optim.parameter_constraints._make_linear_constraints",
    "len",
    "numpy.allclose",
    "numpy.random.rand",
    "numpy.zeros",
    "range",
    "set",
    "test.optim.test_parameter_constraints.torch"
   ]
  },
  "type": "function"
 },
 "test.optim.test_parameter_constraints.TestParameterConstraints.test_make_scipy_linear_constraints": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "RuntimeError",
    "all",
    "botorch.exceptions.errors.UnsupportedError",
    "botorch.optim.parameter_constraints.make_scipy_linear_constraints",
    "len",
    "test.optim.test_parameter_constraints.torch"
   ]
  },
  "type": "function"
 },
 "test.optim.test_parameter_constraints.UnsupportedError": {
  "data": {
   "shadows": "botorch.exceptions.errors.UnsupportedError"
  },
  "type": "import"
 },
 "test.optim.test_parameter_constraints._arrayify": {
  "data": {
   "shadows": "botorch.optim.parameter_constraints._arrayify"
  },
  "type": "import"
 },
 "test.optim.test_parameter_constraints._make_linear_constraints": {
  "data": {
   "shadows": "botorch.optim.parameter_constraints._make_linear_constraints"
  },
  "type": "import"
 },
 "test.optim.test_parameter_constraints.eval_lin_constraint": {
  "data": {
   "shadows": "botorch.optim.parameter_constraints.eval_lin_constraint"
  },
  "type": "import"
 },
 "test.optim.test_parameter_constraints.lin_constraint_jac": {
  "data": {
   "shadows": "botorch.optim.parameter_constraints.lin_constraint_jac"
  },
  "type": "import"
 },
 "test.optim.test_parameter_constraints.make_scipy_bounds": {
  "data": {
   "shadows": "botorch.optim.parameter_constraints.make_scipy_bounds"
  },
  "type": "import"
 },
 "test.optim.test_parameter_constraints.make_scipy_linear_constraints": {
  "data": {
   "shadows": "botorch.optim.parameter_constraints.make_scipy_linear_constraints"
  },
  "type": "import"
 },
 "test.optim.test_parameter_constraints.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.optim.test_parameter_constraints.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.optim.test_stopping": {
  "data": {},
  "type": "module"
 },
 "test.optim.test_stopping.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.optim.test_stopping.ExpMAStoppingCriterion": {
  "data": {
   "shadows": "botorch.optim.stopping.ExpMAStoppingCriterion"
  },
  "type": "import"
 },
 "test.optim.test_stopping.StoppingCriterion": {
  "data": {
   "shadows": "botorch.optim.stopping.StoppingCriterion"
  },
  "type": "import"
 },
 "test.optim.test_stopping.TestStoppingCriterion": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.optim.test_stopping.TestStoppingCriterion.test_abstract_raises": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "TypeError",
    "botorch.optim.stopping.StoppingCriterion"
   ]
  },
  "type": "function"
 },
 "test.optim.test_stopping.TestStoppingCriterion.test_exponential_moving_average": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "botorch.optim.stopping.ExpMAStoppingCriterion",
    "enumerate",
    "test.optim.test_stopping.torch"
   ]
  },
  "type": "function"
 },
 "test.optim.test_stopping.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "test.optim.test_stopping.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.optim.test_utils": {
  "data": {},
  "type": "module"
 },
 "test.optim.test_utils.BotorchError": {
  "data": {
   "shadows": "botorch.exceptions.BotorchError"
  },
  "type": "import"
 },
 "test.optim.test_utils.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.optim.test_utils.ExactMarginalLogLikelihood": {
  "data": {
   "shadows": "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood"
  },
  "type": "import"
 },
 "test.optim.test_utils.GammaPrior": {
  "data": {
   "shadows": "gpytorch.priors.torch_priors.GammaPrior"
  },
  "type": "import"
 },
 "test.optim.test_utils.MarginalLogLikelihood": {
  "data": {
   "shadows": "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood"
  },
  "type": "import"
 },
 "test.optim.test_utils.MaternKernel": {
  "data": {
   "shadows": "gpytorch.kernels.matern_kernel.MaternKernel"
  },
  "type": "import"
 },
 "test.optim.test_utils.ModelListGP": {
  "data": {
   "shadows": "botorch.models.ModelListGP"
  },
  "type": "import"
 },
 "test.optim.test_utils.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.scale_kernel.ScaleKernel"
  },
  "type": "import"
 },
 "test.optim.test_utils.SingleTaskGP": {
  "data": {
   "shadows": "botorch.models.SingleTaskGP"
  },
  "type": "import"
 },
 "test.optim.test_utils.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.smoothed_box_prior.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.optim.test_utils.SumMarginalLogLikelihood": {
  "data": {
   "shadows": "gpytorch.mlls.sum_marginal_log_likelihood.SumMarginalLogLikelihood"
  },
  "type": "import"
 },
 "test.optim.test_utils.TestColumnWiseClamp": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.optim.test_utils.TestColumnWiseClamp.setUp": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "super",
    "test.optim.test_utils.torch"
   ]
  },
  "type": "function"
 },
 "test.optim.test_utils.TestColumnWiseClamp.test_column_wise_clamp_full_dim_tensors": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "botorch.optim.utils.columnwise_clamp",
    "test.optim.test_utils.torch"
   ]
  },
  "type": "function"
 },
 "test.optim.test_utils.TestColumnWiseClamp.test_column_wise_clamp_raise_on_violation": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "botorch.exceptions.BotorchError",
    "botorch.optim.utils.columnwise_clamp",
    "test.optim.test_utils.torch"
   ]
  },
  "type": "function"
 },
 "test.optim.test_utils.TestColumnWiseClamp.test_column_wise_clamp_scalar_tensors": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "botorch.optim.utils.columnwise_clamp",
    "test.optim.test_utils.torch"
   ]
  },
  "type": "function"
 },
 "test.optim.test_utils.TestColumnWiseClamp.test_column_wise_clamp_scalars": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "botorch.optim.utils.columnwise_clamp",
    "test.optim.test_utils.torch"
   ]
  },
  "type": "function"
 },
 "test.optim.test_utils.TestColumnWiseClamp.test_column_wise_clamp_tensors": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "botorch.optim.utils.columnwise_clamp",
    "test.optim.test_utils.torch"
   ]
  },
  "type": "function"
 },
 "test.optim.test_utils.TestExpandBounds": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.optim.test_utils.TestExpandBounds.test_expand_bounds": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.optim.utils._expand_bounds",
    "test.optim.test_utils.torch"
   ]
  },
  "type": "function"
 },
 "test.optim.test_utils.TestFixFeatures": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.optim.test_utils.TestFixFeatures._getTensors": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "test.optim.test_utils.torch"
   ]
  },
  "type": "function"
 },
 "test.optim.test_utils.TestFixFeatures.test_fix_features": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "botorch.optim.utils.fix_features",
    "f",
    "test.optim.test_utils.torch"
   ]
  },
  "type": "function"
 },
 "test.optim.test_utils.TestFixFeatures.test_fix_features.f": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "test.optim.test_utils.TestGetExtraMllArgs": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.optim.test_utils.TestGetExtraMllArgs.test_get_extra_mll_args": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "botorch.models.ModelListGP",
    "botorch.models.SingleTaskGP",
    "botorch.optim.utils._get_extra_mll_args",
    "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
    "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood",
    "gpytorch.mlls.sum_marginal_log_likelihood.SumMarginalLogLikelihood",
    "len",
    "test.optim.test_utils.torch"
   ]
  },
  "type": "function"
 },
 "test.optim.test_utils.TestSampleAllPriors": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.optim.test_utils.TestSampleAllPriors.test_sample_all_priors": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "RuntimeError",
    "all",
    "botorch.models.SingleTaskGP",
    "botorch.optim.utils.sample_all_priors",
    "botorch.settings.debug",
    "copy.deepcopy",
    "dict",
    "gpytorch.kernels.matern_kernel.MaternKernel",
    "gpytorch.kernels.scale_kernel.ScaleKernel",
    "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
    "gpytorch.priors.smoothed_box_prior.SmoothedBoxPrior",
    "gpytorch.priors.torch_priors.GammaPrior",
    "len",
    "range",
    "str",
    "test.optim.test_utils.torch",
    "test.optim.test_utils.warnings"
   ]
  },
  "type": "function"
 },
 "test.optim.test_utils._expand_bounds": {
  "data": {
   "shadows": "botorch.optim.utils._expand_bounds"
  },
  "type": "import"
 },
 "test.optim.test_utils._get_extra_mll_args": {
  "data": {
   "shadows": "botorch.optim.utils._get_extra_mll_args"
  },
  "type": "import"
 },
 "test.optim.test_utils.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "test.optim.test_utils.columnwise_clamp": {
  "data": {
   "shadows": "botorch.optim.utils.columnwise_clamp"
  },
  "type": "import"
 },
 "test.optim.test_utils.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "test.optim.test_utils.fix_features": {
  "data": {
   "shadows": "botorch.optim.utils.fix_features"
  },
  "type": "import"
 },
 "test.optim.test_utils.sample_all_priors": {
  "data": {
   "shadows": "botorch.optim.utils.sample_all_priors"
  },
  "type": "import"
 },
 "test.optim.test_utils.settings": {
  "data": {
   "shadows": "botorch.settings"
  },
  "type": "import"
 },
 "test.optim.test_utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.optim.test_utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.posteriors": {
  "data": {},
  "type": "module"
 },
 "test.posteriors.test_deterministic": {
  "data": {},
  "type": "module"
 },
 "test.posteriors.test_deterministic.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.posteriors.test_deterministic.DeterministicPosterior": {
  "data": {
   "shadows": "botorch.posteriors.deterministic.DeterministicPosterior"
  },
  "type": "import"
 },
 "test.posteriors.test_deterministic.TestDeterministicPosterior": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.posteriors.test_deterministic.TestDeterministicPosterior.test_DeterministicPosterior": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.posteriors.deterministic.DeterministicPosterior",
    "test.posteriors.test_deterministic.itertools",
    "test.posteriors.test_deterministic.torch"
   ]
  },
  "type": "function"
 },
 "test.posteriors.test_deterministic.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "test.posteriors.test_deterministic.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.posteriors.test_gpytorch": {
  "data": {},
  "type": "module"
 },
 "test.posteriors.test_gpytorch.BotorchTensorDimensionError": {
  "data": {
   "shadows": "botorch.exceptions.BotorchTensorDimensionError"
  },
  "type": "import"
 },
 "test.posteriors.test_gpytorch.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.posteriors.test_gpytorch.GPyTorchPosterior": {
  "data": {
   "shadows": "botorch.posteriors.gpytorch.GPyTorchPosterior"
  },
  "type": "import"
 },
 "test.posteriors.test_gpytorch.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "test.posteriors.test_gpytorch.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.posteriors.test_gpytorch.TestGPyTorchPosterior": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.posteriors.test_gpytorch.TestGPyTorchPosterior.test_GPyTorchPosterior": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.posteriors.gpytorch.GPyTorchPosterior",
    "gpytorch.distributions.MultivariateNormal",
    "gpytorch.lazy.non_lazy_tensor.lazify",
    "test.posteriors.test_gpytorch.torch"
   ]
  },
  "type": "function"
 },
 "test.posteriors.test_gpytorch.TestGPyTorchPosterior.test_GPyTorchPosterior_Multitask": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "botorch.posteriors.gpytorch.GPyTorchPosterior",
    "gpytorch.distributions.MultitaskMultivariateNormal",
    "gpytorch.lazy.non_lazy_tensor.lazify",
    "test.posteriors.test_gpytorch.torch"
   ]
  },
  "type": "function"
 },
 "test.posteriors.test_gpytorch.TestGPyTorchPosterior.test_degenerate_GPyTorchPosterior": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "RuntimeWarning",
    "botorch.posteriors.gpytorch.GPyTorchPosterior",
    "gpytorch.distributions.MultivariateNormal",
    "gpytorch.lazy.non_lazy_tensor.lazify",
    "issubclass",
    "len",
    "str",
    "test.posteriors.test_gpytorch.torch",
    "test.posteriors.test_gpytorch.warnings"
   ]
  },
  "type": "function"
 },
 "test.posteriors.test_gpytorch.TestGPyTorchPosterior.test_degenerate_GPyTorchPosterior_Multitask": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "RuntimeWarning",
    "botorch.posteriors.gpytorch.GPyTorchPosterior",
    "gpytorch.distributions.MultitaskMultivariateNormal.from_independent_mvns",
    "gpytorch.distributions.MultivariateNormal",
    "gpytorch.lazy.non_lazy_tensor.lazify",
    "issubclass",
    "len",
    "str",
    "test.posteriors.test_gpytorch.torch",
    "test.posteriors.test_gpytorch.warnings"
   ]
  },
  "type": "function"
 },
 "test.posteriors.test_gpytorch.TestGPyTorchPosterior.test_scalarize_posterior": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.exceptions.BotorchTensorDimensionError",
    "botorch.posteriors.gpytorch.scalarize_posterior",
    "botorch.utils.testing._get_test_posterior",
    "list",
    "range",
    "set",
    "test.posteriors.test_gpytorch.itertools",
    "test.posteriors.test_gpytorch.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "test.posteriors.test_gpytorch._get_test_posterior": {
  "data": {
   "shadows": "botorch.utils.testing._get_test_posterior"
  },
  "type": "import"
 },
 "test.posteriors.test_gpytorch.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "test.posteriors.test_gpytorch.lazify": {
  "data": {
   "shadows": "gpytorch.lazy.non_lazy_tensor.lazify"
  },
  "type": "import"
 },
 "test.posteriors.test_gpytorch.scalarize_posterior": {
  "data": {
   "shadows": "botorch.posteriors.gpytorch.scalarize_posterior"
  },
  "type": "import"
 },
 "test.posteriors.test_gpytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.posteriors.test_gpytorch.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.posteriors.test_posterior": {
  "data": {},
  "type": "module"
 },
 "test.posteriors.test_posterior.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.posteriors.test_posterior.NotSoAbstractPosterior": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "botorch.posteriors.Posterior"
   ]
  },
  "type": "class"
 },
 "test.posteriors.test_posterior.NotSoAbstractPosterior.device": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "test.posteriors.test_posterior.NotSoAbstractPosterior.dtype": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "test.posteriors.test_posterior.NotSoAbstractPosterior.event_shape": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "test.posteriors.test_posterior.NotSoAbstractPosterior.rsample": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "test.posteriors.test_posterior.Posterior": {
  "data": {
   "shadows": "botorch.posteriors.Posterior"
  },
  "type": "import"
 },
 "test.posteriors.test_posterior.TestPosterior": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.posteriors.test_posterior.TestPosterior.test_abstract_base_posterior": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "TypeError",
    "botorch.posteriors.Posterior"
   ]
  },
  "type": "function"
 },
 "test.posteriors.test_posterior.TestPosterior.test_mean_var_notimplemented_error": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "NotImplementedError",
    "str",
    "test.posteriors.test_posterior.NotSoAbstractPosterior"
   ]
  },
  "type": "function"
 },
 "test.posteriors.test_transformed": {
  "data": {},
  "type": "module"
 },
 "test.posteriors.test_transformed.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.posteriors.test_transformed.GPyTorchPosterior": {
  "data": {
   "shadows": "botorch.posteriors.gpytorch.GPyTorchPosterior"
  },
  "type": "import"
 },
 "test.posteriors.test_transformed.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "test.posteriors.test_transformed.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.posteriors.test_transformed.TestTransformedPosterior": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.posteriors.test_transformed.TestTransformedPosterior.test_transformed_posterior": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "botorch.posteriors.gpytorch.GPyTorchPosterior",
    "botorch.posteriors.transformed.TransformedPosterior",
    "gpytorch.distributions.MultitaskMultivariateNormal",
    "gpytorch.distributions.MultivariateNormal",
    "gpytorch.lazy.non_lazy_tensor.lazify",
    "test.posteriors.test_transformed.torch"
   ]
  },
  "type": "function"
 },
 "test.posteriors.test_transformed.TransformedPosterior": {
  "data": {
   "shadows": "botorch.posteriors.transformed.TransformedPosterior"
  },
  "type": "import"
 },
 "test.posteriors.test_transformed.lazify": {
  "data": {
   "shadows": "gpytorch.lazy.non_lazy_tensor.lazify"
  },
  "type": "import"
 },
 "test.posteriors.test_transformed.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.sampling": {
  "data": {},
  "type": "module"
 },
 "test.sampling.test_pairwise_sampler": {
  "data": {},
  "type": "module"
 },
 "test.sampling.test_pairwise_sampler.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.sampling.test_pairwise_sampler.GPyTorchPosterior": {
  "data": {
   "shadows": "botorch.posteriors.GPyTorchPosterior"
  },
  "type": "import"
 },
 "test.sampling.test_pairwise_sampler.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.sampling.test_pairwise_sampler.PairwiseIIDNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.pairwise_samplers.PairwiseIIDNormalSampler"
  },
  "type": "import"
 },
 "test.sampling.test_pairwise_sampler.PairwiseMCSampler": {
  "data": {
   "shadows": "botorch.sampling.pairwise_samplers.PairwiseMCSampler"
  },
  "type": "import"
 },
 "test.sampling.test_pairwise_sampler.PairwiseSobolQMCNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.pairwise_samplers.PairwiseSobolQMCNormalSampler"
  },
  "type": "import"
 },
 "test.sampling.test_pairwise_sampler.TestBasePairwiseMCSampler": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.sampling.test_pairwise_sampler.TestBasePairwiseMCSampler.test_PairwiseMCSampler_abstract_raises": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "TypeError",
    "botorch.sampling.pairwise_samplers.PairwiseMCSampler"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_pairwise_sampler.TestPairwiseIIDNormalSampler": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.sampling.test_pairwise_sampler.TestPairwiseIIDNormalSampler.test_forward": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.sampling.pairwise_samplers.PairwiseIIDNormalSampler",
    "sampler",
    "sampler.collapse_batch_dims",
    "sampler.resample",
    "sampler.seed",
    "test.sampling.test_pairwise_sampler._get_test_posterior",
    "test.sampling.test_pairwise_sampler.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_pairwise_sampler.TestPairwiseIIDNormalSampler.test_forward_no_collapse": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.sampling.pairwise_samplers.PairwiseIIDNormalSampler",
    "sampler",
    "sampler.collapse_batch_dims",
    "sampler.resample",
    "sampler.seed",
    "test.sampling.test_pairwise_sampler._get_test_posterior",
    "test.sampling.test_pairwise_sampler.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_pairwise_sampler.TestPairwiseIIDNormalSampler.test_get_base_sample_shape": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "botorch.sampling.pairwise_samplers.PairwiseIIDNormalSampler",
    "test.sampling.test_pairwise_sampler._get_test_posterior",
    "test.sampling.test_pairwise_sampler.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_pairwise_sampler.TestPairwiseIIDNormalSampler.test_get_base_sample_shape_no_collapse": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "botorch.sampling.pairwise_samplers.PairwiseIIDNormalSampler",
    "test.sampling.test_pairwise_sampler._get_test_posterior",
    "test.sampling.test_pairwise_sampler.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_pairwise_sampler.TestPairwiseSobolQMCNormalSampler": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.sampling.test_pairwise_sampler.TestPairwiseSobolQMCNormalSampler.test_forward": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.sampling.pairwise_samplers.PairwiseSobolQMCNormalSampler",
    "sampler",
    "sampler.collapse_batch_dims",
    "sampler.resample",
    "sampler.seed",
    "test.sampling.test_pairwise_sampler._get_test_posterior",
    "test.sampling.test_pairwise_sampler.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_pairwise_sampler.TestPairwiseSobolQMCNormalSampler.test_forward_no_collapse": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.sampling.pairwise_samplers.PairwiseSobolQMCNormalSampler",
    "sampler",
    "sampler.collapse_batch_dims",
    "sampler.resample",
    "sampler.seed",
    "test.sampling.test_pairwise_sampler._get_test_posterior",
    "test.sampling.test_pairwise_sampler.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_pairwise_sampler.TestPairwiseSobolQMCNormalSampler.test_get_base_sample_shape": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "botorch.sampling.pairwise_samplers.PairwiseSobolQMCNormalSampler",
    "sampler",
    "sampler._get_base_sample_shape",
    "sampler.collapse_batch_dims",
    "sampler.resample",
    "sampler.sample_shape",
    "test.sampling.test_pairwise_sampler._get_test_posterior",
    "test.sampling.test_pairwise_sampler.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_pairwise_sampler.TestPairwiseSobolQMCNormalSampler.test_get_base_sample_shape_no_collapse": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "botorch.sampling.pairwise_samplers.PairwiseSobolQMCNormalSampler",
    "sampler",
    "sampler._get_base_sample_shape",
    "sampler.collapse_batch_dims",
    "sampler.resample",
    "sampler.sample_shape",
    "test.sampling.test_pairwise_sampler._get_test_posterior",
    "test.sampling.test_pairwise_sampler.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_pairwise_sampler._get_test_posterior": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "botorch.posteriors.GPyTorchPosterior",
    "gpytorch.distributions.MultivariateNormal",
    "test.sampling.test_pairwise_sampler.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_pairwise_sampler.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.sampling.test_qmc": {
  "data": {},
  "type": "module"
 },
 "test.sampling.test_qmc.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.sampling.test_qmc.MultivariateNormalQMCEngine": {
  "data": {
   "shadows": "botorch.sampling.qmc.MultivariateNormalQMCEngine"
  },
  "type": "import"
 },
 "test.sampling.test_qmc.MultivariateNormalQMCTests": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.sampling.test_qmc.MultivariateNormalQMCTests.test_MultivariateNormalQMCEngine": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "botorch.sampling.qmc.MultivariateNormalQMCEngine",
    "test.sampling.test_qmc.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_qmc.MultivariateNormalQMCTests.test_MultivariateNormalQMCEngineDegenerate": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "botorch.sampling.qmc.MultivariateNormalQMCEngine",
    "numpy.abs",
    "numpy.cov",
    "scipy.stats.shapiro",
    "test.sampling.test_qmc.math",
    "test.sampling.test_qmc.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_qmc.MultivariateNormalQMCTests.test_MultivariateNormalQMCEngineInvTransform": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "botorch.sampling.qmc.MultivariateNormalQMCEngine",
    "test.sampling.test_qmc.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_qmc.MultivariateNormalQMCTests.test_MultivariateNormalQMCEngineNonPD": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "botorch.sampling.qmc.MultivariateNormalQMCEngine",
    "test.sampling.test_qmc.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_qmc.MultivariateNormalQMCTests.test_MultivariateNormalQMCEngineNonPSD": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "ValueError",
    "botorch.sampling.qmc.MultivariateNormalQMCEngine",
    "test.sampling.test_qmc.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_qmc.MultivariateNormalQMCTests.test_MultivariateNormalQMCEngineSeeded": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "botorch.sampling.qmc.MultivariateNormalQMCEngine",
    "botorch.utils.sampling.manual_seed",
    "test.sampling.test_qmc.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_qmc.MultivariateNormalQMCTests.test_MultivariateNormalQMCEngineSeededInvTransform": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "botorch.sampling.qmc.MultivariateNormalQMCEngine",
    "botorch.utils.sampling.manual_seed",
    "test.sampling.test_qmc.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_qmc.MultivariateNormalQMCTests.test_MultivariateNormalQMCEngineSeededOut": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "botorch.sampling.qmc.MultivariateNormalQMCEngine",
    "botorch.utils.sampling.manual_seed",
    "test.sampling.test_qmc.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_qmc.MultivariateNormalQMCTests.test_MultivariateNormalQMCEngineShapeErrors": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ValueError",
    "botorch.sampling.qmc.MultivariateNormalQMCEngine",
    "test.sampling.test_qmc.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_qmc.MultivariateNormalQMCTests.test_MultivariateNormalQMCEngineShapiro": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "botorch.sampling.qmc.MultivariateNormalQMCEngine",
    "numpy.abs",
    "numpy.cov",
    "scipy.stats.shapiro",
    "test.sampling.test_qmc.math",
    "test.sampling.test_qmc.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_qmc.MultivariateNormalQMCTests.test_MultivariateNormalQMCEngineShapiroInvTransform": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "botorch.sampling.qmc.MultivariateNormalQMCEngine",
    "numpy.abs",
    "numpy.cov",
    "scipy.stats.shapiro",
    "test.sampling.test_qmc.math",
    "test.sampling.test_qmc.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_qmc.MultivariateNormalQMCTests.test_MultivariateNormalQMCEngineSymmetric": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "ValueError",
    "botorch.sampling.qmc.MultivariateNormalQMCEngine",
    "test.sampling.test_qmc.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_qmc.NormalQMCEngine": {
  "data": {
   "shadows": "botorch.sampling.qmc.NormalQMCEngine"
  },
  "type": "import"
 },
 "test.sampling.test_qmc.NormalQMCTests": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.sampling.test_qmc.NormalQMCTests.test_NormalQMCEngine": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "botorch.sampling.qmc.NormalQMCEngine",
    "test.sampling.test_qmc.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_qmc.NormalQMCTests.test_NormalQMCEngineInvTransform": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "botorch.sampling.qmc.NormalQMCEngine",
    "test.sampling.test_qmc.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_qmc.NormalQMCTests.test_NormalQMCEngineSeeded": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "botorch.sampling.qmc.NormalQMCEngine",
    "test.sampling.test_qmc.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_qmc.NormalQMCTests.test_NormalQMCEngineSeededInvTransform": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "botorch.sampling.qmc.NormalQMCEngine",
    "test.sampling.test_qmc.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_qmc.NormalQMCTests.test_NormalQMCEngineSeededOut": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "botorch.sampling.qmc.NormalQMCEngine",
    "test.sampling.test_qmc.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_qmc.NormalQMCTests.test_NormalQMCEngineShapiro": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "botorch.sampling.qmc.NormalQMCEngine",
    "numpy.abs",
    "numpy.cov",
    "scipy.stats.shapiro",
    "test.sampling.test_qmc.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_qmc.NormalQMCTests.test_NormalQMCEngineShapiroInvTransform": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "botorch.sampling.qmc.NormalQMCEngine",
    "numpy.abs",
    "numpy.cov",
    "scipy.stats.shapiro",
    "test.sampling.test_qmc.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_qmc.manual_seed": {
  "data": {
   "shadows": "botorch.utils.sampling.manual_seed"
  },
  "type": "import"
 },
 "test.sampling.test_qmc.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.sampling.test_qmc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.sampling.test_qmc.shapiro": {
  "data": {
   "shadows": "scipy.stats.shapiro"
  },
  "type": "import"
 },
 "test.sampling.test_qmc.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.sampling.test_sampler": {
  "data": {},
  "type": "module"
 },
 "test.sampling.test_sampler.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.sampling.test_sampler.DiagLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.DiagLazyTensor"
  },
  "type": "import"
 },
 "test.sampling.test_sampler.GPyTorchPosterior": {
  "data": {
   "shadows": "botorch.posteriors.GPyTorchPosterior"
  },
  "type": "import"
 },
 "test.sampling.test_sampler.IIDNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.IIDNormalSampler"
  },
  "type": "import"
 },
 "test.sampling.test_sampler.MCSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.MCSampler"
  },
  "type": "import"
 },
 "test.sampling.test_sampler.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.sampling.test_sampler.SobolQMCNormalSampler": {
  "data": {
   "shadows": "botorch.sampling.samplers.SobolQMCNormalSampler"
  },
  "type": "import"
 },
 "test.sampling.test_sampler.TestBaseMCSampler": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.sampling.test_sampler.TestBaseMCSampler.test_MCSampler_abstract_raises": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "TypeError",
    "botorch.sampling.samplers.MCSampler"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_sampler.TestIIDNormalSampler": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.sampling.test_sampler.TestIIDNormalSampler.test_batch_range": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "botorch.sampling.samplers.IIDNormalSampler",
    "sampler",
    "sampler.base_samples",
    "sampler.batch_range",
    "test.sampling.test_sampler._get_test_posterior"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_sampler.TestIIDNormalSampler.test_forward": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "botorch.sampling.samplers.IIDNormalSampler",
    "sampler",
    "sampler.batch_range",
    "sampler.collapse_batch_dims",
    "sampler.resample",
    "sampler.seed",
    "test.sampling.test_sampler._get_test_posterior",
    "test.sampling.test_sampler._get_test_posterior_batched",
    "test.sampling.test_sampler.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_sampler.TestIIDNormalSampler.test_forward_no_collapse": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "botorch.sampling.samplers.IIDNormalSampler",
    "sampler",
    "sampler.batch_range",
    "sampler.collapse_batch_dims",
    "sampler.resample",
    "sampler.seed",
    "test.sampling.test_sampler._get_test_posterior",
    "test.sampling.test_sampler._get_test_posterior_batched",
    "test.sampling.test_sampler.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_sampler.TestIIDNormalSampler.test_get_base_sample_shape": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "botorch.sampling.samplers.IIDNormalSampler",
    "sampler",
    "sampler._get_base_sample_shape",
    "sampler.batch_range",
    "sampler.collapse_batch_dims",
    "sampler.resample",
    "sampler.sample_shape",
    "test.sampling.test_sampler._get_test_posterior",
    "test.sampling.test_sampler._get_test_posterior_batched",
    "test.sampling.test_sampler.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_sampler.TestIIDNormalSampler.test_get_base_sample_shape_no_collapse": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "botorch.sampling.samplers.IIDNormalSampler",
    "sampler",
    "sampler._get_base_sample_shape",
    "sampler.batch_range",
    "sampler.collapse_batch_dims",
    "sampler.resample",
    "sampler.sample_shape",
    "test.sampling.test_sampler._get_test_posterior",
    "test.sampling.test_sampler._get_test_posterior_batched",
    "test.sampling.test_sampler.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_sampler.TestSobolQMCNormalSampler": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.sampling.test_sampler.TestSobolQMCNormalSampler.test_batch_range": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "sampler",
    "sampler.base_samples",
    "sampler.batch_range",
    "test.sampling.test_sampler._get_test_posterior"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_sampler.TestSobolQMCNormalSampler.test_forward": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "sampler",
    "sampler.batch_range",
    "sampler.collapse_batch_dims",
    "sampler.resample",
    "sampler.seed",
    "test.sampling.test_sampler._get_test_posterior",
    "test.sampling.test_sampler._get_test_posterior_batched",
    "test.sampling.test_sampler.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_sampler.TestSobolQMCNormalSampler.test_forward_no_collapse": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "sampler",
    "sampler.batch_range",
    "sampler.collapse_batch_dims",
    "sampler.resample",
    "sampler.seed",
    "test.sampling.test_sampler._get_test_posterior",
    "test.sampling.test_sampler._get_test_posterior_batched",
    "test.sampling.test_sampler.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_sampler.TestSobolQMCNormalSampler.test_get_base_sample_shape": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "sampler",
    "sampler._get_base_sample_shape",
    "sampler.batch_range",
    "sampler.collapse_batch_dims",
    "sampler.resample",
    "sampler.sample_shape",
    "test.sampling.test_sampler._get_test_posterior",
    "test.sampling.test_sampler._get_test_posterior_batched",
    "test.sampling.test_sampler.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_sampler.TestSobolQMCNormalSampler.test_get_base_sample_shape_no_collapse": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "sampler",
    "sampler._get_base_sample_shape",
    "sampler.batch_range",
    "sampler.collapse_batch_dims",
    "sampler.resample",
    "sampler.sample_shape",
    "test.sampling.test_sampler._get_test_posterior",
    "test.sampling.test_sampler._get_test_posterior_batched",
    "test.sampling.test_sampler.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_sampler.TestSobolQMCNormalSampler.test_unsupported_dimension": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "botorch.exceptions.errors.UnsupportedError",
    "botorch.posteriors.GPyTorchPosterior",
    "botorch.sampling.samplers.SobolQMCNormalSampler",
    "gpytorch.distributions.MultivariateNormal",
    "gpytorch.lazy.DiagLazyTensor",
    "sampler",
    "str",
    "test.sampling.test_sampler.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_sampler.UnsupportedError": {
  "data": {
   "shadows": "botorch.exceptions.errors.UnsupportedError"
  },
  "type": "import"
 },
 "test.sampling.test_sampler._get_test_posterior": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "botorch.posteriors.GPyTorchPosterior",
    "gpytorch.distributions.MultivariateNormal",
    "test.sampling.test_sampler.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_sampler._get_test_posterior_batched": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "botorch.posteriors.GPyTorchPosterior",
    "gpytorch.distributions.MultivariateNormal",
    "test.sampling.test_sampler.torch"
   ]
  },
  "type": "function"
 },
 "test.sampling.test_sampler.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.test_cross_validation": {
  "data": {},
  "type": "module"
 },
 "test.test_cross_validation.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.test_cross_validation.ExactMarginalLogLikelihood": {
  "data": {
   "shadows": "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood"
  },
  "type": "import"
 },
 "test.test_cross_validation.FixedNoiseGP": {
  "data": {
   "shadows": "botorch.models.gp_regression.FixedNoiseGP"
  },
  "type": "import"
 },
 "test.test_cross_validation.OptimizationWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.OptimizationWarning"
  },
  "type": "import"
 },
 "test.test_cross_validation.SingleTaskGP": {
  "data": {
   "shadows": "botorch.models.gp_regression.SingleTaskGP"
  },
  "type": "import"
 },
 "test.test_cross_validation.TestFitBatchCrossValidation": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_cross_validation.TestFitBatchCrossValidation.test_single_task_batch_cv": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "botorch.cross_validation.batch_cross_validation",
    "botorch.cross_validation.gen_loo_cv_folds",
    "botorch.exceptions.warnings.OptimizationWarning",
    "botorch.models.gp_regression.FixedNoiseGP",
    "botorch.models.gp_regression.SingleTaskGP",
    "botorch.utils.testing._get_random_data",
    "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
    "test.test_cross_validation.itertools",
    "test.test_cross_validation.torch",
    "test.test_cross_validation.warnings"
   ]
  },
  "type": "function"
 },
 "test.test_cross_validation._get_random_data": {
  "data": {
   "shadows": "botorch.utils.testing._get_random_data"
  },
  "type": "import"
 },
 "test.test_cross_validation.batch_cross_validation": {
  "data": {
   "shadows": "botorch.cross_validation.batch_cross_validation"
  },
  "type": "import"
 },
 "test.test_cross_validation.gen_loo_cv_folds": {
  "data": {
   "shadows": "botorch.cross_validation.gen_loo_cv_folds"
  },
  "type": "import"
 },
 "test.test_cross_validation.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "test.test_cross_validation.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.test_cross_validation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.test_cuda": {
  "data": {},
  "type": "module"
 },
 "test.test_cuda.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.test_cuda.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "test.test_cuda.TestBotorchCUDA": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "test.test_cuda.torch",
    "test.test_cuda.unittest"
   ]
  },
  "type": "class"
 },
 "test.test_cuda.TestBotorchCUDA.test_cuda": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pathlib.Path",
    "test.test_cuda.run_cuda_tests",
    "test.test_cuda.unittest"
   ]
  },
  "type": "function"
 },
 "test.test_cuda.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "test.test_cuda.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "test.test_cuda.run_cuda_tests": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "bool",
    "botorch.utils.testing.BotorchTestCase",
    "isinstance",
    "itertools.chain",
    "print",
    "test.test_cuda.torch",
    "test.test_cuda.unittest",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "test.test_cuda.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.test_cuda.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.test_end_to_end": {
  "data": {},
  "type": "module"
 },
 "test.test_end_to_end.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.test_end_to_end.EPS": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "test.test_end_to_end.ExactMarginalLogLikelihood": {
  "data": {
   "shadows": "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood"
  },
  "type": "import"
 },
 "test.test_end_to_end.ExpectedImprovement": {
  "data": {
   "shadows": "botorch.acquisition.ExpectedImprovement"
  },
  "type": "import"
 },
 "test.test_end_to_end.FixedNoiseGP": {
  "data": {
   "shadows": "botorch.models.FixedNoiseGP"
  },
  "type": "import"
 },
 "test.test_end_to_end.NOISE": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "test.test_end_to_end.OptimizationWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.OptimizationWarning"
  },
  "type": "import"
 },
 "test.test_end_to_end.SingleTaskGP": {
  "data": {
   "shadows": "botorch.models.SingleTaskGP"
  },
  "type": "import"
 },
 "test.test_end_to_end.TestEndToEnd": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_end_to_end.TestEndToEnd._setUp": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "botorch.exceptions.warnings.OptimizationWarning",
    "botorch.fit.fit_gpytorch_model",
    "botorch.models.FixedNoiseGP",
    "botorch.models.SingleTaskGP",
    "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
    "test.test_end_to_end.NOISE",
    "test.test_end_to_end.math",
    "test.test_end_to_end.torch",
    "test.test_end_to_end.warnings"
   ]
  },
  "type": "function"
 },
 "test.test_end_to_end.TestEndToEnd.test_EI": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "botorch.acquisition.ExpectedImprovement",
    "botorch.optim.optimize_acqf",
    "test.test_end_to_end.EPS"
   ]
  },
  "type": "function"
 },
 "test.test_end_to_end.TestEndToEnd.test_qEI": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "botorch.acquisition.qExpectedImprovement",
    "botorch.optim.optimize_acqf",
    "test.test_end_to_end.EPS",
    "test.test_end_to_end.torch"
   ]
  },
  "type": "function"
 },
 "test.test_end_to_end.fit_gpytorch_model": {
  "data": {
   "shadows": "botorch.fit.fit_gpytorch_model"
  },
  "type": "import"
 },
 "test.test_end_to_end.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.test_end_to_end.optimize_acqf": {
  "data": {
   "shadows": "botorch.optim.optimize_acqf"
  },
  "type": "import"
 },
 "test.test_end_to_end.qExpectedImprovement": {
  "data": {
   "shadows": "botorch.acquisition.qExpectedImprovement"
  },
  "type": "import"
 },
 "test.test_end_to_end.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.test_end_to_end.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.test_fit": {
  "data": {},
  "type": "module"
 },
 "test.test_fit.BotorchError": {
  "data": {
   "shadows": "botorch.exceptions.errors.BotorchError"
  },
  "type": "import"
 },
 "test.test_fit.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.test_fit.BotorchWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.BotorchWarning"
  },
  "type": "import"
 },
 "test.test_fit.ExactMarginalLogLikelihood": {
  "data": {
   "shadows": "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood"
  },
  "type": "import"
 },
 "test.test_fit.FixedNoiseGP": {
  "data": {
   "shadows": "botorch.models.FixedNoiseGP"
  },
  "type": "import"
 },
 "test.test_fit.GP": {
  "data": {
   "shadows": "gpytorch.models.gp.GP"
  },
  "type": "import"
 },
 "test.test_fit.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.test_fit.GreaterThan": {
  "data": {
   "shadows": "gpytorch.constraints.GreaterThan"
  },
  "type": "import"
 },
 "test.test_fit.HeteroskedasticSingleTaskGP": {
  "data": {
   "shadows": "botorch.models.HeteroskedasticSingleTaskGP"
  },
  "type": "import"
 },
 "test.test_fit.MAX_ITER_MSG": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "test.test_fit.MAX_RETRY_MSG": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "test.test_fit.MockGP": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "botorch.utils.testing.MockModel",
    "gpytorch.models.gp.GP"
   ]
  },
  "type": "class"
 },
 "test.test_fit.MockModel": {
  "data": {
   "shadows": "botorch.utils.testing.MockModel"
  },
  "type": "import"
 },
 "test.test_fit.MockPosterior": {
  "data": {
   "shadows": "botorch.utils.testing.MockPosterior"
  },
  "type": "import"
 },
 "test.test_fit.NOISE": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "test.test_fit.Normalize": {
  "data": {
   "shadows": "botorch.models.transforms.input.Normalize"
  },
  "type": "import"
 },
 "test.test_fit.OptimizationIteration": {
  "data": {
   "shadows": "botorch.optim.fit.OptimizationIteration"
  },
  "type": "import"
 },
 "test.test_fit.OptimizationWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.OptimizationWarning"
  },
  "type": "import"
 },
 "test.test_fit.SingleTaskGP": {
  "data": {
   "shadows": "botorch.models.SingleTaskGP"
  },
  "type": "import"
 },
 "test.test_fit.Standardize": {
  "data": {
   "shadows": "botorch.models.transforms.outcome.Standardize"
  },
  "type": "import"
 },
 "test.test_fit.TestFitGPyTorchModel": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_fit.TestFitGPyTorchModel._getBatchedModel": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.models.FixedNoiseGP",
    "botorch.models.HeteroskedasticSingleTaskGP",
    "botorch.models.SingleTaskGP",
    "botorch.models.transforms.outcome.Standardize",
    "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
    "test.test_fit.NOISE",
    "test.test_fit.math",
    "test.test_fit.torch"
   ]
  },
  "type": "function"
 },
 "test.test_fit.TestFitGPyTorchModel._getModel": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "botorch.models.SingleTaskGP",
    "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
    "test.test_fit.NOISE",
    "test.test_fit.math",
    "test.test_fit.torch"
   ]
  },
  "type": "function"
 },
 "test.test_fit.TestFitGPyTorchModel.test_fit_gpytorch_model": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "botorch.fit_gpytorch_model",
    "botorch.optim.fit.OptimizationIteration",
    "botorch.optim.fit.fit_gpytorch_scipy",
    "botorch.optim.fit.fit_gpytorch_torch",
    "botorch.settings.debug",
    "len",
    "optimizer",
    "str",
    "sum",
    "test.test_fit.MAX_ITER_MSG",
    "test.test_fit.MAX_RETRY_MSG",
    "test.test_fit.torch",
    "test.test_fit.warnings"
   ]
  },
  "type": "function"
 },
 "test.test_fit.TestFitGPyTorchModel.test_fit_gpytorch_model_sequential": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "any",
    "botorch.exceptions.warnings.BotorchWarning",
    "botorch.fit_gpytorch_model",
    "botorch.settings.debug",
    "issubclass",
    "itertools.product",
    "str",
    "test.test_fit.warnings"
   ]
  },
  "type": "function"
 },
 "test.test_fit.TestFitGPyTorchModel.test_fit_gpytorch_model_singular": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "any",
    "botorch.exceptions.warnings.OptimizationWarning",
    "botorch.fit_gpytorch_model",
    "botorch.models.SingleTaskGP",
    "botorch.settings.debug",
    "gpytorch.constraints.GreaterThan",
    "gpytorch.likelihoods.GaussianLikelihood",
    "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
    "issubclass",
    "test.test_fit.torch",
    "test.test_fit.warnings"
   ]
  },
  "type": "function"
 },
 "test.test_fit.TestFitGPyTorchModel.test_fit_gpytorch_model_torch": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "botorch.optim.fit.fit_gpytorch_torch"
   ]
  },
  "type": "function"
 },
 "test.test_fit.TestSetTransformedInputs": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_fit.TestSetTransformedInputs.test_set_transformed_inputs": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "botorch.exceptions.errors.BotorchError",
    "botorch.fit._set_transformed_inputs",
    "botorch.models.SingleTaskGP",
    "botorch.models.transforms.input.Normalize",
    "botorch.utils.testing.MockPosterior",
    "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
    "test.test_fit.MockGP",
    "test.test_fit.torch",
    "tf"
   ]
  },
  "type": "function"
 },
 "test.test_fit._set_transformed_inputs": {
  "data": {
   "shadows": "botorch.fit._set_transformed_inputs"
  },
  "type": "import"
 },
 "test.test_fit.fit_gpytorch_model": {
  "data": {
   "shadows": "botorch.fit_gpytorch_model"
  },
  "type": "import"
 },
 "test.test_fit.fit_gpytorch_scipy": {
  "data": {
   "shadows": "botorch.optim.fit.fit_gpytorch_scipy"
  },
  "type": "import"
 },
 "test.test_fit.fit_gpytorch_torch": {
  "data": {
   "shadows": "botorch.optim.fit.fit_gpytorch_torch"
  },
  "type": "import"
 },
 "test.test_fit.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.test_fit.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "test.test_fit.settings": {
  "data": {
   "shadows": "botorch.settings"
  },
  "type": "import"
 },
 "test.test_fit.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.test_fit.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.test_functions": {
  "data": {},
  "type": "module"
 },
 "test.test_functions.test_base": {
  "data": {},
  "type": "module"
 },
 "test.test_functions.test_base.BaseTestProblem": {
  "data": {
   "shadows": "botorch.test_functions.base.BaseTestProblem"
  },
  "type": "import"
 },
 "test.test_functions.test_base.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.test_functions.test_base.ConstrainedBaseTestProblem": {
  "data": {
   "shadows": "botorch.test_functions.base.ConstrainedBaseTestProblem"
  },
  "type": "import"
 },
 "test.test_functions.test_base.DummyConstrainedTestProblem": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "botorch.test_functions.base.ConstrainedBaseTestProblem",
    "test.test_functions.test_base.DummyTestProblem"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_base.DummyConstrainedTestProblem.evaluate_slack_true": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "test.test_functions.test_base.DummyTestProblem": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "botorch.test_functions.base.BaseTestProblem"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_base.DummyTestProblem.evaluate_true": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "test.test_functions.test_base.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "test.test_functions.test_base.TestBaseTestProblems": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_base.TestBaseTestProblems.test_base_test_problem": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "problem",
    "problem.negate",
    "problem.noise_std",
    "test.test_functions.test_base.DummyTestProblem",
    "test.test_functions.test_base.torch"
   ]
  },
  "type": "function"
 },
 "test.test_functions.test_base.TestBaseTestProblems.test_constrained_base_test_problem": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "problem",
    "problem.is_feasible",
    "test.test_functions.test_base.DummyConstrainedTestProblem",
    "test.test_functions.test_base.torch"
   ]
  },
  "type": "function"
 },
 "test.test_functions.test_base.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.test_functions.test_multi_fidelity": {
  "data": {},
  "type": "module"
 },
 "test.test_functions.test_multi_fidelity.AugmentedBranin": {
  "data": {
   "shadows": "botorch.test_functions.multi_fidelity.AugmentedBranin"
  },
  "type": "import"
 },
 "test.test_functions.test_multi_fidelity.AugmentedHartmann": {
  "data": {
   "shadows": "botorch.test_functions.multi_fidelity.AugmentedHartmann"
  },
  "type": "import"
 },
 "test.test_functions.test_multi_fidelity.AugmentedRosenbrock": {
  "data": {
   "shadows": "botorch.test_functions.multi_fidelity.AugmentedRosenbrock"
  },
  "type": "import"
 },
 "test.test_functions.test_multi_fidelity.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.test_functions.test_multi_fidelity.SyntheticTestFunctionBaseTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
  },
  "type": "import"
 },
 "test.test_functions.test_multi_fidelity.TestAugmentedBranin": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "botorch.test_functions.multi_fidelity.AugmentedBranin",
    "botorch.utils.testing.BotorchTestCase",
    "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_multi_fidelity.TestAugmentedHartmann": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "botorch.test_functions.multi_fidelity.AugmentedHartmann",
    "botorch.utils.testing.BotorchTestCase",
    "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_multi_fidelity.TestAugmentedRosenbrock": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "botorch.test_functions.multi_fidelity.AugmentedRosenbrock",
    "botorch.utils.testing.BotorchTestCase",
    "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_multi_fidelity.TestAugmentedRosenbrock.test_min_dimension": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "botorch.test_functions.multi_fidelity.AugmentedRosenbrock"
   ]
  },
  "type": "function"
 },
 "test.test_functions.test_multi_objective": {
  "data": {},
  "type": "module"
 },
 "test.test_functions.test_multi_objective.BNH": {
  "data": {
   "shadows": "botorch.test_functions.multi_objective.BNH"
  },
  "type": "import"
 },
 "test.test_functions.test_multi_objective.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.test_functions.test_multi_objective.BraninCurrin": {
  "data": {
   "shadows": "botorch.test_functions.multi_objective.BraninCurrin"
  },
  "type": "import"
 },
 "test.test_functions.test_multi_objective.C2DTLZ2": {
  "data": {
   "shadows": "botorch.test_functions.multi_objective.C2DTLZ2"
  },
  "type": "import"
 },
 "test.test_functions.test_multi_objective.CONSTR": {
  "data": {
   "shadows": "botorch.test_functions.multi_objective.CONSTR"
  },
  "type": "import"
 },
 "test.test_functions.test_multi_objective.ConstrainedBraninCurrin": {
  "data": {
   "shadows": "botorch.test_functions.multi_objective.ConstrainedBraninCurrin"
  },
  "type": "import"
 },
 "test.test_functions.test_multi_objective.ConstrainedMultiObjectiveTestProblemBaseTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.ConstrainedMultiObjectiveTestProblemBaseTestCase"
  },
  "type": "import"
 },
 "test.test_functions.test_multi_objective.DTLZ1": {
  "data": {
   "shadows": "botorch.test_functions.multi_objective.DTLZ1"
  },
  "type": "import"
 },
 "test.test_functions.test_multi_objective.DTLZ2": {
  "data": {
   "shadows": "botorch.test_functions.multi_objective.DTLZ2"
  },
  "type": "import"
 },
 "test.test_functions.test_multi_objective.DummyMOProblem": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.MultiObjectiveTestProblem"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_multi_objective.DummyMOProblem.evaluate_true": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "test.test_functions.test_multi_objective.MultiObjectiveTestProblem": {
  "data": {
   "shadows": "botorch.test_functions.multi_objective.MultiObjectiveTestProblem"
  },
  "type": "import"
 },
 "test.test_functions.test_multi_objective.MultiObjectiveTestProblemBaseTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.MultiObjectiveTestProblemBaseTestCase"
  },
  "type": "import"
 },
 "test.test_functions.test_multi_objective.SRN": {
  "data": {
   "shadows": "botorch.test_functions.multi_objective.SRN"
  },
  "type": "import"
 },
 "test.test_functions.test_multi_objective.TestBaseTestMultiObjectiveProblem": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_multi_objective.TestBaseTestMultiObjectiveProblem.test_base_mo_problem": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "NotImplementedError",
    "test.test_functions.test_multi_objective.DummyMOProblem",
    "test.test_functions.test_multi_objective.torch"
   ]
  },
  "type": "function"
 },
 "test.test_functions.test_multi_objective.TestBraninCurrin": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.BraninCurrin",
    "botorch.utils.testing.BotorchTestCase",
    "botorch.utils.testing.MultiObjectiveTestProblemBaseTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_multi_objective.TestBraninCurrin.test_init": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "test.test_functions.test_multi_objective.TestConstrainedMultiObjectiveProblems": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.BNH",
    "botorch.test_functions.multi_objective.C2DTLZ2",
    "botorch.test_functions.multi_objective.CONSTR",
    "botorch.test_functions.multi_objective.ConstrainedBraninCurrin",
    "botorch.test_functions.multi_objective.SRN",
    "botorch.utils.testing.BotorchTestCase",
    "botorch.utils.testing.ConstrainedMultiObjectiveTestProblemBaseTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_multi_objective.TestConstrainedMultiObjectiveProblems.test_c2dtlz2_batch_exception": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.test_functions.multi_objective.C2DTLZ2",
    "test.test_functions.test_multi_objective.torch"
   ]
  },
  "type": "function"
 },
 "test.test_functions.test_multi_objective.TestDTLZ": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.DTLZ1",
    "botorch.test_functions.multi_objective.DTLZ2",
    "botorch.utils.testing.BotorchTestCase",
    "botorch.utils.testing.MultiObjectiveTestProblemBaseTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_multi_objective.TestDTLZ.test_gen_pareto_front": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.DTLZ1",
    "botorch.test_functions.multi_objective.DTLZ2",
    "isinstance",
    "test.test_functions.test_multi_objective.torch"
   ]
  },
  "type": "function"
 },
 "test.test_functions.test_multi_objective.TestDTLZ.test_init": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "test.test_functions.test_multi_objective.TestMultiObjectiveProblems": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.VehicleSafety",
    "botorch.utils.testing.BotorchTestCase",
    "botorch.utils.testing.MultiObjectiveTestProblemBaseTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_multi_objective.TestZDT": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.ZDT1",
    "botorch.test_functions.multi_objective.ZDT2",
    "botorch.test_functions.multi_objective.ZDT3",
    "botorch.utils.testing.BotorchTestCase",
    "botorch.utils.testing.MultiObjectiveTestProblemBaseTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_multi_objective.TestZDT.test_gen_pareto_front": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "botorch.test_functions.multi_objective.ZDT1",
    "botorch.test_functions.multi_objective.ZDT2",
    "botorch.test_functions.multi_objective.ZDT3",
    "isinstance",
    "range",
    "test.test_functions.test_multi_objective.math",
    "test.test_functions.test_multi_objective.torch"
   ]
  },
  "type": "function"
 },
 "test.test_functions.test_multi_objective.TestZDT.test_init": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "test.test_functions.test_multi_objective.VehicleSafety": {
  "data": {
   "shadows": "botorch.test_functions.multi_objective.VehicleSafety"
  },
  "type": "import"
 },
 "test.test_functions.test_multi_objective.ZDT1": {
  "data": {
   "shadows": "botorch.test_functions.multi_objective.ZDT1"
  },
  "type": "import"
 },
 "test.test_functions.test_multi_objective.ZDT2": {
  "data": {
   "shadows": "botorch.test_functions.multi_objective.ZDT2"
  },
  "type": "import"
 },
 "test.test_functions.test_multi_objective.ZDT3": {
  "data": {
   "shadows": "botorch.test_functions.multi_objective.ZDT3"
  },
  "type": "import"
 },
 "test.test_functions.test_multi_objective.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.test_functions.test_multi_objective.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.test_functions.test_synthetic": {
  "data": {},
  "type": "module"
 },
 "test.test_functions.test_synthetic.Ackley": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.Ackley"
  },
  "type": "import"
 },
 "test.test_functions.test_synthetic.Beale": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.Beale"
  },
  "type": "import"
 },
 "test.test_functions.test_synthetic.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.test_functions.test_synthetic.Branin": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.Branin"
  },
  "type": "import"
 },
 "test.test_functions.test_synthetic.Bukin": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.Bukin"
  },
  "type": "import"
 },
 "test.test_functions.test_synthetic.Cosine8": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.Cosine8"
  },
  "type": "import"
 },
 "test.test_functions.test_synthetic.DixonPrice": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.DixonPrice"
  },
  "type": "import"
 },
 "test.test_functions.test_synthetic.DropWave": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.DropWave"
  },
  "type": "import"
 },
 "test.test_functions.test_synthetic.EggHolder": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.EggHolder"
  },
  "type": "import"
 },
 "test.test_functions.test_synthetic.Griewank": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.Griewank"
  },
  "type": "import"
 },
 "test.test_functions.test_synthetic.Hartmann": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.Hartmann"
  },
  "type": "import"
 },
 "test.test_functions.test_synthetic.HolderTable": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.HolderTable"
  },
  "type": "import"
 },
 "test.test_functions.test_synthetic.Levy": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.Levy"
  },
  "type": "import"
 },
 "test.test_functions.test_synthetic.Michalewicz": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.Michalewicz"
  },
  "type": "import"
 },
 "test.test_functions.test_synthetic.Powell": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.Powell"
  },
  "type": "import"
 },
 "test.test_functions.test_synthetic.Rastrigin": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.Rastrigin"
  },
  "type": "import"
 },
 "test.test_functions.test_synthetic.Rosenbrock": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.Rosenbrock"
  },
  "type": "import"
 },
 "test.test_functions.test_synthetic.Shekel": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.Shekel"
  },
  "type": "import"
 },
 "test.test_functions.test_synthetic.SixHumpCamel": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.SixHumpCamel"
  },
  "type": "import"
 },
 "test.test_functions.test_synthetic.StyblinskiTang": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.StyblinskiTang"
  },
  "type": "import"
 },
 "test.test_functions.test_synthetic.SyntheticTestFunctionBaseTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
  },
  "type": "import"
 },
 "test.test_functions.test_synthetic.TestAckley": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.Ackley",
    "botorch.utils.testing.BotorchTestCase",
    "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestBeale": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.Beale",
    "botorch.utils.testing.BotorchTestCase",
    "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestBranin": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.Branin",
    "botorch.utils.testing.BotorchTestCase",
    "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestBukin": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.Bukin",
    "botorch.utils.testing.BotorchTestCase",
    "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestCosine8": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.Cosine8",
    "botorch.utils.testing.BotorchTestCase",
    "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestDixonPrice": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.DixonPrice",
    "botorch.utils.testing.BotorchTestCase",
    "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestDropWave": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.DropWave",
    "botorch.utils.testing.BotorchTestCase",
    "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestEggHolder": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.EggHolder",
    "botorch.utils.testing.BotorchTestCase",
    "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestGriewank": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.Griewank",
    "botorch.utils.testing.BotorchTestCase",
    "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestHartmann": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.Hartmann",
    "botorch.utils.testing.BotorchTestCase",
    "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestHartmann.test_dimension": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "botorch.test_functions.synthetic.Hartmann"
   ]
  },
  "type": "function"
 },
 "test.test_functions.test_synthetic.TestHolderTable": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.HolderTable",
    "botorch.utils.testing.BotorchTestCase",
    "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestLevy": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.Levy",
    "botorch.utils.testing.BotorchTestCase",
    "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestMichalewicz": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.Michalewicz",
    "botorch.utils.testing.BotorchTestCase",
    "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestPowell": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.Powell",
    "botorch.utils.testing.BotorchTestCase",
    "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestRastrigin": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.Rastrigin",
    "botorch.utils.testing.BotorchTestCase",
    "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestRosenbrock": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.Rosenbrock",
    "botorch.utils.testing.BotorchTestCase",
    "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestShekel": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.Shekel",
    "botorch.utils.testing.BotorchTestCase",
    "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestSixHumpCamel": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.SixHumpCamel",
    "botorch.utils.testing.BotorchTestCase",
    "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestStyblinskiTang": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.StyblinskiTang",
    "botorch.utils.testing.BotorchTestCase",
    "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_synthetic.TestThreeHumpCamel": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "botorch.test_functions.synthetic.ThreeHumpCamel",
    "botorch.utils.testing.BotorchTestCase",
    "botorch.utils.testing.SyntheticTestFunctionBaseTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_functions.test_synthetic.ThreeHumpCamel": {
  "data": {
   "shadows": "botorch.test_functions.synthetic.ThreeHumpCamel"
  },
  "type": "import"
 },
 "test.test_logging": {
  "data": {},
  "type": "module"
 },
 "test.test_logging.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.test_logging.LOG_LEVEL_DEFAULT": {
  "data": {
   "shadows": "botorch.logging.LOG_LEVEL_DEFAULT"
  },
  "type": "import"
 },
 "test.test_logging.TestLogging": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_logging.TestLogging.test_logger": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "botorch.logging.logger.error",
    "botorch.logging.logger.info"
   ]
  },
  "type": "function"
 },
 "test.test_logging.TestLogging.test_settings_log_level": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "botorch.logging.LOG_LEVEL_DEFAULT",
    "botorch.logging.logger.level",
    "botorch.settings.log_level",
    "test.test_logging.logging"
   ]
  },
  "type": "function"
 },
 "test.test_logging.logger": {
  "data": {
   "shadows": "botorch.logging.logger"
  },
  "type": "import"
 },
 "test.test_logging.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "test.test_logging.settings": {
  "data": {
   "shadows": "botorch.settings"
  },
  "type": "import"
 },
 "test.test_settings": {
  "data": {},
  "type": "module"
 },
 "test.test_settings.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.test_settings.BotorchWarning": {
  "data": {
   "shadows": "botorch.exceptions.BotorchWarning"
  },
  "type": "import"
 },
 "test.test_settings.TestSettings": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.test_settings.TestSettings.test_debug": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "botorch.exceptions.BotorchWarning",
    "botorch.settings.debug",
    "botorch.settings.debug._set_state",
    "len",
    "test.test_settings.warnings"
   ]
  },
  "type": "function"
 },
 "test.test_settings.TestSettings.test_flags": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "botorch.settings.debug",
    "botorch.settings.propagate_grads",
    "flag",
    "flag.off",
    "flag.on"
   ]
  },
  "type": "function"
 },
 "test.test_settings.settings": {
  "data": {
   "shadows": "botorch.settings"
  },
  "type": "import"
 },
 "test.test_settings.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.utils": {
  "data": {},
  "type": "module"
 },
 "test.utils.multi_objective": {
  "data": {},
  "type": "module"
 },
 "test.utils.multi_objective.test_box_decomposition": {
  "data": {},
  "type": "module"
 },
 "test.utils.multi_objective.test_box_decomposition.BotorchError": {
  "data": {
   "shadows": "botorch.exceptions.errors.BotorchError"
  },
  "type": "import"
 },
 "test.utils.multi_objective.test_box_decomposition.BotorchTensorDimensionError": {
  "data": {
   "shadows": "botorch.exceptions.errors.BotorchTensorDimensionError"
  },
  "type": "import"
 },
 "test.utils.multi_objective.test_box_decomposition.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.utils.multi_objective.test_box_decomposition.NondominatedPartitioning": {
  "data": {
   "shadows": "botorch.utils.multi_objective.box_decomposition.NondominatedPartitioning"
  },
  "type": "import"
 },
 "test.utils.multi_objective.test_box_decomposition.TestNonDominatedPartitioning": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.utils.multi_objective.test_box_decomposition.TestNonDominatedPartitioning.test_non_dominated_partitioning": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ValueError",
    "botorch.exceptions.errors.BotorchError",
    "botorch.exceptions.errors.BotorchTensorDimensionError",
    "botorch.utils.multi_objective.box_decomposition.NondominatedPartitioning",
    "float",
    "test.utils.multi_objective.test_box_decomposition.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.multi_objective.test_box_decomposition.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "test.utils.multi_objective.test_box_decomposition.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.multi_objective.test_hypervolume": {
  "data": {},
  "type": "module"
 },
 "test.utils.multi_objective.test_hypervolume.BotorchTensorDimensionError": {
  "data": {
   "shadows": "botorch.exceptions.errors.BotorchTensorDimensionError"
  },
  "type": "import"
 },
 "test.utils.multi_objective.test_hypervolume.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.utils.multi_objective.test_hypervolume.EPS": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "test.utils.multi_objective.test_hypervolume.Hypervolume": {
  "data": {
   "shadows": "botorch.utils.multi_objective.hypervolume.Hypervolume"
  },
  "type": "import"
 },
 "test.utils.multi_objective.test_hypervolume.TestHypervolume": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.utils.multi_objective.test_hypervolume.TestHypervolume.test_hypervolume": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "abs",
    "botorch.exceptions.errors.BotorchTensorDimensionError",
    "botorch.utils.multi_objective.hypervolume.Hypervolume",
    "test.utils.multi_objective.test_hypervolume.EPS",
    "test.utils.multi_objective.test_hypervolume.pareto_Y_5d",
    "test.utils.multi_objective.test_hypervolume.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.multi_objective.test_hypervolume.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "test.utils.multi_objective.test_hypervolume.pareto_Y_5d": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "test.utils.multi_objective.test_hypervolume.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.multi_objective.test_pareto": {
  "data": {},
  "type": "module"
 },
 "test.utils.multi_objective.test_pareto.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.utils.multi_objective.test_pareto.TestPareto": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.utils.multi_objective.test_pareto.TestPareto.test_is_non_dominated": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "botorch.utils.multi_objective.pareto.is_non_dominated",
    "test.utils.multi_objective.test_pareto.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.multi_objective.test_pareto.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "test.utils.multi_objective.test_pareto.is_non_dominated": {
  "data": {
   "shadows": "botorch.utils.multi_objective.pareto.is_non_dominated"
  },
  "type": "import"
 },
 "test.utils.multi_objective.test_pareto.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.multi_objective.test_scalarization": {
  "data": {},
  "type": "module"
 },
 "test.utils.multi_objective.test_scalarization.BotorchTensorDimensionError": {
  "data": {
   "shadows": "botorch.exceptions.errors.BotorchTensorDimensionError"
  },
  "type": "import"
 },
 "test.utils.multi_objective.test_scalarization.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.utils.multi_objective.test_scalarization.TestGetChebyshevScalarization": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.utils.multi_objective.test_scalarization.TestGetChebyshevScalarization.test_get_chebyshev_scalarization": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "NotImplementedError",
    "botorch.exceptions.errors.BotorchTensorDimensionError",
    "botorch.utils.multi_objective.scalarization.get_chebyshev_scalarization",
    "botorch.utils.transforms.normalize",
    "objective_transform",
    "test.utils.multi_objective.test_scalarization.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.multi_objective.test_scalarization.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "test.utils.multi_objective.test_scalarization.get_chebyshev_scalarization": {
  "data": {
   "shadows": "botorch.utils.multi_objective.scalarization.get_chebyshev_scalarization"
  },
  "type": "import"
 },
 "test.utils.multi_objective.test_scalarization.normalize": {
  "data": {
   "shadows": "botorch.utils.transforms.normalize"
  },
  "type": "import"
 },
 "test.utils.multi_objective.test_scalarization.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_constraints": {
  "data": {},
  "type": "module"
 },
 "test.utils.test_constraints.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.utils.test_constraints.TestGetOutcomeConstraintTransform": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.utils.test_constraints.TestGetOutcomeConstraintTransform.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "super",
    "test.utils.test_constraints.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_constraints.TestGetOutcomeConstraintTransform.test_BasicEvaluation": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "botorch.utils.get_outcome_constraint_transforms",
    "len",
    "print",
    "test.utils.test_constraints.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_constraints.TestGetOutcomeConstraintTransform.test_BroadcastEvaluation": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "botorch.utils.get_outcome_constraint_transforms",
    "len",
    "test.utils.test_constraints.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_constraints.TestGetOutcomeConstraintTransform.test_None": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "botorch.utils.get_outcome_constraint_transforms"
   ]
  },
  "type": "function"
 },
 "test.utils.test_constraints.get_outcome_constraint_transforms": {
  "data": {
   "shadows": "botorch.utils.get_outcome_constraint_transforms"
  },
  "type": "import"
 },
 "test.utils.test_constraints.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_containers": {
  "data": {},
  "type": "module"
 },
 "test.utils.test_containers.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.utils.test_containers.TestConstructContainers": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.utils.test_containers.TestConstructContainers.test_TrainingData": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "botorch.utils.containers.TrainingData",
    "test.utils.test_containers.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_containers.TrainingData": {
  "data": {
   "shadows": "botorch.utils.containers.TrainingData"
  },
  "type": "import"
 },
 "test.utils.test_containers.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_feasible_volume": {
  "data": {},
  "type": "module"
 },
 "test.utils.test_feasible_volume.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.utils.test_feasible_volume.MockModel": {
  "data": {
   "shadows": "botorch.utils.testing.MockModel"
  },
  "type": "import"
 },
 "test.utils.test_feasible_volume.MockPosterior": {
  "data": {
   "shadows": "botorch.utils.testing.MockPosterior"
  },
  "type": "import"
 },
 "test.utils.test_feasible_volume.TestFeasibleVolumeEstimates": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.utils.test_feasible_volume.TestFeasibleVolumeEstimates.test_estimate_feasible_volume": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "botorch.utils.feasible_volume.estimate_feasible_volume",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "test.utils.test_feasible_volume.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_feasible_volume.TestFeasibleVolumeEstimates.test_feasible_samples": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "botorch.utils.feasible_volume.get_feasible_samples",
    "test.utils.test_feasible_volume.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_feasible_volume.TestFeasibleVolumeEstimates.test_outcome_feasibility_probability": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "botorch.utils.feasible_volume.get_outcome_feasibility_probability",
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "test.utils.test_feasible_volume.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_feasible_volume.estimate_feasible_volume": {
  "data": {
   "shadows": "botorch.utils.feasible_volume.estimate_feasible_volume"
  },
  "type": "import"
 },
 "test.utils.test_feasible_volume.get_feasible_samples": {
  "data": {
   "shadows": "botorch.utils.feasible_volume.get_feasible_samples"
  },
  "type": "import"
 },
 "test.utils.test_feasible_volume.get_outcome_feasibility_probability": {
  "data": {
   "shadows": "botorch.utils.feasible_volume.get_outcome_feasibility_probability"
  },
  "type": "import"
 },
 "test.utils.test_feasible_volume.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_objective": {
  "data": {},
  "type": "module"
 },
 "test.utils.test_objective.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.utils.test_objective.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "test.utils.test_objective.TestApplyConstraints": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.utils.test_objective.TestApplyConstraints.test_apply_constraints": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError",
    "botorch.utils.apply_constraints",
    "test.utils.test_objective.minus_one_f",
    "test.utils.test_objective.ones_f",
    "test.utils.test_objective.torch",
    "test.utils.test_objective.zeros_f"
   ]
  },
  "type": "function"
 },
 "test.utils.test_objective.TestGetObjectiveWeightsTransform": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.utils.test_objective.TestGetObjectiveWeightsTransform.test_IncompatibleNumberOfWeights": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.utils.get_objective_weights_transform",
    "objective_transform",
    "test.utils.test_objective.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_objective.TestGetObjectiveWeightsTransform.test_MultiTaskWeights": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "botorch.utils.get_objective_weights_transform",
    "objective_transform",
    "test.utils.test_objective.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_objective.TestGetObjectiveWeightsTransform.test_NoMCSamples": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "botorch.utils.get_objective_weights_transform",
    "objective_transform",
    "test.utils.test_objective.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_objective.TestGetObjectiveWeightsTransform.test_NoWeights": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "botorch.utils.get_objective_weights_transform",
    "objective_transform",
    "test.utils.test_objective.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_objective.TestGetObjectiveWeightsTransform.test_OneWeightBroadcasting": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "botorch.utils.get_objective_weights_transform",
    "objective_transform",
    "test.utils.test_objective.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_objective.apply_constraints": {
  "data": {
   "shadows": "botorch.utils.apply_constraints"
  },
  "type": "import"
 },
 "test.utils.test_objective.get_objective_weights_transform": {
  "data": {
   "shadows": "botorch.utils.get_objective_weights_transform"
  },
  "type": "import"
 },
 "test.utils.test_objective.minus_one_f": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "test.utils.test_objective.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "test.utils.test_objective.ones_f": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "test.utils.test_objective.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "test.utils.test_objective.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_objective.zeros_f": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "test.utils.test_objective.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "test.utils.test_rounding": {
  "data": {},
  "type": "module"
 },
 "test.utils.test_rounding.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.utils.test_rounding.TestApproximateRound": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.utils.test_rounding.TestApproximateRound.test_approximate_round": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "botorch.utils.rounding.approximate_round",
    "test.utils.test_rounding.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_rounding.approximate_round": {
  "data": {
   "shadows": "botorch.utils.rounding.approximate_round"
  },
  "type": "import"
 },
 "test.utils.test_rounding.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_sampling": {
  "data": {},
  "type": "module"
 },
 "test.utils.test_sampling.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.utils.test_sampling.GPyTorchPosterior": {
  "data": {
   "shadows": "botorch.posteriors.gpytorch.GPyTorchPosterior"
  },
  "type": "import"
 },
 "test.utils.test_sampling.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "test.utils.test_sampling.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.utils.test_sampling.PolytopeSampler": {
  "data": {
   "shadows": "botorch.utils.sampling.PolytopeSampler"
  },
  "type": "import"
 },
 "test.utils.test_sampling.PolytopeSamplerTestCase": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.utils.test_sampling.PolytopeSamplerTestCase.test_intial_point": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "Result",
    "ValueError",
    "botorch.utils.sampling.PolytopeSampler",
    "test.utils.test_sampling.torch",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_sampling.PolytopeSamplerTestCase.test_intial_point.Result": {
  "data": {
   "lineno": 320
  },
  "type": "class"
 },
 "test.utils.test_sampling.PolytopeSamplerTestCase.test_sample_polytope": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "botorch.utils.sampling.PolytopeSampler",
    "test.utils.test_sampling.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_sampling.PolytopeSamplerTestCase.test_sample_polytope_with_constraints": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "botorch.utils.sampling.PolytopeSampler",
    "test.utils.test_sampling.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_sampling.SamplingWarning": {
  "data": {
   "shadows": "botorch.exceptions.warnings.SamplingWarning"
  },
  "type": "import"
 },
 "test.utils.test_sampling.SobolEngine": {
  "data": {
   "shadows": "torch.quasirandom.SobolEngine"
  },
  "type": "import"
 },
 "test.utils.test_sampling.TestConstructBaseSamples": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.utils.test_sampling.TestConstructBaseSamples.test_construct_base_samples": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "botorch.exceptions.warnings.SamplingWarning",
    "botorch.settings.debug",
    "botorch.utils.sampling.construct_base_samples",
    "issubclass",
    "len",
    "str",
    "test.utils.test_sampling.itertools",
    "test.utils.test_sampling.torch",
    "test.utils.test_sampling.warnings",
    "torch.quasirandom.SobolEngine.MAXDIM"
   ]
  },
  "type": "function"
 },
 "test.utils.test_sampling.TestConstructBaseSamples.test_construct_base_samples_from_posterior": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "botorch.posteriors.gpytorch.GPyTorchPosterior",
    "botorch.utils.sampling.construct_base_samples_from_posterior",
    "gpytorch.distributions.MultitaskMultivariateNormal",
    "gpytorch.distributions.MultivariateNormal",
    "test.utils.test_sampling.itertools",
    "test.utils.test_sampling.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_sampling.TestManualSeed": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.utils.test_sampling.TestManualSeed.test_manual_seed": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "botorch.utils.sampling.manual_seed",
    "test.utils.test_sampling.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_sampling.TestSampleUtils": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.utils.test_sampling.TestSampleUtils.test_batched_multinomial": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "botorch.utils.sampling.batched_multinomial",
    "test.utils.test_sampling.itertools",
    "test.utils.test_sampling.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_sampling.TestSampleUtils.test_draw_sobol_samples": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "botorch.utils.sampling.draw_sobol_samples",
    "test.utils.test_sampling.itertools",
    "test.utils.test_sampling.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_sampling.TestSampleUtils.test_sample_hypersphere": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "botorch.utils.sampling.sample_hypersphere",
    "test.utils.test_sampling.itertools",
    "test.utils.test_sampling.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_sampling.TestSampleUtils.test_sample_simplex": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "botorch.utils.sampling.sample_simplex",
    "test.utils.test_sampling.itertools",
    "test.utils.test_sampling.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_sampling.batched_multinomial": {
  "data": {
   "shadows": "botorch.utils.sampling.batched_multinomial"
  },
  "type": "import"
 },
 "test.utils.test_sampling.construct_base_samples": {
  "data": {
   "shadows": "botorch.utils.sampling.construct_base_samples"
  },
  "type": "import"
 },
 "test.utils.test_sampling.construct_base_samples_from_posterior": {
  "data": {
   "shadows": "botorch.utils.sampling.construct_base_samples_from_posterior"
  },
  "type": "import"
 },
 "test.utils.test_sampling.draw_sobol_samples": {
  "data": {
   "shadows": "botorch.utils.sampling.draw_sobol_samples"
  },
  "type": "import"
 },
 "test.utils.test_sampling.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "test.utils.test_sampling.manual_seed": {
  "data": {
   "shadows": "botorch.utils.sampling.manual_seed"
  },
  "type": "import"
 },
 "test.utils.test_sampling.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "test.utils.test_sampling.sample_hypersphere": {
  "data": {
   "shadows": "botorch.utils.sampling.sample_hypersphere"
  },
  "type": "import"
 },
 "test.utils.test_sampling.sample_simplex": {
  "data": {
   "shadows": "botorch.utils.sampling.sample_simplex"
  },
  "type": "import"
 },
 "test.utils.test_sampling.settings": {
  "data": {
   "shadows": "botorch.settings"
  },
  "type": "import"
 },
 "test.utils.test_sampling.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_sampling.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.utils.test_testing": {
  "data": {},
  "type": "module"
 },
 "test.utils.test_testing.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.utils.test_testing.MockModel": {
  "data": {
   "shadows": "botorch.utils.testing.MockModel"
  },
  "type": "import"
 },
 "test.utils.test_testing.MockPosterior": {
  "data": {
   "shadows": "botorch.utils.testing.MockPosterior"
  },
  "type": "import"
 },
 "test.utils.test_testing.TestMock": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.utils.test_testing.TestMock.test_MockModel": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "botorch.utils.testing.MockModel",
    "botorch.utils.testing.MockPosterior",
    "test.utils.test_testing.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_testing.TestMock.test_MockPosterior": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.utils.testing.MockPosterior",
    "test.utils.test_testing.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_testing.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_torch": {
  "data": {},
  "type": "module"
 },
 "test.utils.test_torch.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.utils.test_torch.BufferDict": {
  "data": {
   "shadows": "botorch.utils.torch.BufferDict"
  },
  "type": "import"
 },
 "test.utils.test_torch.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "test.utils.test_torch.TestBufferDict": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.utils.test_torch.TestBufferDict.test_BufferDict": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "ValueError",
    "botorch.utils.torch.BufferDict",
    "buffer_dict",
    "check",
    "collections.OrderedDict",
    "len",
    "sorted",
    "test.utils.test_torch.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_torch.TestBufferDict.test_BufferDict.check": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "test.utils.test_torch.annotations": {
  "data": {
   "shadows": "__future__.annotations"
  },
  "type": "import"
 },
 "test.utils.test_torch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_transforms": {
  "data": {},
  "type": "module"
 },
 "test.utils.test_transforms.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "test.utils.test_transforms.BMIMTestClass": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.utils.test_transforms.BMIMTestClass.dummy_method": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "botorch.utils.transforms.concatenate_pending_points",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "test.utils.test_transforms.BMIMTestClass.kw_method": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "botorch.utils.transforms.t_batch_mode_transform",
    "torch.Tensor",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "test.utils.test_transforms.BMIMTestClass.q1_method": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "botorch.utils.transforms.t_batch_mode_transform",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "test.utils.test_transforms.BMIMTestClass.q_method": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "botorch.utils.transforms.t_batch_mode_transform",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "test.utils.test_transforms.BotorchTestCase": {
  "data": {
   "shadows": "botorch.utils.testing.BotorchTestCase"
  },
  "type": "import"
 },
 "test.utils.test_transforms.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "test.utils.test_transforms.TestBatchModeTransform": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.utils.test_transforms.TestBatchModeTransform.test_t_batch_mode_transform": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "test.utils.test_transforms.BMIMTestClass",
    "test.utils.test_transforms.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_transforms.TestConcatenatePendingPoints": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.utils.test_transforms.TestConcatenatePendingPoints.test_concatenate_pending_points": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "test.utils.test_transforms.BMIMTestClass",
    "test.utils.test_transforms.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_transforms.TestMatchBatchShape": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.utils.test_transforms.TestMatchBatchShape.test_match_batch_shape": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.utils.transforms.match_batch_shape",
    "test.utils.test_transforms.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_transforms.TestMatchBatchShape.test_match_batch_shape_multi_dim": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "RuntimeError",
    "botorch.utils.transforms.match_batch_shape",
    "test.utils.test_transforms.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_transforms.TestNormalizeAndUnnormalize": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.utils.test_transforms.TestNormalizeAndUnnormalize.test_normalize_unnormalize": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "botorch.utils.transforms.normalize",
    "botorch.utils.transforms.unnormalize",
    "test.utils.test_transforms.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_transforms.TestSqueezeLastDim": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.utils.test_transforms.TestSqueezeLastDim.test_squeeze_last_dim": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "botorch.utils.transforms.squeeze_last_dim",
    "test.utils.test_transforms.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_transforms.TestStandardize": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.utils.test_transforms.TestStandardize.test_standardize": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "botorch.utils.transforms.standardize",
    "test.utils.test_transforms.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_transforms.TorchNormalizeIndices": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "botorch.utils.testing.BotorchTestCase"
   ]
  },
  "type": "class"
 },
 "test.utils.test_transforms.TorchNormalizeIndices.test_normalize_indices": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "ValueError",
    "botorch.utils.transforms.normalize_indices"
   ]
  },
  "type": "function"
 },
 "test.utils.test_transforms.concatenate_pending_points": {
  "data": {
   "shadows": "botorch.utils.transforms.concatenate_pending_points"
  },
  "type": "import"
 },
 "test.utils.test_transforms.match_batch_shape": {
  "data": {
   "shadows": "botorch.utils.transforms.match_batch_shape"
  },
  "type": "import"
 },
 "test.utils.test_transforms.normalize": {
  "data": {
   "shadows": "botorch.utils.transforms.normalize"
  },
  "type": "import"
 },
 "test.utils.test_transforms.normalize_indices": {
  "data": {
   "shadows": "botorch.utils.transforms.normalize_indices"
  },
  "type": "import"
 },
 "test.utils.test_transforms.squeeze_last_dim": {
  "data": {
   "shadows": "botorch.utils.transforms.squeeze_last_dim"
  },
  "type": "import"
 },
 "test.utils.test_transforms.standardize": {
  "data": {
   "shadows": "botorch.utils.transforms.standardize"
  },
  "type": "import"
 },
 "test.utils.test_transforms.t_batch_mode_transform": {
  "data": {
   "shadows": "botorch.utils.transforms.t_batch_mode_transform"
  },
  "type": "import"
 },
 "test.utils.test_transforms.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_transforms.unnormalize": {
  "data": {
   "shadows": "botorch.utils.transforms.unnormalize"
  },
  "type": "import"
 }
}