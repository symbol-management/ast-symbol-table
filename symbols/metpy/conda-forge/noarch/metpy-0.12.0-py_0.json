{
 "metpy": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "get_version",
    "metpy.os",
    "metpy.sys",
    "metpy.warnings"
   ]
  },
  "type": "module"
 },
 "metpy.__version__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "metpy._vendor": {
  "data": {},
  "type": "module"
 },
 "metpy._vendor.xarray": {
  "data": {},
  "type": "module"
 },
 "metpy._vendor.xarray.either_dict_or_kwargs": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "metpy._vendor.xarray.is_dict_like"
   ]
  },
  "type": "function"
 },
 "metpy._vendor.xarray.expanded_indexer": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "Ellipsis",
    "IndexError",
    "isinstance",
    "len",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "metpy._vendor.xarray.is_dict_like": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "metpy._version": {
  "data": {},
  "type": "module"
 },
 "metpy._version.get_distribution": {
  "data": {
   "shadows": "pkg_resources.get_distribution"
  },
  "type": "import"
 },
 "metpy._version.get_version": {
  "data": {
   "shadows": "setuptools_scm.get_version",
   "symbols_in_volume": [
    "ImportError",
    "LookupError",
    "__package__",
    "pkg_resources.get_distribution",
    "setuptools_scm.get_version"
   ]
  },
  "type": "import"
 },
 "metpy.calc": {
  "data": {
   "symbols_in_volume": [
    "metpy.calc.__all__"
   ]
  },
  "type": "module"
 },
 "metpy.calc.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "metpy.calc.basic": {
  "data": {
   "symbols_in_volume": [
    "Exporter",
    "globals"
   ]
  },
  "type": "module"
 },
 "metpy.calc.basic._check_radians": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "AttributeError",
    "metpy.calc.basic.warnings",
    "numpy.abs",
    "numpy.greater",
    "numpy.nanmax",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "metpy.calc.basic.add_height_to_pressure": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.basic.exporter",
    "metpy.calc.basic.height_to_pressure_std",
    "metpy.calc.basic.pressure_to_height_std"
   ]
  },
  "type": "function"
 },
 "metpy.calc.basic.add_pressure_to_height": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.basic.exporter",
    "metpy.calc.basic.height_to_pressure_std",
    "metpy.calc.basic.pressure_to_height_std"
   ]
  },
  "type": "function"
 },
 "metpy.calc.basic.altimeter_to_sea_level_pressure": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.basic.altimeter_to_station_pressure",
    "metpy.calc.basic.exporter",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "metpy.calc.basic.altimeter_to_station_pressure": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.basic.exporter",
    "metpy.calc.basic.p0",
    "metpy.calc.basic.t0",
    "units",
    "units.hPa"
   ]
  },
  "type": "function"
 },
 "metpy.calc.basic.apparent_temperature": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "atleast_1d",
    "check_units",
    "hasattr",
    "isinstance",
    "list",
    "masked_array",
    "metpy.calc.basic.exporter",
    "metpy.calc.basic.heat_index",
    "metpy.calc.basic.windchill",
    "numpy.any",
    "numpy.array",
    "numpy.ma.where",
    "numpy.ndarray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "metpy.calc.basic.coriolis_parameter": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "_check_radians",
    "metpy.calc.basic.exporter",
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "metpy.calc.basic.exporter": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "metpy.calc.basic.gaussian_filter": {
  "data": {
   "shadows": "scipy.ndimage.gaussian_filter"
  },
  "type": "import"
 },
 "metpy.calc.basic.geopotential_to_height": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "metpy.calc.basic.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.calc.basic.heat_index": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "atleast_1d",
    "check_units",
    "hasattr",
    "masked_array",
    "metpy.calc.basic.exporter",
    "numpy.abs",
    "numpy.any",
    "numpy.array",
    "numpy.full",
    "numpy.isnan",
    "numpy.nan",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "metpy.calc.basic.height_to_geopotential": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.basic.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.calc.basic.height_to_pressure_std": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.basic.exporter",
    "metpy.calc.basic.p0",
    "metpy.calc.basic.t0",
    "units"
   ]
  },
  "type": "function"
 },
 "metpy.calc.basic.mpconsts": {
  "data": {
   "shadows": "constants"
  },
  "type": "import"
 },
 "metpy.calc.basic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "metpy.calc.basic.p0": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "metpy.calc.basic.pressure_to_height_std": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.basic.exporter",
    "metpy.calc.basic.p0",
    "metpy.calc.basic.t0",
    "units"
   ]
  },
  "type": "function"
 },
 "metpy.calc.basic.sigma_to_pressure": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "ValueError",
    "check_units",
    "metpy.calc.basic.exporter",
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "metpy.calc.basic.smooth_gaussian": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "int",
    "len",
    "metpy.calc.basic.exporter",
    "numpy.pi",
    "numpy.sqrt",
    "range",
    "round",
    "scipy.ndimage.gaussian_filter",
    "units.wraps"
   ]
  },
  "type": "function"
 },
 "metpy.calc.basic.smooth_n_point": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "ValueError",
    "metpy.calc.basic.exporter",
    "range",
    "units.wraps"
   ]
  },
  "type": "function"
 },
 "metpy.calc.basic.t0": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "metpy.calc.basic.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "metpy.calc.basic.wind_components": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "_check_radians",
    "check_units",
    "metpy.calc.basic.exporter",
    "numpy.cos",
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "metpy.calc.basic.wind_direction": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "atleast_1d",
    "check_units",
    "metpy.calc.basic.exporter",
    "numpy.any",
    "numpy.arctan2",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "metpy.calc.basic.wind_speed": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.basic.exporter",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "metpy.calc.basic.windchill": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "check_units",
    "masked_array",
    "metpy.calc.basic.exporter",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "metpy.calc.cross_sections": {
  "data": {
   "symbols_in_volume": [
    "Exporter",
    "globals"
   ]
  },
  "type": "module"
 },
 "metpy.calc.cross_sections.Geod": {
  "data": {
   "shadows": "pyproj.Geod"
  },
  "type": "import"
 },
 "metpy.calc.cross_sections.absolute_momentum": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "coriolis_parameter",
    "metpy.calc.cross_sections.distances_from_cross_section",
    "metpy.calc.cross_sections.exporter",
    "metpy.calc.cross_sections.latitude_from_cross_section",
    "metpy.calc.cross_sections.normal_component",
    "numpy.deg2rad",
    "numpy.hypot",
    "xarray.broadcast"
   ]
  },
  "type": "function"
 },
 "metpy.calc.cross_sections.ccrs": {
  "data": {
   "shadows": "cartopy.crs"
  },
  "type": "import"
 },
 "metpy.calc.cross_sections.cross_section_components": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "metpy.calc.cross_sections.exporter",
    "metpy.calc.cross_sections.unit_vectors_from_cross_section"
   ]
  },
  "type": "function"
 },
 "metpy.calc.cross_sections.distances_from_cross_section": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "AttributeError",
    "check_axis",
    "numpy.cos",
    "numpy.deg2rad",
    "numpy.ones_like",
    "numpy.sin",
    "pyproj.Geod",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "metpy.calc.cross_sections.exporter": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "metpy.calc.cross_sections.latitude_from_cross_section": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "cartopy.crs.Geodetic",
    "check_axis",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "metpy.calc.cross_sections.normal_component": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "metpy.calc.cross_sections.exporter",
    "metpy.calc.cross_sections.unit_vectors_from_cross_section"
   ]
  },
  "type": "function"
 },
 "metpy.calc.cross_sections.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "metpy.calc.cross_sections.tangential_component": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "metpy.calc.cross_sections.exporter",
    "metpy.calc.cross_sections.unit_vectors_from_cross_section"
   ]
  },
  "type": "function"
 },
 "metpy.calc.cross_sections.unit_vectors_from_cross_section": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "first_derivative",
    "metpy.calc.cross_sections.distances_from_cross_section",
    "metpy.calc.cross_sections.exporter",
    "numpy.hypot",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "metpy.calc.cross_sections.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "metpy.calc.indices": {
  "data": {
   "symbols_in_volume": [
    "Exporter",
    "globals"
   ]
  },
  "type": "module"
 },
 "metpy.calc.indices._precipitable_water": {
  "data": {
   "shadows": "precipitable_water"
  },
  "type": "import"
 },
 "metpy.calc.indices.bulk_shear": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "check_units",
    "get_layer",
    "metpy.calc.indices.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.calc.indices.bunkers_storm_motion": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "check_units",
    "concatenate",
    "metpy.calc.indices.exporter",
    "metpy.calc.indices.mean_pressure_weighted",
    "numpy.hypot",
    "units"
   ]
  },
  "type": "function"
 },
 "metpy.calc.indices.critical_angle": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.indices.bulk_shear",
    "metpy.calc.indices.exporter",
    "numpy.arccos",
    "numpy.argsort",
    "numpy.asarray",
    "numpy.dot",
    "numpy.linalg.norm",
    "units"
   ]
  },
  "type": "function"
 },
 "metpy.calc.indices.exporter": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "metpy.calc.indices.mean_pressure_weighted": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "check_units",
    "enumerate",
    "get_layer",
    "metpy.calc.indices.exporter",
    "numpy.trapz"
   ]
  },
  "type": "function"
 },
 "metpy.calc.indices.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "metpy.calc.indices.precipitable_water": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "FutureWarning",
    "check_units",
    "metpy.calc.indices.exporter",
    "metpy.calc.indices.warnings"
   ]
  },
  "type": "function"
 },
 "metpy.calc.indices.significant_tornado": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "atleast_1d",
    "check_units",
    "metpy.calc.indices.exporter",
    "numpy.clip",
    "units",
    "units.m"
   ]
  },
  "type": "function"
 },
 "metpy.calc.indices.supercell_composite": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "atleast_1d",
    "check_units",
    "metpy.calc.indices.exporter",
    "numpy.clip",
    "units"
   ]
  },
  "type": "function"
 },
 "metpy.calc.indices.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "metpy.calc.kinematics": {
  "data": {
   "symbols_in_volume": [
    "Exporter",
    "globals"
   ]
  },
  "type": "module"
 },
 "metpy.calc.kinematics._ageostrophic_wind": {
  "data": {
   "shadows": "ageostrophic_wind"
  },
  "type": "import"
 },
 "metpy.calc.kinematics._check_and_flip": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "iterable",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "metpy.calc.kinematics._is_x_first_dim": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "metpy.calc.kinematics._stack": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "concatenate",
    "iterable",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "metpy.calc.kinematics._storm_relative_helicity": {
  "data": {
   "shadows": "storm_relative_helicity"
  },
  "type": "import"
 },
 "metpy.calc.kinematics.absolute_vorticity": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "check_units",
    "coriolis_parameter",
    "metpy.calc.kinematics.exporter",
    "metpy.calc.kinematics.vorticity"
   ]
  },
  "type": "function"
 },
 "metpy.calc.kinematics.advection": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "atleast_2d",
    "gradient",
    "metpy.calc.kinematics._stack",
    "metpy.calc.kinematics.ensure_yx_order",
    "metpy.calc.kinematics.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.calc.kinematics.ageostrophic_wind": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "FutureWarning",
    "check_units",
    "metpy.calc.kinematics.exporter",
    "metpy.calc.kinematics.warnings"
   ]
  },
  "type": "function"
 },
 "metpy.calc.kinematics.divergence": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "check_units",
    "first_derivative",
    "metpy.calc.kinematics.ensure_yx_order",
    "metpy.calc.kinematics.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.calc.kinematics.ensure_yx_order": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "metpy.calc.kinematics.ensure_yx_order.wrapper": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "func",
    "metpy.calc.kinematics._check_and_flip",
    "metpy.calc.kinematics._is_x_first_dim",
    "metpy.calc.kinematics.functools",
    "tuple"
   ]
  },
  "type": "function"
 },
 "metpy.calc.kinematics.exporter": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "metpy.calc.kinematics.frontogenesis": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "check_units",
    "first_derivative",
    "metpy.calc.kinematics.divergence",
    "metpy.calc.kinematics.ensure_yx_order",
    "metpy.calc.kinematics.exporter",
    "metpy.calc.kinematics.shearing_deformation",
    "metpy.calc.kinematics.stretching_deformation",
    "metpy.calc.kinematics.total_deformation",
    "numpy.arcsin",
    "numpy.arctan2",
    "numpy.cos",
    "numpy.sin",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "metpy.calc.kinematics.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "metpy.calc.kinematics.geostrophic_wind": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "check_units",
    "first_derivative",
    "metpy.calc.kinematics.ensure_yx_order",
    "metpy.calc.kinematics.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.calc.kinematics.inertial_advective_wind": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "check_units",
    "coriolis_parameter",
    "gradient",
    "metpy.calc.kinematics.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.calc.kinematics.montgomery_streamfunction": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.kinematics.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.calc.kinematics.mpconsts": {
  "data": {
   "shadows": "constants"
  },
  "type": "import"
 },
 "metpy.calc.kinematics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "metpy.calc.kinematics.potential_vorticity_baroclinic": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "ValueError",
    "check_units",
    "first_derivative",
    "metpy.calc.kinematics.absolute_vorticity",
    "metpy.calc.kinematics.exporter",
    "numpy.shape",
    "units.K",
    "units.kelvin",
    "units.kilogram",
    "units.m",
    "units.meter",
    "units.second"
   ]
  },
  "type": "function"
 },
 "metpy.calc.kinematics.potential_vorticity_barotropic": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.kinematics.absolute_vorticity",
    "metpy.calc.kinematics.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.calc.kinematics.q_vector": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "check_units",
    "gradient",
    "metpy.calc.kinematics.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.calc.kinematics.shearing_deformation": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "check_units",
    "first_derivative",
    "metpy.calc.kinematics.ensure_yx_order",
    "metpy.calc.kinematics.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.calc.kinematics.storm_relative_helicity": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "FutureWarning",
    "check_units",
    "metpy.calc.kinematics.exporter",
    "metpy.calc.kinematics.warnings",
    "units"
   ]
  },
  "type": "function"
 },
 "metpy.calc.kinematics.stretching_deformation": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "check_units",
    "first_derivative",
    "metpy.calc.kinematics.ensure_yx_order",
    "metpy.calc.kinematics.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.calc.kinematics.total_deformation": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "check_units",
    "gradient",
    "metpy.calc.kinematics.ensure_yx_order",
    "metpy.calc.kinematics.exporter",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "metpy.calc.kinematics.vorticity": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "check_units",
    "first_derivative",
    "metpy.calc.kinematics.ensure_yx_order",
    "metpy.calc.kinematics.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.calc.kinematics.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "metpy.calc.thermo": {
  "data": {
   "symbols_in_volume": [
    "Exporter",
    "globals",
    "metpy.calc.thermo.dewpoint_from_relative_humidity",
    "metpy.calc.thermo.dewpoint_rh"
   ]
  },
  "type": "module"
 },
 "metpy.calc.thermo._find_append_zero_crossings": {
  "data": {
   "lineno": 1574,
   "symbols_in_volume": [
    "concatenate",
    "find_intersections",
    "numpy.argsort",
    "numpy.ediff1d",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo._insert_lcl_level": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "interpolate_1d",
    "numpy.insert"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo._most_cape_option": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "cape_cin",
    "dewpoint",
    "numpy.max",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo._multiple_el_lfc_options": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "ValueError",
    "_most_cape_option",
    "_wide_option",
    "dewpoint"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo._parcel_profile_helper": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "_greater_or_close",
    "concatenate",
    "metpy.calc.thermo.dry_lapse",
    "metpy.calc.thermo.lcl",
    "metpy.calc.thermo.moist_lapse",
    "numpy.array",
    "numpy.nanmin"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo._wide_option": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "find_intersections",
    "numpy.max",
    "numpy.where",
    "zip"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.brunt_vaisala_frequency": {
  "data": {
   "lineno": 2288,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.thermo.brunt_vaisala_frequency_squared",
    "metpy.calc.thermo.exporter",
    "metpy.calc.thermo.potential_temperature",
    "numpy.nan",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.brunt_vaisala_frequency_squared": {
  "data": {
   "lineno": 2248,
   "symbols_in_volume": [
    "check_units",
    "first_derivative",
    "metpy.calc.thermo.exporter",
    "metpy.calc.thermo.potential_temperature"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.brunt_vaisala_period": {
  "data": {
   "lineno": 2329,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.thermo.brunt_vaisala_frequency_squared",
    "metpy.calc.thermo.exporter",
    "metpy.calc.thermo.potential_temperature",
    "numpy.nan",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.cape_cin": {
  "data": {
   "lineno": 1462,
   "symbols_in_volume": [
    "_find_append_zero_crossings",
    "_greater_or_close",
    "_less_or_close",
    "_remove_nans",
    "check_units",
    "metpy.calc.thermo.el",
    "metpy.calc.thermo.exporter",
    "metpy.calc.thermo.lfc",
    "metpy.calc.thermo.parcel_profile",
    "numpy.copy",
    "numpy.isnan",
    "numpy.log",
    "numpy.trapz",
    "units",
    "units.degK",
    "units.degK.to"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.density": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.thermo.exporter",
    "metpy.calc.thermo.virtual_temperature"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.dewpoint": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.thermo.exporter",
    "metpy.calc.thermo.sat_pressure_0c",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.dewpoint_from_relative_humidity": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "check_units",
    "dewpoint",
    "metpy.calc.thermo.exporter",
    "metpy.calc.thermo.saturation_vapor_pressure",
    "metpy.calc.thermo.warnings",
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.dewpoint_from_specific_humidity": {
  "data": {
   "lineno": 2453,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.thermo.dewpoint_from_relative_humidity",
    "metpy.calc.thermo.exporter",
    "metpy.calc.thermo.relative_humidity_from_specific_humidity"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.dewpoint_rh": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "deprecated",
    "metpy.calc.thermo.dewpoint_from_relative_humidity",
    "metpy.calc.thermo.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.dry_lapse": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.thermo.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.dry_static_energy": {
  "data": {
   "lineno": 2058,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.thermo.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.el": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "_remove_nans",
    "check_units",
    "find_intersections",
    "len",
    "metpy.calc.thermo._multiple_el_lfc_options",
    "metpy.calc.thermo.exporter",
    "metpy.calc.thermo.lcl",
    "numpy.nan",
    "parcel_profile_with_lcl"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.equivalent_potential_temperature": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.thermo.dewpoint",
    "metpy.calc.thermo.exporter",
    "metpy.calc.thermo.saturation_mixing_ratio",
    "metpy.calc.thermo.saturation_vapor_pressure",
    "numpy.exp",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.exner_function": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.thermo.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.exporter": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "metpy.calc.thermo.isentropic_interpolation": {
  "data": {
   "lineno": 1659,
   "symbols_in_volume": [
    "ValueError",
    "_less_or_close",
    "broadcast_indices",
    "check_units",
    "find_bounding_indices",
    "interpolate_1d",
    "list",
    "metpy.calc.thermo.exporter",
    "metpy.calc.thermo.potential_temperature",
    "metpy.calc.thermo.warnings",
    "numpy.argsort",
    "numpy.asarray",
    "numpy.broadcast_to",
    "numpy.exp",
    "numpy.isnan",
    "numpy.log",
    "numpy.max",
    "numpy.nan",
    "numpy.newaxis",
    "numpy.swapaxes",
    "scipy.optimize.fixed_point",
    "slice",
    "tuple",
    "units.hPa",
    "units.kelvin"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.isentropic_interpolation._isen_iter": {
  "data": {
   "lineno": 1715,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.lcl": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "check_units",
    "dewpoint",
    "metpy.calc.thermo.exporter",
    "mixing_ratio",
    "numpy.isclose",
    "numpy.where",
    "saturation_vapor_pressure",
    "scipy.optimize.fixed_point",
    "vapor_pressure"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.lcl._lcl_iter": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "dewpoint",
    "vapor_pressure"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.lfc": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "_less_or_close",
    "_multiple_el_lfc_options",
    "_remove_nans",
    "any",
    "check_units",
    "find_intersections",
    "len",
    "metpy.calc.thermo.exporter",
    "metpy.calc.thermo.lcl",
    "numpy.all",
    "numpy.isclose",
    "numpy.min",
    "numpy.nan",
    "parcel_profile_with_lcl"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.mixed_layer": {
  "data": {
   "lineno": 2013,
   "symbols_in_volume": [
    "abs",
    "check_units",
    "get_layer",
    "metpy.calc.thermo.exporter",
    "numpy.trapz",
    "units.hPa"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.mixed_layer_cape_cin": {
  "data": {
   "lineno": 1897,
   "symbols_in_volume": [
    "check_units",
    "concatenate",
    "metpy.calc.thermo.cape_cin",
    "metpy.calc.thermo.dewpoint",
    "metpy.calc.thermo.exporter",
    "metpy.calc.thermo.parcel_profile_with_lcl",
    "mixed_parcel",
    "units.hPa"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.mixed_parcel": {
  "data": {
   "lineno": 1948,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.thermo.dewpoint",
    "metpy.calc.thermo.exner_function",
    "metpy.calc.thermo.exporter",
    "metpy.calc.thermo.mixing_ratio",
    "metpy.calc.thermo.potential_temperature",
    "metpy.calc.thermo.saturation_mixing_ratio",
    "metpy.calc.thermo.vapor_pressure",
    "mixed_layer",
    "units.hPa"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.mixing_ratio": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.thermo.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.mixing_ratio_from_relative_humidity": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.thermo.exporter",
    "metpy.calc.thermo.saturation_mixing_ratio"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.mixing_ratio_from_specific_humidity": {
  "data": {
   "lineno": 1349,
   "symbols_in_volume": [
    "AttributeError",
    "check_units",
    "metpy.calc.thermo.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.moist_lapse": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "atleast_1d",
    "check_units",
    "metpy.calc.thermo.exporter",
    "numpy.append",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.searchsorted",
    "scipy.integrate.odeint"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.moist_lapse.dt": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "saturation_mixing_ratio"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.moist_static_energy": {
  "data": {
   "lineno": 2090,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.thermo.dry_static_energy",
    "metpy.calc.thermo.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.most_unstable_cape_cin": {
  "data": {
   "lineno": 1854,
   "symbols_in_volume": [
    "_remove_nans",
    "check_units",
    "metpy.calc.thermo.cape_cin",
    "metpy.calc.thermo.dewpoint",
    "metpy.calc.thermo.exporter",
    "metpy.calc.thermo.most_unstable_parcel",
    "metpy.calc.thermo.parcel_profile_with_lcl"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.most_unstable_parcel": {
  "data": {
   "lineno": 1612,
   "symbols_in_volume": [
    "check_units",
    "get_layer",
    "metpy.calc.thermo.dewpoint",
    "metpy.calc.thermo.equivalent_potential_temperature",
    "metpy.calc.thermo.exporter",
    "numpy.argmax",
    "units.hPa"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.mpconsts": {
  "data": {
   "shadows": "constants"
  },
  "type": "import"
 },
 "metpy.calc.thermo.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "metpy.calc.thermo.parcel_profile": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "_parcel_profile_helper",
    "check_units",
    "concatenate",
    "metpy.calc.thermo.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.parcel_profile_with_lcl": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "_insert_lcl_level",
    "_parcel_profile_helper",
    "check_units",
    "concatenate",
    "metpy.calc.thermo.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.potential_temperature": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.thermo.exner_function",
    "metpy.calc.thermo.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.psychrometric_vapor_pressure_wet": {
  "data": {
   "lineno": 1221,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.thermo.exporter",
    "metpy.calc.thermo.saturation_vapor_pressure"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.relative_humidity_from_dewpoint": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.thermo.exporter",
    "saturation_vapor_pressure"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.relative_humidity_from_mixing_ratio": {
  "data": {
   "lineno": 1311,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.thermo.exporter",
    "metpy.calc.thermo.mixing_ratio",
    "metpy.calc.thermo.saturation_mixing_ratio"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.relative_humidity_from_specific_humidity": {
  "data": {
   "lineno": 1423,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.thermo.exporter",
    "metpy.calc.thermo.mixing_ratio_from_specific_humidity",
    "metpy.calc.thermo.saturation_mixing_ratio"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.relative_humidity_wet_psychrometric": {
  "data": {
   "lineno": 1179,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.thermo.exporter",
    "metpy.calc.thermo.saturation_vapor_pressure",
    "psychrometric_vapor_pressure_wet"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.sat_pressure_0c": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "metpy.calc.thermo.saturation_equivalent_potential_temperature": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.thermo.exporter",
    "metpy.calc.thermo.saturation_mixing_ratio",
    "metpy.calc.thermo.saturation_vapor_pressure",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.saturation_mixing_ratio": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.thermo.exporter",
    "metpy.calc.thermo.mixing_ratio",
    "metpy.calc.thermo.saturation_vapor_pressure"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.saturation_vapor_pressure": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.thermo.exporter",
    "metpy.calc.thermo.sat_pressure_0c",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.si": {
  "data": {
   "shadows": "scipy.integrate"
  },
  "type": "import"
 },
 "metpy.calc.thermo.so": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "metpy.calc.thermo.specific_humidity_from_dewpoint": {
  "data": {
   "lineno": 2572,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.thermo.dewpoint",
    "metpy.calc.thermo.exporter",
    "metpy.calc.thermo.mixing_ratio",
    "metpy.calc.thermo.saturation_mixing_ratio",
    "metpy.calc.thermo.specific_humidity_from_mixing_ratio"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.specific_humidity_from_mixing_ratio": {
  "data": {
   "lineno": 1386,
   "symbols_in_volume": [
    "AttributeError",
    "check_units",
    "metpy.calc.thermo.exporter",
    "metpy.calc.thermo.mixing_ratio"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.static_stability": {
  "data": {
   "lineno": 2421,
   "symbols_in_volume": [
    "check_units",
    "first_derivative",
    "metpy.calc.thermo.exporter",
    "metpy.calc.thermo.potential_temperature",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.surface_based_cape_cin": {
  "data": {
   "lineno": 1815,
   "symbols_in_volume": [
    "_remove_nans",
    "check_units",
    "metpy.calc.thermo.cape_cin",
    "metpy.calc.thermo.dewpoint",
    "metpy.calc.thermo.exporter",
    "metpy.calc.thermo.parcel_profile_with_lcl"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.temperature_from_potential_temperature": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.thermo.exner_function",
    "metpy.calc.thermo.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.thickness_hydrostatic": {
  "data": {
   "lineno": 2126,
   "symbols_in_volume": [
    "check_units",
    "get_layer",
    "metpy.calc.thermo.exporter",
    "metpy.calc.thermo.virtual_temperature",
    "numpy.log",
    "numpy.trapz",
    "units.K.to"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.thickness_hydrostatic_from_relative_humidity": {
  "data": {
   "lineno": 2195,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.thermo.exporter",
    "metpy.calc.thermo.mixing_ratio_from_relative_humidity",
    "metpy.calc.thermo.thickness_hydrostatic"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.vapor_pressure": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.thermo.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.vertical_velocity": {
  "data": {
   "lineno": 2526,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.thermo.density",
    "metpy.calc.thermo.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.vertical_velocity_pressure": {
  "data": {
   "lineno": 2483,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.thermo.density",
    "metpy.calc.thermo.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.virtual_potential_temperature": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.thermo.exporter",
    "metpy.calc.thermo.potential_temperature",
    "metpy.calc.thermo.virtual_temperature"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.virtual_temperature": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": [
    "check_units",
    "metpy.calc.thermo.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.calc.thermo.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "metpy.calc.thermo.wet_bulb_temperature": {
  "data": {
   "lineno": 2368,
   "symbols_in_volume": [
    "atleast_1d",
    "check_units",
    "concatenate",
    "hasattr",
    "metpy.calc.thermo.dewpoint",
    "metpy.calc.thermo.exporter",
    "metpy.calc.thermo.lcl",
    "metpy.calc.thermo.moist_lapse",
    "numpy.nditer"
   ]
  },
  "type": "function"
 },
 "metpy.calc.tools": {
  "data": {
   "symbols_in_volume": [
    "Exporter",
    "enumerate",
    "globals",
    "metpy.calc.tools.BASE_DEGREE_MULTIPLIER",
    "metpy.calc.tools.DIR_DICT",
    "metpy.calc.tools.DIR_STRS",
    "metpy.calc.tools.UND",
    "numpy.nan"
   ]
  },
  "type": "module"
 },
 "metpy.calc.tools.BASE_DEGREE_MULTIPLIER": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "metpy.calc.tools.DIR_DICT": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "metpy.calc.tools.DIR_STRS": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "metpy.calc.tools.Geod": {
  "data": {
   "shadows": "pyproj.Geod"
  },
  "type": "import"
 },
 "metpy.calc.tools.MAX_DEGREE_ANGLE": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "metpy.calc.tools.UND": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "metpy.calc.tools.UND_ANGLE": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "metpy.calc.tools._abbrieviate_direction": {
  "data": {
   "lineno": 1302
  },
  "type": "function"
 },
 "metpy.calc.tools._broadcast_to_axis": {
  "data": {
   "lineno": 1190
  },
  "type": "function"
 },
 "metpy.calc.tools._clean_direction": {
  "data": {
   "lineno": 1292,
   "symbols_in_volume": [
    "isinstance",
    "metpy.calc.tools.DIR_STRS",
    "metpy.calc.tools.UND",
    "str"
   ]
  },
  "type": "function"
 },
 "metpy.calc.tools._delete_masked_points": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "any",
    "hasattr",
    "metpy.calc.tools.functools",
    "numpy.logical_or",
    "numpy.ma.asarray",
    "numpy.ma.getmaskarray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "metpy.calc.tools._get_bound_pressure_height": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "ValueError",
    "_greater_or_close",
    "_less_or_close",
    "height_to_pressure_std",
    "log_interpolate_1d",
    "numpy.abs",
    "numpy.argsort",
    "numpy.atleast_1d",
    "numpy.interp",
    "numpy.nanmax",
    "numpy.nanmin",
    "pressure_to_height_std",
    "result_type"
   ]
  },
  "type": "function"
 },
 "metpy.calc.tools._greater_or_close": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "metpy.calc.tools._less_or_close": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "metpy.calc.tools._next_non_masked_element": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "AttributeError",
    "IndexError",
    "TypeError",
    "numpy.ma.is_masked"
   ]
  },
  "type": "function"
 },
 "metpy.calc.tools._process_deriv_args": {
  "data": {
   "lineno": 1229,
   "symbols_in_volume": [
    "ValueError",
    "atleast_1d",
    "diff",
    "getattr",
    "hasattr",
    "list",
    "metpy.calc.tools._broadcast_to_axis",
    "numpy.broadcast_to",
    "numpy.core.numeric.normalize_axis_index"
   ]
  },
  "type": "function"
 },
 "metpy.calc.tools._process_gradient_args": {
  "data": {
   "lineno": 1202,
   "symbols_in_volume": [
    "ValueError",
    "_check_length",
    "isinstance",
    "range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "metpy.calc.tools._process_gradient_args._check_length": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "metpy.calc.tools._remove_nans": {
  "data": {
   "lineno": 1422,
   "symbols_in_volume": [
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "metpy.calc.tools._unabbrieviate_direction": {
  "data": {
   "lineno": 1409,
   "symbols_in_volume": [
    "metpy.calc.tools.UND"
   ]
  },
  "type": "function"
 },
 "metpy.calc.tools.angle_to_direction": {
  "data": {
   "lineno": 1316,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "_unabbrieviate_direction",
    "abs",
    "enumerate",
    "float",
    "hasattr",
    "int",
    "isinstance",
    "metpy.calc.tools.BASE_DEGREE_MULTIPLIER",
    "metpy.calc.tools.DIR_STRS",
    "metpy.calc.tools.MAX_DEGREE_ANGLE",
    "metpy.calc.tools.UND",
    "metpy.calc.tools.UND_ANGLE",
    "metpy.calc.tools.exporter",
    "numpy.array",
    "numpy.errstate",
    "numpy.isnan",
    "numpy.nan",
    "numpy.round",
    "numpy.where",
    "operator.itemgetter",
    "preprocess_xarray",
    "str",
    "units.degree"
   ]
  },
  "type": "function"
 },
 "metpy.calc.tools.cKDTree": {
  "data": {
   "shadows": "scipy.spatial.cKDTree"
  },
  "type": "import"
 },
 "metpy.calc.tools.exporter": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "metpy.calc.tools.find_bounding_indices": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "broadcast_indices",
    "enumerate",
    "len",
    "list",
    "metpy.calc.tools.exporter",
    "numpy.abs",
    "numpy.any",
    "numpy.bool",
    "numpy.diff",
    "numpy.empty",
    "numpy.int",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "metpy.calc.tools.find_intersections": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "_next_non_masked_element",
    "len",
    "metpy.calc.tools.exporter",
    "metpy.calc.tools.nearest_intersection_idx",
    "numpy.ediff1d",
    "numpy.exp",
    "numpy.log",
    "numpy.sign",
    "str"
   ]
  },
  "type": "function"
 },
 "metpy.calc.tools.first_derivative": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "_process_deriv_args",
    "concatenate",
    "metpy.calc.tools.exporter",
    "metpy.calc.tools.xarray_derivative_wrap",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "metpy.calc.tools.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "metpy.calc.tools.get_layer": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "ValueError",
    "_greater_or_close",
    "_less_or_close",
    "check_units",
    "len",
    "log_interpolate_1d",
    "metpy.calc.tools._get_bound_pressure_height",
    "metpy.calc.tools.exporter",
    "numpy.any",
    "numpy.append",
    "numpy.argsort",
    "numpy.isclose",
    "numpy.nanmax",
    "numpy.sort"
   ]
  },
  "type": "function"
 },
 "metpy.calc.tools.get_layer_heights": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "ValueError",
    "_greater_or_close",
    "_less_or_close",
    "check_units",
    "interpolate_1d",
    "len",
    "metpy.calc.tools.exporter",
    "numpy.append",
    "numpy.argsort",
    "numpy.min",
    "numpy.sort"
   ]
  },
  "type": "function"
 },
 "metpy.calc.tools.gradient": {
  "data": {
   "lineno": 1085,
   "symbols_in_volume": [
    "_process_gradient_args",
    "enumerate",
    "metpy.calc.tools.exporter",
    "metpy.calc.tools.first_derivative",
    "tuple"
   ]
  },
  "type": "function"
 },
 "metpy.calc.tools.grid_deltas_from_dataarray": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "metpy.calc.tools.exporter",
    "metpy.calc.tools.lat_lon_grid_deltas",
    "numpy.diff",
    "numpy.newaxis",
    "slice",
    "tuple",
    "units"
   ]
  },
  "type": "function"
 },
 "metpy.calc.tools.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "metpy.calc.tools.laplacian": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "_process_gradient_args",
    "enumerate",
    "isinstance",
    "metpy.calc.tools.exporter",
    "metpy.calc.tools.second_derivative",
    "sum",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "metpy.calc.tools.lat_lon_grid_deltas": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "metpy.calc.tools.exporter",
    "numpy.asarray",
    "numpy.meshgrid",
    "pyproj.Geod"
   ]
  },
  "type": "function"
 },
 "metpy.calc.tools.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "metpy.calc.tools.nearest_intersection_idx": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "metpy.calc.tools.exporter",
    "numpy.diff",
    "numpy.nonzero",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "metpy.calc.tools.normalize_axis_index": {
  "data": {
   "shadows": "numpy.core.numeric.normalize_axis_index"
  },
  "type": "import"
 },
 "metpy.calc.tools.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "metpy.calc.tools.parse_angle": {
  "data": {
   "lineno": 1260,
   "symbols_in_volume": [
    "_abbrieviate_direction",
    "_clean_direction",
    "hasattr",
    "isinstance",
    "metpy.calc.tools.DIR_DICT",
    "metpy.calc.tools.exporter",
    "numpy.nan",
    "operator.itemgetter",
    "preprocess_xarray",
    "str"
   ]
  },
  "type": "function"
 },
 "metpy.calc.tools.reduce_point_density": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "metpy.calc.tools.exporter",
    "numpy.argsort",
    "numpy.bool",
    "numpy.ones",
    "range",
    "scipy.spatial.cKDTree"
   ]
  },
  "type": "function"
 },
 "metpy.calc.tools.resample_nn_1d": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "metpy.calc.tools.exporter",
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "metpy.calc.tools.second_derivative": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "_process_deriv_args",
    "concatenate",
    "metpy.calc.tools.exporter",
    "metpy.calc.tools.xarray_derivative_wrap",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "metpy.calc.tools.xarray_derivative_wrap": {
  "data": {
   "lineno": 844
  },
  "type": "function"
 },
 "metpy.calc.tools.xarray_derivative_wrap.wrapper": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "ValueError",
    "check_axis",
    "func",
    "isinstance",
    "metpy.calc.tools.functools",
    "metpy.calc.tools.grid_deltas_from_dataarray",
    "preprocess_xarray",
    "str",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "metpy.calc.tools.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "metpy.calc.turbulence": {
  "data": {
   "symbols_in_volume": [
    "Exporter",
    "globals"
   ]
  },
  "type": "module"
 },
 "metpy.calc.turbulence.exporter": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "metpy.calc.turbulence.friction_velocity": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "metpy.calc.turbulence.exporter",
    "metpy.calc.turbulence.kinematic_flux",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "metpy.calc.turbulence.get_perturbation": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "metpy.calc.turbulence.exporter",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "metpy.calc.turbulence.kinematic_flux": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "metpy.calc.turbulence.exporter",
    "numpy.atleast_1d",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "metpy.calc.turbulence.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "metpy.calc.turbulence.tke": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "metpy.calc.turbulence.exporter",
    "metpy.calc.turbulence.get_perturbation",
    "numpy.mean",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "metpy.cbook": {
  "data": {
   "symbols_in_volume": [
    "metpy.cbook.POOCH",
    "metpy.cbook.dev_data_path",
    "metpy.cbook.os",
    "metpy.cbook.pooch"
   ]
  },
  "type": "module"
 },
 "metpy.cbook.POOCH": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "metpy.cbook.Registry": {
  "data": {
   "lineno": 42
  },
  "type": "class"
 },
 "metpy.cbook.Registry.__getitem__": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "metpy.cbook.Registry.__init__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "metpy.cbook.Registry.register": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "metpy.cbook.Registry.register.dec": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "metpy.cbook.__all__": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "metpy.cbook.broadcast_indices": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.newaxis",
    "range",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "metpy.cbook.dev_data_path": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "metpy.cbook.get_test_data": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "metpy.cbook.POOCH",
    "open"
   ]
  },
  "type": "function"
 },
 "metpy.cbook.iterable": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "hasattr",
    "numpy.iterable"
   ]
  },
  "type": "function"
 },
 "metpy.cbook.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "metpy.cbook.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "metpy.cbook.pooch": {
  "data": {
   "shadows": "pooch"
  },
  "type": "import"
 },
 "metpy.cbook.result_type": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "numpy.result_type",
    "type"
   ]
  },
  "type": "function"
 },
 "metpy.constants": {
  "data": {
   "symbols_in_volume": [
    "Exporter",
    "globals",
    "metpy.constants.R",
    "metpy.constants.dry_air_spec_heat_ratio",
    "metpy.constants.exporter"
   ]
  },
  "type": "module"
 },
 "metpy.constants.R": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "metpy.constants.dry_air_spec_heat_ratio": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "metpy.constants.earth_orbit_eccentricity": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "metpy.constants.exporter": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "metpy.deprecation": {
  "data": {
   "symbols_in_volume": [
    "metpy.deprecation.MetpyDeprecationWarning"
   ]
  },
  "type": "module"
 },
 "metpy.deprecation.MetpyDeprecationWarning": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "metpy.deprecation._generate_deprecation_message": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "metpy.deprecation.deprecated": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "metpy.deprecation.deprecated.deprecate": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "finalize",
    "isinstance",
    "metpy.deprecation._generate_deprecation_message",
    "metpy.deprecation.textwrap",
    "type"
   ]
  },
  "type": "function"
 },
 "metpy.deprecation.deprecated.deprecate.finalize": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "metpy.deprecation.functools"
   ]
  },
  "type": "function"
 },
 "metpy.deprecation.deprecated.deprecate.wrapper": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "func",
    "metpy.deprecation.metpyDeprecation",
    "metpy.deprecation.warnings"
   ]
  },
  "type": "function"
 },
 "metpy.deprecation.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "metpy.deprecation.metpyDeprecation": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "metpy.deprecation.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "metpy.deprecation.warn_deprecated": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "metpy.deprecation._generate_deprecation_message",
    "metpy.deprecation.metpyDeprecation",
    "metpy.deprecation.warnings"
   ]
  },
  "type": "function"
 },
 "metpy.deprecation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "metpy.future": {
  "data": {
   "symbols_in_volume": [
    "Exporter",
    "globals"
   ]
  },
  "type": "module"
 },
 "metpy.future.ageostrophic_wind": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "check_units",
    "geostrophic_wind",
    "metpy.future.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.future.exporter": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "metpy.future.mpconsts": {
  "data": {
   "shadows": "constants"
  },
  "type": "import"
 },
 "metpy.future.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "metpy.future.precipitable_water": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "_remove_nans",
    "check_units",
    "get_layer",
    "metpy.future.exporter",
    "mixing_ratio",
    "numpy.argsort",
    "numpy.nanmax",
    "numpy.nanmin",
    "numpy.trapz",
    "saturation_vapor_pressure"
   ]
  },
  "type": "function"
 },
 "metpy.future.storm_relative_helicity": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "check_units",
    "get_layer_heights",
    "metpy.future.exporter",
    "numpy.ma.is_masked",
    "units"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate": {
  "data": {
   "symbols_in_volume": [
    "metpy.interpolate.__all__"
   ]
  },
  "type": "module"
 },
 "metpy.interpolate.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "metpy.interpolate.geometry": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "metpy.interpolate.geometry.logging"
   ]
  },
  "type": "module"
 },
 "metpy.interpolate.geometry.area": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "abs",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.geometry.cKDTree": {
  "data": {
   "shadows": "scipy.spatial.cKDTree"
  },
  "type": "import"
 },
 "metpy.interpolate.geometry.circumcenter": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "ZeroDivisionError"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.geometry.circumcircle_radius": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "metpy.interpolate.geometry.distance",
    "metpy.interpolate.geometry.triangle_area",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.geometry.dist_2": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "metpy.interpolate.geometry.distance": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "metpy.interpolate.geometry.dist_2",
    "metpy.interpolate.geometry.math"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.geometry.find_local_boundary": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.geometry.find_natural_neighbors": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "metpy.interpolate.geometry.circumcenter",
    "metpy.interpolate.geometry.circumcircle_radius",
    "numpy.array",
    "range",
    "scipy.spatial.cKDTree"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.geometry.find_nn_triangles_point": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "metpy.interpolate.geometry.circumcenter",
    "metpy.interpolate.geometry.circumcircle_radius",
    "metpy.interpolate.geometry.dist_2",
    "set"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.geometry.get_point_count_within_r": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "scipy.spatial.cKDTree"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.geometry.get_points_within_r": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "scipy.spatial.cKDTree"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.geometry.log": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "metpy.interpolate.geometry.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "metpy.interpolate.geometry.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "metpy.interpolate.geometry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "metpy.interpolate.geometry.order_edges": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.geometry.triangle_area": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.grid": {
  "data": {
   "symbols_in_volume": [
    "Exporter",
    "globals"
   ]
  },
  "type": "module"
 },
 "metpy.interpolate.grid.exporter": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "metpy.interpolate.grid.generate_grid": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "get_xy_steps",
    "numpy.linspace",
    "numpy.meshgrid"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.grid.generate_grid_coords": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.stack"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.grid.get_boundary_coords": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.grid.get_xy_range": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "metpy.interpolate.grid.get_xy_steps": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "int",
    "metpy.interpolate.grid.get_xy_range",
    "numpy.ceil"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.grid.interpolate_to_grid": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "interpolate_to_points",
    "list",
    "metpy.interpolate.grid.exporter",
    "metpy.interpolate.grid.generate_grid",
    "metpy.interpolate.grid.generate_grid_coords",
    "metpy.interpolate.grid.get_boundary_coords",
    "numpy.array",
    "zip"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.grid.interpolate_to_isosurface": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "find_bounding_indices",
    "metpy.interpolate.grid.exporter",
    "numpy.max",
    "numpy.min",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.grid.inverse_distance_to_grid": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "inverse_distance_to_points",
    "list",
    "metpy.interpolate.grid.exporter",
    "metpy.interpolate.grid.generate_grid_coords",
    "zip"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.grid.natural_neighbor_to_grid": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "list",
    "metpy.interpolate.grid.exporter",
    "metpy.interpolate.grid.generate_grid_coords",
    "natural_neighbor_to_points",
    "zip"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.grid.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "metpy.interpolate.one_dimension": {
  "data": {
   "symbols_in_volume": [
    "Exporter",
    "globals"
   ]
  },
  "type": "module"
 },
 "metpy.interpolate.one_dimension._strip_matching_units": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "all",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.one_dimension.exporter": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "metpy.interpolate.one_dimension.interpolate_1d": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "_strip_matching_units",
    "broadcast_indices",
    "len",
    "metpy.interpolate.one_dimension.exporter",
    "metpy.interpolate.one_dimension.warnings",
    "numpy.any",
    "numpy.apply_along_axis",
    "numpy.argsort",
    "numpy.asanyarray",
    "numpy.copy",
    "numpy.max",
    "numpy.min",
    "numpy.nan",
    "numpy.newaxis",
    "numpy.searchsorted",
    "numpy.swapaxes",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.one_dimension.interpolate_nans_1d": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ValueError",
    "metpy.interpolate.one_dimension.exporter",
    "numpy.argsort",
    "numpy.interp",
    "numpy.isnan",
    "numpy.log",
    "str"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.one_dimension.log_interpolate_1d": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "_strip_matching_units",
    "metpy.interpolate.one_dimension.exporter",
    "metpy.interpolate.one_dimension.interpolate_1d",
    "numpy.log",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.one_dimension.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "metpy.interpolate.one_dimension.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "metpy.interpolate.points": {
  "data": {
   "symbols_in_volume": [
    "Exporter",
    "__name__",
    "globals",
    "metpy.interpolate.points.logging"
   ]
  },
  "type": "module"
 },
 "metpy.interpolate.points.ConvexHull": {
  "data": {
   "shadows": "scipy.spatial.ConvexHull"
  },
  "type": "import"
 },
 "metpy.interpolate.points.Delaunay": {
  "data": {
   "shadows": "scipy.spatial.Delaunay"
  },
  "type": "import"
 },
 "metpy.interpolate.points.Rbf": {
  "data": {
   "shadows": "scipy.interpolate.Rbf"
  },
  "type": "import"
 },
 "metpy.interpolate.points.barnes_point": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.sum",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.points.cKDTree": {
  "data": {
   "shadows": "scipy.spatial.cKDTree"
  },
  "type": "import"
 },
 "metpy.interpolate.points.cressman_point": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.sum",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.points.exporter": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "metpy.interpolate.points.griddata": {
  "data": {
   "shadows": "scipy.interpolate.griddata"
  },
  "type": "import"
 },
 "metpy.interpolate.points.interpolate_to_points": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ValueError",
    "metpy.interpolate.points.exporter",
    "metpy.interpolate.points.inverse_distance_to_points",
    "metpy.interpolate.points.natural_neighbor_to_points",
    "numpy.array",
    "rbfi",
    "scipy.interpolate.Rbf",
    "scipy.interpolate.griddata"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.points.inverse_distance_to_points": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "metpy.interpolate.points.barnes_point",
    "metpy.interpolate.points.cressman_point",
    "metpy.interpolate.points.exporter",
    "numpy.empty",
    "numpy.nan",
    "scipy.spatial.cKDTree",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.points.log": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "metpy.interpolate.points.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "metpy.interpolate.points.natural_neighbor_point": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "len",
    "metpy.interpolate.points.log",
    "numpy.nan",
    "range",
    "scipy.spatial.ConvexHull",
    "scipy.spatial.qhull.QhullError",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.points.natural_neighbor_to_points": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "metpy.interpolate.points.exporter",
    "metpy.interpolate.points.natural_neighbor_point",
    "numpy.array",
    "numpy.empty",
    "numpy.nan",
    "scipy.spatial.Delaunay"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.points.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "metpy.interpolate.points.qhull": {
  "data": {
   "shadows": "scipy.spatial.qhull"
  },
  "type": "import"
 },
 "metpy.interpolate.slices": {
  "data": {
   "symbols_in_volume": [
    "Exporter",
    "globals"
   ]
  },
  "type": "module"
 },
 "metpy.interpolate.slices.Geod": {
  "data": {
   "shadows": "pyproj.Geod"
  },
  "type": "import"
 },
 "metpy.interpolate.slices.ccrs": {
  "data": {
   "shadows": "cartopy.crs"
  },
  "type": "import"
 },
 "metpy.interpolate.slices.cross_section": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "check_axis",
    "isinstance",
    "metpy.interpolate.slices.exporter",
    "metpy.interpolate.slices.geodesic",
    "metpy.interpolate.slices.interpolate_to_slice",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.slices.exporter": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "metpy.interpolate.slices.geodesic": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "cartopy.crs.Geodetic",
    "metpy.interpolate.slices.exporter",
    "numpy.array",
    "numpy.concatenate",
    "pyproj.Geod"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.slices.interpolate_to_slice": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "len",
    "metpy.interpolate.slices.exporter",
    "range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.slices.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "metpy.interpolate.slices.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "metpy.interpolate.tools": {
  "data": {
   "symbols_in_volume": [
    "Exporter",
    "globals"
   ]
  },
  "type": "module"
 },
 "metpy.interpolate.tools.average_spacing": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.nan",
    "numpy.nanmin",
    "scipy.spatial.distance.cdist"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.tools.barnes_weights": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.tools.calc_kappa": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.tools.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "metpy.interpolate.tools.cressman_weights": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "metpy.interpolate.tools.exporter": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "metpy.interpolate.tools.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "metpy.interpolate.tools.remove_nan_observations": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "metpy.interpolate.tools.exporter",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.tools.remove_observations_below_value": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "metpy.interpolate.tools.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.interpolate.tools.remove_repeat_coordinates": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "metpy.interpolate.tools.exporter",
    "numpy.array",
    "zip"
   ]
  },
  "type": "function"
 },
 "metpy.io": {
  "data": {
   "symbols_in_volume": [
    "metpy.io.__all__"
   ]
  },
  "type": "module"
 },
 "metpy.io.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "metpy.io._nexrad_msgs": {
  "data": {},
  "type": "module"
 },
 "metpy.io._nexrad_msgs.msg18": {
  "data": {},
  "type": "module"
 },
 "metpy.io._nexrad_msgs.msg18.descriptions": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "metpy.io._nexrad_msgs.msg18.fields": {
  "data": {
   "lineno": 365
  },
  "type": "constant"
 },
 "metpy.io._nexrad_msgs.msg3": {
  "data": {},
  "type": "module"
 },
 "metpy.io._nexrad_msgs.msg3.descriptions": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "metpy.io._nexrad_msgs.msg3.fields": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "metpy.io._tools": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "metpy.io._tools.logging"
   ]
  },
  "type": "module"
 },
 "metpy.io._tools.Array": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "metpy.io._tools.Array.__call__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "metpy.io._tools.Array.__init__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "struct.Struct"
   ]
  },
  "type": "function"
 },
 "metpy.io._tools.BitField": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "metpy.io._tools.BitField.__call__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "metpy.io._tools.BitField.__init__": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "metpy.io._tools.Bits": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "metpy.io._tools.Bits.__call__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "metpy.io._tools.Bits.__init__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "metpy.io._tools.DictStruct": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "struct.Struct"
   ]
  },
  "type": "class"
 },
 "metpy.io._tools.DictStruct.__init__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "metpy.io._tools.DictStruct._create": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "metpy.io._tools.DictStruct.unpack": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "metpy.io._tools.DictStruct.unpack_from": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "metpy.io._tools.Enum": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "metpy.io._tools.Enum.__call__": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "metpy.io._tools.Enum.__init__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "enumerate",
    "zip"
   ]
  },
  "type": "function"
 },
 "metpy.io._tools.IOBuffer": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "metpy.io._tools.IOBuffer.__getitem__": {
  "data": {
   "lineno": 269
  },
  "type": "function"
 },
 "metpy.io._tools.IOBuffer.__init__": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "bytearray"
   ]
  },
  "type": "function"
 },
 "metpy.io._tools.IOBuffer.__len__": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "metpy.io._tools.IOBuffer.__str__": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "metpy.io._tools.IOBuffer.at_end": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "metpy.io._tools.IOBuffer.check_remains": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "metpy.io._tools.IOBuffer.clear_marks": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "metpy.io._tools.IOBuffer.fromfile": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "metpy.io._tools.IOBuffer.get_next": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "metpy.io._tools.IOBuffer.jump_to": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "metpy.io._tools.IOBuffer.offset_from": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "metpy.io._tools.IOBuffer.read": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "metpy.io._tools.IOBuffer.read_ascii": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "metpy.io._tools.IOBuffer.read_binary": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "int",
    "list",
    "struct.Struct"
   ]
  },
  "type": "function"
 },
 "metpy.io._tools.IOBuffer.read_func": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "metpy.io._tools.IOBuffer.read_int": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "struct.Struct"
   ]
  },
  "type": "function"
 },
 "metpy.io._tools.IOBuffer.read_struct": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "memoryview"
   ]
  },
  "type": "function"
 },
 "metpy.io._tools.IOBuffer.set_mark": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "metpy.io._tools.IOBuffer.skip": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "metpy.io._tools.IOBuffer.splice": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "bytearray"
   ]
  },
  "type": "function"
 },
 "metpy.io._tools.IOBuffer.truncate": {
  "data": {
   "lineno": 261
  },
  "type": "function"
 },
 "metpy.io._tools.NamedStruct": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "struct.Struct"
   ]
  },
  "type": "class"
 },
 "metpy.io._tools.NamedStruct.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "collections.namedtuple",
    "enumerate",
    "len",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "metpy.io._tools.NamedStruct._create": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "conv",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "metpy.io._tools.NamedStruct.make_tuple": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "metpy.io._tools.NamedStruct.unpack": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "metpy.io._tools.NamedStruct.unpack_file": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "metpy.io._tools.NamedStruct.unpack_from": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "metpy.io._tools.Struct": {
  "data": {
   "shadows": "struct.Struct"
  },
  "type": "import"
 },
 "metpy.io._tools.bits_to_code": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "metpy.io._tools.log"
   ]
  },
  "type": "function"
 },
 "metpy.io._tools.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "metpy.io._tools.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "metpy.io._tools.log": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "metpy.io._tools.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "metpy.io._tools.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "metpy.io._tools.open_as_needed": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "hasattr",
    "metpy.io._tools.bz2",
    "metpy.io._tools.gzip",
    "open"
   ]
  },
  "type": "function"
 },
 "metpy.io._tools.zlib": {
  "data": {
   "shadows": "zlib"
  },
  "type": "import"
 },
 "metpy.io._tools.zlib_decompress_all_frames": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "bytearray",
    "bytes",
    "metpy.io._tools.zlib"
   ]
  },
  "type": "function"
 },
 "metpy.io.gini": {
  "data": {
   "symbols_in_volume": [
    "Exporter",
    "ImportError",
    "__name__",
    "globals",
    "metpy.io.gini.logging"
   ]
  },
  "type": "module"
 },
 "metpy.io.gini.AbstractDataStore": {
  "data": {
   "shadows": "xarray.backends.common.AbstractDataStore"
  },
  "type": "import"
 },
 "metpy.io.gini.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "metpy.io.gini.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "metpy.io.gini.FrozenDict": {
  "data": {
   "shadows": "xarray.core.utils.FrozenOrderedDict"
  },
  "type": "import"
 },
 "metpy.io.gini.GiniFile": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "Bits",
    "NamedStruct",
    "metpy.io.gini.GiniProjection",
    "metpy.io.gini._make_datetime",
    "metpy.io.gini._name_lookup",
    "metpy.io.gini._scaled_int",
    "metpy.io.gini.exporter",
    "metpy.io.gini.re",
    "xarray.backends.common.AbstractDataStore"
   ]
  },
  "type": "class"
 },
 "metpy.io.gini.GiniFile.__init__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "IOBuffer",
    "io.BytesIO",
    "itertools.repeat",
    "len",
    "matplotlib.image.imread",
    "metpy.io.gini.GiniProjection",
    "metpy.io.gini.contextlib",
    "metpy.io.gini.log",
    "numpy.array",
    "open_as_needed"
   ]
  },
  "type": "function"
 },
 "metpy.io.gini.GiniFile.__str__": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "metpy.io.gini.GiniFile._get_proj_and_res": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "metpy.io.gini.GiniProjection",
    "metpy.io.gini.pyproj"
   ]
  },
  "type": "function"
 },
 "metpy.io.gini.GiniFile._make_coord_vars": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.meshgrid",
    "proj",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "metpy.io.gini.GiniFile._make_proj_var": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "NotImplementedError",
    "metpy.io.gini.GiniProjection",
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "metpy.io.gini.GiniFile._make_time_var": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "xarray.Variable"
   ]
  },
  "type": "function"
 },
 "metpy.io.gini.GiniFile._process_wmo_header": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "metpy.io.gini.GiniFile.get_attrs": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "xarray.core.utils.FrozenOrderedDict"
   ]
  },
  "type": "function"
 },
 "metpy.io.gini.GiniFile.get_dimensions": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "xarray.core.utils.FrozenOrderedDict"
   ]
  },
  "type": "function"
 },
 "metpy.io.gini.GiniFile.get_variables": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "numpy.ma.array",
    "xarray.Variable",
    "xarray.core.utils.FrozenOrderedDict"
   ]
  },
  "type": "function"
 },
 "metpy.io.gini.GiniFile.load": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "metpy.io.gini.GiniProjection": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "metpy.io.gini.Variable": {
  "data": {
   "shadows": "xarray.Variable"
  },
  "type": "import"
 },
 "metpy.io.gini._make_datetime": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "datetime.datetime"
   ]
  },
  "type": "function"
 },
 "metpy.io.gini._name_lookup": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "dict",
    "len",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "metpy.io.gini._name_lookup.lookup": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "metpy.io.gini._scaled_int": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "hex",
    "metpy.io.gini.log"
   ]
  },
  "type": "function"
 },
 "metpy.io.gini.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "metpy.io.gini.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "metpy.io.gini.exporter": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "metpy.io.gini.imread": {
  "data": {
   "shadows": "matplotlib.image.imread"
  },
  "type": "import"
 },
 "metpy.io.gini.log": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "metpy.io.gini.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "metpy.io.gini.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "metpy.io.gini.pyproj": {
  "data": {
   "shadows": "pyproj"
  },
  "type": "import"
 },
 "metpy.io.gini.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "metpy.io.gini.repeat": {
  "data": {
   "shadows": "itertools.repeat"
  },
  "type": "import"
 },
 "metpy.io.metar": {
  "data": {
   "symbols_in_volume": [
    "Exporter",
    "UserWarning",
    "collections.namedtuple",
    "globals",
    "metpy.io.metar.warnings"
   ]
  },
  "type": "module"
 },
 "metpy.io.metar.Metar": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "metpy.io.metar.col_units": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "metpy.io.metar.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "metpy.io.metar.exporter": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "metpy.io.metar.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "metpy.io.metar.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "metpy.io.metar.parse_metar_file": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "altimeter_to_sea_level_pressure",
    "datetime.datetime.now",
    "filter",
    "len",
    "list",
    "merge",
    "metpy.io.metar.col_units",
    "metpy.io.metar.exporter",
    "metpy.io.metar.parse_metar_to_named_tuple",
    "open_as_needed",
    "pandas.DataFrame",
    "pandas_dataframe_to_unit_arrays",
    "units",
    "units.degree",
    "units.kts",
    "wind_components"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar.parse_metar_file.merge": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar.parse_metar_to_dataframe": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "AttributeError",
    "altimeter_to_sea_level_pressure",
    "datetime.datetime.now",
    "float",
    "metpy.io.metar.col_units",
    "metpy.io.metar.exporter",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas_dataframe_to_unit_arrays",
    "parse_metar_to_named_tuple",
    "units",
    "units.degree",
    "units.kts",
    "wind_components"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar.parse_metar_to_named_tuple": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "AttributeError",
    "IndexError",
    "KeyError",
    "TypeError",
    "ValueError",
    "datetime.datetime",
    "datetime.datetime.now",
    "float",
    "int",
    "len",
    "metpy.io.metar.Metar",
    "numpy.nan",
    "parse",
    "units.hPa.to"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "metpy.io.metar.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "metpy.io.metar_parser": {
  "data": {
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "module"
 },
 "metpy.io.metar_parser.FAILURE": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "metpy.io.metar_parser.Grammar": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "metpy.io.metar_parser.re",
    "object"
   ]
  },
  "type": "class"
 },
 "metpy.io.metar_parser.Grammar._read_altim": {
  "data": {
   "lineno": 2971,
   "symbols_in_volume": [
    "metpy.io.metar_parser.FAILURE",
    "metpy.io.metar_parser.Grammar",
    "metpy.io.metar_parser.TreeNode"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.Grammar._read_auto": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "metpy.io.metar_parser.FAILURE",
    "metpy.io.metar_parser.TreeNode",
    "metpy.io.metar_parser.TreeNode3"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.Grammar._read_cover": {
  "data": {
   "lineno": 2413,
   "symbols_in_volume": [
    "metpy.io.metar_parser.FAILURE",
    "metpy.io.metar_parser.Grammar",
    "metpy.io.metar_parser.TreeNode"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.Grammar._read_curwx": {
  "data": {
   "lineno": 1870,
   "symbols_in_volume": [
    "metpy.io.metar_parser.FAILURE",
    "metpy.io.metar_parser.TreeNode",
    "metpy.io.metar_parser.TreeNode8"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.Grammar._read_datetime": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "metpy.io.metar_parser.FAILURE",
    "metpy.io.metar_parser.Grammar",
    "metpy.io.metar_parser.TreeNode",
    "metpy.io.metar_parser.TreeNode2"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.Grammar._read_dewp": {
  "data": {
   "lineno": 2887,
   "symbols_in_volume": [
    "metpy.io.metar_parser.FAILURE",
    "metpy.io.metar_parser.Grammar",
    "metpy.io.metar_parser.TreeNode"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.Grammar._read_end": {
  "data": {
   "lineno": 3222,
   "symbols_in_volume": [
    "metpy.io.metar_parser.FAILURE",
    "metpy.io.metar_parser.TreeNode"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.Grammar._read_gust": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "metpy.io.metar_parser.FAILURE",
    "metpy.io.metar_parser.Grammar",
    "metpy.io.metar_parser.TreeNode"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.Grammar._read_metar": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "metpy.io.metar_parser.FAILURE",
    "metpy.io.metar_parser.TreeNode"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.Grammar._read_ob": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "metpy.io.metar_parser.FAILURE",
    "metpy.io.metar_parser.TreeNode1"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.Grammar._read_remarks": {
  "data": {
   "lineno": 3119,
   "symbols_in_volume": [
    "metpy.io.metar_parser.FAILURE",
    "metpy.io.metar_parser.TreeNode"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.Grammar._read_run": {
  "data": {
   "lineno": 1493,
   "symbols_in_volume": [
    "metpy.io.metar_parser.FAILURE",
    "metpy.io.metar_parser.Grammar",
    "metpy.io.metar_parser.TreeNode",
    "metpy.io.metar_parser.TreeNode7"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.Grammar._read_sep": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "metpy.io.metar_parser.FAILURE",
    "metpy.io.metar_parser.TreeNode"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.Grammar._read_siteid": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "metpy.io.metar_parser.FAILURE",
    "metpy.io.metar_parser.Grammar",
    "metpy.io.metar_parser.TreeNode"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.Grammar._read_skyc": {
  "data": {
   "lineno": 2370,
   "symbols_in_volume": [
    "metpy.io.metar_parser.FAILURE",
    "metpy.io.metar_parser.TreeNode",
    "metpy.io.metar_parser.TreeNode9"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.Grammar._read_temp": {
  "data": {
   "lineno": 2803,
   "symbols_in_volume": [
    "metpy.io.metar_parser.FAILURE",
    "metpy.io.metar_parser.Grammar",
    "metpy.io.metar_parser.TreeNode"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.Grammar._read_temp_dewp": {
  "data": {
   "lineno": 2698,
   "symbols_in_volume": [
    "metpy.io.metar_parser.FAILURE",
    "metpy.io.metar_parser.TreeNode",
    "metpy.io.metar_parser.TreeNode10"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.Grammar._read_varwind": {
  "data": {
   "lineno": 1011,
   "symbols_in_volume": [
    "metpy.io.metar_parser.FAILURE",
    "metpy.io.metar_parser.Grammar",
    "metpy.io.metar_parser.TreeNode",
    "metpy.io.metar_parser.TreeNode5"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.Grammar._read_vis": {
  "data": {
   "lineno": 1166,
   "symbols_in_volume": [
    "metpy.io.metar_parser.FAILURE",
    "metpy.io.metar_parser.Grammar",
    "metpy.io.metar_parser.TreeNode",
    "metpy.io.metar_parser.TreeNode6"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.Grammar._read_wind": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "metpy.io.metar_parser.FAILURE",
    "metpy.io.metar_parser.TreeNode",
    "metpy.io.metar_parser.TreeNode4"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.Grammar._read_wind_dir": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "metpy.io.metar_parser.FAILURE",
    "metpy.io.metar_parser.Grammar",
    "metpy.io.metar_parser.TreeNode"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.Grammar._read_wind_spd": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "metpy.io.metar_parser.FAILURE",
    "metpy.io.metar_parser.Grammar",
    "metpy.io.metar_parser.TreeNode"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.Grammar._read_wx": {
  "data": {
   "lineno": 1913,
   "symbols_in_volume": [
    "metpy.io.metar_parser.FAILURE",
    "metpy.io.metar_parser.Grammar",
    "metpy.io.metar_parser.TreeNode"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.ParseError": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "SyntaxError"
   ]
  },
  "type": "class"
 },
 "metpy.io.metar_parser.Parser": {
  "data": {
   "lineno": 3272,
   "symbols_in_volume": [
    "metpy.io.metar_parser.Grammar"
   ]
  },
  "type": "class"
 },
 "metpy.io.metar_parser.Parser.__init__": {
  "data": {
   "lineno": 3273,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict",
    "input",
    "len"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.Parser.parse": {
  "data": {
   "lineno": 3283,
   "symbols_in_volume": [
    "format_error",
    "metpy.io.metar_parser.FAILURE",
    "metpy.io.metar_parser.ParseError"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.TreeNode": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "metpy.io.metar_parser.TreeNode.__init__": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "metpy.io.metar_parser.TreeNode.__iter__": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "metpy.io.metar_parser.TreeNode1": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "metpy.io.metar_parser.TreeNode"
   ]
  },
  "type": "class"
 },
 "metpy.io.metar_parser.TreeNode1.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "metpy.io.metar_parser.TreeNode1",
    "super"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.TreeNode10": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "metpy.io.metar_parser.TreeNode"
   ]
  },
  "type": "class"
 },
 "metpy.io.metar_parser.TreeNode10.__init__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "metpy.io.metar_parser.TreeNode10",
    "super"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.TreeNode2": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "metpy.io.metar_parser.TreeNode"
   ]
  },
  "type": "class"
 },
 "metpy.io.metar_parser.TreeNode2.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "metpy.io.metar_parser.TreeNode2",
    "super"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.TreeNode3": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "metpy.io.metar_parser.TreeNode"
   ]
  },
  "type": "class"
 },
 "metpy.io.metar_parser.TreeNode3.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "metpy.io.metar_parser.TreeNode3",
    "super"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.TreeNode4": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "metpy.io.metar_parser.TreeNode"
   ]
  },
  "type": "class"
 },
 "metpy.io.metar_parser.TreeNode4.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "metpy.io.metar_parser.TreeNode4",
    "super"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.TreeNode5": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "metpy.io.metar_parser.TreeNode"
   ]
  },
  "type": "class"
 },
 "metpy.io.metar_parser.TreeNode5.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "metpy.io.metar_parser.TreeNode5",
    "super"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.TreeNode6": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "metpy.io.metar_parser.TreeNode"
   ]
  },
  "type": "class"
 },
 "metpy.io.metar_parser.TreeNode6.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "metpy.io.metar_parser.TreeNode6",
    "super"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.TreeNode7": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "metpy.io.metar_parser.TreeNode"
   ]
  },
  "type": "class"
 },
 "metpy.io.metar_parser.TreeNode7.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "metpy.io.metar_parser.TreeNode7",
    "super"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.TreeNode8": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "metpy.io.metar_parser.TreeNode"
   ]
  },
  "type": "class"
 },
 "metpy.io.metar_parser.TreeNode8.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "metpy.io.metar_parser.TreeNode8",
    "super"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.TreeNode9": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "metpy.io.metar_parser.TreeNode"
   ]
  },
  "type": "class"
 },
 "metpy.io.metar_parser.TreeNode9.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "metpy.io.metar_parser.TreeNode9",
    "super"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "metpy.io.metar_parser.format_error": {
  "data": {
   "lineno": 3293,
   "symbols_in_volume": [
    "input.split",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.parse": {
  "data": {
   "lineno": 3304,
   "symbols_in_volume": [
    "input",
    "metpy.io.metar_parser.Parser"
   ]
  },
  "type": "function"
 },
 "metpy.io.metar_parser.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "metpy.io.nexrad": {
  "data": {
   "symbols_in_volume": [
    "Exporter",
    "__name__",
    "globals",
    "metpy.io.nexrad.logging"
   ]
  },
  "type": "module"
 },
 "metpy.io.nexrad.BAD_DATA": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "metpy.io.nexrad.DataMapper": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "float",
    "object"
   ]
  },
  "type": "class"
 },
 "metpy.io.nexrad.DataMapper.__call__": {
  "data": {
   "lineno": 767
  },
  "type": "function"
 },
 "metpy.io.nexrad.DigitalEETMapper": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "metpy.io.nexrad.DataMapper"
   ]
  },
  "type": "class"
 },
 "metpy.io.nexrad.DigitalEETMapper.__call__": {
  "data": {
   "lineno": 872
  },
  "type": "function"
 },
 "metpy.io.nexrad.DigitalEETMapper.__init__": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "bool",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.DigitalHMCMapper": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "metpy.io.nexrad.DataMapper"
   ]
  },
  "type": "class"
 },
 "metpy.io.nexrad.DigitalHMCMapper.__init__": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.DigitalMapper": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "metpy.io.nexrad.DataMapper"
   ]
  },
  "type": "class"
 },
 "metpy.io.nexrad.DigitalMapper.__init__": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "metpy.io.nexrad.two_comp16",
    "min",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.DigitalRefMapper": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "metpy.io.nexrad.DigitalMapper"
   ]
  },
  "type": "class"
 },
 "metpy.io.nexrad.DigitalSPWMapper": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "metpy.io.nexrad.DigitalVelMapper"
   ]
  },
  "type": "class"
 },
 "metpy.io.nexrad.DigitalStormPrecipMapper": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "metpy.io.nexrad.DigitalMapper"
   ]
  },
  "type": "class"
 },
 "metpy.io.nexrad.DigitalVILMapper": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "metpy.io.nexrad.DataMapper"
   ]
  },
  "type": "class"
 },
 "metpy.io.nexrad.DigitalVILMapper.__init__": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "metpy.io.nexrad.float16",
    "numpy.arange",
    "numpy.empty",
    "numpy.exp",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.DigitalVelMapper": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "metpy.io.nexrad.DigitalMapper"
   ]
  },
  "type": "class"
 },
 "metpy.io.nexrad.EDRMapper": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "metpy.io.nexrad.DataMapper"
   ]
  },
  "type": "class"
 },
 "metpy.io.nexrad.EDRMapper.__init__": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.END_ELEVATION": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "metpy.io.nexrad.END_VOLUME": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "metpy.io.nexrad.GenericDigitalMapper": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": [
    "metpy.io.nexrad.DataMapper"
   ]
  },
  "type": "class"
 },
 "metpy.io.nexrad.GenericDigitalMapper.__init__": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "metpy.io.nexrad.float32",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.LAST_ELEVATION": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "metpy.io.nexrad.LegacyMapper": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "metpy.io.nexrad.DataMapper"
   ]
  },
  "type": "class"
 },
 "metpy.io.nexrad.LegacyMapper.__init__": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level2File": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "Array",
    "BitField",
    "Bits",
    "Enum",
    "NamedStruct",
    "collections.namedtuple",
    "float",
    "metpy.io.nexrad.angle",
    "metpy.io.nexrad.az_rate",
    "metpy.io.nexrad.exporter",
    "metpy.io.nexrad.remap_status",
    "metpy.io.nexrad.scaler",
    "metpy.io.nexrad.version",
    "object"
   ]
  },
  "type": "class"
 },
 "metpy.io.nexrad.Level2File.__init__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "IOBuffer",
    "ValueError",
    "metpy.io.nexrad.bzip_blocks_decompress_all",
    "metpy.io.nexrad.contextlib",
    "open_as_needed"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level2File._add_sweep": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "len",
    "metpy.io.nexrad.START_ELEVATION",
    "metpy.io.nexrad.START_VOLUME",
    "metpy.io.nexrad.log"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level2File._buffer_segment": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "bytes",
    "len",
    "metpy.io.nexrad.log",
    "sorted"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level2File._check_size": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "metpy.io.nexrad.log"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level2File._decode_msg1": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level2File._decode_msg13": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "Bits",
    "bit_conv",
    "len",
    "list",
    "metpy.io.nexrad.log",
    "metpy.io.nexrad.nexrad_to_datetime",
    "range",
    "struct.Struct"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level2File._decode_msg15": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "len",
    "list",
    "metpy.io.nexrad.log",
    "metpy.io.nexrad.nexrad_to_datetime",
    "range",
    "struct.Struct",
    "zip"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level2File._decode_msg18": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "DictStruct",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level2File._decode_msg2": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "metpy.io.nexrad.log"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level2File._decode_msg3": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "DictStruct"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level2File._decode_msg31": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "metpy.io.nexrad.log",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level2File._decode_msg5": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level2File._read_data": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "map",
    "metpy.io.nexrad.log",
    "str"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level2File._read_volume_header": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "metpy.io.nexrad.nexrad_to_datetime"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3File": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "BitField",
    "Bits",
    "NamedStruct",
    "metpy.io.nexrad.DigitalEETMapper",
    "metpy.io.nexrad.DigitalHMCMapper",
    "metpy.io.nexrad.DigitalRefMapper",
    "metpy.io.nexrad.DigitalSPWMapper",
    "metpy.io.nexrad.DigitalStormPrecipMapper",
    "metpy.io.nexrad.DigitalVILMapper",
    "metpy.io.nexrad.DigitalVelMapper",
    "metpy.io.nexrad.EDRMapper",
    "metpy.io.nexrad.GenericDigitalMapper",
    "metpy.io.nexrad.LegacyMapper",
    "metpy.io.nexrad.PrecipArrayMapper",
    "metpy.io.nexrad.combine_elem",
    "metpy.io.nexrad.date_elem",
    "metpy.io.nexrad.exporter",
    "metpy.io.nexrad.float_elem",
    "metpy.io.nexrad.high_byte",
    "metpy.io.nexrad.low_byte",
    "metpy.io.nexrad.re",
    "metpy.io.nexrad.scaled_elem",
    "metpy.io.nexrad.scaler",
    "metpy.io.nexrad.version",
    "object"
   ]
  },
  "type": "class"
 },
 "metpy.io.nexrad.Level3File.__init__": {
  "data": {
   "lineno": 1550,
   "symbols_in_volume": [
    "IOBuffer",
    "IOBuffer.fromfile",
    "IOError",
    "block",
    "callable",
    "getattr",
    "isinstance",
    "len",
    "mapper",
    "metpy.io.nexrad.LegacyMapper",
    "metpy.io.nexrad.bz2",
    "metpy.io.nexrad.combine_elem",
    "metpy.io.nexrad.contextlib",
    "metpy.io.nexrad.log",
    "metpy.io.nexrad.nexrad_to_datetime",
    "metpy.io.nexrad.scaled_elem",
    "open_as_needed",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3File.__repr__": {
  "data": {
   "lineno": 1835,
   "symbols_in_volume": [
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3File._process_end_bytes": {
  "data": {
   "lineno": 1705,
   "symbols_in_volume": [
    "metpy.io.nexrad.log"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3File._process_wmo_header": {
  "data": {
   "lineno": 1693,
   "symbols_in_volume": [
    "metpy.io.nexrad.log"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3File._read_trends": {
  "data": {
   "lineno": 2151,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3File._unpack_graphblock": {
  "data": {
   "lineno": 1764,
   "symbols_in_volume": [
    "metpy.io.nexrad.log",
    "range"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3File._unpack_packet_cell_trend": {
  "data": {
   "lineno": 2121,
   "symbols_in_volume": [
    "IndexError",
    "metpy.io.nexrad.log"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3File._unpack_packet_contour_color": {
  "data": {
   "lineno": 2072
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3File._unpack_packet_digital_precipitation": {
  "data": {
   "lineno": 2023,
   "symbols_in_volume": [
    "len",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3File._unpack_packet_digital_radial": {
  "data": {
   "lineno": 1863,
   "symbols_in_volume": [
    "NamedStruct",
    "list",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3File._unpack_packet_generic": {
  "data": {
   "lineno": 2107,
   "symbols_in_volume": [
    "Level3XDRParser",
    "xdrparser"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3File._unpack_packet_linked_contour": {
  "data": {
   "lineno": 2079,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3File._unpack_packet_linked_vector": {
  "data": {
   "lineno": 2048,
   "symbols_in_volume": [
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3File._unpack_packet_radial_data": {
  "data": {
   "lineno": 1841,
   "symbols_in_volume": [
    "NamedStruct",
    "list",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3File._unpack_packet_raster_data": {
  "data": {
   "lineno": 1883,
   "symbols_in_volume": [
    "NamedStruct",
    "range"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3File._unpack_packet_scit": {
  "data": {
   "lineno": 1997,
   "symbols_in_volume": [
    "collections.defaultdict",
    "list",
    "metpy.io.nexrad.log",
    "metpy.io.nexrad.reduce_lists"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3File._unpack_packet_special_graphic_symbol": {
  "data": {
   "lineno": 1937,
   "symbols_in_volume": [
    "collections.defaultdict",
    "list",
    "metpy.io.nexrad.log",
    "metpy.io.nexrad.reduce_lists"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3File._unpack_packet_special_text_symbol": {
  "data": {
   "lineno": 1916,
   "symbols_in_volume": [
    "metpy.io.nexrad.log",
    "ord"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3File._unpack_packet_trend_times": {
  "data": {
   "lineno": 2117
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3File._unpack_packet_uniform_text": {
  "data": {
   "lineno": 1899
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3File._unpack_packet_vector": {
  "data": {
   "lineno": 2060,
   "symbols_in_volume": [
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3File._unpack_packet_wind_barbs": {
  "data": {
   "lineno": 2092,
   "symbols_in_volume": [
    "collections.defaultdict",
    "list"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3File._unpack_rcm": {
  "data": {
   "lineno": 1725,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3File._unpack_rle_data": {
  "data": {
   "lineno": 1711,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3File._unpack_standalone_graphblock": {
  "data": {
   "lineno": 1788,
   "symbols_in_volume": [
    "metpy.io.nexrad.log"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3File._unpack_symblock": {
  "data": {
   "lineno": 1739,
   "symbols_in_volume": [
    "metpy.io.nexrad.log",
    "range"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3File._unpack_tabblock": {
  "data": {
   "lineno": 1803,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3File.pos_scale": {
  "data": {
   "lineno": 1720,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3XDRParser": {
  "data": {
   "lineno": 2192,
   "symbols_in_volume": [
    "collections.namedtuple",
    "xdrlib.Unpacker"
   ]
  },
  "type": "class"
 },
 "metpy.io.nexrad.Level3XDRParser.__call__": {
  "data": {
   "lineno": 2195,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "metpy.io.nexrad.log"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3XDRParser._unpack_components": {
  "data": {
   "lineno": 2261,
   "symbols_in_volume": [
    "KeyError",
    "metpy.io.nexrad.log",
    "range"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3XDRParser._unpack_parameters": {
  "data": {
   "lineno": 2240,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3XDRParser._unpack_prod_desc": {
  "data": {
   "lineno": 2212,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3XDRParser._unpack_radial": {
  "data": {
   "lineno": 2291,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3XDRParser._unpack_text": {
  "data": {
   "lineno": 2311
  },
  "type": "function"
 },
 "metpy.io.nexrad.Level3XDRParser.unpack_string": {
  "data": {
   "lineno": 2208,
   "symbols_in_volume": [
    "xdrlib.Unpacker.unpack_string"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "metpy.io.nexrad.PrecipArrayMapper": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "metpy.io.nexrad.DigitalMapper"
   ]
  },
  "type": "class"
 },
 "metpy.io.nexrad.START_ELEVATION": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "metpy.io.nexrad.START_VOLUME": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "metpy.io.nexrad.Struct": {
  "data": {
   "shadows": "struct.Struct"
  },
  "type": "import"
 },
 "metpy.io.nexrad.Unpacker": {
  "data": {
   "shadows": "xdrlib.Unpacker"
  },
  "type": "import"
 },
 "metpy.io.nexrad.angle": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "metpy.io.nexrad.az_rate": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "metpy.io.nexrad.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "metpy.io.nexrad.bzip_blocks_decompress_all": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "abs",
    "bytearray",
    "len",
    "metpy.io.nexrad.bz2",
    "metpy.io.nexrad.logging",
    "struct.Struct"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.combine_elem": {
  "data": {
   "lineno": 724
  },
  "type": "function"
 },
 "metpy.io.nexrad.combine_elem.inner": {
  "data": {
   "lineno": 726
  },
  "type": "function"
 },
 "metpy.io.nexrad.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "metpy.io.nexrad.date_elem": {
  "data": {
   "lineno": 710
  },
  "type": "function"
 },
 "metpy.io.nexrad.date_elem.inner": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "metpy.io.nexrad.nexrad_to_datetime"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "metpy.io.nexrad.day": {
  "data": {
   "shadows": "scipy.constants.day"
  },
  "type": "import"
 },
 "metpy.io.nexrad.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "metpy.io.nexrad.exporter": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "metpy.io.nexrad.float16": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.float32": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "metpy.io.nexrad.struct"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.float_elem": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "metpy.io.nexrad.float32"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.high_byte": {
  "data": {
   "lineno": 741
  },
  "type": "function"
 },
 "metpy.io.nexrad.high_byte.inner": {
  "data": {
   "lineno": 743
  },
  "type": "function"
 },
 "metpy.io.nexrad.is_precip_mode": {
  "data": {
   "lineno": 2318,
   "symbols_in_volume": [
    "metpy.io.nexrad.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.log": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "metpy.io.nexrad.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "metpy.io.nexrad.low_byte": {
  "data": {
   "lineno": 748
  },
  "type": "function"
 },
 "metpy.io.nexrad.low_byte.inner": {
  "data": {
   "lineno": 750
  },
  "type": "function"
 },
 "metpy.io.nexrad.milli": {
  "data": {
   "shadows": "scipy.constants.milli"
  },
  "type": "import"
 },
 "metpy.io.nexrad.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "metpy.io.nexrad.nexrad_to_datetime": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "metpy.io.nexrad.datetime",
    "scipy.constants.day",
    "scipy.constants.milli"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "metpy.io.nexrad.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "metpy.io.nexrad.reduce_lists": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "metpy.io.nexrad.remap_status": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "metpy.io.nexrad.scaled_elem": {
  "data": {
   "lineno": 717
  },
  "type": "function"
 },
 "metpy.io.nexrad.scaled_elem.inner": {
  "data": {
   "lineno": 719
  },
  "type": "function"
 },
 "metpy.io.nexrad.scaler": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "metpy.io.nexrad.scaler.inner": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "metpy.io.nexrad.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "metpy.io.nexrad.two_comp16": {
  "data": {
   "lineno": 679
  },
  "type": "function"
 },
 "metpy.io.nexrad.version": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "metpy.io.station_data": {
  "data": {
   "symbols_in_volume": [
    "Exporter",
    "collections.namedtuple",
    "globals",
    "metpy.io.station_data.StationLookup",
    "metpy.io.station_data.exporter"
   ]
  },
  "type": "module"
 },
 "metpy.io.station_data.Station": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "metpy.io.station_data.StationLookup": {
  "data": {
   "lineno": 123
  },
  "type": "class"
 },
 "metpy.io.station_data.StationLookup.__getitem__": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "metpy.io.station_data.StationLookup.__init__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "dict",
    "metpy.io.station_data._read_airports_file",
    "metpy.io.station_data._read_master_text_file",
    "metpy.io.station_data._read_station_table",
    "metpy.io.station_data._read_station_text_file"
   ]
  },
  "type": "function"
 },
 "metpy.io.station_data._read_airports_file": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "get_test_data",
    "pandas.DataFrame",
    "pandas.read_csv"
   ]
  },
  "type": "function"
 },
 "metpy.io.station_data._read_master_text_file": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "get_test_data",
    "int",
    "metpy.io.station_data.Station",
    "metpy.io.station_data.to_dec_deg",
    "open"
   ]
  },
  "type": "function"
 },
 "metpy.io.station_data._read_station_table": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "get_test_data",
    "int",
    "metpy.io.station_data.Station",
    "open"
   ]
  },
  "type": "function"
 },
 "metpy.io.station_data._read_station_text_file": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "get_test_data",
    "int",
    "metpy.io.station_data.Station",
    "metpy.io.station_data.to_dec_deg",
    "open"
   ]
  },
  "type": "function"
 },
 "metpy.io.station_data.exporter": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "metpy.io.station_data.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "metpy.io.station_data.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "metpy.io.station_data.station_info": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "metpy.io.station_data.to_dec_deg": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "metpy.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "metpy.package_tools": {
  "data": {},
  "type": "module"
 },
 "metpy.package_tools.Exporter": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "metpy.package_tools.Exporter.__enter__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "metpy.package_tools.Exporter.__exit__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "metpy.package_tools.Exporter.__init__": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "metpy.package_tools.Exporter.export": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "metpy.package_tools.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "metpy.pandas": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "metpy.pandas.logging"
   ]
  },
  "type": "module"
 },
 "metpy.pandas.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "metpy.pandas.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "metpy.pandas.log": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "metpy.pandas.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "metpy.pandas.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "metpy.pandas.preprocess_pandas": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "metpy.pandas.preprocess_pandas.wrapper": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "func",
    "isinstance",
    "metpy.pandas.functools",
    "pandas.Series",
    "tuple"
   ]
  },
  "type": "function"
 },
 "metpy.plots": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "metpy.plots.__all__",
    "metpy.plots.logger",
    "metpy.plots.logging"
   ]
  },
  "type": "module"
 },
 "metpy.plots.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "metpy.plots._mpl": {
  "data": {
   "symbols_in_volume": [
    "hasattr",
    "matplotlib.axes.Axes",
    "matplotlib.axes.Axes.scattertext",
    "metpy.plots._mpl.scattertext"
   ]
  },
  "type": "module"
 },
 "metpy.plots._mpl.Axes": {
  "data": {
   "shadows": "matplotlib.axes.Axes"
  },
  "type": "import"
 },
 "metpy.plots._mpl.PathEffectRenderer": {
  "data": {
   "shadows": "matplotlib.patheffects.PathEffectRenderer"
  },
  "type": "import"
 },
 "metpy.plots._mpl.Text": {
  "data": {
   "shadows": "matplotlib.text.Text"
  },
  "type": "import"
 },
 "metpy.plots._mpl.TextCollection": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "matplotlib.text.Text"
   ]
  },
  "type": "class"
 },
 "metpy.plots._mpl.TextCollection.__init__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "matplotlib.text.Text.__init__"
   ]
  },
  "type": "function"
 },
 "metpy.plots._mpl.TextCollection.__str__": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "metpy.plots._mpl.TextCollection.draw": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "any",
    "check_line",
    "getattr",
    "len",
    "matplotlib.artist.allow_rasterization",
    "matplotlib.patheffects.PathEffectRenderer",
    "matplotlib.transforms.Affine2D",
    "numpy.vstack",
    "zip"
   ]
  },
  "type": "function"
 },
 "metpy.plots._mpl.TextCollection.get_datalim": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "matplotlib.transforms.Bbox.null",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "metpy.plots._mpl.TextCollection.get_usetex": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "matplotlib.rcParams"
   ]
  },
  "type": "function"
 },
 "metpy.plots._mpl.TextCollection.set_usetex": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "metpy.plots._mpl.allow_rasterization": {
  "data": {
   "shadows": "matplotlib.artist.allow_rasterization"
  },
  "type": "import"
 },
 "metpy.plots._mpl.cbook": {
  "data": {
   "shadows": "matplotlib.cbook"
  },
  "type": "import"
 },
 "metpy.plots._mpl.mtransforms": {
  "data": {
   "shadows": "matplotlib.transforms"
  },
  "type": "import"
 },
 "metpy.plots._mpl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "metpy.plots._mpl.rcParams": {
  "data": {
   "shadows": "matplotlib.rcParams"
  },
  "type": "import"
 },
 "metpy.plots._mpl.scattertext": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "TextCollection",
    "matplotlib.cbook.delete_masked_points"
   ]
  },
  "type": "function"
 },
 "metpy.plots._mpl.transforms": {
  "data": {
   "shadows": "matplotlib.transforms"
  },
  "type": "import"
 },
 "metpy.plots._util": {
  "data": {},
  "type": "module"
 },
 "metpy.plots._util.LineCollection": {
  "data": {
   "shadows": "matplotlib.collections.LineCollection"
  },
  "type": "import"
 },
 "metpy.plots._util._add_logo": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "matplotlib.pyplot.imread",
    "metpy.plots._util.pkg_resources",
    "metpy.plots._util.posixpath"
   ]
  },
  "type": "function"
 },
 "metpy.plots._util.add_metpy_logo": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "metpy.plots._util._add_logo"
   ]
  },
  "type": "function"
 },
 "metpy.plots._util.add_timestamp": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "datetime.datetime.utcnow",
    "matplotlib.patheffects.withStroke"
   ]
  },
  "type": "function"
 },
 "metpy.plots._util.add_unidata_logo": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "metpy.plots._util._add_logo"
   ]
  },
  "type": "function"
 },
 "metpy.plots._util.colored_line": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "concatenate",
    "matplotlib.collections.LineCollection",
    "numpy.isnan",
    "numpy.lib.stride_tricks.as_strided"
   ]
  },
  "type": "function"
 },
 "metpy.plots._util.convert_gempak_color": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "list",
    "normalize"
   ]
  },
  "type": "function"
 },
 "metpy.plots._util.convert_gempak_color.normalize": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "metpy.plots._util.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "metpy.plots._util.imread": {
  "data": {
   "shadows": "matplotlib.pyplot.imread"
  },
  "type": "import"
 },
 "metpy.plots._util.mpatheffects": {
  "data": {
   "shadows": "matplotlib.patheffects"
  },
  "type": "import"
 },
 "metpy.plots._util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "metpy.plots._util.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "metpy.plots._util.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "metpy.plots.cartopy_utils": {
  "data": {
   "symbols_in_volume": [
    "metpy.plots.cartopy_utils.MetPyMapFeature"
   ]
  },
  "type": "module"
 },
 "metpy.plots.cartopy_utils.MetPyMapFeature": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "cartopy.feature.NaturalEarthFeature"
   ]
  },
  "type": "class"
 },
 "metpy.plots.cartopy_utils.MetPyMapFeature.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "metpy.plots.cartopy_utils.MetPyMapFeature.geometries": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "cartopy.io.shapereader.Reader",
    "get_test_data",
    "iter",
    "tuple"
   ]
  },
  "type": "function"
 },
 "metpy.plots.cartopy_utils.MetPyMapFeature.with_scale": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "metpy.plots.cartopy_utils.MetPyMapFeature"
   ]
  },
  "type": "function"
 },
 "metpy.plots.cartopy_utils.USCOUNTIES": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "metpy.plots.cartopy_utils.USSTATES": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "metpy.plots.cartopy_utils.cfeature": {
  "data": {
   "shadows": "cartopy.feature"
  },
  "type": "import"
 },
 "metpy.plots.cartopy_utils.shapereader": {
  "data": {
   "shadows": "cartopy.io.shapereader"
  },
  "type": "import"
 },
 "metpy.plots.ctables": {
  "data": {
   "symbols_in_volume": [
    "Exporter",
    "__name__",
    "globals",
    "metpy.plots.ctables.ColortableRegistry",
    "metpy.plots.ctables.exporter",
    "metpy.plots.ctables.logging",
    "metpy.plots.ctables.registry"
   ]
  },
  "type": "module"
 },
 "metpy.plots.ctables.ColortableRegistry": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "metpy.plots.ctables.ColortableRegistry.__getitem__": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "metpy.plots.ctables.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "metpy.plots.ctables.ColortableRegistry.add_colortable": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "metpy.plots.ctables.read_colortable",
    "metpy.plots.ctables.warnings"
   ]
  },
  "type": "function"
 },
 "metpy.plots.ctables.ColortableRegistry.get_colortable": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "matplotlib.colors.ListedColormap"
   ]
  },
  "type": "function"
 },
 "metpy.plots.ctables.ColortableRegistry.get_with_boundaries": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "matplotlib.colors.BoundaryNorm"
   ]
  },
  "type": "function"
 },
 "metpy.plots.ctables.ColortableRegistry.get_with_range": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "len",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "metpy.plots.ctables.ColortableRegistry.get_with_steps": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "len",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "metpy.plots.ctables.ColortableRegistry.scan_dir": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "RuntimeError",
    "metpy.plots.ctables.TABLE_EXT",
    "metpy.plots.ctables.glob",
    "metpy.plots.ctables.log",
    "open"
   ]
  },
  "type": "function"
 },
 "metpy.plots.ctables.ColortableRegistry.scan_resource": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "metpy.plots.ctables.TABLE_EXT",
    "metpy.plots.ctables.contextlib",
    "metpy.plots.ctables.posixpath",
    "pkg_resources.resource_listdir",
    "pkg_resources.resource_stream"
   ]
  },
  "type": "function"
 },
 "metpy.plots.ctables.TABLE_EXT": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "metpy.plots.ctables._parse": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "hasattr",
    "metpy.plots.ctables.ast"
   ]
  },
  "type": "function"
 },
 "metpy.plots.ctables.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "metpy.plots.ctables.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "metpy.plots.ctables.colortables": {
  "data": {
   "lineno": 291
  },
  "type": "constant"
 },
 "metpy.plots.ctables.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "metpy.plots.ctables.convert_gempak_table": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "int",
    "map"
   ]
  },
  "type": "function"
 },
 "metpy.plots.ctables.exporter": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "metpy.plots.ctables.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "metpy.plots.ctables.linspace": {
  "data": {
   "shadows": "numpy.linspace"
  },
  "type": "import"
 },
 "metpy.plots.ctables.log": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "metpy.plots.ctables.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "metpy.plots.ctables.mcolors": {
  "data": {
   "shadows": "matplotlib.colors"
  },
  "type": "import"
 },
 "metpy.plots.ctables.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "metpy.plots.ctables.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "metpy.plots.ctables.read_colortable": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "RuntimeError",
    "SyntaxError",
    "ValueError",
    "matplotlib.colors.colorConverter.to_rgb",
    "metpy.plots.ctables._parse",
    "metpy.plots.ctables.exporter"
   ]
  },
  "type": "function"
 },
 "metpy.plots.ctables.registry": {
  "data": {
   "lineno": 286
  },
  "type": "constant"
 },
 "metpy.plots.ctables.resource_listdir": {
  "data": {
   "shadows": "pkg_resources.resource_listdir"
  },
  "type": "import"
 },
 "metpy.plots.ctables.resource_stream": {
  "data": {
   "shadows": "pkg_resources.resource_stream"
  },
  "type": "import"
 },
 "metpy.plots.ctables.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "metpy.plots.declarative": {
  "data": {
   "symbols_in_volume": [
    "Exporter",
    "ImportError",
    "cartopy.crs.PlateCarree",
    "globals"
   ]
  },
  "type": "module"
 },
 "metpy.plots.declarative.Any": {
  "data": {
   "shadows": "traitlets.Any"
  },
  "type": "import"
 },
 "metpy.plots.declarative.BarbPlot": {
  "data": {
   "lineno": 1235,
   "symbols_in_volume": [
    "metpy.plots.declarative.PlotVector",
    "metpy.plots.declarative.exporter",
    "traitlets.Float"
   ]
  },
  "type": "class"
 },
 "metpy.plots.declarative.BarbPlot._build": {
  "data": {
   "lineno": 1253,
   "symbols_in_volume": [
    "metpy.plots.declarative.DEFAULT_LAT_LON",
    "slice"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.BarbPlot._set_need_rebuild": {
  "data": {
   "lineno": 1246,
   "symbols_in_volume": [
    "traitlets.observe"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.Bool": {
  "data": {
   "shadows": "traitlets.Bool"
  },
  "type": "import"
 },
 "metpy.plots.declarative.ColorfillTraits": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "matplotlib.pyplot.Normalize",
    "traitlets.HasTraits",
    "traitlets.Instance",
    "traitlets.Int",
    "traitlets.Tuple",
    "traitlets.Unicode",
    "traitlets.Union"
   ]
  },
  "type": "class"
 },
 "metpy.plots.declarative.ContourPlot": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": [
    "metpy.plots.declarative.ContourTraits",
    "metpy.plots.declarative.PlotScalar",
    "metpy.plots.declarative.exporter",
    "traitlets.Int",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "metpy.plots.declarative.ContourPlot._build": {
  "data": {
   "lineno": 1083
  },
  "type": "function"
 },
 "metpy.plots.declarative.ContourPlot._set_need_rebuild": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "traitlets.observe"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.ContourTraits": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "traitlets.Bool",
    "traitlets.Float",
    "traitlets.HasTraits",
    "traitlets.Int",
    "traitlets.List",
    "traitlets.Union"
   ]
  },
  "type": "class"
 },
 "metpy.plots.declarative.DEFAULT_LAT_LON": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "metpy.plots.declarative.FilledContourPlot": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": [
    "metpy.plots.declarative.ColorfillTraits",
    "metpy.plots.declarative.ContourTraits",
    "metpy.plots.declarative.PlotScalar",
    "metpy.plots.declarative.exporter"
   ]
  },
  "type": "class"
 },
 "metpy.plots.declarative.FilledContourPlot._build": {
  "data": {
   "lineno": 1106
  },
  "type": "function"
 },
 "metpy.plots.declarative.FilledContourPlot._set_need_rebuild": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": [
    "traitlets.observe"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.Float": {
  "data": {
   "shadows": "traitlets.Float"
  },
  "type": "import"
 },
 "metpy.plots.declarative.HasTraits": {
  "data": {
   "shadows": "traitlets.HasTraits"
  },
  "type": "import"
 },
 "metpy.plots.declarative.ImagePlot": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "metpy.plots.declarative.ColorfillTraits",
    "metpy.plots.declarative.PlotScalar",
    "metpy.plots.declarative.exporter"
   ]
  },
  "type": "class"
 },
 "metpy.plots.declarative.ImagePlot._build": {
  "data": {
   "lineno": 1035
  },
  "type": "function"
 },
 "metpy.plots.declarative.ImagePlot._set_need_rebuild": {
  "data": {
   "lineno": 1011,
   "symbols_in_volume": [
    "traitlets.observe"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.ImagePlot._set_need_redraw": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": [
    "hasattr",
    "traitlets.observe"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.ImagePlot.plotdata": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.Instance": {
  "data": {
   "shadows": "traitlets.Instance"
  },
  "type": "import"
 },
 "metpy.plots.declarative.Int": {
  "data": {
   "shadows": "traitlets.Int"
  },
  "type": "import"
 },
 "metpy.plots.declarative.List": {
  "data": {
   "shadows": "traitlets.List"
  },
  "type": "import"
 },
 "metpy.plots.declarative.MapPanel": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "metpy.plots.declarative.Panel",
    "metpy.plots.declarative.PanelContainer",
    "metpy.plots.declarative.exporter",
    "traitlets.Any",
    "traitlets.Bool",
    "traitlets.Float",
    "traitlets.Instance",
    "traitlets.Int",
    "traitlets.List",
    "traitlets.Tuple",
    "traitlets.Unicode",
    "traitlets.Union"
   ]
  },
  "type": "class"
 },
 "metpy.plots.declarative.MapPanel._layer_features": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "isinstance",
    "metpy.plots.declarative.lookup_map_feature",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.MapPanel._parent_changed": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "traitlets.observe"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.MapPanel._plots_changed": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "traitlets.observe"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.MapPanel._proj_obj": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "isinstance",
    "metpy.plots.declarative.lookup_projection",
    "property",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.MapPanel._set_need_redraw": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "traitlets.observe"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.MapPanel.ax": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.MapPanel.draw": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "isinstance",
    "metpy.plots.declarative.DEFAULT_LAT_LON",
    "metpy.plots.declarative._areas",
    "str"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.MapPanel.refresh": {
  "data": {
   "lineno": 724
  },
  "type": "function"
 },
 "metpy.plots.declarative.Panel": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "traitlets.HasTraits"
   ]
  },
  "type": "class"
 },
 "metpy.plots.declarative.PanelContainer": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "metpy.plots.declarative.Panel",
    "metpy.plots.declarative.exporter",
    "traitlets.HasTraits",
    "traitlets.Instance",
    "traitlets.Int",
    "traitlets.List",
    "traitlets.Tuple",
    "traitlets.Union",
    "type"
   ]
  },
  "type": "class"
 },
 "metpy.plots.declarative.PanelContainer._panels_changed": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "traitlets.observe"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.PanelContainer.draw": {
  "data": {
   "lineno": 553
  },
  "type": "function"
 },
 "metpy.plots.declarative.PanelContainer.figure": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "hasattr",
    "matplotlib.pyplot.figure",
    "property"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.PanelContainer.panel": {
  "data": {
   "lineno": 522
  },
  "type": "function"
 },
 "metpy.plots.declarative.PanelContainer.refresh": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.PanelContainer.save": {
  "data": {
   "lineno": 559
  },
  "type": "function"
 },
 "metpy.plots.declarative.PanelContainer.show": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "matplotlib.pyplot.show"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.PlotObs": {
  "data": {
   "lineno": 1270,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "metpy.plots.declarative.Panel",
    "metpy.plots.declarative.exporter",
    "traitlets.Bool",
    "traitlets.Float",
    "traitlets.HasTraits",
    "traitlets.Instance",
    "traitlets.Int",
    "traitlets.List",
    "traitlets.Unicode",
    "traitlets.Union"
   ]
  },
  "type": "class"
 },
 "metpy.plots.declarative.PlotObs._build": {
  "data": {
   "lineno": 1471,
   "symbols_in_volume": [
    "StationPlot",
    "cartopy.crs.PlateCarree",
    "enumerate",
    "getattr",
    "len",
    "reduce_point_density",
    "str"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.PlotObs._parent_changed": {
  "data": {
   "lineno": 1373,
   "symbols_in_volume": [
    "traitlets.observe"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.PlotObs._set_need_rebuild": {
  "data": {
   "lineno": 1464,
   "symbols_in_volume": [
    "traitlets.observe"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.PlotObs._update_data": {
  "data": {
   "lineno": 1378,
   "symbols_in_volume": [
    "traitlets.observe"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.PlotObs.clear": {
  "data": {
   "lineno": 1362,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.PlotObs.data": {
  "data": {
   "lineno": 1395
  },
  "type": "function"
 },
 "metpy.plots.declarative.PlotObs.draw": {
  "data": {
   "lineno": 1457,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.PlotObs.name": {
  "data": {
   "lineno": 1400,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.PlotObs.obsdata": {
  "data": {
   "lineno": 1409,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "list",
    "property"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.PlotObs.plotdata": {
  "data": {
   "lineno": 1440,
   "symbols_in_volume": [
    "list",
    "property"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.PlotScalar": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "metpy.plots.declarative.Plots2D",
    "metpy.plots.declarative.exporter",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "metpy.plots.declarative.PlotScalar._update_data": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "traitlets.observe"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.PlotScalar.draw": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.PlotScalar.griddata": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.PlotScalar.plotdata": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "metpy.plots.declarative.DEFAULT_LAT_LON",
    "numpy.meshgrid",
    "property"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.PlotVector": {
  "data": {
   "lineno": 1114,
   "symbols_in_volume": [
    "metpy.plots.declarative.Plots2D",
    "metpy.plots.declarative.exporter",
    "traitlets.Bool",
    "traitlets.Int",
    "traitlets.Tuple",
    "traitlets.Unicode"
   ]
  },
  "type": "class"
 },
 "metpy.plots.declarative.PlotVector._update_data": {
  "data": {
   "lineno": 1165,
   "symbols_in_volume": [
    "traitlets.observe"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.PlotVector.draw": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.PlotVector.griddata": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "property"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.PlotVector.plotdata": {
  "data": {
   "lineno": 1198,
   "symbols_in_volume": [
    "metpy.plots.declarative.DEFAULT_LAT_LON",
    "numpy.meshgrid",
    "property"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.Plots2D": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "datetime.datetime",
    "metpy.plots.declarative.Panel",
    "metpy.plots.declarative.exporter",
    "traitlets.Bool",
    "traitlets.HasTraits",
    "traitlets.Instance",
    "traitlets.Int",
    "traitlets.Union"
   ]
  },
  "type": "class"
 },
 "metpy.plots.declarative.Plots2D._cmap_obj": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "KeyError",
    "matplotlib.pyplot.get_cmap",
    "property"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.Plots2D._norm_obj": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "matplotlib.pyplot.Normalize",
    "property"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.Plots2D._parent_changed": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "traitlets.observe"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.Plots2D._update_data": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "traitlets.observe"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.Plots2D.clear": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.Plots2D.clear_collections": {
  "data": {
   "lineno": 825
  },
  "type": "function"
 },
 "metpy.plots.declarative.Plots2D.clear_handle": {
  "data": {
   "lineno": 820
  },
  "type": "function"
 },
 "metpy.plots.declarative.Plots2D.data": {
  "data": {
   "lineno": 853
  },
  "type": "function"
 },
 "metpy.plots.declarative.Plots2D.name": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "isinstance",
    "property",
    "tuple"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.Tuple": {
  "data": {
   "shadows": "traitlets.Tuple"
  },
  "type": "import"
 },
 "metpy.plots.declarative.Unicode": {
  "data": {
   "shadows": "traitlets.Unicode"
  },
  "type": "import"
 },
 "metpy.plots.declarative.Union": {
  "data": {
   "shadows": "traitlets.Union"
  },
  "type": "import"
 },
 "metpy.plots.declarative._areas": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "metpy.plots.declarative.ccrs": {
  "data": {
   "shadows": "cartopy.crs"
  },
  "type": "import"
 },
 "metpy.plots.declarative.cfeature": {
  "data": {
   "shadows": "cartopy.feature"
  },
  "type": "import"
 },
 "metpy.plots.declarative.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "metpy.plots.declarative.exporter": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "metpy.plots.declarative.lookup_map_feature": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "AttributeError",
    "cartopy.feature",
    "cartopy.feature.AdaptiveScaler",
    "getattr"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.lookup_projection": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "cartopy.crs.LambertConformal",
    "cartopy.crs.Mercator",
    "cartopy.crs.NorthPolarStereo"
   ]
  },
  "type": "function"
 },
 "metpy.plots.declarative.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "metpy.plots.declarative.observe": {
  "data": {
   "shadows": "traitlets.observe"
  },
  "type": "import"
 },
 "metpy.plots.declarative.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "metpy.plots.declarative.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "metpy.plots.logger": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "metpy.plots.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "metpy.plots.mapping": {
  "data": {},
  "type": "module"
 },
 "metpy.plots.mapping.CFProjection": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "Registry",
    "object"
   ]
  },
  "type": "class"
 },
 "metpy.plots.mapping.CFProjection.__eq__": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "metpy.plots.mapping.CFProjection.__getitem__": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "metpy.plots.mapping.CFProjection.__init__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "metpy.plots.mapping.CFProjection.__ne__": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "metpy.plots.mapping.CFProjection.__str__": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "metpy.plots.mapping.CFProjection._map_arg_names": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "metpy.plots.mapping.CFProjection.build_projection_kwargs": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "metpy.plots.mapping.CFProjection.cartopy_globe": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "cartopy.crs.Globe",
    "property"
   ]
  },
  "type": "function"
 },
 "metpy.plots.mapping.CFProjection.register": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "metpy.plots.mapping.CFProjection.to_cartopy": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "proj_handler"
   ]
  },
  "type": "function"
 },
 "metpy.plots.mapping.CFProjection.to_dict": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "metpy.plots.mapping.ccrs": {
  "data": {
   "shadows": "cartopy.crs"
  },
  "type": "import"
 },
 "metpy.plots.mapping.make_geo": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "cartopy.crs.Geostationary",
    "metpy.plots.mapping.CFProjection"
   ]
  },
  "type": "function"
 },
 "metpy.plots.mapping.make_latlon": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "cartopy.crs.PlateCarree",
    "metpy.plots.mapping.CFProjection"
   ]
  },
  "type": "function"
 },
 "metpy.plots.mapping.make_lcc": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "TypeError",
    "cartopy.crs.LambertConformal",
    "len",
    "metpy.plots.mapping.CFProjection"
   ]
  },
  "type": "function"
 },
 "metpy.plots.mapping.make_mercator": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "cartopy.crs.Mercator",
    "metpy.plots.mapping.CFProjection"
   ]
  },
  "type": "function"
 },
 "metpy.plots.mapping.make_polar_stereo": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "cartopy.crs.Stereographic",
    "metpy.plots.mapping.CFProjection"
   ]
  },
  "type": "function"
 },
 "metpy.plots.mapping.make_stereo": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "cartopy.crs.Stereographic",
    "metpy.plots.mapping.CFProjection"
   ]
  },
  "type": "function"
 },
 "metpy.plots.skewt": {
  "data": {
   "symbols_in_volume": [
    "Exporter",
    "globals",
    "matplotlib.projections.register_projection",
    "metpy.plots.skewt.SkewXAxes"
   ]
  },
  "type": "module"
 },
 "metpy.plots.skewt.Axes": {
  "data": {
   "shadows": "matplotlib.axes.Axes"
  },
  "type": "import"
 },
 "metpy.plots.skewt.Circle": {
  "data": {
   "shadows": "matplotlib.patches.Circle"
  },
  "type": "import"
 },
 "metpy.plots.skewt.ExitStack": {
  "data": {
   "shadows": "contextlib.ExitStack"
  },
  "type": "import"
 },
 "metpy.plots.skewt.Hodograph": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "metpy.plots.skewt.exporter",
    "object"
   ]
  },
  "type": "class"
 },
 "metpy.plots.skewt.Hodograph.__init__": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "matplotlib.pyplot.figure"
   ]
  },
  "type": "function"
 },
 "metpy.plots.skewt.Hodograph._form_line_args": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "metpy.plots.skewt.Hodograph.add_grid": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "matplotlib.patches.Circle",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "metpy.plots.skewt.Hodograph.plot": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "_delete_masked_points"
   ]
  },
  "type": "function"
 },
 "metpy.plots.skewt.Hodograph.plot_colormapped": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "_delete_masked_points",
    "colored_line",
    "concatenate",
    "interpolate_1d",
    "matplotlib.colors.BoundaryNorm",
    "matplotlib.colors.ListedColormap",
    "metpy.plots.skewt.warnings",
    "numpy.argsort",
    "numpy.array",
    "numpy.asarray",
    "numpy.sort"
   ]
  },
  "type": "function"
 },
 "metpy.plots.skewt.Hodograph.wind_vectors": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "metpy.plots.skewt.LineCollection": {
  "data": {
   "shadows": "matplotlib.collections.LineCollection"
  },
  "type": "import"
 },
 "metpy.plots.skewt.MultipleLocator": {
  "data": {
   "shadows": "matplotlib.ticker.MultipleLocator"
  },
  "type": "import"
 },
 "metpy.plots.skewt.NullFormatter": {
  "data": {
   "shadows": "matplotlib.ticker.NullFormatter"
  },
  "type": "import"
 },
 "metpy.plots.skewt.ScalarFormatter": {
  "data": {
   "shadows": "matplotlib.ticker.ScalarFormatter"
  },
  "type": "import"
 },
 "metpy.plots.skewt.SkewSpine": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "matplotlib.spines.Spine"
   ]
  },
  "type": "class"
 },
 "metpy.plots.skewt.SkewSpine._adjust_location": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "metpy.plots.skewt.SkewT": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "metpy.plots.skewt.exporter",
    "object"
   ]
  },
  "type": "class"
 },
 "metpy.plots.skewt.SkewT.__init__": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.rcParams.get",
    "matplotlib.ticker.MultipleLocator",
    "matplotlib.ticker.NullFormatter",
    "matplotlib.ticker.ScalarFormatter",
    "metpy.plots.skewt.matplotlib"
   ]
  },
  "type": "function"
 },
 "metpy.plots.skewt.SkewT.plot": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "_delete_masked_points"
   ]
  },
  "type": "function"
 },
 "metpy.plots.skewt.SkewT.plot_barbs": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "matplotlib.transforms.Bbox",
    "matplotlib.transforms.TransformedBbox",
    "numpy.empty_like"
   ]
  },
  "type": "function"
 },
 "metpy.plots.skewt.SkewT.plot_dry_adiabats": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "dry_lapse",
    "matplotlib.collections.LineCollection",
    "numpy.arange",
    "numpy.linspace",
    "numpy.newaxis",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "metpy.plots.skewt.SkewT.plot_mixing_lines": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "dewpoint",
    "matplotlib.collections.LineCollection",
    "max",
    "numpy.array",
    "numpy.linspace",
    "numpy.vstack",
    "vapor_pressure"
   ]
  },
  "type": "function"
 },
 "metpy.plots.skewt.SkewT.plot_moist_adiabats": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "matplotlib.collections.LineCollection",
    "moist_lapse",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.linspace",
    "numpy.newaxis",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "metpy.plots.skewt.SkewT.shade_area": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "_delete_masked_points",
    "str"
   ]
  },
  "type": "function"
 },
 "metpy.plots.skewt.SkewT.shade_cape": {
  "data": {
   "lineno": 668
  },
  "type": "function"
 },
 "metpy.plots.skewt.SkewT.shade_cin": {
  "data": {
   "lineno": 697
  },
  "type": "function"
 },
 "metpy.plots.skewt.SkewTTransform": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "matplotlib.transforms.Affine2D"
   ]
  },
  "type": "class"
 },
 "metpy.plots.skewt.SkewTTransform.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.deg2rad",
    "numpy.tan",
    "super"
   ]
  },
  "type": "function"
 },
 "metpy.plots.skewt.SkewTTransform.get_matrix": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "metpy.plots.skewt.SkewXAxes": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "matplotlib.axes.Axes"
   ]
  },
  "type": "class"
 },
 "metpy.plots.skewt.SkewXAxes.__init__": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "metpy.plots.skewt.SkewXAxes._gen_axes_spines": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "matplotlib.spines.Spine.linear_spine",
    "metpy.plots.skewt.SkewSpine"
   ]
  },
  "type": "function"
 },
 "metpy.plots.skewt.SkewXAxes._init_axis": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "matplotlib.axis.YAxis",
    "metpy.plots.skewt.SkewXAxis"
   ]
  },
  "type": "function"
 },
 "metpy.plots.skewt.SkewXAxes._set_lim_and_transforms": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "metpy.plots.skewt.SkewTTransform",
    "super"
   ]
  },
  "type": "function"
 },
 "metpy.plots.skewt.SkewXAxes.lower_xlim": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "metpy.plots.skewt.SkewXAxes.upper_xlim": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "metpy.plots.skewt.SkewXAxis": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "matplotlib.axis.XAxis"
   ]
  },
  "type": "class"
 },
 "metpy.plots.skewt.SkewXAxis._get_tick": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "metpy.plots.skewt.SkewXTick"
   ]
  },
  "type": "function"
 },
 "metpy.plots.skewt.SkewXAxis._get_tick_bboxes": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "metpy.plots.skewt.SkewXAxis.get_view_interval": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "metpy.plots.skewt.SkewXTick": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "matplotlib.axis.XTick"
   ]
  },
  "type": "class"
 },
 "metpy.plots.skewt.SkewXTick.draw": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "contextlib.ExitStack",
    "super"
   ]
  },
  "type": "function"
 },
 "metpy.plots.skewt.SkewXTick.grid_in_bounds": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "matplotlib.transforms.interval_contains",
    "property"
   ]
  },
  "type": "function"
 },
 "metpy.plots.skewt.SkewXTick.lower_in_bounds": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "matplotlib.transforms.interval_contains",
    "property"
   ]
  },
  "type": "function"
 },
 "metpy.plots.skewt.SkewXTick.upper_in_bounds": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "matplotlib.transforms.interval_contains",
    "property"
   ]
  },
  "type": "function"
 },
 "metpy.plots.skewt.exporter": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "metpy.plots.skewt.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "metpy.plots.skewt.maxis": {
  "data": {
   "shadows": "matplotlib.axis"
  },
  "type": "import"
 },
 "metpy.plots.skewt.mcolors": {
  "data": {
   "shadows": "matplotlib.colors"
  },
  "type": "import"
 },
 "metpy.plots.skewt.mspines": {
  "data": {
   "shadows": "matplotlib.spines"
  },
  "type": "import"
 },
 "metpy.plots.skewt.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "metpy.plots.skewt.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "metpy.plots.skewt.register_projection": {
  "data": {
   "shadows": "matplotlib.projections.register_projection"
  },
  "type": "import"
 },
 "metpy.plots.skewt.transforms": {
  "data": {
   "shadows": "matplotlib.transforms"
  },
  "type": "import"
 },
 "metpy.plots.skewt.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "metpy.plots.station_plot": {
  "data": {
   "symbols_in_volume": [
    "Exporter",
    "abs",
    "format",
    "globals",
    "metpy.plots.station_plot.StationPlotLayout",
    "metpy.plots.station_plot.exporter",
    "metpy.plots.station_plot.nws_layout",
    "metpy.plots.station_plot.simple_layout"
   ]
  },
  "type": "module"
 },
 "metpy.plots.station_plot.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "metpy.plots.station_plot.StationPlot": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "metpy.plots.station_plot.exporter",
    "object"
   ]
  },
  "type": "class"
 },
 "metpy.plots.station_plot.StationPlot.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "atleast_1d"
   ]
  },
  "type": "function"
 },
 "metpy.plots.station_plot.StationPlot._handle_location": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "metpy.plots.station_plot.StationPlot._make_kwargs": {
  "data": {
   "lineno": 335
  },
  "type": "function"
 },
 "metpy.plots.station_plot.StationPlot._plotting_units": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "numpy.array",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "metpy.plots.station_plot.StationPlot._to_string_list": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "callable",
    "formatter",
    "numpy.isfinite",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "metpy.plots.station_plot.StationPlot._to_string_list.formatter": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "format",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "metpy.plots.station_plot.StationPlot.plot_arrow": {
  "data": {
   "lineno": 280
  },
  "type": "function"
 },
 "metpy.plots.station_plot.StationPlot.plot_barb": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "metpy.plots.station_plot.StationPlot.plot_parameter": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "metpy.plots.station_plot.StationPlot.plot_symbol": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "metpy.plots.station_plot.StationPlot.plot_text": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "metpy.plots.station_plot.StationPlotLayout": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "dict",
    "metpy.plots.station_plot.exporter"
   ]
  },
  "type": "class"
 },
 "metpy.plots.station_plot.StationPlotLayout.PlotTypes": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "metpy.plots.station_plot.StationPlotLayout.__repr__": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "metpy.plots.station_plot.StationPlotLayout.add_barb": {
  "data": {
   "lineno": 497
  },
  "type": "function"
 },
 "metpy.plots.station_plot.StationPlotLayout.add_symbol": {
  "data": {
   "lineno": 435
  },
  "type": "function"
 },
 "metpy.plots.station_plot.StationPlotLayout.add_text": {
  "data": {
   "lineno": 468
  },
  "type": "function"
 },
 "metpy.plots.station_plot.StationPlotLayout.add_value": {
  "data": {
   "lineno": 397
  },
  "type": "function"
 },
 "metpy.plots.station_plot.StationPlotLayout.names": {
  "data": {
   "lineno": 532
  },
  "type": "function"
 },
 "metpy.plots.station_plot.StationPlotLayout.plot": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "coerce_data"
   ]
  },
  "type": "function"
 },
 "metpy.plots.station_plot.StationPlotLayout.plot.coerce_data": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "metpy.plots.station_plot.exporter": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "metpy.plots.station_plot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "metpy.plots.station_plot.nws_layout": {
  "data": {
   "lineno": 621
  },
  "type": "constant"
 },
 "metpy.plots.station_plot.simple_layout": {
  "data": {
   "lineno": 609
  },
  "type": "constant"
 },
 "metpy.plots.wx_symbols": {
  "data": {
   "symbols_in_volume": [
    "Exporter",
    "globals",
    "matplotlib.font_manager.FontProperties",
    "metpy.plots.wx_symbols.CodePointMapping",
    "metpy.plots.wx_symbols.exporter",
    "pkg_resources.resource_filename"
   ]
  },
  "type": "module"
 },
 "metpy.plots.wx_symbols.CodePointMapping": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "metpy.plots.wx_symbols.CodePointMapping.__call__": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "metpy.plots.wx_symbols.CodePointMapping.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "chr"
   ]
  },
  "type": "function"
 },
 "metpy.plots.wx_symbols.CodePointMapping.__len__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "metpy.plots.wx_symbols.CodePointMapping._safe_pop": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "metpy.plots.wx_symbols.CodePointMapping.alt_char": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "chr",
    "ord",
    "self"
   ]
  },
  "type": "function"
 },
 "metpy.plots.wx_symbols.current_weather": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "metpy.plots.wx_symbols.current_weather_auto": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "metpy.plots.wx_symbols.exporter": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "metpy.plots.wx_symbols.fm": {
  "data": {
   "shadows": "matplotlib.font_manager"
  },
  "type": "import"
 },
 "metpy.plots.wx_symbols.high_clouds": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "metpy.plots.wx_symbols.low_clouds": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "metpy.plots.wx_symbols.mid_clouds": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "metpy.plots.wx_symbols.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "metpy.plots.wx_symbols.pressure_tendency": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "metpy.plots.wx_symbols.resource_filename": {
  "data": {
   "shadows": "pkg_resources.resource_filename"
  },
  "type": "import"
 },
 "metpy.plots.wx_symbols.sky_cover": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "metpy.plots.wx_symbols.wx_code_map": {
  "data": {
   "lineno": 186
  },
  "type": "constant"
 },
 "metpy.plots.wx_symbols.wx_code_to_numeric": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "KeyError",
    "metpy.plots.wx_symbols.exporter",
    "numpy.array",
    "slice"
   ]
  },
  "type": "function"
 },
 "metpy.plots.wx_symbols.wx_symbol_font": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "metpy.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "metpy.testing": {
  "data": {
   "symbols_in_volume": [
    "metpy.deprecation.MetpyDeprecationWarning",
    "metpy.testing.check_and_silence_warning"
   ]
  },
  "type": "module"
 },
 "metpy.testing.DimensionalityError": {
  "data": {
   "shadows": "pint.DimensionalityError"
  },
  "type": "import"
 },
 "metpy.testing.MetpyDeprecationWarning": {
  "data": {
   "shadows": "metpy.deprecation.MetpyDeprecationWarning"
  },
  "type": "import"
 },
 "metpy.testing.assert_almost_equal": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "metpy.testing.check_and_drop_units",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "metpy.testing.assert_array_almost_equal": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "metpy.testing.check_and_drop_units",
    "metpy.testing.check_mask",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "metpy.testing.assert_array_equal": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "metpy.testing.check_and_drop_units",
    "metpy.testing.check_mask",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "metpy.testing.assert_nan": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "metpy.testing.check_and_drop_units",
    "numpy.isnan",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "metpy.testing.assert_xarray_allclose": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "xarray.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "metpy.testing.check_and_drop_units": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "AssertionError",
    "AttributeError",
    "getattr",
    "hasattr",
    "pint.DimensionalityError"
   ]
  },
  "type": "function"
 },
 "metpy.testing.check_and_silence_deprecation": {
  "data": {
   "lineno": 226
  },
  "type": "constant"
 },
 "metpy.testing.check_and_silence_warning": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "metpy.testing.check_and_silence_warning.dec": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "metpy.testing.check_and_silence_warning.dec.wrapper": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "func",
    "metpy.testing.functools",
    "metpy.testing.pytest"
   ]
  },
  "type": "function"
 },
 "metpy.testing.check_mask": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "getattr",
    "numpy.asarray",
    "numpy.full",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "metpy.testing.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "metpy.testing.get_test_data": {
  "data": {
   "shadows": "metpy.cbook.get_test_data"
  },
  "type": "import"
 },
 "metpy.testing.get_upper_air_data": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "any",
    "metpy.calc.wind_components",
    "metpy.cbook.get_test_data",
    "numpy.array",
    "numpy.invert",
    "numpy.isnan",
    "range",
    "to_float"
   ]
  },
  "type": "function"
 },
 "metpy.testing.get_upper_air_data.to_float": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "metpy.testing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "metpy.testing.numpy.testing": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "metpy.testing.patch_round": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "metpy.testing.pytest",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "metpy.testing.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "metpy.testing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "metpy.testing.set_agg_backend": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "matplotlib.pyplot.get_backend",
    "matplotlib.pyplot.switch_backend",
    "metpy.testing.pytest"
   ]
  },
  "type": "function"
 },
 "metpy.testing.wind_components": {
  "data": {
   "shadows": "metpy.calc.wind_components"
  },
  "type": "import"
 },
 "metpy.testing.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "metpy.units": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "RuntimeError",
    "__name__",
    "hasattr",
    "matplotlib.units",
    "matplotlib.units.registry",
    "metpy.units.PintConverter",
    "metpy.units.log",
    "metpy.units.logging",
    "metpy.units.pint",
    "metpy.units.units",
    "metpy.units.warnings"
   ]
  },
  "type": "module"
 },
 "metpy.units.DimensionalityError": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "metpy.units.Parameter": {
  "data": {
   "shadows": "inspect.Parameter"
  },
  "type": "import"
 },
 "metpy.units.PintAxisInfo": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "matplotlib.units.AxisInfo"
   ]
  },
  "type": "class"
 },
 "metpy.units.PintAxisInfo.__init__": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "metpy.units.units",
    "super"
   ]
  },
  "type": "function"
 },
 "metpy.units.PintConverter": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "matplotlib.units.ConversionInterface"
   ]
  },
  "type": "class"
 },
 "metpy.units.PintConverter.__init__": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "metpy.units.PintConverter._convert_value": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "metpy.units.PintConverter.axisinfo": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "metpy.units.PintAxisInfo",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "metpy.units.PintConverter.convert": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "metpy.units.PintConverter.default_units": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "list",
    "staticmethod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "metpy.units.UndefinedUnitError": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "metpy.units._check_argument_units": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError"
   ]
  },
  "type": "function"
 },
 "metpy.units.atleast_1d": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "metpy.units.units",
    "numpy.atleast_1d",
    "zip"
   ]
  },
  "type": "function"
 },
 "metpy.units.atleast_2d": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "metpy.units.units",
    "numpy.atleast_2d",
    "zip"
   ]
  },
  "type": "function"
 },
 "metpy.units.check_units": {
  "data": {
   "lineno": 285
  },
  "type": "function"
 },
 "metpy.units.check_units.dec": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "inspect.Parameter.empty",
    "inspect.signature",
    "metpy.units.units"
   ]
  },
  "type": "function"
 },
 "metpy.units.check_units.dec.wrapper": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "ValueError",
    "func",
    "list",
    "metpy.units._check_argument_units",
    "metpy.units.functools"
   ]
  },
  "type": "function"
 },
 "metpy.units.concatenate": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "hasattr",
    "metpy.units.units",
    "numpy.any",
    "numpy.asarray",
    "numpy.atleast_1d",
    "numpy.ma.concatenate"
   ]
  },
  "type": "function"
 },
 "metpy.units.diff": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "hasattr",
    "next",
    "numpy.diff"
   ]
  },
  "type": "function"
 },
 "metpy.units.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "metpy.units.log": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "metpy.units.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "metpy.units.masked_array": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "metpy.units.units",
    "numpy.ma.masked_array"
   ]
  },
  "type": "function"
 },
 "metpy.units.munits": {
  "data": {
   "shadows": "matplotlib.units"
  },
  "type": "import"
 },
 "metpy.units.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "metpy.units.pandas_dataframe_to_unit_arrays": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "metpy.units.units"
   ]
  },
  "type": "function"
 },
 "metpy.units.pint": {
  "data": {
   "shadows": "pint"
  },
  "type": "import"
 },
 "metpy.units.pint.unit": {
  "data": {
   "shadows": "pint.unit"
  },
  "type": "import"
 },
 "metpy.units.signature": {
  "data": {
   "shadows": "inspect.signature"
  },
  "type": "import"
 },
 "metpy.units.units": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "metpy.units.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "metpy.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "metpy.xarray": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "hasattr",
    "metpy.xarray.logging",
    "metpy.xarray.strftime",
    "xarray.core.accessors.DatetimeAccessor",
    "xarray.core.accessors.DatetimeAccessor.strftime"
   ]
  },
  "type": "module"
 },
 "metpy.xarray.DatetimeAccessor": {
  "data": {
   "shadows": "xarray.core.accessors.DatetimeAccessor"
  },
  "type": "import"
 },
 "metpy.xarray.MetPyDataArrayAccessor": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "xarray.register_dataarray_accessor"
   ]
  },
  "type": "class"
 },
 "metpy.xarray.MetPyDataArrayAccessor._LocIndexer": {
  "data": {
   "lineno": 425
  },
  "type": "class"
 },
 "metpy.xarray.MetPyDataArrayAccessor._LocIndexer.__getitem__": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "_reassign_quantity_indexer"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDataArrayAccessor._LocIndexer.__init__": {
  "data": {
   "lineno": 428
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDataArrayAccessor._LocIndexer.__setitem__": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "_reassign_quantity_indexer"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDataArrayAccessor._LocIndexer.expand": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "dict",
    "expanded_indexer",
    "is_dict_like",
    "zip"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDataArrayAccessor.__init__": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDataArrayAccessor._axis": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "AttributeError",
    "metpy.xarray.metpy_axes"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDataArrayAccessor._fixup_coordinate_map": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "any",
    "isinstance",
    "metpy.xarray.cf_to_metpy_axes",
    "metpy.xarray.warnings",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDataArrayAccessor._generate_coordinate_map": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "check_axis",
    "len"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDataArrayAccessor._metpy_axis_search": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "_assign_axis",
    "any",
    "metpy.xarray.warnings"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDataArrayAccessor._resolve_axis_duplicates": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "len",
    "metpy.xarray.warnings"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDataArrayAccessor.as_timestamp": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "metpy.xarray.warnings",
    "set",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDataArrayAccessor.assign_coordinates": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "_assign_axis"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDataArrayAccessor.cartopy_crs": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDataArrayAccessor.cartopy_globe": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDataArrayAccessor.convert_units": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "units"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDataArrayAccessor.coordinates": {
  "data": {
   "lineno": 294
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDataArrayAccessor.coordinates_identical": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDataArrayAccessor.crs": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDataArrayAccessor.find_axis_name": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "metpy.xarray.metpy_axes"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDataArrayAccessor.latitude": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDataArrayAccessor.loc": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDataArrayAccessor.longitude": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDataArrayAccessor.sel": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "_reassign_quantity_indexer",
    "either_dict_or_kwargs"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDataArrayAccessor.time": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDataArrayAccessor.time_deltas": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "numpy.diff",
    "property",
    "units.s"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDataArrayAccessor.unit_array": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDataArrayAccessor.units": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "property",
    "units"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDataArrayAccessor.vertical": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDataArrayAccessor.x": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDataArrayAccessor.y": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDatasetAccessor": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "xarray.register_dataset_accessor"
   ]
  },
  "type": "class"
 },
 "metpy.xarray.MetPyDatasetAccessor._LocIndexer": {
  "data": {
   "lineno": 558
  },
  "type": "class"
 },
 "metpy.xarray.MetPyDatasetAccessor._LocIndexer.__getitem__": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "_reassign_quantity_indexer"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDatasetAccessor._LocIndexer.__init__": {
  "data": {
   "lineno": 561
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDatasetAccessor.__init__": {
  "data": {
   "lineno": 472
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDatasetAccessor._fixup_coords": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "check_axis",
    "units.meters"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDatasetAccessor.loc": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDatasetAccessor.parse_cf": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "CFProjection",
    "KeyError",
    "check_axis",
    "isinstance",
    "iterable",
    "list",
    "metpy.xarray.log",
    "str",
    "xarray.merge"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.MetPyDatasetAccessor.sel": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "_reassign_quantity_indexer",
    "either_dict_or_kwargs"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.__all__": {
  "data": {
   "lineno": 722
  },
  "type": "constant"
 },
 "metpy.xarray._assign_axis": {
  "data": {
   "lineno": 580
  },
  "type": "function"
 },
 "metpy.xarray._reassign_quantity_indexer": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "_to_magnitude",
    "isinstance",
    "metpy.xarray.metpy_axes",
    "next",
    "slice",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "metpy.xarray._reassign_quantity_indexer._to_magnitude": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.cf_to_metpy_axes": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "metpy.xarray.check_axis": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "metpy.xarray.coordinate_criteria",
    "metpy.xarray.re",
    "set",
    "units.get_dimensionality"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.check_matching_coordinates": {
  "data": {
   "lineno": 659
  },
  "type": "function"
 },
 "metpy.xarray.check_matching_coordinates.wrapper": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "ValueError",
    "func",
    "isinstance",
    "len",
    "metpy.xarray.functools",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.coordinate_criteria": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "metpy.xarray.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "metpy.xarray.log": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "metpy.xarray.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "metpy.xarray.metpy_axes": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "metpy.xarray.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "metpy.xarray.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "metpy.xarray.preprocess_xarray": {
  "data": {
   "lineno": 645
  },
  "type": "function"
 },
 "metpy.xarray.preprocess_xarray.wrapper": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "func",
    "isinstance",
    "metpy.xarray.functools",
    "tuple",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "metpy.xarray.strftime": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "metpy.xarray.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "metpy.xarray.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 }
}