{
 "networkx": {
  "lineno": null,
  "symbols_in_volume": [
   "networkx.release.authors",
   "networkx.release.date",
   "networkx.release.license",
   "networkx.release.version",
   "sys",
   "sys.version_info"
  ],
  "type": "module"
 },
 "networkx.algorithms": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.approximation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.approximation.clique": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.approximation.clique.clique_removal": {
  "lineno": 61,
  "symbols_in_volume": [
   "networkx.algorithms.approximation.ramsey.ramsey_R2"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.clique.max_clique": {
  "lineno": 14,
  "symbols_in_volume": [
   "networkx.complement"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.clustering_coefficient": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.approximation.clustering_coefficient.average_clustering": {
  "lineno": 14,
  "symbols_in_volume": [
   "networkx.utils.not_implemented_for",
   "random.random",
   "random.sample"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.connectivity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.approximation.connectivity._bidirectional_pred_succ": {
  "lineno": 348,
  "symbols_in_volume": [
   "networkx.NetworkXException",
   "networkx.NetworkXNoPath"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.connectivity._bidirectional_shortest_path": {
  "lineno": 285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.approximation.connectivity.all_pairs_node_connectivity": {
  "lineno": 220,
  "symbols_in_volume": [
   "itertools.combinations",
   "itertools.permutations"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.connectivity.local_node_connectivity": {
  "lineno": 21,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.NetworkXNoPath"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.connectivity.node_connectivity": {
  "lineno": 116,
  "symbols_in_volume": [
   "itertools.combinations",
   "itertools.permutations",
   "networkx.NetworkXError",
   "networkx.is_connected",
   "networkx.is_weakly_connected",
   "operator.itemgetter"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.connectivity.node_connectivity.neighbors": {
  "lineno": 194,
  "symbols_in_volume": [
   "itertools.chain.from_iterable"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.dominating_set": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.approximation.dominating_set.min_edge_dominating_set": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.approximation.dominating_set.min_weighted_dominating_set": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.approximation.dominating_set.min_weighted_dominating_set._cost": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.approximation.independent_set": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.approximation.independent_set.maximum_independent_set": {
  "lineno": 38,
  "symbols_in_volume": [
   "networkx.algorithms.approximation.clique_removal"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.kcomponents": {
  "lineno": null,
  "symbols_in_volume": [
   "networkx.utils.not_implemented_for"
  ],
  "type": "module"
 },
 "networkx.algorithms.approximation.kcomponents._AntiGraph": {
  "lineno": 202,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "class"
 },
 "networkx.algorithms.approximation.kcomponents._AntiGraph.__getitem__": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.approximation.kcomponents._AntiGraph.adjacency_iter": {
  "lineno": 335,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.approximation.kcomponents._AntiGraph.degree": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.approximation.kcomponents._AntiGraph.degree_iter": {
  "lineno": 282,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.approximation.kcomponents._AntiGraph.neighbors": {
  "lineno": 239,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.kcomponents._AntiGraph.neighbors_iter": {
  "lineno": 264,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.kcomponents._AntiGraph.single_edge_dict": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.approximation.kcomponents._cliques_heuristic": {
  "lineno": 165,
  "symbols_in_volume": [
   "networkx.core_number",
   "networkx.density",
   "networkx.k_core"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.kcomponents._same": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.approximation.kcomponents.k_components": {
  "lineno": 27,
  "symbols_in_volume": [
   "collections.defaultdict",
   "itertools.combinations",
   "networkx.algorithms.connectivity.local_node_connectivity",
   "networkx.biconnected_components",
   "networkx.connected_components",
   "networkx.core_number",
   "networkx.density",
   "networkx.k_core"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.matching": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.approximation.matching.min_maximal_matching": {
  "lineno": 20,
  "symbols_in_volume": [
   "networkx.maximal_matching"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.ramsey": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.approximation.ramsey.ramsey_R2": {
  "lineno": 13,
  "symbols_in_volume": [
   "networkx.all_neighbors",
   "networkx.non_neighbors"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_approx_clust_coeff": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.approximation.tests.test_approx_clust_coeff.test_complete": {
  "lineno": 29,
  "symbols_in_volume": [
   "networkx.algorithms.approximation.average_clustering",
   "networkx.complete_graph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_approx_clust_coeff.test_dodecahedral": {
  "lineno": 19,
  "symbols_in_volume": [
   "networkx.algorithms.approximation.average_clustering",
   "networkx.average_clustering",
   "networkx.dodecahedral_graph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_approx_clust_coeff.test_empty": {
  "lineno": 25,
  "symbols_in_volume": [
   "networkx.algorithms.approximation.average_clustering",
   "networkx.empty_graph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_approx_clust_coeff.test_petersen": {
  "lineno": 7,
  "symbols_in_volume": [
   "networkx.algorithms.approximation.average_clustering",
   "networkx.average_clustering",
   "networkx.petersen_graph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_approx_clust_coeff.test_tetrahedral": {
  "lineno": 13,
  "symbols_in_volume": [
   "networkx.algorithms.approximation.average_clustering",
   "networkx.average_clustering",
   "networkx.tetrahedral_graph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_clique": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.approximation.tests.test_clique.test_clique_removal": {
  "lineno": 5,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.algorithms.approximation.clique_removal",
   "networkx.barbell_graph",
   "networkx.complete_graph",
   "networkx.density",
   "networkx.trivial_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_clique.test_max_clique": {
  "lineno": 36,
  "symbols_in_volume": [
   "networkx.algorithms.approximation.max_clique",
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_clique.test_max_clique_smoke": {
  "lineno": 31,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.algorithms.approximation.max_clique"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_connectivity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.approximation.tests.test_connectivity.TestAllPairsNodeConnectivityApprox": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.approximation.tests.test_connectivity.TestAllPairsNodeConnectivityApprox.setUp": {
  "lineno": 103,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.complete_graph",
   "networkx.cycle_graph",
   "networkx.gnp_random_graph",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_connectivity.TestAllPairsNodeConnectivityApprox.test_all_pairs_connectivity_nbunch": {
  "lineno": 155,
  "symbols_in_volume": [
   "networkx.algorithms.approximation.all_pairs_node_connectivity",
   "networkx.complete_graph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_connectivity.TestAllPairsNodeConnectivityApprox.test_complete": {
  "lineno": 127,
  "symbols_in_volume": [
   "networkx.algorithms.approximation.all_pairs_node_connectivity",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_connectivity.TestAllPairsNodeConnectivityApprox.test_cutoff": {
  "lineno": 147,
  "symbols_in_volume": [
   "networkx.algorithms.approximation.all_pairs_node_connectivity",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_connectivity.TestAllPairsNodeConnectivityApprox.test_cycles": {
  "lineno": 117,
  "symbols_in_volume": [
   "networkx.algorithms.approximation.all_pairs_node_connectivity",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_connectivity.TestAllPairsNodeConnectivityApprox.test_paths": {
  "lineno": 134,
  "symbols_in_volume": [
   "networkx.algorithms.approximation.all_pairs_node_connectivity",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_connectivity.test_complete_graphs": {
  "lineno": 32,
  "symbols_in_volume": [
   "networkx.algorithms.approximation.node_connectivity",
   "networkx.complete_graph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_connectivity.test_directed_node_connectivity": {
  "lineno": 92,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.algorithms.approximation.node_connectivity",
   "networkx.cycle_graph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_connectivity.test_dodecahedral": {
  "lineno": 54,
  "symbols_in_volume": [
   "networkx.algorithms.approximation.node_connectivity",
   "networkx.dodecahedral_graph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_connectivity.test_empty_graphs": {
  "lineno": 38,
  "symbols_in_volume": [
   "networkx.algorithms.approximation.node_connectivity",
   "networkx.empty_graph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_connectivity.test_global_node_connectivity": {
  "lineno": 8,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.algorithms.approximation.local_node_connectivity",
   "networkx.algorithms.approximation.node_connectivity",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_connectivity.test_missing_source": {
  "lineno": 79,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.algorithms.approximation.node_connectivity",
   "networkx.path_graph",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_connectivity.test_missing_target": {
  "lineno": 83,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.algorithms.approximation.node_connectivity",
   "networkx.path_graph",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_connectivity.test_octahedral": {
  "lineno": 59,
  "symbols_in_volume": [
   "networkx.algorithms.approximation.node_connectivity",
   "networkx.octahedral_graph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_connectivity.test_only_source": {
  "lineno": 71,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.algorithms.approximation.node_connectivity",
   "networkx.complete_graph",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_connectivity.test_only_target": {
  "lineno": 75,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.algorithms.approximation.node_connectivity",
   "networkx.complete_graph",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_connectivity.test_petersen": {
  "lineno": 44,
  "symbols_in_volume": [
   "networkx.algorithms.approximation.node_connectivity",
   "networkx.petersen_graph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_connectivity.test_source_equals_target": {
  "lineno": 87,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.algorithms.approximation.local_node_connectivity",
   "networkx.complete_graph",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_connectivity.test_white_harary1": {
  "lineno": 18,
  "symbols_in_volume": [
   "networkx.algorithms.approximation.node_connectivity",
   "networkx.complete_graph",
   "networkx.disjoint_union",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_dominating_set": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.approximation.tests.test_dominating_set.TestMinWeightDominatingSet": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.approximation.tests.test_dominating_set.TestMinWeightDominatingSet.test_min_edge_dominating_set": {
  "lineno": 42,
  "symbols_in_volume": [
   "networkx.algorithms.approximation.min_edge_dominating_set",
   "networkx.complete_graph",
   "networkx.path_graph",
   "nose.tools.ok_"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_dominating_set.TestMinWeightDominatingSet.test_min_weighted_dominating_set": {
  "lineno": 11,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.algorithms.approximation.min_weighted_dominating_set",
   "nose.tools.ok_"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_dominating_set.TestMinWeightDominatingSet.test_star_graph": {
  "lineno": 28,
  "symbols_in_volume": [
   "networkx.algorithms.approximation.min_weighted_dominating_set",
   "networkx.relabel_nodes",
   "networkx.star_graph",
   "nose.tools.eq_"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_independent_set": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.approximation.tests.test_independent_set.test_independent_set": {
  "lineno": 5,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.algorithms.approximation.maximum_independent_set"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_kcomponents": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.approximation.tests.test_kcomponents.TestAntiGraph": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.approximation.tests.test_kcomponents.TestAntiGraph.setUp": {
  "lineno": 195,
  "symbols_in_volume": [
   "networkx.algorithms.approximation.kcomponents._AntiGraph",
   "networkx.complement",
   "networkx.davis_southern_women_graph",
   "networkx.gnp_random_graph",
   "networkx.karate_club_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_kcomponents.TestAntiGraph.test_adjacency_iter": {
  "lineno": 227,
  "symbols_in_volume": [
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_kcomponents.TestAntiGraph.test_connected_components": {
  "lineno": 220,
  "symbols_in_volume": [
   "networkx.connected_components",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_kcomponents.TestAntiGraph.test_core_number": {
  "lineno": 216,
  "symbols_in_volume": [
   "networkx.core_number",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_kcomponents.TestAntiGraph.test_degree": {
  "lineno": 246,
  "symbols_in_volume": [
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_kcomponents.TestAntiGraph.test_neighbors": {
  "lineno": 233,
  "symbols_in_volume": [
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_kcomponents.TestAntiGraph.test_node_not_in_graph": {
  "lineno": 238,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_kcomponents.TestAntiGraph.test_size": {
  "lineno": 206,
  "symbols_in_volume": [
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_kcomponents._check_connectivity": {
  "lineno": 117,
  "symbols_in_volume": [
   "networkx.algorithms.approximation.k_components",
   "networkx.node_connectivity",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_kcomponents.build_k_number_dict": {
  "lineno": 8,
  "symbols_in_volume": [
   "networkx.algorithms.approximation.k_components.items"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_kcomponents.graph_example_1": {
  "lineno": 19,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.convert_node_labels_to_integers",
   "networkx.disjoint_union",
   "networkx.get_node_attributes",
   "networkx.grid_graph",
   "networkx.petersen_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_kcomponents.test_directed": {
  "lineno": 178,
  "symbols_in_volume": [
   "networkx.NetworkXNotImplemented",
   "networkx.algorithms.approximation.k_components",
   "networkx.gnp_random_graph",
   "nose.tools.raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_kcomponents.test_example_1": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_kcomponents.test_example_1_detail_3_and_4": {
  "lineno": 149,
  "symbols_in_volume": [
   "networkx.algorithms.approximation.k_components",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_kcomponents.test_karate_0": {
  "lineno": 135,
  "symbols_in_volume": [
   "networkx.karate_club_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_kcomponents.test_karate_1": {
  "lineno": 139,
  "symbols_in_volume": [
   "networkx.algorithms.approximation.k_components",
   "networkx.karate_club_graph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_kcomponents.test_same": {
  "lineno": 183,
  "symbols_in_volume": [
   "networkx.algorithms.approximation.kcomponents._same",
   "nose.tools.assert_false",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_kcomponents.test_torrents_and_ferraro_graph": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_kcomponents.torrents_and_ferraro_graph": {
  "lineno": 54,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.convert_node_labels_to_integers",
   "networkx.disjoint_union",
   "networkx.get_node_attributes",
   "networkx.grid_graph",
   "networkx.petersen_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_matching": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.approximation.tests.test_matching.test_min_maximal_matching": {
  "lineno": 5,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.algorithms.approximation.min_maximal_matching"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_ramsey": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.approximation.tests.test_ramsey.test_ramsey": {
  "lineno": 5,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.algorithms.approximation.ramsey_R2",
   "networkx.barbell_graph",
   "networkx.complete_graph",
   "networkx.density",
   "networkx.trivial_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.tests.test_vertex_cover": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.approximation.tests.test_vertex_cover.TestMWVC": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.approximation.tests.test_vertex_cover.TestMWVC.test_min_vertex_cover": {
  "lineno": 8,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.algorithms.approximation.min_weighted_vertex_cover",
   "networkx.star_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.approximation.vertex_cover": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.approximation.vertex_cover.min_weighted_vertex_cover": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.assortativity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.assortativity.connectivity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.assortativity.connectivity._avg_deg_conn": {
  "lineno": 14,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.connectivity.average_degree_connectivity": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.assortativity.correlation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.assortativity.correlation.attribute_ac": {
  "lineno": 233,
  "symbols_in_volume": [
   "numpy.asmatrix"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.correlation.attribute_assortativity_coefficient": {
  "lineno": 142,
  "symbols_in_volume": [
   "networkx.algorithms.assortativity.mixing.attribute_mixing_matrix"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.correlation.degree_assortativity_coefficient": {
  "lineno": 16,
  "symbols_in_volume": [
   "networkx.algorithms.assortativity.mixing.degree_mixing_matrix"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.correlation.degree_pearson_correlation_coefficient": {
  "lineno": 80,
  "symbols_in_volume": [
   "networkx.algorithms.assortativity.pairs.node_degree_xy",
   "scipy.stats.pearsonr"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.correlation.numeric_ac": {
  "lineno": 266,
  "symbols_in_volume": [
   "networkx",
   "numpy.arange",
   "numpy.outer",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.correlation.numeric_assortativity_coefficient": {
  "lineno": 188,
  "symbols_in_volume": [
   "networkx.algorithms.assortativity.mixing.numeric_mixing_matrix"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.correlation.setup_module": {
  "lineno": 289,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.mixing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.assortativity.mixing.attribute_mixing_dict": {
  "lineno": 17,
  "symbols_in_volume": [
   "networkx.algorithms.assortativity.pairs.node_attribute_xy"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.mixing.attribute_mixing_matrix": {
  "lineno": 55,
  "symbols_in_volume": [
   "networkx.utils.dict_to_numpy_array"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.mixing.degree_mixing_dict": {
  "lineno": 90,
  "symbols_in_volume": [
   "networkx.algorithms.assortativity.pairs.node_degree_xy"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.mixing.degree_mixing_matrix": {
  "lineno": 123,
  "symbols_in_volume": [
   "networkx.utils.dict_to_numpy_array"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.mixing.mixing_dict": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.assortativity.mixing.numeric_mixing_matrix": {
  "lineno": 166,
  "symbols_in_volume": [
   "networkx.utils.dict_to_numpy_array"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.mixing.setup_module": {
  "lineno": 239,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.neighbor_degree": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.assortativity.neighbor_degree._average_nbr_deg": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.assortativity.neighbor_degree.average_neighbor_degree": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.assortativity.pairs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.assortativity.pairs.node_attribute_xy": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.assortativity.pairs.node_degree_xy": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.assortativity.pairs.setup_module": {
  "lineno": 125,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.base_test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.assortativity.tests.base_test.BaseTestAttributeMixing": {
  "lineno": 3,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.assortativity.tests.base_test.BaseTestAttributeMixing.setUp": {
  "lineno": 5,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.MultiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.base_test.BaseTestDegreeMixing": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.assortativity.tests.base_test.BaseTestDegreeMixing.setUp": {
  "lineno": 41,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.MultiGraph",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_connectivity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.assortativity.tests.test_connectivity.TestNeighborConnectivity": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.assortativity.tests.test_connectivity.TestNeighborConnectivity.test_degree_barrat": {
  "lineno": 79,
  "symbols_in_volume": [
   "networkx.average_degree_connectivity",
   "networkx.k_nearest_neighbors",
   "networkx.star_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_connectivity.TestNeighborConnectivity.test_degree_p4": {
  "lineno": 7,
  "symbols_in_volume": [
   "networkx.average_degree_connectivity",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_connectivity.TestNeighborConnectivity.test_degree_p4_weighted": {
  "lineno": 27,
  "symbols_in_volume": [
   "networkx.average_degree_connectivity",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_connectivity.TestNeighborConnectivity.test_in_out_weight": {
  "lineno": 111,
  "symbols_in_volume": [
   "itertools.permutations",
   "networkx.DiGraph",
   "networkx.average_degree_connectivity"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_connectivity.TestNeighborConnectivity.test_weight_keyword": {
  "lineno": 53,
  "symbols_in_volume": [
   "networkx.average_degree_connectivity",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_connectivity.TestNeighborConnectivity.test_zero_deg": {
  "lineno": 90,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.average_degree_connectivity"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_correlation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.assortativity.tests.test_correlation.TestAttributeMixingCorrelation": {
  "lineno": 54,
  "symbols_in_volume": [
   "base_test.BaseTestAttributeMixing"
  ],
  "type": "class"
 },
 "networkx.algorithms.assortativity.tests.test_correlation.TestAttributeMixingCorrelation.setupClass": {
  "lineno": 55,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_correlation.TestAttributeMixingCorrelation.test_attribute_assortativity": {
  "lineno": 97,
  "symbols_in_volume": [
   "networkx.algorithms.assortativity.correlation.attribute_ac",
   "numpy.array",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_correlation.TestAttributeMixingCorrelation.test_attribute_assortativity_coefficient": {
  "lineno": 79,
  "symbols_in_volume": [
   "networkx.algorithms.assortativity.correlation.attribute_ac",
   "numpy.array",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_correlation.TestAttributeMixingCorrelation.test_attribute_assortativity_coefficient2": {
  "lineno": 88,
  "symbols_in_volume": [
   "networkx.algorithms.assortativity.correlation.attribute_ac",
   "numpy.array",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_correlation.TestAttributeMixingCorrelation.test_attribute_assortativity_directed": {
  "lineno": 71,
  "symbols_in_volume": [
   "networkx.attribute_assortativity_coefficient"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_correlation.TestAttributeMixingCorrelation.test_attribute_assortativity_multigraph": {
  "lineno": 75,
  "symbols_in_volume": [
   "networkx.attribute_assortativity_coefficient"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_correlation.TestAttributeMixingCorrelation.test_attribute_assortativity_undirected": {
  "lineno": 67,
  "symbols_in_volume": [
   "networkx.attribute_assortativity_coefficient"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_correlation.TestDegreeMixingCorrelation": {
  "lineno": 9,
  "symbols_in_volume": [
   "base_test.BaseTestDegreeMixing"
  ],
  "type": "class"
 },
 "networkx.algorithms.assortativity.tests.test_correlation.TestDegreeMixingCorrelation.setupClass": {
  "lineno": 10,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_correlation.TestDegreeMixingCorrelation.test_degree_assortativity_directed": {
  "lineno": 44,
  "symbols_in_volume": [
   "networkx.degree_pearson_correlation_coefficient",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_correlation.TestDegreeMixingCorrelation.test_degree_assortativity_multigraph": {
  "lineno": 48,
  "symbols_in_volume": [
   "networkx.degree_pearson_correlation_coefficient",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_correlation.TestDegreeMixingCorrelation.test_degree_assortativity_undirected": {
  "lineno": 40,
  "symbols_in_volume": [
   "networkx.degree_pearson_correlation_coefficient",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_mixing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.assortativity.tests.test_mixing.TestAttributeMixingDict": {
  "lineno": 100,
  "symbols_in_volume": [
   "base_test.BaseTestAttributeMixing"
  ],
  "type": "class"
 },
 "networkx.algorithms.assortativity.tests.test_mixing.TestAttributeMixingDict.test_attribute_mixing_dict_directed": {
  "lineno": 111,
  "symbols_in_volume": [
   "networkx.attribute_mixing_dict"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_mixing.TestAttributeMixingDict.test_attribute_mixing_dict_multigraph": {
  "lineno": 121,
  "symbols_in_volume": [
   "networkx.attribute_mixing_dict"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_mixing.TestAttributeMixingDict.test_attribute_mixing_dict_undirected": {
  "lineno": 102,
  "symbols_in_volume": [
   "networkx.attribute_mixing_dict"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_mixing.TestAttributeMixingMatrix": {
  "lineno": 130,
  "symbols_in_volume": [
   "base_test.BaseTestAttributeMixing"
  ],
  "type": "class"
 },
 "networkx.algorithms.assortativity.tests.test_mixing.TestAttributeMixingMatrix.setupClass": {
  "lineno": 131,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_mixing.TestAttributeMixingMatrix.test_attribute_mixing_matrix_directed": {
  "lineno": 157,
  "symbols_in_volume": [
   "networkx.attribute_mixing_matrix",
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_mixing.TestAttributeMixingMatrix.test_attribute_mixing_matrix_multigraph": {
  "lineno": 172,
  "symbols_in_volume": [
   "networkx.attribute_mixing_matrix",
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_mixing.TestAttributeMixingMatrix.test_attribute_mixing_matrix_undirected": {
  "lineno": 142,
  "symbols_in_volume": [
   "networkx.attribute_mixing_matrix",
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_mixing.TestDegreeMixingDict": {
  "lineno": 8,
  "symbols_in_volume": [
   "base_test.BaseTestDegreeMixing"
  ],
  "type": "class"
 },
 "networkx.algorithms.assortativity.tests.test_mixing.TestDegreeMixingDict.test_degree_mixing_dict_directed": {
  "lineno": 25,
  "symbols_in_volume": [
   "networkx.degree_mixing_dict"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_mixing.TestDegreeMixingDict.test_degree_mixing_dict_multigraph": {
  "lineno": 34,
  "symbols_in_volume": [
   "networkx.degree_mixing_dict"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_mixing.TestDegreeMixingDict.test_degree_mixing_dict_undirected": {
  "lineno": 11,
  "symbols_in_volume": [
   "networkx.degree_mixing_dict"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_mixing.TestDegreeMixingDict.test_degree_mixing_dict_undirected_normalized": {
  "lineno": 18,
  "symbols_in_volume": [
   "networkx.degree_mixing_dict"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_mixing.TestDegreeMixingMatrix": {
  "lineno": 43,
  "symbols_in_volume": [
   "base_test.BaseTestDegreeMixing"
  ],
  "type": "class"
 },
 "networkx.algorithms.assortativity.tests.test_mixing.TestDegreeMixingMatrix.setupClass": {
  "lineno": 45,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_mixing.TestDegreeMixingMatrix.test_degree_mixing_matrix_directed": {
  "lineno": 66,
  "symbols_in_volume": [
   "networkx.degree_mixing_matrix",
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_mixing.TestDegreeMixingMatrix.test_degree_mixing_matrix_multigraph": {
  "lineno": 77,
  "symbols_in_volume": [
   "networkx.degree_mixing_matrix",
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_mixing.TestDegreeMixingMatrix.test_degree_mixing_matrix_selfloop": {
  "lineno": 89,
  "symbols_in_volume": [
   "networkx.degree_mixing_matrix",
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_mixing.TestDegreeMixingMatrix.test_degree_mixing_matrix_undirected": {
  "lineno": 56,
  "symbols_in_volume": [
   "networkx.degree_mixing_matrix",
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_neighbor_degree": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.assortativity.tests.test_neighbor_degree.TestAverageNeighbor": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.assortativity.tests.test_neighbor_degree.TestAverageNeighbor.test_degree_barrat": {
  "lineno": 73,
  "symbols_in_volume": [
   "networkx.average_neighbor_degree",
   "networkx.star_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_neighbor_degree.TestAverageNeighbor.test_degree_k4": {
  "lineno": 49,
  "symbols_in_volume": [
   "networkx.average_neighbor_degree",
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_neighbor_degree.TestAverageNeighbor.test_degree_k4_nodes": {
  "lineno": 67,
  "symbols_in_volume": [
   "networkx.average_neighbor_degree",
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_neighbor_degree.TestAverageNeighbor.test_degree_p4": {
  "lineno": 7,
  "symbols_in_volume": [
   "networkx.average_neighbor_degree",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_neighbor_degree.TestAverageNeighbor.test_degree_p4_weighted": {
  "lineno": 25,
  "symbols_in_volume": [
   "networkx.average_neighbor_degree",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_pairs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.assortativity.tests.test_pairs.TestAttributeMixingXY": {
  "lineno": 6,
  "symbols_in_volume": [
   "base_test.BaseTestAttributeMixing"
  ],
  "type": "class"
 },
 "networkx.algorithms.assortativity.tests.test_pairs.TestAttributeMixingXY.test_node_attribute_xy_directed": {
  "lineno": 29,
  "symbols_in_volume": [
   "networkx.node_attribute_xy"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_pairs.TestAttributeMixingXY.test_node_attribute_xy_multigraph": {
  "lineno": 38,
  "symbols_in_volume": [
   "networkx.node_attribute_xy"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_pairs.TestAttributeMixingXY.test_node_attribute_xy_selfloop": {
  "lineno": 49,
  "symbols_in_volume": [
   "networkx.node_attribute_xy"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_pairs.TestAttributeMixingXY.test_node_attribute_xy_undirected": {
  "lineno": 8,
  "symbols_in_volume": [
   "networkx.node_attribute_xy"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_pairs.TestAttributeMixingXY.test_node_attribute_xy_undirected_nodes": {
  "lineno": 21,
  "symbols_in_volume": [
   "networkx.node_attribute_xy"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_pairs.TestDegreeMixingXY": {
  "lineno": 57,
  "symbols_in_volume": [
   "base_test.BaseTestDegreeMixing"
  ],
  "type": "class"
 },
 "networkx.algorithms.assortativity.tests.test_pairs.TestDegreeMixingXY.test_node_degree_xy_directed": {
  "lineno": 76,
  "symbols_in_volume": [
   "networkx.node_degree_xy"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_pairs.TestDegreeMixingXY.test_node_degree_xy_multigraph": {
  "lineno": 84,
  "symbols_in_volume": [
   "networkx.node_degree_xy"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_pairs.TestDegreeMixingXY.test_node_degree_xy_selfloop": {
  "lineno": 97,
  "symbols_in_volume": [
   "networkx.node_degree_xy"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_pairs.TestDegreeMixingXY.test_node_degree_xy_undirected": {
  "lineno": 59,
  "symbols_in_volume": [
   "networkx.node_degree_xy"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_pairs.TestDegreeMixingXY.test_node_degree_xy_undirected_nodes": {
  "lineno": 69,
  "symbols_in_volume": [
   "networkx.node_degree_xy"
  ],
  "type": "function"
 },
 "networkx.algorithms.assortativity.tests.test_pairs.TestDegreeMixingXY.test_node_degree_xy_weighted": {
  "lineno": 103,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.node_degree_xy"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.bipartite.basic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.bipartite.basic.color": {
  "lineno": 24,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.isolates"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.basic.color.neighbors": {
  "lineno": 60,
  "symbols_in_volume": [
   "itertools.chain.from_iterable"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.basic.degrees": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.bipartite.basic.density": {
  "lineno": 175,
  "symbols_in_volume": [
   "networkx.number_of_edges"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.basic.is_bipartite": {
  "lineno": 86,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.basic.is_bipartite_node_set": {
  "lineno": 110,
  "symbols_in_volume": [
   "networkx.connected_component_subgraphs"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.basic.sets": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.bipartite.centrality": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.bipartite.centrality.betweenness_centrality": {
  "lineno": 80,
  "symbols_in_volume": [
   "networkx.betweenness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.centrality.closeness_centrality": {
  "lineno": 171,
  "symbols_in_volume": [
   "networkx.single_source_shortest_path_length"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.centrality.degree_centrality": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.bipartite.cluster": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.bipartite.cluster._four_cycles": {
  "lineno": 251,
  "symbols_in_volume": [
   "itertools.combinations"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.cluster._threepaths": {
  "lineno": 258,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.bipartite.cluster.average_clustering": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.bipartite.cluster.cc_dot": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.bipartite.cluster.cc_max": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.bipartite.cluster.cc_min": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.bipartite.cluster.latapy_clustering": {
  "lineno": 30,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.algorithms.bipartite.is_bipartite"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.cluster.robins_alexander_clustering": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.bipartite.edgelist": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.bipartite.edgelist.generate_edgelist": {
  "lineno": 91,
  "symbols_in_volume": [
   "networkx.utils.make_str",
   "networkx.utils.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.edgelist.parse_edgelist": {
  "lineno": 159,
  "symbols_in_volume": [
   "ast.literal_eval",
   "networkx.convert._prep_create_using"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.edgelist.read_edgelist": {
  "lineno": 280,
  "symbols_in_volume": [
   "networkx.utils.open_file"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.edgelist.write_edgelist": {
  "lineno": 40,
  "symbols_in_volume": [
   "networkx.utils.open_file"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.generators": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.bipartite.generators._add_nodes_with_bipartite_label": {
  "lineno": 590,
  "symbols_in_volume": [
   "networkx.set_node_attributes"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.generators.alternating_havel_hakimi_graph": {
  "lineno": 298,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.NetworkXError",
   "networkx.empty_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.generators.complete_bipartite_graph": {
  "lineno": 31,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.generators.configuration_model": {
  "lineno": 71,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.NetworkXError",
   "networkx.empty_graph",
   "random.seed",
   "random.shuffle"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.generators.gnmk_random_graph": {
  "lineno": 526,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.complete_bipartite_graph",
   "random.choice",
   "random.seed"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.generators.havel_hakimi_graph": {
  "lineno": 150,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.NetworkXError",
   "networkx.empty_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.generators.preferential_attachment_graph": {
  "lineno": 375,
  "symbols_in_volume": [
   "functools.reduce",
   "networkx.MultiGraph",
   "networkx.NetworkXError",
   "networkx.empty_graph",
   "random.choice",
   "random.random",
   "random.seed"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.generators.random_graph": {
  "lineno": 442,
  "symbols_in_volume": [
   "math.log",
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.complete_bipartite_graph",
   "random.random",
   "random.seed"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.generators.reverse_havel_hakimi_graph": {
  "lineno": 223,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.NetworkXError",
   "networkx.empty_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.matching": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.bipartite.matching._connected_by_alternating_paths": {
  "lineno": 335,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.bipartite.matching._is_connected_by_alternating_path": {
  "lineno": 265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.bipartite.matching._is_connected_by_alternating_path._alternating_dfs": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.bipartite.matching.eppstein_matching": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.bipartite.matching.eppstein_matching.recurse": {
  "lineno": 250,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.bipartite.matching.hopcroft_karp_matching": {
  "lineno": 55,
  "symbols_in_volume": [
   "collections.deque",
   "itertools.chain",
   "networkx.algorithms.bipartite.sets"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.matching.hopcroft_karp_matching.breadth_first_search": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.bipartite.matching.hopcroft_karp_matching.depth_first_search": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.bipartite.matching.to_vertex_cover": {
  "lineno": 358,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.sets"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.matrix": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.bipartite.matrix.biadjacency_matrix": {
  "lineno": 21,
  "symbols_in_volume": [
   "itertools.count",
   "networkx.NetworkXError",
   "scipy.sparse.coo_matrix"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.matrix.from_biadjacency_matrix": {
  "lineno": 114,
  "symbols_in_volume": [
   "itertools.chain.from_iterable",
   "networkx.convert._prep_create_using",
   "networkx.convert_matrix._generate_weighted_edges"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.matrix.setup_module": {
  "lineno": 170,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.projection": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.bipartite.projection.collaboration_weighted_projected_graph": {
  "lineno": 205,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.projection.generic_weighted_projected_graph": {
  "lineno": 390,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.projection.generic_weighted_projected_graph.weight_function": {
  "lineno": 484,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.bipartite.projection.overlap_weighted_projected_graph": {
  "lineno": 295,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.projection.project": {
  "lineno": 496,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.bipartite.projection.projected_graph": {
  "lineno": 20,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.MultiDiGraph",
   "networkx.MultiGraph",
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.projection.weighted_projected_graph": {
  "lineno": 119,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.redundancy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.bipartite.redundancy._node_redundancy": {
  "lineno": 105,
  "symbols_in_volume": [
   "itertools.combinations"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.redundancy.node_redundancy": {
  "lineno": 19,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.spectral": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.bipartite.spectral.setup_module": {
  "lineno": 78,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.spectral.spectral_bipartivity": {
  "lineno": 15,
  "symbols_in_volume": [
   "networkx.to_numpy_matrix"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_basic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.bipartite.tests.test_basic.TestBipartiteBasic": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.bipartite.tests.test_basic.TestBipartiteBasic.test_biadjacency_matrix": {
  "lineno": 92,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.biadjacency_matrix",
   "networkx.algorithms.bipartite.random_graph",
   "nose.SkipTest",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_basic.TestBipartiteBasic.test_biadjacency_matrix_order": {
  "lineno": 107,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.biadjacency_matrix",
   "networkx.path_graph",
   "nose.SkipTest",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_basic.TestBipartiteBasic.test_biadjacency_matrix_weight": {
  "lineno": 77,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.biadjacency_matrix",
   "networkx.path_graph",
   "nose.SkipTest",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_basic.TestBipartiteBasic.test_bipartite_color": {
  "lineno": 16,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.color",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_basic.TestBipartiteBasic.test_bipartite_degrees": {
  "lineno": 56,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.degrees",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_basic.TestBipartiteBasic.test_bipartite_density": {
  "lineno": 47,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.algorithms.bipartite.density",
   "networkx.algorithms.bipartite.sets",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_basic.TestBipartiteBasic.test_bipartite_directed": {
  "lineno": 26,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.is_bipartite",
   "networkx.algorithms.bipartite.random_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_basic.TestBipartiteBasic.test_bipartite_sets": {
  "lineno": 30,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.sets",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_basic.TestBipartiteBasic.test_bipartite_weighted_degrees": {
  "lineno": 64,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.degrees",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_basic.TestBipartiteBasic.test_is_bipartite": {
  "lineno": 10,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.algorithms.bipartite.is_bipartite",
   "networkx.complete_graph",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_basic.TestBipartiteBasic.test_is_bipartite_node_set": {
  "lineno": 36,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.is_bipartite_node_set",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_basic.TestBipartiteBasic.test_not_bipartite_color": {
  "lineno": 21,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.algorithms.bipartite.color",
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_centrality": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.bipartite.tests.test_centrality.TestBipartiteCentrality": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.bipartite.tests.test_centrality.TestBipartiteCentrality.setUp": {
  "lineno": 7,
  "symbols_in_volume": [
   "networkx.complete_bipartite_graph",
   "networkx.cycle_graph",
   "networkx.davis_southern_women_graph",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_centrality.TestBipartiteCentrality.test_betweenness_centrality": {
  "lineno": 26,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.betweenness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_centrality.TestBipartiteCentrality.test_closeness_centrality": {
  "lineno": 37,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.algorithms.bipartite.closeness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_centrality.TestBipartiteCentrality.test_davis_betweenness_centrality": {
  "lineno": 93,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.betweenness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_centrality.TestBipartiteCentrality.test_davis_closeness_centrality": {
  "lineno": 131,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.closeness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_centrality.TestBipartiteCentrality.test_davis_degree_centrality": {
  "lineno": 55,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.degree_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_centrality.TestBipartiteCentrality.test_degree_centrality": {
  "lineno": 15,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.degree_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_cluster": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.bipartite.tests.test_cluster.test_average_path_graph": {
  "lineno": 46,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.average_clustering",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_cluster.test_bad_mode": {
  "lineno": 34,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.algorithms.bipartite.clustering",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_cluster.test_not_bipartite": {
  "lineno": 30,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.algorithms.bipartite.clustering",
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_cluster.test_pairwise_bipartite_cc_functions": {
  "lineno": 6,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.algorithms.bipartite.cluster.cc_dot",
   "networkx.algorithms.bipartite.cluster.cc_max",
   "networkx.algorithms.bipartite.cluster.cc_min",
   "networkx.algorithms.bipartite.is_bipartite"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_cluster.test_path_graph": {
  "lineno": 38,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.clustering",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_cluster.test_ra_clustering_davis": {
  "lineno": 52,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.robins_alexander_clustering",
   "networkx.davis_southern_women_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_cluster.test_ra_clustering_square": {
  "lineno": 57,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.robins_alexander_clustering",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_cluster.test_ra_clustering_zero": {
  "lineno": 62,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.algorithms.bipartite.robins_alexander_clustering"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_cluster.test_star_graph": {
  "lineno": 22,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.clustering",
   "networkx.star_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_edgelist": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.bipartite.tests.test_edgelist.TestEdgelist": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.bipartite.tests.test_edgelist.TestEdgelist.setUp": {
  "lineno": 16,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.MultiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_edgelist.TestEdgelist.test_attribute_fail": {
  "lineno": 199,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.algorithms.bipartite.write_edgelist",
   "networkx.path_graph",
   "nose.tools.raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_edgelist.TestEdgelist.test_digraph_fail": {
  "lineno": 194,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.DiGraph",
   "networkx.NetworkXNotImplemented",
   "networkx.algorithms.bipartite.write_edgelist",
   "nose.tools.raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_edgelist.TestEdgelist.test_edgelist_graph": {
  "lineno": 157,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.read_edgelist",
   "networkx.algorithms.bipartite.write_edgelist",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal",
   "nose.tools.assert_not_equal",
   "os.close",
   "os.unlink",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_edgelist.TestEdgelist.test_edgelist_integers": {
  "lineno": 170,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.read_edgelist",
   "networkx.algorithms.bipartite.write_edgelist",
   "networkx.convert_node_labels_to_integers",
   "networkx.isolates",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal",
   "os.close",
   "os.unlink",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_edgelist.TestEdgelist.test_edgelist_multigraph": {
  "lineno": 182,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.algorithms.bipartite.read_edgelist",
   "networkx.algorithms.bipartite.write_edgelist",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal",
   "nose.tools.assert_not_equal",
   "os.close",
   "os.unlink",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_edgelist.TestEdgelist.test_latin1": {
  "lineno": 138,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.algorithms.bipartite.read_edgelist",
   "networkx.algorithms.bipartite.write_edgelist",
   "networkx.testing.assert_graphs_equal",
   "os.close",
   "os.unlink",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_edgelist.TestEdgelist.test_latin1_error": {
  "lineno": 120,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.algorithms.bipartite.write_edgelist",
   "nose.tools.assert_raises",
   "os.close",
   "os.unlink",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_edgelist.TestEdgelist.test_read_edgelist_1": {
  "lineno": 29,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.algorithms.bipartite.read_edgelist",
   "networkx.testing.assert_edges_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_edgelist.TestEdgelist.test_read_edgelist_3": {
  "lineno": 40,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.algorithms.bipartite.read_edgelist",
   "networkx.testing.assert_edges_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_edgelist.TestEdgelist.test_unicode": {
  "lineno": 102,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.algorithms.bipartite.read_edgelist",
   "networkx.algorithms.bipartite.write_edgelist",
   "networkx.testing.assert_graphs_equal",
   "os.close",
   "os.unlink",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_edgelist.TestEdgelist.test_write_edgelist_1": {
  "lineno": 56,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.Graph",
   "networkx.algorithms.bipartite.write_edgelist",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_edgelist.TestEdgelist.test_write_edgelist_2": {
  "lineno": 67,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.Graph",
   "networkx.algorithms.bipartite.write_edgelist",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_edgelist.TestEdgelist.test_write_edgelist_3": {
  "lineno": 78,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.Graph",
   "networkx.algorithms.bipartite.write_edgelist",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_edgelist.TestEdgelist.test_write_edgelist_4": {
  "lineno": 90,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.Graph",
   "networkx.algorithms.bipartite.write_edgelist",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_generators": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.bipartite.tests.test_generators.TestGeneratorsBipartite": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.bipartite.tests.test_generators.TestGeneratorsBipartite.test_alternating_havel_hakimi_graph": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_generators.TestGeneratorsBipartite.test_complete_bipartite_graph": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_generators.TestGeneratorsBipartite.test_configuration_model": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_generators.TestGeneratorsBipartite.test_gnmk_random_graph": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_generators.TestGeneratorsBipartite.test_havel_hakimi_graph": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_generators.TestGeneratorsBipartite.test_preferential_attachment": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_generators.TestGeneratorsBipartite.test_random_graph": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_generators.TestGeneratorsBipartite.test_reverse_havel_hakimi_graph": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_matching": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.bipartite.tests.test_matching.TestMatching": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.bipartite.tests.test_matching.TestMatching.check_match": {
  "lineno": 37,
  "symbols_in_volume": [
   "itertools.chain"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_matching.TestMatching.check_vertex_cover": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_matching.TestMatching.setup": {
  "lineno": 23,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_matching.TestMatching.test_eppstein_matching": {
  "lineno": 66,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.matching.eppstein_matching"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_matching.TestMatching.test_hopcroft_karp_matching": {
  "lineno": 73,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.matching.hopcroft_karp_matching"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_matching.TestMatching.test_to_vertex_cover": {
  "lineno": 80,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.matching.maximum_matching",
   "networkx.algorithms.bipartite.matching.to_vertex_cover"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_matrix": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.bipartite.tests.test_matrix.TestBiadjacencyMatrix": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.bipartite.tests.test_matrix.TestBiadjacencyMatrix.setupClass": {
  "lineno": 9,
  "symbols_in_volume": [
   "nose.SkipTest",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_matrix.TestBiadjacencyMatrix.test_biadjacency_matrix": {
  "lineno": 30,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.biadjacency_matrix",
   "networkx.algorithms.bipartite.random_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_matrix.TestBiadjacencyMatrix.test_biadjacency_matrix_order": {
  "lineno": 40,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.biadjacency_matrix",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_matrix.TestBiadjacencyMatrix.test_biadjacency_matrix_weight": {
  "lineno": 20,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.biadjacency_matrix",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_matrix.TestBiadjacencyMatrix.test_duplicate_col_fail": {
  "lineno": 64,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.algorithms.bipartite.biadjacency_matrix"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_matrix.TestBiadjacencyMatrix.test_duplicate_row_fail": {
  "lineno": 56,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.algorithms.bipartite.biadjacency_matrix"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_matrix.TestBiadjacencyMatrix.test_empty_fail": {
  "lineno": 52,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.algorithms.bipartite.biadjacency_matrix"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_matrix.TestBiadjacencyMatrix.test_format_keyword_fail": {
  "lineno": 68,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.algorithms.bipartite.biadjacency_matrix"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_matrix.TestBiadjacencyMatrix.test_from_biadjacency_multigraph": {
  "lineno": 86,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.algorithms.bipartite.from_biadjacency_matrix",
   "networkx.testing.utils.assert_edges_equal",
   "scipy.sparse.csc_matrix"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_matrix.TestBiadjacencyMatrix.test_from_biadjacency_roundtrip": {
  "lineno": 72,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.biadjacency_matrix",
   "networkx.algorithms.bipartite.from_biadjacency_matrix",
   "networkx.is_isomorphic",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_matrix.TestBiadjacencyMatrix.test_from_biadjacency_weight": {
  "lineno": 78,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.from_biadjacency_matrix",
   "networkx.testing.utils.assert_edges_equal",
   "scipy.sparse.csc_matrix"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_matrix.TestBiadjacencyMatrix.test_null_fail": {
  "lineno": 48,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.algorithms.bipartite.biadjacency_matrix"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_project": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.bipartite.tests.test_project.TestBipartiteProject": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.bipartite.tests.test_project.TestBipartiteProject.test_directed_path_collaboration_projected_graph": {
  "lineno": 42,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.algorithms.bipartite.collaboration_weighted_projected_graph",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_project.TestBipartiteProject.test_directed_projection": {
  "lineno": 117,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.algorithms.bipartite.projected_graph",
   "networkx.algorithms.bipartite.weighted_projected_graph",
   "networkx.testing.assert_edges_equal",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_project.TestBipartiteProject.test_path_collaboration_projected_graph": {
  "lineno": 31,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.collaboration_weighted_projected_graph",
   "networkx.path_graph",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_project.TestBipartiteProject.test_path_projected_graph": {
  "lineno": 9,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.projected_graph",
   "networkx.path_graph",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_project.TestBipartiteProject.test_path_projected_properties_graph": {
  "lineno": 18,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.projected_graph",
   "networkx.path_graph",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_project.TestBipartiteProject.test_path_weighted_projected_directed_graph": {
  "lineno": 65,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.algorithms.bipartite.weighted_projected_graph",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_project.TestBipartiteProject.test_path_weighted_projected_graph": {
  "lineno": 54,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.weighted_projected_graph",
   "networkx.path_graph",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_project.TestBipartiteProject.test_project_collaboration": {
  "lineno": 104,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.algorithms.bipartite.collaboration_weighted_projected_graph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_project.TestBipartiteProject.test_project_multigraph": {
  "lineno": 91,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.algorithms.bipartite.projected_graph",
   "networkx.algorithms.bipartite.weighted_projected_graph",
   "networkx.testing.assert_edges_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_project.TestBipartiteProject.test_star_projected_graph": {
  "lineno": 78,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.projected_graph",
   "networkx.algorithms.bipartite.weighted_projected_graph",
   "networkx.star_graph",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_project.TestBipartiteWeightedProjection": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.bipartite.tests.test_project.TestBipartiteWeightedProjection.setUp": {
  "lineno": 149,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_project.TestBipartiteWeightedProjection.test_generic_weighted_projected_graph_custom": {
  "lineno": 343,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.generic_weighted_projected_graph",
   "networkx.bipartite.complete_bipartite_graph",
   "networkx.testing.assert_edges_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_project.TestBipartiteWeightedProjection.test_generic_weighted_projected_graph_custom.jaccard": {
  "lineno": 344,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_project.TestBipartiteWeightedProjection.test_generic_weighted_projected_graph_custom.my_weight": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_project.TestBipartiteWeightedProjection.test_generic_weighted_projected_graph_simple": {
  "lineno": 323,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.algorithms.bipartite.generic_weighted_projected_graph",
   "networkx.path_graph",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_project.TestBipartiteWeightedProjection.test_generic_weighted_projected_graph_simple.shared": {
  "lineno": 324,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_project.TestBipartiteWeightedProjection.test_project_weighted_jaccard": {
  "lineno": 294,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.algorithms.bipartite.overlap_weighted_projected_graph",
   "networkx.testing.assert_edges_equal",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_project.TestBipartiteWeightedProjection.test_project_weighted_newman": {
  "lineno": 207,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.algorithms.bipartite.collaboration_weighted_projected_graph",
   "networkx.testing.assert_edges_equal",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_project.TestBipartiteWeightedProjection.test_project_weighted_overlap": {
  "lineno": 265,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.algorithms.bipartite.overlap_weighted_projected_graph",
   "networkx.testing.assert_edges_equal",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_project.TestBipartiteWeightedProjection.test_project_weighted_ratio": {
  "lineno": 236,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.algorithms.bipartite.weighted_projected_graph",
   "networkx.testing.assert_edges_equal",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_project.TestBipartiteWeightedProjection.test_project_weighted_shared": {
  "lineno": 178,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.algorithms.bipartite.weighted_projected_graph",
   "networkx.testing.assert_edges_equal",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_redundancy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.bipartite.tests.test_redundancy.test_no_redundant_nodes": {
  "lineno": 24,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.complete_bipartite_graph",
   "networkx.algorithms.bipartite.node_redundancy",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_redundancy.test_not_enough_neighbors": {
  "lineno": 41,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.algorithms.bipartite.complete_bipartite_graph",
   "networkx.algorithms.bipartite.node_redundancy",
   "nose.tools.raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_redundancy.test_redundant_nodes": {
  "lineno": 30,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.node_redundancy",
   "networkx.cycle_graph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_spectral_bipartivity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.bipartite.tests.test_spectral_bipartivity.TestSpectralBipartivity": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.bipartite.tests.test_spectral_bipartivity.TestSpectralBipartivity.k23_like": {
  "lineno": 39,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.spectral_bipartivity",
   "networkx.complete_bipartite_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_spectral_bipartivity.TestSpectralBipartivity.setupClass": {
  "lineno": 12,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_spectral_bipartivity.TestSpectralBipartivity.test_single_nodes": {
  "lineno": 79,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.spectral_bipartivity",
   "networkx.complete_bipartite_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.bipartite.tests.test_spectral_bipartivity.TestSpectralBipartivity.test_star_like": {
  "lineno": 23,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.spectral_bipartivity",
   "networkx.star_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.block": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.block.blockmodel": {
  "lineno": 14,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.MultiDiGraph",
   "networkx.MultiGraph",
   "networkx.NetworkXException",
   "networkx.density"
  ],
  "type": "function"
 },
 "networkx.algorithms.boundary": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.boundary.edge_boundary": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.boundary.node_boundary": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.centrality": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.centrality.betweenness": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.centrality.betweenness._accumulate_basic": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.centrality.betweenness._accumulate_edges": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.centrality.betweenness._accumulate_endpoints": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.centrality.betweenness._rescale": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.centrality.betweenness._rescale_e": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.centrality.betweenness._single_source_dijkstra_path_basic": {
  "lineno": 252,
  "symbols_in_volume": [
   "heapq.heappop",
   "heapq.heappush",
   "itertools.count"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.betweenness._single_source_shortest_path_basic": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.centrality.betweenness.betweenness_centrality": {
  "lineno": 22,
  "symbols_in_volume": [
   "random.sample",
   "random.seed"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.betweenness.edge_betweenness": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.centrality.betweenness.edge_betweenness_centrality": {
  "lineno": 132,
  "symbols_in_volume": [
   "random.sample",
   "random.seed"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.betweenness_subset": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.centrality.betweenness_subset._accumulate_edges_subset": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.centrality.betweenness_subset._accumulate_subset": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.centrality.betweenness_subset._rescale": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.centrality.betweenness_subset._rescale_e": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.centrality.betweenness_subset.betweenness_centrality_source": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.centrality.betweenness_subset.betweenness_centrality_subset": {
  "lineno": 24,
  "symbols_in_volume": [
   "networkx.algorithms.centrality.betweenness._single_source_dijkstra_path_basic",
   "networkx.algorithms.centrality.betweenness._single_source_shortest_path_basic"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.betweenness_subset.edge_betweenness_centrality_subset": {
  "lineno": 106,
  "symbols_in_volume": [
   "networkx.algorithms.centrality.betweenness._single_source_dijkstra_path_basic",
   "networkx.algorithms.centrality.betweenness._single_source_shortest_path_basic"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.closeness": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.centrality.closeness.closeness_centrality": {
  "lineno": 18,
  "symbols_in_volume": [
   "functools.partial",
   "networkx.single_source_dijkstra_path_length",
   "networkx.single_source_shortest_path_length"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.communicability_alg": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.centrality.communicability_alg._rescale": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.centrality.communicability_alg.communicability": {
  "lineno": 281,
  "symbols_in_volume": [
   "networkx.to_numpy_matrix",
   "numpy.exp",
   "numpy.linalg.eigh"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.communicability_alg.communicability_betweenness_centrality": {
  "lineno": 163,
  "symbols_in_volume": [
   "networkx.to_numpy_matrix",
   "scipy.diag",
   "scipy.linalg.expm"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.communicability_alg.communicability_centrality": {
  "lineno": 89,
  "symbols_in_volume": [
   "networkx.to_numpy_matrix",
   "numpy.array",
   "numpy.dot",
   "numpy.exp",
   "numpy.linalg.eigh"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.communicability_alg.communicability_centrality_exp": {
  "lineno": 22,
  "symbols_in_volume": [
   "networkx.to_numpy_matrix"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.communicability_alg.communicability_exp": {
  "lineno": 363,
  "symbols_in_volume": [
   "networkx.to_numpy_matrix",
   "scipy.linalg.expm"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.communicability_alg.estrada_index": {
  "lineno": 437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.centrality.communicability_alg.setup_module": {
  "lineno": 480,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.current_flow_betweenness": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.centrality.current_flow_betweenness.approximate_current_flow_betweenness_centrality": {
  "lineno": 20,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.is_connected",
   "networkx.relabel_nodes",
   "networkx.utils.reverse_cuthill_mckee_ordering",
   "numpy.abs",
   "numpy.ceil",
   "numpy.log",
   "numpy.zeros",
   "random.sample"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.current_flow_betweenness.current_flow_betweenness_centrality": {
  "lineno": 140,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.is_connected",
   "networkx.relabel_nodes",
   "networkx.utils.reverse_cuthill_mckee_ordering"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.current_flow_betweenness.edge_current_flow_betweenness_centrality": {
  "lineno": 247,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.is_connected",
   "networkx.relabel_nodes",
   "networkx.utils.reverse_cuthill_mckee_ordering"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.current_flow_betweenness.setup_module": {
  "lineno": 355,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.current_flow_betweenness_subset": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.centrality.current_flow_betweenness_subset.current_flow_betweenness_centrality_subset": {
  "lineno": 20,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.is_connected",
   "networkx.relabel_nodes",
   "networkx.utils.reverse_cuthill_mckee_ordering",
   "numpy.abs"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.current_flow_betweenness_subset.edge_current_flow_betweenness_centrality_subset": {
  "lineno": 138,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.is_connected",
   "networkx.relabel_nodes",
   "networkx.utils.reverse_cuthill_mckee_ordering",
   "numpy.abs"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.current_flow_betweenness_subset.setup_module": {
  "lineno": 256,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.current_flow_closeness": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.centrality.current_flow_closeness.current_flow_closeness_centrality": {
  "lineno": 14,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.is_connected",
   "networkx.relabel_nodes",
   "networkx.utils.reverse_cuthill_mckee_ordering"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.current_flow_closeness.setup_module": {
  "lineno": 100,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.degree_alg": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.centrality.degree_alg.degree_centrality": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.centrality.degree_alg.in_degree_centrality": {
  "lineno": 55,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.degree_alg.out_degree_centrality": {
  "lineno": 98,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.dispersion": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.centrality.dispersion.dispersion": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.centrality.dispersion.dispersion._dispersion": {
  "lineno": 51,
  "symbols_in_volume": [
   "itertools.combinations"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.eigenvector": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.centrality.eigenvector.eigenvector_centrality": {
  "lineno": 18,
  "symbols_in_volume": [
   "math.sqrt",
   "networkx.MultiDiGraph",
   "networkx.MultiGraph",
   "networkx.NetworkXError",
   "networkx.NetworkXException"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.eigenvector.eigenvector_centrality_numpy": {
  "lineno": 136,
  "symbols_in_volume": [
   "networkx.NetworkXException",
   "networkx.to_scipy_sparse_matrix",
   "scipy.linalg.norm",
   "scipy.sign",
   "scipy.sparse.linalg.eigs"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.eigenvector.setup_module": {
  "lineno": 213,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.flow_matrix": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.centrality.flow_matrix.CGInverseLaplacian": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.centrality.flow_matrix.CGInverseLaplacian.init_solver": {
  "lineno": 111,
  "symbols_in_volume": [
   "scipy.sparse.linalg.LinearOperator",
   "scipy.sparse.linalg.spilu"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.flow_matrix.CGInverseLaplacian.solve": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.zeros",
   "scipy.sparse.linalg.cg"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.flow_matrix.CGInverseLaplacian.solve_inverse": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.zeros",
   "scipy.sparse.linalg.cg"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.flow_matrix.FullInverseLaplacian": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.centrality.flow_matrix.FullInverseLaplacian.init_solver": {
  "lineno": 80,
  "symbols_in_volume": [
   "numpy.linalg.inv",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.flow_matrix.FullInverseLaplacian.solve": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.flow_matrix.FullInverseLaplacian.solve_inverse": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.centrality.flow_matrix.InverseLaplacian": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.centrality.flow_matrix.InverseLaplacian.__init__": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.flow_matrix.InverseLaplacian.get_row": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.centrality.flow_matrix.InverseLaplacian.get_rows": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.centrality.flow_matrix.InverseLaplacian.init_solver": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.centrality.flow_matrix.InverseLaplacian.solve": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.centrality.flow_matrix.InverseLaplacian.solve_inverse": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.centrality.flow_matrix.InverseLaplacian.width": {
  "lineno": 68,
  "symbols_in_volume": [
   "numpy.nonzero"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.flow_matrix.SuperLUInverseLaplacian": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.centrality.flow_matrix.SuperLUInverseLaplacian.init_solver": {
  "lineno": 94,
  "symbols_in_volume": [
   "scipy.sparse.linalg.factorized"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.flow_matrix.SuperLUInverseLaplacian.solve": {
  "lineno": 103,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.flow_matrix.SuperLUInverseLaplacian.solve_inverse": {
  "lineno": 98,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.flow_matrix.flow_matrix_row": {
  "lineno": 5,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.flow_matrix.laplacian_sparse_matrix": {
  "lineno": 130,
  "symbols_in_volume": [
   "networkx.to_scipy_sparse_matrix",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.harmonic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.centrality.harmonic.harmonic_centrality": {
  "lineno": 15,
  "symbols_in_volume": [
   "functools.partial",
   "networkx.all_pairs_dijkstra_path_length",
   "networkx.all_pairs_shortest_path_length"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.katz": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.centrality.katz.katz_centrality": {
  "lineno": 21,
  "symbols_in_volume": [
   "math.sqrt",
   "networkx.NetworkXError",
   "networkx.utils.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.katz.katz_centrality_numpy": {
  "lineno": 197,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.adj_matrix",
   "networkx.utils.not_implemented_for",
   "numpy.array",
   "numpy.eye",
   "numpy.linalg.norm",
   "numpy.linalg.solve",
   "numpy.ones",
   "numpy.sign"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.katz.setup_module": {
  "lineno": 337,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.load": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.centrality.load._edge_betweenness": {
  "lineno": 171,
  "symbols_in_volume": [
   "networkx.predecessor"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.load._node_betweenness": {
  "lineno": 97,
  "symbols_in_volume": [
   "networkx.dijkstra_predecessor_and_distance",
   "networkx.predecessor"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.load.edge_load": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.centrality.load.newman_betweenness_centrality": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestBetweennessCentrality": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestBetweennessCentrality.test_K5": {
  "lineno": 23,
  "symbols_in_volume": [
   "networkx.betweenness_centrality",
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestBetweennessCentrality.test_K5_endpoints": {
  "lineno": 33,
  "symbols_in_volume": [
   "networkx.betweenness_centrality",
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestBetweennessCentrality.test_P3": {
  "lineno": 56,
  "symbols_in_volume": [
   "networkx.betweenness_centrality",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestBetweennessCentrality.test_P3_endpoints": {
  "lineno": 66,
  "symbols_in_volume": [
   "networkx.betweenness_centrality",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestBetweennessCentrality.test_P3_normalized": {
  "lineno": 45,
  "symbols_in_volume": [
   "networkx.betweenness_centrality",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestBetweennessCentrality.test_directed_path": {
  "lineno": 174,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.betweenness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestBetweennessCentrality.test_directed_path_normalized": {
  "lineno": 185,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.betweenness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestBetweennessCentrality.test_disconnected_path": {
  "lineno": 148,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.betweenness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestBetweennessCentrality.test_disconnected_path_endpoints": {
  "lineno": 160,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.betweenness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestBetweennessCentrality.test_florentine_families_graph": {
  "lineno": 106,
  "symbols_in_volume": [
   "networkx.betweenness_centrality",
   "networkx.florentine_families_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestBetweennessCentrality.test_krackhardt_kite_graph": {
  "lineno": 78,
  "symbols_in_volume": [
   "networkx.betweenness_centrality",
   "networkx.krackhardt_kite_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestBetweennessCentrality.test_krackhardt_kite_graph_normalized": {
  "lineno": 93,
  "symbols_in_volume": [
   "networkx.betweenness_centrality",
   "networkx.krackhardt_kite_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestBetweennessCentrality.test_ladder_graph": {
  "lineno": 133,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.betweenness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestEdgeBetweennessCentrality": {
  "lineno": 333,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestEdgeBetweennessCentrality.test_C4": {
  "lineno": 352,
  "symbols_in_volume": [
   "networkx.cycle_graph",
   "networkx.edge_betweenness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestEdgeBetweennessCentrality.test_K5": {
  "lineno": 335,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.edge_betweenness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestEdgeBetweennessCentrality.test_P4": {
  "lineno": 360,
  "symbols_in_volume": [
   "networkx.edge_betweenness_centrality",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestEdgeBetweennessCentrality.test_balanced_tree": {
  "lineno": 377,
  "symbols_in_volume": [
   "networkx.balanced_tree",
   "networkx.edge_betweenness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestEdgeBetweennessCentrality.test_normalized_K5": {
  "lineno": 343,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.edge_betweenness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestEdgeBetweennessCentrality.test_normalized_P4": {
  "lineno": 368,
  "symbols_in_volume": [
   "networkx.edge_betweenness_centrality",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestWeightedBetweennessCentrality": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestWeightedBetweennessCentrality.test_G": {
  "lineno": 305,
  "symbols_in_volume": [
   "networkx.betweenness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestWeightedBetweennessCentrality.test_G2": {
  "lineno": 315,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.betweenness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestWeightedBetweennessCentrality.test_K5": {
  "lineno": 200,
  "symbols_in_volume": [
   "networkx.betweenness_centrality",
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestWeightedBetweennessCentrality.test_P3": {
  "lineno": 221,
  "symbols_in_volume": [
   "networkx.betweenness_centrality",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestWeightedBetweennessCentrality.test_P3_normalized": {
  "lineno": 210,
  "symbols_in_volume": [
   "networkx.betweenness_centrality",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestWeightedBetweennessCentrality.test_florentine_families_graph": {
  "lineno": 262,
  "symbols_in_volume": [
   "networkx.betweenness_centrality",
   "networkx.florentine_families_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestWeightedBetweennessCentrality.test_krackhardt_kite_graph": {
  "lineno": 231,
  "symbols_in_volume": [
   "networkx.betweenness_centrality",
   "networkx.krackhardt_kite_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestWeightedBetweennessCentrality.test_krackhardt_kite_graph_normalized": {
  "lineno": 247,
  "symbols_in_volume": [
   "networkx.betweenness_centrality",
   "networkx.krackhardt_kite_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestWeightedBetweennessCentrality.test_ladder_graph": {
  "lineno": 290,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.betweenness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestWeightedEdgeBetweennessCentrality": {
  "lineno": 386,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestWeightedEdgeBetweennessCentrality.test_C4": {
  "lineno": 396,
  "symbols_in_volume": [
   "networkx.cycle_graph",
   "networkx.edge_betweenness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestWeightedEdgeBetweennessCentrality.test_K5": {
  "lineno": 388,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.edge_betweenness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestWeightedEdgeBetweennessCentrality.test_P4": {
  "lineno": 404,
  "symbols_in_volume": [
   "networkx.edge_betweenness_centrality",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestWeightedEdgeBetweennessCentrality.test_balanced_tree": {
  "lineno": 413,
  "symbols_in_volume": [
   "networkx.balanced_tree",
   "networkx.edge_betweenness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestWeightedEdgeBetweennessCentrality.test_normalized_weighted_graph": {
  "lineno": 442,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.edge_betweenness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.TestWeightedEdgeBetweennessCentrality.test_weighted_graph": {
  "lineno": 422,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.edge_betweenness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality.weighted_G": {
  "lineno": 5,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality_subset": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality_subset.TestBetweennessCentralitySources": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality_subset.TestBetweennessCentralitySources.test_K5": {
  "lineno": 107,
  "symbols_in_volume": [
   "networkx.betweenness_centrality_source",
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality_subset.TestBetweennessCentralitySources.test_P3": {
  "lineno": 117,
  "symbols_in_volume": [
   "networkx.betweenness_centrality_source",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality_subset.TestEdgeSubsetBetweennessCentrality": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality_subset.TestEdgeSubsetBetweennessCentrality.test_K5": {
  "lineno": 132,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.edge_betweenness_centrality_subset"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality_subset.TestEdgeSubsetBetweennessCentrality.test_P5": {
  "lineno": 161,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.edge_betweenness_centrality_subset"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality_subset.TestEdgeSubsetBetweennessCentrality.test_P5_directed": {
  "lineno": 146,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.edge_betweenness_centrality_subset"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality_subset.TestEdgeSubsetBetweennessCentrality.test_P5_multiple_target": {
  "lineno": 176,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.edge_betweenness_centrality_subset"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality_subset.TestEdgeSubsetBetweennessCentrality.test_box": {
  "lineno": 192,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.edge_betweenness_centrality_subset"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality_subset.TestEdgeSubsetBetweennessCentrality.test_box_and_path": {
  "lineno": 212,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.edge_betweenness_centrality_subset"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality_subset.TestEdgeSubsetBetweennessCentrality.test_box_and_path2": {
  "lineno": 235,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.edge_betweenness_centrality_subset"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality_subset.TestSubsetBetweennessCentrality": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality_subset.TestSubsetBetweennessCentrality.test_K5": {
  "lineno": 9,
  "symbols_in_volume": [
   "networkx.betweenness_centrality_subset",
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality_subset.TestSubsetBetweennessCentrality.test_P5": {
  "lineno": 32,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.betweenness_centrality_subset"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality_subset.TestSubsetBetweennessCentrality.test_P5_directed": {
  "lineno": 20,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.betweenness_centrality_subset"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality_subset.TestSubsetBetweennessCentrality.test_P5_multiple_target": {
  "lineno": 44,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.betweenness_centrality_subset"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality_subset.TestSubsetBetweennessCentrality.test_box": {
  "lineno": 56,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.betweenness_centrality_subset"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality_subset.TestSubsetBetweennessCentrality.test_box_and_path": {
  "lineno": 71,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.betweenness_centrality_subset"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_betweenness_centrality_subset.TestSubsetBetweennessCentrality.test_box_and_path2": {
  "lineno": 89,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.betweenness_centrality_subset"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_closeness_centrality": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.centrality.tests.test_closeness_centrality.TestClosenessCentrality": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.centrality.tests.test_closeness_centrality.TestClosenessCentrality.setUp": {
  "lineno": 8,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.balanced_tree",
   "networkx.complete_graph",
   "networkx.cycle_graph",
   "networkx.florentine_families_graph",
   "networkx.krackhardt_kite_graph",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_closeness_centrality.TestClosenessCentrality.test_florentine_families_closeness": {
  "lineno": 59,
  "symbols_in_volume": [
   "networkx.closeness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_closeness_centrality.TestClosenessCentrality.test_k5_closeness": {
  "lineno": 26,
  "symbols_in_volume": [
   "networkx.closeness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_closeness_centrality.TestClosenessCentrality.test_krackhardt_closeness": {
  "lineno": 44,
  "symbols_in_volume": [
   "networkx.closeness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_closeness_centrality.TestClosenessCentrality.test_p3_closeness": {
  "lineno": 36,
  "symbols_in_volume": [
   "networkx.closeness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_closeness_centrality.TestClosenessCentrality.test_weighted_closeness": {
  "lineno": 79,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.closeness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_communicability": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.centrality.tests.test_communicability.TestCommunicability": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.centrality.tests.test_communicability.TestCommunicability.setupClass": {
  "lineno": 8,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_communicability.TestCommunicability.test_communicability": {
  "lineno": 67,
  "symbols_in_volume": [
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_communicability.TestCommunicability.test_communicability2": {
  "lineno": 85,
  "symbols_in_volume": [
   "collections.defaultdict",
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_communicability.TestCommunicability.test_communicability_betweenness_centrality": {
  "lineno": 42,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_communicability.TestCommunicability.test_communicability_betweenness_centrality_small": {
  "lineno": 61,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_communicability.TestCommunicability.test_communicability_centrality": {
  "lineno": 22,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_communicability.TestCommunicability.test_estrada_index": {
  "lineno": 131,
  "symbols_in_volume": [
   "networkx.karate_club_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality.TestApproximateFlowBetweennessCentrality": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy"
  ],
  "type": "class"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality.TestApproximateFlowBetweennessCentrality.setupClass": {
  "lineno": 97,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality.TestApproximateFlowBetweennessCentrality.test_K4": {
  "lineno": 117,
  "symbols_in_volume": [
   "networkx.approximate_current_flow_betweenness_centrality",
   "networkx.complete_graph",
   "networkx.current_flow_betweenness_centrality",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality.TestApproximateFlowBetweennessCentrality.test_K4_normalized": {
  "lineno": 108,
  "symbols_in_volume": [
   "networkx.approximate_current_flow_betweenness_centrality",
   "networkx.complete_graph",
   "networkx.current_flow_betweenness_centrality",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality.TestApproximateFlowBetweennessCentrality.test_grid": {
  "lineno": 136,
  "symbols_in_volume": [
   "networkx.approximate_current_flow_betweenness_centrality",
   "networkx.current_flow_betweenness_centrality",
   "networkx.grid_2d_graph",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality.TestApproximateFlowBetweennessCentrality.test_solvers": {
  "lineno": 145,
  "symbols_in_volume": [
   "networkx.approximate_current_flow_betweenness_centrality",
   "networkx.complete_graph",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality.TestApproximateFlowBetweennessCentrality.test_star": {
  "lineno": 126,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.approximate_current_flow_betweenness_centrality",
   "networkx.current_flow_betweenness_centrality",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality.TestEdgeFlowBetweennessCentrality": {
  "lineno": 164,
  "symbols_in_volume": [
   "numpy"
  ],
  "type": "class"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality.TestEdgeFlowBetweennessCentrality.setupClass": {
  "lineno": 166,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality.TestEdgeFlowBetweennessCentrality.test_C4": {
  "lineno": 193,
  "symbols_in_volume": [
   "networkx.cycle_graph",
   "networkx.edge_current_flow_betweenness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality.TestEdgeFlowBetweennessCentrality.test_K4": {
  "lineno": 175,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.edge_current_flow_betweenness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality.TestEdgeFlowBetweennessCentrality.test_K4_normalized": {
  "lineno": 184,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.edge_current_flow_betweenness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality.TestEdgeFlowBetweennessCentrality.test_P4": {
  "lineno": 203,
  "symbols_in_volume": [
   "networkx.edge_current_flow_betweenness_centrality",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality.TestFlowBetweennessCentrality": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality.TestFlowBetweennessCentrality.setupClass": {
  "lineno": 15,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality.TestFlowBetweennessCentrality.test_K4": {
  "lineno": 44,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.current_flow_betweenness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality.TestFlowBetweennessCentrality.test_K4_normalized": {
  "lineno": 24,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.current_flow_betweenness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality.TestFlowBetweennessCentrality.test_P4": {
  "lineno": 64,
  "symbols_in_volume": [
   "networkx.current_flow_betweenness_centrality",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality.TestFlowBetweennessCentrality.test_P4_normalized": {
  "lineno": 55,
  "symbols_in_volume": [
   "networkx.current_flow_betweenness_centrality",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality.TestFlowBetweennessCentrality.test_solers": {
  "lineno": 83,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.current_flow_betweenness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality.TestFlowBetweennessCentrality.test_star": {
  "lineno": 72,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.current_flow_betweenness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality.TestWeightedFlowBetweennessCentrality": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality_subset": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality_subset.TestEdgeFlowBetweennessCentrality": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy"
  ],
  "type": "class"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality_subset.TestEdgeFlowBetweennessCentrality.setupClass": {
  "lineno": 116,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality_subset.TestEdgeFlowBetweennessCentrality.test_C4": {
  "lineno": 163,
  "symbols_in_volume": [
   "networkx.cycle_graph",
   "networkx.edge_current_flow_betweenness_centrality",
   "networkx.edge_current_flow_betweenness_centrality_subset"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality_subset.TestEdgeFlowBetweennessCentrality.test_K4": {
  "lineno": 134,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.edge_current_flow_betweenness_centrality",
   "networkx.edge_current_flow_betweenness_centrality_subset"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality_subset.TestEdgeFlowBetweennessCentrality.test_K4_normalized": {
  "lineno": 125,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.edge_current_flow_betweenness_centrality",
   "networkx.edge_current_flow_betweenness_centrality_subset"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality_subset.TestEdgeFlowBetweennessCentrality.test_P4": {
  "lineno": 173,
  "symbols_in_volume": [
   "networkx.edge_current_flow_betweenness_centrality",
   "networkx.edge_current_flow_betweenness_centrality_subset",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality_subset.TestFlowBetweennessCentrality": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality_subset.TestFlowBetweennessCentrality.setupClass": {
  "lineno": 15,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality_subset.TestFlowBetweennessCentrality.test_K4": {
  "lineno": 37,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.current_flow_betweenness_centrality",
   "networkx.current_flow_betweenness_centrality_subset"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality_subset.TestFlowBetweennessCentrality.test_K4_normalized": {
  "lineno": 25,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.current_flow_betweenness_centrality",
   "networkx.current_flow_betweenness_centrality_subset"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality_subset.TestFlowBetweennessCentrality.test_P4": {
  "lineno": 85,
  "symbols_in_volume": [
   "networkx.current_flow_betweenness_centrality",
   "networkx.current_flow_betweenness_centrality_subset",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality_subset.TestFlowBetweennessCentrality.test_P4_normalized": {
  "lineno": 73,
  "symbols_in_volume": [
   "networkx.current_flow_betweenness_centrality",
   "networkx.current_flow_betweenness_centrality_subset",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_betweenness_centrality_subset.TestFlowBetweennessCentrality.test_star": {
  "lineno": 96,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.current_flow_betweenness_centrality",
   "networkx.current_flow_betweenness_centrality_subset"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_closeness": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_closeness.TestFlowClosenessCentrality": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_closeness.TestFlowClosenessCentrality.setupClass": {
  "lineno": 8,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_closeness.TestFlowClosenessCentrality.test_K4": {
  "lineno": 18,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.current_flow_closeness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_closeness.TestFlowClosenessCentrality.test_P4": {
  "lineno": 27,
  "symbols_in_volume": [
   "networkx.current_flow_closeness_centrality",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_closeness.TestFlowClosenessCentrality.test_star": {
  "lineno": 35,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.current_flow_closeness_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_current_flow_closeness.TestWeightedFlowClosenessCentrality": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.centrality.tests.test_degree_centrality": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.centrality.tests.test_degree_centrality.TestDegreeCentrality": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.centrality.tests.test_degree_centrality.TestDegreeCentrality.__init__": {
  "lineno": 11,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.complete_graph",
   "networkx.krackhardt_kite_graph",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_degree_centrality.TestDegreeCentrality.test_degree_centrality_1": {
  "lineno": 51,
  "symbols_in_volume": [
   "networkx.degree_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_degree_centrality.TestDegreeCentrality.test_degree_centrality_2": {
  "lineno": 57,
  "symbols_in_volume": [
   "networkx.degree_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_degree_centrality.TestDegreeCentrality.test_degree_centrality_3": {
  "lineno": 63,
  "symbols_in_volume": [
   "networkx.degree_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_degree_centrality.TestDegreeCentrality.test_degree_centrality_4": {
  "lineno": 70,
  "symbols_in_volume": [
   "networkx.degree_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_degree_centrality.TestDegreeCentrality.test_indegree_centrality": {
  "lineno": 79,
  "symbols_in_volume": [
   "networkx.in_degree_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_degree_centrality.TestDegreeCentrality.test_outdegree_centrality": {
  "lineno": 86,
  "symbols_in_volume": [
   "networkx.out_degree_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_dispersion": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.centrality.tests.test_dispersion.TestDispersion": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.centrality.tests.test_dispersion.TestDispersion.test_article": {
  "lineno": 18,
  "symbols_in_volume": [
   "networkx.dispersion"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_dispersion.TestDispersion.test_impossible_things": {
  "lineno": 36,
  "symbols_in_volume": [
   "networkx.dispersion",
   "networkx.karate_club_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_dispersion.TestDispersion.test_results_length": {
  "lineno": 26,
  "symbols_in_volume": [
   "networkx.dispersion"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_dispersion.small_ego_G": {
  "lineno": 4,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_eigenvector_centrality": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.centrality.tests.test_eigenvector_centrality.TestEigenvectorCentrality": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.centrality.tests.test_eigenvector_centrality.TestEigenvectorCentrality.setupClass": {
  "lineno": 9,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_eigenvector_centrality.TestEigenvectorCentrality.test_K5": {
  "lineno": 18,
  "symbols_in_volume": [
   "math.sqrt",
   "networkx.complete_graph",
   "networkx.eigenvector_centrality",
   "networkx.eigenvector_centrality_numpy"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_eigenvector_centrality.TestEigenvectorCentrality.test_P3": {
  "lineno": 37,
  "symbols_in_volume": [
   "networkx.eigenvector_centrality_numpy",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_eigenvector_centrality.TestEigenvectorCentrality.test_P3_unweighted": {
  "lineno": 46,
  "symbols_in_volume": [
   "networkx.eigenvector_centrality_numpy",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_eigenvector_centrality.TestEigenvectorCentrality.test_maxiter": {
  "lineno": 56,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.eigenvector_centrality",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_eigenvector_centrality.TestEigenvectorCentralityDirected": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy"
  ],
  "type": "class"
 },
 "networkx.algorithms.centrality.tests.test_eigenvector_centrality.TestEigenvectorCentralityDirected.setUp": {
  "lineno": 72,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_eigenvector_centrality.TestEigenvectorCentralityDirected.setupClass": {
  "lineno": 63,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_eigenvector_centrality.TestEigenvectorCentralityDirected.test_eigenvector_centrality_unweighted": {
  "lineno": 110,
  "symbols_in_volume": [
   "networkx.eigenvector_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_eigenvector_centrality.TestEigenvectorCentralityDirected.test_eigenvector_centrality_unweighted_numpy": {
  "lineno": 117,
  "symbols_in_volume": [
   "networkx.eigenvector_centrality_numpy"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_eigenvector_centrality.TestEigenvectorCentralityDirected.test_eigenvector_centrality_weighted": {
  "lineno": 97,
  "symbols_in_volume": [
   "networkx.eigenvector_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_eigenvector_centrality.TestEigenvectorCentralityDirected.test_eigenvector_centrality_weighted_numpy": {
  "lineno": 103,
  "symbols_in_volume": [
   "networkx.eigenvector_centrality_numpy"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_eigenvector_centrality.TestEigenvectorCentralityExceptions": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy"
  ],
  "type": "class"
 },
 "networkx.algorithms.centrality.tests.test_eigenvector_centrality.TestEigenvectorCentralityExceptions.setupClass": {
  "lineno": 125,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_eigenvector_centrality.TestEigenvectorCentralityExceptions.test_empty": {
  "lineno": 143,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXException",
   "networkx.eigenvector_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_eigenvector_centrality.TestEigenvectorCentralityExceptions.test_empty_numpy": {
  "lineno": 147,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXException",
   "networkx.eigenvector_centrality_numpy"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_eigenvector_centrality.TestEigenvectorCentralityExceptions.test_multigraph": {
  "lineno": 134,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.NetworkXException",
   "networkx.eigenvector_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_eigenvector_centrality.TestEigenvectorCentralityExceptions.test_multigraph_numpy": {
  "lineno": 138,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.NetworkXException",
   "networkx.eigenvector_centrality_numpy"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_harmonic_centrality": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.centrality.tests.test_harmonic_centrality.TestClosenessCentrality": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.centrality.tests.test_harmonic_centrality.TestClosenessCentrality.setUp": {
  "lineno": 9,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.balanced_tree",
   "networkx.complete_graph",
   "networkx.cycle_graph",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_harmonic_centrality.TestClosenessCentrality.test_bal_tree": {
  "lineno": 77,
  "symbols_in_volume": [
   "networkx.algorithms.centrality.harmonic_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_harmonic_centrality.TestClosenessCentrality.test_clique_complete": {
  "lineno": 44,
  "symbols_in_volume": [
   "networkx.algorithms.centrality.harmonic_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_harmonic_centrality.TestClosenessCentrality.test_cycle_C4": {
  "lineno": 55,
  "symbols_in_volume": [
   "networkx.algorithms.centrality.harmonic_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_harmonic_centrality.TestClosenessCentrality.test_cycle_C5": {
  "lineno": 65,
  "symbols_in_volume": [
   "networkx.algorithms.centrality.harmonic_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_harmonic_centrality.TestClosenessCentrality.test_empty": {
  "lineno": 117,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.algorithms.centrality.harmonic_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_harmonic_centrality.TestClosenessCentrality.test_exampleGraph": {
  "lineno": 90,
  "symbols_in_volume": [
   "networkx.algorithms.centrality.harmonic_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_harmonic_centrality.TestClosenessCentrality.test_p3_harmonic": {
  "lineno": 25,
  "symbols_in_volume": [
   "networkx.algorithms.centrality.harmonic_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_harmonic_centrality.TestClosenessCentrality.test_p4_harmonic": {
  "lineno": 34,
  "symbols_in_volume": [
   "networkx.algorithms.centrality.harmonic_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_harmonic_centrality.TestClosenessCentrality.test_singleton": {
  "lineno": 124,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.algorithms.centrality.harmonic_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_harmonic_centrality.TestClosenessCentrality.test_weighted_harmonic": {
  "lineno": 101,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.algorithms.centrality.harmonic_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentrality": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentrality.test_K5": {
  "lineno": 9,
  "symbols_in_volume": [
   "math.sqrt",
   "networkx.complete_graph",
   "networkx.katz_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentrality.test_P3": {
  "lineno": 23,
  "symbols_in_volume": [
   "networkx.katz_centrality",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentrality.test_bad_beta": {
  "lineno": 93,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXException",
   "networkx.katz_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentrality.test_bad_beta_numbe": {
  "lineno": 99,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXException",
   "networkx.katz_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentrality.test_beta_as_dict": {
  "lineno": 54,
  "symbols_in_volume": [
   "networkx.katz_centrality",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentrality.test_beta_as_scalar": {
  "lineno": 44,
  "symbols_in_volume": [
   "networkx.katz_centrality",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentrality.test_empty": {
  "lineno": 89,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.katz_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentrality.test_maxiter": {
  "lineno": 33,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.katz_centrality",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentrality.test_multigraph": {
  "lineno": 85,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.NetworkXException",
   "networkx.katz_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentrality.test_multiple_alpha": {
  "lineno": 65,
  "symbols_in_volume": [
   "networkx.katz_centrality",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentralityDirected": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentralityDirected.setUp": {
  "lineno": 230,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentralityDirected.test_katz_centrality_unweighted": {
  "lineno": 269,
  "symbols_in_volume": [
   "networkx.katz_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentralityDirected.test_katz_centrality_weighted": {
  "lineno": 262,
  "symbols_in_volume": [
   "networkx.katz_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentralityDirectedNumpy": {
  "lineno": 277,
  "symbols_in_volume": [
   "numpy"
  ],
  "type": "class"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentralityDirectedNumpy.setupClass": {
  "lineno": 280,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentralityDirectedNumpy.test_katz_centrality_unweighted": {
  "lineno": 296,
  "symbols_in_volume": [
   "networkx.katz_centrality_numpy"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentralityDirectedNumpy.test_katz_centrality_weighted": {
  "lineno": 289,
  "symbols_in_volume": [
   "networkx.katz_centrality_numpy"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentralityNumpy": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentralityNumpy.setupClass": {
  "lineno": 107,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentralityNumpy.test_K5": {
  "lineno": 116,
  "symbols_in_volume": [
   "math.sqrt",
   "networkx.complete_graph",
   "networkx.eigenvector_centrality_numpy",
   "networkx.katz_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentralityNumpy.test_K5_unweighted": {
  "lineno": 203,
  "symbols_in_volume": [
   "math.sqrt",
   "networkx.complete_graph",
   "networkx.eigenvector_centrality_numpy",
   "networkx.katz_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentralityNumpy.test_P3": {
  "lineno": 130,
  "symbols_in_volume": [
   "networkx.katz_centrality_numpy",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentralityNumpy.test_P3_unweighted": {
  "lineno": 217,
  "symbols_in_volume": [
   "networkx.katz_centrality_numpy",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentralityNumpy.test_bad_beta": {
  "lineno": 191,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXException",
   "networkx.katz_centrality_numpy"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentralityNumpy.test_bad_beta_numbe": {
  "lineno": 197,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXException",
   "networkx.katz_centrality_numpy"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentralityNumpy.test_beta_as_dict": {
  "lineno": 152,
  "symbols_in_volume": [
   "networkx.katz_centrality_numpy",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentralityNumpy.test_beta_as_scalar": {
  "lineno": 141,
  "symbols_in_volume": [
   "networkx.katz_centrality_numpy",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentralityNumpy.test_empty": {
  "lineno": 187,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.katz_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentralityNumpy.test_multigraph": {
  "lineno": 183,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.NetworkXException",
   "networkx.katz_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzCentralityNumpy.test_multiple_alpha": {
  "lineno": 163,
  "symbols_in_volume": [
   "networkx.katz_centrality_numpy",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzEigenvectorVKatz": {
  "lineno": 303,
  "symbols_in_volume": [
   "numpy"
  ],
  "type": "class"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzEigenvectorVKatz.setupClass": {
  "lineno": 306,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_katz_centrality.TestKatzEigenvectorVKatz.test_eigenvector_v_katz_random": {
  "lineno": 317,
  "symbols_in_volume": [
   "networkx.adjacency_matrix",
   "networkx.eigenvector_centrality_numpy",
   "networkx.gnp_random_graph",
   "networkx.katz_centrality_numpy",
   "numpy.linalg.eigvals"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_load_centrality": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.centrality.tests.test_load_centrality.TestLoadCentrality": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.centrality.tests.test_load_centrality.TestLoadCentrality.setUp": {
  "lineno": 8,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.balanced_tree",
   "networkx.complete_graph",
   "networkx.cycle_graph",
   "networkx.florentine_families_graph",
   "networkx.krackhardt_kite_graph",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_load_centrality.TestLoadCentrality.test_c4_edge_load": {
  "lineno": 228,
  "symbols_in_volume": [
   "networkx.edge_load"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_load_centrality.TestLoadCentrality.test_florentine_families_load": {
  "lineno": 103,
  "symbols_in_volume": [
   "networkx.load_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_load_centrality.TestLoadCentrality.test_k5_edge_load": {
  "lineno": 247,
  "symbols_in_volume": [
   "networkx.edge_load"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_load_centrality.TestLoadCentrality.test_k5_load": {
  "lineno": 53,
  "symbols_in_volume": [
   "networkx.load_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_load_centrality.TestLoadCentrality.test_krackhardt_load": {
  "lineno": 87,
  "symbols_in_volume": [
   "networkx.load_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_load_centrality.TestLoadCentrality.test_load_betweenness_difference": {
  "lineno": 186,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.load_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_load_centrality.TestLoadCentrality.test_not_strongly_connected": {
  "lineno": 37,
  "symbols_in_volume": [
   "networkx.load_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_load_centrality.TestLoadCentrality.test_p2_load": {
  "lineno": 78,
  "symbols_in_volume": [
   "networkx.load_centrality",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_load_centrality.TestLoadCentrality.test_p3_load": {
  "lineno": 64,
  "symbols_in_volume": [
   "networkx.load_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_load_centrality.TestLoadCentrality.test_p4_edge_load": {
  "lineno": 238,
  "symbols_in_volume": [
   "networkx.edge_load"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_load_centrality.TestLoadCentrality.test_tree_edge_load": {
  "lineno": 263,
  "symbols_in_volume": [
   "networkx.edge_load"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_load_centrality.TestLoadCentrality.test_unnormalized_florentine_families_load": {
  "lineno": 163,
  "symbols_in_volume": [
   "networkx.load_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_load_centrality.TestLoadCentrality.test_unnormalized_k5_load": {
  "lineno": 125,
  "symbols_in_volume": [
   "networkx.load_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_load_centrality.TestLoadCentrality.test_unnormalized_krackhardt_load": {
  "lineno": 146,
  "symbols_in_volume": [
   "networkx.load_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_load_centrality.TestLoadCentrality.test_unnormalized_p3_load": {
  "lineno": 136,
  "symbols_in_volume": [
   "networkx.load_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.centrality.tests.test_load_centrality.TestLoadCentrality.test_weighted_load": {
  "lineno": 48,
  "symbols_in_volume": [
   "networkx.load_centrality"
  ],
  "type": "function"
 },
 "networkx.algorithms.chordal": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.chordal.chordal_alg": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.chordal.chordal_alg.NetworkXTreewidthBoundExceeded": {
  "lineno": 25,
  "symbols_in_volume": [
   "networkx.NetworkXException"
  ],
  "type": "class"
 },
 "networkx.algorithms.chordal.chordal_alg._connected_chordal_graph_cliques": {
  "lineno": 317,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "random.choice"
  ],
  "type": "function"
 },
 "networkx.algorithms.chordal.chordal_alg._find_chordality_breaker": {
  "lineno": 280,
  "symbols_in_volume": [
   "networkx.NetworkXTreewidthBoundExceeded",
   "random.choice",
   "sys.maxsize"
  ],
  "type": "function"
 },
 "networkx.algorithms.chordal.chordal_alg._find_missing_edge": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.chordal.chordal_alg._is_complete_graph": {
  "lineno": 245,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.chordal.chordal_alg._max_cardinality_node": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.chordal.chordal_alg.chordal_graph_cliques": {
  "lineno": 160,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.connected.connected_component_subgraphs"
  ],
  "type": "function"
 },
 "networkx.algorithms.chordal.chordal_alg.chordal_graph_treewidth": {
  "lineno": 202,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.chordal_graph_cliques"
  ],
  "type": "function"
 },
 "networkx.algorithms.chordal.chordal_alg.find_induced_nodes": {
  "lineno": 83,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "sys.maxsize"
  ],
  "type": "function"
 },
 "networkx.algorithms.chordal.chordal_alg.is_chordal": {
  "lineno": 30,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.chordal.tests.test_chordal": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.chordal.tests.test_chordal.TestMCS": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.chordal.tests.test_chordal.TestMCS.setUp": {
  "lineno": 7,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.chordal.tests.test_chordal.TestMCS.test_chordal_find_cliques": {
  "lineno": 43,
  "symbols_in_volume": [
   "networkx.chordal_graph_cliques"
  ],
  "type": "function"
 },
 "networkx.algorithms.chordal.tests.test_chordal.TestMCS.test_chordal_find_cliquesCC": {
  "lineno": 55,
  "symbols_in_volume": [
   "networkx.chordal_graph_cliques"
  ],
  "type": "function"
 },
 "networkx.algorithms.chordal.tests.test_chordal.TestMCS.test_chordal_find_cliques_path": {
  "lineno": 48,
  "symbols_in_volume": [
   "networkx.chordal_graph_cliques",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.chordal.tests.test_chordal.TestMCS.test_induced_nodes": {
  "lineno": 32,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.NetworkXTreewidthBoundExceeded",
   "networkx.find_induced_nodes",
   "networkx.generators.classic.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.chordal.tests.test_chordal.TestMCS.test_is_chordal": {
  "lineno": 24,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.cycle_graph",
   "networkx.is_chordal"
  ],
  "type": "function"
 },
 "networkx.algorithms.clique": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.clique.cliques_containing_node": {
  "lineno": 497,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.clique.enumerate_all_cliques": {
  "lineno": 36,
  "symbols_in_volume": [
   "collections.deque",
   "itertools.chain",
   "itertools.ifilter",
   "itertools.islice"
  ],
  "type": "function"
 },
 "networkx.algorithms.clique.find_cliques": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.clique.find_cliques_recursive": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.clique.find_cliques_recursive.expand": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.clique.graph_clique_number": {
  "lineno": 403,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.clique.graph_number_of_cliques": {
  "lineno": 413,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.clique.make_clique_bipartite": {
  "lineno": 304,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.clique.make_max_clique_graph": {
  "lineno": 273,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.clique.node_clique_number": {
  "lineno": 423,
  "symbols_in_volume": [
   "networkx.ego_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.clique.number_of_cliques": {
  "lineno": 474,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.clique.project_down": {
  "lineno": 355,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.clique.project_up": {
  "lineno": 378,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.cluster": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.cluster._triangles_and_degree_iter": {
  "lineno": 59,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.cluster._weighted_triangles_and_degree_iter": {
  "lineno": 83,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.cluster.average_clustering": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.cluster.clustering": {
  "lineno": 175,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.cluster.square_clustering": {
  "lineno": 294,
  "symbols_in_volume": [
   "itertools.combinations"
  ],
  "type": "function"
 },
 "networkx.algorithms.cluster.transitivity": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.cluster.triangles": {
  "lineno": 19,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.coloring.greedy_coloring": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.coloring.greedy_coloring.greedy_color": {
  "lineno": 205,
  "symbols_in_volume": [
   "itertools.count",
   "networkx.NetworkXPointlessConcept"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.greedy_coloring.max_degree_node": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.coloring.greedy_coloring.min_degree_node": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.coloring.greedy_coloring.strategy_connected_sequential": {
  "lineno": 125,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.bfs_edges",
   "networkx.connected_component_subgraphs",
   "networkx.dfs_edges"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.greedy_coloring.strategy_connected_sequential_bfs": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.coloring.greedy_coloring.strategy_connected_sequential_dfs": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.coloring.greedy_coloring.strategy_independent_set": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.coloring.greedy_coloring.strategy_largest_first": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.coloring.greedy_coloring.strategy_random_sequential": {
  "lineno": 51,
  "symbols_in_volume": [
   "random.shuffle"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.greedy_coloring.strategy_saturation_largest_first": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.coloring.greedy_coloring.strategy_smallest_last": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.coloring.greedy_coloring_with_interchange": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.coloring.greedy_coloring_with_interchange.AdjEntry": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.coloring.greedy_coloring_with_interchange.AdjEntry.__init__": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.coloring.greedy_coloring_with_interchange.AdjEntry.__repr__": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.coloring.greedy_coloring_with_interchange.Node": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.coloring.greedy_coloring_with_interchange.Node.__init__": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.coloring.greedy_coloring_with_interchange.Node.__repr__": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.coloring.greedy_coloring_with_interchange.Node.assign_color": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.coloring.greedy_coloring_with_interchange.Node.clear_color": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.coloring.greedy_coloring_with_interchange.Node.iter_neighbors": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.coloring.greedy_coloring_with_interchange.Node.iter_neighbors_color": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.coloring.greedy_coloring_with_interchange.greedy_coloring_with_interchange": {
  "lineno": 72,
  "symbols_in_volume": [
   "itertools.count",
   "itertools.dropwhile"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_cs_dfs_empty": {
  "lineno": 225,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_connected_sequential_dfs"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_cs_dfs_oneNode": {
  "lineno": 231,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_connected_sequential_dfs"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_cs_dfs_shc": {
  "lineno": 249,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_connected_sequential_dfs"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_cs_dfs_threeNodeClique": {
  "lineno": 243,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_connected_sequential_dfs"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_cs_dfs_twoNodes": {
  "lineno": 237,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_connected_sequential_dfs"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_cs_disconnected": {
  "lineno": 255,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_connected_sequential"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_cs_empty": {
  "lineno": 195,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_connected_sequential"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_cs_oneNode": {
  "lineno": 201,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_connected_sequential"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_cs_shc": {
  "lineno": 219,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_connected_sequential"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_cs_threeNodeClique": {
  "lineno": 213,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_connected_sequential"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_cs_twoNodes": {
  "lineno": 207,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_connected_sequential"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_csi_csshc": {
  "lineno": 364,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_connected_sequential"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_gis_empty": {
  "lineno": 158,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_independent_set"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_gis_hc": {
  "lineno": 188,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_independent_set"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_gis_oneNode": {
  "lineno": 164,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_independent_set"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_gis_shc": {
  "lineno": 182,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_independent_set"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_gis_threeNodeClique": {
  "lineno": 176,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_independent_set"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_gis_twoNodes": {
  "lineno": 170,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_independent_set"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_gisi_oneNode": {
  "lineno": 360,
  "symbols_in_volume": [
   "networkx.NetworkXPointlessConcept",
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_independent_set"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_lf_empty": {
  "lineno": 84,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_largest_first"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_lf_hc": {
  "lineno": 114,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_largest_first"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_lf_oneNode": {
  "lineno": 90,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_largest_first"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_lf_shc": {
  "lineno": 108,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_largest_first"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_lf_threeNodeClique": {
  "lineno": 102,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_largest_first"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_lf_twoNodes": {
  "lineno": 96,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_largest_first"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_lfi_hc": {
  "lineno": 330,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_largest_first"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_lfi_lfhc": {
  "lineno": 318,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_largest_first"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_lfi_lfshc": {
  "lineno": 312,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_largest_first"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_lfi_shc": {
  "lineno": 324,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_largest_first"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_rs_empty": {
  "lineno": 16,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_random_sequential"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_rs_oneNode": {
  "lineno": 22,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_random_sequential"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_rs_shc": {
  "lineno": 40,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_random_sequential"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_rs_threeNodeClique": {
  "lineno": 34,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_random_sequential"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_rs_twoNodes": {
  "lineno": 28,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_random_sequential"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_rsi_empty": {
  "lineno": 271,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_random_sequential"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_rsi_oneNode": {
  "lineno": 277,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_random_sequential"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_rsi_rsshc": {
  "lineno": 295,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_random_sequential"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_rsi_shc": {
  "lineno": 301,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_random_sequential"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_rsi_threeNodeClique": {
  "lineno": 289,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_random_sequential"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_rsi_twoNodes": {
  "lineno": 283,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_random_sequential"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_sl_empty": {
  "lineno": 121,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_smallest_last"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_sl_hc": {
  "lineno": 151,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_smallest_last"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_sl_oneNode": {
  "lineno": 127,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_smallest_last"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_sl_shc": {
  "lineno": 145,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_smallest_last"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_sl_threeNodeClique": {
  "lineno": 139,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_smallest_last"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_sl_twoNodes": {
  "lineno": 133,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_smallest_last"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_slf_empty": {
  "lineno": 47,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_saturation_largest_first"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_slf_hc": {
  "lineno": 77,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_saturation_largest_first"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_slf_oneNode": {
  "lineno": 53,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_saturation_largest_first"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_slf_shc": {
  "lineno": 71,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_saturation_largest_first"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_slf_threeNodeClique": {
  "lineno": 65,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_saturation_largest_first"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_slf_twoNodes": {
  "lineno": 59,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_saturation_largest_first"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_slfi_slfshc": {
  "lineno": 307,
  "symbols_in_volume": [
   "networkx.NetworkXPointlessConcept",
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_saturation_largest_first"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_sli_hc": {
  "lineno": 354,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_smallest_last"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_sli_shc": {
  "lineno": 348,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_smallest_last"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_sli_slhc": {
  "lineno": 342,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_smallest_last"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.TestColoring.test_sli_slshc": {
  "lineno": 336,
  "symbols_in_volume": [
   "networkx.coloring.greedy_color",
   "networkx.coloring.strategy_smallest_last"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.cs_shc": {
  "lineno": 557,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.dict_to_sets": {
  "lineno": 387,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.emptyGraph": {
  "lineno": 400,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.gis_hc": {
  "lineno": 545,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.gis_shc": {
  "lineno": 535,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.lf_hc": {
  "lineno": 478,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.lf_shc": {
  "lineno": 466,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.lfi_hc": {
  "lineno": 603,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.lfi_shc": {
  "lineno": 586,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.oneNodeGraph": {
  "lineno": 403,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.rs_shc": {
  "lineno": 420,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.rsi_shc": {
  "lineno": 571,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.sl_hc": {
  "lineno": 512,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.sl_shc": {
  "lineno": 496,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.slf_hc": {
  "lineno": 447,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.slf_shc": {
  "lineno": 430,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.sli_hc": {
  "lineno": 642,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.sli_shc": {
  "lineno": 624,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.threeNodeClique": {
  "lineno": 414,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.twoNodesGraph": {
  "lineno": 408,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.verify_coloring": {
  "lineno": 371,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.coloring.tests.test_coloring.verify_length": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.community": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.community.kclique": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.community.kclique._get_adjacent_cliques": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.community.kclique.k_clique_communities": {
  "lineno": 13,
  "symbols_in_volume": [
   "collections.defaultdict",
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.connected_components",
   "networkx.find_cliques"
  ],
  "type": "function"
 },
 "networkx.algorithms.community.tests.test_kclique": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.community.tests.test_kclique.test_bad_k": {
  "lineno": 44,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.k_clique_communities"
  ],
  "type": "function"
 },
 "networkx.algorithms.community.tests.test_kclique.test_isolated_K5": {
  "lineno": 16,
  "symbols_in_volume": [
   "itertools.combinations",
   "networkx.Graph",
   "networkx.k_clique_communities"
  ],
  "type": "function"
 },
 "networkx.algorithms.community.tests.test_kclique.test_overlaping_K5": {
  "lineno": 7,
  "symbols_in_volume": [
   "itertools.combinations",
   "networkx.Graph",
   "networkx.k_clique_communities"
  ],
  "type": "function"
 },
 "networkx.algorithms.community.tests.test_kclique.test_zachary": {
  "lineno": 23,
  "symbols_in_volume": [
   "networkx.k_clique_communities",
   "networkx.karate_club_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.components": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.components.attracting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.components.attracting.attracting_component_subgraphs": {
  "lineno": 109,
  "symbols_in_volume": [
   "networkx.utils.decorators.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.attracting.attracting_components": {
  "lineno": 20,
  "symbols_in_volume": [
   "networkx.condensation",
   "networkx.strongly_connected_components",
   "networkx.utils.decorators.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.attracting.is_attracting_component": {
  "lineno": 80,
  "symbols_in_volume": [
   "networkx.utils.decorators.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.attracting.number_attracting_components": {
  "lineno": 55,
  "symbols_in_volume": [
   "networkx.utils.decorators.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.biconnected": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.components.biconnected._biconnected_dfs": {
  "lineno": 420,
  "symbols_in_volume": [
   "networkx.utils.decorators.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.biconnected.articulation_points": {
  "lineno": 349,
  "symbols_in_volume": [
   "networkx.utils.decorators.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.biconnected.biconnected_component_edges": {
  "lineno": 95,
  "symbols_in_volume": [
   "networkx.utils.decorators.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.biconnected.biconnected_component_subgraphs": {
  "lineno": 255,
  "symbols_in_volume": [
   "networkx.utils.decorators.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.biconnected.biconnected_components": {
  "lineno": 169,
  "symbols_in_volume": [
   "itertools.chain.from_iterable",
   "networkx.utils.decorators.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.biconnected.is_biconnected": {
  "lineno": 28,
  "symbols_in_volume": [
   "networkx.utils.decorators.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.connected": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.components.connected._plain_bfs": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.components.connected.connected_component_subgraphs": {
  "lineno": 71,
  "symbols_in_volume": [
   "networkx.utils.decorators.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.connected.connected_components": {
  "lineno": 26,
  "symbols_in_volume": [
   "networkx.utils.decorators.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.connected.is_connected": {
  "lineno": 141,
  "symbols_in_volume": [
   "networkx.NetworkXPointlessConcept",
   "networkx.utils.decorators.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.connected.node_connected_component": {
  "lineno": 176,
  "symbols_in_volume": [
   "networkx.utils.decorators.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.connected.number_connected_components": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.components.semiconnected": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.components.semiconnected.is_semiconnected": {
  "lineno": 16,
  "symbols_in_volume": [
   "networkx.NetworkXPointlessConcept",
   "networkx.condensation",
   "networkx.is_weakly_connected",
   "networkx.topological_sort",
   "networkx.utils.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.strongly_connected": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.components.strongly_connected.condensation": {
  "lineno": 369,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.set_node_attributes",
   "networkx.strongly_connected_components",
   "networkx.utils.decorators.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.strongly_connected.is_strongly_connected": {
  "lineno": 340,
  "symbols_in_volume": [
   "networkx.NetworkXPointlessConcept",
   "networkx.utils.decorators.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.strongly_connected.kosaraju_strongly_connected_components": {
  "lineno": 123,
  "symbols_in_volume": [
   "networkx.dfs_postorder_nodes",
   "networkx.dfs_preorder_nodes",
   "networkx.utils.decorators.not_implemented_for",
   "networkx.utils.reversed"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.strongly_connected.number_strongly_connected_components": {
  "lineno": 315,
  "symbols_in_volume": [
   "networkx.utils.decorators.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.strongly_connected.strongly_connected_component_subgraphs": {
  "lineno": 269,
  "symbols_in_volume": [
   "networkx.utils.decorators.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.strongly_connected.strongly_connected_components": {
  "lineno": 27,
  "symbols_in_volume": [
   "networkx.utils.decorators.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.strongly_connected.strongly_connected_components_recursive": {
  "lineno": 182,
  "symbols_in_volume": [
   "networkx.utils.decorators.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.strongly_connected.strongly_connected_components_recursive.visit": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_attracting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.components.tests.test_attracting.TestAttractingComponents": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.components.tests.test_attracting.TestAttractingComponents.setUp": {
  "lineno": 8,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_attracting.TestAttractingComponents.test_attracting_components": {
  "lineno": 18,
  "symbols_in_volume": [
   "networkx.attracting_components"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_attracting.TestAttractingComponents.test_connected_raise": {
  "lineno": 46,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXNotImplemented",
   "networkx.attracting_component_subgraphs",
   "networkx.attracting_components",
   "networkx.is_attracting_component",
   "networkx.number_attracting_components"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_attracting.TestAttractingComponents.test_is_attracting_component": {
  "lineno": 39,
  "symbols_in_volume": [
   "networkx.is_attracting_component"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_attracting.TestAttractingComponents.test_number_attacting_components": {
  "lineno": 34,
  "symbols_in_volume": [
   "networkx.number_attracting_components"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_biconnected": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.components.tests.test_biconnected.assert_components_edges_equal": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_biconnected.assert_components_equal": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_biconnected.test_articulation_points_cycle": {
  "lineno": 45,
  "symbols_in_volume": [
   "networkx.articulation_points",
   "networkx.cycle_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_biconnected.test_barbell": {
  "lineno": 19,
  "symbols_in_volume": [
   "networkx.articulation_points",
   "networkx.barbell_graph",
   "networkx.biconnected_components"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_biconnected.test_biconnected_component_subgraphs_cycle": {
  "lineno": 69,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.biconnected_component_subgraphs",
   "networkx.cycle_graph",
   "networkx.is_isomorphic"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_biconnected.test_biconnected_components1": {
  "lineno": 82,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.articulation_points",
   "networkx.biconnected_component_edges"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_biconnected.test_biconnected_components2": {
  "lineno": 105,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.biconnected_component_edges"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_biconnected.test_biconnected_components_cycle": {
  "lineno": 63,
  "symbols_in_volume": [
   "networkx.biconnected_components",
   "networkx.cycle_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_biconnected.test_biconnected_davis": {
  "lineno": 122,
  "symbols_in_volume": [
   "networkx.articulation_points",
   "networkx.biconnected_components",
   "networkx.davis_southern_women_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_biconnected.test_biconnected_eppstein": {
  "lineno": 139,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.biconnected_components",
   "networkx.is_biconnected"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_biconnected.test_biconnected_karate": {
  "lineno": 129,
  "symbols_in_volume": [
   "networkx.articulation_points",
   "networkx.biconnected_components",
   "networkx.karate_club_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_biconnected.test_connected_raise": {
  "lineno": 167,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXNotImplemented",
   "networkx.articulation_points",
   "networkx.biconnected_component_edges",
   "networkx.biconnected_component_subgraphs",
   "networkx.biconnected_components",
   "networkx.is_biconnected"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_biconnected.test_empty_is_biconnected": {
  "lineno": 57,
  "symbols_in_volume": [
   "networkx.empty_graph",
   "networkx.is_biconnected"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_biconnected.test_is_biconnected": {
  "lineno": 51,
  "symbols_in_volume": [
   "networkx.cycle_graph",
   "networkx.is_biconnected"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_connected": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.components.tests.test_connected.TestConnected": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.components.tests.test_connected.TestConnected.setUp": {
  "lineno": 9,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.convert_node_labels_to_integers",
   "networkx.grid_2d_graph",
   "networkx.house_graph",
   "networkx.lollipop_graph",
   "networkx.union"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_connected.TestConnected.test_connected_component_subgraphs": {
  "lineno": 75,
  "symbols_in_volume": [
   "networkx.connected_component_subgraphs",
   "networkx.weakly_connected_component_subgraphs"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_connected.TestConnected.test_connected_components": {
  "lineno": 45,
  "symbols_in_volume": [
   "networkx.connected_components"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_connected.TestConnected.test_connected_components2": {
  "lineno": 63,
  "symbols_in_volume": [
   "networkx.connected_components"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_connected.TestConnected.test_connected_raise": {
  "lineno": 90,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXNotImplemented",
   "networkx.NetworkXPointlessConcept",
   "networkx.connected_component_subgraphs",
   "networkx.connected_components",
   "networkx.is_connected",
   "networkx.node_connected_component",
   "networkx.number_connected_components"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_connected.TestConnected.test_is_connected": {
  "lineno": 84,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.is_connected"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_connected.TestConnected.test_node_connected_components": {
  "lineno": 69,
  "symbols_in_volume": [
   "networkx.node_connected_component"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_connected.TestConnected.test_number_connected_components": {
  "lineno": 55,
  "symbols_in_volume": [
   "networkx.number_connected_components"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_connected.TestConnected.test_number_connected_components2": {
  "lineno": 59,
  "symbols_in_volume": [
   "networkx.number_connected_components"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_semiconnected": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.components.tests.test_semiconnected.TestIsSemiconnected": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.components.tests.test_semiconnected.TestIsSemiconnected.test_alternating_path": {
  "lineno": 50,
  "symbols_in_volume": [
   "itertools.chain.from_iterable",
   "networkx.DiGraph",
   "networkx.is_semiconnected"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_semiconnected.TestIsSemiconnected.test_cycle": {
  "lineno": 30,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.cycle_graph",
   "networkx.is_semiconnected",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_semiconnected.TestIsSemiconnected.test_dumbbell": {
  "lineno": 43,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.cycle_graph",
   "networkx.is_semiconnected"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_semiconnected.TestIsSemiconnected.test_empty": {
  "lineno": 13,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.MultiDiGraph",
   "networkx.NetworkXPointlessConcept",
   "networkx.is_semiconnected"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_semiconnected.TestIsSemiconnected.test_path": {
  "lineno": 24,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.is_semiconnected",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_semiconnected.TestIsSemiconnected.test_single_node_graph": {
  "lineno": 19,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.is_semiconnected"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_semiconnected.TestIsSemiconnected.test_tree": {
  "lineno": 37,
  "symbols_in_volume": [
   "itertools.chain.from_iterable",
   "networkx.DiGraph",
   "networkx.is_semiconnected"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_semiconnected.TestIsSemiconnected.test_undirected": {
  "lineno": 7,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.MultiGraph",
   "networkx.NetworkXNotImplemented",
   "networkx.is_semiconnected"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_strongly_connected": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.components.tests.test_strongly_connected.TestStronglyConnected": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.components.tests.test_strongly_connected.TestStronglyConnected.setUp": {
  "lineno": 8,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_strongly_connected.TestStronglyConnected.test_condensation_mapping_and_members": {
  "lineno": 126,
  "symbols_in_volume": [
   "networkx.condensation"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_strongly_connected.TestStronglyConnected.test_connected_raise": {
  "lineno": 137,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.NetworkXNotImplemented",
   "networkx.NetworkXPointlessConcept",
   "networkx.condensation",
   "networkx.is_strongly_connected",
   "networkx.kosaraju_strongly_connected_components",
   "networkx.strongly_connected_component_subgraphs",
   "networkx.strongly_connected_components",
   "networkx.strongly_connected_components_recursive"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_strongly_connected.TestStronglyConnected.test_contract_scc1": {
  "lineno": 75,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.condensation",
   "networkx.is_directed_acyclic_graph",
   "networkx.strongly_connected_components"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_strongly_connected.TestStronglyConnected.test_contract_scc_edge": {
  "lineno": 110,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.condensation",
   "networkx.strongly_connected_components"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_strongly_connected.TestStronglyConnected.test_contract_scc_isolate": {
  "lineno": 100,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.condensation",
   "networkx.strongly_connected_components"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_strongly_connected.TestStronglyConnected.test_is_strongly_connected": {
  "lineno": 63,
  "symbols_in_volume": [
   "networkx.is_strongly_connected"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_strongly_connected.TestStronglyConnected.test_kosaraju": {
  "lineno": 53,
  "symbols_in_volume": [
   "networkx.kosaraju_strongly_connected_components"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_strongly_connected.TestStronglyConnected.test_number_strongly_connected_components": {
  "lineno": 58,
  "symbols_in_volume": [
   "networkx.number_strongly_connected_components"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_strongly_connected.TestStronglyConnected.test_strongly_connected_component_subgraphs": {
  "lineno": 70,
  "symbols_in_volume": [
   "networkx.strongly_connected_component_subgraphs"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_strongly_connected.TestStronglyConnected.test_tarjan": {
  "lineno": 43,
  "symbols_in_volume": [
   "networkx.strongly_connected_components"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_strongly_connected.TestStronglyConnected.test_tarjan_recursive": {
  "lineno": 48,
  "symbols_in_volume": [
   "networkx.strongly_connected_components_recursive"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_subgraph_copies": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.components.tests.test_subgraph_copies.TestSubgraphAttributesDicts": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.components.tests.test_subgraph_copies.TestSubgraphAttributesDicts.setUp": {
  "lineno": 9,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.attracting_component_subgraphs",
   "networkx.biconnected_component_subgraphs",
   "networkx.connected_component_subgraphs",
   "networkx.strongly_connected_component_subgraphs",
   "networkx.weakly_connected_component_subgraphs"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_subgraph_copies.TestSubgraphAttributesDicts.test_subgraphs_copy": {
  "lineno": 51,
  "symbols_in_volume": [
   "copy.deepcopy",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_subgraph_copies.TestSubgraphAttributesDicts.test_subgraphs_default_copy_behavior": {
  "lineno": 32,
  "symbols_in_volume": [
   "copy.deepcopy",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_subgraph_copies.TestSubgraphAttributesDicts.test_subgraphs_no_copy": {
  "lineno": 69,
  "symbols_in_volume": [
   "copy.deepcopy",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_weakly_connected": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.components.tests.test_weakly_connected.TestWeaklyConnected": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.components.tests.test_weakly_connected.TestWeaklyConnected.setUp": {
  "lineno": 8,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_weakly_connected.TestWeaklyConnected.test_connected_raise": {
  "lineno": 64,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXNotImplemented",
   "networkx.is_weakly_connected",
   "networkx.number_weakly_connected_components",
   "networkx.weakly_connected_component_subgraphs",
   "networkx.weakly_connected_components"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_weakly_connected.TestWeaklyConnected.test_is_weakly_connected": {
  "lineno": 59,
  "symbols_in_volume": [
   "networkx.is_connected",
   "networkx.is_weakly_connected"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_weakly_connected.TestWeaklyConnected.test_number_weakly_connected_components": {
  "lineno": 43,
  "symbols_in_volume": [
   "networkx.number_connected_components",
   "networkx.number_weakly_connected_components"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_weakly_connected.TestWeaklyConnected.test_weakly_connected_component_subgraphs": {
  "lineno": 50,
  "symbols_in_volume": [
   "networkx.connected_component_subgraphs",
   "networkx.weakly_connected_component_subgraphs"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.tests.test_weakly_connected.TestWeaklyConnected.test_weakly_connected_components": {
  "lineno": 36,
  "symbols_in_volume": [
   "networkx.connected_components",
   "networkx.weakly_connected_components"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.weakly_connected": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.components.weakly_connected._plain_bfs": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.components.weakly_connected.is_weakly_connected": {
  "lineno": 148,
  "symbols_in_volume": [
   "networkx.NetworkXPointlessConcept",
   "networkx.utils.decorators.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.weakly_connected.number_weakly_connected_components": {
  "lineno": 72,
  "symbols_in_volume": [
   "networkx.utils.decorators.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.weakly_connected.weakly_connected_component_subgraphs": {
  "lineno": 98,
  "symbols_in_volume": [
   "networkx.utils.decorators.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.components.weakly_connected.weakly_connected_components": {
  "lineno": 25,
  "symbols_in_volume": [
   "networkx.utils.decorators.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.connectivity.connectivity": {
  "lineno": null,
  "symbols_in_volume": [
   "networkx.algorithms.flow.edmonds_karp"
  ],
  "type": "module"
 },
 "networkx.algorithms.connectivity.connectivity.all_pairs_node_connectivity": {
  "lineno": 415,
  "symbols_in_volume": [
   "itertools.combinations",
   "itertools.permutations",
   "networkx.algorithms.flow.build_residual_network"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.connectivity.average_node_connectivity": {
  "lineno": 347,
  "symbols_in_volume": [
   "itertools.combinations",
   "itertools.permutations",
   "networkx.algorithms.flow.build_residual_network"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.connectivity.edge_connectivity": {
  "lineno": 640,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.algorithms.flow.build_residual_network",
   "networkx.dominating_set",
   "networkx.is_connected",
   "networkx.is_weakly_connected"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.connectivity.local_edge_connectivity": {
  "lineno": 482,
  "symbols_in_volume": [
   "networkx.algorithms.flow.edmonds_karp",
   "networkx.algorithms.flow.shortest_augmenting_path",
   "networkx.maximum_flow_value"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.connectivity.local_node_connectivity": {
  "lineno": 29,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.algorithms.flow.edmonds_karp",
   "networkx.algorithms.flow.shortest_augmenting_path",
   "networkx.maximum_flow_value"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.connectivity.node_connectivity": {
  "lineno": 205,
  "symbols_in_volume": [
   "itertools.combinations",
   "itertools.permutations",
   "networkx.NetworkXError",
   "networkx.algorithms.flow.build_residual_network",
   "networkx.is_connected",
   "networkx.is_weakly_connected"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.connectivity.node_connectivity.neighbors": {
  "lineno": 313,
  "symbols_in_volume": [
   "itertools.chain.from_iterable"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.cuts": {
  "lineno": null,
  "symbols_in_volume": [
   "networkx.algorithms.flow.edmonds_karp"
  ],
  "type": "module"
 },
 "networkx.algorithms.connectivity.cuts.minimum_edge_cut": {
  "lineno": 444,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.algorithms.flow.build_residual_network",
   "networkx.dominating_set",
   "networkx.is_connected",
   "networkx.is_weakly_connected"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.cuts.minimum_node_cut": {
  "lineno": 300,
  "symbols_in_volume": [
   "itertools.combinations",
   "itertools.permutations",
   "networkx.NetworkXError",
   "networkx.algorithms.flow.build_residual_network",
   "networkx.is_connected",
   "networkx.is_weakly_connected"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.cuts.minimum_node_cut.neighbors": {
  "lineno": 410,
  "symbols_in_volume": [
   "itertools.chain.from_iterable"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.cuts.minimum_st_edge_cut": {
  "lineno": 25,
  "symbols_in_volume": [
   "networkx.minimum_cut"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.cuts.minimum_st_node_cut": {
  "lineno": 161,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.kcomponents": {
  "lineno": null,
  "symbols_in_volume": [
   "networkx.algorithms.flow.edmonds_karp"
  ],
  "type": "module"
 },
 "networkx.algorithms.connectivity.kcomponents._consolidate": {
  "lineno": 155,
  "symbols_in_volume": [
   "itertools.combinations",
   "networkx.Graph",
   "networkx.connected_components"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.kcomponents._generate_partition": {
  "lineno": 176,
  "symbols_in_volume": [
   "networkx.connected_components"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.kcomponents._generate_partition.has_nbrs_in_partition": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.connectivity.kcomponents._reconstruct_k_components": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.connectivity.kcomponents.build_k_number_dict": {
  "lineno": 216,
  "symbols_in_volume": [
   "operator.itemgetter"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.kcomponents.k_components": {
  "lineno": 20,
  "symbols_in_volume": [
   "collections.defaultdict",
   "networkx.all_node_cuts",
   "networkx.biconnected_component_subgraphs",
   "networkx.connected_components",
   "networkx.node_connectivity",
   "networkx.utils.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.kcutsets": {
  "lineno": null,
  "symbols_in_volume": [
   "networkx.algorithms.flow.edmonds_karp"
  ],
  "type": "module"
 },
 "networkx.algorithms.connectivity.kcutsets._is_separating_set": {
  "lineno": 174,
  "symbols_in_volume": [
   "networkx.is_connected"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.kcutsets.all_node_cuts": {
  "lineno": 21,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.algorithms.flow.build_residual_network",
   "networkx.algorithms.flow.shortest_augmenting_path",
   "networkx.antichains",
   "networkx.condensation",
   "networkx.is_connected",
   "networkx.node_connectivity",
   "operator.itemgetter"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.stoerwagner": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.connectivity.stoerwagner.stoer_wagner": {
  "lineno": 18,
  "symbols_in_volume": [
   "itertools.islice",
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.is_connected",
   "networkx.single_source_shortest_path_length"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity": {
  "lineno": null,
  "symbols_in_volume": [
   "networkx.algorithms.flow.edmonds_karp",
   "networkx.algorithms.flow.preflow_push",
   "networkx.algorithms.flow.shortest_augmenting_path"
  ],
  "type": "module"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.TestAllPairsNodeConnectivity": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.TestAllPairsNodeConnectivity.setUp": {
  "lineno": 285,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.complete_graph",
   "networkx.cycle_graph",
   "networkx.gnp_random_graph",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.TestAllPairsNodeConnectivity.test_all_pairs_connectivity": {
  "lineno": 340,
  "symbols_in_volume": [
   "itertools.combinations",
   "networkx.Graph",
   "networkx.all_pairs_node_connectivity",
   "networkx.node_connectivity",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.TestAllPairsNodeConnectivity.test_all_pairs_connectivity_directed": {
  "lineno": 351,
  "symbols_in_volume": [
   "itertools.permutations",
   "networkx.DiGraph",
   "networkx.all_pairs_node_connectivity",
   "networkx.node_connectivity",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.TestAllPairsNodeConnectivity.test_all_pairs_connectivity_icosahedral": {
  "lineno": 335,
  "symbols_in_volume": [
   "itertools.combinations",
   "networkx.all_pairs_node_connectivity",
   "networkx.icosahedral_graph",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.TestAllPairsNodeConnectivity.test_all_pairs_connectivity_nbunch": {
  "lineno": 362,
  "symbols_in_volume": [
   "itertools.combinations",
   "networkx.all_pairs_node_connectivity",
   "networkx.complete_graph",
   "networkx.node_connectivity",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.TestAllPairsNodeConnectivity.test_all_pairs_connectivity_nbunch_iter": {
  "lineno": 372,
  "symbols_in_volume": [
   "itertools.combinations",
   "networkx.all_pairs_node_connectivity",
   "networkx.complete_graph",
   "networkx.node_connectivity",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.TestAllPairsNodeConnectivity.test_complete": {
  "lineno": 309,
  "symbols_in_volume": [
   "networkx.all_pairs_node_connectivity",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.TestAllPairsNodeConnectivity.test_cycles": {
  "lineno": 299,
  "symbols_in_volume": [
   "networkx.all_pairs_node_connectivity",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.TestAllPairsNodeConnectivity.test_paths": {
  "lineno": 316,
  "symbols_in_volume": [
   "networkx.all_pairs_node_connectivity",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity._generate_no_biconnected": {
  "lineno": 18,
  "symbols_in_volume": [
   "networkx.fast_gnp_random_graph",
   "networkx.is_biconnected",
   "networkx.is_connected"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.test_articulation_points": {
  "lineno": 58,
  "symbols_in_volume": [
   "networkx.node_connectivity",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.test_average_connectivity": {
  "lineno": 33,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.average_node_connectivity",
   "networkx.path_graph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.test_average_connectivity_directed": {
  "lineno": 52,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.average_node_connectivity",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.test_brandes_erlebach": {
  "lineno": 66,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.algorithms.connectivity.local_edge_connectivity",
   "networkx.algorithms.connectivity.local_node_connectivity",
   "networkx.edge_connectivity",
   "networkx.node_connectivity",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.test_complete_graphs": {
  "lineno": 120,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.edge_connectivity",
   "networkx.node_connectivity",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.test_cutoff": {
  "lineno": 245,
  "symbols_in_volume": [
   "networkx.algorithms.connectivity.local_edge_connectivity",
   "networkx.algorithms.connectivity.local_node_connectivity",
   "networkx.algorithms.flow.preflow_push",
   "networkx.complete_graph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.test_directed_edge_connectivity": {
  "lineno": 228,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.algorithms.connectivity.local_edge_connectivity",
   "networkx.cycle_graph",
   "networkx.edge_connectivity",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.test_dodecahedral": {
  "lineno": 160,
  "symbols_in_volume": [
   "networkx.dodecahedral_graph",
   "networkx.edge_connectivity",
   "networkx.node_connectivity",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.test_edge_connectivity_flow_vs_stoer_wagner": {
  "lineno": 272,
  "symbols_in_volume": [
   "networkx.dodecahedral_graph",
   "networkx.edge_connectivity",
   "networkx.icosahedral_graph",
   "networkx.octahedral_graph",
   "networkx.stoer_wagner",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.test_edge_missing_source": {
  "lineno": 196,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.edge_connectivity",
   "networkx.path_graph",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.test_edge_missing_target": {
  "lineno": 202,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.edge_connectivity",
   "networkx.path_graph",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.test_empty_graphs": {
  "lineno": 135,
  "symbols_in_volume": [
   "networkx.edge_connectivity",
   "networkx.empty_graph",
   "networkx.node_connectivity",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.test_icosahedral": {
  "lineno": 176,
  "symbols_in_volume": [
   "networkx.edge_connectivity",
   "networkx.icosahedral_graph",
   "networkx.node_connectivity",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.test_interface_only_source": {
  "lineno": 262,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.complete_graph",
   "networkx.edge_connectivity",
   "networkx.node_connectivity",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.test_interface_only_target": {
  "lineno": 267,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.complete_graph",
   "networkx.edge_connectivity",
   "networkx.node_connectivity",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.test_invalid_auxiliary": {
  "lineno": 257,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.algorithms.connectivity.local_node_connectivity",
   "networkx.complete_graph",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.test_missing_source": {
  "lineno": 184,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.node_connectivity",
   "networkx.path_graph",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.test_missing_target": {
  "lineno": 190,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.node_connectivity",
   "networkx.path_graph",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.test_not_connected": {
  "lineno": 218,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.edge_connectivity",
   "networkx.node_connectivity",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.test_not_weakly_connected": {
  "lineno": 208,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.edge_connectivity",
   "networkx.node_connectivity",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.test_octahedral": {
  "lineno": 168,
  "symbols_in_volume": [
   "networkx.edge_connectivity",
   "networkx.node_connectivity",
   "networkx.octahedral_graph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.test_petersen": {
  "lineno": 144,
  "symbols_in_volume": [
   "networkx.edge_connectivity",
   "networkx.node_connectivity",
   "networkx.petersen_graph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.test_tutte": {
  "lineno": 152,
  "symbols_in_volume": [
   "networkx.edge_connectivity",
   "networkx.node_connectivity",
   "networkx.tutte_graph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.test_white_harary_1": {
  "lineno": 88,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.disjoint_union",
   "networkx.edge_connectivity",
   "networkx.node_connectivity",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_connectivity.test_white_harary_2": {
  "lineno": 107,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.core_number",
   "networkx.disjoint_union",
   "networkx.edge_connectivity",
   "networkx.node_connectivity",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_cuts": {
  "lineno": null,
  "symbols_in_volume": [
   "networkx.algorithms.flow.edmonds_karp",
   "networkx.algorithms.flow.preflow_push",
   "networkx.algorithms.flow.shortest_augmenting_path"
  ],
  "type": "module"
 },
 "networkx.algorithms.connectivity.tests.test_cuts._generate_no_biconnected": {
  "lineno": 16,
  "symbols_in_volume": [
   "networkx.fast_gnp_random_graph",
   "networkx.is_biconnected",
   "networkx.is_connected"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_cuts.test_articulation_points": {
  "lineno": 30,
  "symbols_in_volume": [
   "networkx.articulation_points",
   "networkx.minimum_node_cut",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_cuts.test_brandes_erlebach_book": {
  "lineno": 40,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.algorithms.connectivity.minimum_st_node_cut",
   "networkx.is_connected",
   "networkx.minimum_edge_cut",
   "networkx.minimum_node_cut",
   "nose.tools.assert_equal",
   "nose.tools.assert_false"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_cuts.test_edge_cutset_random_graphs": {
  "lineno": 168,
  "symbols_in_volume": [
   "networkx.connected_components",
   "networkx.edge_connectivity",
   "networkx.fast_gnp_random_graph",
   "networkx.is_connected",
   "networkx.minimum_edge_cut",
   "nose.tools.assert_equal",
   "nose.tools.assert_false"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_cuts.test_empty_graphs": {
  "lineno": 182,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.NetworkXPointlessConcept",
   "networkx.minimum_edge_cut",
   "networkx.minimum_node_cut",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_cuts.test_icosahedral_cutset": {
  "lineno": 131,
  "symbols_in_volume": [
   "networkx.icosahedral_graph",
   "networkx.is_connected",
   "networkx.minimum_edge_cut",
   "networkx.minimum_node_cut",
   "nose.tools.assert_equal",
   "nose.tools.assert_false"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_cuts.test_interface_only_source": {
  "lineno": 247,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.complete_graph",
   "networkx.minimum_edge_cut",
   "networkx.minimum_node_cut",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_cuts.test_interface_only_target": {
  "lineno": 252,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.complete_graph",
   "networkx.minimum_edge_cut",
   "networkx.minimum_node_cut",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_cuts.test_invalid_auxiliary": {
  "lineno": 242,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.algorithms.connectivity.minimum_st_node_cut",
   "networkx.complete_graph",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_cuts.test_missing_source": {
  "lineno": 197,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.minimum_edge_cut",
   "networkx.minimum_node_cut",
   "networkx.path_graph",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_cuts.test_missing_target": {
  "lineno": 204,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.minimum_edge_cut",
   "networkx.minimum_node_cut",
   "networkx.path_graph",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_cuts.test_node_cutset_exception": {
  "lineno": 148,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.minimum_node_cut",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_cuts.test_node_cutset_random_graphs": {
  "lineno": 154,
  "symbols_in_volume": [
   "networkx.connected_components",
   "networkx.fast_gnp_random_graph",
   "networkx.is_connected",
   "networkx.minimum_node_cut",
   "networkx.node_connectivity",
   "nose.tools.assert_equal",
   "nose.tools.assert_false"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_cuts.test_not_connected": {
  "lineno": 220,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.minimum_edge_cut",
   "networkx.minimum_node_cut",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_cuts.test_not_weakly_connected": {
  "lineno": 211,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXError",
   "networkx.minimum_edge_cut",
   "networkx.minimum_node_cut",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_cuts.test_octahedral_cutset": {
  "lineno": 114,
  "symbols_in_volume": [
   "networkx.is_connected",
   "networkx.minimum_edge_cut",
   "networkx.minimum_node_cut",
   "networkx.octahedral_graph",
   "nose.tools.assert_equal",
   "nose.tools.assert_false"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_cuts.test_petersen_cutset": {
  "lineno": 97,
  "symbols_in_volume": [
   "networkx.is_connected",
   "networkx.minimum_edge_cut",
   "networkx.minimum_node_cut",
   "networkx.petersen_graph",
   "nose.tools.assert_equal",
   "nose.tools.assert_false"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_cuts.test_unbounded": {
  "lineno": 192,
  "symbols_in_volume": [
   "networkx.algorithms.connectivity.minimum_st_edge_cut",
   "networkx.complete_graph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_cuts.test_white_harary_paper": {
  "lineno": 69,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.disjoint_union",
   "networkx.is_connected",
   "networkx.minimum_edge_cut",
   "networkx.minimum_node_cut",
   "nose.tools.assert_equal",
   "nose.tools.assert_false"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_cuts.tests_min_cut_complete": {
  "lineno": 229,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.minimum_edge_cut",
   "networkx.minimum_node_cut",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_cuts.tests_min_cut_complete_directed": {
  "lineno": 235,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.minimum_edge_cut",
   "networkx.minimum_node_cut",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_kcomponents": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.connectivity.tests.test_kcomponents._check_connectivity": {
  "lineno": 83,
  "symbols_in_volume": [
   "networkx.k_components",
   "networkx.node_connectivity",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_kcomponents.test_configuration": {
  "lineno": 105,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.configuration_model",
   "networkx.utils.create_degree_sequence",
   "networkx.utils.powerlaw_sequence"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_kcomponents.test_davis_southern_women": {
  "lineno": 158,
  "symbols_in_volume": [
   "networkx.davis_southern_women_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_kcomponents.test_davis_southern_women_detail_3_and_4": {
  "lineno": 162,
  "symbols_in_volume": [
   "networkx.davis_southern_women_graph",
   "networkx.k_components",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_kcomponents.test_directed": {
  "lineno": 77,
  "symbols_in_volume": [
   "networkx.NetworkXNotImplemented",
   "networkx.gnp_random_graph",
   "networkx.k_components",
   "nose.tools.raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_kcomponents.test_karate": {
  "lineno": 111,
  "symbols_in_volume": [
   "networkx.karate_club_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_kcomponents.test_karate_component_number": {
  "lineno": 115,
  "symbols_in_volume": [
   "networkx.algorithms.connectivity.kcomponents.build_k_number_dict",
   "networkx.k_components",
   "networkx.karate_club_graph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_kcomponents.test_random_gnp": {
  "lineno": 96,
  "symbols_in_volume": [
   "networkx.gnp_random_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_kcomponents.test_set_consolidation_rosettacode": {
  "lineno": 232,
  "symbols_in_volume": [
   "networkx.algorithms.connectivity.kcomponents._consolidate"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_kcomponents.test_set_consolidation_rosettacode.list_of_sets_equal": {
  "lineno": 234,
  "symbols_in_volume": [
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_kcomponents.test_shell": {
  "lineno": 100,
  "symbols_in_volume": [
   "networkx.random_shell_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_kcomponents.test_torrents_and_ferraro_detail_3_and_4": {
  "lineno": 128,
  "symbols_in_volume": [
   "networkx.k_components",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_kcomponents.test_torrents_and_ferraro_graph": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_kcomponents.torrents_and_ferraro_graph": {
  "lineno": 12,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.convert_node_labels_to_integers",
   "networkx.disjoint_union",
   "networkx.get_node_attributes",
   "networkx.grid_graph",
   "networkx.petersen_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_kcutsets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.connectivity.tests.test_kcutsets._check_separating_sets": {
  "lineno": 118,
  "symbols_in_volume": [
   "networkx.all_node_cuts",
   "networkx.connected_component_subgraphs",
   "networkx.is_connected",
   "networkx.node_connectivity",
   "nose.tools.assert_equal",
   "nose.tools.assert_false"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_kcutsets._generate_no_biconnected": {
  "lineno": 161,
  "symbols_in_volume": [
   "networkx.fast_gnp_random_graph",
   "networkx.is_biconnected",
   "networkx.is_connected"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_kcutsets.graph_example_1": {
  "lineno": 18,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.convert_node_labels_to_integers",
   "networkx.disjoint_union",
   "networkx.get_node_attributes",
   "networkx.grid_graph",
   "networkx.petersen_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_kcutsets.test_alternative_flow_functions": {
  "lineno": 206,
  "symbols_in_volume": [
   "networkx.algorithms.flow.edmonds_karp",
   "networkx.algorithms.flow.preflow_push",
   "networkx.algorithms.flow.shortest_augmenting_path",
   "networkx.all_node_cuts",
   "networkx.davis_southern_women_graph",
   "networkx.is_connected",
   "networkx.node_connectivity",
   "nose.tools.assert_equal",
   "nose.tools.assert_false"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_kcutsets.test_articulation_points": {
  "lineno": 176,
  "symbols_in_volume": [
   "networkx.all_node_cuts",
   "networkx.articulation_points",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_kcutsets.test_configuration": {
  "lineno": 149,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.configuration_model",
   "networkx.utils.create_degree_sequence",
   "networkx.utils.powerlaw_sequence"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_kcutsets.test_disconnected_graph": {
  "lineno": 200,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.all_node_cuts",
   "networkx.fast_gnp_random_graph",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_kcutsets.test_example_1": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_kcutsets.test_grid_2d_graph": {
  "lineno": 185,
  "symbols_in_volume": [
   "networkx.all_node_cuts",
   "networkx.grid_2d_graph",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_kcutsets.test_is_separating_set": {
  "lineno": 223,
  "symbols_in_volume": [
   "networkx.algorithms.connectivity.kcutsets._is_separating_set",
   "networkx.star_graph",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_kcutsets.test_is_separating_set_complete_graph": {
  "lineno": 218,
  "symbols_in_volume": [
   "networkx.algorithms.connectivity.kcutsets._is_separating_set",
   "networkx.complete_graph",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_kcutsets.test_karate": {
  "lineno": 156,
  "symbols_in_volume": [
   "networkx.karate_club_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_kcutsets.test_non_repeated_cuts": {
  "lineno": 230,
  "symbols_in_volume": [
   "networkx.all_node_cuts",
   "networkx.biconnected_component_subgraphs",
   "networkx.info",
   "networkx.karate_club_graph",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_kcutsets.test_random_gnp": {
  "lineno": 138,
  "symbols_in_volume": [
   "networkx.gnp_random_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_kcutsets.test_shell": {
  "lineno": 143,
  "symbols_in_volume": [
   "networkx.random_shell_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_kcutsets.test_torrents_and_ferraro_graph": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_kcutsets.torrents_and_ferraro_graph": {
  "lineno": 54,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.convert_node_labels_to_integers",
   "networkx.disjoint_union",
   "networkx.get_node_attributes",
   "networkx.grid_graph",
   "networkx.petersen_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_stoer_wagner": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.connectivity.tests.test_stoer_wagner._check_partition": {
  "lineno": 6,
  "symbols_in_volume": [
   "itertools.chain.from_iterable"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_stoer_wagner._test_stoer_wagner": {
  "lineno": 23,
  "symbols_in_volume": [
   "networkx.stoer_wagner",
   "networkx.utils.BinaryHeap",
   "networkx.utils.PairingHeap"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_stoer_wagner.test_exceptions": {
  "lineno": 88,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.MultiDiGraph",
   "networkx.MultiGraph",
   "networkx.NetworkXError",
   "networkx.NetworkXNotImplemented",
   "networkx.stoer_wagner"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_stoer_wagner.test_graph1": {
  "lineno": 34,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_stoer_wagner.test_graph2": {
  "lineno": 47,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_stoer_wagner.test_graph3": {
  "lineno": 60,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.tests.test_stoer_wagner.test_weight_name": {
  "lineno": 80,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.connectivity.utils.build_auxiliary_edge_connectivity": {
  "lineno": 65,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.connectivity.utils.build_auxiliary_node_connectivity": {
  "lineno": 13,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.core": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.core.core_number": {
  "lineno": 27,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.core.core_number.neighbors": {
  "lineno": 74,
  "symbols_in_volume": [
   "itertools.chain.from_iterable"
  ],
  "type": "function"
 },
 "networkx.algorithms.core.k_core": {
  "lineno": 107,
  "symbols_in_volume": [
   "networkx.core_number"
  ],
  "type": "function"
 },
 "networkx.algorithms.core.k_corona": {
  "lineno": 271,
  "symbols_in_volume": [
   "networkx.core_number"
  ],
  "type": "function"
 },
 "networkx.algorithms.core.k_crust": {
  "lineno": 216,
  "symbols_in_volume": [
   "networkx.core_number"
  ],
  "type": "function"
 },
 "networkx.algorithms.core.k_shell": {
  "lineno": 159,
  "symbols_in_volume": [
   "networkx.core_number"
  ],
  "type": "function"
 },
 "networkx.algorithms.cycles": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.cycles.cycle_basis": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.cycles.find_cycle": {
  "lineno": 329,
  "symbols_in_volume": [
   "networkx.algorithms.traversal.edgedfs.edge_dfs",
   "networkx.algorithms.traversal.edgedfs.helper_funcs",
   "networkx.exception.NetworkXNoCycle"
  ],
  "type": "function"
 },
 "networkx.algorithms.cycles.recursive_simple_cycles": {
  "lineno": 225,
  "symbols_in_volume": [
   "collections.defaultdict",
   "networkx.strongly_connected_components"
  ],
  "type": "function"
 },
 "networkx.algorithms.cycles.recursive_simple_cycles._unblock": {
  "lineno": 276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.cycles.recursive_simple_cycles.circuit": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.cycles.simple_cycles": {
  "lineno": 104,
  "symbols_in_volume": [
   "collections.defaultdict",
   "networkx.strongly_connected_components"
  ],
  "type": "function"
 },
 "networkx.algorithms.cycles.simple_cycles._unblock": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.dag": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.dag.ancestors": {
  "lineno": 46,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.shortest_path_length"
  ],
  "type": "function"
 },
 "networkx.algorithms.dag.antichains": {
  "lineno": 341,
  "symbols_in_volume": [
   "networkx.topological_sort",
   "networkx.transitive_closure"
  ],
  "type": "function"
 },
 "networkx.algorithms.dag.dag_longest_path": {
  "lineno": 394,
  "symbols_in_volume": [
   "networkx.topological_sort"
  ],
  "type": "function"
 },
 "networkx.algorithms.dag.dag_longest_path_length": {
  "lineno": 433,
  "symbols_in_volume": [
   "networkx.dag_longest_path"
  ],
  "type": "function"
 },
 "networkx.algorithms.dag.descendants": {
  "lineno": 27,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.shortest_path_length"
  ],
  "type": "function"
 },
 "networkx.algorithms.dag.is_aperiodic": {
  "lineno": 244,
  "symbols_in_volume": [
   "fractions.gcd",
   "networkx.NetworkXError",
   "networkx.is_aperiodic"
  ],
  "type": "function"
 },
 "networkx.algorithms.dag.is_directed_acyclic_graph": {
  "lineno": 65,
  "symbols_in_volume": [
   "networkx.NetworkXUnfeasible"
  ],
  "type": "function"
 },
 "networkx.algorithms.dag.topological_sort": {
  "lineno": 88,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.NetworkXUnfeasible"
  ],
  "type": "function"
 },
 "networkx.algorithms.dag.topological_sort_recursive": {
  "lineno": 171,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.dag.topological_sort_recursive._dfs": {
  "lineno": 213,
  "symbols_in_volume": [
   "networkx.NetworkXUnfeasible"
  ],
  "type": "function"
 },
 "networkx.algorithms.dag.transitive_closure": {
  "lineno": 304,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.dfs_preorder_nodes"
  ],
  "type": "function"
 },
 "networkx.algorithms.distance_measures": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.distance_measures.center": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.distance_measures.diameter": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.distance_measures.eccentricity": {
  "lineno": 18,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.single_source_shortest_path_length"
  ],
  "type": "function"
 },
 "networkx.algorithms.distance_measures.periphery": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.distance_measures.radius": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.distance_regular": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.distance_regular.global_parameters": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.distance_regular.intersection_array": {
  "lineno": 111,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.NetworkxException",
   "networkx.all_pairs_shortest_path_length"
  ],
  "type": "function"
 },
 "networkx.algorithms.distance_regular.is_distance_regular": {
  "lineno": 17,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.dominance": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.dominance.dominance_frontiers": {
  "lineno": 90,
  "symbols_in_volume": [
   "networkx.immediate_dominators"
  ],
  "type": "function"
 },
 "networkx.algorithms.dominance.immediate_dominators": {
  "lineno": 17,
  "symbols_in_volume": [
   "functools.reduce",
   "networkx.NetworkXError",
   "networkx.dfs_postorder_nodes",
   "networkx.utils.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.dominance.immediate_dominators.intersect": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.dominating": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.dominating.dominating_set": {
  "lineno": 6,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.dominating.is_dominating_set": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.euler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.euler.eulerian_circuit": {
  "lineno": 61,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "operator.itemgetter"
  ],
  "type": "function"
 },
 "networkx.algorithms.euler.is_eulerian": {
  "lineno": 18,
  "symbols_in_volume": [
   "networkx.is_connected",
   "networkx.is_strongly_connected"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.flow.capacityscaling": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.flow.capacityscaling._build_flow_dict": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.capacityscaling._build_residual_network": {
  "lineno": 46,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.NetworkXUnbounded",
   "networkx.NetworkXUnfeasible"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.capacityscaling._detect_unboundedness": {
  "lineno": 19,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXUnbounded",
   "networkx.negative_edge_cycle"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.capacityscaling.capacity_scaling": {
  "lineno": 129,
  "symbols_in_volume": [
   "itertools.chain",
   "math.log",
   "networkx.NetworkXUnfeasible"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.edmondskarp": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.flow.edmondskarp.edmonds_karp": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.edmondskarp.edmonds_karp_core": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.edmondskarp.edmonds_karp_core.augment": {
  "lineno": 25,
  "symbols_in_volume": [
   "networkx.NetworkXUnbounded"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.edmondskarp.edmonds_karp_core.bidirectional_bfs": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.edmondskarp.edmonds_karp_impl": {
  "lineno": 103,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.maxflow": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.flow.maxflow.maximum_flow": {
  "lineno": 20,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.maxflow.maximum_flow_value": {
  "lineno": 164,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.maxflow.minimum_cut": {
  "lineno": 301,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.shortest_path_length"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.maxflow.minimum_cut_value": {
  "lineno": 466,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.mincost": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.flow.mincost.cost_of_flow": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.mincost.max_flow_min_cost": {
  "lineno": 224,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.maximum_flow_value"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.mincost.min_cost_flow": {
  "lineno": 104,
  "symbols_in_volume": [
   "networkx.network_simplex"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.mincost.min_cost_flow_cost": {
  "lineno": 20,
  "symbols_in_volume": [
   "networkx.network_simplex"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.networksimplex": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.flow.networksimplex.network_simplex": {
  "lineno": 28,
  "symbols_in_volume": [
   "itertools.chain",
   "itertools.izip",
   "itertools.repeat",
   "networkx.NetworkXError",
   "networkx.NetworkXUnbounded",
   "networkx.NetworkXUnfeasible",
   "networkx.utils.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.networksimplex.network_simplex.add_edge": {
  "lineno": 486,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.networksimplex.network_simplex.add_entry": {
  "lineno": 560,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.networksimplex.network_simplex.augment_flow": {
  "lineno": 408,
  "symbols_in_volume": [
   "itertools.izip"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.networksimplex.network_simplex.find_apex": {
  "lineno": 342,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.networksimplex.network_simplex.find_cycle": {
  "lineno": 376,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.networksimplex.network_simplex.find_entering_edges": {
  "lineno": 299,
  "symbols_in_volume": [
   "itertools.chain",
   "math.ceil",
   "math.sqrt"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.networksimplex.network_simplex.find_leaving_edge": {
  "lineno": 400,
  "symbols_in_volume": [
   "itertools.izip"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.networksimplex.network_simplex.make_root": {
  "lineno": 449,
  "symbols_in_volume": [
   "itertools.islice",
   "itertools.izip"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.networksimplex.network_simplex.reduced_cost": {
  "lineno": 293,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.networksimplex.network_simplex.remove_edge": {
  "lineno": 426,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.networksimplex.network_simplex.residual_capacity": {
  "lineno": 394,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.networksimplex.network_simplex.trace_path": {
  "lineno": 364,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.networksimplex.network_simplex.trace_subtree": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.networksimplex.network_simplex.update_potentials": {
  "lineno": 510,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.preflowpush": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.flow.preflowpush.preflow_push": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.preflowpush.preflow_push_impl": {
  "lineno": 19,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.preflowpush.preflow_push_impl.activate": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.preflowpush.preflow_push_impl.discharge": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.preflowpush.preflow_push_impl.gap_heuristic": {
  "lineno": 173,
  "symbols_in_volume": [
   "itertools.islice"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.preflowpush.preflow_push_impl.global_relabel": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.preflowpush.preflow_push_impl.push": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.preflowpush.preflow_push_impl.relabel": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.preflowpush.preflow_push_impl.reverse_bfs": {
  "lineno": 52,
  "symbols_in_volume": [
   "collections.deque"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.shortestaugmentingpath": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.flow.shortestaugmentingpath.shortest_augmenting_path": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.shortestaugmentingpath.shortest_augmenting_path_impl": {
  "lineno": 19,
  "symbols_in_volume": [
   "collections.deque",
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.shortestaugmentingpath.shortest_augmenting_path_impl.augment": {
  "lineno": 75,
  "symbols_in_volume": [
   "networkx.NetworkXUnbounded"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.shortestaugmentingpath.shortest_augmenting_path_impl.relabel": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow": {
  "lineno": null,
  "symbols_in_volume": [
   "networkx.algorithms.flow.edmonds_karp",
   "networkx.algorithms.flow.preflow_push",
   "networkx.algorithms.flow.shortest_augmenting_path",
   "networkx.maximum_flow",
   "networkx.maximum_flow_value",
   "networkx.minimum_cut",
   "networkx.minimum_cut_value"
  ],
  "type": "module"
 },
 "networkx.algorithms.flow.tests.test_maxflow.TestCutoff": {
  "lineno": 459,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.flow.tests.test_maxflow.TestCutoff.test_complete_graph_cutoff": {
  "lineno": 477,
  "symbols_in_volume": [
   "networkx.algorithms.flow.edmonds_karp",
   "networkx.algorithms.flow.shortest_augmenting_path",
   "networkx.complete_graph",
   "networkx.maximum_flow_value",
   "networkx.set_edge_attributes"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow.TestCutoff.test_cutoff": {
  "lineno": 461,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.algorithms.flow.edmonds_karp",
   "networkx.algorithms.flow.shortest_augmenting_path"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow.TestMaxFlowMinCutInterface": {
  "lineno": 342,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.flow.tests.test_maxflow.TestMaxFlowMinCutInterface.setup": {
  "lineno": 344,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow.TestMaxFlowMinCutInterface.test_flow_func_not_callable": {
  "lineno": 360,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow.TestMaxFlowMinCutInterface.test_flow_func_parameters": {
  "lineno": 371,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow.TestMaxFlowMinCutInterface.test_kwargs": {
  "lineno": 390,
  "symbols_in_volume": [
   "networkx.algorithms.flow.preflow_push",
   "networkx.algorithms.flow.shortest_augmenting_path"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow.TestMaxFlowMinCutInterface.test_kwargs_default_flow_func": {
  "lineno": 405,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow.TestMaxFlowMinCutInterface.test_minimum_cut_no_cutoff": {
  "lineno": 382,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.minimum_cut",
   "networkx.minimum_cut_value"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow.TestMaxFlowMinCutInterface.test_reusing_residual": {
  "lineno": 411,
  "symbols_in_volume": [
   "networkx.algorithms.flow.build_residual_network"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow.TestMaxflowMinCutCommon": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.flow.tests.test_maxflow.TestMaxflowMinCutCommon.test_digraph1": {
  "lineno": 118,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow.TestMaxflowMinCutCommon.test_digraph2": {
  "lineno": 134,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow.TestMaxflowMinCutCommon.test_digraph3": {
  "lineno": 153,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow.TestMaxflowMinCutCommon.test_digraph4": {
  "lineno": 293,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow.TestMaxflowMinCutCommon.test_digraph_infcap_edges": {
  "lineno": 224,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow.TestMaxflowMinCutCommon.test_digraph_infcap_path": {
  "lineno": 261,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXUnbounded"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow.TestMaxflowMinCutCommon.test_disconnected": {
  "lineno": 309,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.maximum_flow_value"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow.TestMaxflowMinCutCommon.test_graph1": {
  "lineno": 85,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow.TestMaxflowMinCutCommon.test_graph2": {
  "lineno": 95,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow.TestMaxflowMinCutCommon.test_graph_infcap_edges": {
  "lineno": 275,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow.TestMaxflowMinCutCommon.test_multigraphs_raise": {
  "lineno": 334,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.MultiGraph",
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow.TestMaxflowMinCutCommon.test_optional_capacity": {
  "lineno": 199,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow.TestMaxflowMinCutCommon.test_source_target_coincide": {
  "lineno": 328,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow.TestMaxflowMinCutCommon.test_source_target_not_in_graph": {
  "lineno": 317,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow.compare_flows_and_cuts": {
  "lineno": 69,
  "symbols_in_volume": [
   "networkx.algorithms.flow.build_flow_dict",
   "networkx.minimum_cut"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow.compute_cutset": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow.test_preflow_push_global_relabel_freq": {
  "lineno": 429,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXError",
   "networkx.algorithms.flow.preflow_push"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow.test_preflow_push_makes_enough_space": {
  "lineno": 437,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.algorithms.flow.preflow_push"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow.test_shortest_augmenting_path_two_phase": {
  "lineno": 445,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.algorithms.flow.shortest_augmenting_path"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow.validate_cuts": {
  "lineno": 50,
  "symbols_in_volume": [
   "networkx.is_connected",
   "networkx.is_strongly_connected"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow.validate_flows": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow_large_graph": {
  "lineno": null,
  "symbols_in_volume": [
   "networkx.algorithms.flow.edmonds_karp",
   "networkx.algorithms.flow.preflow_push",
   "networkx.algorithms.flow.shortest_augmenting_path"
  ],
  "type": "module"
 },
 "networkx.algorithms.flow.tests.test_maxflow_large_graph.TestMaxflowLargeGraph": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.flow.tests.test_maxflow_large_graph.TestMaxflowLargeGraph.test_complete_graph": {
  "lineno": 75,
  "symbols_in_volume": [
   "networkx.algorithms.flow.build_residual_network",
   "networkx.complete_graph",
   "networkx.maximum_flow_value",
   "networkx.set_edge_attributes"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow_large_graph.TestMaxflowLargeGraph.test_gl1": {
  "lineno": 101,
  "symbols_in_volume": [
   "networkx.algorithms.flow.build_residual_network"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow_large_graph.TestMaxflowLargeGraph.test_gw1": {
  "lineno": 112,
  "symbols_in_volume": [
   "networkx.algorithms.flow.build_residual_network"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow_large_graph.TestMaxflowLargeGraph.test_preflow_push_global_relabel": {
  "lineno": 134,
  "symbols_in_volume": [
   "networkx.algorithms.flow.preflow_push"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow_large_graph.TestMaxflowLargeGraph.test_pyramid": {
  "lineno": 88,
  "symbols_in_volume": [
   "networkx.algorithms.flow.build_residual_network",
   "networkx.maximum_flow_value"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow_large_graph.TestMaxflowLargeGraph.test_wlm3": {
  "lineno": 123,
  "symbols_in_volume": [
   "networkx.algorithms.flow.build_residual_network"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow_large_graph.gen_pyramid": {
  "lineno": 20,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow_large_graph.read_graph": {
  "lineno": 42,
  "symbols_in_volume": [
   "networkx.read_gpickle",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_maxflow_large_graph.validate_flows": {
  "lineno": 48,
  "symbols_in_volume": [
   "networkx.algorithms.flow.build_flow_dict"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_mincost": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.flow.tests.test_mincost.TestMinCostFlow": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.flow.tests.test_mincost.TestMinCostFlow.test_bone_shaped": {
  "lineno": 388,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.capacity_scaling",
   "networkx.network_simplex",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_mincost.TestMinCostFlow.test_digon": {
  "lineno": 287,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.capacity_scaling",
   "networkx.cost_of_flow",
   "networkx.min_cost_flow",
   "networkx.min_cost_flow_cost",
   "networkx.network_simplex",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_mincost.TestMinCostFlow.test_digraph1": {
  "lineno": 146,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.capacity_scaling",
   "networkx.cost_of_flow",
   "networkx.min_cost_flow",
   "networkx.min_cost_flow_cost",
   "networkx.network_simplex",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_mincost.TestMinCostFlow.test_digraph2": {
  "lineno": 179,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.capacity_scaling",
   "networkx.cost_of_flow",
   "networkx.max_flow_min_cost",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_mincost.TestMinCostFlow.test_digraph3": {
  "lineno": 218,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.capacity_scaling",
   "networkx.cost_of_flow",
   "networkx.max_flow_min_cost",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_mincost.TestMinCostFlow.test_exceptions": {
  "lineno": 411,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.MultiGraph",
   "networkx.NetworkXError",
   "networkx.NetworkXNotImplemented",
   "networkx.NetworkXUnfeasible",
   "networkx.capacity_scaling",
   "networkx.network_simplex",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_mincost.TestMinCostFlow.test_finite_capacity_neg_digon": {
  "lineno": 333,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.capacity_scaling",
   "networkx.cost_of_flow",
   "networkx.min_cost_flow_cost",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_mincost.TestMinCostFlow.test_infinite_capacity_neg_digon": {
  "lineno": 316,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXUnbounded",
   "networkx.capacity_scaling",
   "networkx.network_simplex",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_mincost.TestMinCostFlow.test_large": {
  "lineno": 442,
  "symbols_in_volume": [
   "networkx.capacity_scaling",
   "networkx.cost_of_flow",
   "networkx.network_simplex",
   "networkx.read_gpickle",
   "nose.tools.assert_equal",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_mincost.TestMinCostFlow.test_max_flow_min_cost": {
  "lineno": 117,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.capacity_scaling",
   "networkx.cost_of_flow",
   "networkx.max_flow_min_cost",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_mincost.TestMinCostFlow.test_multidigraph": {
  "lineno": 347,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.capacity_scaling",
   "networkx.network_simplex",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_mincost.TestMinCostFlow.test_negative_selfloops": {
  "lineno": 359,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.MultiDiGraph",
   "networkx.NetworkXUnbounded",
   "networkx.capacity_scaling",
   "networkx.network_simplex",
   "nose.tools.assert_equal",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_mincost.TestMinCostFlow.test_negcycle_infcap": {
  "lineno": 32,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXUnbounded",
   "networkx.NetworkXUnfeasible",
   "networkx.capacity_scaling",
   "networkx.network_simplex",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_mincost.TestMinCostFlow.test_no_flow_satisfying_demands": {
  "lineno": 58,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXUnfeasible",
   "networkx.capacity_scaling",
   "networkx.network_simplex",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_mincost.TestMinCostFlow.test_simple_digraph": {
  "lineno": 8,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.capacity_scaling",
   "networkx.cost_of_flow",
   "networkx.min_cost_flow",
   "networkx.min_cost_flow_cost",
   "networkx.network_simplex",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_mincost.TestMinCostFlow.test_sum_demands_not_zero": {
  "lineno": 45,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXUnfeasible",
   "networkx.capacity_scaling",
   "networkx.network_simplex",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_mincost.TestMinCostFlow.test_transshipment": {
  "lineno": 71,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.capacity_scaling",
   "networkx.cost_of_flow",
   "networkx.min_cost_flow",
   "networkx.min_cost_flow_cost",
   "networkx.network_simplex",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.tests.test_mincost.TestMinCostFlow.test_zero_capacity_edges": {
  "lineno": 256,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.capacity_scaling",
   "networkx.cost_of_flow",
   "networkx.min_cost_flow",
   "networkx.min_cost_flow_cost",
   "networkx.network_simplex",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.flow.utils.CurrentEdge": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.flow.utils.CurrentEdge.__init__": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.utils.CurrentEdge._rewind": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.utils.CurrentEdge.get": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.utils.CurrentEdge.move_to_next": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.utils.GlobalRelabelThreshold": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.flow.utils.GlobalRelabelThreshold.__init__": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.utils.GlobalRelabelThreshold.add_work": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.utils.GlobalRelabelThreshold.clear_work": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.utils.GlobalRelabelThreshold.is_reached": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.utils.Level": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.flow.utils.Level.__init__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.utils.build_flow_dict": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.flow.utils.build_residual_network": {
  "lineno": 73,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.flow.utils.detect_unboundedness": {
  "lineno": 145,
  "symbols_in_volume": [
   "collections.deque",
   "networkx.NetworkXUnbounded"
  ],
  "type": "function"
 },
 "networkx.algorithms.graphical": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.graphical._basic_graphical_tests": {
  "lineno": 76,
  "symbols_in_volume": [
   "networkx.NetworkXUnfeasible",
   "networkx.utils.is_list_of_ints"
  ],
  "type": "function"
 },
 "networkx.algorithms.graphical.is_digraphical": {
  "lineno": 311,
  "symbols_in_volume": [
   "heapq.heapify",
   "heapq.heappop",
   "heapq.heappush",
   "networkx.utils.is_list_of_ints"
  ],
  "type": "function"
 },
 "networkx.algorithms.graphical.is_graphical": {
  "lineno": 29,
  "symbols_in_volume": [
   "networkx.NetworkXException"
  ],
  "type": "function"
 },
 "networkx.algorithms.graphical.is_multigraphical": {
  "lineno": 245,
  "symbols_in_volume": [
   "networkx.utils.is_list_of_ints"
  ],
  "type": "function"
 },
 "networkx.algorithms.graphical.is_pseudographical": {
  "lineno": 280,
  "symbols_in_volume": [
   "networkx.utils.is_list_of_ints"
  ],
  "type": "function"
 },
 "networkx.algorithms.graphical.is_valid_degree_sequence_erdos_gallai": {
  "lineno": 168,
  "symbols_in_volume": [
   "networkx.NetworkXUnfeasible"
  ],
  "type": "function"
 },
 "networkx.algorithms.graphical.is_valid_degree_sequence_havel_hakimi": {
  "lineno": 96,
  "symbols_in_volume": [
   "networkx.NetworkXUnfeasible"
  ],
  "type": "function"
 },
 "networkx.algorithms.hierarchy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.hierarchy.flow_hierarchy": {
  "lineno": 15,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.strongly_connected_components"
  ],
  "type": "function"
 },
 "networkx.algorithms.hybrid": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.hybrid.is_kl_connected": {
  "lineno": 119,
  "symbols_in_volume": [
   "copy.deepcopy",
   "networkx.NetworkXNoPath",
   "networkx.shortest_path"
  ],
  "type": "function"
 },
 "networkx.algorithms.hybrid.kl_connected_subgraph": {
  "lineno": 21,
  "symbols_in_volume": [
   "copy.deepcopy",
   "networkx.NetworkXNoPath",
   "networkx.shortest_path"
  ],
  "type": "function"
 },
 "networkx.algorithms.isolate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.isolate.is_isolate": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isolate.isolates": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.isomorphism.isomorph": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.isomorphism.isomorph.could_be_isomorphic": {
  "lineno": 20,
  "symbols_in_volume": [
   "networkx.number_of_cliques",
   "networkx.triangles"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.isomorph.fast_could_be_isomorphic": {
  "lineno": 58,
  "symbols_in_volume": [
   "networkx.triangles"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.isomorph.faster_could_be_isomorphic": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.isomorph.is_isomorphic": {
  "lineno": 123,
  "symbols_in_volume": [
   "networkx.algorithms.isomorphism.DiGraphMatcher",
   "networkx.algorithms.isomorphism.GraphMatcher",
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.isomorphvf2": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.isomorphism.isomorphvf2.DiGMState": {
  "lineno": 862,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.isomorphism.isomorphvf2.DiGMState.__init__": {
  "lineno": 871,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.isomorphvf2.DiGMState.restore": {
  "lineno": 950,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.isomorphvf2.DiGraphMatcher": {
  "lineno": 477,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.isomorphism.isomorphvf2.DiGraphMatcher.__init__": {
  "lineno": 484,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.isomorphvf2.DiGraphMatcher.candidate_pairs_iter": {
  "lineno": 500,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.isomorphvf2.DiGraphMatcher.initialize": {
  "lineno": 546,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.isomorphvf2.DiGraphMatcher.syntactic_feasibility": {
  "lineno": 580,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.isomorphvf2.GMState": {
  "lineno": 779,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.isomorphism.isomorphvf2.GMState.__init__": {
  "lineno": 787,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.isomorphvf2.GMState.restore": {
  "lineno": 846,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.isomorphvf2.GraphMatcher": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.isomorphism.isomorphvf2.GraphMatcher.__init__": {
  "lineno": 151,
  "symbols_in_volume": [
   "sys.getrecursionlimit",
   "sys.setrecursionlimit"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.isomorphvf2.GraphMatcher.candidate_pairs_iter": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.isomorphvf2.GraphMatcher.initialize": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.isomorphvf2.GraphMatcher.is_isomorphic": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.isomorphvf2.GraphMatcher.isomorphisms_iter": {
  "lineno": 282,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.isomorphvf2.GraphMatcher.match": {
  "lineno": 290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.isomorphvf2.GraphMatcher.reset_recursion_limit": {
  "lineno": 186,
  "symbols_in_volume": [
   "sys.setrecursionlimit"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.isomorphvf2.GraphMatcher.semantic_feasibility": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.isomorphvf2.GraphMatcher.subgraph_is_isomorphic": {
  "lineno": 352,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.isomorphvf2.GraphMatcher.subgraph_isomorphisms_iter": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.isomorphvf2.GraphMatcher.syntactic_feasibility": {
  "lineno": 372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.matchhelpers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.isomorphism.matchhelpers.allclose": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.matchhelpers.categorical_edge_match": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.matchhelpers.categorical_multiedge_match": {
  "lineno": 116,
  "symbols_in_volume": [
   "networkx.utils.is_string_like"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.matchhelpers.categorical_multiedge_match.match": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.matchhelpers.categorical_node_match": {
  "lineno": 95,
  "symbols_in_volume": [
   "networkx.utils.is_string_like"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.matchhelpers.categorical_node_match.match": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.matchhelpers.close": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.matchhelpers.copyfunc": {
  "lineno": 20,
  "symbols_in_volume": [
   "types.FunctionType"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.matchhelpers.generic_edge_match": {
  "lineno": 289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.matchhelpers.generic_multiedge_match": {
  "lineno": 292,
  "symbols_in_volume": [
   "networkx.utils.is_string_like"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.matchhelpers.generic_multiedge_match.match": {
  "lineno": 351,
  "symbols_in_volume": [
   "itertools.permutations"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.matchhelpers.generic_node_match": {
  "lineno": 269,
  "symbols_in_volume": [
   "networkx.utils.is_string_like"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.matchhelpers.generic_node_match.match": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.matchhelpers.numerical_edge_match": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.matchhelpers.numerical_multiedge_match": {
  "lineno": 200,
  "symbols_in_volume": [
   "networkx.utils.is_string_like"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.matchhelpers.numerical_multiedge_match.match": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.matchhelpers.numerical_node_match": {
  "lineno": 177,
  "symbols_in_volume": [
   "networkx.utils.is_string_like"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.matchhelpers.numerical_node_match.match": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_isomorphism": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.isomorphism.tests.test_isomorphism.TestIsomorph": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.isomorphism.tests.test_isomorphism.TestIsomorph.setUp": {
  "lineno": 8,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_isomorphism.TestIsomorph.test_could_be_isomorphic": {
  "lineno": 18,
  "symbols_in_volume": [
   "networkx.algorithms.isomorphism.could_be_isomorphic"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_isomorphism.TestIsomorph.test_fast_could_be_isomorphic": {
  "lineno": 24,
  "symbols_in_volume": [
   "networkx.algorithms.isomorphism.fast_could_be_isomorphic"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_isomorphism.TestIsomorph.test_faster_could_be_isomorphic": {
  "lineno": 27,
  "symbols_in_volume": [
   "networkx.algorithms.isomorphism.faster_could_be_isomorphic"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_isomorphism.TestIsomorph.test_is_isomorphic": {
  "lineno": 30,
  "symbols_in_volume": [
   "networkx.algorithms.isomorphism.is_isomorphic"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_isomorphvf2": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.isomorphism.tests.test_isomorphvf2.TestAtlas": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.isomorphism.tests.test_isomorphvf2.TestAtlas.setUp": {
  "lineno": 113,
  "symbols_in_volume": [
   "networkx.generators.atlas.graph_atlas_g"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_isomorphvf2.TestAtlas.setupClass": {
  "lineno": 105,
  "symbols_in_volume": [
   "nose.SkipTest",
   "platform.python_implementation"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_isomorphvf2.TestAtlas.test_graph_atlas": {
  "lineno": 116,
  "symbols_in_volume": [
   "networkx.algorithms.isomorphism.GraphMatcher",
   "networkx.relabel_nodes",
   "nose.tools.assert_true",
   "random.shuffle"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_isomorphvf2.TestVF2GraphDB": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.isomorphism.tests.test_isomorphvf2.TestVF2GraphDB.create_graph": {
  "lineno": 57,
  "symbols_in_volume": [
   "networkx.Graph",
   "struct.unpack"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_isomorphvf2.TestVF2GraphDB.test_graph": {
  "lineno": 88,
  "symbols_in_volume": [
   "networkx.algorithms.isomorphism.GraphMatcher",
   "nose.tools.assert_true",
   "os.path.join",
   "os.path.split"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_isomorphvf2.TestVF2GraphDB.test_subgraph": {
  "lineno": 95,
  "symbols_in_volume": [
   "networkx.algorithms.isomorphism.GraphMatcher",
   "nose.tools.assert_true",
   "os.path.join",
   "os.path.split"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_isomorphvf2.TestWikipediaExample": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.isomorphism.tests.test_isomorphvf2.TestWikipediaExample.test_graph": {
  "lineno": 30,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.algorithms.isomorphism.GraphMatcher",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_isomorphvf2.TestWikipediaExample.test_subgraph": {
  "lineno": 45,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.algorithms.isomorphism.GraphMatcher",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_isomorphvf2.test_isomorphism_iter1": {
  "lineno": 174,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.algorithms.isomorphism.DiGraphMatcher",
   "nose.tools.assert_equal",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_isomorphvf2.test_isomorphism_iter2": {
  "lineno": 195,
  "symbols_in_volume": [
   "networkx.algorithms.isomorphism.GraphMatcher",
   "networkx.cycle_graph",
   "networkx.path_graph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_isomorphvf2.test_multiedge": {
  "lineno": 130,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.MultiGraph",
   "networkx.algorithms.isomorphism.DiGraphMatcher",
   "networkx.algorithms.isomorphism.GraphMatcher",
   "networkx.relabel_nodes",
   "nose.tools.assert_true",
   "random.shuffle"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_isomorphvf2.test_multiple": {
  "lineno": 209,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.algorithms.isomorphism.DiGraphMatcher",
   "networkx.algorithms.isomorphism.GraphMatcher",
   "networkx.subgraph",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_isomorphvf2.test_selfloop": {
  "lineno": 155,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.algorithms.isomorphism.DiGraphMatcher",
   "networkx.algorithms.isomorphism.GraphMatcher",
   "networkx.relabel_nodes",
   "nose.tools.assert_true",
   "random.shuffle"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_vf2userfunc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.isomorphism.tests.test_vf2userfunc.TestEdgeMatch_DiGraph": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.isomorphism.tests.test_vf2userfunc.TestEdgeMatch_DiGraph.setUp": {
  "lineno": 181,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_vf2userfunc.TestEdgeMatch_MultiDiGraph": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.isomorphism.tests.test_vf2userfunc.TestEdgeMatch_MultiDiGraph.setUp": {
  "lineno": 187,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.algorithms.isomorphism.MultiDiGraphMatcher"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_vf2userfunc.TestEdgeMatch_MultiGraph": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.isomorphism.tests.test_vf2userfunc.TestEdgeMatch_MultiGraph.build": {
  "lineno": 134,
  "symbols_in_volume": [
   "networkx.algorithms.isomorphism.categorical_edge_match",
   "networkx.algorithms.isomorphism.categorical_multiedge_match",
   "networkx.algorithms.isomorphism.generic_edge_match",
   "networkx.algorithms.isomorphism.generic_multiedge_match",
   "networkx.algorithms.isomorphism.matchhelpers.close",
   "networkx.algorithms.isomorphism.numerical_edge_match",
   "networkx.algorithms.isomorphism.numerical_multiedge_match",
   "operator.eq"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_vf2userfunc.TestEdgeMatch_MultiGraph.setUp": {
  "lineno": 128,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.algorithms.isomorphism.MultiGraphMatcher"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_vf2userfunc.TestEdgeMatch_MultiGraph.test_colors_only": {
  "lineno": 163,
  "symbols_in_volume": [
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_vf2userfunc.TestEdgeMatch_MultiGraph.test_colorsandweights": {
  "lineno": 167,
  "symbols_in_volume": [
   "nose.tools.assert_false"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_vf2userfunc.TestEdgeMatch_MultiGraph.test_generic1": {
  "lineno": 171,
  "symbols_in_volume": [
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_vf2userfunc.TestEdgeMatch_MultiGraph.test_generic2": {
  "lineno": 175,
  "symbols_in_volume": [
   "nose.tools.assert_false"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_vf2userfunc.TestEdgeMatch_MultiGraph.test_weights_only": {
  "lineno": 160,
  "symbols_in_volume": [
   "networkx.is_isomorphic",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_vf2userfunc.TestNodeMatch_Graph": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.isomorphism.tests.test_vf2userfunc.TestNodeMatch_Graph.build": {
  "lineno": 82,
  "symbols_in_volume": [
   "networkx.algorithms.isomorphism.categorical_node_match",
   "networkx.algorithms.isomorphism.numerical_edge_match"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_vf2userfunc.TestNodeMatch_Graph.setUp": {
  "lineno": 77,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_vf2userfunc.TestNodeMatch_Graph.test_color1": {
  "lineno": 96,
  "symbols_in_volume": [
   "networkx.is_isomorphic",
   "nose.tools.assert_false"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_vf2userfunc.TestNodeMatch_Graph.test_color2": {
  "lineno": 99,
  "symbols_in_volume": [
   "networkx.is_isomorphic",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_vf2userfunc.TestNodeMatch_Graph.test_colorsandweights1": {
  "lineno": 110,
  "symbols_in_volume": [
   "networkx.algorithms.isomorphism",
   "networkx.is_isomorphic",
   "nose.tools.assert_false"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_vf2userfunc.TestNodeMatch_Graph.test_colorsandweights2": {
  "lineno": 115,
  "symbols_in_volume": [
   "networkx.algorithms.isomorphism",
   "networkx.is_isomorphic",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_vf2userfunc.TestNodeMatch_Graph.test_colorsandweights3": {
  "lineno": 121,
  "symbols_in_volume": [
   "networkx.is_isomorphic",
   "nose.tools.assert_false"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_vf2userfunc.TestNodeMatch_Graph.test_noweight_nocolor": {
  "lineno": 93,
  "symbols_in_volume": [
   "networkx.is_isomorphic",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_vf2userfunc.TestNodeMatch_Graph.test_weight1": {
  "lineno": 103,
  "symbols_in_volume": [
   "networkx.is_isomorphic",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_vf2userfunc.TestNodeMatch_Graph.test_weight2": {
  "lineno": 106,
  "symbols_in_volume": [
   "networkx.is_isomorphic",
   "nose.tools.assert_false"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_vf2userfunc.test_simple": {
  "lineno": 10,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.MultiDiGraph",
   "networkx.MultiGraph",
   "networkx.algorithms.isomorphism.numerical_edge_match",
   "networkx.algorithms.isomorphism.numerical_multiedge_match",
   "networkx.is_isomorphic",
   "nose.tools.assert_false",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.tests.test_vf2userfunc.test_weightkey": {
  "lineno": 59,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.algorithms.isomorphism.numerical_edge_match",
   "networkx.is_isomorphic",
   "nose.tools.assert_false",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.vf2userfunc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.isomorphism.vf2userfunc.DiGraphMatcher": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.isomorphism.vf2userfunc.DiGraphMatcher.__init__": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.vf2userfunc.DiGraphMatcher.semantic_feasibility": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.vf2userfunc.GraphMatcher": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.isomorphism.vf2userfunc.GraphMatcher.__init__": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.isomorphism.vf2userfunc.MultiDiGraphMatcher": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.isomorphism.vf2userfunc.MultiGraphMatcher": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.isomorphism.vf2userfunc._semantic_feasibility": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.link_analysis": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.link_analysis.hits_alg": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.link_analysis.hits_alg.authority_matrix": {
  "lineno": 122,
  "symbols_in_volume": [
   "networkx.to_numpy_matrix"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_analysis.hits_alg.hits": {
  "lineno": 15,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.MultiGraph",
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_analysis.hits_alg.hits_numpy": {
  "lineno": 132,
  "symbols_in_volume": [
   "networkx.authority_matrix",
   "networkx.hub_matrix",
   "numpy.array",
   "numpy.linalg.eig"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_analysis.hits_alg.hits_scipy": {
  "lineno": 202,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError",
   "networkx.to_scipy_sparse_matrix",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_analysis.hits_alg.hub_matrix": {
  "lineno": 127,
  "symbols_in_volume": [
   "networkx.to_numpy_matrix"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_analysis.hits_alg.setup_module": {
  "lineno": 299,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_analysis.pagerank_alg": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.link_analysis.pagerank_alg.google_matrix": {
  "lineno": 161,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError",
   "networkx.to_numpy_matrix",
   "numpy.array",
   "numpy.repeat",
   "numpy.where"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_analysis.pagerank_alg.pagerank": {
  "lineno": 17,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError",
   "networkx.stochastic_graph",
   "networkx.utils.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_analysis.pagerank_alg.pagerank_numpy": {
  "lineno": 263,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linalg.eig"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_analysis.pagerank_alg.pagerank_scipy": {
  "lineno": 344,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError",
   "networkx.to_scipy_sparse_matrix"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_analysis.pagerank_alg.setup_module": {
  "lineno": 476,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_analysis.tests.test_hits": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.link_analysis.tests.test_hits.TestHITS": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.link_analysis.tests.test_hits.TestHITS.setUp": {
  "lineno": 14,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_analysis.tests.test_hits.TestHITS.test_empty": {
  "lineno": 75,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.authority_matrix",
   "networkx.hits",
   "networkx.hits_numpy",
   "networkx.hub_matrix",
   "nose.SkipTest",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_analysis.tests.test_hits.TestHITS.test_empty_scipy": {
  "lineno": 87,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.hits_scipy",
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_analysis.tests.test_hits.TestHITS.test_hits": {
  "lineno": 32,
  "symbols_in_volume": [
   "networkx.hits"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_analysis.tests.test_hits.TestHITS.test_hits_nstart": {
  "lineno": 40,
  "symbols_in_volume": [
   "networkx.hits"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_analysis.tests.test_hits.TestHITS.test_hits_numpy": {
  "lineno": 45,
  "symbols_in_volume": [
   "networkx.hits_numpy",
   "nose.SkipTest",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_analysis.tests.test_hits.TestHITS.test_hits_scipy": {
  "lineno": 61,
  "symbols_in_volume": [
   "networkx.hits_scipy",
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_analysis.tests.test_pagerank": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.link_analysis.tests.test_pagerank.TestPageRank": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.link_analysis.tests.test_pagerank.TestPageRank.setUp": {
  "lineno": 24,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_analysis.tests.test_pagerank.TestPageRank.setupClass": {
  "lineno": 16,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_analysis.tests.test_pagerank.TestPageRank.test_dangling_matrix": {
  "lineno": 91,
  "symbols_in_volume": [
   "networkx.google_matrix"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_analysis.tests.test_pagerank.TestPageRank.test_dangling_numpy_pagerank": {
  "lineno": 116,
  "symbols_in_volume": [
   "networkx.pagerank_numpy"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_analysis.tests.test_pagerank.TestPageRank.test_dangling_pagerank": {
  "lineno": 111,
  "symbols_in_volume": [
   "networkx.pagerank"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_analysis.tests.test_pagerank.TestPageRank.test_empty": {
  "lineno": 123,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.google_matrix",
   "networkx.pagerank",
   "networkx.pagerank_numpy"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_analysis.tests.test_pagerank.TestPageRank.test_google_matrix": {
  "lineno": 66,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.google_matrix",
   "numpy.array",
   "numpy.linalg.eig",
   "random.random"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_analysis.tests.test_pagerank.TestPageRank.test_numpy_pagerank": {
  "lineno": 58,
  "symbols_in_volume": [
   "networkx.pagerank_numpy",
   "random.random"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_analysis.tests.test_pagerank.TestPageRank.test_pagerank": {
  "lineno": 44,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.pagerank",
   "random.random"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_analysis.tests.test_pagerank.TestPageRank.test_personalization": {
  "lineno": 80,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.complete_graph",
   "networkx.pagerank"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_analysis.tests.test_pagerank.TestPageRankScipy": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.link_analysis.tests.test_pagerank.TestPageRankScipy.setupClass": {
  "lineno": 133,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_analysis.tests.test_pagerank.TestPageRankScipy.test_dangling_scipy_pagerank": {
  "lineno": 153,
  "symbols_in_volume": [
   "networkx.pagerank_scipy"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_analysis.tests.test_pagerank.TestPageRankScipy.test_empty_scipy": {
  "lineno": 158,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.pagerank_scipy"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_analysis.tests.test_pagerank.TestPageRankScipy.test_scipy_pagerank": {
  "lineno": 141,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.pagerank_scipy",
   "random.random"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_prediction": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.link_prediction._community": {
  "lineno": 504,
  "symbols_in_volume": [
   "networkx.NetworkXAlgorithmError"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_prediction.adamic_adar_index": {
  "lineno": 141,
  "symbols_in_volume": [
   "networkx.non_edges"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_prediction.adamic_adar_index.predict": {
  "lineno": 192,
  "symbols_in_volume": [
   "math.log",
   "networkx.common_neighbors"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_prediction.cn_soundarajan_hopcroft": {
  "lineno": 253,
  "symbols_in_volume": [
   "networkx.non_edges"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_prediction.cn_soundarajan_hopcroft.predict": {
  "lineno": 319,
  "symbols_in_volume": [
   "networkx.common_neighbors"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_prediction.jaccard_coefficient": {
  "lineno": 79,
  "symbols_in_volume": [
   "networkx.non_edges"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_prediction.jaccard_coefficient.predict": {
  "lineno": 130,
  "symbols_in_volume": [
   "networkx.common_neighbors"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_prediction.preferential_attachment": {
  "lineno": 199,
  "symbols_in_volume": [
   "networkx.non_edges"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_prediction.ra_index_soundarajan_hopcroft": {
  "lineno": 332,
  "symbols_in_volume": [
   "networkx.non_edges"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_prediction.ra_index_soundarajan_hopcroft.predict": {
  "lineno": 400,
  "symbols_in_volume": [
   "networkx.common_neighbors"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_prediction.resource_allocation_index": {
  "lineno": 21,
  "symbols_in_volume": [
   "networkx.non_edges"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_prediction.resource_allocation_index.predict": {
  "lineno": 73,
  "symbols_in_volume": [
   "networkx.common_neighbors"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_prediction.within_inter_cluster": {
  "lineno": 413,
  "symbols_in_volume": [
   "networkx.NetworkXAlgorithmError",
   "networkx.non_edges"
  ],
  "type": "function"
 },
 "networkx.algorithms.link_prediction.within_inter_cluster.predict": {
  "lineno": 489,
  "symbols_in_volume": [
   "networkx.common_neighbors"
  ],
  "type": "function"
 },
 "networkx.algorithms.matching": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.matching.max_weight_matching": {
  "lineno": 56,
  "symbols_in_volume": [
   "itertools.repeat"
  ],
  "type": "function"
 },
 "networkx.algorithms.matching.max_weight_matching.Blossom": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.matching.max_weight_matching.Blossom.leaves": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.matching.max_weight_matching.NoNode": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.matching.max_weight_matching.addBlossom": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.matching.max_weight_matching.assignLabel": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.matching.max_weight_matching.augmentBlossom": {
  "lineno": 487,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.matching.max_weight_matching.augmentMatching": {
  "lineno": 532,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.matching.max_weight_matching.expandBlossom": {
  "lineno": 392,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.matching.max_weight_matching.scanBlossom": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.matching.max_weight_matching.slack": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.matching.max_weight_matching.verifyOptimum": {
  "lineno": 563,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.matching.maximal_matching": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.minors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.minors.contracted_edge": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.minors.contracted_nodes": {
  "lineno": 180,
  "symbols_in_volume": [
   "itertools.chain"
  ],
  "type": "function"
 },
 "networkx.algorithms.minors.equivalence_classes": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.minors.peek": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.minors.quotient_graph": {
  "lineno": 68,
  "symbols_in_volume": [
   "itertools.combinations",
   "itertools.permutations",
   "itertools.product"
  ],
  "type": "function"
 },
 "networkx.algorithms.mis": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.mis.maximal_independent_set": {
  "lineno": 22,
  "symbols_in_volume": [
   "networkx.NetworkXUnfeasible",
   "random.choice"
  ],
  "type": "function"
 },
 "networkx.algorithms.mst": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.mst.minimum_spanning_edges": {
  "lineno": 24,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.utils.UnionFind"
  ],
  "type": "function"
 },
 "networkx.algorithms.mst.minimum_spanning_tree": {
  "lineno": 89,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.minimum_spanning_edges"
  ],
  "type": "function"
 },
 "networkx.algorithms.mst.prim_mst": {
  "lineno": 213,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.prim_mst_edges"
  ],
  "type": "function"
 },
 "networkx.algorithms.mst.prim_mst_edges": {
  "lineno": 140,
  "symbols_in_volume": [
   "heapq.heappop",
   "heapq.heappush",
   "itertools.count",
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.operators.all": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.operators.all.compose_all": {
  "lineno": 97,
  "symbols_in_volume": [
   "networkx.compose"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.all.disjoint_union_all": {
  "lineno": 67,
  "symbols_in_volume": [
   "networkx.disjoint_union"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.all.intersection_all": {
  "lineno": 131,
  "symbols_in_volume": [
   "networkx.intersection"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.all.union_all": {
  "lineno": 23,
  "symbols_in_volume": [
   "itertools.zip_longest",
   "networkx.union"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.binary": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.operators.binary.compose": {
  "lineno": 297,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.binary.difference": {
  "lineno": 199,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.create_empty_copy"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.binary.disjoint_union": {
  "lineno": 108,
  "symbols_in_volume": [
   "networkx.convert_node_labels_to_integers"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.binary.intersection": {
  "lineno": 143,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.create_empty_copy"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.binary.symmetric_difference": {
  "lineno": 244,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.create_empty_copy"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.binary.union": {
  "lineno": 19,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.binary.union.add_prefix": {
  "lineno": 66,
  "symbols_in_volume": [
   "networkx.relabel_nodes"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.binary.union.add_prefix.label": {
  "lineno": 70,
  "symbols_in_volume": [
   "networkx.utils.is_string_like"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.product": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.operators.product._dict_product": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.operators.product._directed_edges_cross_edges": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.operators.product._edges_cross_nodes": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.operators.product._edges_cross_nodes_and_nodes": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.operators.product._init_product_graph": {
  "lineno": 114,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.MultiGraph",
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.product._node_product": {
  "lineno": 27,
  "symbols_in_volume": [
   "itertools.product"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.product._nodes_cross_edges": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.operators.product._undirected_edges_cross_edges": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.operators.product.cartesian_product": {
  "lineno": 183,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.product.lexicographic_product": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.operators.product.power": {
  "lineno": 346,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.product.strong_product": {
  "lineno": 290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.operators.product.tensor_product": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_all": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.operators.tests.test_all.test_input_output": {
  "lineno": 159,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.compose_all",
   "networkx.disjoint_union_all",
   "networkx.intersection_all"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_all.test_intersection_all": {
  "lineno": 33,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.intersection_all"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_all.test_intersection_all_attributes": {
  "lineno": 51,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.intersection",
   "networkx.intersection_all"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_all.test_intersection_all_multigraph_attributes": {
  "lineno": 71,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.intersection_all"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_all.test_mixed_type_compose": {
  "lineno": 191,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.MultiGraph",
   "networkx.NetworkXError",
   "networkx.compose_all"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_all.test_mixed_type_disjoint_union": {
  "lineno": 177,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.MultiGraph",
   "networkx.NetworkXError",
   "networkx.disjoint_union_all"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_all.test_mixed_type_intersection": {
  "lineno": 184,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.MultiGraph",
   "networkx.NetworkXError",
   "networkx.intersection_all"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_all.test_mixed_type_union": {
  "lineno": 170,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.MultiGraph",
   "networkx.NetworkXError",
   "networkx.union_all"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_all.test_union_all_and_compose_all": {
  "lineno": 85,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXError",
   "networkx.complete_graph",
   "networkx.compose_all",
   "networkx.disjoint_union_all",
   "networkx.number_of_edges",
   "networkx.path_graph",
   "networkx.union",
   "networkx.union_all"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_all.test_union_all_attributes": {
  "lineno": 5,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.union_all"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_all.test_union_all_multigraph": {
  "lineno": 146,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.union_all"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_binary": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.operators.tests.test_binary.test_compose_multigraph": {
  "lineno": 255,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.compose"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_binary.test_difference": {
  "lineno": 78,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.difference",
   "networkx.symmetric_difference"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_binary.test_difference2": {
  "lineno": 98,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.difference"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_binary.test_difference_attributes": {
  "lineno": 118,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.difference",
   "networkx.intersection"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_binary.test_difference_multigraph_attributes": {
  "lineno": 138,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.difference"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_binary.test_difference_raise": {
  "lineno": 153,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.difference",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_binary.test_disjoint_union_multigraph": {
  "lineno": 242,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.disjoint_union"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_binary.test_intersection": {
  "lineno": 27,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.intersection"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_binary.test_intersection_attributes": {
  "lineno": 41,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.intersection"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_binary.test_intersection_multigraph_attributes": {
  "lineno": 63,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.intersection"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_binary.test_mixed_type_compose": {
  "lineno": 304,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.MultiGraph",
   "networkx.NetworkXError",
   "networkx.compose"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_binary.test_mixed_type_difference": {
  "lineno": 291,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.MultiGraph",
   "networkx.NetworkXError",
   "networkx.difference"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_binary.test_mixed_type_disjoint_union": {
  "lineno": 279,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.MultiGraph",
   "networkx.NetworkXError",
   "networkx.disjoint_union"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_binary.test_mixed_type_intersection": {
  "lineno": 285,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.MultiGraph",
   "networkx.NetworkXError",
   "networkx.intersection"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_binary.test_mixed_type_symmetric_difference": {
  "lineno": 298,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.MultiGraph",
   "networkx.NetworkXError",
   "networkx.symmetric_difference"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_binary.test_mixed_type_union": {
  "lineno": 273,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.MultiGraph",
   "networkx.NetworkXError",
   "networkx.union"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_binary.test_symmetric_difference_multigraph": {
  "lineno": 159,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.symmetric_difference"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_binary.test_symmetric_difference_raise": {
  "lineno": 174,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.path_graph",
   "networkx.symmetric_difference"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_binary.test_union_and_compose": {
  "lineno": 180,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXError",
   "networkx.union"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_binary.test_union_attributes": {
  "lineno": 6,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.union"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_binary.test_union_multigraph": {
  "lineno": 230,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.union"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_product": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.operators.tests.test_product.test_cartesian_product_classic": {
  "lineno": 172,
  "symbols_in_volume": [
   "networkx.cartesian_product",
   "networkx.cubical_graph",
   "networkx.grid_2d_graph",
   "networkx.is_isomorphic",
   "networkx.path_graph",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_product.test_cartesian_product_multigraph": {
  "lineno": 100,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.cartesian_product",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_product.test_cartesian_product_null": {
  "lineno": 122,
  "symbols_in_volume": [
   "networkx.cartesian_product",
   "networkx.complete_graph",
   "networkx.empty_graph",
   "networkx.is_isomorphic",
   "networkx.null_graph",
   "networkx.path_graph",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_product.test_cartesian_product_raises": {
  "lineno": 117,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.cartesian_product",
   "nose.tools.raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_product.test_cartesian_product_random": {
  "lineno": 186,
  "symbols_in_volume": [
   "networkx.cartesian_product",
   "networkx.erdos_renyi_graph",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_product.test_cartesian_product_size": {
  "lineno": 155,
  "symbols_in_volume": [
   "networkx.cartesian_product",
   "networkx.complete_graph",
   "networkx.number_of_edges",
   "networkx.number_of_nodes",
   "networkx.path_graph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_product.test_graph_power": {
  "lineno": 359,
  "symbols_in_volume": [
   "networkx.cycle_graph",
   "networkx.power",
   "nose.tools.assert_equal",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_product.test_graph_power_raises": {
  "lineno": 354,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.NetworkXError",
   "networkx.power",
   "nose.tools.raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_product.test_lexicographic_product_combinations": {
  "lineno": 248,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.complete_graph",
   "networkx.lexicographic_product",
   "networkx.number_of_nodes",
   "networkx.path_graph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_product.test_lexicographic_product_null": {
  "lineno": 205,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.empty_graph",
   "networkx.is_isomorphic",
   "networkx.lexicographic_product",
   "networkx.null_graph",
   "networkx.path_graph",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_product.test_lexicographic_product_raises": {
  "lineno": 200,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.lexicographic_product",
   "nose.tools.raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_product.test_lexicographic_product_random": {
  "lineno": 263,
  "symbols_in_volume": [
   "networkx.erdos_renyi_graph",
   "networkx.lexicographic_product",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_product.test_lexicographic_product_size": {
  "lineno": 238,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.lexicographic_product",
   "networkx.number_of_nodes",
   "networkx.path_graph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_product.test_strong_product_combinations": {
  "lineno": 324,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.complete_graph",
   "networkx.number_of_nodes",
   "networkx.path_graph",
   "networkx.strong_product",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_product.test_strong_product_null": {
  "lineno": 281,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.empty_graph",
   "networkx.is_isomorphic",
   "networkx.null_graph",
   "networkx.path_graph",
   "networkx.strong_product",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_product.test_strong_product_raises": {
  "lineno": 276,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.strong_product",
   "nose.tools.raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_product.test_strong_product_random": {
  "lineno": 339,
  "symbols_in_volume": [
   "networkx.erdos_renyi_graph",
   "networkx.strong_product",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_product.test_strong_product_size": {
  "lineno": 314,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.number_of_nodes",
   "networkx.path_graph",
   "networkx.strong_product",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_product.test_tensor_product_classic_result": {
  "lineno": 72,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.cubical_graph",
   "networkx.cycle_graph",
   "networkx.desargues_graph",
   "networkx.is_isomorphic",
   "networkx.petersen_graph",
   "networkx.tensor_product",
   "networkx.tetrahedral_graph",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_product.test_tensor_product_combinations": {
  "lineno": 55,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.MultiGraph",
   "networkx.complete_graph",
   "networkx.number_of_nodes",
   "networkx.path_graph",
   "networkx.tensor_product",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_product.test_tensor_product_null": {
  "lineno": 11,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.empty_graph",
   "networkx.is_isomorphic",
   "networkx.null_graph",
   "networkx.path_graph",
   "networkx.tensor_product",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_product.test_tensor_product_raises": {
  "lineno": 6,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.tensor_product",
   "nose.tools.raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_product.test_tensor_product_random": {
  "lineno": 87,
  "symbols_in_volume": [
   "networkx.erdos_renyi_graph",
   "networkx.tensor_product",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_product.test_tensor_product_size": {
  "lineno": 44,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.number_of_nodes",
   "networkx.path_graph",
   "networkx.tensor_product",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_unary": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.operators.tests.test_unary.test_complement": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_unary.test_complement_2": {
  "lineno": 32,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.tests.test_unary.test_reverse1": {
  "lineno": 43,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.reverse"
  ],
  "type": "function"
 },
 "networkx.algorithms.operators.unary": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.operators.unary.complement": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.operators.unary.reverse": {
  "lineno": 49,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.richclub": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.richclub._compute_rc": {
  "lineno": 82,
  "symbols_in_volume": [
   "networkx.degree_histogram",
   "networkx.utils.accumulate"
  ],
  "type": "function"
 },
 "networkx.algorithms.richclub.rich_club_coefficient": {
  "lineno": 8,
  "symbols_in_volume": [
   "networkx.double_edge_swap"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.shortest_paths.astar": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.shortest_paths.astar.astar_path": {
  "lineno": 22,
  "symbols_in_volume": [
   "heapq.heappop",
   "heapq.heappush",
   "itertools.count",
   "networkx.NetworkXError",
   "networkx.NetworkXNoPath"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.astar.astar_path.heuristic": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.astar.astar_path_length": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.dense": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.shortest_paths.dense.floyd_warshall": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.dense.floyd_warshall_numpy": {
  "lineno": 16,
  "symbols_in_volume": [
   "networkx.to_numpy_matrix",
   "numpy.identity",
   "numpy.inf",
   "numpy.minimum"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.dense.floyd_warshall_predecessor_and_distance": {
  "lineno": 61,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.dense.setup_module": {
  "lineno": 153,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.generic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.shortest_paths.generic.all_shortest_paths": {
  "lineno": 313,
  "symbols_in_volume": [
   "networkx.NetworkXNoPath",
   "networkx.dijkstra_predecessor_and_distance",
   "networkx.predecessor"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.generic.average_shortest_path_length": {
  "lineno": 252,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.is_connected",
   "networkx.is_weakly_connected",
   "networkx.single_source_dijkstra_path_length",
   "networkx.single_source_shortest_path_length"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.generic.has_path": {
  "lineno": 21,
  "symbols_in_volume": [
   "networkx.NetworkXNoPath",
   "networkx.shortest_path"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.generic.shortest_path": {
  "lineno": 41,
  "symbols_in_volume": [
   "networkx.all_pairs_dijkstra_path",
   "networkx.all_pairs_shortest_path",
   "networkx.bidirectional_shortest_path",
   "networkx.dijkstra_path",
   "networkx.single_source_dijkstra_path",
   "networkx.single_source_shortest_path",
   "networkx.utils.reversed"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.generic.shortest_path_length": {
  "lineno": 143,
  "symbols_in_volume": [
   "networkx.all_pairs_dijkstra_path_length",
   "networkx.all_pairs_shortest_path_length",
   "networkx.bidirectional_shortest_path",
   "networkx.dijkstra_path_length",
   "networkx.single_source_dijkstra_path_length",
   "networkx.single_source_shortest_path_length",
   "networkx.utils.reversed"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_astar": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.shortest_paths.tests.test_astar.TestAStar": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.shortest_paths.tests.test_astar.TestAStar.setUp": {
  "lineno": 8,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_astar.TestAStar.test_astar_directed": {
  "lineno": 44,
  "symbols_in_volume": [
   "networkx.astar_path",
   "networkx.astar_path_length"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_astar.TestAStar.test_astar_directed2": {
  "lineno": 64,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.astar_path"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_astar.TestAStar.test_astar_multigraph": {
  "lineno": 48,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.NetworkXError",
   "networkx.astar_path",
   "networkx.astar_path_length"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_astar.TestAStar.test_astar_nopath": {
  "lineno": 114,
  "symbols_in_volume": [
   "networkx.NetworkXNoPath",
   "networkx.astar_path"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_astar.TestAStar.test_astar_undirected": {
  "lineno": 55,
  "symbols_in_volume": [
   "networkx.astar_path",
   "networkx.astar_path_length"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_astar.TestAStar.test_astar_undirected2": {
  "lineno": 75,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.astar_path",
   "networkx.astar_path_length"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_astar.TestAStar.test_astar_undirected3": {
  "lineno": 87,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.astar_path",
   "networkx.astar_path_length"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_astar.TestAStar.test_astar_w1": {
  "lineno": 106,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.astar_path",
   "networkx.astar_path_length"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_astar.TestAStar.test_cycle": {
  "lineno": 118,
  "symbols_in_volume": [
   "networkx.astar_path",
   "networkx.cycle_graph",
   "networkx.dijkstra_path"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_astar.TestAStar.test_orderable": {
  "lineno": 124,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.algorithms.shortest_paths.astar.astar_path"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_astar.TestAStar.test_orderable.UnorderableClass": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.shortest_paths.tests.test_astar.TestAStar.test_random_graph": {
  "lineno": 21,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.astar_path",
   "networkx.dijkstra_path",
   "random.choice",
   "random.random"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_astar.TestAStar.test_random_graph.dist": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_dense": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.shortest_paths.tests.test_dense.TestFloyd": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.shortest_paths.tests.test_dense.TestFloyd.setUp": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_dense.TestFloyd.test_cycle": {
  "lineno": 52,
  "symbols_in_volume": [
   "networkx.cycle_graph",
   "networkx.floyd_warshall_predecessor_and_distance"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_dense.TestFloyd.test_floyd_warshall_predecessor_and_distance": {
  "lineno": 10,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.floyd_warshall",
   "networkx.floyd_warshall_predecessor_and_distance"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_dense.TestFloyd.test_weight_parameter": {
  "lineno": 75,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.floyd_warshall_predecessor_and_distance"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_dense.TestFloyd.test_weighted": {
  "lineno": 58,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.floyd_warshall_predecessor_and_distance"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_dense.TestFloyd.test_weighted2": {
  "lineno": 66,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.floyd_warshall_predecessor_and_distance"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_dense.TestFloyd.test_zero_distance": {
  "lineno": 86,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.floyd_warshall_predecessor_and_distance"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_dense.TestFloyd.test_zero_weight": {
  "lineno": 107,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.MultiDiGraph",
   "networkx.floyd_warshall"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_dense_numpy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.shortest_paths.tests.test_dense_numpy.TestFloydNumpy": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.shortest_paths.tests.test_dense_numpy.TestFloydNumpy.setupClass": {
  "lineno": 8,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_dense_numpy.TestFloydNumpy.test_cycle_numpy": {
  "lineno": 19,
  "symbols_in_volume": [
   "networkx.cycle_graph",
   "networkx.floyd_warshall_numpy",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_dense_numpy.TestFloydNumpy.test_directed_cycle_numpy": {
  "lineno": 48,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.floyd_warshall_numpy",
   "networkx.floyd_warshall_predecessor_and_distance",
   "networkx.utils.dict_to_numpy_array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_dense_numpy.TestFloydNumpy.test_weight_parameter_numpy": {
  "lineno": 39,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.floyd_warshall_numpy",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_dense_numpy.TestFloydNumpy.test_weighted_numpy": {
  "lineno": 31,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.floyd_warshall_numpy",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_dense_numpy.TestFloydNumpy.test_zero_weight": {
  "lineno": 55,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.MultiDiGraph",
   "networkx.floyd_warshall_numpy",
   "numpy.min",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_generic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.shortest_paths.tests.test_generic.TestGenericPath": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.shortest_paths.tests.test_generic.TestGenericPath.setUp": {
  "lineno": 21,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.convert_node_labels_to_integers",
   "networkx.cycle_graph",
   "networkx.grid_2d_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_generic.TestGenericPath.test_all_pairs_shortest_path": {
  "lineno": 87,
  "symbols_in_volume": [
   "networkx.all_pairs_dijkstra_path",
   "networkx.all_pairs_shortest_path",
   "networkx.shortest_path"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_generic.TestGenericPath.test_all_pairs_shortest_path_length": {
  "lineno": 101,
  "symbols_in_volume": [
   "networkx.all_pairs_dijkstra_path_length",
   "networkx.all_pairs_shortest_path_length",
   "networkx.shortest_path_length"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_generic.TestGenericPath.test_all_shortest_paths": {
  "lineno": 147,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.all_shortest_paths"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_generic.TestGenericPath.test_all_shortest_paths_raise": {
  "lineno": 154,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXNoPath",
   "networkx.all_shortest_paths"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_generic.TestGenericPath.test_average_shortest_disconnected": {
  "lineno": 132,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.average_shortest_path_length"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_generic.TestGenericPath.test_average_shortest_path": {
  "lineno": 114,
  "symbols_in_volume": [
   "networkx.average_shortest_path_length",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_generic.TestGenericPath.test_has_path": {
  "lineno": 140,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.has_path"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_generic.TestGenericPath.test_shortest_path": {
  "lineno": 28,
  "symbols_in_volume": [
   "networkx.shortest_path"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_generic.TestGenericPath.test_shortest_path_length": {
  "lineno": 44,
  "symbols_in_volume": [
   "networkx.shortest_path_length"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_generic.TestGenericPath.test_shortest_path_length_target": {
  "lineno": 53,
  "symbols_in_volume": [
   "networkx.path_graph",
   "networkx.shortest_path_length"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_generic.TestGenericPath.test_shortest_path_target": {
  "lineno": 40,
  "symbols_in_volume": [
   "networkx.path_graph",
   "networkx.shortest_path"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_generic.TestGenericPath.test_single_source_shortest_path": {
  "lineno": 59,
  "symbols_in_volume": [
   "networkx.shortest_path",
   "networkx.single_source_dijkstra_path",
   "networkx.single_source_shortest_path"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_generic.TestGenericPath.test_single_source_shortest_path_length": {
  "lineno": 73,
  "symbols_in_volume": [
   "networkx.shortest_path_length",
   "networkx.single_source_dijkstra_path_length",
   "networkx.single_source_shortest_path_length"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_generic.TestGenericPath.test_weighted_average_shortest_path": {
  "lineno": 121,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.average_shortest_path_length"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_generic.validate_grid_path": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_unweighted": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.shortest_paths.tests.test_unweighted.TestUnweightedPath": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.shortest_paths.tests.test_unweighted.TestUnweightedPath.setUp": {
  "lineno": 21,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.convert_node_labels_to_integers",
   "networkx.cycle_graph",
   "networkx.grid_2d_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_unweighted.TestUnweightedPath.test_all_pairs_shortest_path": {
  "lineno": 57,
  "symbols_in_volume": [
   "networkx.all_pairs_shortest_path"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_unweighted.TestUnweightedPath.test_all_pairs_shortest_path_length": {
  "lineno": 63,
  "symbols_in_volume": [
   "networkx.all_pairs_shortest_path_length"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_unweighted.TestUnweightedPath.test_bidirectional_shortest_path": {
  "lineno": 28,
  "symbols_in_volume": [
   "networkx.bidirectional_shortest_path"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_unweighted.TestUnweightedPath.test_predecessor": {
  "lineno": 69,
  "symbols_in_volume": [
   "networkx.grid_2d_graph",
   "networkx.path_graph",
   "networkx.predecessor"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_unweighted.TestUnweightedPath.test_predecessor_cutoff": {
  "lineno": 78,
  "symbols_in_volume": [
   "networkx.path_graph",
   "networkx.predecessor"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_unweighted.TestUnweightedPath.test_predecessor_target": {
  "lineno": 83,
  "symbols_in_volume": [
   "networkx.path_graph",
   "networkx.predecessor"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_unweighted.TestUnweightedPath.test_shortest_path_length": {
  "lineno": 37,
  "symbols_in_volume": [
   "networkx.shortest_path_length"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_unweighted.TestUnweightedPath.test_single_source_shortest_path": {
  "lineno": 47,
  "symbols_in_volume": [
   "networkx.single_source_shortest_path"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_unweighted.TestUnweightedPath.test_single_source_shortest_path_length": {
  "lineno": 53,
  "symbols_in_volume": [
   "networkx.single_source_shortest_path_length"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_unweighted.validate_grid_path": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_weighted": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.shortest_paths.tests.test_weighted.TestBellmanFordAndGoldbergRadizk": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.shortest_paths.tests.test_weighted.TestBellmanFordAndGoldbergRadizk.test_multigraph": {
  "lineno": 261,
  "symbols_in_volume": [
   "networkx.bellman_ford",
   "networkx.goldberg_radzik"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_weighted.TestBellmanFordAndGoldbergRadizk.test_negative_weight_cycle": {
  "lineno": 213,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXUnbounded",
   "networkx.bellman_ford",
   "networkx.cycle_graph",
   "networkx.goldberg_radzik"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_weighted.TestBellmanFordAndGoldbergRadizk.test_not_connected": {
  "lineno": 237,
  "symbols_in_volume": [
   "networkx.bellman_ford",
   "networkx.complete_graph",
   "networkx.goldberg_radzik"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_weighted.TestBellmanFordAndGoldbergRadizk.test_others": {
  "lineno": 275,
  "symbols_in_volume": [
   "networkx.bellman_ford",
   "networkx.goldberg_radzik",
   "networkx.grid_2d_graph",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_weighted.TestBellmanFordAndGoldbergRadizk.test_single_node_graph": {
  "lineno": 205,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.bellman_ford",
   "networkx.goldberg_radzik"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_weighted.TestJohnsonAlgorithm": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.shortest_paths.tests.test_weighted.TestJohnsonAlgorithm.test_graphs": {
  "lineno": 348,
  "symbols_in_volume": [
   "networkx.johnson"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_weighted.TestJohnsonAlgorithm.test_negative_cycle": {
  "lineno": 318,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.NetworkXUnbounded",
   "networkx.johnson"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_weighted.TestJohnsonAlgorithm.test_negative_weights": {
  "lineno": 331,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.johnson"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_weighted.TestJohnsonAlgorithm.test_single_node_graph": {
  "lineno": 312,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXError",
   "networkx.johnson"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_weighted.TestJohnsonAlgorithm.test_unweighted_graph": {
  "lineno": 343,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.johnson",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_weighted.TestWeightedPath": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.shortest_paths.tests.test_weighted.TestWeightedPath.test_bidirectional_dijkstra": {
  "lineno": 115,
  "symbols_in_volume": [
   "networkx.bidirectional_dijkstra",
   "networkx.dijkstra_path",
   "networkx.single_source_dijkstra_path"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_weighted.TestWeightedPath.test_bidirectional_dijkstra_multigraph": {
  "lineno": 171,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.bidirectional_dijkstra"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_weighted.TestWeightedPath.test_bidirectional_dijkstra_no_path": {
  "lineno": 134,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXNoPath",
   "networkx.bidirectional_dijkstra"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_weighted.TestWeightedPath.test_dijkstra": {
  "lineno": 65,
  "symbols_in_volume": [
   "networkx.NetworkXNoPath",
   "networkx.dijkstra_path",
   "networkx.dijkstra_path_length",
   "networkx.single_source_dijkstra",
   "networkx.single_source_dijkstra_path",
   "networkx.single_source_dijkstra_path_length"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_weighted.TestWeightedPath.test_dijkstra_pred_distance_multigraph": {
  "lineno": 178,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.dijkstra_predecessor_and_distance"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_weighted.TestWeightedPath.test_dijkstra_predecessor": {
  "lineno": 141,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.dijkstra_predecessor_and_distance",
   "networkx.grid_2d_graph",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_weighted.TestWeightedPath.test_negative_edge_cycle": {
  "lineno": 186,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.bidirectional_dijkstra",
   "networkx.cycle_graph",
   "networkx.dijkstra_predecessor_and_distance",
   "networkx.negative_edge_cycle",
   "networkx.single_source_dijkstra",
   "networkx.single_source_dijkstra_path_length"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_weighted.TestWeightedPath.test_single_source_dijkstra_path_length": {
  "lineno": 165,
  "symbols_in_volume": [
   "networkx.single_source_dijkstra_path_length"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_weighted._setUp": {
  "lineno": 5,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.MultiDiGraph",
   "networkx.MultiGraph",
   "networkx.convert_node_labels_to_integers",
   "networkx.cycle_graph",
   "networkx.grid_2d_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_weighted.validate_length_path": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.tests.test_weighted.validate_path": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.unweighted": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.shortest_paths.unweighted._bidirectional_pred_succ": {
  "lineno": 154,
  "symbols_in_volume": [
   "networkx.NetworkXNoPath"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.unweighted.all_pairs_shortest_path": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.unweighted.all_pairs_shortest_path_length": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.unweighted.bidirectional_shortest_path": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.unweighted.predecessor": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.unweighted.single_source_shortest_path": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.unweighted.single_source_shortest_path_length": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.weighted": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.shortest_paths.weighted._bellman_ford_relaxation": {
  "lineno": 584,
  "symbols_in_volume": [
   "collections.deque",
   "itertools.count",
   "itertools.count.get",
   "networkx.NetworkXUnbounded"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.weighted._bellman_ford_relaxation.get_weight": {
  "lineno": 620,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.weighted._dijkstra": {
  "lineno": 299,
  "symbols_in_volume": [
   "heapq.heappop",
   "heapq.heappush",
   "itertools.count"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.weighted.all_pairs_dijkstra_path": {
  "lineno": 466,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.weighted.all_pairs_dijkstra_path_length": {
  "lineno": 427,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.weighted.bellman_ford": {
  "lineno": 506,
  "symbols_in_volume": [
   "networkx.NetworkXUnbounded"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.weighted.bidirectional_dijkstra": {
  "lineno": 875,
  "symbols_in_volume": [
   "heapq.heappop",
   "heapq.heappush",
   "itertools.count",
   "networkx.NetworkXNoPath"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.weighted.dijkstra_path": {
  "lineno": 36,
  "symbols_in_volume": [
   "networkx.NetworkXNoPath"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.weighted.dijkstra_path_length": {
  "lineno": 86,
  "symbols_in_volume": [
   "networkx.NetworkXNoPath"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.weighted.dijkstra_predecessor_and_distance": {
  "lineno": 386,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.weighted.goldberg_radzik": {
  "lineno": 653,
  "symbols_in_volume": [
   "networkx.NetworkXUnbounded"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.weighted.goldberg_radzik.get_weight": {
  "lineno": 729,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.weighted.goldberg_radzik.relax": {
  "lineno": 800,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.weighted.goldberg_radzik.topo_sort": {
  "lineno": 742,
  "symbols_in_volume": [
   "networkx.NetworkXUnbounded"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.weighted.johnson": {
  "lineno": 1015,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.is_weighted"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.weighted.negative_edge_cycle": {
  "lineno": 828,
  "symbols_in_volume": [
   "networkx.NetworkXUnbounded",
   "networkx.utils.generate_unique_node"
  ],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.weighted.single_source_dijkstra": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.weighted.single_source_dijkstra_path": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.shortest_paths.weighted.single_source_dijkstra_path_length": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.simple_paths": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.simple_paths.PathBuffer": {
  "lineno": 268,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.simple_paths.PathBuffer.__init__": {
  "lineno": 270,
  "symbols_in_volume": [
   "itertools.count"
  ],
  "type": "function"
 },
 "networkx.algorithms.simple_paths.PathBuffer.__len__": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.simple_paths.PathBuffer.pop": {
  "lineno": 284,
  "symbols_in_volume": [
   "heapq.heappop"
  ],
  "type": "function"
 },
 "networkx.algorithms.simple_paths.PathBuffer.push": {
  "lineno": 278,
  "symbols_in_volume": [
   "heapq.heappush"
  ],
  "type": "function"
 },
 "networkx.algorithms.simple_paths._all_simple_paths_graph": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.simple_paths._all_simple_paths_multigraph": {
  "lineno": 115,
  "symbols_in_volume": [
   "itertools.count"
  ],
  "type": "function"
 },
 "networkx.algorithms.simple_paths._bidirectional_dijkstra": {
  "lineno": 452,
  "symbols_in_volume": [
   "heapq.heappop",
   "heapq.heappush",
   "itertools.count",
   "networkx.NetworkXNoPath"
  ],
  "type": "function"
 },
 "networkx.algorithms.simple_paths._bidirectional_dijkstra.filter_iter": {
  "lineno": 564,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.simple_paths._bidirectional_dijkstra.filter_iter.iterate": {
  "lineno": 565,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.simple_paths._bidirectional_dijkstra.filter_pred_iter": {
  "lineno": 546,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.simple_paths._bidirectional_dijkstra.filter_pred_iter.iterate": {
  "lineno": 547,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.simple_paths._bidirectional_dijkstra.filter_succ_iter": {
  "lineno": 553,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.simple_paths._bidirectional_dijkstra.filter_succ_iter.iterate": {
  "lineno": 554,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.simple_paths._bidirectional_pred_succ": {
  "lineno": 355,
  "symbols_in_volume": [
   "networkx.NetworkXNoPath"
  ],
  "type": "function"
 },
 "networkx.algorithms.simple_paths._bidirectional_pred_succ.filter_iter": {
  "lineno": 406,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.simple_paths._bidirectional_pred_succ.filter_iter.iterate": {
  "lineno": 407,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.simple_paths._bidirectional_pred_succ.filter_pred_iter": {
  "lineno": 388,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.simple_paths._bidirectional_pred_succ.filter_pred_iter.iterate": {
  "lineno": 389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.simple_paths._bidirectional_pred_succ.filter_succ_iter": {
  "lineno": 395,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.simple_paths._bidirectional_pred_succ.filter_succ_iter.iterate": {
  "lineno": 396,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.simple_paths._bidirectional_shortest_path": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.simple_paths.all_simple_paths": {
  "lineno": 23,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.simple_paths.shortest_simple_paths": {
  "lineno": 140,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.NetworkXNoPath",
   "networkx.utils.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.simple_paths.shortest_simple_paths.length_func": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.smetric": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.smetric.s_metric": {
  "lineno": 4,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.swap": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.swap.connected_double_edge_swap": {
  "lineno": 104,
  "symbols_in_volume": [
   "math.ceil",
   "networkx.NetworkXError",
   "networkx.has_path",
   "networkx.is_connected",
   "networkx.utils.cumulative_distribution",
   "networkx.utils.discrete_sequence",
   "random.choice"
  ],
  "type": "function"
 },
 "networkx.algorithms.swap.double_edge_swap": {
  "lineno": 27,
  "symbols_in_volume": [
   "networkx.NetworkXAlgorithmError",
   "networkx.NetworkXError",
   "networkx.utils.cumulative_distribution",
   "networkx.utils.discrete_sequence",
   "random.choice"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_block": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.tests.test_block.TestBlock": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_block.TestBlock.test_barbell": {
  "lineno": 78,
  "symbols_in_volume": [
   "networkx.barbell_graph",
   "networkx.blockmodel"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_block.TestBlock.test_barbell_plus": {
  "lineno": 89,
  "symbols_in_volume": [
   "networkx.barbell_graph",
   "networkx.blockmodel"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_block.TestBlock.test_directed_multigraph_path": {
  "lineno": 41,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.blockmodel"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_block.TestBlock.test_directed_path": {
  "lineno": 29,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.blockmodel"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_block.TestBlock.test_multigraph_path": {
  "lineno": 18,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.blockmodel",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_block.TestBlock.test_overlapping": {
  "lineno": 53,
  "symbols_in_volume": [
   "networkx.NetworkXException",
   "networkx.blockmodel",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_block.TestBlock.test_path": {
  "lineno": 7,
  "symbols_in_volume": [
   "networkx.blockmodel",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_block.TestBlock.test_weighted_path": {
  "lineno": 59,
  "symbols_in_volume": [
   "networkx.blockmodel",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_boundary": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.tests.test_boundary.TestBoundary": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_boundary.TestBoundary.setUp": {
  "lineno": 8,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.convert_node_labels_to_integers",
   "networkx.null_graph",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_boundary.TestBoundary.test_k10_edge_boundary": {
  "lineno": 72,
  "symbols_in_volume": [
   "networkx.edge_boundary"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_boundary.TestBoundary.test_k10_node_boundary": {
  "lineno": 56,
  "symbols_in_volume": [
   "networkx.node_boundary"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_boundary.TestBoundary.test_null_edge_boundary": {
  "lineno": 22,
  "symbols_in_volume": [
   "networkx.edge_boundary"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_boundary.TestBoundary.test_null_node_boundary": {
  "lineno": 13,
  "symbols_in_volume": [
   "networkx.node_boundary"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_boundary.TestBoundary.test_path_edge_boundary": {
  "lineno": 42,
  "symbols_in_volume": [
   "networkx.edge_boundary"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_boundary.TestBoundary.test_path_node_boundary": {
  "lineno": 31,
  "symbols_in_volume": [
   "networkx.node_boundary"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_boundary.TestBoundary.test_petersen": {
  "lineno": 89,
  "symbols_in_volume": [
   "networkx.petersen_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_boundary.TestBoundary.test_petersen.cheeger": {
  "lineno": 96,
  "symbols_in_volume": [
   "itertools.combinations",
   "networkx.node_boundary"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_clique": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.tests.test_clique.TestCliques": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_clique.TestCliques.setUp": {
  "lineno": 9,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.convert_node_labels_to_integers",
   "networkx.find_cliques",
   "networkx.generators.havel_hakimi_graph",
   "networkx.relabel_nodes"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_clique.TestCliques.test_clique_number": {
  "lineno": 38,
  "symbols_in_volume": [
   "networkx.graph_clique_number"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_clique.TestCliques.test_cliques_containing_node": {
  "lineno": 81,
  "symbols_in_volume": [
   "networkx.cliques_containing_node"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_clique.TestCliques.test_directed": {
  "lineno": 111,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXNotImplemented",
   "networkx.find_cliques"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_clique.TestCliques.test_find_cliques1": {
  "lineno": 18,
  "symbols_in_volume": [
   "networkx.find_cliques",
   "networkx.find_cliques_recursive"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_clique.TestCliques.test_find_cliques2": {
  "lineno": 33,
  "symbols_in_volume": [
   "networkx.find_cliques"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_clique.TestCliques.test_make_clique_bipartite": {
  "lineno": 99,
  "symbols_in_volume": [
   "networkx.make_clique_bipartite",
   "networkx.make_max_clique_graph",
   "networkx.project_down",
   "networkx.project_up"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_clique.TestCliques.test_node_clique_number": {
  "lineno": 67,
  "symbols_in_volume": [
   "networkx.node_clique_number"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_clique.TestCliques.test_number_of_cliques": {
  "lineno": 43,
  "symbols_in_volume": [
   "networkx.graph_number_of_cliques",
   "networkx.number_of_cliques"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_clique.TestCliques.test_selfloops": {
  "lineno": 25,
  "symbols_in_volume": [
   "networkx.find_cliques",
   "networkx.find_cliques_recursive"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_clique.TestEnumerateAllCliques": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_clique.TestEnumerateAllCliques.test_paper_figure_4": {
  "lineno": 118,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.enumerate_all_cliques"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cluster": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.tests.test_cluster.TestClustering": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_cluster.TestClustering.test_clustering": {
  "lineno": 81,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.clustering"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cluster.TestClustering.test_cubical": {
  "lineno": 94,
  "symbols_in_volume": [
   "networkx.clustering",
   "networkx.cubical_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cluster.TestClustering.test_k5": {
  "lineno": 103,
  "symbols_in_volume": [
   "networkx.average_clustering",
   "networkx.clustering",
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cluster.TestClustering.test_path": {
  "lineno": 86,
  "symbols_in_volume": [
   "networkx.clustering",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cluster.TestSquareClustering": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_cluster.TestSquareClustering.test_bipartite_k5": {
  "lineno": 173,
  "symbols_in_volume": [
   "networkx.complete_bipartite_graph",
   "networkx.square_clustering"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cluster.TestSquareClustering.test_clustering": {
  "lineno": 148,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.square_clustering"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cluster.TestSquareClustering.test_cubical": {
  "lineno": 161,
  "symbols_in_volume": [
   "networkx.cubical_graph",
   "networkx.square_clustering"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cluster.TestSquareClustering.test_k5": {
  "lineno": 169,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.square_clustering"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cluster.TestSquareClustering.test_lind_square_clustering": {
  "lineno": 178,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.square_clustering"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cluster.TestSquareClustering.test_path": {
  "lineno": 153,
  "symbols_in_volume": [
   "networkx.path_graph",
   "networkx.square_clustering"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cluster.TestTransitivity": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_cluster.TestTransitivity.test_cubical": {
  "lineno": 124,
  "symbols_in_volume": [
   "networkx.cubical_graph",
   "networkx.transitivity"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cluster.TestTransitivity.test_k5": {
  "lineno": 128,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.transitivity"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cluster.TestTransitivity.test_path": {
  "lineno": 120,
  "symbols_in_volume": [
   "networkx.path_graph",
   "networkx.transitivity"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cluster.TestTransitivity.test_transitivity": {
  "lineno": 116,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.transitivity"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cluster.TestTriangles": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_cluster.TestTriangles.test_cubical": {
  "lineno": 19,
  "symbols_in_volume": [
   "networkx.cubical_graph",
   "networkx.triangles"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cluster.TestTriangles.test_empty": {
  "lineno": 7,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.triangles"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cluster.TestTriangles.test_k5": {
  "lineno": 28,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.triangles"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cluster.TestTriangles.test_path": {
  "lineno": 11,
  "symbols_in_volume": [
   "networkx.path_graph",
   "networkx.triangles"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cluster.TestWeightedClustering": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_cluster.TestWeightedClustering.test_clustering": {
  "lineno": 40,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.clustering"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cluster.TestWeightedClustering.test_cubical": {
  "lineno": 53,
  "symbols_in_volume": [
   "networkx.clustering",
   "networkx.cubical_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cluster.TestWeightedClustering.test_k5": {
  "lineno": 62,
  "symbols_in_volume": [
   "networkx.average_clustering",
   "networkx.clustering",
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cluster.TestWeightedClustering.test_path": {
  "lineno": 45,
  "symbols_in_volume": [
   "networkx.clustering",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cluster.TestWeightedClustering.test_triangle_and_edge": {
  "lineno": 72,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.clustering"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cluster.test_average_clustering": {
  "lineno": 190,
  "symbols_in_volume": [
   "networkx.average_clustering",
   "networkx.cycle_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_core": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.tests.test_core.TestCore": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_core.TestCore.setUp": {
  "lineno": 7,
  "symbols_in_volume": [
   "networkx.convert_node_labels_to_integers",
   "networkx.havel_hakimi_graph",
   "networkx.relabel_nodes",
   "networkx.tetrahedral_graph",
   "networkx.union"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_core.TestCore.test_core_number": {
  "lineno": 47,
  "symbols_in_volume": [
   "networkx.core_number"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_core.TestCore.test_find_cores": {
  "lineno": 37,
  "symbols_in_volume": [
   "networkx.find_cores"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_core.TestCore.test_find_cores2": {
  "lineno": 51,
  "symbols_in_volume": [
   "networkx.find_cores"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_core.TestCore.test_k_core": {
  "lineno": 64,
  "symbols_in_volume": [
   "networkx.k_core"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_core.TestCore.test_k_corona": {
  "lineno": 105,
  "symbols_in_volume": [
   "networkx.k_corona"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_core.TestCore.test_k_crust": {
  "lineno": 79,
  "symbols_in_volume": [
   "networkx.k_crust"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_core.TestCore.test_k_shell": {
  "lineno": 94,
  "symbols_in_volume": [
   "networkx.k_shell"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_core.TestCore.test_main_core": {
  "lineno": 60,
  "symbols_in_volume": [
   "networkx.k_core"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_core.TestCore.test_main_crust": {
  "lineno": 75,
  "symbols_in_volume": [
   "networkx.k_crust"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_core.TestCore.test_main_shell": {
  "lineno": 90,
  "symbols_in_volume": [
   "networkx.k_shell"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_core.TestCore.test_trivial": {
  "lineno": 32,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.find_cores"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cycles": {
  "lineno": null,
  "symbols_in_volume": [
   "networkx.algorithms.edgedfs.FORWARD",
   "networkx.algorithms.edgedfs.REVERSE"
  ],
  "type": "module"
 },
 "networkx.algorithms.tests.test_cycles.TestCycles": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_cycles.TestCycles.is_cyclic_permutation": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cycles.TestCycles.setUp": {
  "lineno": 11,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cycles.TestCycles.test_complete_directed_graph": {
  "lineno": 87,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.complete_graph",
   "networkx.simple_cycles"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cycles.TestCycles.test_cycle_basis": {
  "lineno": 48,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.NetworkXNotImplemented",
   "networkx.cycle_basis"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cycles.TestCycles.test_recursive_simple_and_not": {
  "lineno": 119,
  "symbols_in_volume": [
   "networkx.recursive_simple_cycles",
   "networkx.simple_cycles"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cycles.TestCycles.test_simple_cycles": {
  "lineno": 53,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.simple_cycles"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cycles.TestCycles.test_simple_cycles_empty": {
  "lineno": 83,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.simple_cycles"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cycles.TestCycles.test_simple_cycles_graph": {
  "lineno": 60,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXNotImplemented",
   "networkx.simple_cycles"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cycles.TestCycles.test_simple_cycles_small": {
  "lineno": 71,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.simple_cycles"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cycles.TestCycles.test_simple_graph_with_reported_bug": {
  "lineno": 130,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.recursive_simple_cycles",
   "networkx.simple_cycles"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cycles.TestCycles.test_unsortable": {
  "lineno": 65,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.simple_cycles"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cycles.TestCycles.test_worst_case_graph": {
  "lineno": 112,
  "symbols_in_volume": [
   "networkx.simple_cycles"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cycles.TestCycles.worst_case_graph": {
  "lineno": 94,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cycles.TestFindCycle": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_cycles.TestFindCycle.setUp": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cycles.TestFindCycle.test_dag": {
  "lineno": 209,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.algorithms.find_cycle",
   "networkx.exception.NetworkXNoCycle"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cycles.TestFindCycle.test_digraph": {
  "lineno": 158,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.algorithms.find_cycle"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cycles.TestFindCycle.test_digraph_ignore": {
  "lineno": 179,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.algorithms.find_cycle"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cycles.TestFindCycle.test_graph": {
  "lineno": 154,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.algorithms.find_cycle",
   "networkx.exception.NetworkXNoCycle"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cycles.TestFindCycle.test_multidigraph": {
  "lineno": 172,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.algorithms.find_cycle"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cycles.TestFindCycle.test_multidigraph_ignore": {
  "lineno": 185,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.algorithms.find_cycle"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cycles.TestFindCycle.test_multidigraph_ignore2": {
  "lineno": 200,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.algorithms.find_cycle",
   "networkx.exception.NetworkXNoCycle"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_cycles.TestFindCycle.test_multigraph": {
  "lineno": 164,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.algorithms.find_cycle"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dag": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.tests.test_dag.TestDAG": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_dag.TestDAG._check_antichains": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dag.TestDAG.setUp": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dag.TestDAG.test_ancestors": {
  "lineno": 109,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXError",
   "networkx.algorithms.dag.ancestors"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dag.TestDAG.test_antichains": {
  "lineno": 145,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.NetworkXNotImplemented",
   "networkx.NetworkXUnfeasible",
   "networkx.algorithms.dag.antichains"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dag.TestDAG.test_dag_longest_path": {
  "lineno": 173,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.NetworkXNotImplemented",
   "networkx.algorithms.dag.dag_longest_path"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dag.TestDAG.test_dag_longest_path_length": {
  "lineno": 183,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.NetworkXNotImplemented",
   "networkx.algorithms.dag.dag_longest_path_length"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dag.TestDAG.test_descendants": {
  "lineno": 119,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXError",
   "networkx.algorithms.dag.descendants"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dag.TestDAG.test_is_directed_acyclic_graph": {
  "lineno": 45,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.generators.complete_graph",
   "networkx.is_directed_acyclic_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dag.TestDAG.test_nbunch_argument": {
  "lineno": 99,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.topological_sort",
   "networkx.topological_sort_recursive"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dag.TestDAG.test_reverse_topological_sort1": {
  "lineno": 27,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXUnfeasible",
   "networkx.topological_sort",
   "networkx.topological_sort_recursive"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dag.TestDAG.test_topological_sort1": {
  "lineno": 13,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXUnfeasible",
   "networkx.topological_sort",
   "networkx.topological_sort_recursive"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dag.TestDAG.test_topological_sort2": {
  "lineno": 52,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXUnfeasible",
   "networkx.is_directed_acyclic_graph",
   "networkx.topological_sort",
   "networkx.topological_sort_recursive"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dag.TestDAG.test_topological_sort3": {
  "lineno": 68,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXUnfeasible",
   "networkx.topological_sort",
   "networkx.topological_sort_recursive"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dag.TestDAG.test_topological_sort3.validate": {
  "lineno": 75,
  "symbols_in_volume": [
   "itertools.combinations",
   "networkx.has_path"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dag.TestDAG.test_topological_sort4": {
  "lineno": 87,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.topological_sort",
   "networkx.topological_sort_recursive"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dag.TestDAG.test_topological_sort5": {
  "lineno": 93,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.topological_sort",
   "networkx.topological_sort_recursive"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dag.TestDAG.test_transitive_closure": {
  "lineno": 129,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.NetworkXNotImplemented",
   "networkx.algorithms.dag.transitive_closure",
   "networkx.testing.utils.assert_edges_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dag.test_is_aperiodic_bipartite": {
  "lineno": 235,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.davis_southern_women_graph",
   "networkx.is_aperiodic"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dag.test_is_aperiodic_cycle": {
  "lineno": 194,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.is_aperiodic"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dag.test_is_aperiodic_cycle2": {
  "lineno": 200,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.is_aperiodic"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dag.test_is_aperiodic_cycle3": {
  "lineno": 207,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.is_aperiodic"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dag.test_is_aperiodic_cycle4": {
  "lineno": 214,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.is_aperiodic"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dag.test_is_aperiodic_disconnected": {
  "lineno": 246,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.is_aperiodic"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dag.test_is_aperiodic_disconnected2": {
  "lineno": 257,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.is_aperiodic"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dag.test_is_aperiodic_raise": {
  "lineno": 228,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.is_aperiodic"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dag.test_is_aperiodic_rary_tree": {
  "lineno": 241,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.full_rary_tree",
   "networkx.is_aperiodic"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dag.test_is_aperiodic_selfloop": {
  "lineno": 221,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.is_aperiodic"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_distance_measures": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.tests.test_distance_measures.TestDistance": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_distance_measures.TestDistance.setUp": {
  "lineno": 7,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.convert_node_labels_to_integers",
   "networkx.grid_2d_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_distance_measures.TestDistance.test_center": {
  "lineno": 50,
  "symbols_in_volume": [
   "networkx.center"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_distance_measures.TestDistance.test_diameter": {
  "lineno": 41,
  "symbols_in_volume": [
   "networkx.diameter"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_distance_measures.TestDistance.test_eccentricity": {
  "lineno": 13,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.eccentricity",
   "networkx.empty_graph",
   "networkx.path_graph",
   "networkx.shortest_path_length"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_distance_measures.TestDistance.test_eccentricity_infinite": {
  "lineno": 59,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.eccentricity"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_distance_measures.TestDistance.test_eccentricity_invalid": {
  "lineno": 64,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.eccentricity"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_distance_measures.TestDistance.test_periphery": {
  "lineno": 47,
  "symbols_in_volume": [
   "networkx.periphery"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_distance_measures.TestDistance.test_radius": {
  "lineno": 44,
  "symbols_in_volume": [
   "networkx.radius"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_distance_measures.TestDistance.test_radius_exception": {
  "lineno": 53,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.diameter"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_distance_regular": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.tests.test_distance_regular.TestDistanceRegular": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_distance_regular.TestDistanceRegular.test_global_parameters": {
  "lineno": 26,
  "symbols_in_volume": [
   "networkx.cycle_graph",
   "networkx.global_parameters",
   "networkx.intersection_array"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_distance_regular.TestDistanceRegular.test_intersection_array": {
  "lineno": 35,
  "symbols_in_volume": [
   "networkx.cycle_graph",
   "networkx.dodecahedral_graph",
   "networkx.icosahedral_graph",
   "networkx.intersection_array"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_distance_regular.TestDistanceRegular.test_is_distance_regular": {
  "lineno": 7,
  "symbols_in_volume": [
   "networkx.complete_bipartite_graph",
   "networkx.cubical_graph",
   "networkx.cycle_graph",
   "networkx.dodecahedral_graph",
   "networkx.heawood_graph",
   "networkx.icosahedral_graph",
   "networkx.is_distance_regular",
   "networkx.pappus_graph",
   "networkx.path_graph",
   "networkx.petersen_graph",
   "networkx.tetrahedral_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_distance_regular.TestDistanceRegular.test_not_connected": {
  "lineno": 20,
  "symbols_in_volume": [
   "networkx.cycle_graph",
   "networkx.is_distance_regular"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dominance": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.tests.test_dominance.TestDominanceFrontiers": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_dominance.TestDominanceFrontiers.test_boost_example": {
  "lineno": 158,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.dominance_frontiers",
   "networkx.utils.reversed"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dominance.TestDominanceFrontiers.test_cycle": {
  "lineno": 112,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.cycle_graph",
   "networkx.dominance_frontiers"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dominance.TestDominanceFrontiers.test_domrel_png": {
  "lineno": 147,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.dominance_frontiers",
   "networkx.utils.reversed"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dominance.TestDominanceFrontiers.test_exceptions": {
  "lineno": 90,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.MultiGraph",
   "networkx.NetworkXError",
   "networkx.NetworkXNotImplemented",
   "networkx.dominance_frontiers"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dominance.TestDominanceFrontiers.test_irreducible1": {
  "lineno": 125,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.dominance_frontiers"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dominance.TestDominanceFrontiers.test_irreducible2": {
  "lineno": 136,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.dominance_frontiers"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dominance.TestDominanceFrontiers.test_path": {
  "lineno": 106,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.dominance_frontiers",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dominance.TestDominanceFrontiers.test_singleton": {
  "lineno": 99,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.dominance_frontiers"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dominance.TestDominanceFrontiers.test_unreachable": {
  "lineno": 118,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.dominance_frontiers",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dominance.TestImmediateDominators": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_dominance.TestImmediateDominators.test_boost_example": {
  "lineno": 74,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.immediate_dominators",
   "networkx.utils.reversed"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dominance.TestImmediateDominators.test_cycle": {
  "lineno": 29,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.cycle_graph",
   "networkx.immediate_dominators"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dominance.TestImmediateDominators.test_domrel_png": {
  "lineno": 63,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.immediate_dominators",
   "networkx.utils.reversed"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dominance.TestImmediateDominators.test_exceptions": {
  "lineno": 7,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.MultiGraph",
   "networkx.NetworkXError",
   "networkx.NetworkXNotImplemented",
   "networkx.immediate_dominators"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dominance.TestImmediateDominators.test_irreducible1": {
  "lineno": 42,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.immediate_dominators"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dominance.TestImmediateDominators.test_irreducible2": {
  "lineno": 52,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.immediate_dominators"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dominance.TestImmediateDominators.test_path": {
  "lineno": 23,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.immediate_dominators",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dominance.TestImmediateDominators.test_singleton": {
  "lineno": 16,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.immediate_dominators"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dominance.TestImmediateDominators.test_unreachable": {
  "lineno": 35,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.immediate_dominators",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dominating": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.tests.test_dominating.test_complete": {
  "lineno": 11,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.dominating_set",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dominating.test_dominating_set": {
  "lineno": 4,
  "symbols_in_volume": [
   "networkx.dominating_set",
   "networkx.gnp_random_graph",
   "networkx.is_dominating_set",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dominating.test_dominating_set_error": {
  "lineno": 20,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.dominating_set",
   "networkx.path_graph",
   "nose.tools.raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dominating.test_is_dominating_set": {
  "lineno": 25,
  "symbols_in_volume": [
   "networkx.is_dominating_set",
   "networkx.path_graph",
   "nose.tools.assert_false",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_dominating.test_wikipedia_is_dominating_set": {
  "lineno": 34,
  "symbols_in_volume": [
   "networkx.cycle_graph",
   "networkx.is_dominating_set",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_euler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.tests.test_euler.TestEuler": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_euler.TestEuler.test_eulerian_circuit_cycle": {
  "lineno": 42,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.cycle_graph",
   "networkx.eulerian_circuit"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_euler.TestEuler.test_eulerian_circuit_digraph": {
  "lineno": 69,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.eulerian_circuit"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_euler.TestEuler.test_eulerian_circuit_multigraph": {
  "lineno": 84,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.eulerian_circuit"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_euler.TestEuler.test_is_eulerian": {
  "lineno": 10,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.hypercube_graph",
   "networkx.is_eulerian",
   "networkx.path_graph",
   "networkx.petersen_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_euler.TestEuler.test_is_eulerian2": {
  "lineno": 24,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.MultiDiGraph",
   "networkx.is_eulerian"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_euler.TestEuler.test_not_eulerian": {
  "lineno": 95,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.complete_graph",
   "networkx.eulerian_circuit"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_graphical": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.tests.test_graphical.TestAtlas": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_graphical.TestAtlas.setUp": {
  "lineno": 41,
  "symbols_in_volume": [
   "networkx.generators.atlas.graph_atlas_g"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_graphical.TestAtlas.setupClass": {
  "lineno": 33,
  "symbols_in_volume": [
   "nose.SkipTest",
   "platform.python_implementation"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_graphical.TestAtlas.test_atlas": {
  "lineno": 44,
  "symbols_in_volume": [
   "networkx.is_valid_degree_sequence"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_graphical.test_directed_degree_sequence": {
  "lineno": 74,
  "symbols_in_volume": [
   "networkx.erdos_renyi_graph",
   "networkx.is_digraphical"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_graphical.test_multi_sequence": {
  "lineno": 103,
  "symbols_in_volume": [
   "networkx.is_multigraphical"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_graphical.test_negative_input": {
  "lineno": 27,
  "symbols_in_volume": [
   "networkx.is_valid_degree_sequence"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_graphical.test_pseudo_sequence": {
  "lineno": 117,
  "symbols_in_volume": [
   "networkx.is_pseudographical"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_graphical.test_small_directed_sequences": {
  "lineno": 84,
  "symbols_in_volume": [
   "networkx.is_digraphical"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_graphical.test_small_graph_false": {
  "lineno": 63,
  "symbols_in_volume": [
   "networkx.is_valid_degree_sequence"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_graphical.test_small_graph_true": {
  "lineno": 50,
  "symbols_in_volume": [
   "networkx.is_valid_degree_sequence"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_graphical.test_string_input": {
  "lineno": 23,
  "symbols_in_volume": [
   "networkx.NetworkXException",
   "networkx.is_valid_degree_sequence"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_graphical.test_valid_degree_sequence1": {
  "lineno": 6,
  "symbols_in_volume": [
   "networkx.erdos_renyi_graph",
   "networkx.is_valid_degree_sequence"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_graphical.test_valid_degree_sequence2": {
  "lineno": 15,
  "symbols_in_volume": [
   "networkx.barabasi_albert_graph",
   "networkx.is_valid_degree_sequence"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_hierarchy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.tests.test_hierarchy.test_hierarchy_1": {
  "lineno": 17,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.flow_hierarchy"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_hierarchy.test_hierarchy_cycle": {
  "lineno": 9,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.cycle_graph",
   "networkx.flow_hierarchy"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_hierarchy.test_hierarchy_exception": {
  "lineno": 5,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.cycle_graph",
   "networkx.flow_hierarchy"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_hierarchy.test_hierarchy_tree": {
  "lineno": 13,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.flow_hierarchy",
   "networkx.full_rary_tree"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_hierarchy.test_hierarchy_weight": {
  "lineno": 22,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.flow_hierarchy"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_hybrid": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.tests.test_hybrid.test_2d_grid_graph": {
  "lineno": 4,
  "symbols_in_volume": [
   "networkx.grid_2d_graph",
   "networkx.is_kl_connected",
   "networkx.kl_connected_subgraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_hybrid.test_small_graph": {
  "lineno": 13,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.is_kl_connected",
   "networkx.kl_connected_subgraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.tests.test_link_prediction.TestAdamicAdarIndex": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_link_prediction.TestAdamicAdarIndex.setUp": {
  "lineno": 117,
  "symbols_in_volume": [
   "functools.partial",
   "networkx.adamic_adar_index"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestAdamicAdarIndex.test_K5": {
  "lineno": 121,
  "symbols_in_volume": [
   "math.log",
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestAdamicAdarIndex.test_P3": {
  "lineno": 125,
  "symbols_in_volume": [
   "math.log",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestAdamicAdarIndex.test_S4": {
  "lineno": 129,
  "symbols_in_volume": [
   "math.log",
   "networkx.star_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestAdamicAdarIndex.test_all_nonexistent_edges": {
  "lineno": 160,
  "symbols_in_volume": [
   "math.log",
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestAdamicAdarIndex.test_digraph": {
  "lineno": 133,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXNotImplemented"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestAdamicAdarIndex.test_equal_nodes": {
  "lineno": 156,
  "symbols_in_volume": [
   "math.log",
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestAdamicAdarIndex.test_multidigraph": {
  "lineno": 145,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.NetworkXNotImplemented"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestAdamicAdarIndex.test_multigraph": {
  "lineno": 139,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.NetworkXNotImplemented"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestAdamicAdarIndex.test_no_common_neighbor": {
  "lineno": 151,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestCNSoundarajanHopcroft": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_link_prediction.TestCNSoundarajanHopcroft.setUp": {
  "lineno": 214,
  "symbols_in_volume": [
   "functools.partial",
   "networkx.cn_soundarajan_hopcroft"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestCNSoundarajanHopcroft.test_K5": {
  "lineno": 219,
  "symbols_in_volume": [
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestCNSoundarajanHopcroft.test_P3": {
  "lineno": 228,
  "symbols_in_volume": [
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestCNSoundarajanHopcroft.test_S4": {
  "lineno": 235,
  "symbols_in_volume": [
   "networkx.star_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestCNSoundarajanHopcroft.test_all_nonexistent_edges": {
  "lineno": 326,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestCNSoundarajanHopcroft.test_custom_community_attribute_name": {
  "lineno": 317,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestCNSoundarajanHopcroft.test_different_community": {
  "lineno": 285,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestCNSoundarajanHopcroft.test_digraph": {
  "lineno": 244,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXNotImplemented"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestCNSoundarajanHopcroft.test_equal_nodes": {
  "lineno": 278,
  "symbols_in_volume": [
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestCNSoundarajanHopcroft.test_insufficient_community_information": {
  "lineno": 299,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXAlgorithmError"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestCNSoundarajanHopcroft.test_multidigraph": {
  "lineno": 262,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.NetworkXNotImplemented"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestCNSoundarajanHopcroft.test_multigraph": {
  "lineno": 253,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.NetworkXNotImplemented"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestCNSoundarajanHopcroft.test_no_common_neighbor": {
  "lineno": 271,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestCNSoundarajanHopcroft.test_no_community_information": {
  "lineno": 294,
  "symbols_in_volume": [
   "networkx.NetworkXAlgorithmError",
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestCNSoundarajanHopcroft.test_sufficient_community_information": {
  "lineno": 308,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestJaccardCoefficient": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_link_prediction.TestJaccardCoefficient.setUp": {
  "lineno": 70,
  "symbols_in_volume": [
   "functools.partial",
   "networkx.jaccard_coefficient"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestJaccardCoefficient.test_K5": {
  "lineno": 74,
  "symbols_in_volume": [
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestJaccardCoefficient.test_P4": {
  "lineno": 78,
  "symbols_in_volume": [
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestJaccardCoefficient.test_all_nonexistent_edges": {
  "lineno": 110,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestJaccardCoefficient.test_digraph": {
  "lineno": 82,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXNotImplemented"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestJaccardCoefficient.test_isolated_nodes": {
  "lineno": 105,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestJaccardCoefficient.test_multidigraph": {
  "lineno": 94,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.NetworkXNotImplemented"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestJaccardCoefficient.test_multigraph": {
  "lineno": 88,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.NetworkXNotImplemented"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestJaccardCoefficient.test_no_common_neighbor": {
  "lineno": 100,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestPreferentialAttachment": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_link_prediction.TestPreferentialAttachment.setUp": {
  "lineno": 168,
  "symbols_in_volume": [
   "functools.partial",
   "networkx.preferential_attachment"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestPreferentialAttachment.test_K5": {
  "lineno": 172,
  "symbols_in_volume": [
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestPreferentialAttachment.test_P3": {
  "lineno": 176,
  "symbols_in_volume": [
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestPreferentialAttachment.test_S4": {
  "lineno": 180,
  "symbols_in_volume": [
   "networkx.star_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestPreferentialAttachment.test_all_nonexistent_edges": {
  "lineno": 207,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestPreferentialAttachment.test_digraph": {
  "lineno": 184,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXNotImplemented"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestPreferentialAttachment.test_multidigraph": {
  "lineno": 196,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.NetworkXNotImplemented"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestPreferentialAttachment.test_multigraph": {
  "lineno": 190,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.NetworkXNotImplemented"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestPreferentialAttachment.test_zero_degrees": {
  "lineno": 202,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestRAIndexSoundarajanHopcroft": {
  "lineno": 336,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_link_prediction.TestRAIndexSoundarajanHopcroft.setUp": {
  "lineno": 337,
  "symbols_in_volume": [
   "functools.partial",
   "networkx.ra_index_soundarajan_hopcroft"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestRAIndexSoundarajanHopcroft.test_K5": {
  "lineno": 342,
  "symbols_in_volume": [
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestRAIndexSoundarajanHopcroft.test_P3": {
  "lineno": 351,
  "symbols_in_volume": [
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestRAIndexSoundarajanHopcroft.test_S4": {
  "lineno": 358,
  "symbols_in_volume": [
   "networkx.star_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestRAIndexSoundarajanHopcroft.test_all_nonexistent_edges": {
  "lineno": 449,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestRAIndexSoundarajanHopcroft.test_custom_community_attribute_name": {
  "lineno": 440,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestRAIndexSoundarajanHopcroft.test_different_community": {
  "lineno": 408,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestRAIndexSoundarajanHopcroft.test_digraph": {
  "lineno": 367,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXNotImplemented"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestRAIndexSoundarajanHopcroft.test_equal_nodes": {
  "lineno": 401,
  "symbols_in_volume": [
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestRAIndexSoundarajanHopcroft.test_insufficient_community_information": {
  "lineno": 422,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXAlgorithmError"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestRAIndexSoundarajanHopcroft.test_multidigraph": {
  "lineno": 385,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.NetworkXNotImplemented"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestRAIndexSoundarajanHopcroft.test_multigraph": {
  "lineno": 376,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.NetworkXNotImplemented"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestRAIndexSoundarajanHopcroft.test_no_common_neighbor": {
  "lineno": 394,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestRAIndexSoundarajanHopcroft.test_no_community_information": {
  "lineno": 417,
  "symbols_in_volume": [
   "networkx.NetworkXAlgorithmError",
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestRAIndexSoundarajanHopcroft.test_sufficient_community_information": {
  "lineno": 431,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestResourceAllocationIndex": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_link_prediction.TestResourceAllocationIndex.setUp": {
  "lineno": 20,
  "symbols_in_volume": [
   "functools.partial",
   "networkx.resource_allocation_index"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestResourceAllocationIndex.test_K5": {
  "lineno": 24,
  "symbols_in_volume": [
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestResourceAllocationIndex.test_P3": {
  "lineno": 28,
  "symbols_in_volume": [
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestResourceAllocationIndex.test_S4": {
  "lineno": 32,
  "symbols_in_volume": [
   "networkx.star_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestResourceAllocationIndex.test_all_nonexistent_edges": {
  "lineno": 63,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestResourceAllocationIndex.test_digraph": {
  "lineno": 36,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXNotImplemented"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestResourceAllocationIndex.test_equal_nodes": {
  "lineno": 59,
  "symbols_in_volume": [
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestResourceAllocationIndex.test_multidigraph": {
  "lineno": 48,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.NetworkXNotImplemented"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestResourceAllocationIndex.test_multigraph": {
  "lineno": 42,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.NetworkXNotImplemented"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestResourceAllocationIndex.test_no_common_neighbor": {
  "lineno": 54,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestWithinInterCluster": {
  "lineno": 459,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_link_prediction.TestWithinInterCluster.setUp": {
  "lineno": 460,
  "symbols_in_volume": [
   "functools.partial",
   "networkx.within_inter_cluster"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestWithinInterCluster.test_K5": {
  "lineno": 466,
  "symbols_in_volume": [
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestWithinInterCluster.test_P3": {
  "lineno": 475,
  "symbols_in_volume": [
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestWithinInterCluster.test_S4": {
  "lineno": 482,
  "symbols_in_volume": [
   "networkx.star_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestWithinInterCluster.test_all_nonexistent_edges": {
  "lineno": 596,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestWithinInterCluster.test_custom_community_attribute_name": {
  "lineno": 588,
  "symbols_in_volume": [
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestWithinInterCluster.test_different_community": {
  "lineno": 532,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestWithinInterCluster.test_digraph": {
  "lineno": 491,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXNotImplemented"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestWithinInterCluster.test_equal_nodes": {
  "lineno": 525,
  "symbols_in_volume": [
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestWithinInterCluster.test_insufficient_community_information": {
  "lineno": 554,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXAlgorithmError"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestWithinInterCluster.test_multidigraph": {
  "lineno": 509,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.NetworkXNotImplemented"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestWithinInterCluster.test_multigraph": {
  "lineno": 500,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.NetworkXNotImplemented"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestWithinInterCluster.test_negative_delta": {
  "lineno": 580,
  "symbols_in_volume": [
   "networkx.NetworkXAlgorithmError",
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestWithinInterCluster.test_no_common_neighbor": {
  "lineno": 518,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestWithinInterCluster.test_no_community_information": {
  "lineno": 549,
  "symbols_in_volume": [
   "networkx.NetworkXAlgorithmError",
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestWithinInterCluster.test_no_inter_cluster_common_neighbor": {
  "lineno": 541,
  "symbols_in_volume": [
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestWithinInterCluster.test_sufficient_community_information": {
  "lineno": 563,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction.TestWithinInterCluster.test_zero_delta": {
  "lineno": 572,
  "symbols_in_volume": [
   "networkx.NetworkXAlgorithmError",
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_link_prediction._test_func": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tests.test_matching": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.tests.test_matching.TestMatching": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_matching.TestMatching.setUp": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tests.test_matching.TestMatching.test_floating_point_weights": {
  "lineno": 49,
  "symbols_in_volume": [
   "math.exp",
   "math.pi",
   "math.sqrt",
   "networkx.Graph",
   "networkx.max_weight_matching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_matching.TestMatching.test_nasty_blossom1": {
  "lineno": 149,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.max_weight_matching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_matching.TestMatching.test_nasty_blossom2": {
  "lineno": 162,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.max_weight_matching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_matching.TestMatching.test_nasty_blossom_augmenting": {
  "lineno": 186,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.max_weight_matching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_matching.TestMatching.test_nasty_blossom_expand_recursively": {
  "lineno": 200,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.max_weight_matching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_matching.TestMatching.test_nasty_blossom_least_slack": {
  "lineno": 173,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.max_weight_matching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_matching.TestMatching.test_negative_weights": {
  "lineno": 59,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.max_weight_matching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_matching.TestMatching.test_nested_s_blossom": {
  "lineno": 100,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.max_weight_matching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_matching.TestMatching.test_nested_s_blossom_expand": {
  "lineno": 119,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.max_weight_matching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_matching.TestMatching.test_nested_s_blossom_relabel": {
  "lineno": 110,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.max_weight_matching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_matching.TestMatching.test_nested_s_blossom_relabel_expand": {
  "lineno": 139,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.max_weight_matching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_matching.TestMatching.test_s_blossom": {
  "lineno": 72,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.max_weight_matching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_matching.TestMatching.test_s_blossom_relabel_expand": {
  "lineno": 130,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.max_weight_matching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_matching.TestMatching.test_s_t_blossom": {
  "lineno": 84,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.max_weight_matching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_matching.TestMatching.test_trivial1": {
  "lineno": 11,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.max_weight_matching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_matching.TestMatching.test_trivial2": {
  "lineno": 16,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.max_weight_matching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_matching.TestMatching.test_trivial3": {
  "lineno": 22,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.max_weight_matching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_matching.TestMatching.test_trivial4": {
  "lineno": 29,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.max_weight_matching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_matching.TestMatching.test_trivial5": {
  "lineno": 37,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.max_weight_matching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_matching.test_maximal_matching": {
  "lineno": 211,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.maximal_matching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_matching.test_maximal_matching_ordering": {
  "lineno": 248,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.maximal_matching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_minors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.tests.test_minors.TestContraction": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_minors.TestContraction.test_directed_node_contraction": {
  "lineno": 100,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.complete_graph",
   "networkx.contracted_nodes",
   "networkx.cycle_graph",
   "networkx.is_isomorphic",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_minors.TestContraction.test_node_attributes": {
  "lineno": 109,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.contracted_nodes",
   "networkx.cycle_graph",
   "networkx.is_isomorphic",
   "networkx.relabel_nodes",
   "nose.tools.assert_equal",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_minors.TestContraction.test_nonexistent_edge": {
  "lineno": 140,
  "symbols_in_volume": [
   "networkx.contracted_edge",
   "networkx.cycle_graph",
   "nose.tools.raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_minors.TestContraction.test_undirected_edge_contraction": {
  "lineno": 132,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.contracted_edge",
   "networkx.cycle_graph",
   "networkx.is_isomorphic",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_minors.TestContraction.test_undirected_node_contraction": {
  "lineno": 92,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.contracted_nodes",
   "networkx.cycle_graph",
   "networkx.is_isomorphic",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_minors.TestContraction.test_without_self_loops": {
  "lineno": 125,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.contracted_nodes",
   "networkx.cycle_graph",
   "networkx.is_isomorphic",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_minors.TestQuotient": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_minors.TestQuotient.test_condensation_as_quotient": {
  "lineno": 68,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.condensation",
   "networkx.is_isomorphic",
   "networkx.quotient_graph",
   "networkx.strongly_connected_components",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_minors.TestQuotient.test_quotient_graph_complete_bipartite": {
  "lineno": 37,
  "symbols_in_volume": [
   "networkx.complete_bipartite_graph",
   "networkx.complete_graph",
   "networkx.is_isomorphic",
   "networkx.quotient_graph",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_minors.TestQuotient.test_quotient_graph_complete_multipartite": {
  "lineno": 20,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.complete_multipartite_graph",
   "networkx.is_isomorphic",
   "networkx.quotient_graph",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_minors.TestQuotient.test_quotient_graph_edge_relation": {
  "lineno": 53,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.is_isomorphic",
   "networkx.path_graph",
   "networkx.quotient_graph",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_mis": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.tests.test_mis.TestMaximalIndependantSet": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_mis.TestMaximalIndependantSet.setup": {
  "lineno": 23,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_mis.TestMaximalIndependantSet.test_K5": {
  "lineno": 46,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.maximal_independent_set"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_mis.TestMaximalIndependantSet.test_K55": {
  "lineno": 52,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.maximal_independent_set"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_mis.TestMaximalIndependantSet.test_bipartite": {
  "lineno": 73,
  "symbols_in_volume": [
   "networkx.complete_bipartite_graph",
   "networkx.maximal_independent_set"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_mis.TestMaximalIndependantSet.test_exception": {
  "lineno": 58,
  "symbols_in_volume": [
   "networkx.NetworkXUnfeasible",
   "networkx.maximal_independent_set"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_mis.TestMaximalIndependantSet.test_florentine_family": {
  "lineno": 66,
  "symbols_in_volume": [
   "networkx.maximal_independent_set"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_mis.TestMaximalIndependantSet.test_random_graphs": {
  "lineno": 79,
  "symbols_in_volume": [
   "networkx.maximal_independent_set",
   "networkx.random_graphs.erdos_renyi_graph",
   "random.random"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_mst": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.tests.test_mst.TestMST": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_mst.TestMST.setUp": {
  "lineno": 7,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_mst.TestMST.test_mst": {
  "lineno": 34,
  "symbols_in_volume": [
   "networkx.minimum_spanning_tree"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_mst.TestMST.test_mst_attributes": {
  "lineno": 57,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.minimum_spanning_tree"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_mst.TestMST.test_mst_disconnected": {
  "lineno": 42,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.minimum_spanning_tree"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_mst.TestMST.test_mst_edges": {
  "lineno": 38,
  "symbols_in_volume": [
   "networkx.minimum_spanning_edges"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_mst.TestMST.test_mst_edges_specify_weight": {
  "lineno": 69,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.minimum_spanning_tree"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_mst.TestMST.test_mst_isolate": {
  "lineno": 50,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.minimum_spanning_tree"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_mst.TestMST.test_prim_mst": {
  "lineno": 83,
  "symbols_in_volume": [
   "networkx.prim_mst"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_mst.TestMST.test_prim_mst_attributes": {
  "lineno": 108,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.prim_mst"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_mst.TestMST.test_prim_mst_disconnected": {
  "lineno": 93,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.prim_mst"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_mst.TestMST.test_prim_mst_edges": {
  "lineno": 87,
  "symbols_in_volume": [
   "networkx.prim_mst_edges"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_mst.TestMST.test_prim_mst_edges_specify_weight": {
  "lineno": 120,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.prim_mst"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_mst.TestMST.test_prim_mst_isolate": {
  "lineno": 101,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.prim_mst"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_richclub": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.tests.test_richclub.test_richclub": {
  "lineno": 5,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.richclub.rich_club_coefficient"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_richclub.test_richclub2": {
  "lineno": 20,
  "symbols_in_volume": [
   "networkx.balanced_tree",
   "networkx.richclub.rich_club_coefficient"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_richclub.test_richclub_normalized": {
  "lineno": 14,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.richclub.rich_club_coefficient"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_simple_paths": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.tests.test_simple_paths.hamiltonian_path": {
  "lineno": 46,
  "symbols_in_volume": [
   "networkx.all_simple_paths"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_simple_paths.test_Greg_Bernstein": {
  "lineno": 95,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.shortest_simple_paths"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_simple_paths.test_all_simple_paths": {
  "lineno": 11,
  "symbols_in_volume": [
   "networkx.all_simple_paths",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_simple_paths.test_all_simple_paths_cutoff": {
  "lineno": 16,
  "symbols_in_volume": [
   "networkx.all_simple_paths",
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_simple_paths.test_all_simple_paths_directed": {
  "lineno": 34,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.all_simple_paths"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_simple_paths.test_all_simple_paths_empty": {
  "lineno": 41,
  "symbols_in_volume": [
   "networkx.all_simple_paths",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_simple_paths.test_all_simple_paths_multigraph": {
  "lineno": 23,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.all_simple_paths"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_simple_paths.test_all_simple_paths_multigraph_with_cutoff": {
  "lineno": 28,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.all_simple_paths"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_simple_paths.test_bidirectional_dijksta_restricted": {
  "lineno": 215,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.NetworkXNoPath",
   "networkx.algorithms.simple_paths._bidirectional_dijkstra"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_simple_paths.test_bidirectional_dijkstra_no_path": {
  "lineno": 255,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXNoPath",
   "networkx.algorithms.simple_paths._bidirectional_dijkstra"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_simple_paths.test_bidirectional_shortest_path_restricted": {
  "lineno": 167,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXNoPath",
   "networkx.algorithms.simple_paths._bidirectional_shortest_path",
   "networkx.convert_node_labels_to_integers",
   "networkx.cycle_graph",
   "networkx.grid_2d_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_simple_paths.test_cutoff_zero": {
  "lineno": 62,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.all_simple_paths",
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_simple_paths.test_directed_weighted_shortest_simple_path": {
  "lineno": 120,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.set_edge_attributes",
   "networkx.shortest_simple_paths",
   "random.randint"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_simple_paths.test_directed_weighted_shortest_simple_path.cost_func": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tests.test_simple_paths.test_hamiltonian_path": {
  "lineno": 55,
  "symbols_in_volume": [
   "itertools.permutations",
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_simple_paths.test_shortest_simple_paths": {
  "lineno": 82,
  "symbols_in_volume": [
   "networkx.all_simple_paths",
   "networkx.convert_node_labels_to_integers",
   "networkx.grid_2d_graph",
   "networkx.shortest_simple_paths"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_simple_paths.test_shortest_simple_paths_directed": {
  "lineno": 90,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.cycle_graph",
   "networkx.shortest_simple_paths"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_simple_paths.test_source_missing": {
  "lineno": 69,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.MultiGraph",
   "networkx.NetworkXError",
   "networkx.all_simple_paths"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_simple_paths.test_ssp_multigraph": {
  "lineno": 154,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.NetworkXNotImplemented",
   "networkx.shortest_simple_paths"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_simple_paths.test_ssp_source_missing": {
  "lineno": 160,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXNoPath",
   "networkx.shortest_simple_paths"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_simple_paths.test_ssp_target_missing": {
  "lineno": 148,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.shortest_simple_paths"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_simple_paths.test_target_missing": {
  "lineno": 75,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.MultiGraph",
   "networkx.NetworkXError",
   "networkx.all_simple_paths"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_simple_paths.test_weight_name": {
  "lineno": 133,
  "symbols_in_volume": [
   "networkx.cycle_graph",
   "networkx.set_edge_attributes",
   "networkx.shortest_simple_paths"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_simple_paths.test_weighted_shortest_simple_path": {
  "lineno": 108,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.set_edge_attributes",
   "networkx.shortest_simple_paths",
   "random.randint"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_simple_paths.test_weighted_shortest_simple_path.cost_func": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tests.test_simple_paths.validate_length_path": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tests.test_simple_paths.validate_path": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tests.test_smetric": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.tests.test_smetric.test_normalized": {
  "lineno": 17,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.s_metric",
   "nose.tools.raises"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_smetric.test_smetric": {
  "lineno": 6,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.s_metric",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_swap": {
  "lineno": null,
  "symbols_in_volume": [
   "random.seed"
  ],
  "type": "module"
 },
 "networkx.algorithms.tests.test_swap.test_connected_double_edge_swap": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tests.test_swap.test_connected_double_edge_swap_not_connected": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tests.test_swap.test_connected_double_edge_swap_small": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tests.test_swap.test_degree_seq_c4": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tests.test_swap.test_double_edge_swap": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tests.test_swap.test_double_edge_swap_small": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tests.test_swap.test_double_edge_swap_tries": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tests.test_triads": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.tests.test_triads.test_triadic_census": {
  "lineno": 16,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.triadic_census",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_vitality": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.tests.test_vitality.TestVitality": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tests.test_vitality.TestVitality.test_closeness_vitality_unweighted": {
  "lineno": 7,
  "symbols_in_volume": [
   "networkx.closeness_vitality",
   "networkx.cycle_graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_vitality.TestVitality.test_closeness_vitality_unweighted_digraph": {
  "lineno": 19,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.closeness_vitality"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_vitality.TestVitality.test_closeness_vitality_weighted": {
  "lineno": 13,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.closeness_vitality"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_vitality.TestVitality.test_closeness_vitality_weighted_digraph": {
  "lineno": 25,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.closeness_vitality"
  ],
  "type": "function"
 },
 "networkx.algorithms.tests.test_vitality.TestVitality.test_closeness_vitality_weighted_multidigraph": {
  "lineno": 31,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.closeness_vitality"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.traversal.breadth_first_search": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.traversal.breadth_first_search.bfs_edges": {
  "lineno": 13,
  "symbols_in_volume": [
   "collections.deque",
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.breadth_first_search.bfs_predecessors": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.traversal.breadth_first_search.bfs_successors": {
  "lineno": 128,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.breadth_first_search.bfs_tree": {
  "lineno": 61,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.depth_first_search": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.traversal.depth_first_search.dfs_edges": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.traversal.depth_first_search.dfs_labeled_edges": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.traversal.depth_first_search.dfs_postorder_nodes": {
  "lineno": 175,
  "symbols_in_volume": [
   "networkx.dfs_labeled_edges"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.depth_first_search.dfs_predecessors": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.traversal.depth_first_search.dfs_preorder_nodes": {
  "lineno": 214,
  "symbols_in_volume": [
   "networkx.dfs_labeled_edges"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.depth_first_search.dfs_successors": {
  "lineno": 138,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.depth_first_search.dfs_tree": {
  "lineno": 73,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.edgedfs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.traversal.edgedfs.edge_dfs": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.traversal.edgedfs.helper_funcs": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.traversal.edgedfs.helper_funcs.key": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.traversal.edgedfs.helper_funcs.out_edges": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.traversal.edgedfs.helper_funcs.traversed_tailhead": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.traversal.tests.test_bfs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.traversal.tests.test_bfs.TestBFS": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.traversal.tests.test_bfs.TestBFS.setUp": {
  "lineno": 8,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.tests.test_bfs.TestBFS.test_bfs_edges": {
  "lineno": 27,
  "symbols_in_volume": [
   "networkx.bfs_edges"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.tests.test_bfs.TestBFS.test_bfs_edges_reverse": {
  "lineno": 31,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.bfs_edges"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.tests.test_bfs.TestBFS.test_bfs_tree": {
  "lineno": 22,
  "symbols_in_volume": [
   "networkx.bfs_tree"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.tests.test_bfs.TestBFS.test_bfs_tree_isolates": {
  "lineno": 37,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.bfs_tree"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.tests.test_bfs.TestBFS.test_predecessor": {
  "lineno": 18,
  "symbols_in_volume": [
   "networkx.bfs_predecessors"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.tests.test_bfs.TestBFS.test_successor": {
  "lineno": 14,
  "symbols_in_volume": [
   "networkx.bfs_successors"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.tests.test_dfs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.traversal.tests.test_dfs.TestDFS": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.traversal.tests.test_dfs.TestDFS.setUp": {
  "lineno": 7,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.tests.test_dfs.TestDFS.test_dfs_edges": {
  "lineno": 43,
  "symbols_in_volume": [
   "networkx.dfs_edges"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.tests.test_dfs.TestDFS.test_dfs_labeled_disconnected_edges": {
  "lineno": 54,
  "symbols_in_volume": [
   "networkx.dfs_labeled_edges"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.tests.test_dfs.TestDFS.test_dfs_labeled_edges": {
  "lineno": 49,
  "symbols_in_volume": [
   "networkx.dfs_labeled_edges"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.tests.test_dfs.TestDFS.test_dfs_tree": {
  "lineno": 38,
  "symbols_in_volume": [
   "networkx.dfs_tree"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.tests.test_dfs.TestDFS.test_dfs_tree_isolates": {
  "lineno": 59,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.dfs_tree"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.tests.test_dfs.TestDFS.test_postorder_nodes": {
  "lineno": 23,
  "symbols_in_volume": [
   "networkx.dfs_postorder_nodes"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.tests.test_dfs.TestDFS.test_predecessor": {
  "lineno": 33,
  "symbols_in_volume": [
   "networkx.dfs_predecessors"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.tests.test_dfs.TestDFS.test_preorder_nodes": {
  "lineno": 18,
  "symbols_in_volume": [
   "networkx.dfs_preorder_nodes"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.tests.test_dfs.TestDFS.test_successor": {
  "lineno": 28,
  "symbols_in_volume": [
   "networkx.dfs_successors"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.tests.test_edgedfs": {
  "lineno": null,
  "symbols_in_volume": [
   "networkx.algorithms.edge_dfs",
   "networkx.algorithms.edgedfs.FORWARD",
   "networkx.algorithms.edgedfs.REVERSE"
  ],
  "type": "module"
 },
 "networkx.algorithms.traversal.tests.test_edgedfs.TestEdgeDFS": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.traversal.tests.test_edgedfs.TestEdgeDFS.setUp": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.traversal.tests.test_edgedfs.TestEdgeDFS.test_digraph": {
  "lineno": 34,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.tests.test_edgedfs.TestEdgeDFS.test_digraph2": {
  "lineno": 40,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.tests.test_edgedfs.TestEdgeDFS.test_digraph_ignore": {
  "lineno": 91,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.tests.test_edgedfs.TestEdgeDFS.test_digraph_ignore2": {
  "lineno": 98,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.tests.test_edgedfs.TestEdgeDFS.test_digraph_rev": {
  "lineno": 48,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.tests.test_edgedfs.TestEdgeDFS.test_digraph_rev2": {
  "lineno": 55,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.tests.test_edgedfs.TestEdgeDFS.test_empty": {
  "lineno": 23,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.tests.test_edgedfs.TestEdgeDFS.test_graph": {
  "lineno": 28,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.tests.test_edgedfs.TestEdgeDFS.test_multidigraph": {
  "lineno": 75,
  "symbols_in_volume": [
   "networkx.MultiDiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.tests.test_edgedfs.TestEdgeDFS.test_multidigraph_ignore": {
  "lineno": 106,
  "symbols_in_volume": [
   "networkx.MultiDiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.tests.test_edgedfs.TestEdgeDFS.test_multidigraph_rev": {
  "lineno": 81,
  "symbols_in_volume": [
   "networkx.MultiDiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.traversal.tests.test_edgedfs.TestEdgeDFS.test_multigraph": {
  "lineno": 63,
  "symbols_in_volume": [
   "networkx.MultiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.tree.branchings": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.tree.branchings.Edmonds": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.algorithms.tree.branchings.Edmonds.__init__": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tree.branchings.Edmonds._init": {
  "lineno": 326,
  "symbols_in_volume": [
   "networkx.NetworkXException",
   "networkx.utils.UnionFind"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.branchings.Edmonds.find_optimum": {
  "lineno": 380,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tree.branchings.Edmonds.find_optimum.desired_edge": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tree.branchings.Edmonds.find_optimum.is_root": {
  "lineno": 578,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey": {
  "lineno": 218,
  "symbols_in_volume": [
   "networkx.MultiDiGraph"
  ],
  "type": "class"
 },
 "networkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey.__init__": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey.add_edge": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey.add_edges_from": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey.remove_edge_with_key": {
  "lineno": 273,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey.remove_edges_from": {
  "lineno": 282,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey.remove_node": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey.remove_nodes_from": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tree.branchings._max_weight": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tree.branchings._min_weight": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tree.branchings.branching_weight": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tree.branchings.edge_subgraph": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tree.branchings.get_path": {
  "lineno": 286,
  "symbols_in_volume": [
   "networkx.shortest_path"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.branchings.get_path.first_key": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tree.branchings.greedy_branching": {
  "lineno": 142,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXException",
   "networkx.utils.UnionFind",
   "operator.itemgetter"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.branchings.maximum_branching": {
  "lineno": 662,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tree.branchings.maximum_spanning_arborescence": {
  "lineno": 672,
  "symbols_in_volume": [
   "networkx.exception.NetworkXException"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.branchings.minimum_branching": {
  "lineno": 667,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tree.branchings.minimum_spanning_arborescence": {
  "lineno": 680,
  "symbols_in_volume": [
   "networkx.exception.NetworkXException"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.branchings.random_string": {
  "lineno": 125,
  "symbols_in_volume": [
   "random.choice",
   "random.seed",
   "string.ascii_letters"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.recognition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.tree.recognition.is_arborescence": {
  "lineno": 87,
  "symbols_in_volume": [
   "networkx.utils.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.recognition.is_branching": {
  "lineno": 121,
  "symbols_in_volume": [
   "networkx.utils.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.recognition.is_forest": {
  "lineno": 155,
  "symbols_in_volume": [
   "networkx.connected_component_subgraphs",
   "networkx.exception.NetworkXPointlessConcept",
   "networkx.weakly_connected_component_subgraphs"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.recognition.is_tree": {
  "lineno": 200,
  "symbols_in_volume": [
   "networkx.exception.NetworkXPointlessConcept",
   "networkx.is_connected",
   "networkx.is_weakly_connected"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_branchings": {
  "lineno": null,
  "symbols_in_volume": [
   "nose.SkipTest",
   "numpy.array"
  ],
  "type": "module"
 },
 "networkx.algorithms.tree.tests.test_branchings.G1": {
  "lineno": 38,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.MultiDiGraph",
   "networkx.from_numpy_matrix"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_branchings.G2": {
  "lineno": 44,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.MultiDiGraph",
   "networkx.from_numpy_matrix",
   "numpy.nonzero"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_branchings.assert_equal_branchings": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_branchings.build_branching": {
  "lineno": 96,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_branchings.sorted_edges": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_branchings.test_edmonds1_maxarbor": {
  "lineno": 215,
  "symbols_in_volume": [
   "networkx.algorithms.tree.branchings.maximum_spanning_arborescence"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_branchings.test_edmonds1_maxbranch": {
  "lineno": 209,
  "symbols_in_volume": [
   "networkx.algorithms.tree.branchings.maximum_branching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_branchings.test_edmonds1_minbranch": {
  "lineno": 297,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.algorithms.tree.branchings.maximum_branching",
   "networkx.algorithms.tree.branchings.minimum_branching",
   "networkx.from_numpy_matrix"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_branchings.test_edmonds2_maxarbor": {
  "lineno": 227,
  "symbols_in_volume": [
   "networkx.algorithms.tree.branchings.maximum_spanning_arborescence"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_branchings.test_edmonds2_maxbranch": {
  "lineno": 221,
  "symbols_in_volume": [
   "networkx.algorithms.tree.branchings.maximum_branching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_branchings.test_edmonds2_minarbor": {
  "lineno": 233,
  "symbols_in_volume": [
   "networkx.algorithms.tree.branchings.minimum_spanning_arborescence"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_branchings.test_edmonds3_minbranch1": {
  "lineno": 245,
  "symbols_in_volume": [
   "networkx.algorithms.tree.branchings.minimum_branching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_branchings.test_edmonds3_minbranch2": {
  "lineno": 252,
  "symbols_in_volume": [
   "networkx.algorithms.tree.branchings.minimum_branching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_branchings.test_greedy_max1": {
  "lineno": 158,
  "symbols_in_volume": [
   "networkx.algorithms.tree.branchings.greedy_branching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_branchings.test_greedy_max2": {
  "lineno": 169,
  "symbols_in_volume": [
   "networkx.algorithms.tree.branchings.greedy_branching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_branchings.test_greedy_max3": {
  "lineno": 184,
  "symbols_in_volume": [
   "networkx.algorithms.tree.branchings.greedy_branching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_branchings.test_greedy_min": {
  "lineno": 198,
  "symbols_in_volume": [
   "networkx.algorithms.tree.branchings.greedy_branching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_branchings.test_greedy_suboptimal_branching1a": {
  "lineno": 148,
  "symbols_in_volume": [
   "networkx.algorithms.tree.branchings.branching_weight",
   "networkx.algorithms.tree.recognition.is_arborescence"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_branchings.test_greedy_suboptimal_branching1b": {
  "lineno": 153,
  "symbols_in_volume": [
   "networkx.algorithms.tree.branchings.branching_weight",
   "networkx.algorithms.tree.recognition.is_arborescence"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_branchings.test_mixed_nodetypes": {
  "lineno": 288,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.algorithms.tree.branchings.minimum_spanning_arborescence"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_branchings.test_mst": {
  "lineno": 262,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.algorithms.tree.branchings.minimum_spanning_arborescence"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_branchings.test_optimal_arborescence2": {
  "lineno": 143,
  "symbols_in_volume": [
   "networkx.algorithms.tree.branchings.branching_weight",
   "networkx.algorithms.tree.recognition.is_arborescence"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_branchings.test_optimal_branching1": {
  "lineno": 128,
  "symbols_in_volume": [
   "networkx.algorithms.tree.branchings.branching_weight",
   "networkx.algorithms.tree.recognition.is_arborescence"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_branchings.test_optimal_branching2a": {
  "lineno": 133,
  "symbols_in_volume": [
   "networkx.algorithms.tree.branchings.branching_weight",
   "networkx.algorithms.tree.recognition.is_arborescence"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_branchings.test_optimal_branching2b": {
  "lineno": 138,
  "symbols_in_volume": [
   "networkx.algorithms.tree.branchings.branching_weight",
   "networkx.algorithms.tree.recognition.is_arborescence"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_recognition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.tree.tests.test_recognition.TestDirectedTreeRecognition": {
  "lineno": 79,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.MultiDiGraph"
  ],
  "type": "class"
 },
 "networkx.algorithms.tree.tests.test_recognition.TestTreeRecognition": {
  "lineno": 6,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.MultiGraph"
  ],
  "type": "class"
 },
 "networkx.algorithms.tree.tests.test_recognition.TestTreeRecognition.setUp": {
  "lineno": 11,
  "symbols_in_volume": [
   "networkx.compose"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_recognition.TestTreeRecognition.test_is_forest": {
  "lineno": 67,
  "symbols_in_volume": [
   "networkx.is_forest"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_recognition.TestTreeRecognition.test_is_not_forest": {
  "lineno": 74,
  "symbols_in_volume": [
   "networkx.is_forest"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_recognition.TestTreeRecognition.test_is_not_tree": {
  "lineno": 62,
  "symbols_in_volume": [
   "networkx.is_tree"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_recognition.TestTreeRecognition.test_is_tree": {
  "lineno": 57,
  "symbols_in_volume": [
   "networkx.is_tree"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_recognition.TestTreeRecognition.test_null_forest": {
  "lineno": 52,
  "symbols_in_volume": [
   "networkx.NetworkXPointlessConcept",
   "networkx.is_forest"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_recognition.TestTreeRecognition.test_null_tree": {
  "lineno": 47,
  "symbols_in_volume": [
   "networkx.NetworkXPointlessConcept",
   "networkx.is_tree"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_recognition.test_dag_nontree": {
  "lineno": 93,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.is_directed_acyclic_graph",
   "networkx.is_tree"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_recognition.test_disconnected_graph": {
  "lineno": 83,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.is_tree"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_recognition.test_emptybranch": {
  "lineno": 105,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.is_arborescence",
   "networkx.is_branching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_recognition.test_multicycle": {
  "lineno": 99,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.is_directed_acyclic_graph",
   "networkx.is_tree"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_recognition.test_notarborescence1": {
  "lineno": 133,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.is_arborescence",
   "networkx.is_branching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_recognition.test_notarborescence2": {
  "lineno": 141,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.is_arborescence",
   "networkx.is_branching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_recognition.test_notbranching1": {
  "lineno": 117,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.is_arborescence",
   "networkx.is_branching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_recognition.test_notbranching2": {
  "lineno": 125,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.is_arborescence",
   "networkx.is_branching"
  ],
  "type": "function"
 },
 "networkx.algorithms.tree.tests.test_recognition.test_path": {
  "lineno": 111,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.is_arborescence",
   "networkx.is_branching"
  ],
  "type": "function"
 },
 "networkx.algorithms.triads": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.triads._tricode": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.triads.triad_graphs": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.triads.triad_graphs.abc_graph": {
  "lineno": 41,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.algorithms.triads.triadic_census": {
  "lineno": 85,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.algorithms.vitality": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.algorithms.vitality.closeness_vitality": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.algorithms.vitality.weiner_index": {
  "lineno": 15,
  "symbols_in_volume": [
   "networkx.single_source_dijkstra_path_length",
   "networkx.single_source_shortest_path_length"
  ],
  "type": "function"
 },
 "networkx.classes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.classes.digraph": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.classes.digraph.DiGraph": {
  "lineno": 17,
  "symbols_in_volume": [
   "networkx.classes.graph.Graph",
   "networkx.classes.graph.Graph.edges"
  ],
  "type": "class"
 },
 "networkx.classes.digraph.DiGraph.__init__": {
  "lineno": 243,
  "symbols_in_volume": [
   "networkx.convert.to_networkx_graph"
  ],
  "type": "function"
 },
 "networkx.classes.digraph.DiGraph.add_edge": {
  "lineno": 510,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.digraph.DiGraph.add_edges_from": {
  "lineno": 582,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.digraph.DiGraph.add_node": {
  "lineno": 298,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.digraph.DiGraph.add_nodes_from": {
  "lineno": 357,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.digraph.DiGraph.clear": {
  "lineno": 1121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.digraph.DiGraph.degree_iter": {
  "lineno": 890,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.digraph.DiGraph.edges_iter": {
  "lineno": 776,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.digraph.DiGraph.has_predecessor": {
  "lineno": 736,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.digraph.DiGraph.has_successor": {
  "lineno": 729,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.digraph.DiGraph.in_degree": {
  "lineno": 1039,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.digraph.DiGraph.in_degree_iter": {
  "lineno": 941,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.digraph.DiGraph.in_edges": {
  "lineno": 881,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.digraph.DiGraph.in_edges_iter": {
  "lineno": 848,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.digraph.DiGraph.is_directed": {
  "lineno": 1148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.digraph.DiGraph.is_multigraph": {
  "lineno": 1143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.digraph.DiGraph.out_degree": {
  "lineno": 1081,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.digraph.DiGraph.out_degree_iter": {
  "lineno": 990,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.digraph.DiGraph.predecessors": {
  "lineno": 767,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.digraph.DiGraph.predecessors_iter": {
  "lineno": 753,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.digraph.DiGraph.remove_edge": {
  "lineno": 661,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.digraph.DiGraph.remove_edges_from": {
  "lineno": 695,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.digraph.DiGraph.remove_node": {
  "lineno": 426,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.digraph.DiGraph.remove_nodes_from": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.digraph.DiGraph.reverse": {
  "lineno": 1248,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "networkx.classes.digraph.DiGraph.subgraph": {
  "lineno": 1275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.digraph.DiGraph.successors": {
  "lineno": 760,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.digraph.DiGraph.successors_iter": {
  "lineno": 743,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.digraph.DiGraph.to_directed": {
  "lineno": 1152,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "networkx.classes.digraph.DiGraph.to_undirected": {
  "lineno": 1190,
  "symbols_in_volume": [
   "copy.deepcopy",
   "networkx.classes.graph.Graph"
  ],
  "type": "function"
 },
 "networkx.classes.function": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.classes.function.all_neighbors": {
  "lineno": 437,
  "symbols_in_volume": [
   "itertools.chain.from_iterable"
  ],
  "type": "function"
 },
 "networkx.classes.function.common_neighbors": {
  "lineno": 509,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.utils.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.classes.function.create_empty_copy": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.function.degree": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.function.degree_histogram": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.function.density": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.function.edges": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.function.edges_iter": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.function.freeze": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.function.frozen": {
  "lineno": 148,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.function.get_edge_attributes": {
  "lineno": 405,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.function.get_node_attributes": {
  "lineno": 336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.function.info": {
  "lineno": 264,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.function.is_directed": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.function.is_empty": {
  "lineno": 653,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.function.is_frozen": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.function.is_negatively_weighted": {
  "lineno": 600,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.function.is_weighted": {
  "lineno": 547,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.function.neighbors": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.function.nodes": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.function.nodes_iter": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.function.non_edges": {
  "lineno": 484,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.function.non_neighbors": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.function.number_of_edges": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.function.number_of_nodes": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.function.set_edge_attributes": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.function.set_node_attributes": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.function.subgraph": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.classes.graph.Graph": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.classes.graph.Graph.__contains__": {
  "lineno": 345,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.__getitem__": {
  "lineno": 379,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.__init__": {
  "lineno": 258,
  "symbols_in_volume": [
   "networkx.convert.to_networkx_graph"
  ],
  "type": "function"
 },
 "networkx.classes.graph.Graph.__iter__": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.__len__": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.__str__": {
  "lineno": 314,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.add_cycle": {
  "lineno": 1832,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.add_edge": {
  "lineno": 733,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.graph.Graph.add_edges_from": {
  "lineno": 803,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.graph.Graph.add_node": {
  "lineno": 409,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.graph.Graph.add_nodes_from": {
  "lineno": 466,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.add_path": {
  "lineno": 1806,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.add_star": {
  "lineno": 1777,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.add_weighted_edges_from": {
  "lineno": 878,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.adjacency_iter": {
  "lineno": 1289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.adjacency_list": {
  "lineno": 1264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.clear": {
  "lineno": 1403,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.copy": {
  "lineno": 1424,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "networkx.classes.graph.Graph.degree": {
  "lineno": 1315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.degree_iter": {
  "lineno": 1354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.edges": {
  "lineno": 1086,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.edges_iter": {
  "lineno": 1139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.get_edge_data": {
  "lineno": 1215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.has_edge": {
  "lineno": 980,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.has_node": {
  "lineno": 708,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.is_directed": {
  "lineno": 1454,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.is_multigraph": {
  "lineno": 1450,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.name": {
  "lineno": 310,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.nbunch_iter": {
  "lineno": 1858,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.nbunch_iter.bunch_iter": {
  "lineno": 1904,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.graph.Graph.neighbors": {
  "lineno": 1022,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.graph.Graph.neighbors_iter": {
  "lineno": 1063,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.graph.Graph.nodes": {
  "lineno": 645,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.nodes_iter": {
  "lineno": 610,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.nodes_with_selfloops": {
  "lineno": 1608,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.number_of_edges": {
  "lineno": 1740,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.number_of_nodes": {
  "lineno": 672,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.number_of_selfloops": {
  "lineno": 1677,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.order": {
  "lineno": 693,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.remove_edge": {
  "lineno": 911,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.graph.Graph.remove_edges_from": {
  "lineno": 945,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.remove_node": {
  "lineno": 533,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.graph.Graph.remove_nodes_from": {
  "lineno": 574,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.selfloop_edges": {
  "lineno": 1633,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.size": {
  "lineno": 1701,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.subgraph": {
  "lineno": 1548,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.graph.Graph.to_directed": {
  "lineno": 1458,
  "symbols_in_volume": [
   "copy.deepcopy",
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.classes.graph.Graph.to_undirected": {
  "lineno": 1511,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "networkx.classes.multidigraph": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.classes.multidigraph.MultiDiGraph": {
  "lineno": 19,
  "symbols_in_volume": [
   "networkx.classes.digraph.DiGraph",
   "networkx.classes.multigraph.MultiGraph"
  ],
  "type": "class"
 },
 "networkx.classes.multidigraph.MultiDiGraph.__init__": {
  "lineno": 251,
  "symbols_in_volume": [
   "networkx.classes.digraph.DiGraph.__init__"
  ],
  "type": "function"
 },
 "networkx.classes.multidigraph.MultiDiGraph.add_edge": {
  "lineno": 255,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.multidigraph.MultiDiGraph.degree_iter": {
  "lineno": 591,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.multidigraph.MultiDiGraph.edges_iter": {
  "lineno": 410,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.multidigraph.MultiDiGraph.in_degree_iter": {
  "lineno": 649,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.multidigraph.MultiDiGraph.in_edges": {
  "lineno": 567,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.multidigraph.MultiDiGraph.in_edges_iter": {
  "lineno": 524,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.multidigraph.MultiDiGraph.is_directed": {
  "lineno": 754,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.multidigraph.MultiDiGraph.is_multigraph": {
  "lineno": 750,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.multidigraph.MultiDiGraph.out_degree_iter": {
  "lineno": 700,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.multidigraph.MultiDiGraph.out_edges": {
  "lineno": 492,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.multidigraph.MultiDiGraph.remove_edge": {
  "lineno": 348,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.multidigraph.MultiDiGraph.reverse": {
  "lineno": 923,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "networkx.classes.multidigraph.MultiDiGraph.subgraph": {
  "lineno": 856,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.multidigraph.MultiDiGraph.to_directed": {
  "lineno": 758,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "networkx.classes.multidigraph.MultiDiGraph.to_undirected": {
  "lineno": 802,
  "symbols_in_volume": [
   "copy.deepcopy",
   "networkx.classes.multigraph.MultiGraph"
  ],
  "type": "function"
 },
 "networkx.classes.multigraph": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.classes.multigraph.MultiGraph": {
  "lineno": 17,
  "symbols_in_volume": [
   "networkx.classes.graph.Graph"
  ],
  "type": "class"
 },
 "networkx.classes.multigraph.MultiGraph.__init__": {
  "lineno": 252,
  "symbols_in_volume": [
   "networkx.classes.graph.Graph.__init__"
  ],
  "type": "function"
 },
 "networkx.classes.multigraph.MultiGraph.add_edge": {
  "lineno": 256,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.multigraph.MultiGraph.add_edges_from": {
  "lineno": 347,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.multigraph.MultiGraph.degree_iter": {
  "lineno": 784,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.multigraph.MultiGraph.edges": {
  "lineno": 585,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.multigraph.MultiGraph.edges_iter": {
  "lineno": 641,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.multigraph.MultiGraph.get_edge_data": {
  "lineno": 728,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.multigraph.MultiGraph.has_edge": {
  "lineno": 531,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.multigraph.MultiGraph.is_directed": {
  "lineno": 843,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.multigraph.MultiGraph.is_multigraph": {
  "lineno": 839,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.multigraph.MultiGraph.number_of_edges": {
  "lineno": 968,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.multigraph.MultiGraph.remove_edge": {
  "lineno": 422,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.multigraph.MultiGraph.remove_edges_from": {
  "lineno": 486,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.multigraph.MultiGraph.selfloop_edges": {
  "lineno": 900,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.multigraph.MultiGraph.subgraph": {
  "lineno": 1006,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.multigraph.MultiGraph.to_directed": {
  "lineno": 847,
  "symbols_in_volume": [
   "copy.deepcopy",
   "networkx.classes.multidigraph.MultiDiGraph"
  ],
  "type": "function"
 },
 "networkx.classes.ordered": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.classes.ordered.OrderedDiGraph": {
  "lineno": 28,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "class"
 },
 "networkx.classes.ordered.OrderedGraph": {
  "lineno": 22,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "class"
 },
 "networkx.classes.ordered.OrderedMultiDiGraph": {
  "lineno": 41,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "class"
 },
 "networkx.classes.ordered.OrderedMultiGraph": {
  "lineno": 34,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "class"
 },
 "networkx.classes.tests.historical_tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.setUp": {
  "lineno": 11,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.complete_graph",
   "networkx.convert_node_labels_to_integers",
   "networkx.null_graph",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_add_edge": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_add_edges_from": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_add_edges_from2": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_add_edges_from3": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_add_nodes_from": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_add_remove": {
  "lineno": 68,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_add_remove_node": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_complete_subgraph": {
  "lineno": 444,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.is_isomorphic"
  ],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_contains": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_copy": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_degree": {
  "lineno": 290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_degree2": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_degree_graph": {
  "lineno": 310,
  "symbols_in_volume": [
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_edges_iter_nbunch": {
  "lineno": 258,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_edges_nbunch": {
  "lineno": 228,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_empty_subgraph": {
  "lineno": 434,
  "symbols_in_volume": [
   "networkx.empty_graph",
   "networkx.is_isomorphic",
   "networkx.null_graph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_iterators": {
  "lineno": 405,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.number_of_edges",
   "networkx.number_of_nodes"
  ],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_name": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_nbunch_dict": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_nbunch_graph": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_nbunch_is_list": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_nbunch_is_set": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_nbunch_iterator": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_neighbors": {
  "lineno": 394,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_node_tuple_error": {
  "lineno": 472,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_nonhashable_node": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_null": {
  "lineno": 323,
  "symbols_in_volume": [
   "networkx.null_graph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_null_subgraph": {
  "lineno": 427,
  "symbols_in_volume": [
   "networkx.is_isomorphic",
   "networkx.null_graph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_order_size": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_remove_edge": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_self_loop": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_subgraph": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_subgraph_nbunch": {
  "lineno": 452,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.is_isomorphic",
   "networkx.null_graph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_to_directed": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.historical_tests.HistoricalTests.test_to_undirected": {
  "lineno": 373,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.classes.tests.test_digraph.BaseAttrDiGraphTester": {
  "lineno": 191,
  "symbols_in_volume": [
   "test_graph.BaseAttrGraphTester"
  ],
  "type": "class"
 },
 "networkx.classes.tests.test_digraph.BaseDiGraphTester": {
  "lineno": 6,
  "symbols_in_volume": [
   "test_graph.BaseGraphTester"
  ],
  "type": "class"
 },
 "networkx.classes.tests.test_digraph.BaseDiGraphTester.test_degree": {
  "lineno": 93,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.BaseDiGraphTester.test_degree_iter": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.BaseDiGraphTester.test_edges": {
  "lineno": 37,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.BaseDiGraphTester.test_edges_data": {
  "lineno": 49,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.BaseDiGraphTester.test_edges_iter": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.BaseDiGraphTester.test_has_predecessor": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.BaseDiGraphTester.test_has_successor": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.BaseDiGraphTester.test_in_degree": {
  "lineno": 108,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.BaseDiGraphTester.test_in_degree_iter": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.BaseDiGraphTester.test_in_degree_iter_weighted": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.BaseDiGraphTester.test_in_edges_dir": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.BaseDiGraphTester.test_in_edges_iter_dir": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.BaseDiGraphTester.test_out_degree": {
  "lineno": 135,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.BaseDiGraphTester.test_out_degree_iter": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.BaseDiGraphTester.test_out_degree_iter_weighted": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.BaseDiGraphTester.test_out_edges": {
  "lineno": 56,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.BaseDiGraphTester.test_out_edges_dir": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.BaseDiGraphTester.test_out_edges_iter": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.BaseDiGraphTester.test_out_edges_iter_dir": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.BaseDiGraphTester.test_predecessors": {
  "lineno": 27,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.BaseDiGraphTester.test_predecessors_iter": {
  "lineno": 32,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.BaseDiGraphTester.test_reverse_copy": {
  "lineno": 175,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.BaseDiGraphTester.test_reverse_nocopy": {
  "lineno": 183,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.BaseDiGraphTester.test_size": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.BaseDiGraphTester.test_successors": {
  "lineno": 12,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.BaseDiGraphTester.test_successors_iter": {
  "lineno": 17,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.BaseDiGraphTester.test_to_undirected_reciprocal": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.TestDiGraph": {
  "lineno": 195,
  "symbols_in_volume": [
   "test_graph.TestGraph"
  ],
  "type": "class"
 },
 "networkx.classes.tests.test_digraph.TestDiGraph.setUp": {
  "lineno": 197,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.TestDiGraph.test_add_edge": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.TestDiGraph.test_add_edges_from": {
  "lineno": 241,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.TestDiGraph.test_data_input": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.TestDiGraph.test_remove_edge": {
  "lineno": 252,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph.TestDiGraph.test_remove_edges_from": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph_historical": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.classes.tests.test_digraph_historical.TestDiGraphHistorical": {
  "lineno": 9,
  "symbols_in_volume": [
   "historical_tests.HistoricalTests"
  ],
  "type": "class"
 },
 "networkx.classes.tests.test_digraph_historical.TestDiGraphHistorical.setUp": {
  "lineno": 11,
  "symbols_in_volume": [
   "historical_tests.HistoricalTests.setUp",
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph_historical.TestDiGraphHistorical.test_degree_digraph": {
  "lineno": 45,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph_historical.TestDiGraphHistorical.test_in_degree": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph_historical.TestDiGraphHistorical.test_neighbors": {
  "lineno": 53,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph_historical.TestDiGraphHistorical.test_out_degree": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph_historical.TestDiGraphHistorical.test_predecessors": {
  "lineno": 82,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph_historical.TestDiGraphHistorical.test_reverse": {
  "lineno": 100,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.is_isomorphic"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph_historical.TestDiGraphHistorical.test_reverse2": {
  "lineno": 107,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph_historical.TestDiGraphHistorical.test_reverse3": {
  "lineno": 114,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_digraph_historical.TestDiGraphHistorical.test_successors": {
  "lineno": 68,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.classes.tests.test_function.TestCommonNeighbors": {
  "lineno": 273,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.classes.tests.test_function.TestCommonNeighbors.setUp": {
  "lineno": 274,
  "symbols_in_volume": [
   "networkx.common_neighbors"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.TestCommonNeighbors.setUp.test_func": {
  "lineno": 276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_function.TestCommonNeighbors.test_K5": {
  "lineno": 281,
  "symbols_in_volume": [
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.TestCommonNeighbors.test_P3": {
  "lineno": 285,
  "symbols_in_volume": [
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.TestCommonNeighbors.test_S4": {
  "lineno": 289,
  "symbols_in_volume": [
   "networkx.star_graph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.TestCommonNeighbors.test_custom1": {
  "lineno": 305,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.TestCommonNeighbors.test_custom2": {
  "lineno": 311,
  "symbols_in_volume": [
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.TestCommonNeighbors.test_digraph": {
  "lineno": 293,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXNotImplemented"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.TestCommonNeighbors.test_nonexistent_nodes": {
  "lineno": 299,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.common_neighbors",
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.TestFunction": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.classes.tests.test_function.TestFunction.setUp": {
  "lineno": 7,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.TestFunction.test_create_empty_copy": {
  "lineno": 57,
  "symbols_in_volume": [
   "networkx.create_empty_copy"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.TestFunction.test_degree": {
  "lineno": 34,
  "symbols_in_volume": [
   "networkx.degree"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.TestFunction.test_degree_histogram": {
  "lineno": 69,
  "symbols_in_volume": [
   "networkx.degree_histogram"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.TestFunction.test_density": {
  "lineno": 72,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.density"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.TestFunction.test_density_selfloop": {
  "lineno": 79,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.density"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.TestFunction.test_edges": {
  "lineno": 21,
  "symbols_in_volume": [
   "networkx.edges"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.TestFunction.test_edges_iter": {
  "lineno": 29,
  "symbols_in_volume": [
   "networkx.edges_iter"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.TestFunction.test_freeze": {
  "lineno": 86,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.freeze"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.TestFunction.test_info": {
  "lineno": 105,
  "symbols_in_volume": [
   "networkx.info",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.TestFunction.test_info_digraph": {
  "lineno": 122,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXError",
   "networkx.info"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.TestFunction.test_is_directed": {
  "lineno": 50,
  "symbols_in_volume": [
   "networkx.is_directed"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.TestFunction.test_is_frozen": {
  "lineno": 99,
  "symbols_in_volume": [
   "networkx.freeze",
   "networkx.is_frozen"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.TestFunction.test_is_negatively_weighted": {
  "lineno": 243,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.is_negatively_weighted"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.TestFunction.test_is_weighted": {
  "lineno": 217,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.is_weighted",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.TestFunction.test_neighbors": {
  "lineno": 143,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.neighbors",
   "networkx.path_graph",
   "networkx.star_graph",
   "random.sample"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.TestFunction.test_nodes": {
  "lineno": 18,
  "symbols_in_volume": [
   "networkx.nodes"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.TestFunction.test_nodes_iter": {
  "lineno": 26,
  "symbols_in_volume": [
   "networkx.nodes_iter"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.TestFunction.test_non_edges": {
  "lineno": 191,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.complete_graph",
   "networkx.non_edges",
   "networkx.path_graph",
   "networkx.star_graph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.TestFunction.test_non_neighbors": {
  "lineno": 164,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.complete_graph",
   "networkx.non_neighbors",
   "networkx.path_graph",
   "networkx.star_graph",
   "random.sample"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.TestFunction.test_number_of_edges": {
  "lineno": 47,
  "symbols_in_volume": [
   "networkx.number_of_edges"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.TestFunction.test_number_of_nodes": {
  "lineno": 44,
  "symbols_in_volume": [
   "networkx.number_of_nodes"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.TestFunction.test_subgraph": {
  "lineno": 53,
  "symbols_in_volume": [
   "networkx.subgraph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.test_get_edge_attributes": {
  "lineno": 391,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.MultiDiGraph",
   "networkx.MultiGraph",
   "networkx.get_edge_attributes",
   "networkx.path_graph",
   "networkx.set_edge_attributes"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.test_get_node_attributes": {
  "lineno": 378,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.MultiDiGraph",
   "networkx.MultiGraph",
   "networkx.get_node_attributes",
   "networkx.path_graph",
   "networkx.set_node_attributes"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.test_is_empty": {
  "lineno": 408,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.MultiDiGraph",
   "networkx.MultiGraph",
   "networkx.is_empty"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.test_set_edge_attributes": {
  "lineno": 338,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.path_graph",
   "networkx.set_edge_attributes"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.test_set_edge_attributes_multi": {
  "lineno": 358,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.MultiGraph",
   "networkx.path_graph",
   "networkx.set_edge_attributes"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_function.test_set_node_attributes": {
  "lineno": 317,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.MultiDiGraph",
   "networkx.MultiGraph",
   "networkx.path_graph",
   "networkx.set_node_attributes"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_graph": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.classes.tests.test_graph.BaseAttrGraphTester": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.classes.tests.test_graph.BaseAttrGraphTester.add_attributes": {
  "lineno": 203,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseAttrGraphTester.deep_copy_attrdict": {
  "lineno": 242,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseAttrGraphTester.deepcopy_edge_attr": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseAttrGraphTester.deepcopy_graph_attr": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseAttrGraphTester.deepcopy_node_attr": {
  "lineno": 252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseAttrGraphTester.different_attrdict": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseAttrGraphTester.graphs_equal": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseAttrGraphTester.is_deepcopy": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseAttrGraphTester.is_shallow_copy": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseAttrGraphTester.same_attrdict": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseAttrGraphTester.shallow_copy_attrdict": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseAttrGraphTester.shallow_copy_edge_attr": {
  "lineno": 282,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseAttrGraphTester.shallow_copy_graph_attr": {
  "lineno": 272,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseAttrGraphTester.shallow_copy_node_attr": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseAttrGraphTester.test_attr_dict_not_dict": {
  "lineno": 401,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseAttrGraphTester.test_copy": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseAttrGraphTester.test_copy_attr": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseAttrGraphTester.test_edge_attr": {
  "lineno": 357,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseAttrGraphTester.test_edge_attr2": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseAttrGraphTester.test_edge_attr3": {
  "lineno": 371,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseAttrGraphTester.test_edge_attr4": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseAttrGraphTester.test_graph_attr": {
  "lineno": 332,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseAttrGraphTester.test_name": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseAttrGraphTester.test_node_attr": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseAttrGraphTester.test_node_attr2": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseAttrGraphTester.test_selfloops_attr": {
  "lineno": 440,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseAttrGraphTester.test_subgraph": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseAttrGraphTester.test_to_directed": {
  "lineno": 416,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseAttrGraphTester.test_to_undirected": {
  "lineno": 408,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseAttrGraphTester.test_weighted_degree": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseGraphTester": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.classes.tests.test_graph.BaseGraphTester.test_add_cycle": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseGraphTester.test_add_path": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseGraphTester.test_add_star": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseGraphTester.test_adjacency_list": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseGraphTester.test_contains": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseGraphTester.test_degree": {
  "lineno": 70,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseGraphTester.test_degree_iter": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseGraphTester.test_edges": {
  "lineno": 53,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseGraphTester.test_edges_iter": {
  "lineno": 59,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseGraphTester.test_has_edge": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseGraphTester.test_has_node": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseGraphTester.test_nbunch_iter": {
  "lineno": 144,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseGraphTester.test_neighbors": {
  "lineno": 43,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseGraphTester.test_neighbors_iter": {
  "lineno": 48,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseGraphTester.test_nodes": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseGraphTester.test_nodes_iter": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseGraphTester.test_order": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseGraphTester.test_selfloop_degree": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseGraphTester.test_selfloops": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseGraphTester.test_size": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.BaseGraphTester.test_weighted_degree": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.TestGraph": {
  "lineno": 450,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.classes.tests.test_graph.TestGraph.setUp": {
  "lineno": 452,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.TestGraph.test_add_edge": {
  "lineno": 549,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.TestGraph.test_add_edges_from": {
  "lineno": 557,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.TestGraph.test_add_node": {
  "lineno": 487,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.TestGraph.test_add_nodes_from": {
  "lineno": 508,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.TestGraph.test_adjacency_iter": {
  "lineno": 476,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.TestGraph.test_clear": {
  "lineno": 589,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.TestGraph.test_data_input": {
  "lineno": 468,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.TestGraph.test_edges_data": {
  "lineno": 594,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.TestGraph.test_get_edge_data": {
  "lineno": 601,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.TestGraph.test_getitem": {
  "lineno": 481,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.TestGraph.test_remove_edge": {
  "lineno": 577,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.TestGraph.test_remove_edges_from": {
  "lineno": 583,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.TestGraph.test_remove_node": {
  "lineno": 536,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_graph.TestGraph.test_remove_nodes_from": {
  "lineno": 543,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_graph_historical": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.classes.tests.test_graph_historical.TestGraphHistorical": {
  "lineno": 9,
  "symbols_in_volume": [
   "historical_tests.HistoricalTests"
  ],
  "type": "class"
 },
 "networkx.classes.tests.test_graph_historical.TestGraphHistorical.setUp": {
  "lineno": 11,
  "symbols_in_volume": [
   "historical_tests.HistoricalTests.setUp",
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.classes.tests.test_multidigraph.BaseMultiDiGraphTester": {
  "lineno": 6,
  "symbols_in_volume": [
   "test_multigraph.BaseMultiGraphTester"
  ],
  "type": "class"
 },
 "networkx.classes.tests.test_multidigraph.BaseMultiDiGraphTester.is_deep": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph.BaseMultiDiGraphTester.is_shallow": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph.BaseMultiDiGraphTester.test_degree": {
  "lineno": 141,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph.BaseMultiDiGraphTester.test_degree_iter": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph.BaseMultiDiGraphTester.test_edges": {
  "lineno": 7,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph.BaseMultiDiGraphTester.test_edges_data": {
  "lineno": 13,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph.BaseMultiDiGraphTester.test_edges_iter": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph.BaseMultiDiGraphTester.test_has_predecessor": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph.BaseMultiDiGraphTester.test_has_successor": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph.BaseMultiDiGraphTester.test_in_degree": {
  "lineno": 161,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph.BaseMultiDiGraphTester.test_in_degree_iter": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph.BaseMultiDiGraphTester.test_in_edges": {
  "lineno": 47,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph.BaseMultiDiGraphTester.test_in_edges_iter": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph.BaseMultiDiGraphTester.test_out_degree": {
  "lineno": 178,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph.BaseMultiDiGraphTester.test_out_degree_iter": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph.BaseMultiDiGraphTester.test_out_edges": {
  "lineno": 30,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph.BaseMultiDiGraphTester.test_out_edges_iter": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph.BaseMultiDiGraphTester.test_predecessors": {
  "lineno": 130,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph.BaseMultiDiGraphTester.test_predecessors_iter": {
  "lineno": 135,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph.BaseMultiDiGraphTester.test_reverse_copy": {
  "lineno": 212,
  "symbols_in_volume": [
   "networkx.MultiDiGraph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph.BaseMultiDiGraphTester.test_reverse_nocopy": {
  "lineno": 220,
  "symbols_in_volume": [
   "networkx.MultiDiGraph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph.BaseMultiDiGraphTester.test_size": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph.BaseMultiDiGraphTester.test_successors": {
  "lineno": 115,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph.BaseMultiDiGraphTester.test_successors_iter": {
  "lineno": 120,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph.BaseMultiDiGraphTester.test_to_undirected": {
  "lineno": 100,
  "symbols_in_volume": [
   "networkx.MultiGraph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph.BaseMultiDiGraphTester.test_to_undirected_reciprocal": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph.TestMultiDiGraph": {
  "lineno": 229,
  "symbols_in_volume": [
   "test_multigraph.TestMultiGraph"
  ],
  "type": "class"
 },
 "networkx.classes.tests.test_multidigraph.TestMultiDiGraph.setUp": {
  "lineno": 230,
  "symbols_in_volume": [
   "networkx.MultiDiGraph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph.TestMultiDiGraph.test_add_edge": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph.TestMultiDiGraph.test_add_edges_from": {
  "lineno": 265,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph.TestMultiDiGraph.test_remove_edge": {
  "lineno": 286,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph.TestMultiDiGraph.test_remove_edges_from": {
  "lineno": 324,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_multidigraph.TestMultiDiGraph.test_remove_multiedge": {
  "lineno": 300,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_multigraph": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.classes.tests.test_multigraph.BaseMultiGraphTester": {
  "lineno": 6,
  "symbols_in_volume": [
   "test_graph.BaseAttrGraphTester"
  ],
  "type": "class"
 },
 "networkx.classes.tests.test_multigraph.BaseMultiGraphTester.deepcopy_edge_attr": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_multigraph.BaseMultiGraphTester.different_attrdict": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_multigraph.BaseMultiGraphTester.same_attrdict": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_multigraph.BaseMultiGraphTester.shallow_copy_edge_attr": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_multigraph.BaseMultiGraphTester.test_adjacency_iter": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_multigraph.BaseMultiGraphTester.test_edge_attr4": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_multigraph.BaseMultiGraphTester.test_get_edge_data": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_multigraph.BaseMultiGraphTester.test_has_edge": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_multigraph.BaseMultiGraphTester.test_selfloops": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_multigraph.BaseMultiGraphTester.test_selfloops2": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_multigraph.BaseMultiGraphTester.test_to_directed": {
  "lineno": 82,
  "symbols_in_volume": [
   "networkx.MultiDiGraph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_multigraph.BaseMultiGraphTester.test_to_undirected": {
  "lineno": 74,
  "symbols_in_volume": [
   "networkx.MultiGraph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_multigraph.TestMultiGraph": {
  "lineno": 127,
  "symbols_in_volume": [
   "test_graph.TestGraph"
  ],
  "type": "class"
 },
 "networkx.classes.tests.test_multigraph.TestMultiGraph.setUp": {
  "lineno": 128,
  "symbols_in_volume": [
   "networkx.MultiGraph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_multigraph.TestMultiGraph.test_add_edge": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_multigraph.TestMultiGraph.test_add_edge_conflicting_key": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_multigraph.TestMultiGraph.test_add_edges_from": {
  "lineno": 181,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_multigraph.TestMultiGraph.test_data_input": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_multigraph.TestMultiGraph.test_getitem": {
  "lineno": 149,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_multigraph.TestMultiGraph.test_remove_edge": {
  "lineno": 199,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_multigraph.TestMultiGraph.test_remove_edges_from": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_multigraph.TestMultiGraph.test_remove_multiedge": {
  "lineno": 234,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_multigraph.TestMultiGraph.test_remove_node": {
  "lineno": 155,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_ordered": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.classes.tests.test_ordered.SmokeTestOrdered": {
  "lineno": 3,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.classes.tests.test_ordered.SmokeTestOrdered.test_digraph": {
  "lineno": 8,
  "symbols_in_volume": [
   "networkx.OrderedDiGraph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_ordered.SmokeTestOrdered.test_graph": {
  "lineno": 5,
  "symbols_in_volume": [
   "networkx.OrderedGraph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_ordered.SmokeTestOrdered.test_multidigraph": {
  "lineno": 14,
  "symbols_in_volume": [
   "networkx.OrderedMultiDiGraph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_ordered.SmokeTestOrdered.test_multigraph": {
  "lineno": 11,
  "symbols_in_volume": [
   "networkx.OrderedMultiGraph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_special": {
  "lineno": null,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "module"
 },
 "networkx.classes.tests.test_special.OrderedDiGraphTester": {
  "lineno": 60,
  "symbols_in_volume": [
   "test_digraph.TestDiGraph"
  ],
  "type": "class"
 },
 "networkx.classes.tests.test_special.OrderedDiGraphTester.setUp": {
  "lineno": 61,
  "symbols_in_volume": [
   "test_graph.TestGraph.setUp"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_special.OrderedDiGraphTester.setUp.MyGraph": {
  "lineno": 63,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "ordereddict.OrderedDict"
  ],
  "type": "class"
 },
 "networkx.classes.tests.test_special.OrderedGraphTester": {
  "lineno": 23,
  "symbols_in_volume": [
   "test_graph.TestGraph"
  ],
  "type": "class"
 },
 "networkx.classes.tests.test_special.OrderedGraphTester.setUp": {
  "lineno": 24,
  "symbols_in_volume": [
   "test_graph.TestGraph.setUp"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_special.OrderedGraphTester.setUp.MyGraph": {
  "lineno": 26,
  "symbols_in_volume": [
   "networkx.Graph",
   "ordereddict.OrderedDict"
  ],
  "type": "class"
 },
 "networkx.classes.tests.test_special.OrderedMultiDiGraphTester": {
  "lineno": 112,
  "symbols_in_volume": [
   "test_multidigraph.TestMultiDiGraph"
  ],
  "type": "class"
 },
 "networkx.classes.tests.test_special.OrderedMultiDiGraphTester.setUp": {
  "lineno": 113,
  "symbols_in_volume": [
   "test_multidigraph.TestMultiDiGraph.setUp"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_special.OrderedMultiDiGraphTester.setUp.MyGraph": {
  "lineno": 115,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "ordereddict.OrderedDict"
  ],
  "type": "class"
 },
 "networkx.classes.tests.test_special.OrderedMultiGraphTester": {
  "lineno": 96,
  "symbols_in_volume": [
   "test_multigraph.TestMultiGraph"
  ],
  "type": "class"
 },
 "networkx.classes.tests.test_special.OrderedMultiGraphTester.setUp": {
  "lineno": 97,
  "symbols_in_volume": [
   "test_multigraph.TestMultiGraph.setUp"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_special.OrderedMultiGraphTester.setUp.MyGraph": {
  "lineno": 99,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "ordereddict.OrderedDict"
  ],
  "type": "class"
 },
 "networkx.classes.tests.test_special.SpecialDiGraphTester": {
  "lineno": 55,
  "symbols_in_volume": [
   "test_digraph.TestDiGraph"
  ],
  "type": "class"
 },
 "networkx.classes.tests.test_special.SpecialDiGraphTester.setUp": {
  "lineno": 56,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "test_digraph.TestDiGraph.setUp"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_special.SpecialGraphTester": {
  "lineno": 18,
  "symbols_in_volume": [
   "test_graph.TestGraph"
  ],
  "type": "class"
 },
 "networkx.classes.tests.test_special.SpecialGraphTester.setUp": {
  "lineno": 19,
  "symbols_in_volume": [
   "networkx.Graph",
   "test_graph.TestGraph.setUp"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_special.SpecialMultiDiGraphTester": {
  "lineno": 107,
  "symbols_in_volume": [
   "test_multidigraph.TestMultiDiGraph"
  ],
  "type": "class"
 },
 "networkx.classes.tests.test_special.SpecialMultiDiGraphTester.setUp": {
  "lineno": 108,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "test_multidigraph.TestMultiDiGraph.setUp"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_special.SpecialMultiGraphTester": {
  "lineno": 91,
  "symbols_in_volume": [
   "test_multigraph.TestMultiGraph"
  ],
  "type": "class"
 },
 "networkx.classes.tests.test_special.SpecialMultiGraphTester.setUp": {
  "lineno": 92,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "test_multigraph.TestMultiGraph.setUp"
  ],
  "type": "function"
 },
 "networkx.classes.tests.test_special.ThinDiGraphTester": {
  "lineno": 69,
  "symbols_in_volume": [
   "test_digraph.TestDiGraph"
  ],
  "type": "class"
 },
 "networkx.classes.tests.test_special.ThinDiGraphTester.setUp": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_special.ThinDiGraphTester.setUp.MyGraph": {
  "lineno": 72,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "class"
 },
 "networkx.classes.tests.test_special.ThinGraphTester": {
  "lineno": 32,
  "symbols_in_volume": [
   "test_graph.TestGraph"
  ],
  "type": "class"
 },
 "networkx.classes.tests.test_special.ThinGraphTester.setUp": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_special.ThinGraphTester.setUp.MyGraph": {
  "lineno": 35,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "class"
 },
 "networkx.classes.tests.test_timing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.classes.tests.test_timing.Benchmark": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.classes.tests.test_timing.Benchmark.__init__": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_timing.Benchmark.run": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.test_timing.Benchmark.time_me": {
  "lineno": 130,
  "symbols_in_volume": [
   "timeit.Timer"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.classes.tests.timingclasses.TimingDiGraph": {
  "lineno": 1820,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.classes.tests.timingclasses.TimingDiGraph.__init__": {
  "lineno": 1968,
  "symbols_in_volume": [
   "networkx.convert.to_networkx_graph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingDiGraph.add_edge": {
  "lineno": 2228,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingDiGraph.add_edges_from": {
  "lineno": 2300,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingDiGraph.add_node": {
  "lineno": 2019,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingDiGraph.add_nodes_from": {
  "lineno": 2078,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingDiGraph.clear": {
  "lineno": 2828,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingDiGraph.degree_iter": {
  "lineno": 2595,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingDiGraph.edges_iter": {
  "lineno": 2494,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingDiGraph.has_predecessor": {
  "lineno": 2454,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingDiGraph.has_successor": {
  "lineno": 2447,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingDiGraph.in_degree": {
  "lineno": 2746,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingDiGraph.in_degree_iter": {
  "lineno": 2648,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingDiGraph.in_edges": {
  "lineno": 2586,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingDiGraph.in_edges_iter": {
  "lineno": 2553,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingDiGraph.is_directed": {
  "lineno": 2855,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingDiGraph.is_multigraph": {
  "lineno": 2850,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingDiGraph.out_degree": {
  "lineno": 2788,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingDiGraph.out_degree_iter": {
  "lineno": 2697,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingDiGraph.predecessors": {
  "lineno": 2485,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingDiGraph.predecessors_iter": {
  "lineno": 2471,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingDiGraph.remove_edge": {
  "lineno": 2379,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingDiGraph.remove_edges_from": {
  "lineno": 2413,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingDiGraph.remove_node": {
  "lineno": 2144,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingDiGraph.remove_nodes_from": {
  "lineno": 2188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingDiGraph.reverse": {
  "lineno": 2951,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingDiGraph.subgraph": {
  "lineno": 2978,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingDiGraph.successors": {
  "lineno": 2478,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingDiGraph.successors_iter": {
  "lineno": 2461,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingDiGraph.to_directed": {
  "lineno": 2859,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingDiGraph.to_undirected": {
  "lineno": 2897,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.__contains__": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.__getitem__": {
  "lineno": 290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.__init__": {
  "lineno": 174,
  "symbols_in_volume": [
   "networkx.convert.to_networkx_graph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.__iter__": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.__len__": {
  "lineno": 272,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.__str__": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.add_cycle": {
  "lineno": 1723,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.add_edge": {
  "lineno": 645,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.add_edges_from": {
  "lineno": 716,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.add_node": {
  "lineno": 321,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.add_nodes_from": {
  "lineno": 379,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.add_path": {
  "lineno": 1697,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.add_star": {
  "lineno": 1668,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.add_weighted_edges_from": {
  "lineno": 792,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.adjacency_iter": {
  "lineno": 1185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.adjacency_list": {
  "lineno": 1160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.clear": {
  "lineno": 1300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.copy": {
  "lineno": 1321,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.degree": {
  "lineno": 1211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.degree_iter": {
  "lineno": 1250,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.edges": {
  "lineno": 1004,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.edges_iter": {
  "lineno": 1049,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.get_edge_data": {
  "lineno": 1111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.has_edge": {
  "lineno": 897,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.has_node": {
  "lineno": 620,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.is_directed": {
  "lineno": 1352,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.is_multigraph": {
  "lineno": 1347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.name": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.nbunch_iter": {
  "lineno": 1750,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.nbunch_iter.bunch_iter": {
  "lineno": 1796,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError",
   "sys.stdout.write"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.neighbors": {
  "lineno": 940,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.neighbors_iter": {
  "lineno": 981,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.nodes": {
  "lineno": 557,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.nodes_iter": {
  "lineno": 522,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.nodes_with_selfloops": {
  "lineno": 1503,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.number_of_edges": {
  "lineno": 1630,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.number_of_nodes": {
  "lineno": 584,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.number_of_selfloops": {
  "lineno": 1566,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.order": {
  "lineno": 605,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.remove_edge": {
  "lineno": 825,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.remove_edges_from": {
  "lineno": 861,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.remove_node": {
  "lineno": 443,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.remove_nodes_from": {
  "lineno": 485,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.selfloop_edges": {
  "lineno": 1528,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.size": {
  "lineno": 1591,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.subgraph": {
  "lineno": 1442,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.to_directed": {
  "lineno": 1356,
  "symbols_in_volume": [
   "copy.deepcopy",
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingGraph.to_undirected": {
  "lineno": 1405,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingMultiDiGraph": {
  "lineno": 4001,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.classes.tests.timingclasses.TimingMultiDiGraph.add_edge": {
  "lineno": 4157,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingMultiDiGraph.degree_iter": {
  "lineno": 4481,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingMultiDiGraph.edges_iter": {
  "lineno": 4312,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingMultiDiGraph.in_degree_iter": {
  "lineno": 4540,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingMultiDiGraph.in_edges": {
  "lineno": 4456,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingMultiDiGraph.in_edges_iter": {
  "lineno": 4413,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingMultiDiGraph.is_directed": {
  "lineno": 4646,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingMultiDiGraph.is_multigraph": {
  "lineno": 4642,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingMultiDiGraph.out_degree_iter": {
  "lineno": 4592,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingMultiDiGraph.out_edges": {
  "lineno": 4380,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingMultiDiGraph.remove_edge": {
  "lineno": 4249,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingMultiDiGraph.reverse": {
  "lineno": 4810,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingMultiDiGraph.subgraph": {
  "lineno": 4743,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingMultiDiGraph.to_directed": {
  "lineno": 4650,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingMultiDiGraph.to_undirected": {
  "lineno": 4694,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingMultiGraph": {
  "lineno": 3044,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.classes.tests.timingclasses.TimingMultiGraph.add_edge": {
  "lineno": 3203,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingMultiGraph.add_edges_from": {
  "lineno": 3294,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingMultiGraph.degree_iter": {
  "lineno": 3726,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingMultiGraph.edges": {
  "lineno": 3544,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingMultiGraph.edges_iter": {
  "lineno": 3595,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingMultiGraph.get_edge_data": {
  "lineno": 3672,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingMultiGraph.has_edge": {
  "lineno": 3490,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingMultiGraph.is_directed": {
  "lineno": 3786,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingMultiGraph.is_multigraph": {
  "lineno": 3782,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingMultiGraph.number_of_edges": {
  "lineno": 3898,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingMultiGraph.remove_edge": {
  "lineno": 3380,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingMultiGraph.remove_edges_from": {
  "lineno": 3444,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingMultiGraph.selfloop_edges": {
  "lineno": 3841,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingMultiGraph.subgraph": {
  "lineno": 3937,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.classes.tests.timingclasses.TimingMultiGraph.to_directed": {
  "lineno": 3790,
  "symbols_in_volume": [
   "copy.deepcopy",
   "networkx.classes.multidigraph.MultiDiGraph"
  ],
  "type": "function"
 },
 "networkx.convert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.convert._prep_create_using": {
  "lineno": 34,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.convert.convert_to_directed": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.convert.convert_to_undirected": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.convert.from_dict_of_dicts": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.convert.from_dict_of_lists": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.convert.from_edgelist": {
  "lineno": 382,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.convert.to_dict_of_dicts": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.convert.to_dict_of_lists": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.convert.to_edgelist": {
  "lineno": 365,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.convert.to_networkx_graph": {
  "lineno": 50,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.from_numpy_matrix",
   "networkx.from_pandas_dataframe",
   "networkx.from_scipy_sparse_matrix",
   "networkx.nx_agraph.from_agraph",
   "numpy.matrix",
   "numpy.ndarray",
   "pandas.DataFrame",
   "warnings.warn"
  ],
  "type": "function"
 },
 "networkx.convert_matrix": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.convert_matrix._coo_gen_triples": {
  "lineno": 755,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.convert_matrix._csc_gen_triples": {
  "lineno": 743,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.convert_matrix._csr_gen_triples": {
  "lineno": 731,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.convert_matrix._dok_gen_triples": {
  "lineno": 764,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.convert_matrix._generate_weighted_edges": {
  "lineno": 773,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.convert_matrix.from_numpy_matrix": {
  "lineno": 384,
  "symbols_in_volume": [
   "itertools.chain.from_iterable",
   "networkx.NetworkXError",
   "networkx.convert._prep_create_using",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "networkx.convert_matrix.from_pandas_dataframe": {
  "lineno": 124,
  "symbols_in_volume": [
   "networkx.convert._prep_create_using"
  ],
  "type": "function"
 },
 "networkx.convert_matrix.from_scipy_sparse_matrix": {
  "lineno": 790,
  "symbols_in_volume": [
   "itertools.chain.from_iterable",
   "networkx.NetworkXError",
   "networkx.convert._prep_create_using"
  ],
  "type": "function"
 },
 "networkx.convert_matrix.setup_module": {
  "lineno": 894,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.convert_matrix.to_numpy_matrix": {
  "lineno": 220,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "numpy.asmatrix",
   "numpy.isnan",
   "numpy.nan",
   "numpy.nanmax",
   "numpy.nanmin",
   "numpy.nansum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "networkx.convert_matrix.to_numpy_recarray": {
  "lineno": 539,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.utils.not_implemented_for",
   "numpy.recarray",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "networkx.convert_matrix.to_pandas_dataframe": {
  "lineno": 42,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "networkx.convert_matrix.to_scipy_sparse_matrix": {
  "lineno": 610,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "scipy.sparse.coo_matrix"
  ],
  "type": "function"
 },
 "networkx.drawing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.drawing.layout": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.drawing.layout._fruchterman_reingold": {
  "lineno": 299,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "numpy.asarray",
   "numpy.random.random",
   "numpy.sqrt",
   "numpy.transpose",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "networkx.drawing.layout._rescale_layout": {
  "lineno": 569,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.drawing.layout._sparse_fruchterman_reingold": {
  "lineno": 359,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "numpy.asarray",
   "numpy.random.random",
   "numpy.sqrt",
   "numpy.where",
   "numpy.zeros",
   "scipy.sparse.coo_matrix"
  ],
  "type": "function"
 },
 "networkx.drawing.layout._sparse_spectral": {
  "lineno": 535,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "numpy.argsort",
   "numpy.asarray",
   "numpy.real",
   "numpy.sqrt",
   "scipy.sparse.linalg.eigen_symmetric",
   "scipy.sparse.spdiags"
  ],
  "type": "function"
 },
 "networkx.drawing.layout._spectral": {
  "lineno": 510,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "numpy.argsort",
   "numpy.asarray",
   "numpy.identity",
   "numpy.linalg.eig",
   "numpy.real",
   "numpy.sum"
  ],
  "type": "function"
 },
 "networkx.drawing.layout.circular_layout": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.column_stack",
   "numpy.cos",
   "numpy.pi",
   "numpy.sin"
  ],
  "type": "function"
 },
 "networkx.drawing.layout.fruchterman_reingold_layout": {
  "lineno": 193,
  "symbols_in_volume": [
   "networkx.to_numpy_matrix",
   "networkx.to_scipy_sparse_matrix",
   "numpy.array",
   "numpy.asarray",
   "numpy.random.random",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "networkx.drawing.layout.random_layout": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.random.random"
  ],
  "type": "function"
 },
 "networkx.drawing.layout.setup_module": {
  "lineno": 583,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.drawing.layout.shell_layout": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.column_stack",
   "numpy.cos",
   "numpy.pi",
   "numpy.sin"
  ],
  "type": "function"
 },
 "networkx.drawing.layout.spectral_layout": {
  "lineno": 431,
  "symbols_in_volume": [
   "networkx.to_numpy_matrix",
   "networkx.to_scipy_sparse_matrix",
   "numpy.array",
   "numpy.asarray",
   "numpy.ones",
   "numpy.transpose",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "networkx.drawing.nx_agraph": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.drawing.nx_agraph.display_pygraphviz": {
  "lineno": 402,
  "symbols_in_volume": [
   "networkx.utils.default_opener",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "networkx.drawing.nx_agraph.from_agraph": {
  "lineno": 37,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.MultiDiGraph",
   "networkx.MultiGraph",
   "networkx.empty_graph"
  ],
  "type": "function"
 },
 "networkx.drawing.nx_agraph.graphviz_layout": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.drawing.nx_agraph.pygraphviz_layout": {
  "lineno": 230,
  "symbols_in_volume": [
   "pygraphviz.Node"
  ],
  "type": "function"
 },
 "networkx.drawing.nx_agraph.read_dot": {
  "lineno": 183,
  "symbols_in_volume": [
   "pygraphviz.AGraph"
  ],
  "type": "function"
 },
 "networkx.drawing.nx_agraph.setup_module": {
  "lineno": 440,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.drawing.nx_agraph.to_agraph": {
  "lineno": 111,
  "symbols_in_volume": [
   "pygraphviz.AGraph"
  ],
  "type": "function"
 },
 "networkx.drawing.nx_agraph.view_pygraphviz": {
  "lineno": 274,
  "symbols_in_volume": [
   "networkx.NetworkXException",
   "networkx.utils.open_file",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "networkx.drawing.nx_agraph.view_pygraphviz.clean_attrs": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.drawing.nx_agraph.view_pygraphviz.func": {
  "lineno": 371,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.drawing.nx_agraph.view_pygraphviz.update_attrs": {
  "lineno": 340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.drawing.nx_agraph.write_dot": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.drawing.nx_pydot": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.drawing.nx_pydot.from_pydot": {
  "lineno": 69,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.MultiDiGraph",
   "networkx.MultiGraph"
  ],
  "type": "function"
 },
 "networkx.drawing.nx_pydot.graphviz_layout": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.drawing.nx_pydot.networkx_from_pydot": {
  "lineno": 226,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "networkx.drawing.nx_pydot.pydot_from_networkx": {
  "lineno": 220,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "networkx.drawing.nx_pydot.pydot_layout": {
  "lineno": 251,
  "symbols_in_volume": [
   "networkx.utils.make_str",
   "pydotplus.Node",
   "pydotplus.graph_from_dot_data"
  ],
  "type": "function"
 },
 "networkx.drawing.nx_pydot.read_dot": {
  "lineno": 47,
  "symbols_in_volume": [
   "networkx.utils.open_file",
   "pydotplus.graph_from_dot_data"
  ],
  "type": "function"
 },
 "networkx.drawing.nx_pydot.setup_module": {
  "lineno": 294,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.drawing.nx_pydot.to_pydot": {
  "lineno": 158,
  "symbols_in_volume": [
   "networkx.utils.make_str",
   "pydotplus.Dot",
   "pydotplus.Edge",
   "pydotplus.Node"
  ],
  "type": "function"
 },
 "networkx.drawing.nx_pydot.write_dot": {
  "lineno": 37,
  "symbols_in_volume": [
   "networkx.utils.open_file"
  ],
  "type": "function"
 },
 "networkx.drawing.nx_pylab": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.drawing.nx_pylab.draw": {
  "lineno": 42,
  "symbols_in_volume": [
   "matplotlib.pyplot.draw_if_interactive",
   "matplotlib.pyplot.gcf",
   "matplotlib.pyplot.hold",
   "matplotlib.pyplot.ishold"
  ],
  "type": "function"
 },
 "networkx.drawing.nx_pylab.draw_circular": {
  "lineno": 887,
  "symbols_in_volume": [
   "networkx.drawing.layout.circular_layout"
  ],
  "type": "function"
 },
 "networkx.drawing.nx_pylab.draw_graphviz": {
  "lineno": 970,
  "symbols_in_volume": [
   "networkx.drawing.graphviz_layout"
  ],
  "type": "function"
 },
 "networkx.drawing.nx_pylab.draw_networkx": {
  "lineno": 142,
  "symbols_in_volume": [
   "matplotlib.pyplot.draw_if_interactive",
   "networkx.drawing.spring_layout"
  ],
  "type": "function"
 },
 "networkx.drawing.nx_pylab.draw_networkx_edge_labels": {
  "lineno": 743,
  "symbols_in_volume": [
   "matplotlib.cbook.is_string_like",
   "matplotlib.pyplot.gca",
   "numpy.arctan2",
   "numpy.array",
   "numpy.pi"
  ],
  "type": "function"
 },
 "networkx.drawing.nx_pylab.draw_networkx_edges": {
  "lineno": 405,
  "symbols_in_volume": [
   "matplotlib.cbook.is_numlike",
   "matplotlib.cbook.is_string_like",
   "matplotlib.cbook.iterable",
   "matplotlib.collections.LineCollection",
   "matplotlib.colors.Colormap",
   "matplotlib.colors.colorConverter.to_rgba",
   "matplotlib.pyplot.gca",
   "numpy.alltrue",
   "numpy.amax",
   "numpy.amin",
   "numpy.arctan2",
   "numpy.asarray",
   "numpy.cos",
   "numpy.ravel",
   "numpy.sin",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "networkx.drawing.nx_pylab.draw_networkx_labels": {
  "lineno": 638,
  "symbols_in_volume": [
   "matplotlib.cbook.is_string_like",
   "matplotlib.pyplot.gca"
  ],
  "type": "function"
 },
 "networkx.drawing.nx_pylab.draw_networkx_nodes": {
  "lineno": 282,
  "symbols_in_volume": [
   "matplotlib.pyplot.gca",
   "networkx.NetworkXError",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "networkx.drawing.nx_pylab.draw_nx": {
  "lineno": 988,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.drawing.nx_pylab.draw_random": {
  "lineno": 903,
  "symbols_in_volume": [
   "networkx.drawing.layout.random_layout"
  ],
  "type": "function"
 },
 "networkx.drawing.nx_pylab.draw_shell": {
  "lineno": 951,
  "symbols_in_volume": [
   "networkx.drawing.layout.shell_layout"
  ],
  "type": "function"
 },
 "networkx.drawing.nx_pylab.draw_spectral": {
  "lineno": 919,
  "symbols_in_volume": [
   "networkx.drawing.layout.spectral_layout"
  ],
  "type": "function"
 },
 "networkx.drawing.nx_pylab.draw_spring": {
  "lineno": 935,
  "symbols_in_volume": [
   "networkx.drawing.layout.spring_layout"
  ],
  "type": "function"
 },
 "networkx.drawing.nx_pylab.setup_module": {
  "lineno": 994,
  "symbols_in_volume": [
   "matplotlib.use",
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.drawing.tests.test_agraph": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.drawing.tests.test_agraph.TestAGraph": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.drawing.tests.test_agraph.TestAGraph.agraph_checks": {
  "lineno": 35,
  "symbols_in_volume": [
   "networkx.drawing.nx_agraph.write_dot",
   "networkx.nx_agraph.from_agraph",
   "networkx.nx_agraph.read_dot",
   "networkx.nx_agraph.to_agraph",
   "os.unlink",
   "tempfile.mkstemp",
   "tempfile.mktemp"
  ],
  "type": "function"
 },
 "networkx.drawing.tests.test_agraph.TestAGraph.assert_equal": {
  "lineno": 30,
  "symbols_in_volume": [
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal"
  ],
  "type": "function"
 },
 "networkx.drawing.tests.test_agraph.TestAGraph.build_graph": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.drawing.tests.test_agraph.TestAGraph.setupClass": {
  "lineno": 13,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.drawing.tests.test_agraph.TestAGraph.testDirected": {
  "lineno": 69,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.drawing.tests.test_agraph.TestAGraph.testMultiDirected": {
  "lineno": 75,
  "symbols_in_volume": [
   "networkx.MultiDiGraph"
  ],
  "type": "function"
 },
 "networkx.drawing.tests.test_agraph.TestAGraph.testMultiUndirected": {
  "lineno": 72,
  "symbols_in_volume": [
   "networkx.MultiGraph"
  ],
  "type": "function"
 },
 "networkx.drawing.tests.test_agraph.TestAGraph.testUndirected": {
  "lineno": 66,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.drawing.tests.test_agraph.TestAGraph.test_from_agraph_name": {
  "lineno": 59,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.nx_agraph.from_agraph",
   "networkx.nx_agraph.to_agraph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.drawing.tests.test_layout": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.drawing.tests.test_layout.TestLayout": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.drawing.tests.test_layout.TestLayout.check_scale_and_center": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "networkx.drawing.tests.test_layout.TestLayout.setUp": {
  "lineno": 18,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.grid_2d_graph"
  ],
  "type": "function"
 },
 "networkx.drawing.tests.test_layout.TestLayout.setupClass": {
  "lineno": 9,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.drawing.tests.test_layout.TestLayout.test_adjacency_interface_numpy": {
  "lineno": 145,
  "symbols_in_volume": [
   "networkx.drawing.layout._fruchterman_reingold",
   "networkx.to_numpy_matrix",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.drawing.tests.test_layout.TestLayout.test_adjacency_interface_scipy": {
  "lineno": 151,
  "symbols_in_volume": [
   "networkx.drawing.layout._sparse_fruchterman_reingold",
   "networkx.drawing.layout._sparse_spectral",
   "networkx.to_scipy_sparse_matrix",
   "nose.SkipTest",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.drawing.tests.test_layout.TestLayout.test_empty_graph": {
  "lineno": 43,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.circular_layout",
   "networkx.fruchterman_reingold_layout",
   "networkx.random_layout",
   "networkx.shell_layout",
   "networkx.spectral_layout",
   "networkx.spring_layout"
  ],
  "type": "function"
 },
 "networkx.drawing.tests.test_layout.TestLayout.test_scale_and_center_arg": {
  "lineno": 84,
  "symbols_in_volume": [
   "networkx.circular_layout",
   "networkx.complete_graph",
   "networkx.random_layout",
   "networkx.shell_layout",
   "networkx.spectral_layout",
   "networkx.spring_layout"
  ],
  "type": "function"
 },
 "networkx.drawing.tests.test_layout.TestLayout.test_shell_layout": {
  "lineno": 111,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.shell_layout"
  ],
  "type": "function"
 },
 "networkx.drawing.tests.test_layout.TestLayout.test_single_node": {
  "lineno": 58,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.circular_layout",
   "networkx.fruchterman_reingold_layout",
   "networkx.random_layout",
   "networkx.shell_layout",
   "networkx.spectral_layout",
   "networkx.spring_layout"
  ],
  "type": "function"
 },
 "networkx.drawing.tests.test_layout.TestLayout.test_smoke_int": {
  "lineno": 24,
  "symbols_in_volume": [
   "networkx.circular_layout",
   "networkx.fruchterman_reingold_layout",
   "networkx.random_layout",
   "networkx.shell_layout",
   "networkx.spectral_layout",
   "networkx.spring_layout"
  ],
  "type": "function"
 },
 "networkx.drawing.tests.test_layout.TestLayout.test_smoke_string": {
  "lineno": 34,
  "symbols_in_volume": [
   "networkx.circular_layout",
   "networkx.fruchterman_reingold_layout",
   "networkx.random_layout",
   "networkx.shell_layout",
   "networkx.spectral_layout",
   "networkx.spring_layout"
  ],
  "type": "function"
 },
 "networkx.drawing.tests.test_layout.TestLayout.test_spectral_for_small_graphs": {
  "lineno": 130,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.spectral_layout"
  ],
  "type": "function"
 },
 "networkx.drawing.tests.test_layout.TestLayout.test_spring_args": {
  "lineno": 120,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.spring_layout",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.drawing.tests.test_pydot": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.drawing.tests.test_pydot.TestPydot": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.drawing.tests.test_pydot.TestPydot.pydot_checks": {
  "lineno": 22,
  "symbols_in_volume": [
   "networkx.nx_pydot.from_pydot",
   "networkx.nx_pydot.read_dot",
   "networkx.nx_pydot.to_pydot",
   "networkx.testing.assert_graphs_equal",
   "nose.tools.assert_true",
   "pydotplus.graph_from_dot_file",
   "tempfile.mktemp"
  ],
  "type": "function"
 },
 "networkx.drawing.tests.test_pydot.TestPydot.setupClass": {
  "lineno": 14,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.drawing.tests.test_pydot.TestPydot.testDirected": {
  "lineno": 55,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.drawing.tests.test_pydot.TestPydot.testUndirected": {
  "lineno": 52,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.drawing.tests.test_pylab": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.drawing.tests.test_pylab.TestPylab": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.drawing.tests.test_pylab.TestPylab.setUp": {
  "lineno": 25,
  "symbols_in_volume": [
   "networkx.barbell_graph"
  ],
  "type": "function"
 },
 "networkx.drawing.tests.test_pylab.TestPylab.setupClass": {
  "lineno": 12,
  "symbols_in_volume": [
   "matplotlib.pyplot.rcParams",
   "matplotlib.use",
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.drawing.tests.test_pylab.TestPylab.test_draw": {
  "lineno": 29,
  "symbols_in_volume": [
   "matplotlib.pyplot.savefig",
   "networkx.draw_circular",
   "networkx.draw_random",
   "networkx.draw_spectral",
   "networkx.draw_spring",
   "os.unlink"
  ],
  "type": "function"
 },
 "networkx.exception": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.exception.NetworkXAlgorithmError": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.exception.NetworkXError": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.exception.NetworkXException": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.exception.NetworkXNoCycle": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.exception.NetworkXNoPath": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.exception.NetworkXNotImplemented": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.exception.NetworkXPointlessConcept": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.exception.NetworkXUnbounded": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.exception.NetworkXUnfeasible": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.external": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators.atlas": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators.atlas.graph_atlas_g": {
  "lineno": 24,
  "symbols_in_volume": [
   "networkx.generators.small.make_small_graph"
  ],
  "type": "function"
 },
 "networkx.generators.classic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators.classic._tree_edges": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.classic.balanced_tree": {
  "lineno": 101,
  "symbols_in_volume": [
   "networkx.empty_graph",
   "networkx.full_rary_tree"
  ],
  "type": "function"
 },
 "networkx.generators.classic.barbell_graph": {
  "lineno": 139,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.generators.classic.circulant_graph": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.classic.circular_ladder_graph": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.classic.complete_graph": {
  "lineno": 184,
  "symbols_in_volume": [
   "itertools.combinations",
   "itertools.permutations"
  ],
  "type": "function"
 },
 "networkx.generators.classic.complete_multipartite_graph": {
  "lineno": 554,
  "symbols_in_volume": [
   "itertools.combinations",
   "itertools.product",
   "networkx.empty_graph",
   "networkx.utils.accumulate"
  ],
  "type": "function"
 },
 "networkx.generators.classic.cycle_graph": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.classic.dorogovtsev_goltsev_mendes_graph": {
  "lineno": 284,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.generators.classic.empty_graph": {
  "lineno": 311,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.generators.classic.full_rary_tree": {
  "lineno": 69,
  "symbols_in_volume": [
   "networkx.empty_graph"
  ],
  "type": "function"
 },
 "networkx.generators.classic.grid_2d_graph": {
  "lineno": 359,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.classic.grid_graph": {
  "lineno": 388,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.cartesian_product",
   "networkx.relabel_nodes",
   "networkx.utils.flatten",
   "networkx.utils.is_list_of_ints"
  ],
  "type": "function"
 },
 "networkx.generators.classic.hypercube_graph": {
  "lineno": 431,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.classic.ladder_graph": {
  "lineno": 442,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.generators.classic.lollipop_graph": {
  "lineno": 460,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.generators.classic.null_graph": {
  "lineno": 497,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.classic.path_graph": {
  "lineno": 507,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.classic.star_graph": {
  "lineno": 520,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.generators.complete_bipartite_graph"
  ],
  "type": "function"
 },
 "networkx.generators.classic.trivial_graph": {
  "lineno": 530,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.classic.wheel_graph": {
  "lineno": 538,
  "symbols_in_volume": [
   "networkx.empty_graph"
  ],
  "type": "function"
 },
 "networkx.generators.community": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators.community.caveman_graph": {
  "lineno": 18,
  "symbols_in_volume": [
   "itertools.combinations",
   "networkx.empty_graph"
  ],
  "type": "function"
 },
 "networkx.generators.community.connected_caveman_graph": {
  "lineno": 65,
  "symbols_in_volume": [
   "networkx.caveman_graph"
  ],
  "type": "function"
 },
 "networkx.generators.community.gaussian_random_partition_graph": {
  "lineno": 336,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "random.normalvariate"
  ],
  "type": "function"
 },
 "networkx.generators.community.planted_partition_graph": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.community.random_partition_graph": {
  "lineno": 161,
  "symbols_in_volume": [
   "math.log",
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.fast_gnp_random_graph",
   "random.random",
   "random.seed"
  ],
  "type": "function"
 },
 "networkx.generators.community.relaxed_caveman_graph": {
  "lineno": 109,
  "symbols_in_volume": [
   "networkx.caveman_graph",
   "random.choice",
   "random.random",
   "random.seed"
  ],
  "type": "function"
 },
 "networkx.generators.degree_seq": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators.degree_seq.DegreeSequenceRandomGraph": {
  "lineno": 692,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.generators.degree_seq.DegreeSequenceRandomGraph.__init__": {
  "lineno": 695,
  "symbols_in_volume": [
   "networkx.NetworkXUnfeasible",
   "networkx.is_valid_degree_sequence",
   "random.seed"
  ],
  "type": "function"
 },
 "networkx.generators.degree_seq.DegreeSequenceRandomGraph.generate": {
  "lineno": 708,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.generators.degree_seq.DegreeSequenceRandomGraph.p": {
  "lineno": 743,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.degree_seq.DegreeSequenceRandomGraph.phase1": {
  "lineno": 763,
  "symbols_in_volume": [
   "networkx.utils.random_weighted_sample",
   "random.random"
  ],
  "type": "function"
 },
 "networkx.generators.degree_seq.DegreeSequenceRandomGraph.phase2": {
  "lineno": 773,
  "symbols_in_volume": [
   "random.random",
   "random.sample"
  ],
  "type": "function"
 },
 "networkx.generators.degree_seq.DegreeSequenceRandomGraph.phase3": {
  "lineno": 787,
  "symbols_in_volume": [
   "itertools.combinations",
   "networkx.Graph",
   "networkx.NetworkXUnfeasible",
   "random.choice",
   "random.random"
  ],
  "type": "function"
 },
 "networkx.generators.degree_seq.DegreeSequenceRandomGraph.q": {
  "lineno": 747,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.degree_seq.DegreeSequenceRandomGraph.suitable_edge": {
  "lineno": 752,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.degree_seq.DegreeSequenceRandomGraph.update_remaining": {
  "lineno": 725,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.degree_seq.configuration_model": {
  "lineno": 34,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.NetworkXError",
   "networkx.empty_graph",
   "random.seed",
   "random.shuffle"
  ],
  "type": "function"
 },
 "networkx.generators.degree_seq.degree_sequence_tree": {
  "lineno": 593,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.empty_graph",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.generators.degree_seq.directed_configuration_model": {
  "lineno": 149,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.NetworkXError",
   "networkx.empty_graph",
   "random.seed",
   "random.shuffle"
  ],
  "type": "function"
 },
 "networkx.generators.degree_seq.directed_havel_hakimi_graph": {
  "lineno": 480,
  "symbols_in_volume": [
   "heapq.heapify",
   "heapq.heappop",
   "heapq.heappush",
   "networkx.DiGraph",
   "networkx.NetworkXError",
   "networkx.empty_graph",
   "networkx.utils.is_list_of_ints"
  ],
  "type": "function"
 },
 "networkx.generators.degree_seq.expected_degree_graph": {
  "lineno": 277,
  "symbols_in_volume": [
   "math.floor",
   "math.log",
   "networkx.empty_graph",
   "operator.itemgetter",
   "random.random",
   "random.seed"
  ],
  "type": "function"
 },
 "networkx.generators.degree_seq.havel_hakimi_graph": {
  "lineno": 385,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.empty_graph",
   "networkx.is_valid_degree_sequence"
  ],
  "type": "function"
 },
 "networkx.generators.degree_seq.random_degree_sequence_graph": {
  "lineno": 632,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.NetworkXUnfeasible"
  ],
  "type": "function"
 },
 "networkx.generators.directed": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators.directed.gn_graph": {
  "lineno": 24,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXError",
   "networkx.generators.classic.empty_graph",
   "networkx.utils.discrete_sequence",
   "random.seed"
  ],
  "type": "function"
 },
 "networkx.generators.directed.gnc_graph": {
  "lineno": 153,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXError",
   "networkx.generators.classic.empty_graph",
   "random.randrange",
   "random.seed"
  ],
  "type": "function"
 },
 "networkx.generators.directed.gnr_graph": {
  "lineno": 94,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXError",
   "networkx.generators.classic.empty_graph",
   "random.random",
   "random.randrange",
   "random.seed"
  ],
  "type": "function"
 },
 "networkx.generators.directed.scale_free_graph": {
  "lineno": 198,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.NetworkXError",
   "random.random",
   "random.seed"
  ],
  "type": "function"
 },
 "networkx.generators.directed.scale_free_graph._choose_node": {
  "lineno": 244,
  "symbols_in_volume": [
   "random.random"
  ],
  "type": "function"
 },
 "networkx.generators.ego": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators.ego.ego_graph": {
  "lineno": 16,
  "symbols_in_volume": [
   "networkx.single_source_dijkstra",
   "networkx.single_source_shortest_path_length"
  ],
  "type": "function"
 },
 "networkx.generators.expanders": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators.expanders.chordal_cycle_graph": {
  "lineno": 88,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.generators.expanders.margulis_gabber_galil_graph": {
  "lineno": 46,
  "symbols_in_volume": [
   "itertools.product",
   "networkx.MultiGraph",
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.generators.geometric": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators.geometric.geographical_threshold_edges": {
  "lineno": 190,
  "symbols_in_volume": [
   "math.sqrt"
  ],
  "type": "function"
 },
 "networkx.generators.geometric.geographical_threshold_graph": {
  "lineno": 106,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.set_node_attributes",
   "random.expovariate",
   "random.random"
  ],
  "type": "function"
 },
 "networkx.generators.geometric.navigable_small_world_graph": {
  "lineno": 297,
  "symbols_in_volume": [
   "bisect.bisect_left",
   "itertools.product",
   "networkx.DiGraph",
   "networkx.NetworkXException",
   "networkx.utils.accumulate",
   "random.seed",
   "random.uniform"
  ],
  "type": "function"
 },
 "networkx.generators.geometric.random_geometric_graph": {
  "lineno": 31,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.set_node_attributes",
   "random.random"
  ],
  "type": "function"
 },
 "networkx.generators.geometric.waxman_graph": {
  "lineno": 209,
  "symbols_in_volume": [
   "math.exp",
   "math.sqrt",
   "networkx.Graph",
   "networkx.get_node_attributes",
   "random.random"
  ],
  "type": "function"
 },
 "networkx.generators.intersection": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators.intersection.general_random_intersection_graph": {
  "lineno": 84,
  "symbols_in_volume": [
   "networkx.empty_graph",
   "networkx.projected_graph",
   "random.random"
  ],
  "type": "function"
 },
 "networkx.generators.intersection.k_random_intersection_graph": {
  "lineno": 52,
  "symbols_in_volume": [
   "networkx.empty_graph",
   "networkx.projected_graph",
   "random.sample"
  ],
  "type": "function"
 },
 "networkx.generators.intersection.uniform_random_intersection_graph": {
  "lineno": 22,
  "symbols_in_volume": [
   "networkx.algorithms.bipartite.random_graph",
   "networkx.projected_graph"
  ],
  "type": "function"
 },
 "networkx.generators.line": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators.line._edge_func": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.line._edge_func.get_edges": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.line._lg_directed": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.line._lg_undirected": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.line._node_func": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.line._node_func.sorted_node": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.line._sorted_edge": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.line.line_graph": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.nonisomorphic_trees": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators.nonisomorphic_trees._layout_to_graph": {
  "lineno": 184,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.generators.nonisomorphic_trees._layout_to_matrix": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.nonisomorphic_trees._next_rooted_tree": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.nonisomorphic_trees._next_tree": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.nonisomorphic_trees._split_tree": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.nonisomorphic_trees.nonisomorphic_trees": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.random_clustered": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators.random_clustered.random_clustered_graph": {
  "lineno": 18,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.NetworkXError",
   "networkx.empty_graph",
   "random.seed",
   "random.shuffle"
  ],
  "type": "function"
 },
 "networkx.generators.random_graphs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators.random_graphs._random_subset": {
  "lineno": 590,
  "symbols_in_volume": [
   "random.choice"
  ],
  "type": "function"
 },
 "networkx.generators.random_graphs.barabasi_albert_graph": {
  "lineno": 602,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.generators.classic.empty_graph",
   "random.seed"
  ],
  "type": "function"
 },
 "networkx.generators.random_graphs.connected_watts_strogatz_graph": {
  "lineno": 442,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.is_connected"
  ],
  "type": "function"
 },
 "networkx.generators.random_graphs.dense_gnm_random_graph": {
  "lineno": 188,
  "symbols_in_volume": [
   "networkx.generators.classic.complete_graph",
   "networkx.generators.classic.empty_graph",
   "random.randrange",
   "random.seed"
  ],
  "type": "function"
 },
 "networkx.generators.random_graphs.duplication_divergence_graph": {
  "lineno": 750,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "random.choice",
   "random.random",
   "random.seed"
  ],
  "type": "function"
 },
 "networkx.generators.random_graphs.fast_gnp_random_graph": {
  "lineno": 47,
  "symbols_in_volume": [
   "math.log",
   "networkx.DiGraph",
   "networkx.generators.classic.empty_graph",
   "networkx.gnp_random_graph",
   "random.random",
   "random.seed"
  ],
  "type": "function"
 },
 "networkx.generators.random_graphs.gnm_random_graph": {
  "lineno": 249,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.generators.classic.complete_graph",
   "random.choice",
   "random.seed"
  ],
  "type": "function"
 },
 "networkx.generators.random_graphs.gnp_random_graph": {
  "lineno": 124,
  "symbols_in_volume": [
   "itertools.combinations",
   "itertools.permutations",
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.generators.classic.complete_graph",
   "random.random",
   "random.seed"
  ],
  "type": "function"
 },
 "networkx.generators.random_graphs.newman_watts_strogatz_graph": {
  "lineno": 306,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.generators.classic.empty_graph",
   "random.choice",
   "random.random",
   "random.seed"
  ],
  "type": "function"
 },
 "networkx.generators.random_graphs.powerlaw_cluster_graph": {
  "lineno": 661,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.generators.classic.empty_graph",
   "random.choice",
   "random.random",
   "random.seed"
  ],
  "type": "function"
 },
 "networkx.generators.random_graphs.random_lobster": {
  "lineno": 818,
  "symbols_in_volume": [
   "networkx.generators.classic.path_graph",
   "random.random",
   "random.seed"
  ],
  "type": "function"
 },
 "networkx.generators.random_graphs.random_powerlaw_tree": {
  "lineno": 912,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.generators.degree_seq.degree_sequence_tree"
  ],
  "type": "function"
 },
 "networkx.generators.random_graphs.random_powerlaw_tree_sequence": {
  "lineno": 954,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.utils.powerlaw_sequence",
   "random.randint",
   "random.seed"
  ],
  "type": "function"
 },
 "networkx.generators.random_graphs.random_regular_graph": {
  "lineno": 479,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.generators.classic.empty_graph",
   "random.seed"
  ],
  "type": "function"
 },
 "networkx.generators.random_graphs.random_regular_graph._suitable": {
  "lineno": 532,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.random_graphs.random_regular_graph._try_creation": {
  "lineno": 551,
  "symbols_in_volume": [
   "collections.defaultdict",
   "random.shuffle"
  ],
  "type": "function"
 },
 "networkx.generators.random_graphs.random_shell_graph": {
  "lineno": 853,
  "symbols_in_volume": [
   "networkx.convert_node_labels_to_integers",
   "networkx.generators.classic.empty_graph",
   "networkx.operators.union",
   "random.choice",
   "random.seed"
  ],
  "type": "function"
 },
 "networkx.generators.random_graphs.watts_strogatz_graph": {
  "lineno": 372,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "random.choice",
   "random.random",
   "random.seed"
  ],
  "type": "function"
 },
 "networkx.generators.small": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators.small.LCF_graph": {
  "lineno": 110,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError",
   "networkx.generators.classic.cycle_graph",
   "networkx.generators.classic.empty_graph"
  ],
  "type": "function"
 },
 "networkx.generators.small.bull_graph": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.small.chvatal_graph": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.small.cubical_graph": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.small.desargues_graph": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.small.diamond_graph": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.small.dodecahedral_graph": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.small.frucht_graph": {
  "lineno": 234,
  "symbols_in_volume": [
   "networkx.generators.classic.cycle_graph"
  ],
  "type": "function"
 },
 "networkx.generators.small.heawood_graph": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.small.house_graph": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.small.house_x_graph": {
  "lineno": 265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.small.icosahedral_graph": {
  "lineno": 276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.small.krackhardt_kite_graph": {
  "lineno": 290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.small.make_small_graph": {
  "lineno": 55,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError",
   "networkx.generators.classic.empty_graph"
  ],
  "type": "function"
 },
 "networkx.generators.small.make_small_undirected_graph": {
  "lineno": 45,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.generators.small.moebius_kantor_graph": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.small.octahedral_graph": {
  "lineno": 317,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.small.pappus_graph": {
  "lineno": 328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.small.petersen_graph": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.small.sedgewick_maze_graph": {
  "lineno": 347,
  "symbols_in_volume": [
   "networkx.generators.classic.empty_graph"
  ],
  "type": "function"
 },
 "networkx.generators.small.tetrahedral_graph": {
  "lineno": 364,
  "symbols_in_volume": [
   "networkx.generators.classic.complete_graph"
  ],
  "type": "function"
 },
 "networkx.generators.small.truncated_cube_graph": {
  "lineno": 370,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.small.truncated_tetrahedron_graph": {
  "lineno": 386,
  "symbols_in_volume": [
   "networkx.generators.classic.path_graph"
  ],
  "type": "function"
 },
 "networkx.generators.small.tutte_graph": {
  "lineno": 394,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.social": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators.social.davis_southern_women_graph": {
  "lineno": 97,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.generators.social.florentine_families_graph": {
  "lineno": 238,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.generators.social.karate_club_graph": {
  "lineno": 13,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.generators.stochastic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators.stochastic.stochastic_graph": {
  "lineno": 21,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.utils.not_implemented_for",
   "warnings.warn"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_atlas": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators.tests.test_atlas.TestAtlas": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.generators.tests.test_atlas.TestAtlas.setUp": {
  "lineno": 13,
  "symbols_in_volume": [
   "networkx.generators.atlas.graph_atlas_g"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_atlas.TestAtlas.setupClass": {
  "lineno": 5,
  "symbols_in_volume": [
   "nose.SkipTest",
   "platform.python_implementation"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_atlas.TestAtlas.test_monotone_degree_sequence": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_atlas.TestAtlas.test_monotone_nodes": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_atlas.TestAtlas.test_names": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_atlas.TestAtlas.test_sizes": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_classic": {
  "lineno": null,
  "symbols_in_volume": [
   "networkx.algorithms.isomorphism.isomorph.graph_could_be_isomorphic"
  ],
  "type": "module"
 },
 "networkx.generators.tests.test_classic.TestGeneratorClassic": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.generators.tests.test_classic.TestGeneratorClassic.test_balanced_tree": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_classic.TestGeneratorClassic.test_balanced_tree_star": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_classic.TestGeneratorClassic.test_barbell_graph": {
  "lineno": 77,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_classic.TestGeneratorClassic.test_circulant_graph": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_classic.TestGeneratorClassic.test_circular_ladder_graph": {
  "lineno": 145,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_classic.TestGeneratorClassic.test_complete_0_partite_graph": {
  "lineno": 399,
  "symbols_in_volume": [
   "networkx.complete_multipartite_graph",
   "networkx.null_graph",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_classic.TestGeneratorClassic.test_complete_1_partite_graph": {
  "lineno": 406,
  "symbols_in_volume": [
   "networkx.complete_multipartite_graph",
   "networkx.empty_graph",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_classic.TestGeneratorClassic.test_complete_2_partite_graph": {
  "lineno": 413,
  "symbols_in_volume": [
   "networkx.complete_bipartite_graph",
   "networkx.complete_multipartite_graph",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_classic.TestGeneratorClassic.test_complete_digraph": {
  "lineno": 137,
  "symbols_in_volume": [
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_classic.TestGeneratorClassic.test_complete_graph": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_classic.TestGeneratorClassic.test_complete_multipartite_graph": {
  "lineno": 423,
  "symbols_in_volume": [
   "itertools.combinations",
   "itertools.combinations_with_replacement",
   "itertools.product",
   "networkx.complete_multipartite_graph"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_classic.TestGeneratorClassic.test_cycle_graph": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_classic.TestGeneratorClassic.test_dorogovtsev_goltsev_mendes_graph": {
  "lineno": 177,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_classic.TestGeneratorClassic.test_empty_graph": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_classic.TestGeneratorClassic.test_full_rary_tree": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_classic.TestGeneratorClassic.test_full_rary_tree_3_20": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_classic.TestGeneratorClassic.test_full_rary_tree_balanced": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_classic.TestGeneratorClassic.test_full_rary_tree_empty": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_classic.TestGeneratorClassic.test_full_rary_tree_path": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_classic.TestGeneratorClassic.test_grid_2d_graph": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_classic.TestGeneratorClassic.test_grid_graph": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_classic.TestGeneratorClassic.test_hypercube_graph": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_classic.TestGeneratorClassic.test_ladder_graph": {
  "lineno": 279,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_classic.TestGeneratorClassic.test_lollipop_graph": {
  "lineno": 291,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_classic.TestGeneratorClassic.test_null_graph": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_classic.TestGeneratorClassic.test_path_graph": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_classic.TestGeneratorClassic.test_periodic_grid_2d_graph": {
  "lineno": 345,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_classic.TestGeneratorClassic.test_star_graph": {
  "lineno": 362,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_classic.TestGeneratorClassic.test_trivial_graph": {
  "lineno": 377,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_classic.TestGeneratorClassic.test_wheel_graph": {
  "lineno": 380,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_community": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators.tests.test_community.test_caveman_graph": {
  "lineno": 105,
  "symbols_in_volume": [
   "networkx.caveman_graph",
   "networkx.complete_graph",
   "networkx.is_isomorphic"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_community.test_connected_caveman_graph": {
  "lineno": 95,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.connected_caveman_graph",
   "networkx.is_isomorphic"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_community.test_gaussian_random_partition_graph": {
  "lineno": 114,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.gaussian_random_partition_graph"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_community.test_planted_partition_graph": {
  "lineno": 40,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.planted_partition_graph"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_community.test_random_partition_graph": {
  "lineno": 4,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.random_partition_graph"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_community.test_relaxed_caveman_graph": {
  "lineno": 82,
  "symbols_in_volume": [
   "networkx.relaxed_caveman_graph"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_degree_seq": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators.tests.test_degree_seq.test_configuation_raise": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_degree_seq.test_configuation_raise_odd": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_degree_seq.test_configuration_model": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_degree_seq.test_configuration_model_empty": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_degree_seq.test_degree_sequence_tree": {
  "lineno": 142,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_degree_seq.test_directed_configuation_mode": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_degree_seq.test_directed_configuation_raise_unequal": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_degree_seq.test_directed_havel_hakimi": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_degree_seq.test_expected_degree_graph": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_degree_seq.test_expected_degree_graph_empty": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_degree_seq.test_expected_degree_graph_selfloops": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_degree_seq.test_expected_degree_graph_skew": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_degree_seq.test_havel_hakimi_construction": {
  "lineno": 85,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_degree_seq.test_random_degree_sequence_graph": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_degree_seq.test_random_degree_sequence_graph_raise": {
  "lineno": 160,
  "symbols_in_volume": [
   "networkx.exception.NetworkXUnfeasible"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_degree_seq.test_random_degree_sequence_large": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_directed": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators.tests.test_directed.TestGeneratorsDirected": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.generators.tests.test_directed.TestGeneratorsDirected.test_create_using_keyword_arguments": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_directed.TestGeneratorsDirected.test_smoke_test_random_graphs": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_ego": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators.tests.test_ego.TestGeneratorEgo": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.generators.tests.test_ego.TestGeneratorEgo.test_ego": {
  "lineno": 11,
  "symbols_in_volume": [
   "networkx.ego_graph",
   "networkx.is_isomorphic",
   "networkx.path_graph",
   "networkx.star_graph",
   "nose.tools.assert_equal",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_ego.TestGeneratorEgo.test_ego_distance": {
  "lineno": 29,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.ego_graph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_expanders": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators.tests.test_expanders.test_chordal_cycle_graph": {
  "lineno": 52,
  "symbols_in_volume": [
   "networkx.generators.expanders.chordal_cycle_graph",
   "nose.SkipTest",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_expanders.test_margulis_gabber_galil_graph": {
  "lineno": 26,
  "symbols_in_volume": [
   "networkx.adjacency_matrix",
   "networkx.generators.expanders.margulis_gabber_galil_graph",
   "networkx.number_of_nodes",
   "nose.tools.assert_equal",
   "nose.tools.assert_less",
   "nose.tools.assert_true",
   "numpy.sqrt",
   "scipy.linalg.eigvalsh"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_expanders.test_margulis_gabber_galil_graph_badinput": {
  "lineno": 68,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.generators.expanders.margulis_gabber_galil_graph",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_geometric": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators.tests.test_geometric.TestGeneratorsGeometric": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.generators.tests.test_geometric.TestGeneratorsGeometric.test_geographical_threshold_graph": {
  "lineno": 10,
  "symbols_in_volume": [
   "networkx.geographical_threshold_graph"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_geometric.TestGeneratorsGeometric.test_naviable_small_world": {
  "lineno": 20,
  "symbols_in_volume": [
   "networkx.grid_2d_graph",
   "networkx.grid_graph",
   "networkx.is_isomorphic",
   "networkx.navigable_small_world_graph"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_geometric.TestGeneratorsGeometric.test_random_geometric_graph": {
  "lineno": 6,
  "symbols_in_volume": [
   "networkx.random_geometric_graph"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_geometric.TestGeneratorsGeometric.test_waxman_graph": {
  "lineno": 14,
  "symbols_in_volume": [
   "networkx.waxman_graph"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_intersection": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators.tests.test_intersection.TestIntersectionGraph": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.generators.tests.test_intersection.TestIntersectionGraph.test_general_random_intersection_graph": {
  "lineno": 14,
  "symbols_in_volume": [
   "networkx.general_random_intersection_graph"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_intersection.TestIntersectionGraph.test_k_random_intersection_graph": {
  "lineno": 10,
  "symbols_in_volume": [
   "networkx.k_random_intersection_graph"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_intersection.TestIntersectionGraph.test_random_intersection_graph": {
  "lineno": 6,
  "symbols_in_volume": [
   "networkx.uniform_random_intersection_graph"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_line": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators.tests.test_line.TestGeneratorLine": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.generators.tests.test_line.TestGeneratorLine.test_create1": {
  "lineno": 75,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.line_graph"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_line.TestGeneratorLine.test_create2": {
  "lineno": 81,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.line_graph"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_line.TestGeneratorLine.test_cycle": {
  "lineno": 57,
  "symbols_in_volume": [
   "networkx.cycle_graph",
   "networkx.is_isomorphic",
   "networkx.line_graph"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_line.TestGeneratorLine.test_digraph1": {
  "lineno": 62,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.line_graph"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_line.TestGeneratorLine.test_digraph2": {
  "lineno": 69,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.line_graph"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_line.TestGeneratorLine.test_path": {
  "lineno": 52,
  "symbols_in_volume": [
   "networkx.is_isomorphic",
   "networkx.line_graph",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_line.TestGeneratorLine.test_star": {
  "lineno": 47,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.is_isomorphic",
   "networkx.line_graph",
   "networkx.star_graph"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_line.test_edge_func": {
  "lineno": 22,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.MultiDiGraph",
   "networkx.generators.line._edge_func"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_line.test_node_func": {
  "lineno": 6,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.MultiGraph",
   "networkx.generators.line._node_func"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_line.test_sorted_edge": {
  "lineno": 42,
  "symbols_in_volume": [
   "networkx.generators.line._sorted_edge"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_nonisomorphic_trees": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators.tests.test_nonisomorphic_trees.TestGeneratorNonIsomorphicTrees": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.generators.tests.test_nonisomorphic_trees.TestGeneratorNonIsomorphicTrees.test_nonisomorphic_trees": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_nonisomorphic_trees.TestGeneratorNonIsomorphicTrees.test_nonisomorphism": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_nonisomorphic_trees.TestGeneratorNonIsomorphicTrees.test_number_of_nonisomorphic_trees": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_nonisomorphic_trees.TestGeneratorNonIsomorphicTrees.test_tree_structure": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_random_clustered": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators.tests.test_random_clustered.TestRandomClusteredGraph": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.generators.tests.test_random_clustered.TestRandomClusteredGraph.test_invalid1": {
  "lineno": 21,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.random_clustered_graph"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_random_clustered.TestRandomClusteredGraph.test_invalid2": {
  "lineno": 25,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.random_clustered_graph"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_random_clustered.TestRandomClusteredGraph.test_valid": {
  "lineno": 7,
  "symbols_in_volume": [
   "networkx.random_clustered_graph"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_random_clustered.TestRandomClusteredGraph.test_valid2": {
  "lineno": 15,
  "symbols_in_volume": [
   "networkx.random_clustered_graph"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_random_graphs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators.tests.test_random_graphs.TestGeneratorsRandom": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.generators.tests.test_random_graphs.TestGeneratorsRandom.smoke_test_random_graph": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_random_graphs.TestGeneratorsRandom.test_gnm": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_random_graphs.TestGeneratorsRandom.test_gnp": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_random_graphs.TestGeneratorsRandom.test_random_zero_regular_graph": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_random_graphs.TestGeneratorsRandom.test_watts_strogatz_big_k": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_small": {
  "lineno": null,
  "symbols_in_volume": [
   "networkx.algorithms.isomorphism.isomorph.graph_could_be_isomorphic"
  ],
  "type": "module"
 },
 "networkx.generators.tests.test_small.TestGeneratorsSmall": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.generators.tests.test_small.TestGeneratorsSmall.test__LCF_graph": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_small.TestGeneratorsSmall.test_make_small_graph": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_small.TestGeneratorsSmall.test_properties_named_small_graphs": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.tests.test_stochastic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators.tests.test_stochastic.test_stochastic": {
  "lineno": 4,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.is_isomorphic",
   "networkx.stochastic_graph",
   "nose.tools.assert_equal",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_stochastic.test_stochastic_graph_input": {
  "lineno": 27,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXNotImplemented",
   "networkx.stochastic_graph",
   "nose.tools.raises"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_stochastic.test_stochastic_ints": {
  "lineno": 18,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.stochastic_graph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_stochastic.test_stochastic_multigraph_input": {
  "lineno": 31,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.NetworkXNotImplemented",
   "networkx.stochastic_graph",
   "nose.tools.raises"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_threshold": {
  "lineno": null,
  "symbols_in_volume": [
   "networkx.convert_node_labels_to_integers"
  ],
  "type": "module"
 },
 "networkx.generators.tests.test_threshold.TestGeneratorThreshold": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.generators.tests.test_threshold.TestGeneratorThreshold.test_create_using": {
  "lineno": 177,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.MultiGraph",
   "networkx.exception.NetworkXError",
   "networkx.generators.threshold.threshold_graph"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_threshold.TestGeneratorThreshold.test_creation_sequences": {
  "lineno": 36,
  "symbols_in_volume": [
   "networkx.algorithms.isomorphism.isomorph.graph_could_be_isomorphic",
   "networkx.generators.havel_hakimi_graph",
   "networkx.generators.threshold.creation_sequence",
   "networkx.generators.threshold.threshold_graph",
   "networkx.generators.threshold.uncompact"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_threshold.TestGeneratorThreshold.test_eigenvectors": {
  "lineno": 155,
  "symbols_in_volume": [
   "networkx.generators.threshold.eigenvectors",
   "networkx.generators.threshold.threshold_graph",
   "networkx.laplacian_matrix",
   "nose.SkipTest",
   "nose.plugins.attrib.attr",
   "numpy.dot",
   "numpy.linalg.eigvals"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_threshold.TestGeneratorThreshold.test_fast_versions_properties_threshold_graphs": {
  "lineno": 120,
  "symbols_in_volume": [
   "networkx.betweenness_centrality",
   "networkx.clustering",
   "networkx.density",
   "networkx.generators.threshold.betweenness_sequence",
   "networkx.generators.threshold.cluster_sequence",
   "networkx.generators.threshold.degree_correlation",
   "networkx.generators.threshold.degree_sequence",
   "networkx.generators.threshold.density",
   "networkx.generators.threshold.eigenvalues",
   "networkx.generators.threshold.threshold_graph",
   "networkx.generators.threshold.triangle_sequence",
   "networkx.generators.threshold.triangles",
   "networkx.triangles"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_threshold.TestGeneratorThreshold.test_finding_routines": {
  "lineno": 101,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.generators.threshold.creation_sequence",
   "networkx.generators.threshold.find_alternating_4_cycle",
   "networkx.generators.threshold.find_creation_sequence",
   "networkx.generators.threshold.find_threshold_graph",
   "networkx.generators.threshold.is_threshold_graph"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_threshold.TestGeneratorThreshold.test_shortest_path": {
  "lineno": 55,
  "symbols_in_volume": [
   "networkx.generators.havel_hakimi_graph",
   "networkx.generators.threshold.creation_sequence",
   "networkx.generators.threshold.shortest_path",
   "networkx.generators.threshold.shortest_path_length",
   "networkx.shortest_path",
   "networkx.single_source_shortest_path_length"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_threshold.TestGeneratorThreshold.test_tg_creation_routines": {
  "lineno": 149,
  "symbols_in_volume": [
   "networkx.generators.threshold.left_d_threshold_sequence",
   "networkx.generators.threshold.right_d_threshold_sequence",
   "networkx.generators.threshold.swap_d"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_threshold.TestGeneratorThreshold.test_threshold_sequence_graph_test": {
  "lineno": 18,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.generators.havel_hakimi_graph",
   "networkx.generators.threshold.is_threshold_graph",
   "networkx.generators.threshold.is_threshold_sequence",
   "networkx.star_graph"
  ],
  "type": "function"
 },
 "networkx.generators.tests.test_threshold.TestGeneratorThreshold.test_weights_thresholds": {
  "lineno": 74,
  "symbols_in_volume": [
   "networkx.generators.threshold.creation_sequence_to_weights",
   "networkx.generators.threshold.uncompact",
   "networkx.generators.threshold.weights_to_creation_sequence"
  ],
  "type": "function"
 },
 "networkx.generators.threshold": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.generators.threshold.betweenness_sequence": {
  "lineno": 597,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.threshold.cluster_sequence": {
  "lineno": 422,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.threshold.creation_sequence": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.threshold.creation_sequence_to_weights": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.threshold.degree_correlation": {
  "lineno": 466,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.threshold.degree_sequence": {
  "lineno": 439,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.threshold.density": {
  "lineno": 455,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.threshold.eigenvalues": {
  "lineno": 715,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.threshold.eigenvectors": {
  "lineno": 637,
  "symbols_in_volume": [
   "math.sqrt"
  ],
  "type": "function"
 },
 "networkx.generators.threshold.find_alternating_4_cycle": {
  "lineno": 317,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.threshold.find_creation_sequence": {
  "lineno": 342,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.threshold.find_threshold_graph": {
  "lineno": 333,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.threshold.is_threshold_graph": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.threshold.is_threshold_sequence": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.threshold.left_d_threshold_sequence": {
  "lineno": 826,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.threshold.make_compact": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.threshold.random_threshold_sequence": {
  "lineno": 756,
  "symbols_in_volume": [
   "random.random",
   "random.seed"
  ],
  "type": "function"
 },
 "networkx.generators.threshold.right_d_threshold_sequence": {
  "lineno": 793,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.threshold.shortest_path": {
  "lineno": 500,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.threshold.shortest_path_length": {
  "lineno": 551,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.threshold.spectral_projection": {
  "lineno": 693,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.threshold.swap_d": {
  "lineno": 860,
  "symbols_in_volume": [
   "random.choice",
   "random.random",
   "random.seed"
  ],
  "type": "function"
 },
 "networkx.generators.threshold.threshold_graph": {
  "lineno": 265,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.generators.threshold.triangle_sequence": {
  "lineno": 395,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.threshold.triangles": {
  "lineno": 375,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.threshold.uncompact": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.generators.threshold.weights_to_creation_sequence": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.linalg": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.linalg.algebraicconnectivity": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.dot",
   "numpy.linalg.norm",
   "re.compile",
   "scipy.linalg.blas.dasum",
   "scipy.linalg.blas.ddot"
  ],
  "type": "module"
 },
 "networkx.linalg.algebraicconnectivity._CholeskySolver": {
  "lineno": 86,
  "symbols_in_volume": [
   "scikits.sparse.cholmod.cholesky"
  ],
  "type": "class"
 },
 "networkx.linalg.algebraicconnectivity._CholeskySolver.__init__": {
  "lineno": 90,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.linalg.algebraicconnectivity._CholeskySolver.solve": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.linalg.algebraicconnectivity._LUSolver": {
  "lineno": 105,
  "symbols_in_volume": [
   "functools.partial",
   "scipy.sparse.linalg.splu"
  ],
  "type": "class"
 },
 "networkx.linalg.algebraicconnectivity._LUSolver.__init__": {
  "lineno": 109,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.linalg.algebraicconnectivity._LUSolver.solve": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "networkx.linalg.algebraicconnectivity._PCGSolver": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.linalg.algebraicconnectivity._PCGSolver.__init__": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.linalg.algebraicconnectivity._PCGSolver._solve": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.zeros",
   "scipy.linalg.blas.dasum",
   "scipy.linalg.blas.daxpy",
   "scipy.linalg.blas.ddot"
  ],
  "type": "function"
 },
 "networkx.linalg.algebraicconnectivity._PCGSolver.solve": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "networkx.linalg.algebraicconnectivity._get_fiedler_func": {
  "lineno": 265,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.linalg.algebraicconnectivity._get_fiedler_func.find_fiedler": {
  "lineno": 277,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.asmatrix",
   "numpy.ones",
   "numpy.sqrt",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.linalg.eigsh",
   "scipy.sparse.linalg.lobpcg",
   "scipy.sparse.spdiags"
  ],
  "type": "function"
 },
 "networkx.linalg.algebraicconnectivity._preprocess_graph": {
  "lineno": 129,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.MultiGraph"
  ],
  "type": "function"
 },
 "networkx.linalg.algebraicconnectivity._rcm_estimate": {
  "lineno": 151,
  "symbols_in_volume": [
   "networkx.utils.reverse_cuthill_mckee_ordering",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "networkx.linalg.algebraicconnectivity._tracemin_fiedler": {
  "lineno": 165,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "numpy.asarray",
   "numpy.asmatrix",
   "numpy.linalg.norm",
   "numpy.linalg.qr",
   "numpy.ndarray",
   "numpy.sqrt",
   "scipy.linalg.blas.dasum",
   "scipy.linalg.eigh",
   "scipy.linalg.inv",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.spdiags"
  ],
  "type": "function"
 },
 "networkx.linalg.algebraicconnectivity._tracemin_fiedler.P": {
  "lineno": 198,
  "symbols_in_volume": [
   "numpy.asarray",
   "scipy.linalg.blas.daxpy",
   "scipy.linalg.blas.ddot"
  ],
  "type": "function"
 },
 "networkx.linalg.algebraicconnectivity._tracemin_fiedler.project": {
  "lineno": 186,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.dot"
  ],
  "type": "function"
 },
 "networkx.linalg.algebraicconnectivity.algebraic_connectivity": {
  "lineno": 305,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.is_connected",
   "networkx.laplacian_matrix",
   "networkx.utils.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.linalg.algebraicconnectivity.daxpy": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.linalg.algebraicconnectivity.fiedler_vector": {
  "lineno": 385,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.is_connected",
   "networkx.laplacian_matrix",
   "networkx.utils.not_implemented_for",
   "numpy.array"
  ],
  "type": "function"
 },
 "networkx.linalg.algebraicconnectivity.setup_module": {
  "lineno": 549,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.linalg.algebraicconnectivity.spectral_ordering": {
  "lineno": 466,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.connected_components",
   "networkx.laplacian_matrix"
  ],
  "type": "function"
 },
 "networkx.linalg.attrmatrix": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.linalg.attrmatrix._edge_value": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.linalg.attrmatrix._node_value": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.linalg.attrmatrix.attr_matrix": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.asmatrix",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "networkx.linalg.attrmatrix.attr_sparse_matrix": {
  "lineno": 283,
  "symbols_in_volume": [
   "numpy.asarray",
   "scipy.sparse.lil_matrix"
  ],
  "type": "function"
 },
 "networkx.linalg.attrmatrix.setup_module": {
  "lineno": 448,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.linalg.graphmatrix": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.linalg.graphmatrix.adjacency_matrix": {
  "lineno": 106,
  "symbols_in_volume": [
   "networkx.to_scipy_sparse_matrix"
  ],
  "type": "function"
 },
 "networkx.linalg.graphmatrix.incidence_matrix": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.linalg.graphmatrix.setup_module": {
  "lineno": 165,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.linalg.laplacianmatrix": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.linalg.laplacianmatrix.directed_laplacian_matrix": {
  "lineno": 134,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.is_aperiodic",
   "networkx.is_strongly_connected",
   "networkx.to_scipy_sparse_matrix",
   "networkx.utils.not_implemented_for",
   "scipy.array",
   "scipy.identity",
   "scipy.sparse.identity",
   "scipy.sparse.linalg.eigs",
   "scipy.sparse.spdiags",
   "scipy.sqrt",
   "scipy.where"
  ],
  "type": "function"
 },
 "networkx.linalg.laplacianmatrix.laplacian_matrix": {
  "lineno": 19,
  "symbols_in_volume": [
   "networkx.to_scipy_sparse_matrix",
   "networkx.utils.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.linalg.laplacianmatrix.normalized_laplacian_matrix": {
  "lineno": 63,
  "symbols_in_volume": [
   "networkx.to_scipy_sparse_matrix",
   "networkx.utils.not_implemented_for",
   "scipy.errstate",
   "scipy.isinf",
   "scipy.sparse.spdiags",
   "scipy.sqrt"
  ],
  "type": "function"
 },
 "networkx.linalg.laplacianmatrix.setup_module": {
  "lineno": 248,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.linalg.modularitymatrix": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.linalg.modularitymatrix.directed_modularity_matrix": {
  "lineno": 77,
  "symbols_in_volume": [
   "networkx.to_scipy_sparse_matrix",
   "networkx.utils.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.linalg.modularitymatrix.modularity_matrix": {
  "lineno": 19,
  "symbols_in_volume": [
   "networkx.to_scipy_sparse_matrix",
   "networkx.utils.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.linalg.modularitymatrix.setup_module": {
  "lineno": 145,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.linalg.spectrum": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.linalg.spectrum.adjacency_spectrum": {
  "lineno": 48,
  "symbols_in_volume": [
   "networkx.adjacency_matrix",
   "scipy.linalg.eigvals"
  ],
  "type": "function"
 },
 "networkx.linalg.spectrum.laplacian_spectrum": {
  "lineno": 19,
  "symbols_in_volume": [
   "networkx.laplacian_matrix",
   "scipy.linalg.eigvalsh"
  ],
  "type": "function"
 },
 "networkx.linalg.spectrum.modularity_spectrum": {
  "lineno": 77,
  "symbols_in_volume": [
   "networkx.directed_modularity_matrix",
   "networkx.modularity_matrix",
   "scipy.linalg.eigvals"
  ],
  "type": "function"
 },
 "networkx.linalg.spectrum.setup_module": {
  "lineno": 106,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_algebraic_connectivity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.linalg.tests.test_algebraic_connectivity.TestAlgebraicConnectivity": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.linalg.tests.test_algebraic_connectivity.TestAlgebraicConnectivity.setupClass": {
  "lineno": 52,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_algebraic_connectivity.TestAlgebraicConnectivity.test_buckminsterfullerene": {
  "lineno": 149,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.algebraic_connectivity",
   "networkx.fiedler_vector",
   "networkx.laplacian_matrix",
   "networkx.normalized_laplacian_matrix"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_algebraic_connectivity.TestAlgebraicConnectivity.test_cycle": {
  "lineno": 138,
  "symbols_in_volume": [
   "math.sqrt",
   "networkx.algebraic_connectivity",
   "networkx.cycle_graph",
   "networkx.fiedler_vector",
   "networkx.laplacian_matrix"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_algebraic_connectivity.TestAlgebraicConnectivity.test_directed": {
  "lineno": 61,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXNotImplemented",
   "networkx.algebraic_connectivity",
   "networkx.fiedler_vector"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_algebraic_connectivity.TestAlgebraicConnectivity.test_disconnected": {
  "lineno": 85,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.algebraic_connectivity",
   "networkx.fiedler_vector"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_algebraic_connectivity.TestAlgebraicConnectivity.test_null_and_singleton": {
  "lineno": 70,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.algebraic_connectivity",
   "networkx.fiedler_vector"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_algebraic_connectivity.TestAlgebraicConnectivity.test_path": {
  "lineno": 127,
  "symbols_in_volume": [
   "math.sqrt",
   "networkx.algebraic_connectivity",
   "networkx.fiedler_vector",
   "networkx.laplacian_matrix",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_algebraic_connectivity.TestAlgebraicConnectivity.test_two_nodes": {
  "lineno": 106,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.MultiGraph",
   "networkx.algebraic_connectivity",
   "networkx.fiedler_vector",
   "networkx.laplacian_matrix"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_algebraic_connectivity.TestAlgebraicConnectivity.test_unrecognized_method": {
  "lineno": 99,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.algebraic_connectivity",
   "networkx.fiedler_vector",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_algebraic_connectivity.TestSpectralOrdering": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.linalg.tests.test_algebraic_connectivity.TestSpectralOrdering.setupClass": {
  "lineno": 194,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_algebraic_connectivity.TestSpectralOrdering.test_cycle": {
  "lineno": 264,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.laplacian_matrix",
   "networkx.spectral_ordering"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_algebraic_connectivity.TestSpectralOrdering.test_disconnected": {
  "lineno": 251,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.spectral_ordering"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_algebraic_connectivity.TestSpectralOrdering.test_nullgraph": {
  "lineno": 203,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.MultiDiGraph",
   "networkx.MultiGraph",
   "networkx.NetworkXError",
   "networkx.spectral_ordering"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_algebraic_connectivity.TestSpectralOrdering.test_path": {
  "lineno": 241,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.spectral_ordering",
   "numpy.random.shuffle"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_algebraic_connectivity.TestSpectralOrdering.test_singleton": {
  "lineno": 209,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.MultiDiGraph",
   "networkx.MultiGraph",
   "networkx.spectral_ordering"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_algebraic_connectivity.TestSpectralOrdering.test_three_nodes": {
  "lineno": 225,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.MultiDiGraph",
   "networkx.spectral_ordering"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_algebraic_connectivity.TestSpectralOrdering.test_unrecognized_method": {
  "lineno": 219,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.path_graph",
   "networkx.spectral_ordering"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_algebraic_connectivity.check_eigenvector": {
  "lineno": 36,
  "symbols_in_volume": [
   "networkx"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_algebraic_connectivity.preserve_random_state": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.linalg.tests.test_algebraic_connectivity.preserve_random_state.wrapper": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_algebraic_connectivity.save_random_state": {
  "lineno": 28,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_graphmatrix": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.linalg.tests.test_graphmatrix.TestGraphMatrix": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.linalg.tests.test_graphmatrix.TestGraphMatrix.setUp": {
  "lineno": 20,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.MultiGraph",
   "networkx.generators.degree_seq.havel_hakimi_graph",
   "numpy.array"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_graphmatrix.TestGraphMatrix.setupClass": {
  "lineno": 8,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_graphmatrix.TestGraphMatrix.test_adjacency_matrix": {
  "lineno": 80,
  "symbols_in_volume": [
   "networkx.adj_matrix",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_graphmatrix.TestGraphMatrix.test_incidence_matrix": {
  "lineno": 55,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.incidence_matrix",
   "numpy.abs",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_laplacian": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.linalg.tests.test_laplacian.TestLaplacian": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.linalg.tests.test_laplacian.TestLaplacian.setUp": {
  "lineno": 21,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.MultiGraph",
   "networkx.generators.degree_seq.havel_hakimi_graph"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_laplacian.TestLaplacian.setupClass": {
  "lineno": 8,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_laplacian.TestLaplacian.test_directed_laplacian": {
  "lineno": 76,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.directed_laplacian_matrix",
   "numpy.array",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_laplacian.TestLaplacian.test_laplacian": {
  "lineno": 35,
  "symbols_in_volume": [
   "networkx.laplacian_matrix",
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_laplacian.TestLaplacian.test_normalized_laplacian": {
  "lineno": 52,
  "symbols_in_volume": [
   "networkx.normalized_laplacian_matrix",
   "numpy.array",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_modularity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.linalg.tests.test_modularity.TestModularity": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.linalg.tests.test_modularity.TestModularity.setUp": {
  "lineno": 23,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.generators.degree_seq.havel_hakimi_graph"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_modularity.TestModularity.setupClass": {
  "lineno": 10,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_modularity.TestModularity.test_directed_modularity": {
  "lineno": 46,
  "symbols_in_volume": [
   "networkx.directed_modularity_matrix",
   "numpy.ix_",
   "numpy.matrix",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_modularity.TestModularity.test_modularity": {
  "lineno": 33,
  "symbols_in_volume": [
   "networkx.modularity_matrix",
   "numpy.ix_",
   "numpy.matrix",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_spectrum": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.linalg.tests.test_spectrum.TestSpectrum": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.linalg.tests.test_spectrum.TestSpectrum.setUp": {
  "lineno": 20,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.generators.degree_seq.havel_hakimi_graph",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_spectrum.TestSpectrum.setupClass": {
  "lineno": 8,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_spectrum.TestSpectrum.test_adjacency_spectrum": {
  "lineno": 42,
  "symbols_in_volume": [
   "networkx.adjacency_spectrum",
   "numpy.array",
   "numpy.sqrt",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_spectrum.TestSpectrum.test_laplacian_spectrum": {
  "lineno": 30,
  "symbols_in_volume": [
   "networkx.laplacian_spectrum",
   "numpy.array",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "networkx.linalg.tests.test_spectrum.TestSpectrum.test_modularity_spectrum": {
  "lineno": 48,
  "symbols_in_volume": [
   "networkx.modularity_spectrum",
   "numpy.array",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "networkx.readwrite": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.adjlist": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.adjlist.generate_adjlist": {
  "lineno": 44,
  "symbols_in_volume": [
   "networkx.utils.make_str"
  ],
  "type": "function"
 },
 "networkx.readwrite.adjlist.parse_adjlist": {
  "lineno": 147,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.readwrite.adjlist.read_adjlist": {
  "lineno": 229,
  "symbols_in_volume": [
   "networkx.utils.open_file"
  ],
  "type": "function"
 },
 "networkx.readwrite.adjlist.teardown_module": {
  "lineno": 311,
  "symbols_in_volume": [
   "os.path.isfile",
   "os.unlink"
  ],
  "type": "function"
 },
 "networkx.readwrite.adjlist.write_adjlist": {
  "lineno": 93,
  "symbols_in_volume": [
   "networkx.utils.open_file",
   "sys.argv",
   "time.asctime",
   "time.gmtime"
  ],
  "type": "function"
 },
 "networkx.readwrite.edgelist": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.edgelist.generate_edgelist": {
  "lineno": 47,
  "symbols_in_volume": [
   "networkx.utils.make_str"
  ],
  "type": "function"
 },
 "networkx.readwrite.edgelist.parse_edgelist": {
  "lineno": 174,
  "symbols_in_volume": [
   "ast.literal_eval",
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.readwrite.edgelist.read_edgelist": {
  "lineno": 299,
  "symbols_in_volume": [
   "networkx.utils.open_file"
  ],
  "type": "function"
 },
 "networkx.readwrite.edgelist.read_weighted_edgelist": {
  "lineno": 407,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.edgelist.teardown_module": {
  "lineno": 462,
  "symbols_in_volume": [
   "os.path.isfile",
   "os.unlink"
  ],
  "type": "function"
 },
 "networkx.readwrite.edgelist.write_edgelist": {
  "lineno": 124,
  "symbols_in_volume": [
   "networkx.utils.open_file"
  ],
  "type": "function"
 },
 "networkx.readwrite.edgelist.write_weighted_edgelist": {
  "lineno": 372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.gexf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.gexf.GEXF": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.readwrite.gexf.GEXF.set_version": {
  "lineno": 230,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.readwrite.gexf.GEXFReader": {
  "lineno": 602,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.readwrite.gexf.GEXFReader.__call__": {
  "lineno": 616,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "xml.etree.ElementTree.ElementTree"
  ],
  "type": "function"
 },
 "networkx.readwrite.gexf.GEXFReader.__init__": {
  "lineno": 605,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.gexf.GEXFReader.add_edge": {
  "lineno": 824,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.readwrite.gexf.GEXFReader.add_node": {
  "lineno": 706,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.gexf.GEXFReader.add_parents": {
  "lineno": 793,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.gexf.GEXFReader.add_slices": {
  "lineno": 802,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.gexf.GEXFReader.add_spells": {
  "lineno": 812,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.gexf.GEXFReader.add_start_end": {
  "lineno": 741,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.gexf.GEXFReader.add_viz": {
  "lineno": 753,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.gexf.GEXFReader.decode_attr_elements": {
  "lineno": 880,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.readwrite.gexf.GEXFReader.find_gexf_attributes": {
  "lineno": 914,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.gexf.GEXFReader.make_graph": {
  "lineno": 630,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.MultiDiGraph",
   "networkx.MultiGraph"
  ],
  "type": "function"
 },
 "networkx.readwrite.gexf.GEXFWriter": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.readwrite.gexf.GEXFWriter.__init__": {
  "lineno": 247,
  "symbols_in_volume": [
   "itertools.count",
   "xml.etree.ElementTree.Element"
  ],
  "type": "function"
 },
 "networkx.readwrite.gexf.GEXFWriter.__str__": {
  "lineno": 279,
  "symbols_in_volume": [
   "xml.etree.ElementTree.tostring"
  ],
  "type": "function"
 },
 "networkx.readwrite.gexf.GEXFWriter.add_attributes": {
  "lineno": 396,
  "symbols_in_volume": [
   "networkx.utils.make_str",
   "xml.etree.ElementTree.Element"
  ],
  "type": "function"
 },
 "networkx.readwrite.gexf.GEXFWriter.add_edges": {
  "lineno": 335,
  "symbols_in_volume": [
   "networkx.utils.make_str",
   "xml.etree.ElementTree.Element"
  ],
  "type": "function"
 },
 "networkx.readwrite.gexf.GEXFWriter.add_edges.edge_key_data": {
  "lineno": 336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.gexf.GEXFWriter.add_graph": {
  "lineno": 285,
  "symbols_in_volume": [
   "xml.etree.ElementTree.Element"
  ],
  "type": "function"
 },
 "networkx.readwrite.gexf.GEXFWriter.add_nodes": {
  "lineno": 304,
  "symbols_in_volume": [
   "networkx.utils.make_str",
   "xml.etree.ElementTree.Element"
  ],
  "type": "function"
 },
 "networkx.readwrite.gexf.GEXFWriter.add_parents": {
  "lineno": 524,
  "symbols_in_volume": [
   "xml.etree.ElementTree.Element"
  ],
  "type": "function"
 },
 "networkx.readwrite.gexf.GEXFWriter.add_slices": {
  "lineno": 535,
  "symbols_in_volume": [
   "xml.etree.ElementTree.Element"
  ],
  "type": "function"
 },
 "networkx.readwrite.gexf.GEXFWriter.add_spells": {
  "lineno": 546,
  "symbols_in_volume": [
   "networkx.utils.make_str",
   "xml.etree.ElementTree.Element"
  ],
  "type": "function"
 },
 "networkx.readwrite.gexf.GEXFWriter.add_viz": {
  "lineno": 475,
  "symbols_in_volume": [
   "xml.etree.ElementTree.Element"
  ],
  "type": "function"
 },
 "networkx.readwrite.gexf.GEXFWriter.alter_graph_mode_timeformat": {
  "lineno": 563,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.gexf.GEXFWriter.get_attr_id": {
  "lineno": 442,
  "symbols_in_volume": [
   "networkx.utils.make_str",
   "xml.etree.ElementTree.Element"
  ],
  "type": "function"
 },
 "networkx.readwrite.gexf.GEXFWriter.indent": {
  "lineno": 585,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.gexf.GEXFWriter.write": {
  "lineno": 577,
  "symbols_in_volume": [
   "xml.etree.ElementTree.ElementTree"
  ],
  "type": "function"
 },
 "networkx.readwrite.gexf.generate_gexf": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.gexf.read_gexf": {
  "lineno": 122,
  "symbols_in_volume": [
   "networkx.utils.open_file"
  ],
  "type": "function"
 },
 "networkx.readwrite.gexf.relabel_gexf_graph": {
  "lineno": 935,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.relabel_nodes"
  ],
  "type": "function"
 },
 "networkx.readwrite.gexf.setup_module": {
  "lineno": 980,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.readwrite.gexf.teardown_module": {
  "lineno": 988,
  "symbols_in_volume": [
   "os.unlink"
  ],
  "type": "function"
 },
 "networkx.readwrite.gexf.write_gexf": {
  "lineno": 38,
  "symbols_in_volume": [
   "networkx.utils.open_file"
  ],
  "type": "function"
 },
 "networkx.readwrite.gml": {
  "lineno": null,
  "symbols_in_volume": [
   "ast.literal_eval",
   "lib2to3.refactor.RefactoringTool"
  ],
  "type": "module"
 },
 "networkx.readwrite.gml.escape": {
  "lineno": 80,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 },
 "networkx.readwrite.gml.escape.fixup": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.gml.generate_gml": {
  "lineno": 550,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "networkx.readwrite.gml.generate_gml.stringize": {
  "lineno": 584,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.readwrite.gml.literal_destringizer": {
  "lineno": 118,
  "symbols_in_volume": [
   "ast.literal_eval",
   "lib2to3.pgen2.parse.ParseError",
   "lib2to3.pgen2.tokenize.TokenError"
  ],
  "type": "function"
 },
 "networkx.readwrite.gml.literal_stringizer": {
  "lineno": 450,
  "symbols_in_volume": [
   "io.StringIO"
  ],
  "type": "function"
 },
 "networkx.readwrite.gml.literal_stringizer.stringize": {
  "lineno": 479,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.gml.parse_gml": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.gml.parse_gml.decode_line": {
  "lineno": 255,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.readwrite.gml.parse_gml.filter_lines": {
  "lineno": 265,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.readwrite.gml.parse_gml_lines": {
  "lineno": 284,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.MultiDiGraph",
   "networkx.MultiGraph",
   "networkx.NetworkXError",
   "networkx.exception.NetworkXError",
   "networkx.relabel_nodes"
  ],
  "type": "function"
 },
 "networkx.readwrite.gml.parse_gml_lines.consume": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.gml.parse_gml_lines.parse_dict": {
  "lineno": 365,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.gml.parse_gml_lines.parse_graph": {
  "lineno": 371,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.readwrite.gml.parse_gml_lines.parse_kv": {
  "lineno": 339,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "networkx.readwrite.gml.parse_gml_lines.pop_attr": {
  "lineno": 394,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.readwrite.gml.parse_gml_lines.tokenize": {
  "lineno": 287,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError",
   "re.compile"
  ],
  "type": "function"
 },
 "networkx.readwrite.gml.parse_gml_lines.unexpected": {
  "lineno": 327,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.readwrite.gml.read_gml": {
  "lineno": 150,
  "symbols_in_volume": [
   "networkx.utils.open_file"
  ],
  "type": "function"
 },
 "networkx.readwrite.gml.read_gml.filter_lines": {
  "lineno": 198,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.readwrite.gml.teardown_module": {
  "lineno": 722,
  "symbols_in_volume": [
   "os.path.isfile",
   "os.unlink"
  ],
  "type": "function"
 },
 "networkx.readwrite.gml.unescape": {
  "lineno": 92,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 },
 "networkx.readwrite.gml.unescape.fixup": {
  "lineno": 96,
  "symbols_in_volume": [
   "html.entities.name2codepoint"
  ],
  "type": "function"
 },
 "networkx.readwrite.gml.write_gml": {
  "lineno": 672,
  "symbols_in_volume": [
   "networkx.utils.open_file"
  ],
  "type": "function"
 },
 "networkx.readwrite.gpickle": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.gpickle.read_gpickle": {
  "lineno": 73,
  "symbols_in_volume": [
   "cPickle.load",
   "networkx.utils.open_file"
  ],
  "type": "function"
 },
 "networkx.readwrite.gpickle.teardown_module": {
  "lineno": 106,
  "symbols_in_volume": [
   "os.unlink"
  ],
  "type": "function"
 },
 "networkx.readwrite.gpickle.write_gpickle": {
  "lineno": 42,
  "symbols_in_volume": [
   "cPickle.HIGHEST_PROTOCOL",
   "cPickle.dump",
   "networkx.utils.open_file"
  ],
  "type": "function"
 },
 "networkx.readwrite.graph6": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.graph6.data_to_graph6": {
  "lineno": 260,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.readwrite.graph6.data_to_n": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.graph6.generate_graph6": {
  "lineno": 132,
  "symbols_in_volume": [
   "networkx.utils.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.readwrite.graph6.generate_graph6.bits": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.graph6.graph6_to_data": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.graph6.n_to_data": {
  "lineno": 278,
  "symbols_in_volume": [
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.readwrite.graph6.parse_graph6": {
  "lineno": 30,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.exception.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.readwrite.graph6.parse_graph6.bits": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.graph6.read_graph6": {
  "lineno": 86,
  "symbols_in_volume": [
   "networkx.utils.open_file"
  ],
  "type": "function"
 },
 "networkx.readwrite.graph6.teardown_module": {
  "lineno": 293,
  "symbols_in_volume": [
   "os.path.isfile",
   "os.unlink"
  ],
  "type": "function"
 },
 "networkx.readwrite.graph6.write_graph6": {
  "lineno": 206,
  "symbols_in_volume": [
   "networkx.utils.open_file"
  ],
  "type": "function"
 },
 "networkx.readwrite.graphml": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.graphml.GraphML": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.readwrite.graphml.GraphMLReader": {
  "lineno": 384,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.readwrite.graphml.GraphMLReader.__call__": {
  "lineno": 396,
  "symbols_in_volume": [
   "xml.etree.ElementTree.ElementTree",
   "xml.etree.ElementTree.fromstring"
  ],
  "type": "function"
 },
 "networkx.readwrite.graphml.GraphMLReader.__init__": {
  "lineno": 387,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.graphml.GraphMLReader.add_edge": {
  "lineno": 461,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "warnings.warn"
  ],
  "type": "function"
 },
 "networkx.readwrite.graphml.GraphMLReader.add_node": {
  "lineno": 448,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "networkx.readwrite.graphml.GraphMLReader.decode_data_elements": {
  "lineno": 495,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.readwrite.graphml.GraphMLReader.find_graphml_keys": {
  "lineno": 538,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "warnings.warn"
  ],
  "type": "function"
 },
 "networkx.readwrite.graphml.GraphMLReader.make_graph": {
  "lineno": 407,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.MultiDiGraph",
   "networkx.MultiGraph",
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.readwrite.graphml.GraphMLWriter": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.readwrite.graphml.GraphMLWriter.__init__": {
  "lineno": 233,
  "symbols_in_volume": [
   "xml.etree.ElementTree.Element"
  ],
  "type": "function"
 },
 "networkx.readwrite.graphml.GraphMLWriter.__str__": {
  "lineno": 252,
  "symbols_in_volume": [
   "xml.etree.ElementTree.tostring"
  ],
  "type": "function"
 },
 "networkx.readwrite.graphml.GraphMLWriter.add_attributes": {
  "lineno": 294,
  "symbols_in_volume": [
   "networkx.utils.make_str"
  ],
  "type": "function"
 },
 "networkx.readwrite.graphml.GraphMLWriter.add_data": {
  "lineno": 279,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.utils.make_str",
   "xml.etree.ElementTree.Element"
  ],
  "type": "function"
 },
 "networkx.readwrite.graphml.GraphMLWriter.add_edges": {
  "lineno": 310,
  "symbols_in_volume": [
   "networkx.utils.make_str",
   "xml.etree.ElementTree.Element"
  ],
  "type": "function"
 },
 "networkx.readwrite.graphml.GraphMLWriter.add_graph_element": {
  "lineno": 328,
  "symbols_in_volume": [
   "xml.etree.ElementTree.Element"
  ],
  "type": "function"
 },
 "networkx.readwrite.graphml.GraphMLWriter.add_graphs": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.graphml.GraphMLWriter.add_nodes": {
  "lineno": 303,
  "symbols_in_volume": [
   "networkx.utils.make_str",
   "xml.etree.ElementTree.Element"
  ],
  "type": "function"
 },
 "networkx.readwrite.graphml.GraphMLWriter.dump": {
  "lineno": 361,
  "symbols_in_volume": [
   "xml.etree.ElementTree.ElementTree"
  ],
  "type": "function"
 },
 "networkx.readwrite.graphml.GraphMLWriter.get_key": {
  "lineno": 258,
  "symbols_in_volume": [
   "networkx.utils.make_str",
   "xml.etree.ElementTree.Element"
  ],
  "type": "function"
 },
 "networkx.readwrite.graphml.GraphMLWriter.indent": {
  "lineno": 367,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.graphml.generate_graphml": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.graphml.parse_graphml": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.graphml.read_graphml": {
  "lineno": 115,
  "symbols_in_volume": [
   "networkx.utils.open_file"
  ],
  "type": "function"
 },
 "networkx.readwrite.graphml.setup_module": {
  "lineno": 567,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.readwrite.graphml.teardown_module": {
  "lineno": 575,
  "symbols_in_volume": [
   "os.unlink"
  ],
  "type": "function"
 },
 "networkx.readwrite.graphml.write_graphml": {
  "lineno": 55,
  "symbols_in_volume": [
   "networkx.utils.open_file"
  ],
  "type": "function"
 },
 "networkx.readwrite.json_graph": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.json_graph.adjacency": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.json_graph.adjacency.adjacency_data": {
  "lineno": 15,
  "symbols_in_volume": [
   "itertools.chain",
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.readwrite.json_graph.adjacency.adjacency_graph": {
  "lineno": 91,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.MultiGraph"
  ],
  "type": "function"
 },
 "networkx.readwrite.json_graph.node_link": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.json_graph.node_link.node_link_data": {
  "lineno": 18,
  "symbols_in_volume": [
   "itertools.chain",
   "itertools.count",
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.readwrite.json_graph.node_link.node_link_graph": {
  "lineno": 97,
  "symbols_in_volume": [
   "itertools.count",
   "networkx.Graph",
   "networkx.MultiGraph",
   "networkx.utils.make_str"
  ],
  "type": "function"
 },
 "networkx.readwrite.json_graph.tests.test_adjacency": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.json_graph.tests.test_adjacency.TestAdjacency": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.readwrite.json_graph.tests.test_adjacency.TestAdjacency.test_digraph": {
  "lineno": 32,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.is_isomorphic",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.readwrite.json_graph.tests.test_adjacency.TestAdjacency.test_exception": {
  "lineno": 54,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.NetworkXError",
   "nose.tools.raises"
  ],
  "type": "function"
 },
 "networkx.readwrite.json_graph.tests.test_adjacency.TestAdjacency.test_graph": {
  "lineno": 8,
  "symbols_in_volume": [
   "networkx.is_isomorphic",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.readwrite.json_graph.tests.test_adjacency.TestAdjacency.test_graph_attributes": {
  "lineno": 13,
  "symbols_in_volume": [
   "json.dumps",
   "json.loads",
   "networkx.path_graph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.readwrite.json_graph.tests.test_adjacency.TestAdjacency.test_multidigraph": {
  "lineno": 39,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.readwrite.json_graph.tests.test_adjacency.TestAdjacency.test_multigraph": {
  "lineno": 46,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.is_isomorphic",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.readwrite.json_graph.tests.test_node_link": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.json_graph.tests.test_node_link.TestNodeLink": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.readwrite.json_graph.tests.test_node_link.TestNodeLink.test_digraph": {
  "lineno": 33,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.readwrite.json_graph.tests.test_node_link.TestNodeLink.test_exception": {
  "lineno": 60,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.NetworkXError",
   "nose.tools.raises"
  ],
  "type": "function"
 },
 "networkx.readwrite.json_graph.tests.test_node_link.TestNodeLink.test_graph": {
  "lineno": 9,
  "symbols_in_volume": [
   "networkx.is_isomorphic",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.readwrite.json_graph.tests.test_node_link.TestNodeLink.test_graph_attributes": {
  "lineno": 14,
  "symbols_in_volume": [
   "json.dumps",
   "json.loads",
   "networkx.path_graph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.readwrite.json_graph.tests.test_node_link.TestNodeLink.test_multigraph": {
  "lineno": 39,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.is_isomorphic",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.readwrite.json_graph.tests.test_node_link.TestNodeLink.test_unicode_keys": {
  "lineno": 47,
  "symbols_in_volume": [
   "json.dumps",
   "json.loads",
   "networkx.Graph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.readwrite.json_graph.tests.test_tree": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.json_graph.tests.test_tree.TestTree": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.readwrite.json_graph.tests.test_tree.TestTree.test_exception": {
  "lineno": 30,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.NetworkXError",
   "nose.tools.raises"
  ],
  "type": "function"
 },
 "networkx.readwrite.json_graph.tests.test_tree.TestTree.test_graph": {
  "lineno": 8,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.is_isomorphic"
  ],
  "type": "function"
 },
 "networkx.readwrite.json_graph.tests.test_tree.TestTree.test_graph_attributes": {
  "lineno": 17,
  "symbols_in_volume": [
   "json.dumps",
   "json.loads",
   "networkx.DiGraph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.readwrite.json_graph.tree": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.json_graph.tree.tree_data": {
  "lineno": 16,
  "symbols_in_volume": [
   "itertools.chain",
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.readwrite.json_graph.tree.tree_data.add_children": {
  "lineno": 81,
  "symbols_in_volume": [
   "itertools.chain"
  ],
  "type": "function"
 },
 "networkx.readwrite.json_graph.tree.tree_graph": {
  "lineno": 99,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.utils.make_str"
  ],
  "type": "function"
 },
 "networkx.readwrite.json_graph.tree.tree_graph.add_children": {
  "lineno": 136,
  "symbols_in_volume": [
   "networkx.utils.make_str"
  ],
  "type": "function"
 },
 "networkx.readwrite.leda": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.leda.parse_leda": {
  "lineno": 54,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.exception.NetworkXError",
   "networkx.utils.is_string_like"
  ],
  "type": "function"
 },
 "networkx.readwrite.leda.read_leda": {
  "lineno": 27,
  "symbols_in_volume": [
   "networkx.utils.open_file"
  ],
  "type": "function"
 },
 "networkx.readwrite.multiline_adjlist": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.multiline_adjlist.generate_multiline_adjlist": {
  "lineno": 46,
  "symbols_in_volume": [
   "networkx.utils.make_str"
  ],
  "type": "function"
 },
 "networkx.readwrite.multiline_adjlist.parse_multiline_adjlist": {
  "lineno": 188,
  "symbols_in_volume": [
   "ast.literal_eval",
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.readwrite.multiline_adjlist.read_multiline_adjlist": {
  "lineno": 297,
  "symbols_in_volume": [
   "networkx.utils.open_file"
  ],
  "type": "function"
 },
 "networkx.readwrite.multiline_adjlist.teardown_module": {
  "lineno": 387,
  "symbols_in_volume": [
   "os.path.isfile",
   "os.unlink"
  ],
  "type": "function"
 },
 "networkx.readwrite.multiline_adjlist.write_multiline_adjlist": {
  "lineno": 138,
  "symbols_in_volume": [
   "networkx.utils.open_file",
   "sys.argv",
   "time.asctime",
   "time.gmtime"
  ],
  "type": "function"
 },
 "networkx.readwrite.nx_shp": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.nx_shp.read_shp": {
  "lineno": 26,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "osgeo.ogr.Geometry",
   "osgeo.ogr.Open",
   "osgeo.ogr.wkbLineString"
  ],
  "type": "function"
 },
 "networkx.readwrite.nx_shp.setup_module": {
  "lineno": 231,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.readwrite.nx_shp.write_shp": {
  "lineno": 102,
  "symbols_in_volume": [
   "osgeo.ogr.FieldDefn",
   "osgeo.ogr.GetDriverByName",
   "osgeo.ogr.OFTInteger",
   "osgeo.ogr.OFTReal",
   "osgeo.ogr.OFTString",
   "osgeo.ogr.UseExceptions",
   "osgeo.ogr.wkbLineString",
   "osgeo.ogr.wkbPoint"
  ],
  "type": "function"
 },
 "networkx.readwrite.nx_shp.write_shp.create_feature": {
  "lineno": 164,
  "symbols_in_volume": [
   "osgeo.ogr.Feature"
  ],
  "type": "function"
 },
 "networkx.readwrite.nx_shp.write_shp.netgeometry": {
  "lineno": 135,
  "symbols_in_volume": [
   "osgeo.ogr.CreateGeometryFromWkb",
   "osgeo.ogr.CreateGeometryFromWkt",
   "osgeo.ogr.Geometry",
   "osgeo.ogr.wkbLineString",
   "osgeo.ogr.wkbPoint"
  ],
  "type": "function"
 },
 "networkx.readwrite.nx_yaml": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.nx_yaml.read_yaml": {
  "lineno": 61,
  "symbols_in_volume": [
   "networkx.utils.open_file",
   "yaml.load"
  ],
  "type": "function"
 },
 "networkx.readwrite.nx_yaml.setup_module": {
  "lineno": 99,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.readwrite.nx_yaml.teardown_module": {
  "lineno": 107,
  "symbols_in_volume": [
   "os.unlink"
  ],
  "type": "function"
 },
 "networkx.readwrite.nx_yaml.write_yaml": {
  "lineno": 29,
  "symbols_in_volume": [
   "networkx.utils.open_file",
   "yaml.dump"
  ],
  "type": "function"
 },
 "networkx.readwrite.p2g": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.p2g.parse_p2g": {
  "lineno": 82,
  "symbols_in_volume": [
   "networkx.MultiDiGraph"
  ],
  "type": "function"
 },
 "networkx.readwrite.p2g.read_p2g": {
  "lineno": 65,
  "symbols_in_volume": [
   "networkx.utils.open_file"
  ],
  "type": "function"
 },
 "networkx.readwrite.p2g.write_p2g": {
  "lineno": 45,
  "symbols_in_volume": [
   "networkx.utils.open_file"
  ],
  "type": "function"
 },
 "networkx.readwrite.pajek": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.pajek.generate_pajek": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.pajek.make_qstr": {
  "lineno": 232,
  "symbols_in_volume": [
   "networkx.utils.is_string_like"
  ],
  "type": "function"
 },
 "networkx.readwrite.pajek.parse_pajek": {
  "lineno": 136,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.MultiGraph",
   "networkx.utils.is_string_like",
   "networkx.utils.make_str",
   "shlex.split"
  ],
  "type": "function"
 },
 "networkx.readwrite.pajek.read_pajek": {
  "lineno": 104,
  "symbols_in_volume": [
   "networkx.utils.open_file"
  ],
  "type": "function"
 },
 "networkx.readwrite.pajek.teardown_module": {
  "lineno": 244,
  "symbols_in_volume": [
   "os.unlink"
  ],
  "type": "function"
 },
 "networkx.readwrite.pajek.write_pajek": {
  "lineno": 78,
  "symbols_in_volume": [
   "networkx.utils.open_file"
  ],
  "type": "function"
 },
 "networkx.readwrite.sparse6": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.sparse6.generate_sparse6": {
  "lineno": 164,
  "symbols_in_volume": [
   "networkx.readwrite.graph6.data_to_graph6",
   "networkx.readwrite.graph6.n_to_data",
   "networkx.utils.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.readwrite.sparse6.generate_sparse6.enc": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.sparse6.parse_sparse6": {
  "lineno": 33,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.MultiGraph",
   "networkx.exception.NetworkXError",
   "networkx.readwrite.graph6.data_to_n",
   "networkx.readwrite.graph6.graph6_to_data"
  ],
  "type": "function"
 },
 "networkx.readwrite.sparse6.parse_sparse6.parseData": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.sparse6.read_sparse6": {
  "lineno": 119,
  "symbols_in_volume": [
   "networkx.utils.open_file"
  ],
  "type": "function"
 },
 "networkx.readwrite.sparse6.teardown_module": {
  "lineno": 305,
  "symbols_in_volume": [
   "os.path.isfile",
   "os.unlink"
  ],
  "type": "function"
 },
 "networkx.readwrite.sparse6.write_sparse6": {
  "lineno": 261,
  "symbols_in_volume": [
   "networkx.utils.open_file"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_adjlist": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.tests.test_adjlist.TestAdjlist": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.readwrite.tests.test_adjlist.TestAdjlist.setUp": {
  "lineno": 16,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.MultiDiGraph",
   "networkx.MultiGraph"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_adjlist.TestAdjlist.test_adjlist_delimiter": {
  "lineno": 163,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.path_graph",
   "networkx.read_adjlist",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal",
   "networkx.write_adjlist"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_adjlist.TestAdjlist.test_adjlist_digraph": {
  "lineno": 123,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.read_adjlist",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal",
   "networkx.write_adjlist",
   "nose.tools.assert_not_equal",
   "os.close",
   "os.unlink",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_adjlist.TestAdjlist.test_adjlist_graph": {
  "lineno": 88,
  "symbols_in_volume": [
   "networkx.read_adjlist",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal",
   "networkx.write_adjlist",
   "nose.tools.assert_not_equal",
   "os.close",
   "os.unlink",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_adjlist.TestAdjlist.test_adjlist_integers": {
  "lineno": 112,
  "symbols_in_volume": [
   "networkx.convert_node_labels_to_integers",
   "networkx.read_adjlist",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal",
   "networkx.write_adjlist",
   "os.close",
   "os.unlink",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_adjlist.TestAdjlist.test_adjlist_multidigraph": {
  "lineno": 149,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.read_adjlist",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal",
   "networkx.write_adjlist",
   "nose.tools.assert_not_equal",
   "os.close",
   "os.unlink",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_adjlist.TestAdjlist.test_adjlist_multigraph": {
  "lineno": 135,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.read_adjlist",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal",
   "networkx.write_adjlist",
   "nose.tools.assert_not_equal",
   "os.close",
   "os.unlink",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_adjlist.TestAdjlist.test_latin1": {
  "lineno": 71,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.read_multiline_adjlist",
   "networkx.testing.assert_graphs_equal",
   "networkx.write_multiline_adjlist",
   "os.close",
   "os.unlink",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_adjlist.TestAdjlist.test_latin1_error": {
  "lineno": 55,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.write_multiline_adjlist",
   "nose.tools.assert_raises",
   "os.close",
   "os.unlink",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_adjlist.TestAdjlist.test_read_multiline_adjlist_1": {
  "lineno": 26,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.Graph",
   "networkx.read_multiline_adjlist",
   "networkx.testing.assert_graphs_equal"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_adjlist.TestAdjlist.test_unicode": {
  "lineno": 39,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.read_multiline_adjlist",
   "networkx.testing.assert_graphs_equal",
   "networkx.write_multiline_adjlist",
   "os.close",
   "os.unlink",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_adjlist.TestMultilineAdjlist": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.readwrite.tests.test_adjlist.TestMultilineAdjlist.setUp": {
  "lineno": 175,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.MultiDiGraph",
   "networkx.MultiGraph"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_adjlist.TestMultilineAdjlist.test_multiline_adjlist_delimiter": {
  "lineno": 262,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.path_graph",
   "networkx.read_multiline_adjlist",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal",
   "networkx.write_multiline_adjlist"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_adjlist.TestMultilineAdjlist.test_multiline_adjlist_digraph": {
  "lineno": 222,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.read_multiline_adjlist",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal",
   "networkx.write_multiline_adjlist",
   "nose.tools.assert_not_equal",
   "os.close",
   "os.unlink",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_adjlist.TestMultilineAdjlist.test_multiline_adjlist_graph": {
  "lineno": 187,
  "symbols_in_volume": [
   "networkx.read_multiline_adjlist",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal",
   "networkx.write_multiline_adjlist",
   "nose.tools.assert_not_equal",
   "os.close",
   "os.unlink",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_adjlist.TestMultilineAdjlist.test_multiline_adjlist_integers": {
  "lineno": 211,
  "symbols_in_volume": [
   "networkx.convert_node_labels_to_integers",
   "networkx.read_multiline_adjlist",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal",
   "networkx.write_multiline_adjlist",
   "os.close",
   "os.unlink",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_adjlist.TestMultilineAdjlist.test_multiline_adjlist_multidigraph": {
  "lineno": 248,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.read_multiline_adjlist",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal",
   "networkx.write_multiline_adjlist",
   "nose.tools.assert_not_equal",
   "os.close",
   "os.unlink",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_adjlist.TestMultilineAdjlist.test_multiline_adjlist_multigraph": {
  "lineno": 234,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.read_multiline_adjlist",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal",
   "networkx.write_multiline_adjlist",
   "nose.tools.assert_not_equal",
   "os.close",
   "os.unlink",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_edgelist": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.tests.test_edgelist.TestEdgelist": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.readwrite.tests.test_edgelist.TestEdgelist.setUp": {
  "lineno": 16,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.MultiDiGraph",
   "networkx.MultiGraph"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_edgelist.TestEdgelist.test_edgelist_digraph": {
  "lineno": 190,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.read_edgelist",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal",
   "networkx.write_edgelist",
   "nose.tools.assert_not_equal",
   "os.close",
   "os.unlink",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_edgelist.TestEdgelist.test_edgelist_graph": {
  "lineno": 152,
  "symbols_in_volume": [
   "networkx.read_edgelist",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal",
   "networkx.write_edgelist",
   "nose.tools.assert_not_equal",
   "os.close",
   "os.unlink",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_edgelist.TestEdgelist.test_edgelist_integers": {
  "lineno": 178,
  "symbols_in_volume": [
   "networkx.convert_node_labels_to_integers",
   "networkx.isolates",
   "networkx.read_edgelist",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal",
   "networkx.write_edgelist",
   "os.close",
   "os.unlink",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_edgelist.TestEdgelist.test_edgelist_multidigraph": {
  "lineno": 215,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.read_edgelist",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal",
   "networkx.write_edgelist",
   "nose.tools.assert_not_equal",
   "os.close",
   "os.unlink",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_edgelist.TestEdgelist.test_edgelist_multigraph": {
  "lineno": 203,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.read_edgelist",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal",
   "networkx.write_edgelist",
   "nose.tools.assert_not_equal",
   "os.close",
   "os.unlink",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_edgelist.TestEdgelist.test_latin1": {
  "lineno": 135,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.read_edgelist",
   "networkx.testing.assert_graphs_equal",
   "networkx.write_edgelist",
   "os.close",
   "os.unlink",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_edgelist.TestEdgelist.test_latin1_error": {
  "lineno": 119,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.write_edgelist",
   "nose.tools.assert_raises",
   "os.close",
   "os.unlink",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_edgelist.TestEdgelist.test_read_edgelist_1": {
  "lineno": 26,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.read_edgelist",
   "networkx.testing.assert_edges_equal"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_edgelist.TestEdgelist.test_read_edgelist_2": {
  "lineno": 37,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.read_edgelist",
   "networkx.read_weighted_edgelist",
   "networkx.testing.assert_edges_equal"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_edgelist.TestEdgelist.test_read_edgelist_3": {
  "lineno": 53,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.read_edgelist",
   "networkx.testing.assert_edges_equal"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_edgelist.TestEdgelist.test_unicode": {
  "lineno": 103,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.read_edgelist",
   "networkx.testing.assert_graphs_equal",
   "networkx.write_edgelist",
   "os.close",
   "os.unlink",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_edgelist.TestEdgelist.test_write_edgelist_1": {
  "lineno": 69,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.Graph",
   "networkx.write_edgelist",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_edgelist.TestEdgelist.test_write_edgelist_2": {
  "lineno": 77,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.Graph",
   "networkx.write_edgelist",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_edgelist.TestEdgelist.test_write_edgelist_3": {
  "lineno": 85,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.Graph",
   "networkx.write_edgelist",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_edgelist.TestEdgelist.test_write_edgelist_4": {
  "lineno": 94,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.Graph",
   "networkx.write_edgelist",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_gexf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.tests.test_gexf.TestGEXF": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.readwrite.tests.test_gexf.TestGEXF.setUp": {
  "lineno": 15,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.DiGraph",
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_gexf.TestGEXF.setupClass": {
  "lineno": 8,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_gexf.TestGEXF.test_bool": {
  "lineno": 316,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.Graph",
   "networkx.read_gexf",
   "networkx.write_gexf"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_gexf.TestGEXF.test_default_attribute": {
  "lineno": 259,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.Graph",
   "networkx.read_gexf",
   "networkx.write_gexf"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_gexf.TestGEXF.test_directed_edge_in_undirected": {
  "lineno": 184,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.NetworkXError",
   "networkx.read_gexf"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_gexf.TestGEXF.test_key_error": {
  "lineno": 219,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.NetworkXError",
   "networkx.read_gexf"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_gexf.TestGEXF.test_read_attribute_graphml": {
  "lineno": 174,
  "symbols_in_volume": [
   "networkx.read_gexf"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_gexf.TestGEXF.test_read_simple_directed_graphml": {
  "lineno": 144,
  "symbols_in_volume": [
   "networkx.read_gexf"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_gexf.TestGEXF.test_read_simple_undirected_graphml": {
  "lineno": 165,
  "symbols_in_volume": [
   "networkx.read_gexf"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_gexf.TestGEXF.test_relabel": {
  "lineno": 240,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.read_gexf"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_gexf.TestGEXF.test_serialize_ints_to_strings": {
  "lineno": 280,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.Graph",
   "networkx.read_gexf",
   "networkx.write_gexf"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_gexf.TestGEXF.test_undirected_edge_in_directed": {
  "lineno": 201,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.NetworkXError",
   "networkx.read_gexf"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_gexf.TestGEXF.test_write_read_simple_directed_graphml": {
  "lineno": 153,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.read_gexf",
   "networkx.write_gexf"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_gexf.TestGEXF.test_write_with_node_attributes": {
  "lineno": 290,
  "symbols_in_volume": [
   "networkx.generate_gexf",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_gml": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.tests.test_gml.TestGraph": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.readwrite.tests.test_gml.TestGraph.setUp": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.tests.test_gml.TestGraph.test_data_types": {
  "lineno": 204,
  "symbols_in_volume": [
   "ast.literal_eval",
   "networkx.Graph",
   "networkx.generate_gml",
   "networkx.parse_gml",
   "networkx.readwrite.gml.literal_destringizer",
   "networkx.readwrite.gml.literal_stringizer"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_gml.TestGraph.test_escape_unescape": {
  "lineno": 232,
  "symbols_in_volume": [
   "networkx.generate_gml",
   "networkx.parse_gml"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_gml.TestGraph.test_exceptions": {
  "lineno": 245,
  "symbols_in_volume": [
   "codecs.BOM_UTF8",
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.parse_gml",
   "networkx.read_gml",
   "networkx.readwrite.gml.literal_destringizer",
   "networkx.readwrite.gml.literal_stringizer",
   "tempfile.TemporaryFile"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_gml.TestGraph.test_exceptions.assert_generate_error": {
  "lineno": 309,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.generate_gml"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_gml.TestGraph.test_exceptions.assert_parse_error": {
  "lineno": 256,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.parse_gml"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_gml.TestGraph.test_graph_types": {
  "lineno": 172,
  "symbols_in_volume": [
   "networkx.generate_gml",
   "networkx.parse_gml"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_gml.TestGraph.test_name": {
  "lineno": 165,
  "symbols_in_volume": [
   "networkx.parse_gml"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_gml.TestGraph.test_parse_gml": {
  "lineno": 69,
  "symbols_in_volume": [
   "networkx.parse_gml"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_gml.TestGraph.test_quotes": {
  "lineno": 144,
  "symbols_in_volume": [
   "networkx.path_graph",
   "networkx.write_gml",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_gml.TestGraph.test_read_gml": {
  "lineno": 87,
  "symbols_in_volume": [
   "networkx.parse_gml",
   "networkx.read_gml",
   "os.close",
   "os.unlink",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_gml.TestGraph.test_relabel_duplicate": {
  "lineno": 99,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.NetworkXError",
   "networkx.read_gml"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_gml.TestGraph.test_tuplelabels": {
  "lineno": 122,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.generate_gml",
   "networkx.readwrite.gml.literal_stringizer"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_gpickle": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.tests.test_gpickle.TestGpickle": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.readwrite.tests.test_gpickle.TestGpickle.setUp": {
  "lineno": 11,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.MultiDiGraph",
   "networkx.MultiGraph",
   "networkx.freeze"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_gpickle.TestGpickle.test_gpickle": {
  "lineno": 39,
  "symbols_in_volume": [
   "networkx.read_gpickle",
   "networkx.write_gpickle",
   "os.close",
   "os.unlink",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_gpickle.TestGpickle.test_protocol": {
  "lineno": 53,
  "symbols_in_volume": [
   "networkx.read_gpickle",
   "networkx.write_gpickle",
   "tempfile.TemporaryFile"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_graph6": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.tests.test_graph6.TestGraph6": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.readwrite.tests.test_graph6.TestGraph6.directed_error": {
  "lineno": 84,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXError",
   "networkx.generate_graph6"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_graph6.TestGraph6.test_generate_and_parse_graph6": {
  "lineno": 74,
  "symbols_in_volume": [
   "networkx.generate_graph6",
   "networkx.parse_graph6",
   "networkx.random_graphs.gnm_random_graph"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_graph6.TestGraph6.test_generate_graph6": {
  "lineno": 52,
  "symbols_in_volume": [
   "networkx.complete_bipartite_graph",
   "networkx.complete_graph",
   "networkx.empty_graph",
   "networkx.generate_graph6"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_graph6.TestGraph6.test_parse_graph6": {
  "lineno": 28,
  "symbols_in_volume": [
   "networkx.parse_graph6"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_graph6.TestGraph6.test_read_graph6": {
  "lineno": 35,
  "symbols_in_volume": [
   "io.StringIO",
   "networkx.parse_graph6",
   "networkx.read_graph6"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_graph6.TestGraph6.test_read_many_graph6": {
  "lineno": 43,
  "symbols_in_volume": [
   "io.StringIO",
   "networkx.read_graph6"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_graph6.TestGraph6.test_write_graph6": {
  "lineno": 68,
  "symbols_in_volume": [
   "io.StringIO",
   "networkx.complete_bipartite_graph",
   "networkx.write_graph6"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_graph6.TestGraph6Utils": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.readwrite.tests.test_graph6.TestGraph6Utils.test_data_sparse6_data_conversion": {
  "lineno": 19,
  "symbols_in_volume": [
   "networkx.readwrite.graph6.data_to_graph6",
   "networkx.readwrite.graph6.graph6_to_data"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_graph6.TestGraph6Utils.test_n_data_n_conversion": {
  "lineno": 12,
  "symbols_in_volume": [
   "networkx.readwrite.graph6.data_to_n",
   "networkx.readwrite.graph6.n_to_data"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_graphml": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.tests.test_graphml.TestGraph": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.readwrite.tests.test_graphml.TestGraph.setUp": {
  "lineno": 17,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.DiGraph",
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_graphml.TestGraph.setupClass": {
  "lineno": 10,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_graphml.TestGraph.test_bool": {
  "lineno": 409,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.parse_graphml",
   "networkx.read_graphml"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_graphml.TestGraph.test_default_attribute": {
  "lineno": 299,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.Graph",
   "networkx.read_graphml",
   "networkx.write_graphml"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_graphml.TestGraph.test_directed_edge_in_undirected": {
  "lineno": 207,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.NetworkXError",
   "networkx.parse_graphml",
   "networkx.read_graphml"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_graphml.TestGraph.test_hyperedge_error": {
  "lineno": 267,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.NetworkXError",
   "networkx.parse_graphml",
   "networkx.read_graphml"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_graphml.TestGraph.test_key_error": {
  "lineno": 239,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.NetworkXError",
   "networkx.parse_graphml",
   "networkx.read_graphml"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_graphml.TestGraph.test_multigraph_keys": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.tests.test_graphml.TestGraph.test_multigraph_to_graph": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.tests.test_graphml.TestGraph.test_read_attribute_graphml": {
  "lineno": 190,
  "symbols_in_volume": [
   "networkx.parse_graphml",
   "networkx.read_graphml"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_graphml.TestGraph.test_read_simple_directed_graphml": {
  "lineno": 148,
  "symbols_in_volume": [
   "networkx.parse_graphml",
   "networkx.read_graphml"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_graphml.TestGraph.test_read_simple_undirected_graphml": {
  "lineno": 175,
  "symbols_in_volume": [
   "networkx.parse_graphml",
   "networkx.read_graphml"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_graphml.TestGraph.test_undirected_edge_in_directed": {
  "lineno": 223,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.NetworkXError",
   "networkx.parse_graphml",
   "networkx.read_graphml"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_graphml.TestGraph.test_unicode": {
  "lineno": 390,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.read_graphml",
   "networkx.write_graphml",
   "os.close",
   "os.unlink",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_graphml.TestGraph.test_write_read_simple_directed_graphml": {
  "lineno": 163,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.read_graphml",
   "networkx.write_graphml"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_graphml.TestGraph.test_yfiles_extension": {
  "lineno": 324,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.parse_graphml",
   "networkx.read_graphml"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_leda": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.tests.test_leda.TestLEDA": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.readwrite.tests.test_leda.TestLEDA.test_parse_leda": {
  "lineno": 8,
  "symbols_in_volume": [
   "networkx.parse_leda"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_leda.TestLEDA.test_read_LEDA": {
  "lineno": 24,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.parse_leda",
   "networkx.read_leda"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_p2g": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.tests.test_p2g.TestP2G": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.readwrite.tests.test_p2g.TestP2G.setUp": {
  "lineno": 12,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_p2g.TestP2G.test_read_p2g": {
  "lineno": 19,
  "symbols_in_volume": [
   "io.BytesIO",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_p2g.TestP2G.test_write_p2g": {
  "lineno": 37,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.DiGraph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_p2g.TestP2G.test_write_read_p2g": {
  "lineno": 56,
  "symbols_in_volume": [
   "io.BytesIO",
   "networkx.DiGraph"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_pajek": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.tests.test_pajek.TestPajek": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.readwrite.tests.test_pajek.TestPajek.setUp": {
  "lineno": 12,
  "symbols_in_volume": [
   "os.fdopen",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_pajek.TestPajek.tearDown": {
  "lineno": 25,
  "symbols_in_volume": [
   "os.unlink"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_pajek.TestPajek.test_noname": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.tests.test_pajek.TestPajek.test_parse_pajek": {
  "lineno": 35,
  "symbols_in_volume": [
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_pajek.TestPajek.test_parse_pajek_simple": {
  "lineno": 28,
  "symbols_in_volume": [
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_pajek.TestPajek.test_read_pajek": {
  "lineno": 42,
  "symbols_in_volume": [
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_pajek.TestPajek.test_unicode": {
  "lineno": 59,
  "symbols_in_volume": [
   "io.BytesIO",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_shp": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.tests.test_shp.TestShp": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.readwrite.tests.test_shp.TestShp.checkgeom": {
  "lineno": 89,
  "symbols_in_volume": [
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_shp.TestShp.deletetmp": {
  "lineno": 21,
  "symbols_in_volume": [
   "os.path.exists"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_shp.TestShp.setUp": {
  "lineno": 26,
  "symbols_in_volume": [
   "os.mkdir",
   "os.path.join",
   "osgeo.ogr.Feature",
   "osgeo.ogr.Geometry",
   "osgeo.ogr.GetDriverByName",
   "osgeo.ogr.wkbLineString",
   "tempfile.gettempdir"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_shp.TestShp.setUp.createlayer": {
  "lineno": 28,
  "symbols_in_volume": [
   "osgeo.ogr.FieldDefn",
   "osgeo.ogr.OFTString",
   "osgeo.ogr.wkbLineString"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_shp.TestShp.setupClass": {
  "lineno": 13,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_shp.TestShp.tearDown": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.tests.test_shp.TestShp.test_attributeexport": {
  "lineno": 143,
  "symbols_in_volume": [
   "networkx.read_shp",
   "networkx.write_shp",
   "os.path.join",
   "osgeo.ogr.Open",
   "tempfile.gettempdir"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_shp.TestShp.test_attributeexport.testattributes": {
  "lineno": 144,
  "symbols_in_volume": [
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_shp.TestShp.test_geometryexport": {
  "lineno": 97,
  "symbols_in_volume": [
   "networkx.read_shp",
   "networkx.write_shp",
   "os.path.join",
   "osgeo.ogr.Open",
   "tempfile.gettempdir"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_shp.TestShp.test_wkt_export": {
  "lineno": 163,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.write_shp",
   "os.path.join",
   "osgeo.ogr.Open",
   "tempfile.gettempdir"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_shp.TestShp.testload": {
  "lineno": 68,
  "symbols_in_volume": [
   "networkx.read_shp"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_shp.TestShp.testload.compare_graph_paths_names": {
  "lineno": 70,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_sparse6": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.tests.test_sparse6.TestSparseGraph6": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.readwrite.tests.test_sparse6.TestSparseGraph6.directed_error": {
  "lineno": 100,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXError",
   "networkx.generate_sparse6"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_sparse6.TestSparseGraph6.test_generate_and_parse_sparse6": {
  "lineno": 91,
  "symbols_in_volume": [
   "networkx.generate_sparse6",
   "networkx.parse_sparse6",
   "networkx.random_graphs.gnm_random_graph"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_sparse6.TestSparseGraph6.test_generate_sparse6": {
  "lineno": 54,
  "symbols_in_volume": [
   "networkx.complete_graph",
   "networkx.empty_graph",
   "networkx.generate_sparse6",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_sparse6.TestSparseGraph6.test_parse_multigraph_graph": {
  "lineno": 26,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.MultiGraph",
   "networkx.parse_sparse6"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_sparse6.TestSparseGraph6.test_parse_sparse6": {
  "lineno": 13,
  "symbols_in_volume": [
   "networkx.parse_sparse6"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_sparse6.TestSparseGraph6.test_read_many_graph6": {
  "lineno": 42,
  "symbols_in_volume": [
   "io.StringIO",
   "networkx.read_sparse6"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_sparse6.TestSparseGraph6.test_read_sparse6": {
  "lineno": 34,
  "symbols_in_volume": [
   "io.StringIO",
   "networkx.parse_sparse6",
   "networkx.read_sparse6"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_sparse6.TestSparseGraph6.test_write_sparse6": {
  "lineno": 81,
  "symbols_in_volume": [
   "io.StringIO",
   "networkx.complete_bipartite_graph",
   "networkx.write_sparse6"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_yaml": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.readwrite.tests.test_yaml.TestYaml": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.readwrite.tests.test_yaml.TestYaml.assert_equal": {
  "lineno": 35,
  "symbols_in_volume": [
   "networkx.read_yaml",
   "networkx.testing.assert_edges_equal",
   "networkx.testing.assert_nodes_equal",
   "networkx.write_yaml",
   "os.close",
   "os.unlink",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_yaml.TestYaml.build_graphs": {
  "lineno": 24,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.MultiGraph"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_yaml.TestYaml.setUp": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.tests.test_yaml.TestYaml.setupClass": {
  "lineno": 13,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.readwrite.tests.test_yaml.TestYaml.testDirected": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.tests.test_yaml.TestYaml.testMultiGraph": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.readwrite.tests.test_yaml.TestYaml.testUndirected": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.relabel": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.relabel._relabel_copy": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.relabel._relabel_inplace": {
  "lineno": 84,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.NetworkXUnfeasible",
   "networkx.topological_sort"
  ],
  "type": "function"
 },
 "networkx.relabel.convert_node_labels_to_integers": {
  "lineno": 151,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.set_node_attributes"
  ],
  "type": "function"
 },
 "networkx.relabel.relabel_nodes": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.release": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.split",
   "version.date",
   "version.date_info",
   "version.vcs_info",
   "version.version",
   "version.version_info"
  ],
  "type": "module"
 },
 "networkx.release.get_info": {
  "lineno": 134,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "sys.path",
   "sys.path.insert",
   "time.asctime",
   "version.date",
   "version.date_info",
   "version.date_info.strftime",
   "version.vcs_info",
   "version.version",
   "version.version_info"
  ],
  "type": "function"
 },
 "networkx.release.get_revision": {
  "lineno": 119,
  "symbols_in_volume": [
   "os.path.isdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "networkx.release.write_versionfile": {
  "lineno": 48,
  "symbols_in_volume": [
   "os.path.isfile",
   "os.path.join",
   "sys.path",
   "sys.path.insert",
   "version.version"
  ],
  "type": "function"
 },
 "networkx.release.write_versionfile.writefile": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.testing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.testing.tests.test_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.testing.tests.test_utils.TestEdgesEqual": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.testing.tests.test_utils.TestEdgesEqual.setUp": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.testing.tests.test_utils.TestEdgesEqual.test_edges_equal": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.testing.tests.test_utils.TestEdgesEqual.test_edges_not_equal": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.testing.tests.test_utils.TestEdgesEqual.test_edges_with_data_equal": {
  "lineno": 63,
  "symbols_in_volume": [
   "networkx.MultiGraph"
  ],
  "type": "function"
 },
 "networkx.testing.tests.test_utils.TestEdgesEqual.test_edges_with_data_not_equal": {
  "lineno": 71,
  "symbols_in_volume": [
   "networkx.MultiGraph"
  ],
  "type": "function"
 },
 "networkx.testing.tests.test_utils.TestGraphsEqual": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.testing.tests.test_utils.TestGraphsEqual.setUp": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.testing.tests.test_utils.TestGraphsEqual.test_digraphs_equal": {
  "lineno": 90,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.testing.tests.test_utils.TestGraphsEqual.test_graphs_equal": {
  "lineno": 83,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.testing.tests.test_utils.TestGraphsEqual.test_graphs_not_equal": {
  "lineno": 111,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.testing.tests.test_utils.TestGraphsEqual.test_graphs_not_equal2": {
  "lineno": 117,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.testing.tests.test_utils.TestGraphsEqual.test_graphs_not_equal3": {
  "lineno": 124,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.testing.tests.test_utils.TestGraphsEqual.test_multigraphs_equal": {
  "lineno": 104,
  "symbols_in_volume": [
   "networkx.MultiDiGraph",
   "networkx.path_graph"
  ],
  "type": "function"
 },
 "networkx.testing.tests.test_utils.TestNodesEqual": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.testing.tests.test_utils.TestNodesEqual.setUp": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.testing.tests.test_utils.TestNodesEqual.test_edges_with_data_not_equal": {
  "lineno": 41,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.testing.tests.test_utils.TestNodesEqual.test_nodes_equal": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.testing.tests.test_utils.TestNodesEqual.test_nodes_not_equal": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.testing.tests.test_utils.TestNodesEqual.test_nodes_with_data_equal": {
  "lineno": 34,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.testing.tests.test_utils._GenericTest": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.testing.tests.test_utils._GenericTest._test_equal": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.testing.tests.test_utils._GenericTest._test_not_equal": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.testing.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.testing.utils.assert_edges_equal": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.testing.utils.assert_graphs_equal": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.testing.utils.assert_nodes_equal": {
  "lineno": 5,
  "symbols_in_volume": [
   "operator.itemgetter"
  ],
  "type": "function"
 },
 "networkx.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.tests.benchmark": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.tests.benchmark.Benchmark": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.tests.benchmark.Benchmark.__init__": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.tests.benchmark.Benchmark.__setitem__": {
  "lineno": 31,
  "symbols_in_volume": [
   "timeit.Timer"
  ],
  "type": "function"
 },
 "networkx.tests.benchmark.Benchmark.run": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.tests.test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.tests.test.run": {
  "lineno": 5,
  "symbols_in_volume": [
   "nose.run",
   "os.getcwd",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join",
   "os.path.pardir",
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.tests.test_convert.TestConvert": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.tests.test_convert.TestConvert.edgelists_equal": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.tests.test_convert.TestConvert.test_digraphs": {
  "lineno": 37,
  "symbols_in_volume": [
   "networkx.generators.classic.cycle_graph"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert.TestConvert.test_directed_to_undirected": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.tests.test_convert.TestConvert.test_edgelists": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.tests.test_convert.TestConvert.test_graph": {
  "lineno": 66,
  "symbols_in_volume": [
   "networkx.generators.classic.cycle_graph"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert.TestConvert.test_simple_graphs": {
  "lineno": 12,
  "symbols_in_volume": [
   "networkx.generators.classic.barbell_graph"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert.TestConvert.test_with_multiedges_self_loops": {
  "lineno": 102,
  "symbols_in_volume": [
   "networkx.generators.classic.cycle_graph"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_numpy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.tests.test_convert_numpy.TestConvertNumpy": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.tests.test_convert_numpy.TestConvertNumpy.__init__": {
  "lineno": 21,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.generators.classic.barbell_graph",
   "networkx.generators.classic.cycle_graph"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_numpy.TestConvertNumpy.assert_equal": {
  "lineno": 38,
  "symbols_in_volume": [
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_numpy.TestConvertNumpy.create_weighted": {
  "lineno": 28,
  "symbols_in_volume": [
   "networkx.generators.classic.cycle_graph"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_numpy.TestConvertNumpy.identity_conversion": {
  "lineno": 42,
  "symbols_in_volume": [
   "networkx.from_numpy_matrix",
   "networkx.to_networkx_graph"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_numpy.TestConvertNumpy.setupClass": {
  "lineno": 11,
  "symbols_in_volume": [
   "nose.SkipTest",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_numpy.TestConvertNumpy.test_from_numpy_matrix_dtype": {
  "lineno": 145,
  "symbols_in_volume": [
   "networkx.from_numpy_matrix",
   "nose.tools.assert_equal",
   "numpy.matrix"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_numpy.TestConvertNumpy.test_from_numpy_matrix_parallel_edges": {
  "lineno": 175,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.MultiDiGraph",
   "networkx.from_numpy_matrix",
   "networkx.testing.utils.assert_graphs_equal",
   "numpy.matrix"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_numpy.TestConvertNumpy.test_from_numpy_matrix_type": {
  "lineno": 121,
  "symbols_in_volume": [
   "networkx.from_numpy_matrix",
   "nose.tools.assert_equal",
   "nose.tools.assert_raises",
   "numpy.bool",
   "numpy.complex",
   "numpy.float",
   "numpy.matrix",
   "numpy.object",
   "numpy.str"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_numpy.TestConvertNumpy.test_identity_digraph_array": {
  "lineno": 71,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.to_numpy_matrix",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_numpy.TestConvertNumpy.test_identity_digraph_matrix": {
  "lineno": 66,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.to_numpy_matrix"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_numpy.TestConvertNumpy.test_identity_graph_array": {
  "lineno": 60,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.to_numpy_matrix",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_numpy.TestConvertNumpy.test_identity_graph_matrix": {
  "lineno": 55,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.to_numpy_matrix"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_numpy.TestConvertNumpy.test_identity_weighted_digraph_array": {
  "lineno": 93,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.to_numpy_matrix",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_numpy.TestConvertNumpy.test_identity_weighted_digraph_matrix": {
  "lineno": 88,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.to_numpy_matrix"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_numpy.TestConvertNumpy.test_identity_weighted_graph_array": {
  "lineno": 82,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.to_numpy_matrix",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_numpy.TestConvertNumpy.test_identity_weighted_graph_matrix": {
  "lineno": 77,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.to_numpy_matrix"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_numpy.TestConvertNumpy.test_nodelist": {
  "lineno": 99,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.generators.classic.path_graph",
   "networkx.to_numpy_matrix",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_numpy.TestConvertNumpy.test_numpy_multigraph": {
  "lineno": 164,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.to_numpy_matrix",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_numpy.TestConvertNumpy.test_shape": {
  "lineno": 50,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.from_numpy_matrix",
   "nose.tools.assert_raises",
   "numpy.array"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_numpy.TestConvertNumpy.test_symmetric": {
  "lineno": 211,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.from_numpy_matrix",
   "networkx.testing.utils.assert_graphs_equal",
   "numpy.matrix"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_numpy.TestConvertNumpy.test_to_numpy_recarray": {
  "lineno": 154,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.to_numpy_recarray",
   "nose.tools.assert_equal"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_numpy.TestConvertNumpy.test_weight_keyword": {
  "lineno": 112,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.generators.classic.path_graph",
   "networkx.to_numpy_matrix"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_pandas": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.tests.test_convert_pandas.TestConvertPandas": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.tests.test_convert_pandas.TestConvertPandas.__init__": {
  "lineno": 15,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.np.random.RandomState"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_pandas.TestConvertPandas.assert_equal": {
  "lineno": 28,
  "symbols_in_volume": [
   "networkx.is_isomorphic",
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_pandas.TestConvertPandas.setupClass": {
  "lineno": 8,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_pandas.TestConvertPandas.test_from_dataframe_all_attr": {
  "lineno": 31,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.from_pandas_dataframe"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_pandas.TestConvertPandas.test_from_dataframe_multi_attr": {
  "lineno": 38,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.from_pandas_dataframe"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_pandas.TestConvertPandas.test_from_dataframe_no_attr": {
  "lineno": 52,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.from_pandas_dataframe"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_pandas.TestConvertPandas.test_from_dataframe_one_attr": {
  "lineno": 45,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.from_pandas_dataframe"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_scipy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.tests.test_convert_scipy.TestConvertNumpy": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.tests.test_convert_scipy.TestConvertNumpy.__init__": {
  "lineno": 22,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.Graph",
   "networkx.generators.classic.barbell_graph",
   "networkx.generators.classic.cycle_graph"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_scipy.TestConvertNumpy.assert_equal": {
  "lineno": 39,
  "symbols_in_volume": [
   "nose.tools.assert_true"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_scipy.TestConvertNumpy.create_weighted": {
  "lineno": 29,
  "symbols_in_volume": [
   "networkx.generators.classic.cycle_graph"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_scipy.TestConvertNumpy.identity_conversion": {
  "lineno": 43,
  "symbols_in_volume": [
   "networkx.from_scipy_sparse_matrix",
   "networkx.to_networkx_graph"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_scipy.TestConvertNumpy.setupClass": {
  "lineno": 11,
  "symbols_in_volume": [
   "nose.SkipTest",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_scipy.TestConvertNumpy.test_empty": {
  "lineno": 170,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.to_scipy_sparse_matrix",
   "numpy.matrix"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_scipy.TestConvertNumpy.test_format_keyword": {
  "lineno": 125,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.generators.classic.path_graph",
   "networkx.to_scipy_sparse_matrix"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_scipy.TestConvertNumpy.test_format_keyword_fail": {
  "lineno": 158,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.generators.classic.path_graph",
   "networkx.to_scipy_sparse_matrix",
   "nose.tools.raises"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_scipy.TestConvertNumpy.test_from_scipy_sparse_matrix_parallel_edges": {
  "lineno": 194,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.MultiDiGraph",
   "networkx.from_scipy_sparse_matrix",
   "networkx.testing.utils.assert_graphs_equal",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_scipy.TestConvertNumpy.test_identity_digraph_matrix": {
  "lineno": 83,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.to_scipy_sparse_matrix"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_scipy.TestConvertNumpy.test_identity_graph_matrix": {
  "lineno": 78,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.to_scipy_sparse_matrix"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_scipy.TestConvertNumpy.test_identity_weighted_digraph_matrix": {
  "lineno": 93,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.to_scipy_sparse_matrix"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_scipy.TestConvertNumpy.test_identity_weighted_graph_matrix": {
  "lineno": 88,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.to_scipy_sparse_matrix"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_scipy.TestConvertNumpy.test_nodelist": {
  "lineno": 98,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.generators.classic.path_graph",
   "networkx.to_numpy_matrix",
   "networkx.to_scipy_sparse_matrix",
   "nose.tools.assert_raises"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_scipy.TestConvertNumpy.test_null_fail": {
  "lineno": 166,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXError",
   "networkx.to_scipy_sparse_matrix",
   "nose.tools.raises"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_scipy.TestConvertNumpy.test_ordering": {
  "lineno": 176,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.to_scipy_sparse_matrix",
   "numpy.matrix"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_scipy.TestConvertNumpy.test_selfloop_digraph": {
  "lineno": 189,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.to_scipy_sparse_matrix",
   "numpy.matrix"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_scipy.TestConvertNumpy.test_selfloop_graph": {
  "lineno": 184,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.to_scipy_sparse_matrix",
   "numpy.matrix"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_scipy.TestConvertNumpy.test_shape": {
  "lineno": 73,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.from_scipy_sparse_matrix",
   "nose.tools.assert_raises",
   "scipy.sparse.lil_matrix"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_scipy.TestConvertNumpy.test_symmetric": {
  "lineno": 230,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "networkx.from_scipy_sparse_matrix",
   "networkx.testing.utils.assert_graphs_equal",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "networkx.tests.test_convert_scipy.TestConvertNumpy.test_weight_keyword": {
  "lineno": 112,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.generators.classic.path_graph",
   "networkx.to_scipy_sparse_matrix"
  ],
  "type": "function"
 },
 "networkx.tests.test_exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.tests.test_exceptions.test_raises_networkx_algorithm_error": {
  "lineno": 18,
  "symbols_in_volume": [
   "networkx.NetworkXAlgorithmError",
   "nose.tools.raises"
  ],
  "type": "function"
 },
 "networkx.tests.test_exceptions.test_raises_networkx_error": {
  "lineno": 10,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "nose.tools.raises"
  ],
  "type": "function"
 },
 "networkx.tests.test_exceptions.test_raises_networkx_exception": {
  "lineno": 6,
  "symbols_in_volume": [
   "networkx.NetworkXException",
   "nose.tools.raises"
  ],
  "type": "function"
 },
 "networkx.tests.test_exceptions.test_raises_networkx_no_path": {
  "lineno": 26,
  "symbols_in_volume": [
   "networkx.NetworkXNoPath",
   "nose.tools.raises"
  ],
  "type": "function"
 },
 "networkx.tests.test_exceptions.test_raises_networkx_pointless_concept": {
  "lineno": 14,
  "symbols_in_volume": [
   "networkx.NetworkXPointlessConcept",
   "nose.tools.raises"
  ],
  "type": "function"
 },
 "networkx.tests.test_exceptions.test_raises_networkx_unbounded": {
  "lineno": 30,
  "symbols_in_volume": [
   "networkx.NetworkXUnbounded",
   "nose.tools.raises"
  ],
  "type": "function"
 },
 "networkx.tests.test_exceptions.test_raises_networkx_unfeasible": {
  "lineno": 22,
  "symbols_in_volume": [
   "networkx.NetworkXUnfeasible",
   "nose.tools.raises"
  ],
  "type": "function"
 },
 "networkx.tests.test_relabel": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.tests.test_relabel.TestRelabel": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.tests.test_relabel.TestRelabel.test_convert_node_labels_to_integers": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.tests.test_relabel.TestRelabel.test_convert_to_integers2": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.tests.test_relabel.TestRelabel.test_convert_to_integers_raise": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.tests.test_relabel.TestRelabel.test_relabel_isolated_nodes_to_same": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.tests.test_relabel.TestRelabel.test_relabel_nodes_copy": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.tests.test_relabel.TestRelabel.test_relabel_nodes_digraph": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.tests.test_relabel.TestRelabel.test_relabel_nodes_function": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.tests.test_relabel.TestRelabel.test_relabel_nodes_function.mapping": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.tests.test_relabel.TestRelabel.test_relabel_nodes_graph": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.tests.test_relabel.TestRelabel.test_relabel_nodes_missing": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.tests.test_relabel.TestRelabel.test_relabel_nodes_multidigraph": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.tests.test_relabel.TestRelabel.test_relabel_nodes_multigraph": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.tests.test_relabel.TestRelabel.test_relabel_selfloop": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.tests.test_relabel.TestRelabel.test_relabel_toposort": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.utils.contextmanagers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.utils.contextmanagers.reversed": {
  "lineno": 9,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "networkx.utils.decorators": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "module"
 },
 "networkx.utils.decorators._open_bz2": {
  "lineno": 76,
  "symbols_in_volume": [
   "bz2.BZ2File"
  ],
  "type": "function"
 },
 "networkx.utils.decorators._open_gz": {
  "lineno": 72,
  "symbols_in_volume": [
   "gzip.open"
  ],
  "type": "function"
 },
 "networkx.utils.decorators.not_implemented_for": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.decorators.not_implemented_for._not_implemented_for": {
  "lineno": 50,
  "symbols_in_volume": [
   "decorator.decorator",
   "networkx.NetworkXNotImplemented"
  ],
  "type": "function"
 },
 "networkx.utils.decorators.open_file": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.decorators.open_file._open_file": {
  "lineno": 155,
  "symbols_in_volume": [
   "decorator.decorator",
   "networkx.NetworkXError",
   "networkx.utils.is_string_like",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "networkx.utils.heaps": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.utils.heaps.BinaryHeap": {
  "lineno": 304,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.utils.heaps.BinaryHeap.__init__": {
  "lineno": 307,
  "symbols_in_volume": [
   "itertools.count"
  ],
  "type": "function"
 },
 "networkx.utils.heaps.BinaryHeap.get": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.heaps.BinaryHeap.insert": {
  "lineno": 351,
  "symbols_in_volume": [
   "heapq.heappush"
  ],
  "type": "function"
 },
 "networkx.utils.heaps.BinaryHeap.min": {
  "lineno": 314,
  "symbols_in_volume": [
   "heapq.heappop",
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.utils.heaps.BinaryHeap.pop": {
  "lineno": 330,
  "symbols_in_volume": [
   "heapq.heappop",
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.utils.heaps.MinHeap": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.utils.heaps.MinHeap._Item": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.utils.heaps.MinHeap._Item.__init__": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.heaps.MinHeap._Item.__repr__": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.heaps.MinHeap.__bool__": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.heaps.MinHeap.__contains__": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.heaps.MinHeap.__init__": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.heaps.MinHeap.__len__": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.heaps.MinHeap.__nonzero__": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.heaps.MinHeap.get": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.heaps.MinHeap.insert": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.heaps.MinHeap.min": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.heaps.MinHeap.pop": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.heaps.PairingHeap": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.utils.heaps.PairingHeap._Node": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.utils.heaps.PairingHeap._Node.__init__": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.heaps.PairingHeap.__init__": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.heaps.PairingHeap._cut": {
  "lineno": 288,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.heaps.PairingHeap._link": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.heaps.PairingHeap._merge_children": {
  "lineno": 250,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.heaps.PairingHeap.get": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.heaps.PairingHeap.insert": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.heaps.PairingHeap.min": {
  "lineno": 178,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.utils.heaps.PairingHeap.pop": {
  "lineno": 184,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.utils.heaps._inherit_doc": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.heaps._inherit_doc.func": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.misc": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "networkx.utils.misc.accumulate": {
  "lineno": 31,
  "symbols_in_volume": [
   "operator.add"
  ],
  "type": "function"
 },
 "networkx.utils.misc.default_opener": {
  "lineno": 114,
  "symbols_in_volume": [
   "subprocess.call",
   "sys.platform"
  ],
  "type": "function"
 },
 "networkx.utils.misc.dict_to_numpy_array": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.misc.dict_to_numpy_array1": {
  "lineno": 163,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "networkx.utils.misc.dict_to_numpy_array2": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "networkx.utils.misc.flatten": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.misc.generate_unique_node": {
  "lineno": 110,
  "symbols_in_volume": [
   "uuid.uuid1"
  ],
  "type": "function"
 },
 "networkx.utils.misc.is_list_of_ints": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.misc.is_string_like": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.misc.iterable": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.misc.make_str": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.random_sequence": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.utils.random_sequence.create_degree_sequence": {
  "lineno": 19,
  "symbols_in_volume": [
   "networkx.NetworkXError",
   "networkx.is_valid_degree_sequence",
   "warnings.warn"
  ],
  "type": "function"
 },
 "networkx.utils.random_sequence.cumulative_distribution": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.random_sequence.discrete_sequence": {
  "lineno": 170,
  "symbols_in_volume": [
   "bisect.bisect_left",
   "networkx.NetworkXError",
   "random.random"
  ],
  "type": "function"
 },
 "networkx.utils.random_sequence.pareto_sequence": {
  "lineno": 67,
  "symbols_in_volume": [
   "random.paretovariate"
  ],
  "type": "function"
 },
 "networkx.utils.random_sequence.powerlaw_sequence": {
  "lineno": 74,
  "symbols_in_volume": [
   "random.paretovariate"
  ],
  "type": "function"
 },
 "networkx.utils.random_sequence.random_weighted_sample": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.random_sequence.uniform_sequence": {
  "lineno": 152,
  "symbols_in_volume": [
   "random.uniform"
  ],
  "type": "function"
 },
 "networkx.utils.random_sequence.weighted_choice": {
  "lineno": 213,
  "symbols_in_volume": [
   "random.random"
  ],
  "type": "function"
 },
 "networkx.utils.random_sequence.zipf_rv": {
  "lineno": 80,
  "symbols_in_volume": [
   "random.random",
   "random.seed"
  ],
  "type": "function"
 },
 "networkx.utils.random_sequence.zipf_sequence": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.rcm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.utils.rcm.connected_cuthill_mckee_ordering": {
  "lineno": 130,
  "symbols_in_volume": [
   "collections.deque",
   "operator.itemgetter"
  ],
  "type": "function"
 },
 "networkx.utils.rcm.cuthill_mckee_ordering": {
  "lineno": 16,
  "symbols_in_volume": [
   "networkx.connected_components"
  ],
  "type": "function"
 },
 "networkx.utils.rcm.pseudo_peripheral_node": {
  "lineno": 148,
  "symbols_in_volume": [
   "networkx.shortest_path_length",
   "operator.itemgetter"
  ],
  "type": "function"
 },
 "networkx.utils.rcm.reverse_cuthill_mckee_ordering": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.tests.test_contextmanager": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.utils.tests.test_contextmanager.test_reversed": {
  "lineno": 7,
  "symbols_in_volume": [
   "networkx.DiGraph",
   "networkx.utils.reversed"
  ],
  "type": "function"
 },
 "networkx.utils.tests.test_decorators": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.utils.tests.test_decorators.TestOpenFileDecorator": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.utils.tests.test_decorators.TestOpenFileDecorator.read": {
  "lineno": 41,
  "symbols_in_volume": [
   "networkx.utils.decorators.open_file"
  ],
  "type": "function"
 },
 "networkx.utils.tests.test_decorators.TestOpenFileDecorator.setUp": {
  "lineno": 32,
  "symbols_in_volume": [
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "networkx.utils.tests.test_decorators.TestOpenFileDecorator.tearDown": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.tests.test_decorators.TestOpenFileDecorator.test_writer_arg0_fobj": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.tests.test_decorators.TestOpenFileDecorator.test_writer_arg0_str": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.tests.test_decorators.TestOpenFileDecorator.test_writer_arg1_fobj": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.tests.test_decorators.TestOpenFileDecorator.test_writer_arg1_str": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.tests.test_decorators.TestOpenFileDecorator.test_writer_arg2default_fobj": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.tests.test_decorators.TestOpenFileDecorator.test_writer_arg2default_str": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.tests.test_decorators.TestOpenFileDecorator.test_writer_arg4default_fobj": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.tests.test_decorators.TestOpenFileDecorator.test_writer_kwarg_fobj": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.tests.test_decorators.TestOpenFileDecorator.test_writer_kwarg_str": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.tests.test_decorators.TestOpenFileDecorator.write": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.tests.test_decorators.TestOpenFileDecorator.writer_arg0": {
  "lineno": 45,
  "symbols_in_volume": [
   "networkx.utils.decorators.open_file"
  ],
  "type": "function"
 },
 "networkx.utils.tests.test_decorators.TestOpenFileDecorator.writer_arg1": {
  "lineno": 50,
  "symbols_in_volume": [
   "networkx.utils.decorators.open_file"
  ],
  "type": "function"
 },
 "networkx.utils.tests.test_decorators.TestOpenFileDecorator.writer_arg2default": {
  "lineno": 54,
  "symbols_in_volume": [
   "networkx.utils.decorators.open_file",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "networkx.utils.tests.test_decorators.TestOpenFileDecorator.writer_arg4default": {
  "lineno": 69,
  "symbols_in_volume": [
   "networkx.utils.decorators.open_file",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "networkx.utils.tests.test_decorators.TestOpenFileDecorator.writer_kwarg": {
  "lineno": 84,
  "symbols_in_volume": [
   "networkx.utils.decorators.open_file",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "networkx.utils.tests.test_decorators.test_not_implemented_decorator": {
  "lineno": 9,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.utils.tests.test_decorators.test_not_implemented_decorator.test1": {
  "lineno": 10,
  "symbols_in_volume": [
   "networkx.utils.decorators.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.utils.tests.test_decorators.test_not_implemented_decorator_key": {
  "lineno": 15,
  "symbols_in_volume": [
   "networkx.Graph"
  ],
  "type": "function"
 },
 "networkx.utils.tests.test_decorators.test_not_implemented_decorator_key.test1": {
  "lineno": 17,
  "symbols_in_volume": [
   "networkx.utils.decorators.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.utils.tests.test_decorators.test_not_implemented_decorator_raise": {
  "lineno": 22,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.NetworkXNotImplemented"
  ],
  "type": "function"
 },
 "networkx.utils.tests.test_decorators.test_not_implemented_decorator_raise.test1": {
  "lineno": 24,
  "symbols_in_volume": [
   "networkx.utils.decorators.not_implemented_for"
  ],
  "type": "function"
 },
 "networkx.utils.tests.test_heaps": {
  "lineno": null,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "module"
 },
 "networkx.utils.tests.test_heaps.X": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.utils.tests.test_heaps.X.__eq__": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.tests.test_heaps.X.__ge__": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.tests.test_heaps.X.__gt__": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.tests.test_heaps.X.__hash__": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.tests.test_heaps.X.__le__": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.tests.test_heaps.X.__lt__": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.tests.test_heaps.X.__ne__": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.tests.test_heaps._test_heap_class": {
  "lineno": 90,
  "symbols_in_volume": [
   "networkx.NetworkXError"
  ],
  "type": "function"
 },
 "networkx.utils.tests.test_heaps.test_BinaryHeap": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.tests.test_heaps.test_PairingHeap": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.tests.test_misc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.utils.tests.test_misc.TestNumpyArray": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.utils.tests.test_misc.TestNumpyArray.setupClass": {
  "lineno": 66,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "networkx.utils.tests.test_misc.TestNumpyArray.test_dict_to_numpy_array1": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "networkx.utils.tests.test_misc.TestNumpyArray.test_dict_to_numpy_array2": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "networkx.utils.tests.test_misc.TestNumpyArray.test_dict_to_numpy_array_a": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "networkx.utils.tests.test_misc.TestNumpyArray.test_dict_to_numpy_array_b": {
  "lineno": 112,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "networkx.utils.tests.test_misc.test_graph_iterable": {
  "lineno": 20,
  "symbols_in_volume": [
   "networkx.complete_graph"
  ],
  "type": "function"
 },
 "networkx.utils.tests.test_misc.test_is_list_of_ints": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.tests.test_misc.test_is_string_like": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.tests.test_misc.test_iterable": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.tests.test_misc.test_make_str_with_bytes": {
  "lineno": 37,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "function"
 },
 "networkx.utils.tests.test_misc.test_make_str_with_unicode": {
  "lineno": 51,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "function"
 },
 "networkx.utils.tests.test_misc.test_random_number_distribution": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.tests.test_random_sequence": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.utils.tests.test_random_sequence.test_degree_sequences": {
  "lineno": 8,
  "symbols_in_volume": [
   "networkx.utils.create_degree_sequence",
   "networkx.utils.powerlaw_sequence",
   "networkx.utils.uniform_sequence"
  ],
  "type": "function"
 },
 "networkx.utils.tests.test_random_sequence.test_random_weighted_choice": {
  "lineno": 30,
  "symbols_in_volume": [
   "networkx.utils.weighted_choice"
  ],
  "type": "function"
 },
 "networkx.utils.tests.test_random_sequence.test_random_weighted_sample": {
  "lineno": 24,
  "symbols_in_volume": [
   "networkx.utils.random_weighted_sample"
  ],
  "type": "function"
 },
 "networkx.utils.tests.test_random_sequence.test_zipf_rv": {
  "lineno": 14,
  "symbols_in_volume": [
   "networkx.utils.zipf_rv"
  ],
  "type": "function"
 },
 "networkx.utils.tests.test_random_sequence.test_zipf_sequence": {
  "lineno": 20,
  "symbols_in_volume": [
   "networkx.utils.zipf_sequence"
  ],
  "type": "function"
 },
 "networkx.utils.tests.test_rcm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.utils.tests.test_rcm.test_rcm_alternate_heuristic": {
  "lineno": 16,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.utils.reverse_cuthill_mckee_ordering"
  ],
  "type": "function"
 },
 "networkx.utils.tests.test_rcm.test_rcm_alternate_heuristic.smallest_degree": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.tests.test_rcm.test_reverse_cuthill_mckee": {
  "lineno": 6,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.utils.reverse_cuthill_mckee_ordering"
  ],
  "type": "function"
 },
 "networkx.utils.tests.test_unionfind": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.utils.tests.test_unionfind.test_unionfind": {
  "lineno": 5,
  "symbols_in_volume": [
   "networkx.utils.UnionFind"
  ],
  "type": "function"
 },
 "networkx.utils.union_find": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "networkx.utils.union_find.UnionFind": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "networkx.utils.union_find.UnionFind.__getitem__": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.union_find.UnionFind.__init__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.union_find.UnionFind.__iter__": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.utils.union_find.UnionFind.union": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "networkx.version": {
  "lineno": null,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "module"
 }
}