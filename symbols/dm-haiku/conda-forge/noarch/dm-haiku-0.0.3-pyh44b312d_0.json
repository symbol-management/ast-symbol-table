{
 "docs.conf": {
  "data": {
   "symbols_in_volume": [
    "docs.conf._recursive_add_annotations_import",
    "docs.conf.doctest",
    "docs.conf.katex_macros",
    "docs.conf.latex_macros",
    "docs.conf.os",
    "docs.conf.sys",
    "docs.conf.typing",
    "sphinxcontrib.katex.latex_defs_to_katex_macros"
   ]
  },
  "type": "module"
 },
 "docs.conf._add_annotations_import": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "docs.conf._recursive_add_annotations_import": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "docs.conf._add_annotations_import",
    "docs.conf.os"
   ]
  },
  "type": "function"
 },
 "docs.conf.author": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "docs.conf.autodoc_default_options": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "docs.conf.copyright": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "docs.conf.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "docs.conf.doctest_default_flags": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "docs.conf.doctest_global_setup": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "docs.conf.doctest_test_doctest_blocks": {
  "data": {
   "lineno": 132
  },
  "type": "constant"
 },
 "docs.conf.exclude_patterns": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "docs.conf.extensions": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "docs.conf.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "docs.conf.html_static_path": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "docs.conf.html_theme": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "docs.conf.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "docs.conf.intersphinx_mapping": {
  "data": {
   "lineno": 204
  },
  "type": "constant"
 },
 "docs.conf.katex": {
  "data": {
   "shadows": "sphinxcontrib.katex"
  },
  "type": "import"
 },
 "docs.conf.katex_macros": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "docs.conf.katex_options": {
  "data": {
   "lineno": 159
  },
  "type": "constant"
 },
 "docs.conf.latex_elements": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "docs.conf.latex_macros": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "docs.conf.linkcode_resolve": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "OSError",
    "TypeError",
    "docs.conf.inspect",
    "docs.conf.os",
    "docs.conf.sys",
    "getattr",
    "haiku.__file__",
    "len"
   ]
  },
  "type": "function"
 },
 "docs.conf.master_doc": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "docs.conf.nbsphinx_codecell_lexer": {
  "data": {
   "lineno": 212
  },
  "type": "constant"
 },
 "docs.conf.nbsphinx_execute": {
  "data": {
   "lineno": 211
  },
  "type": "constant"
 },
 "docs.conf.nbsphinx_kernel_name": {
  "data": {
   "lineno": 213
  },
  "type": "constant"
 },
 "docs.conf.nbsphinx_prolog": {
  "data": {
   "lineno": 215
  },
  "type": "constant"
 },
 "docs.conf.nbsphinx_timeout": {
  "data": {
   "lineno": 214
  },
  "type": "constant"
 },
 "docs.conf.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "docs.conf.project": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "docs.conf.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "docs.conf.templates_path": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "docs.conf.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "docs.ext.coverage_check": {
  "data": {},
  "type": "module"
 },
 "docs.ext.coverage_check.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "docs.ext.coverage_check.HaikuCoverageCheck": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "sphinx.builders.Builder"
   ]
  },
  "type": "class"
 },
 "docs.ext.coverage_check.HaikuCoverageCheck.finish": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "docs.ext.coverage_check.haiku_public_symbols",
    "frozenset",
    "sorted",
    "sphinx.errors.SphinxError",
    "tuple"
   ]
  },
  "type": "function"
 },
 "docs.ext.coverage_check.HaikuCoverageCheck.get_outdated_docs": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "docs.ext.coverage_check.HaikuCoverageCheck.write": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "docs.ext.coverage_check.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "docs.ext.coverage_check.application": {
  "data": {
   "shadows": "sphinx.application"
  },
  "type": "import"
 },
 "docs.ext.coverage_check.builders": {
  "data": {
   "shadows": "sphinx.builders"
  },
  "type": "import"
 },
 "docs.ext.coverage_check.errors": {
  "data": {
   "shadows": "sphinx.errors"
  },
  "type": "import"
 },
 "docs.ext.coverage_check.haiku_public_symbols": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "haiku",
    "haiku._src.test_utils.find_internal_python_modules",
    "set"
   ]
  },
  "type": "function"
 },
 "docs.ext.coverage_check.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "docs.ext.coverage_check.setup": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "dict",
    "docs.ext.coverage_check.HaikuCoverageCheck",
    "sphinx.application.Sphinx",
    "str",
    "typing.Any",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "docs.ext.coverage_check.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "examples.imagenet": {
  "data": {},
  "type": "module"
 },
 "examples.imagenet.dataset": {
  "data": {
   "symbols_in_volume": [
    "numpy.ndarray",
    "typing.Mapping",
    "typing.Text"
   ]
  },
  "type": "module"
 },
 "examples.imagenet.dataset.Batch": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "examples.imagenet.dataset.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "examples.imagenet.dataset.MEAN_RGB": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "examples.imagenet.dataset.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "examples.imagenet.dataset.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "examples.imagenet.dataset.STDDEV_RGB": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "examples.imagenet.dataset.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "examples.imagenet.dataset.Split": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "examples.imagenet.dataset.enum"
   ]
  },
  "type": "class"
 },
 "examples.imagenet.dataset.Split.from_string": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "classmethod",
    "examples.imagenet.dataset.Split",
    "typing.Text"
   ]
  },
  "type": "function"
 },
 "examples.imagenet.dataset.Split.num_examples": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "examples.imagenet.dataset.Split",
    "property"
   ]
  },
  "type": "function"
 },
 "examples.imagenet.dataset.Text": {
  "data": {
   "shadows": "typing.Text"
  },
  "type": "import"
 },
 "examples.imagenet.dataset.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "examples.imagenet.dataset._decode_and_center_crop": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "tensorflow.compat.v2.Tensor",
    "tensorflow.compat.v2.cast",
    "tensorflow.compat.v2.float32",
    "tensorflow.compat.v2.image.decode_and_crop_jpeg",
    "tensorflow.compat.v2.image.extract_jpeg_shape",
    "tensorflow.compat.v2.int32",
    "tensorflow.compat.v2.minimum",
    "tensorflow.compat.v2.stack",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "examples.imagenet.dataset._decode_and_random_crop": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "_decode_and_center_crop",
    "examples.imagenet.dataset._distorted_bounding_box_crop",
    "tensorflow.compat.v2.Tensor",
    "tensorflow.compat.v2.constant",
    "tensorflow.compat.v2.equal",
    "tensorflow.compat.v2.float32",
    "tensorflow.compat.v2.image.extract_jpeg_shape",
    "tensorflow.compat.v2.reduce_all",
    "tensorflow.compat.v2.shape"
   ]
  },
  "type": "function"
 },
 "examples.imagenet.dataset._distorted_bounding_box_crop": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "float",
    "int",
    "tensorflow.compat.v2.Tensor",
    "tensorflow.compat.v2.image.decode_and_crop_jpeg",
    "tensorflow.compat.v2.image.sample_distorted_bounding_box",
    "tensorflow.compat.v2.stack",
    "tensorflow.compat.v2.unstack",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "examples.imagenet.dataset._normalize_image": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "examples.imagenet.dataset.MEAN_RGB",
    "examples.imagenet.dataset.STDDEV_RGB",
    "tensorflow.compat.v2.Tensor",
    "tensorflow.compat.v2.constant"
   ]
  },
  "type": "function"
 },
 "examples.imagenet.dataset._preprocess_image": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "_decode_and_center_crop",
    "_decode_and_random_crop",
    "_normalize_image",
    "bool",
    "tensorflow.compat.v2.Tensor",
    "tensorflow.compat.v2.image.ResizeMethod.BICUBIC",
    "tensorflow.compat.v2.image.random_flip_left_right",
    "tensorflow.compat.v2.image.resize",
    "tensorflow.compat.v2.uint8"
   ]
  },
  "type": "function"
 },
 "examples.imagenet.dataset._shard": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "examples.imagenet.dataset.Split",
    "int",
    "numpy.arange",
    "numpy.array_split",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "examples.imagenet.dataset._to_tfds_split": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "examples.imagenet.dataset.Split",
    "tensorflow_datasets.Split",
    "tensorflow_datasets.Split.TRAIN",
    "tensorflow_datasets.Split.VALIDATION"
   ]
  },
  "type": "function"
 },
 "examples.imagenet.dataset.enum": {
  "data": {
   "shadows": "enum"
  },
  "type": "import"
 },
 "examples.imagenet.dataset.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "examples.imagenet.dataset.load": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError",
    "_shard",
    "_to_tfds_split",
    "bool",
    "examples.imagenet.dataset.Batch",
    "examples.imagenet.dataset.Split",
    "examples.imagenet.dataset.jax",
    "int",
    "numpy.prod",
    "reversed",
    "tensorflow.compat.v2.data.experimental.AUTOTUNE",
    "tensorflow_datasets.as_numpy",
    "tensorflow_datasets.core.ReadInstruction",
    "tensorflow_datasets.decode.SkipDecoding",
    "tensorflow_datasets.load",
    "typing.Generator",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "examples.imagenet.dataset.load.preprocess": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "_preprocess_image",
    "tensorflow.compat.v2.bfloat16",
    "tensorflow.compat.v2.cast",
    "tensorflow.compat.v2.int32"
   ]
  },
  "type": "function"
 },
 "examples.imagenet.dataset.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "examples.imagenet.dataset.tf": {
  "data": {
   "shadows": "tensorflow.compat.v2"
  },
  "type": "import"
 },
 "examples.imagenet.dataset.tfds": {
  "data": {
   "shadows": "tensorflow_datasets"
  },
  "type": "import"
 },
 "examples.imagenet.train": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.app.run",
    "absl.flags.DEFINE_bool",
    "absl.flags.DEFINE_enum",
    "absl.flags.DEFINE_float",
    "absl.flags.DEFINE_integer",
    "absl.flags.FLAGS",
    "examples.imagenet.train.SPLITS",
    "examples.imagenet.train._forward",
    "examples.imagenet.train.main",
    "examples.imagenet.train.optax",
    "haiku.transform_with_state",
    "jax.numpy.ndarray",
    "str",
    "typing.Mapping",
    "typing.Tuple"
   ]
  },
  "type": "module"
 },
 "examples.imagenet.train.FLAGS": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "examples.imagenet.train.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "examples.imagenet.train.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "examples.imagenet.train.OptState": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "examples.imagenet.train.SPLITS": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "examples.imagenet.train.Scalars": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "examples.imagenet.train.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "examples.imagenet.train._forward": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "bool",
    "examples.imagenet.dataset.Batch",
    "examples.imagenet.train.FLAGS",
    "haiku.nets.ResNet50",
    "jax.numpy.ndarray",
    "net"
   ]
  },
  "type": "function"
 },
 "examples.imagenet.train.app": {
  "data": {
   "shadows": "absl.app"
  },
  "type": "import"
 },
 "examples.imagenet.train.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "examples.imagenet.train.dataset": {
  "data": {
   "shadows": "examples.imagenet.dataset"
  },
  "type": "import"
 },
 "examples.imagenet.train.eval_batch": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "examples.imagenet.dataset.Batch",
    "examples.imagenet.train.forward",
    "examples.imagenet.train.jax",
    "haiku.Params",
    "haiku.State",
    "jax.numpy.argmax",
    "jax.numpy.equal",
    "jax.numpy.float32",
    "jax.numpy.ndarray",
    "jax.numpy.sum"
   ]
  },
  "type": "function"
 },
 "examples.imagenet.train.evaluate": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "ValueError",
    "examples.imagenet.dataset.Split",
    "examples.imagenet.dataset.load",
    "examples.imagenet.train.FLAGS",
    "examples.imagenet.train.Scalars",
    "examples.imagenet.train.eval_batch",
    "examples.imagenet.train.jax",
    "haiku.Params",
    "haiku.State",
    "jax.numpy.array"
   ]
  },
  "type": "function"
 },
 "examples.imagenet.train.flags": {
  "data": {
   "shadows": "absl.flags"
  },
  "type": "import"
 },
 "examples.imagenet.train.forward": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "examples.imagenet.train.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "examples.imagenet.train.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "examples.imagenet.train.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "examples.imagenet.train.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "examples.imagenet.train.l2_loss": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "jax.numpy.ndarray",
    "jax.numpy.square",
    "jax.numpy.sum",
    "sum",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "examples.imagenet.train.logging": {
  "data": {
   "shadows": "absl.logging"
  },
  "type": "import"
 },
 "examples.imagenet.train.loss_fn": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "examples.imagenet.dataset.Batch",
    "examples.imagenet.train.FLAGS",
    "examples.imagenet.train.forward",
    "examples.imagenet.train.jax",
    "examples.imagenet.train.l2_loss",
    "examples.imagenet.train.smooth_labels",
    "examples.imagenet.train.softmax_cross_entropy",
    "examples.imagenet.train.tree",
    "haiku.Params",
    "haiku.State",
    "jax.numpy.mean",
    "jax.numpy.ndarray",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "examples.imagenet.train.lr_schedule": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "examples.imagenet.dataset.Split.from_string",
    "examples.imagenet.train.FLAGS",
    "examples.imagenet.train.jax",
    "jax.numpy.array",
    "jax.numpy.minimum",
    "jax.numpy.ndarray",
    "jax.numpy.sum",
    "jax.numpy.take"
   ]
  },
  "type": "function"
 },
 "examples.imagenet.train.main": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "absl.app.UsageError",
    "absl.logging.info",
    "examples.imagenet.dataset.Split.from_string",
    "examples.imagenet.dataset.load",
    "examples.imagenet.train.FLAGS",
    "examples.imagenet.train.evaluate",
    "examples.imagenet.train.jax",
    "examples.imagenet.train.make_initial_state",
    "examples.imagenet.train.time_activity",
    "examples.imagenet.train.train_step",
    "jax.numpy.broadcast_to",
    "len",
    "next",
    "numpy.mean",
    "range"
   ]
  },
  "type": "function"
 },
 "examples.imagenet.train.make_initial_state": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "examples.imagenet.dataset.Batch",
    "examples.imagenet.train.OptState",
    "examples.imagenet.train.forward",
    "examples.imagenet.train.make_optimizer",
    "haiku.Params",
    "haiku.State",
    "jax.numpy.ndarray",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "examples.imagenet.train.make_optimizer": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "examples.imagenet.train.FLAGS",
    "examples.imagenet.train.lr_schedule",
    "examples.imagenet.train.optax"
   ]
  },
  "type": "function"
 },
 "examples.imagenet.train.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "examples.imagenet.train.optax": {
  "data": {
   "shadows": "optax"
  },
  "type": "import"
 },
 "examples.imagenet.train.smooth_labels": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "jax.numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "examples.imagenet.train.softmax_cross_entropy": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "examples.imagenet.train.jax",
    "jax.numpy.ndarray",
    "jax.numpy.sum"
   ]
  },
  "type": "function"
 },
 "examples.imagenet.train.time_activity": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "absl.logging.info",
    "examples.imagenet.train.contextlib",
    "str"
   ]
  },
  "type": "function"
 },
 "examples.imagenet.train.train_step": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "examples.imagenet.dataset.Batch",
    "examples.imagenet.train.OptState",
    "examples.imagenet.train.Scalars",
    "examples.imagenet.train.functools",
    "examples.imagenet.train.jax",
    "examples.imagenet.train.loss_fn",
    "examples.imagenet.train.make_optimizer",
    "examples.imagenet.train.optax",
    "haiku.Params",
    "haiku.State",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "examples.imagenet.train.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "examples.impala": {
  "data": {},
  "type": "module"
 },
 "examples.impala.actor": {
  "data": {},
  "type": "module"
 },
 "examples.impala.actor.Actor": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "examples.impala.actor.Actor.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "examples.impala.actor.dm_env",
    "examples.impala.actor.jax",
    "examples.impala.agent",
    "examples.impala.agent.Agent",
    "examples.impala.agent.initial_state",
    "examples.impala.learner",
    "examples.impala.learner.Learner",
    "examples.impala.util.NullLogger",
    "int"
   ]
  },
  "type": "function"
 },
 "examples.impala.actor.Actor.pull_params": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "examples.impala.actor.Actor.unroll": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "examples.impala.actor.jax",
    "examples.impala.util.Transition",
    "examples.impala.util.preprocess_step",
    "haiku.Params",
    "int",
    "numpy.stack",
    "range"
   ]
  },
  "type": "function"
 },
 "examples.impala.actor.Actor.unroll_and_push": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "examples.impala.actor.jax",
    "haiku.Params",
    "int"
   ]
  },
  "type": "function"
 },
 "examples.impala.actor.agent_lib": {
  "data": {
   "shadows": "examples.impala.agent"
  },
  "type": "import"
 },
 "examples.impala.actor.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "examples.impala.actor.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "examples.impala.actor.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "examples.impala.actor.learner_lib": {
  "data": {
   "shadows": "examples.impala.learner"
  },
  "type": "import"
 },
 "examples.impala.actor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "examples.impala.actor.util": {
  "data": {
   "shadows": "examples.impala.util"
  },
  "type": "import"
 },
 "examples.impala.actor_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "examples.impala.actor_test.CatchTest": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "examples.impala.actor_test.CatchTest.setUp": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "bsuite.environments.catch.Catch",
    "examples.impala.actor_test.CatchTest",
    "examples.impala.actor_test.jax",
    "examples.impala.agent.Agent",
    "examples.impala.haiku_nets.CatchNet",
    "super"
   ]
  },
  "type": "function"
 },
 "examples.impala.actor_test.CatchTest.test_sync_params": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "examples.impala.actor",
    "examples.impala.actor.Actor",
    "examples.impala.actor.pull_params",
    "examples.impala.actor_test.mock",
    "examples.impala.actor_test.tree",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "examples.impala.actor_test.CatchTest.test_unroll": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "examples.impala.actor",
    "examples.impala.actor.Actor",
    "examples.impala.actor.unroll",
    "examples.impala.actor_test.dm_env",
    "examples.impala.actor_test.jax",
    "examples.impala.actor_test.mock",
    "examples.impala.agent.AgentOutput",
    "examples.impala.util.Transition"
   ]
  },
  "type": "function"
 },
 "examples.impala.actor_test.CatchTest.test_unroll_and_push": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "examples.impala.actor",
    "examples.impala.actor.Actor",
    "examples.impala.actor.unroll_and_push",
    "examples.impala.actor_test.dm_env",
    "examples.impala.actor_test.mock",
    "examples.impala.agent.AgentOutput",
    "examples.impala.learner.Learner",
    "examples.impala.util.Transition"
   ]
  },
  "type": "function"
 },
 "examples.impala.actor_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "examples.impala.actor_test.actor_lib": {
  "data": {
   "shadows": "examples.impala.actor"
  },
  "type": "import"
 },
 "examples.impala.actor_test.agent_lib": {
  "data": {
   "shadows": "examples.impala.agent"
  },
  "type": "import"
 },
 "examples.impala.actor_test.catch": {
  "data": {
   "shadows": "bsuite.environments.catch"
  },
  "type": "import"
 },
 "examples.impala.actor_test.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "examples.impala.actor_test.haiku_nets": {
  "data": {
   "shadows": "examples.impala.haiku_nets"
  },
  "type": "import"
 },
 "examples.impala.actor_test.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "examples.impala.actor_test.learner_lib": {
  "data": {
   "shadows": "examples.impala.learner"
  },
  "type": "import"
 },
 "examples.impala.actor_test.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "examples.impala.actor_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "examples.impala.actor_test.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "examples.impala.actor_test.util": {
  "data": {
   "shadows": "examples.impala.util"
  },
  "type": "import"
 },
 "examples.impala.agent": {
  "data": {
   "symbols_in_volume": [
    "examples.impala.agent.collections",
    "haiku.RNNCore",
    "int",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "module"
 },
 "examples.impala.agent.Action": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "examples.impala.agent.Agent": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "examples.impala.agent.Agent.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "examples.impala.agent.Nest",
    "examples.impala.agent.NetFactory",
    "examples.impala.agent.functools",
    "haiku.transform",
    "haiku.without_apply_rng",
    "int",
    "net_factory"
   ]
  },
  "type": "function"
 },
 "examples.impala.agent.Agent.initial_params": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "examples.impala.agent.dm_env",
    "examples.impala.agent.functools",
    "examples.impala.agent.jax",
    "examples.impala.util.preprocess_step",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "examples.impala.agent.Agent.initial_state": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "examples.impala.agent.functools",
    "examples.impala.agent.jax",
    "int",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "examples.impala.agent.Agent.step": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "examples.impala.agent.AgentOutput",
    "examples.impala.agent.Nest",
    "examples.impala.agent.dm_env",
    "examples.impala.agent.functools",
    "examples.impala.agent.jax",
    "haiku.Params",
    "haiku.multinomial",
    "jax.numpy.squeeze",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "examples.impala.agent.Agent.unroll": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "examples.impala.agent.AgentOutput",
    "examples.impala.agent.Nest",
    "examples.impala.agent.dm_env",
    "haiku.Params"
   ]
  },
  "type": "function"
 },
 "examples.impala.agent.AgentOutput": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "examples.impala.agent.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "examples.impala.agent.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "examples.impala.agent.Nest": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "examples.impala.agent.NetFactory": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "examples.impala.agent.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "examples.impala.agent.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "examples.impala.agent.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "examples.impala.agent.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "examples.impala.agent.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "examples.impala.agent.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "examples.impala.agent.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "examples.impala.agent.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "examples.impala.agent.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "examples.impala.agent.util": {
  "data": {
   "shadows": "examples.impala.util"
  },
  "type": "import"
 },
 "examples.impala.haiku_nets": {
  "data": {
   "symbols_in_volume": [
    "examples.impala.haiku_nets.collections"
   ]
  },
  "type": "module"
 },
 "examples.impala.haiku_nets.AtariDeepTorso": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "haiku.Module"
   ]
  },
  "type": "class"
 },
 "examples.impala.haiku_nets.AtariDeepTorso.__call__": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "block",
    "conv",
    "enumerate",
    "examples.impala.haiku_nets.ResidualBlock",
    "haiku.Conv2D",
    "haiku.Flatten",
    "haiku.Linear",
    "haiku.max_pool",
    "range"
   ]
  },
  "type": "function"
 },
 "examples.impala.haiku_nets.AtariDeepTorso.__init__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "examples.impala.haiku_nets.AtariDeepTorso",
    "super"
   ]
  },
  "type": "function"
 },
 "examples.impala.haiku_nets.AtariNet": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "haiku.RNNCore"
   ]
  },
  "type": "class"
 },
 "examples.impala.haiku_nets.AtariNet.__call__": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "examples.impala.haiku_nets.dm_env"
   ]
  },
  "type": "function"
 },
 "examples.impala.haiku_nets.AtariNet.__init__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "examples.impala.haiku_nets.AtariNet",
    "haiku.LSTM",
    "haiku.ResetCore",
    "super"
   ]
  },
  "type": "function"
 },
 "examples.impala.haiku_nets.AtariNet._head": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "examples.impala.haiku_nets.NetOutput",
    "haiku.Linear",
    "jax.numpy.squeeze"
   ]
  },
  "type": "function"
 },
 "examples.impala.haiku_nets.AtariNet.initial_state": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "examples.impala.haiku_nets.AtariNet.unroll": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "examples.impala.haiku_nets.AtariDeepTorso",
    "examples.impala.haiku_nets.AtariShallowTorso",
    "examples.impala.haiku_nets.dm_env",
    "haiku.BatchApply",
    "haiku.dynamic_unroll",
    "int",
    "jax.numpy.equal"
   ]
  },
  "type": "function"
 },
 "examples.impala.haiku_nets.AtariShallowTorso": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "haiku.Module"
   ]
  },
  "type": "class"
 },
 "examples.impala.haiku_nets.AtariShallowTorso.__call__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "haiku.Conv2D",
    "haiku.Flatten",
    "haiku.Linear",
    "haiku.Sequential",
    "torso_net"
   ]
  },
  "type": "function"
 },
 "examples.impala.haiku_nets.AtariShallowTorso.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "examples.impala.haiku_nets.AtariShallowTorso",
    "super"
   ]
  },
  "type": "function"
 },
 "examples.impala.haiku_nets.CatchNet": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "haiku.RNNCore"
   ]
  },
  "type": "class"
 },
 "examples.impala.haiku_nets.CatchNet.__call__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "examples.impala.haiku_nets.NetOutput",
    "examples.impala.haiku_nets.dm_env",
    "haiku.Flatten",
    "haiku.Linear",
    "haiku.Sequential",
    "jax.numpy.squeeze",
    "torso_net"
   ]
  },
  "type": "function"
 },
 "examples.impala.haiku_nets.CatchNet.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "examples.impala.haiku_nets.CatchNet",
    "super"
   ]
  },
  "type": "function"
 },
 "examples.impala.haiku_nets.CatchNet.initial_state": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "examples.impala.haiku_nets.CatchNet.unroll": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "haiku.BatchApply"
   ]
  },
  "type": "function"
 },
 "examples.impala.haiku_nets.NetOutput": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "examples.impala.haiku_nets.ResidualBlock": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "haiku.Module"
   ]
  },
  "type": "class"
 },
 "examples.impala.haiku_nets.ResidualBlock.__call__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "haiku.Conv2D",
    "haiku.Sequential",
    "main_branch"
   ]
  },
  "type": "function"
 },
 "examples.impala.haiku_nets.ResidualBlock.__init__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "examples.impala.haiku_nets.ResidualBlock",
    "super"
   ]
  },
  "type": "function"
 },
 "examples.impala.haiku_nets.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "examples.impala.haiku_nets.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "examples.impala.haiku_nets.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "examples.impala.haiku_nets.jax.nn": {
  "data": {
   "shadows": "jax.nn"
  },
  "type": "import"
 },
 "examples.impala.haiku_nets.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "examples.impala.learner": {
  "data": {},
  "type": "module"
 },
 "examples.impala.learner.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "examples.impala.learner.Learner": {
  "data": {
   "lineno": 52
  },
  "type": "class"
 },
 "examples.impala.learner.Learner.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "examples.impala.agent",
    "examples.impala.agent.Agent",
    "examples.impala.agent.initial_params",
    "examples.impala.learner.jax",
    "examples.impala.learner.optax",
    "examples.impala.learner.queue",
    "examples.impala.learner.warnings",
    "examples.impala.util.NullLogger",
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "examples.impala.learner.Learner._loss": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "examples.impala.learner.dm_env",
    "examples.impala.learner.entropy_loss",
    "examples.impala.learner.jax",
    "examples.impala.learner.policy_gradient_loss",
    "examples.impala.learner.rlax",
    "examples.impala.util.Transition",
    "haiku.Params",
    "int",
    "jax.numpy.clip",
    "jax.numpy.float32",
    "jax.numpy.ndarray",
    "jax.numpy.not_equal",
    "jax.numpy.square",
    "jax.numpy.sum",
    "typing.Dict",
    "typing.Text",
    "typing.Tuple",
    "vtrace_td_error_and_advantage"
   ]
  },
  "type": "function"
 },
 "examples.impala.learner.Learner.enqueue_traj": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "examples.impala.util.Transition"
   ]
  },
  "type": "function"
 },
 "examples.impala.learner.Learner.host_to_device_worker": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "examples.impala.learner.jax",
    "examples.impala.learner.queue",
    "len",
    "numpy.stack",
    "range"
   ]
  },
  "type": "function"
 },
 "examples.impala.learner.Learner.params_for_actor": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "haiku.Params",
    "int",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "examples.impala.learner.Learner.run": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "examples.impala.learner.itertools",
    "examples.impala.learner.jax",
    "examples.impala.learner.threading",
    "int",
    "range"
   ]
  },
  "type": "function"
 },
 "examples.impala.learner.Learner.update": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "examples.impala.learner.functools",
    "examples.impala.learner.jax",
    "examples.impala.learner.optax",
    "examples.impala.util.Transition",
    "jax.experimental.optimizers.l2_norm"
   ]
  },
  "type": "function"
 },
 "examples.impala.learner.Text": {
  "data": {
   "shadows": "typing.Text"
  },
  "type": "import"
 },
 "examples.impala.learner.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "examples.impala.learner.agent_lib": {
  "data": {
   "shadows": "examples.impala.agent"
  },
  "type": "import"
 },
 "examples.impala.learner.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "examples.impala.learner.entropy_loss": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "examples.impala.learner.jax",
    "examples.impala.learner.rlax",
    "jax.numpy.sum"
   ]
  },
  "type": "function"
 },
 "examples.impala.learner.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "examples.impala.learner.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "examples.impala.learner.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "examples.impala.learner.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "examples.impala.learner.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "examples.impala.learner.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "examples.impala.learner.optax": {
  "data": {
   "shadows": "optax"
  },
  "type": "import"
 },
 "examples.impala.learner.optimizers": {
  "data": {
   "shadows": "jax.experimental.optimizers"
  },
  "type": "import"
 },
 "examples.impala.learner.policy_gradient_loss": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "examples.impala.learner.jax",
    "examples.impala.learner.rlax",
    "jax.numpy.sum"
   ]
  },
  "type": "function"
 },
 "examples.impala.learner.queue": {
  "data": {
   "shadows": "queue"
  },
  "type": "import"
 },
 "examples.impala.learner.rlax": {
  "data": {
   "shadows": "rlax"
  },
  "type": "import"
 },
 "examples.impala.learner.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "examples.impala.learner.util": {
  "data": {
   "shadows": "examples.impala.util"
  },
  "type": "import"
 },
 "examples.impala.learner.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "examples.impala.learner_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "examples.impala.learner_test.LearnerTest": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "examples.impala.learner_test.LearnerTest.test_integration": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "bsuite.environments.catch.Catch",
    "examples.impala.actor",
    "examples.impala.actor.Actor",
    "examples.impala.actor.pull_params",
    "examples.impala.actor.unroll_and_push",
    "examples.impala.agent",
    "examples.impala.agent.Agent",
    "examples.impala.haiku_nets.CatchNet",
    "examples.impala.learner",
    "examples.impala.learner.Learner",
    "examples.impala.learner.run",
    "examples.impala.learner_test.jax",
    "examples.impala.learner_test.optax"
   ]
  },
  "type": "function"
 },
 "examples.impala.learner_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "examples.impala.learner_test.actor_lib": {
  "data": {
   "shadows": "examples.impala.actor"
  },
  "type": "import"
 },
 "examples.impala.learner_test.agent_lib": {
  "data": {
   "shadows": "examples.impala.agent"
  },
  "type": "import"
 },
 "examples.impala.learner_test.catch": {
  "data": {
   "shadows": "bsuite.environments.catch"
  },
  "type": "import"
 },
 "examples.impala.learner_test.haiku_nets": {
  "data": {
   "shadows": "examples.impala.haiku_nets"
  },
  "type": "import"
 },
 "examples.impala.learner_test.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "examples.impala.learner_test.learner_lib": {
  "data": {
   "shadows": "examples.impala.learner"
  },
  "type": "import"
 },
 "examples.impala.learner_test.optax": {
  "data": {
   "shadows": "optax"
  },
  "type": "import"
 },
 "examples.impala.run_catch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.app.run",
    "examples.impala.run_catch.ACTION_REPEAT",
    "examples.impala.run_catch.BATCH_SIZE",
    "examples.impala.run_catch.UNROLL_LENGTH",
    "examples.impala.run_catch.main"
   ]
  },
  "type": "module"
 },
 "examples.impala.run_catch.ACTION_REPEAT": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "examples.impala.run_catch.BATCH_SIZE": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "examples.impala.run_catch.DISCOUNT_FACTOR": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "examples.impala.run_catch.FRAMES_PER_ITER": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "examples.impala.run_catch.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "examples.impala.run_catch.MAX_ENV_FRAMES": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "examples.impala.run_catch.NUM_ACTORS": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "examples.impala.run_catch.UNROLL_LENGTH": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "examples.impala.run_catch.actor_lib": {
  "data": {
   "shadows": "examples.impala.actor"
  },
  "type": "import"
 },
 "examples.impala.run_catch.agent_lib": {
  "data": {
   "shadows": "examples.impala.agent"
  },
  "type": "import"
 },
 "examples.impala.run_catch.app": {
  "data": {
   "shadows": "absl.app"
  },
  "type": "import"
 },
 "examples.impala.run_catch.catch": {
  "data": {
   "shadows": "bsuite.environments.catch"
  },
  "type": "import"
 },
 "examples.impala.run_catch.haiku_nets": {
  "data": {
   "shadows": "examples.impala.haiku_nets"
  },
  "type": "import"
 },
 "examples.impala.run_catch.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "examples.impala.run_catch.learner_lib": {
  "data": {
   "shadows": "examples.impala.learner"
  },
  "type": "import"
 },
 "examples.impala.run_catch.main": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "bsuite.environments.catch.Catch",
    "build_env",
    "examples.impala.actor",
    "examples.impala.actor.Actor",
    "examples.impala.agent",
    "examples.impala.agent.Agent",
    "examples.impala.haiku_nets.CatchNet",
    "examples.impala.learner",
    "examples.impala.learner.Learner",
    "examples.impala.learner.run",
    "examples.impala.run_catch.BATCH_SIZE",
    "examples.impala.run_catch.DISCOUNT_FACTOR",
    "examples.impala.run_catch.FRAMES_PER_ITER",
    "examples.impala.run_catch.MAX_ENV_FRAMES",
    "examples.impala.run_catch.NUM_ACTORS",
    "examples.impala.run_catch.UNROLL_LENGTH",
    "examples.impala.run_catch.jax",
    "examples.impala.run_catch.optax",
    "examples.impala.run_catch.run_actor",
    "examples.impala.run_catch.threading",
    "examples.impala.util.AbslLogger",
    "int",
    "range"
   ]
  },
  "type": "function"
 },
 "examples.impala.run_catch.optax": {
  "data": {
   "shadows": "optax"
  },
  "type": "import"
 },
 "examples.impala.run_catch.run_actor": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "bool",
    "examples.impala.actor.Actor",
    "examples.impala.actor.pull_params",
    "examples.impala.actor.unroll_and_push",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "examples.impala.run_catch.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "examples.impala.run_catch.util": {
  "data": {
   "shadows": "examples.impala.util"
  },
  "type": "import"
 },
 "examples.impala.util": {
  "data": {
   "symbols_in_volume": [
    "examples.impala.util.collections"
   ]
  },
  "type": "module"
 },
 "examples.impala.util.AbslLogger": {
  "data": {
   "lineno": 52
  },
  "type": "class"
 },
 "examples.impala.util.AbslLogger.close": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "examples.impala.util.AbslLogger.write": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "absl.logging.info"
   ]
  },
  "type": "function"
 },
 "examples.impala.util.NullLogger": {
  "data": {
   "lineno": 42
  },
  "type": "class"
 },
 "examples.impala.util.NullLogger.close": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "examples.impala.util.NullLogger.write": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "examples.impala.util.Transition": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "examples.impala.util._preprocess_none": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "numpy.float32",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "examples.impala.util.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "examples.impala.util.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "examples.impala.util.logging": {
  "data": {
   "shadows": "absl.logging"
  },
  "type": "import"
 },
 "examples.impala.util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "examples.impala.util.preprocess_step": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "examples.impala.util._preprocess_none",
    "examples.impala.util.dm_env",
    "examples.impala.util.tree"
   ]
  },
  "type": "function"
 },
 "examples.impala.util.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "examples.impala_lite": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.app.run",
    "examples.impala_lite.main",
    "typing.Any"
   ]
  },
  "type": "module"
 },
 "examples.impala_lite.Agent": {
  "data": {
   "lineno": 70
  },
  "type": "class"
 },
 "examples.impala_lite.Agent.__init__": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "examples.impala_lite.Agent.loss": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ent_loss_fn",
    "examples.impala_lite.Transition",
    "examples.impala_lite.dm_env",
    "examples.impala_lite.functools",
    "examples.impala_lite.jax",
    "examples.impala_lite.rlax",
    "haiku.BatchApply",
    "haiku.Params",
    "int",
    "jax.numpy.float32",
    "jax.numpy.mean",
    "jax.numpy.ndarray",
    "jax.numpy.not_equal",
    "jax.numpy.square",
    "net_curried",
    "tb_pg_loss_fn",
    "vtrace_td_error_and_advantage"
   ]
  },
  "type": "function"
 },
 "examples.impala_lite.Agent.step": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "examples.impala_lite.dm_env",
    "examples.impala_lite.functools",
    "examples.impala_lite.jax",
    "haiku.Params",
    "haiku.multinomial",
    "jax.numpy.expand_dims",
    "jax.numpy.ndarray",
    "jax.numpy.squeeze",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "examples.impala_lite.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "examples.impala_lite.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "examples.impala_lite.Learner": {
  "data": {
   "lineno": 190
  },
  "type": "class"
 },
 "examples.impala_lite.Learner.__init__": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "examples.impala_lite.Agent"
   ]
  },
  "type": "function"
 },
 "examples.impala_lite.Learner.update": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "examples.impala_lite.OptState",
    "examples.impala_lite.Transition",
    "examples.impala_lite.functools",
    "examples.impala_lite.jax",
    "examples.impala_lite.optax",
    "haiku.Params",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "examples.impala_lite.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "examples.impala_lite.OptState": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "examples.impala_lite.SimpleNet": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "haiku.Module"
   ]
  },
  "type": "class"
 },
 "examples.impala_lite.SimpleNet.__call__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "examples.impala_lite.dm_env",
    "examples.impala_lite.jax",
    "haiku.Flatten",
    "haiku.Linear",
    "haiku.Sequential",
    "jax.numpy.ndarray",
    "jax.numpy.squeeze",
    "torso",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "examples.impala_lite.SimpleNet.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "examples.impala_lite.SimpleNet",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "examples.impala_lite.Transition": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "examples.impala_lite.dm_env",
    "int",
    "typing.Any",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "examples.impala_lite.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "examples.impala_lite.app": {
  "data": {
   "shadows": "absl.app"
  },
  "type": "import"
 },
 "examples.impala_lite.catch": {
  "data": {
   "shadows": "bsuite.environments.catch"
  },
  "type": "import"
 },
 "examples.impala_lite.dm_env": {
  "data": {
   "shadows": "dm_env"
  },
  "type": "import"
 },
 "examples.impala_lite.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "examples.impala_lite.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "examples.impala_lite.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "examples.impala_lite.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "examples.impala_lite.logging": {
  "data": {
   "shadows": "absl.logging"
  },
  "type": "import"
 },
 "examples.impala_lite.main": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "examples.impala_lite.run"
   ]
  },
  "type": "function"
 },
 "examples.impala_lite.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "examples.impala_lite.optax": {
  "data": {
   "shadows": "optax"
  },
  "type": "import"
 },
 "examples.impala_lite.preprocess_step": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "examples.impala_lite.dm_env",
    "examples.impala_lite.jax",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "examples.impala_lite.queue": {
  "data": {
   "shadows": "queue"
  },
  "type": "import"
 },
 "examples.impala_lite.rlax": {
  "data": {
   "shadows": "rlax"
  },
  "type": "import"
 },
 "examples.impala_lite.run": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "bsuite.environments.catch.Catch",
    "dequeue",
    "examples.impala_lite.Agent",
    "examples.impala_lite.Learner",
    "examples.impala_lite.SimpleNet",
    "examples.impala_lite.jax",
    "examples.impala_lite.optax",
    "examples.impala_lite.preprocess_step",
    "examples.impala_lite.queue",
    "examples.impala_lite.run_actor",
    "examples.impala_lite.threading",
    "haiku.transform",
    "haiku.without_apply_rng",
    "numpy.expand_dims",
    "range"
   ]
  },
  "type": "function"
 },
 "examples.impala_lite.run.dequeue": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "examples.impala_lite.jax",
    "numpy.stack",
    "range"
   ]
  },
  "type": "function"
 },
 "examples.impala_lite.run_actor": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "absl.logging.INFO",
    "absl.logging.log_every_n",
    "bsuite.environments.catch.Catch",
    "enqueue_traj",
    "examples.impala_lite.Agent",
    "examples.impala_lite.Transition",
    "examples.impala_lite.dm_env",
    "examples.impala_lite.jax",
    "examples.impala_lite.preprocess_step",
    "get_params",
    "haiku.Params",
    "int",
    "jax.numpy.ndarray",
    "numpy.stack",
    "range",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "examples.impala_lite.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "examples.impala_lite_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "examples.impala_lite_test.ImpalaLiteTest": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "examples.impala_lite_test.ImpalaLiteTest.test_impala_integration": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "examples.impala_lite.run"
   ]
  },
  "type": "function"
 },
 "examples.impala_lite_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "examples.impala_lite_test.impala_lite": {
  "data": {
   "shadows": "examples.impala_lite"
  },
  "type": "import"
 },
 "examples.mnist": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.app.run",
    "examples.mnist.main",
    "numpy.ndarray",
    "str",
    "typing.Any",
    "typing.Mapping"
   ]
  },
  "type": "module"
 },
 "examples.mnist.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "examples.mnist.Batch": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "examples.mnist.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "examples.mnist.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "examples.mnist.OptState": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "examples.mnist.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "examples.mnist.app": {
  "data": {
   "shadows": "absl.app"
  },
  "type": "import"
 },
 "examples.mnist.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "examples.mnist.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "examples.mnist.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "examples.mnist.load_dataset": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "bool",
    "examples.mnist.Batch",
    "int",
    "iter",
    "str",
    "tensorflow_datasets.as_numpy",
    "tensorflow_datasets.load",
    "typing.Generator"
   ]
  },
  "type": "function"
 },
 "examples.mnist.main": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "accuracy",
    "ema_update",
    "examples.mnist.jax",
    "examples.mnist.load_dataset",
    "examples.mnist.net_fn",
    "examples.mnist.optax",
    "haiku.transform",
    "haiku.without_apply_rng",
    "next",
    "print",
    "range",
    "update"
   ]
  },
  "type": "function"
 },
 "examples.mnist.main.accuracy": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "examples.mnist.Batch",
    "examples.mnist.jax",
    "haiku.Params",
    "jax.numpy.argmax",
    "jax.numpy.mean",
    "jax.numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "examples.mnist.main.ema_update": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "examples.mnist.jax",
    "float",
    "haiku.Params"
   ]
  },
  "type": "function"
 },
 "examples.mnist.main.loss": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "examples.mnist.Batch",
    "examples.mnist.jax",
    "haiku.Params",
    "jax.numpy.ndarray",
    "jax.numpy.square",
    "jax.numpy.sum",
    "sum"
   ]
  },
  "type": "function"
 },
 "examples.mnist.main.update": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "examples.mnist.Batch",
    "examples.mnist.OptState",
    "examples.mnist.jax",
    "examples.mnist.optax",
    "haiku.Params",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "examples.mnist.net_fn": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "examples.mnist.Batch",
    "examples.mnist.jax",
    "haiku.Flatten",
    "haiku.Linear",
    "haiku.Sequential",
    "jax.numpy.float32",
    "jax.numpy.ndarray",
    "mlp"
   ]
  },
  "type": "function"
 },
 "examples.mnist.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "examples.mnist.optax": {
  "data": {
   "shadows": "optax"
  },
  "type": "import"
 },
 "examples.mnist.tfds": {
  "data": {
   "shadows": "tensorflow_datasets"
  },
  "type": "import"
 },
 "examples.mnist_pruning": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.app.run",
    "bool",
    "examples.mnist_pruning.Predicate",
    "examples.mnist_pruning.main",
    "jax.numpy.ndarray",
    "numpy.ndarray",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Mapping",
    "typing.Sequence",
    "typing.Text",
    "typing.Tuple"
   ]
  },
  "type": "module"
 },
 "examples.mnist_pruning.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "examples.mnist_pruning.Batch": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "examples.mnist_pruning.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "examples.mnist_pruning.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "examples.mnist_pruning.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "examples.mnist_pruning.ModuleSparsity": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "examples.mnist_pruning.OptState": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "examples.mnist_pruning.Predicate": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "examples.mnist_pruning.PredicateMap": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "examples.mnist_pruning.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "examples.mnist_pruning.Text": {
  "data": {
   "shadows": "typing.Text"
  },
  "type": "import"
 },
 "examples.mnist_pruning.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "examples.mnist_pruning._create_partitions": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "examples.mnist_pruning.ModuleSparsity",
    "haiku.Params",
    "haiku.data_structures.partition",
    "jax.numpy.ndarray",
    "typing.Sequence",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "examples.mnist_pruning.app": {
  "data": {
   "shadows": "absl.app"
  },
  "type": "import"
 },
 "examples.mnist_pruning.apply_mask": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "examples.mnist_pruning.ModuleSparsity",
    "examples.mnist_pruning._create_partitions",
    "examples.mnist_pruning.functools",
    "examples.mnist_pruning.jax",
    "haiku.Params",
    "haiku.data_structures.merge",
    "typing.Sequence",
    "zip"
   ]
  },
  "type": "function"
 },
 "examples.mnist_pruning.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "examples.mnist_pruning.get_sparsity": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "examples.mnist_pruning.jax",
    "haiku.Params",
    "jax.numpy.size",
    "jax.numpy.sum",
    "sum"
   ]
  },
  "type": "function"
 },
 "examples.mnist_pruning.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "examples.mnist_pruning.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "examples.mnist_pruning.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "examples.mnist_pruning.load_dataset": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "bool",
    "examples.mnist_pruning.Batch",
    "int",
    "str",
    "tensorflow_datasets.as_numpy",
    "tensorflow_datasets.load",
    "typing.Generator"
   ]
  },
  "type": "function"
 },
 "examples.mnist_pruning.main": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "accuracy",
    "ema_update",
    "examples.mnist_pruning.apply_mask",
    "examples.mnist_pruning.get_sparsity",
    "examples.mnist_pruning.jax",
    "examples.mnist_pruning.load_dataset",
    "examples.mnist_pruning.net_fn",
    "examples.mnist_pruning.optax",
    "examples.mnist_pruning.update_mask",
    "examples.mnist_pruning.zhugupta_func",
    "get_updates",
    "haiku.transform",
    "haiku.without_apply_rng",
    "max",
    "min",
    "module_matching",
    "next",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "examples.mnist_pruning.main.accuracy": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "examples.mnist_pruning.Batch",
    "examples.mnist_pruning.jax",
    "haiku.Params",
    "jax.numpy.argmax",
    "jax.numpy.mean",
    "jax.numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "examples.mnist_pruning.main.ema_update": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "examples.mnist_pruning.jax",
    "float",
    "haiku.Params"
   ]
  },
  "type": "function"
 },
 "examples.mnist_pruning.main.get_updates": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "examples.mnist_pruning.Batch",
    "examples.mnist_pruning.OptState",
    "examples.mnist_pruning.jax",
    "haiku.Params",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "examples.mnist_pruning.main.loss": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "examples.mnist_pruning.Batch",
    "examples.mnist_pruning.jax",
    "haiku.Params",
    "jax.numpy.ndarray",
    "jax.numpy.square",
    "jax.numpy.sum",
    "sum"
   ]
  },
  "type": "function"
 },
 "examples.mnist_pruning.main.module_matching": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "examples.mnist_pruning.main.module_matching.match_func": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "examples.mnist_pruning.sparsity_ignore"
   ]
  },
  "type": "function"
 },
 "examples.mnist_pruning.net_fn": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "examples.mnist_pruning.Batch",
    "examples.mnist_pruning.jax",
    "haiku.Flatten",
    "haiku.Linear",
    "haiku.Sequential",
    "jax.numpy.float32",
    "jax.numpy.ndarray",
    "mlp"
   ]
  },
  "type": "function"
 },
 "examples.mnist_pruning.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "examples.mnist_pruning.optax": {
  "data": {
   "shadows": "optax"
  },
  "type": "import"
 },
 "examples.mnist_pruning.sparsity_ignore": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "bool",
    "jax.numpy.ndarray",
    "typing.Text"
   ]
  },
  "type": "function"
 },
 "examples.mnist_pruning.tfds": {
  "data": {
   "shadows": "tensorflow_datasets"
  },
  "type": "import"
 },
 "examples.mnist_pruning.topk_mask": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "examples.mnist_pruning.jax",
    "float",
    "jax.numpy.arange",
    "jax.numpy.int32",
    "jax.numpy.ndarray",
    "jax.numpy.reshape",
    "jax.numpy.size",
    "jax.numpy.zeros_like",
    "topk_mask_internal"
   ]
  },
  "type": "function"
 },
 "examples.mnist_pruning.topk_mask.topk_mask_internal": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "examples.mnist_pruning.jax",
    "jax.numpy.argsort",
    "jax.numpy.greater_equal",
    "jax.numpy.int32",
    "jax.numpy.round",
    "jax.numpy.size",
    "jax.numpy.zeros_like",
    "numpy.arange",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "examples.mnist_pruning.update_mask": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "examples.mnist_pruning.ModuleSparsity",
    "examples.mnist_pruning._create_partitions",
    "examples.mnist_pruning.functools",
    "examples.mnist_pruning.jax",
    "float",
    "haiku.Params",
    "typing.Sequence",
    "zip"
   ]
  },
  "type": "function"
 },
 "examples.mnist_pruning.update_mask.map_fn": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "examples.mnist_pruning.topk_mask",
    "float",
    "jax.numpy.abs",
    "jax.numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "examples.mnist_pruning.zhugupta_func": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "jax.numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "examples.rnn": {
  "data": {},
  "type": "module"
 },
 "examples.rnn.dataset": {
  "data": {
   "symbols_in_volume": [
    "numpy.ndarray",
    "str",
    "typing.Mapping"
   ]
  },
  "type": "module"
 },
 "examples.rnn.dataset.Batch": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "examples.rnn.dataset.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "examples.rnn.dataset.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "examples.rnn.dataset.NUM_CHARS": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "examples.rnn.dataset.decode": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "chr",
    "numpy.ndarray",
    "str"
   ]
  },
  "type": "function"
 },
 "examples.rnn.dataset.encode": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ndarray",
    "ord",
    "str"
   ]
  },
  "type": "function"
 },
 "examples.rnn.dataset.load": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "examples.rnn.dataset.Batch",
    "int",
    "tensorflow.compat.v2.nest.map_structure",
    "tensorflow.compat.v2.transpose",
    "tensorflow_datasets.Split",
    "tensorflow_datasets.as_numpy",
    "tensorflow_datasets.load",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "examples.rnn.dataset.load.preprocess_fn": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "str",
    "tensorflow.compat.v2.Tensor",
    "tensorflow.compat.v2.cast",
    "tensorflow.compat.v2.int32",
    "tensorflow.compat.v2.io.decode_raw",
    "tensorflow.compat.v2.squeeze",
    "tensorflow.compat.v2.strings.unicode_split",
    "tensorflow.compat.v2.uint8",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "examples.rnn.dataset.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "examples.rnn.dataset.tf": {
  "data": {
   "shadows": "tensorflow.compat.v2"
  },
  "type": "import"
 },
 "examples.rnn.dataset.tfds": {
  "data": {
   "shadows": "tensorflow_datasets"
  },
  "type": "import"
 },
 "examples.rnn.train": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.app.run",
    "absl.flags.DEFINE_float",
    "absl.flags.DEFINE_integer",
    "absl.flags.FLAGS",
    "examples.rnn.train.main"
   ]
  },
  "type": "module"
 },
 "examples.rnn.train.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "examples.rnn.train.FLAGS": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "examples.rnn.train.LoopValues": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "jax.numpy.ndarray",
    "typing.Any",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "examples.rnn.train.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "examples.rnn.train.TrainingState": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "haiku.Params",
    "typing.Any",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "examples.rnn.train.app": {
  "data": {
   "shadows": "absl.app"
  },
  "type": "import"
 },
 "examples.rnn.train.dataset": {
  "data": {
   "shadows": "examples.rnn.dataset"
  },
  "type": "import"
 },
 "examples.rnn.train.flags": {
  "data": {
   "shadows": "absl.flags"
  },
  "type": "import"
 },
 "examples.rnn.train.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "examples.rnn.train.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "examples.rnn.train.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "examples.rnn.train.lax": {
  "data": {
   "shadows": "jax.lax"
  },
  "type": "import"
 },
 "examples.rnn.train.logging": {
  "data": {
   "shadows": "absl.logging"
  },
  "type": "import"
 },
 "examples.rnn.train.main": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "absl.logging.info",
    "examples.rnn.dataset.decode",
    "examples.rnn.dataset.load",
    "examples.rnn.train.FLAGS",
    "examples.rnn.train.TrainingState",
    "examples.rnn.train.jax",
    "examples.rnn.train.make_optimizer",
    "examples.rnn.train.sample",
    "examples.rnn.train.sequence_loss",
    "examples.rnn.train.update",
    "float",
    "haiku.PRNGSequence",
    "haiku.transform",
    "haiku.without_apply_rng",
    "loss_fn",
    "next",
    "opt_init",
    "params_init",
    "range",
    "sample_fn",
    "tensorflow_datasets.Split.TEST",
    "tensorflow_datasets.Split.TRAIN"
   ]
  },
  "type": "function"
 },
 "examples.rnn.train.make_network": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "examples.rnn.dataset.NUM_CHARS",
    "examples.rnn.train.FLAGS",
    "examples.rnn.train.jax",
    "haiku.DeepRNN",
    "haiku.LSTM",
    "haiku.RNNCore",
    "haiku.nets.MLP"
   ]
  },
  "type": "function"
 },
 "examples.rnn.train.make_optimizer": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "examples.rnn.train.FLAGS",
    "examples.rnn.train.optax"
   ]
  },
  "type": "function"
 },
 "examples.rnn.train.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "examples.rnn.train.ops": {
  "data": {
   "shadows": "jax.ops"
  },
  "type": "import"
 },
 "examples.rnn.train.optax": {
  "data": {
   "shadows": "optax"
  },
  "type": "import"
 },
 "examples.rnn.train.sample": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "core",
    "core.initial_state",
    "examples.rnn.train.LoopValues",
    "examples.rnn.train.jax",
    "examples.rnn.train.make_network",
    "haiku.dynamic_unroll",
    "int",
    "jax.lax.fori_loop",
    "jax.numpy.ndarray",
    "jax.ops.index",
    "jax.ops.index_update",
    "numpy.int32",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "examples.rnn.train.sample.body_fn": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "core",
    "examples.rnn.train.LoopValues",
    "examples.rnn.train.jax",
    "int",
    "jax.ops.index",
    "jax.ops.index_update"
   ]
  },
  "type": "function"
 },
 "examples.rnn.train.sequence_loss": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "examples.rnn.dataset.Batch",
    "examples.rnn.train.jax",
    "examples.rnn.train.make_network",
    "haiku.dynamic_unroll",
    "jax.numpy.ndarray",
    "jax.numpy.sum"
   ]
  },
  "type": "function"
 },
 "examples.rnn.train.tfds": {
  "data": {
   "shadows": "tensorflow_datasets"
  },
  "type": "import"
 },
 "examples.rnn.train.update": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "examples.rnn.dataset.Batch",
    "examples.rnn.train.TrainingState",
    "examples.rnn.train.jax",
    "examples.rnn.train.make_optimizer",
    "examples.rnn.train.optax",
    "examples.rnn.train.sequence_loss",
    "haiku.transform",
    "haiku.without_apply_rng",
    "optimizer"
   ]
  },
  "type": "function"
 },
 "examples.transformer": {
  "data": {},
  "type": "module"
 },
 "examples.transformer.dataset": {
  "data": {},
  "type": "module"
 },
 "examples.transformer.dataset.LanguageDataset": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "int",
    "tensorflow.compat.v2.data.Dataset",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "examples.transformer.dataset.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "examples.transformer.dataset._crop_or_pad": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "tensorflow.compat.v2.cond",
    "tensorflow.compat.v2.pad",
    "tensorflow.compat.v2.size"
   ]
  },
  "type": "function"
 },
 "examples.transformer.dataset.load": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "_crop_or_pad",
    "dict",
    "examples.transformer.dataset.LanguageDataset",
    "int",
    "tensorflow.compat.v2.cast",
    "tensorflow.compat.v2.data.experimental.AUTOTUNE",
    "tensorflow.compat.v2.int32",
    "tensorflow_datasets.Split.TRAIN",
    "tensorflow_datasets.as_numpy",
    "tensorflow_datasets.load"
   ]
  },
  "type": "function"
 },
 "examples.transformer.dataset.tf": {
  "data": {
   "shadows": "tensorflow.compat.v2"
  },
  "type": "import"
 },
 "examples.transformer.dataset.tfds": {
  "data": {
   "shadows": "tensorflow_datasets"
  },
  "type": "import"
 },
 "examples.transformer.model": {
  "data": {},
  "type": "module"
 },
 "examples.transformer.model.CausalSelfAttention": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "haiku.MultiHeadAttention"
   ]
  },
  "type": "class"
 },
 "examples.transformer.model.CausalSelfAttention.__call__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "jax.numpy.ndarray",
    "numpy.ones",
    "numpy.tril",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "examples.transformer.model.DenseBlock": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "haiku.Module"
   ]
  },
  "type": "class"
 },
 "examples.transformer.model.DenseBlock.__call__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "examples.transformer.model.jax",
    "haiku.Linear",
    "haiku.initializers.VarianceScaling",
    "jax.numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "examples.transformer.model.DenseBlock.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "float",
    "int",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "examples.transformer.model.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "examples.transformer.model.Transformer": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "haiku.Module"
   ]
  },
  "type": "class"
 },
 "examples.transformer.model.Transformer.__call__": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "bool",
    "examples.transformer.model.CausalSelfAttention",
    "examples.transformer.model.DenseBlock",
    "haiku.dropout",
    "haiku.next_rng_key",
    "jax.numpy.ndarray",
    "layer_norm",
    "range",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "examples.transformer.model.Transformer.__init__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "float",
    "int",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "examples.transformer.model.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "examples.transformer.model.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "examples.transformer.model.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "examples.transformer.model.layer_norm": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "haiku.LayerNorm",
    "jax.numpy.ndarray",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "examples.transformer.model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "examples.transformer.train": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.app.run",
    "absl.flags.DEFINE_float",
    "absl.flags.DEFINE_integer",
    "absl.flags.DEFINE_string",
    "absl.flags.FLAGS",
    "examples.transformer.train.main",
    "tensorflow.compat.v2.enable_v2_behavior"
   ]
  },
  "type": "module"
 },
 "examples.transformer.train.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "examples.transformer.train.CheckpointingUpdater": {
  "data": {
   "lineno": 161
  },
  "type": "class"
 },
 "examples.transformer.train.CheckpointingUpdater.__init__": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "examples.transformer.train.Updater",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "examples.transformer.train.CheckpointingUpdater._checkpoint_paths": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "examples.transformer.train.os"
   ]
  },
  "type": "function"
 },
 "examples.transformer.train.CheckpointingUpdater.init": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "absl.logging.info",
    "examples.transformer.train.os",
    "examples.transformer.train.pickle",
    "open"
   ]
  },
  "type": "function"
 },
 "examples.transformer.train.CheckpointingUpdater.update": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "absl.logging.info",
    "examples.transformer.train.jax",
    "examples.transformer.train.os",
    "examples.transformer.train.pickle",
    "numpy.array",
    "open"
   ]
  },
  "type": "function"
 },
 "examples.transformer.train.FLAGS": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "examples.transformer.train.LOG_EVERY": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "examples.transformer.train.MAX_STEPS": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "examples.transformer.train.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "examples.transformer.train.Updater": {
  "data": {
   "lineno": 111
  },
  "type": "class"
 },
 "examples.transformer.train.Updater.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "examples.transformer.train.optax"
   ]
  },
  "type": "function"
 },
 "examples.transformer.train.Updater.init": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "dict",
    "examples.transformer.train.functools",
    "examples.transformer.train.jax",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "examples.transformer.train.Updater.update": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "examples.transformer.train.functools",
    "examples.transformer.train.jax",
    "examples.transformer.train.optax",
    "jax.numpy.ndarray",
    "str",
    "typing.Any",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "examples.transformer.train.app": {
  "data": {
   "shadows": "absl.app"
  },
  "type": "import"
 },
 "examples.transformer.train.build_forward_fn": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "examples.transformer.train.build_forward_fn.forward_fn": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "bool",
    "examples.transformer.model.Transformer",
    "haiku.Embed",
    "haiku.Linear",
    "haiku.get_parameter",
    "haiku.initializers.TruncatedNormal",
    "jax.numpy.greater",
    "jax.numpy.ndarray",
    "str",
    "token_embedding_map",
    "transformer",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "examples.transformer.train.dataset": {
  "data": {
   "shadows": "examples.transformer.dataset"
  },
  "type": "import"
 },
 "examples.transformer.train.flags": {
  "data": {
   "shadows": "absl.flags"
  },
  "type": "import"
 },
 "examples.transformer.train.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "examples.transformer.train.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "examples.transformer.train.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "examples.transformer.train.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "examples.transformer.train.lm_loss_fn": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "bool",
    "examples.transformer.train.jax",
    "forward_fn",
    "int",
    "jax.numpy.greater",
    "jax.numpy.ndarray",
    "jax.numpy.sum",
    "str",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "examples.transformer.train.logging": {
  "data": {
   "shadows": "absl.logging"
  },
  "type": "import"
 },
 "examples.transformer.train.main": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "absl.logging.info",
    "examples.transformer.dataset.load",
    "examples.transformer.train.CheckpointingUpdater",
    "examples.transformer.train.FLAGS",
    "examples.transformer.train.LOG_EVERY",
    "examples.transformer.train.MAX_STEPS",
    "examples.transformer.train.Updater",
    "examples.transformer.train.build_forward_fn",
    "examples.transformer.train.functools",
    "examples.transformer.train.jax",
    "examples.transformer.train.lm_loss_fn",
    "examples.transformer.train.optax",
    "examples.transformer.train.time",
    "float",
    "forward_fn",
    "forward_fn.apply",
    "forward_fn.init",
    "haiku.transform",
    "next",
    "range"
   ]
  },
  "type": "function"
 },
 "examples.transformer.train.model": {
  "data": {
   "shadows": "examples.transformer.model"
  },
  "type": "import"
 },
 "examples.transformer.train.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "examples.transformer.train.optax": {
  "data": {
   "shadows": "optax"
  },
  "type": "import"
 },
 "examples.transformer.train.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "examples.transformer.train.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "examples.transformer.train.tf": {
  "data": {
   "shadows": "tensorflow.compat.v2"
  },
  "type": "import"
 },
 "examples.transformer.train.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "examples.vae": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.app.run",
    "absl.flags.DEFINE_float",
    "absl.flags.DEFINE_integer",
    "absl.flags.FLAGS",
    "examples.vae.main",
    "int",
    "jax.numpy.ndarray",
    "numpy.ndarray",
    "str",
    "typing.Any",
    "typing.Mapping",
    "typing.Sequence"
   ]
  },
  "type": "module"
 },
 "examples.vae.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "examples.vae.Batch": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "examples.vae.Decoder": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "haiku.Module"
   ]
  },
  "type": "class"
 },
 "examples.vae.Decoder.__call__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "examples.vae.jax",
    "haiku.Linear",
    "jax.numpy.ndarray",
    "jax.numpy.reshape",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "examples.vae.Decoder.__init__": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "int",
    "super",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "examples.vae.Encoder": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "haiku.Module"
   ]
  },
  "type": "class"
 },
 "examples.vae.Encoder.__call__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "examples.vae.jax",
    "haiku.Flatten",
    "haiku.Linear",
    "jax.numpy.exp",
    "jax.numpy.ndarray",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "examples.vae.Encoder.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "examples.vae.FLAGS": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "examples.vae.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "examples.vae.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "examples.vae.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "examples.vae.OptState": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "examples.vae.PRNGKey": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "examples.vae.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "examples.vae.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "examples.vae.VAEOutput": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "jax.numpy.ndarray",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "examples.vae.VariationalAutoEncoder": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "haiku.Module"
   ]
  },
  "type": "class"
 },
 "examples.vae.VariationalAutoEncoder.__call__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "examples.vae.Decoder",
    "examples.vae.Encoder",
    "examples.vae.VAEOutput",
    "examples.vae.jax",
    "haiku.next_rng_key",
    "jax.numpy.float32",
    "jax.numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "examples.vae.VariationalAutoEncoder.__init__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "int",
    "super",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "examples.vae.app": {
  "data": {
   "shadows": "absl.app"
  },
  "type": "import"
 },
 "examples.vae.binary_cross_entropy": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ValueError",
    "jax.numpy.logaddexp",
    "jax.numpy.ndarray",
    "jax.numpy.reshape",
    "jax.numpy.sum"
   ]
  },
  "type": "function"
 },
 "examples.vae.flags": {
  "data": {
   "shadows": "absl.flags"
  },
  "type": "import"
 },
 "examples.vae.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "examples.vae.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "examples.vae.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "examples.vae.kl_gaussian": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "jax.numpy.log",
    "jax.numpy.ndarray",
    "jax.numpy.sum"
   ]
  },
  "type": "function"
 },
 "examples.vae.load_dataset": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "examples.vae.Batch",
    "int",
    "iter",
    "str",
    "tensorflow_datasets.as_numpy",
    "tensorflow_datasets.load",
    "typing.Generator"
   ]
  },
  "type": "function"
 },
 "examples.vae.logging": {
  "data": {
   "shadows": "absl.logging"
  },
  "type": "import"
 },
 "examples.vae.main": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "absl.logging.info",
    "examples.vae.FLAGS",
    "examples.vae.VariationalAutoEncoder",
    "examples.vae.load_dataset",
    "examples.vae.optax",
    "haiku.PRNGSequence",
    "haiku.transform",
    "loss_fn",
    "next",
    "numpy.zeros",
    "range",
    "tensorflow_datasets.Split.TEST",
    "tensorflow_datasets.Split.TRAIN",
    "update"
   ]
  },
  "type": "function"
 },
 "examples.vae.main.loss_fn": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "examples.vae.Batch",
    "examples.vae.PRNGKey",
    "examples.vae.VAEOutput",
    "examples.vae.binary_cross_entropy",
    "examples.vae.jax",
    "examples.vae.kl_gaussian",
    "haiku.Params",
    "jax.numpy.mean",
    "jax.numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "examples.vae.main.update": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "examples.vae.Batch",
    "examples.vae.OptState",
    "examples.vae.PRNGKey",
    "examples.vae.jax",
    "examples.vae.optax",
    "haiku.Params",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "examples.vae.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "examples.vae.optax": {
  "data": {
   "shadows": "optax"
  },
  "type": "import"
 },
 "examples.vae.tfds": {
  "data": {
   "shadows": "tensorflow_datasets"
  },
  "type": "import"
 },
 "haiku": {
  "data": {
   "symbols_in_volume": [
    "NameError"
   ]
  },
  "type": "module"
 },
 "haiku.AvgPool": {
  "data": {
   "shadows": "haiku._src.pool.AvgPool"
  },
  "type": "import"
 },
 "haiku.BatchApply": {
  "data": {
   "shadows": "haiku._src.basic.BatchApply"
  },
  "type": "import"
 },
 "haiku.BatchNorm": {
  "data": {
   "shadows": "haiku._src.batch_norm.BatchNorm"
  },
  "type": "import"
 },
 "haiku.Bias": {
  "data": {
   "shadows": "haiku._src.bias.Bias"
  },
  "type": "import"
 },
 "haiku.Conv1D": {
  "data": {
   "shadows": "haiku._src.conv.Conv1D"
  },
  "type": "import"
 },
 "haiku.Conv1DLSTM": {
  "data": {
   "shadows": "haiku._src.recurrent.Conv1DLSTM"
  },
  "type": "import"
 },
 "haiku.Conv1DTranspose": {
  "data": {
   "shadows": "haiku._src.conv.Conv1DTranspose"
  },
  "type": "import"
 },
 "haiku.Conv2D": {
  "data": {
   "shadows": "haiku._src.conv.Conv2D"
  },
  "type": "import"
 },
 "haiku.Conv2DLSTM": {
  "data": {
   "shadows": "haiku._src.recurrent.Conv2DLSTM"
  },
  "type": "import"
 },
 "haiku.Conv2DTranspose": {
  "data": {
   "shadows": "haiku._src.conv.Conv2DTranspose"
  },
  "type": "import"
 },
 "haiku.Conv3D": {
  "data": {
   "shadows": "haiku._src.conv.Conv3D"
  },
  "type": "import"
 },
 "haiku.Conv3DLSTM": {
  "data": {
   "shadows": "haiku._src.recurrent.Conv3DLSTM"
  },
  "type": "import"
 },
 "haiku.Conv3DTranspose": {
  "data": {
   "shadows": "haiku._src.conv.Conv3DTranspose"
  },
  "type": "import"
 },
 "haiku.ConvND": {
  "data": {
   "shadows": "haiku._src.conv.ConvND"
  },
  "type": "import"
 },
 "haiku.ConvNDTranspose": {
  "data": {
   "shadows": "haiku._src.conv.ConvNDTranspose"
  },
  "type": "import"
 },
 "haiku.DeepRNN": {
  "data": {
   "shadows": "haiku._src.recurrent.DeepRNN"
  },
  "type": "import"
 },
 "haiku.DepthwiseConv2D": {
  "data": {
   "shadows": "haiku._src.depthwise_conv.DepthwiseConv2D"
  },
  "type": "import"
 },
 "haiku.EMAParamsTree": {
  "data": {
   "shadows": "haiku._src.moving_averages.EMAParamsTree"
  },
  "type": "import"
 },
 "haiku.Embed": {
  "data": {
   "shadows": "haiku._src.embed.Embed"
  },
  "type": "import"
 },
 "haiku.EmbedLookupStyle": {
  "data": {
   "shadows": "haiku._src.embed.EmbedLookupStyle"
  },
  "type": "import"
 },
 "haiku.ExponentialMovingAverage": {
  "data": {
   "shadows": "haiku._src.moving_averages.ExponentialMovingAverage"
  },
  "type": "import"
 },
 "haiku.Flatten": {
  "data": {
   "shadows": "haiku._src.reshape.Flatten"
  },
  "type": "import"
 },
 "haiku.GRU": {
  "data": {
   "shadows": "haiku._src.recurrent.GRU"
  },
  "type": "import"
 },
 "haiku.GroupNorm": {
  "data": {
   "shadows": "haiku._src.group_norm.GroupNorm"
  },
  "type": "import"
 },
 "haiku.IdentityCore": {
  "data": {
   "shadows": "haiku._src.recurrent.IdentityCore"
  },
  "type": "import"
 },
 "haiku.InstanceNorm": {
  "data": {
   "shadows": "haiku._src.layer_norm.InstanceNorm"
  },
  "type": "import"
 },
 "haiku.LSTM": {
  "data": {
   "shadows": "haiku._src.recurrent.LSTM"
  },
  "type": "import"
 },
 "haiku.LSTMState": {
  "data": {
   "shadows": "haiku._src.recurrent.LSTMState"
  },
  "type": "import"
 },
 "haiku.LayerNorm": {
  "data": {
   "shadows": "haiku._src.layer_norm.LayerNorm"
  },
  "type": "import"
 },
 "haiku.Linear": {
  "data": {
   "shadows": "haiku._src.basic.Linear"
  },
  "type": "import"
 },
 "haiku.MaxPool": {
  "data": {
   "shadows": "haiku._src.pool.MaxPool"
  },
  "type": "import"
 },
 "haiku.Module": {
  "data": {
   "shadows": "haiku._src.module.Module"
  },
  "type": "import"
 },
 "haiku.MultiHeadAttention": {
  "data": {
   "shadows": "haiku._src.attention.MultiHeadAttention"
  },
  "type": "import"
 },
 "haiku.PRNGSequence": {
  "data": {
   "shadows": "haiku._src.base.PRNGSequence"
  },
  "type": "import"
 },
 "haiku.Params": {
  "data": {
   "shadows": "haiku._src.typing.Params"
  },
  "type": "import"
 },
 "haiku.RNNCore": {
  "data": {
   "shadows": "haiku._src.recurrent.RNNCore"
  },
  "type": "import"
 },
 "haiku.ResetCore": {
  "data": {
   "shadows": "haiku._src.recurrent.ResetCore"
  },
  "type": "import"
 },
 "haiku.Reshape": {
  "data": {
   "shadows": "haiku._src.reshape.Reshape"
  },
  "type": "import"
 },
 "haiku.SNParamsTree": {
  "data": {
   "shadows": "haiku._src.spectral_norm.SNParamsTree"
  },
  "type": "import"
 },
 "haiku.SeparableDepthwiseConv2D": {
  "data": {
   "shadows": "haiku._src.depthwise_conv.SeparableDepthwiseConv2D"
  },
  "type": "import"
 },
 "haiku.Sequential": {
  "data": {
   "shadows": "haiku._src.basic.Sequential"
  },
  "type": "import"
 },
 "haiku.SpectralNorm": {
  "data": {
   "shadows": "haiku._src.spectral_norm.SpectralNorm"
  },
  "type": "import"
 },
 "haiku.State": {
  "data": {
   "shadows": "haiku._src.typing.State"
  },
  "type": "import"
 },
 "haiku.Transformed": {
  "data": {
   "shadows": "haiku._src.transform.Transformed"
  },
  "type": "import"
 },
 "haiku.TransformedWithState": {
  "data": {
   "shadows": "haiku._src.transform.TransformedWithState"
  },
  "type": "import"
 },
 "haiku.VanillaRNN": {
  "data": {
   "shadows": "haiku._src.recurrent.VanillaRNN"
  },
  "type": "import"
 },
 "haiku.__all__": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "haiku.__version__": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "haiku._src": {
  "data": {},
  "type": "module"
 },
 "haiku._src.analytics": {
  "data": {},
  "type": "module"
 },
 "haiku._src.analytics.Text": {
  "data": {
   "shadows": "typing.Text"
  },
  "type": "import"
 },
 "haiku._src.analytics.log_once": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "typing.Text"
   ]
  },
  "type": "function"
 },
 "haiku._src.attention": {
  "data": {
   "symbols_in_volume": [
    "haiku._src.attention.hk",
    "haiku._src.attention.types",
    "haiku._src.basic",
    "haiku._src.basic.Linear",
    "haiku._src.initializers",
    "haiku._src.module",
    "haiku._src.module.Module",
    "haiku._src.module.transparent"
   ]
  },
  "type": "module"
 },
 "haiku._src.attention.MultiHeadAttention": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "haiku._src.attention.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.attention.MultiHeadAttention.__call__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "haiku._src.attention.hk",
    "haiku._src.attention.jax",
    "jax.numpy.einsum",
    "jax.numpy.ndarray",
    "jax.numpy.reshape",
    "numpy.sqrt",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.attention.MultiHeadAttention.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "float",
    "haiku._src.attention.hk",
    "int",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.attention.MultiHeadAttention._linear_projection": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "haiku._src.attention.hk",
    "int",
    "jax.numpy.ndarray",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.attention.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "haiku._src.attention.basic": {
  "data": {
   "shadows": "haiku._src.basic"
  },
  "type": "import"
 },
 "haiku._src.attention.hk": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "haiku._src.attention.initializers": {
  "data": {
   "shadows": "haiku._src.initializers"
  },
  "type": "import"
 },
 "haiku._src.attention.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.attention.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.attention.module": {
  "data": {
   "shadows": "haiku._src.module"
  },
  "type": "import"
 },
 "haiku._src.attention.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.attention.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "haiku._src.attention_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "haiku._src.attention_test.MultiHeadAttentionTest": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.attention_test.MultiHeadAttentionTest.test_shapes": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "haiku._src.attention.MultiHeadAttention",
    "haiku._src.test_utils.transform_and_run",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.attention_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.attention_test.attention": {
  "data": {
   "shadows": "haiku._src.attention"
  },
  "type": "import"
 },
 "haiku._src.attention_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.attention_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.attention_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.base": {
  "data": {
   "symbols_in_volume": [
    "haiku._src.base.GetterContext",
    "haiku._src.base.NextCreator",
    "haiku._src.base.NextGetter",
    "haiku._src.base.StatePair",
    "haiku._src.base.ThreadLocalStack",
    "haiku._src.base.collections",
    "haiku._src.data_structures.Stack",
    "haiku._src.data_structures.ThreadLocalStack",
    "haiku._src.typing.Initializer",
    "haiku._src.typing.PRNGKey",
    "int",
    "jax.numpy.ndarray",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Iterable",
    "typing.MutableMapping",
    "typing.Sequence",
    "typing.Tuple"
   ]
  },
  "type": "module"
 },
 "haiku._src.base.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "haiku._src.base.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "haiku._src.base.Creator": {
  "data": {
   "lineno": 323
  },
  "type": "constant"
 },
 "haiku._src.base.DEFAULT_PRNG_RESERVE_SIZE": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "haiku._src.base.Frame": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "haiku._src.base.ModuleState",
    "haiku._src.base.MutableParams",
    "haiku._src.base.MutableState",
    "haiku._src.base.Stack",
    "haiku._src.base.collections",
    "haiku._src.typing.Params",
    "str",
    "typing.NamedTuple",
    "typing.Optional",
    "typing.Set",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "haiku._src.base.Frame.create": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "classmethod",
    "haiku._src.base.Frame",
    "haiku._src.base.Stack",
    "haiku._src.base.collections",
    "set",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.Frame.evolve": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "haiku._src.base.Frame"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.Frame.module": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "haiku._src.base.ModuleState",
    "haiku._src.base.collections",
    "haiku._src.base.contextlib",
    "set"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.Frame.params_frozen": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "haiku._src.data_structures.FlatMapping",
    "isinstance",
    "property"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.FrozenSet": {
  "data": {
   "shadows": "typing.FrozenSet"
  },
  "type": "import"
 },
 "haiku._src.base.Getter": {
  "data": {
   "lineno": 394
  },
  "type": "constant"
 },
 "haiku._src.base.GetterContext": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "haiku._src.typing.Module",
    "int",
    "str",
    "typing.Any",
    "typing.NamedTuple",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "haiku._src.base.HaikuContext": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "haiku._src.base.HaikuContext.__enter__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "haiku._src.base.Frame"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.HaikuContext.__exit__": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "haiku._src.base.HaikuContext.__init__": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "haiku._src.base.MutableParams",
    "haiku._src.base.MutableState",
    "haiku._src.base.ThreadLocalStack",
    "haiku._src.base.collections",
    "haiku._src.typing.Params",
    "haiku._src.typing.State",
    "set",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.HaikuContext.collect_initial_state": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "extract_state",
    "haiku._src.typing.State"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.HaikuContext.collect_params": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "haiku._src.data_structures.to_immutable_dict",
    "haiku._src.typing.Params"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.HaikuContext.collect_state": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "extract_state",
    "haiku._src.typing.State"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.Initializer": {
  "data": {
   "shadows": "haiku._src.typing.Initializer"
  },
  "type": "import"
 },
 "haiku._src.base.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "haiku._src.base.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "haiku._src.base.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "haiku._src.base.Module": {
  "data": {
   "shadows": "haiku._src.typing.Module"
  },
  "type": "import"
 },
 "haiku._src.base.ModuleState": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "haiku._src.base.MutableMapping": {
  "data": {
   "shadows": "typing.MutableMapping"
  },
  "type": "import"
 },
 "haiku._src.base.MutableParams": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "haiku._src.base.MutableState": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "haiku._src.base.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "haiku._src.base.NextCreator": {
  "data": {
   "lineno": 322
  },
  "type": "constant"
 },
 "haiku._src.base.NextGetter": {
  "data": {
   "lineno": 393
  },
  "type": "constant"
 },
 "haiku._src.base.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "haiku._src.base.PRNGKey": {
  "data": {
   "shadows": "haiku._src.typing.PRNGKey"
  },
  "type": "import"
 },
 "haiku._src.base.PRNGSequence": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "haiku._src.typing.PRNGKey",
    "next",
    "typing.Iterator"
   ]
  },
  "type": "class"
 },
 "haiku._src.base.PRNGSequence.__init__": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "haiku._src.base.PRNGSequenceState",
    "haiku._src.base.assert_is_prng_key",
    "haiku._src.base.collections",
    "haiku._src.base.jax",
    "haiku._src.typing.PRNGKey",
    "int",
    "isinstance",
    "map",
    "tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.PRNGSequence.__next__": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "haiku._src.base.DEFAULT_PRNG_RESERVE_SIZE",
    "haiku._src.typing.PRNGKey"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.PRNGSequence.internal_state": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "haiku._src.base.PRNGSequenceState",
    "property",
    "tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.PRNGSequence.replace_internal_state": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "haiku._src.base.PRNGSequenceState",
    "haiku._src.base.assert_is_prng_key",
    "haiku._src.base.collections",
    "map"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.PRNGSequence.reserve": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "haiku._src.base.jax",
    "tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.PRNGSequence.reserve_up_to_full": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "haiku._src.base.DEFAULT_PRNG_RESERVE_SIZE",
    "haiku._src.base.collections",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.PRNGSequence.take": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "haiku._src.typing.PRNGKey",
    "len",
    "max",
    "next",
    "range",
    "tuple",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.PRNGSequenceState": {
  "data": {
   "lineno": 475
  },
  "type": "constant"
 },
 "haiku._src.base.Params": {
  "data": {
   "shadows": "haiku._src.typing.Params"
  },
  "type": "import"
 },
 "haiku._src.base.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "haiku._src.base.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "haiku._src.base.Stack": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "haiku._src.base.State": {
  "data": {
   "shadows": "haiku._src.typing.State"
  },
  "type": "import"
 },
 "haiku._src.base.StateChangedError": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "class"
 },
 "haiku._src.base.StatePair": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "haiku._src.base.ThreadLocalStack": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "haiku._src.base.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "haiku._src.base.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "haiku._src.base._all_state": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "frozenset",
    "haiku._src.base._get_ids",
    "haiku._src.base.current_frame",
    "id",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "haiku._src.base._get_ids": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "frozenset",
    "getattr",
    "haiku._src.base.current_frame",
    "haiku._src.base.warnings",
    "id",
    "int",
    "isinstance",
    "map",
    "str",
    "typing.FrozenSet",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.assert_context": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.assert_is_prng_key": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.typing.PRNGKey",
    "hasattr",
    "jax.numpy.uint32",
    "type"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.assert_no_new_parameters": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "AssertionError",
    "haiku._src.base.contextlib",
    "haiku._src.base.param_names",
    "list",
    "sorted"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.assert_state_unchanged": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "StateChangedError",
    "haiku._src.base._all_state",
    "haiku._src.base.contextlib"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "haiku._src.base.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "haiku._src.base.current_bundle_name": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "haiku._src.base.current_module",
    "haiku._src.base.safe_get_module_name"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.current_frame": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "haiku._src.base.current_module": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "haiku._src.base.current_frame",
    "haiku._src.typing.Module",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.custom_creator": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "bool",
    "haiku._src.base.Creator",
    "haiku._src.base.assert_context",
    "haiku._src.base.contextlib",
    "param_creator_stack",
    "state_creator_stack"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.custom_getter": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "bool",
    "haiku._src.base.Getter",
    "haiku._src.base.assert_context",
    "haiku._src.base.contextlib",
    "param_getter_stack",
    "state_getter_stack"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.data_structures": {
  "data": {
   "shadows": "haiku._src.data_structures"
  },
  "type": "import"
 },
 "haiku._src.base.extract_state": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "haiku._src.base.MutableState",
    "haiku._src.data_structures.to_immutable_dict",
    "haiku._src.typing.State"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.get_parameter": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "GetterContext",
    "ValueError",
    "haiku._src.base.assert_context",
    "haiku._src.base.current_bundle_name",
    "haiku._src.base.current_frame",
    "haiku._src.base.current_module",
    "haiku._src.typing.Initializer",
    "int",
    "jax.numpy.float32",
    "jax.numpy.ndarray",
    "run_creators",
    "run_getters",
    "str",
    "tuple",
    "typing.Any",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.get_state": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.base.GetterContext",
    "haiku._src.base.StatePair",
    "haiku._src.base.assert_context",
    "haiku._src.base.current_bundle_name",
    "haiku._src.base.current_frame",
    "haiku._src.base.current_module",
    "haiku._src.base.run_creators",
    "haiku._src.base.run_getters",
    "haiku._src.typing.Initializer",
    "init",
    "int",
    "jax.numpy.float32",
    "jax.numpy.ndarray",
    "state_creator_stack",
    "state_getter_stack",
    "str",
    "typing.Any",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.inside_transform": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.base.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.base.maybe_next_rng_key": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "haiku._src.base.assert_context",
    "haiku._src.base.current_frame",
    "haiku._src.typing.PRNGKey",
    "next",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.new_context": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "PRNGSequence",
    "dict",
    "haiku._src.base.HaikuContext",
    "haiku._src.base.StatePair",
    "haiku._src.base.collections",
    "haiku._src.data_structures.to_immutable_dict",
    "haiku._src.typing.PRNGKey",
    "haiku._src.typing.Params",
    "haiku._src.typing.State",
    "int",
    "isinstance",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.next_rng_key": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "haiku._src.base.assert_context",
    "haiku._src.typing.PRNGKey",
    "next_rng_key_internal"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.next_rng_key_internal": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "haiku._src.base.rng_seq_or_fail",
    "haiku._src.typing.PRNGKey",
    "next"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.next_rng_keys": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "haiku._src.base.assert_context",
    "haiku._src.base.rng_seq_or_fail",
    "haiku._src.typing.PRNGKey",
    "int",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.param_names": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "frozenset",
    "haiku._src.base.current_frame",
    "haiku._src.base.warnings",
    "isinstance",
    "str",
    "typing.FrozenSet",
    "typing.Mapping",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.params_frozen": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "haiku._src.base.assert_context",
    "haiku._src.base.current_frame"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.reserve_rng_keys": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "haiku._src.base.assert_context",
    "haiku._src.base.rng_seq_or_fail",
    "int"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.rng_seq_or_fail": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.base.PRNGSequence",
    "haiku._src.base.current_frame"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.run_creators": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "haiku._src.base.Creator",
    "haiku._src.base.GetterContext",
    "haiku._src.base.ThreadLocalStack",
    "haiku._src.typing.Initializer",
    "init",
    "int",
    "jax.numpy.float32",
    "jax.numpy.ndarray",
    "next_creator",
    "typing.Any",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.run_creators.next_creator": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "init"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.run_getters": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "haiku._src.base.Getter",
    "haiku._src.base.GetterContext",
    "haiku._src.base.Stack",
    "jax.numpy.ndarray",
    "next_getter"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.run_getters.next_getter": {
  "data": {
   "lineno": 408
  },
  "type": "function"
 },
 "haiku._src.base.safe_get_module_name": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.typing.Module",
    "hasattr",
    "str"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.set_state": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "haiku._src.base.StatePair",
    "haiku._src.base.assert_context",
    "haiku._src.base.current_bundle_name",
    "haiku._src.base.current_frame",
    "str"
   ]
  },
  "type": "function"
 },
 "haiku._src.base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "haiku._src.base.with_rng": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "haiku._src.base.PRNGSequence",
    "haiku._src.base.assert_context",
    "haiku._src.base.current_frame",
    "haiku._src.typing.PRNGKey"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main",
    "haiku._src.base.custom_creator",
    "haiku._src.base.custom_getter",
    "haiku._src.base_test.functools"
   ]
  },
  "type": "module"
 },
 "haiku._src.base_test.BaseTest": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.base_test.BaseTest.test_assert_no_new_parameters": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "AssertionError",
    "haiku._src.base.assert_no_new_parameters",
    "haiku._src.base.get_parameter",
    "haiku._src.base.new_context",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_context_cleanup_after_error": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.base.frame_stack",
    "haiku._src.base.new_context"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_context_copies_input": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "haiku._src.base.get_parameter",
    "haiku._src.base.new_context",
    "haiku._src.base.set_state",
    "jax.numpy.array",
    "jax.numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_creator_requires_context": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "ValueError",
    "absl.testing.parameterized.parameters",
    "custom_x",
    "haiku._src.base.custom_creator",
    "haiku._src.base_test.custom_state_creator"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_creator_requires_context.my_creator": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "next_creator"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_creator_types": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "haiku._src.base.custom_creator",
    "haiku._src.base.get_parameter",
    "haiku._src.base.get_state",
    "haiku._src.base.new_context",
    "int",
    "itertools.permutations",
    "jax.numpy.zeros",
    "logging_creator"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_creator_types.logging_creator": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "next_creator"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_custom_getter_bf16": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "custom_x",
    "f",
    "f.dtype",
    "get_x",
    "getattr",
    "haiku._src.base.custom_getter",
    "haiku._src.base.get_parameter",
    "haiku._src.base.get_state",
    "haiku._src.base.new_context",
    "haiku._src.base_test.custom_state_getter",
    "jax.numpy.bfloat16",
    "jax.numpy.float32",
    "jax.numpy.int32",
    "jax.numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_custom_getter_bf16.bf16_getter": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "jax.numpy.bfloat16",
    "jax.numpy.float32",
    "next_getter"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_get_parameter_wrong_shape": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "AssertionError",
    "haiku._src.base.get_parameter",
    "haiku._src.base.new_context",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_get_state_no_init_raises": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.base.get_state",
    "haiku._src.base.new_context"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_get_state_no_shape_raises": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.base.get_state",
    "haiku._src.base.new_context",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_getter_requires_context": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "ValueError",
    "absl.testing.parameterized.parameters",
    "custom_x",
    "haiku._src.base.custom_getter",
    "haiku._src.base_test.custom_state_getter"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_getter_requires_context.my_getter": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "next_getter"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_getter_types": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "haiku._src.base.custom_getter",
    "haiku._src.base.get_parameter",
    "haiku._src.base.get_state",
    "haiku._src.base.new_context",
    "int",
    "itertools.permutations",
    "jax.numpy.zeros",
    "logging_getter"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_getter_types.logging_getter": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "next_getter"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_init_custom_creator": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "custom_x",
    "get_x",
    "getattr",
    "haiku._src.base.custom_creator",
    "haiku._src.base.get_parameter",
    "haiku._src.base.get_state",
    "haiku._src.base.new_context",
    "haiku._src.base_test.custom_state_creator",
    "jax.numpy.ones",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_init_custom_creator.zeros_creator": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "jax.numpy.float32",
    "jax.numpy.ones",
    "jax.numpy.zeros",
    "next_creator"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_invalid_rng": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.base.new_context"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_invalid_rng_none_ignored": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "haiku._src.base.new_context"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_maybe_no_rng": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "haiku._src.base.maybe_next_rng_key",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_maybe_rng_no_transform": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.base.maybe_next_rng_key"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_maybe_rng_vs_not": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "jax.numpy.all",
    "jax.numpy.array",
    "maybe_three",
    "three"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_maybe_rng_vs_not.maybe_three": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "haiku._src.base.maybe_next_rng_key",
    "haiku._src.test_utils.transform_and_run",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_maybe_rng_vs_not.three": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "haiku._src.base.next_rng_key",
    "haiku._src.test_utils.transform_and_run",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_naked_get_parameter": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "haiku._src.base.get_parameter",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_naked_parameter_in_tilde_collection": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "haiku._src.base.get_parameter",
    "haiku._src.base.new_context",
    "jax.numpy.ones",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_nested_creators": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "custom_x",
    "get_x",
    "haiku._src.base.custom_creator",
    "haiku._src.base.get_parameter",
    "haiku._src.base.get_state",
    "haiku._src.base.new_context",
    "haiku._src.base_test.custom_state_creator",
    "jax.numpy.ones",
    "logging_creator"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_nested_creators.logging_creator": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_nested_creators.logging_creator._logging_creator": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "next_creator"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_nested_getters": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "custom_x",
    "get_x",
    "haiku._src.base.custom_getter",
    "haiku._src.base.get_parameter",
    "haiku._src.base.get_state",
    "haiku._src.base.new_context",
    "haiku._src.base_test.custom_state_getter",
    "jax.numpy.bfloat16",
    "jax.numpy.float32",
    "jax.numpy.int32",
    "jax.numpy.int8",
    "jax.numpy.ones",
    "logging_getter"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_nested_getters.logging_getter": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_nested_getters.logging_getter._logging_getter": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "next_getter"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_new_context": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "haiku._src.base.new_context"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_new_state_in_apply": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "haiku._src.base.new_context",
    "haiku._src.base.set_state"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_no_rng": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.base.next_rng_key",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_original_dtype": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "custom_create_x",
    "custom_get_x",
    "get_x",
    "getattr",
    "haiku._src.base.custom_creator",
    "haiku._src.base.custom_getter",
    "haiku._src.base.get_parameter",
    "haiku._src.base.get_state",
    "haiku._src.base.new_context",
    "haiku._src.base_test.custom_state_creator",
    "haiku._src.base_test.custom_state_getter",
    "haiku._src.base_test.jax",
    "jax.numpy.bfloat16",
    "jax.numpy.float32",
    "jax.numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_original_dtype.dtype_cast_creator": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "jax.numpy.bfloat16",
    "jax.numpy.float32",
    "next_creator"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_original_dtype.dtype_recast_getter": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "jax.numpy.bfloat16",
    "jax.numpy.float32",
    "next_getter"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_original_shape": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "custom_x",
    "get_x",
    "haiku._src.base.custom_creator",
    "haiku._src.base.get_parameter",
    "haiku._src.base.get_state",
    "haiku._src.base.new_context",
    "haiku._src.base_test.custom_state_creator",
    "jax.numpy.bfloat16",
    "jax.numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_original_shape.new_shape_creator": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "next_creator"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_original_shape.original_shape_restorer": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "next_creator"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_parameter_in_immutable_ctx": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "absl.testing.parameterized.parameters",
    "haiku._src.base.get_parameter",
    "haiku._src.base.new_context",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_parameter_reuse": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "haiku._src.base.get_parameter",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_params": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "haiku._src.base.get_parameter",
    "haiku._src.base.new_context",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_prng_reserve": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "haiku._src.base.PRNGSequence",
    "haiku._src.base_test.jax",
    "next",
    "numpy.testing.assert_equal",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_prng_reserve_twice": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "haiku._src.base.PRNGSequence",
    "haiku._src.base_test.jax",
    "next",
    "numpy.testing.assert_equal",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_prng_sequence": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "haiku._src.base.PRNGSequence",
    "haiku._src.base_test.jax",
    "next"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_prng_sequence_invalid_input": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.base.PRNGSequence"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_prng_sequence_split": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "haiku._src.base.PRNGSequence",
    "haiku._src.base_test.jax",
    "numpy.testing.assert_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_prng_sequence_wrong_shape": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.base.PRNGSequence",
    "haiku._src.base_test.jax"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_rng": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "haiku._src.base.next_rng_key",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_rng_no_transform": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "absl.testing.parameterized.parameters",
    "f",
    "haiku._src.base.next_rng_key",
    "haiku._src.base.next_rng_keys"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_rngs": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "haiku._src.base.next_rng_keys",
    "haiku._src.test_utils.transform_and_run",
    "itertools.permutations"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_set_then_get": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "haiku._src.base.get_state",
    "haiku._src.base.new_context",
    "haiku._src.base.set_state",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_stateful": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "haiku._src.base.get_state",
    "haiku._src.base.new_context",
    "haiku._src.base.set_state",
    "jax.numpy.int32",
    "jax.numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_with_rng": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "haiku._src.base.new_context",
    "haiku._src.base.next_rng_key",
    "haiku._src.base.with_rng",
    "haiku._src.base_test.jax"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.BaseTest.test_with_rng_no_transform": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.base.with_rng",
    "haiku._src.base_test.jax"
   ]
  },
  "type": "function"
 },
 "haiku._src.base_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.base_test.base": {
  "data": {
   "shadows": "haiku._src.base"
  },
  "type": "import"
 },
 "haiku._src.base_test.custom_state_creator": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "haiku._src.base_test.custom_state_getter": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "haiku._src.base_test.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "haiku._src.base_test.it": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "haiku._src.base_test.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.base_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.base_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.base_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.base_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.basic": {
  "data": {
   "symbols_in_volume": [
    "haiku._src.base",
    "haiku._src.base.get_parameter",
    "haiku._src.basic.hk",
    "haiku._src.basic.types",
    "haiku._src.initializers",
    "haiku._src.module",
    "haiku._src.module.Module"
   ]
  },
  "type": "module"
 },
 "haiku._src.basic.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "haiku._src.basic.BatchApply": {
  "data": {
   "lineno": 217
  },
  "type": "class"
 },
 "haiku._src.basic.BatchApply.__call__": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.basic.arbitrary_mergeable_leaf",
    "haiku._src.basic.jax",
    "haiku._src.basic.merge_leading_dims",
    "haiku._src.basic.split_leading_dim"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic.BatchApply.__init__": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "haiku._src.basic.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "haiku._src.basic.CallableModule": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "haiku._src.basic.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.basic.CallableModule.__call__": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "NotImplementedError",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "haiku._src.basic.Linear": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "haiku._src.basic.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.basic.Linear.__call__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.basic.hk",
    "jax.numpy.broadcast_to",
    "jax.numpy.dot",
    "jax.numpy.ndarray",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic.Linear.__init__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "bool",
    "haiku._src.basic.hk",
    "int",
    "jax.numpy.zeros",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "haiku._src.basic.PRNGKey": {
  "data": {
   "shadows": "haiku._src.typing.PRNGKey"
  },
  "type": "import"
 },
 "haiku._src.basic.Sequential": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "haiku._src.basic.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.basic.Sequential.__call__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "enumerate",
    "layer"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic.Sequential.__init__": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "str",
    "super",
    "tuple",
    "typing.Any",
    "typing.Callable",
    "typing.Iterable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "haiku._src.basic.arbitrary_mergeable_leaf": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "haiku._src.basic.jax",
    "haiku._src.basic.ndim_at_least"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic.base": {
  "data": {
   "shadows": "haiku._src.base"
  },
  "type": "import"
 },
 "haiku._src.basic.dropout": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "haiku._src.basic.jax",
    "haiku._src.typing.PRNGKey",
    "jax.numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic.expand_apply": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic.expand_apply.wrapper": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "f",
    "haiku._src.basic.functools",
    "haiku._src.basic.jax",
    "jax.numpy.expand_dims",
    "jax.numpy.squeeze"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "haiku._src.basic.hk": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "haiku._src.basic.initializers": {
  "data": {
   "shadows": "haiku._src.initializers"
  },
  "type": "import"
 },
 "haiku._src.basic.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.basic.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.basic.merge_leading_dims": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "haiku._src.basic.ndim_at_least",
    "jax.numpy.reshape",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic.module": {
  "data": {
   "shadows": "haiku._src.module"
  },
  "type": "import"
 },
 "haiku._src.basic.multinomial": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.basic.jax",
    "jax.numpy.argmin",
    "jax.numpy.cumsum",
    "jax.numpy.transpose",
    "len"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic.ndim_at_least": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "isinstance",
    "jax.numpy.asarray",
    "jax.numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.basic.one_hot": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "haiku._src.basic.jax",
    "jax.numpy.float32"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic.split_leading_dim": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "jax.numpy.reshape"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic.to_module": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "f",
    "f.__doc__",
    "haiku._src.basic.CallableModule",
    "haiku._src.basic.functools",
    "hasattr",
    "typing.Any",
    "typing.Callable",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic.to_module.ToModuleWrapper": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "haiku._src.basic.CallableModule"
   ]
  },
  "type": "class"
 },
 "haiku._src.basic.to_module.ToModuleWrapper.__call__": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic.to_module.ToModuleWrapper.__init__": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "TypeError",
    "f.__name__",
    "isinstance",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "haiku._src.basic_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "haiku._src.basic_test.BasicTest": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.basic_test.BasicTest.test_batchapply": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "haiku._src.basic.BatchApply",
    "jax.numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic_test.BasicTest.test_batchapply.raises": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic_test.BasicTest.test_batchapply_accepts_float": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "haiku._src.basic.BatchApply",
    "jax.numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic_test.BasicTest.test_batchapply_accepts_float.raises": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic_test.BasicTest.test_batchapply_accepts_none": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "haiku._src.basic.BatchApply",
    "jax.numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic_test.BasicTest.test_batchapply_accepts_none.raises": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic_test.BasicTest.test_batchapply_raises": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.basic.BatchApply"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic_test.BasicTest.test_dropout_connects": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "haiku._src.base.next_rng_key",
    "haiku._src.basic.dropout",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic_test.BasicTest.test_expand_apply": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "haiku._src.basic.expand_apply",
    "jax.numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic_test.BasicTest.test_expand_apply.raises": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic_test.BasicTest.test_expand_apply_raises": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.basic.expand_apply"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic_test.BasicTest.test_multinomial_r1": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "haiku._src.basic.multinomial",
    "jax.numpy.ones",
    "jax.random.PRNGKey"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic_test.BasicTest.test_multinomial_r2": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "haiku._src.basic.multinomial",
    "jax.numpy.ones",
    "jax.random.PRNGKey"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic_test.BasicTest.test_onehot_shape": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "haiku._src.basic.one_hot",
    "jax.numpy.arange",
    "jax.numpy.float32"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic_test.BasicTest.test_sequential": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "haiku._src.basic.Linear",
    "haiku._src.basic.Sequential",
    "haiku._src.basic_test.jax",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.zeros",
    "seq"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic_test.BasicTest.test_sequential_params": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "haiku._src.basic.Linear",
    "haiku._src.basic.Sequential",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.zeros",
    "list",
    "range",
    "seq",
    "seq.params_dict"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic_test.BasicTest.test_to_module": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "Bias",
    "haiku._src.basic.to_module",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "mod"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic_test.BasicTest.test_to_module.bias_fn": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "haiku._src.base.get_parameter",
    "jax.numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic_test.BasicTest.test_to_module_error_docs": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "cls",
    "haiku._src.basic.to_module",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic_test.BasicTest.test_to_module_error_docs.documented_fn": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "haiku._src.basic_test.BasicTest.test_to_module_error_docs.undocumented_fn": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "haiku._src.basic_test.BasicTest.test_to_module_error_invalid_name": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "TypeError",
    "cls",
    "haiku._src.basic.to_module",
    "haiku._src.test_utils.transform_and_run",
    "object"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic_test.BasicTest.test_to_module_error_invalid_name.bias_fn": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "haiku._src.base.get_parameter",
    "jax.numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic_test.LinearTest": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.basic_test.LinearTest.test_linear_rank1": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic_test.LinearTest.test_linear_rank1.f": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "haiku._src.basic.Linear",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic_test.LinearTest.test_linear_rank2": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic_test.LinearTest.test_linear_rank2.f": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "haiku._src.basic.Linear",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic_test.LinearTest.test_linear_rank3": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic_test.LinearTest.test_linear_rank3.f": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "haiku._src.basic.Linear",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic_test.LinearTest.test_linear_without_bias_has_zero_in_null_space": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.numpy.zeros",
    "jax.random.PRNGKey",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic_test.LinearTest.test_linear_without_bias_has_zero_in_null_space.f": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "haiku._src.basic.Linear",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.basic_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.basic_test.base": {
  "data": {
   "shadows": "haiku._src.base"
  },
  "type": "import"
 },
 "haiku._src.basic_test.basic": {
  "data": {
   "shadows": "haiku._src.basic"
  },
  "type": "import"
 },
 "haiku._src.basic_test.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.basic_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.basic_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.basic_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.basic_test.random": {
  "data": {
   "shadows": "jax.random"
  },
  "type": "import"
 },
 "haiku._src.basic_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.basic_test.transform": {
  "data": {
   "shadows": "haiku._src.transform"
  },
  "type": "import"
 },
 "haiku._src.batch_norm": {
  "data": {
   "symbols_in_volume": [
    "haiku._src.base",
    "haiku._src.base.get_parameter",
    "haiku._src.batch_norm.hk",
    "haiku._src.batch_norm.types",
    "haiku._src.initializers",
    "haiku._src.module",
    "haiku._src.module.Module",
    "haiku._src.moving_averages",
    "haiku._src.moving_averages.ExponentialMovingAverage"
   ]
  },
  "type": "module"
 },
 "haiku._src.batch_norm.BatchNorm": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "haiku._src.batch_norm.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.batch_norm.BatchNorm.__call__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "haiku._src.batch_norm.hk",
    "haiku._src.batch_norm.jax",
    "jax.numpy.mean",
    "jax.numpy.ndarray",
    "jax.numpy.var",
    "numpy.ones",
    "numpy.zeros",
    "range",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.batch_norm.BatchNorm.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "float",
    "haiku._src.batch_norm.hk",
    "haiku._src.utils.get_channel_index",
    "int",
    "jax.numpy.ones",
    "jax.numpy.zeros",
    "str",
    "super",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "haiku._src.batch_norm.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "haiku._src.batch_norm.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "haiku._src.batch_norm.base": {
  "data": {
   "shadows": "haiku._src.base"
  },
  "type": "import"
 },
 "haiku._src.batch_norm.hk": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "haiku._src.batch_norm.initializers": {
  "data": {
   "shadows": "haiku._src.initializers"
  },
  "type": "import"
 },
 "haiku._src.batch_norm.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.batch_norm.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.batch_norm.module": {
  "data": {
   "shadows": "haiku._src.module"
  },
  "type": "import"
 },
 "haiku._src.batch_norm.moving_averages": {
  "data": {
   "shadows": "haiku._src.moving_averages"
  },
  "type": "import"
 },
 "haiku._src.batch_norm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.batch_norm.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "haiku._src.batch_norm.utils": {
  "data": {
   "shadows": "haiku._src.utils"
  },
  "type": "import"
 },
 "haiku._src.batch_norm_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main",
    "haiku._src.batch_norm_test._xla_flags",
    "haiku._src.batch_norm_test.os"
   ]
  },
  "type": "module"
 },
 "haiku._src.batch_norm_test.BatchNormTest": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.batch_norm_test.BatchNormTest.test_basic": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "haiku._src.batch_norm.BatchNorm",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.arange",
    "jax.numpy.broadcast_to",
    "jax.numpy.float32",
    "norm",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.batch_norm_test.BatchNormTest.test_eps_cast_to_var_dtype": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "haiku._src.batch_norm_test.jax",
    "haiku._src.transform.transform_with_state",
    "jax.numpy.bfloat16",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.batch_norm_test.BatchNormTest.test_eps_cast_to_var_dtype.f": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "haiku._src.batch_norm.BatchNorm"
   ]
  },
  "type": "function"
 },
 "haiku._src.batch_norm_test.BatchNormTest.test_no_offset_beta_init_provided": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.batch_norm.BatchNorm",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.batch_norm_test.BatchNormTest.test_no_scale_and_init_provided": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.batch_norm.BatchNorm",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.batch_norm_test.BatchNormTest.test_no_scale_and_offset": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "haiku._src.batch_norm.BatchNorm",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "layer",
    "numpy.testing.assert_equal",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "haiku._src.batch_norm_test.BatchNormTest.test_simple_training": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "haiku._src.batch_norm.BatchNorm",
    "haiku._src.test_utils.transform_and_run",
    "layer",
    "numpy.full",
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "haiku._src.batch_norm_test.BatchNormTest.test_simple_training_cross_replica_axis": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "haiku._src.batch_norm_test.jax",
    "haiku._src.transform.transform_with_state",
    "numpy.arange",
    "numpy.broadcast_to",
    "numpy.mean",
    "numpy.std",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "haiku._src.batch_norm_test.BatchNormTest.test_simple_training_cross_replica_axis.f": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "haiku._src.batch_norm.BatchNorm"
   ]
  },
  "type": "function"
 },
 "haiku._src.batch_norm_test.BatchNormTest.test_simple_training_cross_replica_axis_index_groups": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "haiku._src.batch_norm_test.jax",
    "haiku._src.transform.transform_with_state",
    "numpy.arange",
    "numpy.broadcast_to",
    "numpy.empty_like",
    "numpy.float32",
    "numpy.mean",
    "numpy.std",
    "numpy.testing.assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.batch_norm_test.BatchNormTest.test_simple_training_cross_replica_axis_index_groups.f": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "haiku._src.batch_norm.BatchNorm"
   ]
  },
  "type": "function"
 },
 "haiku._src.batch_norm_test.BatchNormTest.test_simple_training_nchw": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "haiku._src.batch_norm.BatchNorm",
    "haiku._src.test_utils.transform_and_run",
    "layer",
    "numpy.full",
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "haiku._src.batch_norm_test.BatchNormTest.test_simple_training_normalized_axes": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "haiku._src.batch_norm.BatchNorm",
    "haiku._src.test_utils.transform_and_run",
    "layer",
    "numpy.ones",
    "numpy.stack",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.batch_norm_test._xla_flags": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "haiku._src.batch_norm_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.batch_norm_test.batch_norm": {
  "data": {
   "shadows": "haiku._src.batch_norm"
  },
  "type": "import"
 },
 "haiku._src.batch_norm_test.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.batch_norm_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.batch_norm_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.batch_norm_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "haiku._src.batch_norm_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.batch_norm_test.transform": {
  "data": {
   "shadows": "haiku._src.transform"
  },
  "type": "import"
 },
 "haiku._src.bias": {
  "data": {
   "symbols_in_volume": [
    "haiku._src.base",
    "haiku._src.base.get_parameter",
    "haiku._src.bias.hk",
    "haiku._src.bias.types",
    "haiku._src.initializers",
    "haiku._src.module",
    "haiku._src.module.Module"
   ]
  },
  "type": "module"
 },
 "haiku._src.bias.Bias": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "haiku._src.bias.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.bias.Bias.__call__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ValueError",
    "calculate_bias_shape",
    "float",
    "haiku._src.bias.hk",
    "haiku._src.utils.assert_minimum_rank",
    "jax.numpy.broadcast_to",
    "jax.numpy.ndarray",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.bias.Bias.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "haiku._src.bias.hk",
    "int",
    "jax.numpy.zeros",
    "str",
    "super",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "haiku._src.bias.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "haiku._src.bias.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "haiku._src.bias.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "haiku._src.bias.base": {
  "data": {
   "shadows": "haiku._src.base"
  },
  "type": "import"
 },
 "haiku._src.bias.calculate_bias_shape": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "range",
    "tuple",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "haiku._src.bias.hk": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "haiku._src.bias.initializers": {
  "data": {
   "shadows": "haiku._src.initializers"
  },
  "type": "import"
 },
 "haiku._src.bias.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.bias.module": {
  "data": {
   "shadows": "haiku._src.module"
  },
  "type": "import"
 },
 "haiku._src.bias.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "haiku._src.bias.utils": {
  "data": {
   "shadows": "haiku._src.utils"
  },
  "type": "import"
 },
 "haiku._src.bias_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "haiku._src.bias_test.BiasTest": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.bias_test.BiasTest.test_b_init_custom": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "haiku._src.bias.Bias",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "mod",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.bias_test.BiasTest.test_b_init_defaults_to_zeros": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "haiku._src.bias.Bias",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "mod",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.bias_test.BiasTest.test_bias_dims_custom": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "haiku._src.test_utils.transform_and_run",
    "haiku._src.transform.transform",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.bias_test.BiasTest.test_bias_dims_custom.f": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "haiku._src.bias.Bias",
    "jax.numpy.ones",
    "mod",
    "mod.bias_shape"
   ]
  },
  "type": "function"
 },
 "haiku._src.bias_test.BiasTest.test_bias_dims_invalid": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.bias.Bias",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "mod"
   ]
  },
  "type": "function"
 },
 "haiku._src.bias_test.BiasTest.test_bias_dims_negative_out_of_order": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "haiku._src.test_utils.transform_and_run",
    "haiku._src.transform.transform"
   ]
  },
  "type": "function"
 },
 "haiku._src.bias_test.BiasTest.test_bias_dims_negative_out_of_order.f": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "haiku._src.bias.Bias",
    "jax.numpy.ones",
    "mod",
    "mod.bias_shape"
   ]
  },
  "type": "function"
 },
 "haiku._src.bias_test.BiasTest.test_bias_dims_scalar": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "haiku._src.transform.transform"
   ]
  },
  "type": "function"
 },
 "haiku._src.bias_test.BiasTest.test_bias_dims_scalar.f": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "haiku._src.bias.Bias",
    "jax.numpy.ones",
    "mod"
   ]
  },
  "type": "function"
 },
 "haiku._src.bias_test.BiasTest.test_multiplier": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "haiku._src.bias.Bias",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "jax.numpy.sum",
    "mod",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.bias_test.BiasTest.test_name": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "haiku._src.bias.Bias",
    "haiku._src.test_utils.transform_and_run",
    "mod",
    "mod.name"
   ]
  },
  "type": "function"
 },
 "haiku._src.bias_test.BiasTest.test_output_shape": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.bias.Bias",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "mod"
   ]
  },
  "type": "function"
 },
 "haiku._src.bias_test.BiasTest.test_output_size_valid": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "haiku._src.bias.Bias",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "mod"
   ]
  },
  "type": "function"
 },
 "haiku._src.bias_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.bias_test.bias": {
  "data": {
   "shadows": "haiku._src.bias"
  },
  "type": "import"
 },
 "haiku._src.bias_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.bias_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.bias_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.bias_test.transform": {
  "data": {
   "shadows": "haiku._src.transform"
  },
  "type": "import"
 },
 "haiku._src.conv": {
  "data": {
   "symbols_in_volume": [
    "haiku._src.base",
    "haiku._src.base.get_parameter",
    "haiku._src.conv.hk",
    "haiku._src.conv.types",
    "haiku._src.initializers",
    "haiku._src.module",
    "haiku._src.module.Module",
    "haiku._src.pad"
   ]
  },
  "type": "module"
 },
 "haiku._src.conv.Conv1D": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "haiku._src.conv.ConvND"
   ]
  },
  "type": "class"
 },
 "haiku._src.conv.Conv1D.__init__": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "bool",
    "haiku._src.conv.hk",
    "int",
    "jax.numpy.ndarray",
    "str",
    "super",
    "typing.Optional",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv.Conv1DTranspose": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "haiku._src.conv.ConvNDTranspose"
   ]
  },
  "type": "class"
 },
 "haiku._src.conv.Conv1DTranspose.__init__": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "bool",
    "haiku._src.conv.hk",
    "int",
    "jax.numpy.ndarray",
    "str",
    "super",
    "typing.Optional",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv.Conv2D": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "haiku._src.conv.ConvND"
   ]
  },
  "type": "class"
 },
 "haiku._src.conv.Conv2D.__init__": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "bool",
    "haiku._src.conv.hk",
    "int",
    "jax.numpy.ndarray",
    "str",
    "super",
    "typing.Optional",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv.Conv2DTranspose": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "haiku._src.conv.ConvNDTranspose"
   ]
  },
  "type": "class"
 },
 "haiku._src.conv.Conv2DTranspose.__init__": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "bool",
    "haiku._src.conv.hk",
    "int",
    "jax.numpy.ndarray",
    "str",
    "super",
    "typing.Optional",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv.Conv3D": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "haiku._src.conv.ConvND"
   ]
  },
  "type": "class"
 },
 "haiku._src.conv.Conv3D.__init__": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "bool",
    "haiku._src.conv.hk",
    "int",
    "jax.numpy.ndarray",
    "str",
    "super",
    "typing.Optional",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv.Conv3DTranspose": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "haiku._src.conv.ConvNDTranspose"
   ]
  },
  "type": "class"
 },
 "haiku._src.conv.Conv3DTranspose.__init__": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "bool",
    "haiku._src.conv.hk",
    "int",
    "jax.numpy.ndarray",
    "str",
    "super",
    "typing.Optional",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv.ConvND": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "haiku._src.conv.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.conv.ConvND.__call__": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.conv.hk",
    "jax.lax.conv_general_dilated",
    "jax.numpy.broadcast_to",
    "jax.numpy.expand_dims",
    "jax.numpy.ndarray",
    "jax.numpy.squeeze",
    "numpy.prod",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv.ConvND.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "haiku._src.conv.hk",
    "haiku._src.conv.to_dimension_numbers",
    "haiku._src.utils.get_channel_index",
    "haiku._src.utils.replicate",
    "int",
    "isinstance",
    "jax.numpy.ndarray",
    "jax.numpy.zeros",
    "str",
    "super",
    "typing.Optional",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv.ConvNDTranspose": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "haiku._src.conv.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.conv.ConvNDTranspose.__call__": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.conv.compute_adjusted_padding",
    "haiku._src.conv.hk",
    "jax.lax.conv_transpose",
    "jax.numpy.broadcast_to",
    "jax.numpy.expand_dims",
    "jax.numpy.ndarray",
    "jax.numpy.squeeze",
    "map",
    "numpy.prod",
    "numpy.sqrt",
    "tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv.ConvNDTranspose.__init__": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "haiku._src.conv.hk",
    "haiku._src.conv.to_dimension_numbers",
    "haiku._src.utils.get_channel_index",
    "haiku._src.utils.replicate",
    "int",
    "isinstance",
    "jax.numpy.ndarray",
    "jax.numpy.zeros",
    "str",
    "super",
    "typing.Optional",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "haiku._src.conv.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "haiku._src.conv.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "haiku._src.conv.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "haiku._src.conv.base": {
  "data": {
   "shadows": "haiku._src.base"
  },
  "type": "import"
 },
 "haiku._src.conv.compute_adjusted_padding": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv.hk": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "haiku._src.conv.initializers": {
  "data": {
   "shadows": "haiku._src.initializers"
  },
  "type": "import"
 },
 "haiku._src.conv.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.conv.lax": {
  "data": {
   "shadows": "jax.lax"
  },
  "type": "import"
 },
 "haiku._src.conv.module": {
  "data": {
   "shadows": "haiku._src.module"
  },
  "type": "import"
 },
 "haiku._src.conv.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.conv.pad": {
  "data": {
   "shadows": "haiku._src.pad"
  },
  "type": "import"
 },
 "haiku._src.conv.to_dimension_numbers": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "bool",
    "int",
    "jax.lax.ConvDimensionNumbers",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "haiku._src.conv.utils": {
  "data": {
   "shadows": "haiku._src.utils"
  },
  "type": "import"
 },
 "haiku._src.conv_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "haiku._src.conv_test.Conv1DTest": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.conv_test.Conv1DTest.test_computation_padding_same": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "float",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.numpy.squeeze",
    "jax.random.PRNGKey",
    "numpy.asarray",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.Conv1DTest.test_computation_padding_same.f": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "haiku._src.conv.Conv1D",
    "haiku._src.conv_test.create_constant_initializers",
    "jax.numpy.ones",
    "net"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.Conv1DTest.test_computation_padding_valid": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "float",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey",
    "numpy.asarray",
    "numpy.squeeze",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.Conv1DTest.test_computation_padding_valid.f": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "haiku._src.conv.Conv1D",
    "haiku._src.conv_test.create_constant_initializers",
    "jax.numpy.ones",
    "net"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.Conv1DTransposeTest": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.conv_test.Conv1DTransposeTest.test_computation_padding_same": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "float",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey",
    "numpy.asarray",
    "numpy.squeeze",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.Conv1DTransposeTest.test_computation_padding_same.f": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "haiku._src.conv.Conv1DTranspose",
    "haiku._src.conv_test.create_constant_initializers",
    "jax.numpy.ones",
    "net"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.Conv1DTransposeTest.test_computation_padding_valid": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "float",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey",
    "numpy.asarray",
    "numpy.squeeze",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.Conv1DTransposeTest.test_computation_padding_valid.f": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "haiku._src.conv.Conv1DTranspose",
    "haiku._src.conv_test.create_constant_initializers",
    "jax.numpy.ones",
    "net"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.Conv2DTest": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.conv_test.Conv2DTest.test_computation_padding_same": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "float",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey",
    "numpy.asarray",
    "numpy.squeeze",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.Conv2DTest.test_computation_padding_same.f": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "haiku._src.conv.Conv2D",
    "haiku._src.conv_test.create_constant_initializers",
    "jax.numpy.ones",
    "net"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.Conv2DTest.test_computation_padding_valid": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "float",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey",
    "numpy.asarray",
    "numpy.squeeze",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.Conv2DTest.test_computation_padding_valid.f": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "haiku._src.conv.Conv2D",
    "haiku._src.conv_test.create_constant_initializers",
    "jax.numpy.ones",
    "net"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.Conv2TransposeTest": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.conv_test.Conv2TransposeTest.test_computation_padding_same": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey",
    "numpy.array",
    "numpy.atleast_3d",
    "numpy.expand_dims",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.Conv2TransposeTest.test_computation_padding_same.f": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "haiku._src.conv.Conv2DTranspose",
    "haiku._src.conv_test.create_constant_initializers",
    "net",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.Conv2TransposeTest.test_computation_padding_valid": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey",
    "numpy.array",
    "numpy.atleast_3d",
    "numpy.expand_dims",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.Conv2TransposeTest.test_computation_padding_valid.f": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "haiku._src.conv.Conv2DTranspose",
    "haiku._src.conv_test.create_constant_initializers",
    "net",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.Conv3DTest": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.conv_test.Conv3DTest.test_computation_padding_same": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "float",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey",
    "numpy.asarray",
    "numpy.squeeze",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.Conv3DTest.test_computation_padding_same.f": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "haiku._src.conv.Conv3D",
    "haiku._src.conv_test.create_constant_initializers",
    "jax.numpy.ones",
    "net"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.Conv3DTest.test_computation_padding_valid": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "float",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey",
    "numpy.asarray",
    "numpy.squeeze",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.Conv3DTest.test_computation_padding_valid.f": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "haiku._src.conv.Conv3D",
    "haiku._src.conv_test.create_constant_initializers",
    "jax.numpy.ones",
    "net"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.Conv3DTest.test_invalid_input_shape": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.conv.Conv3D",
    "haiku._src.conv_test.create_constant_initializers",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "net"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.Conv3DTransposeTest": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.conv_test.Conv3DTransposeTest.test_computation_padding_same": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey",
    "numpy.asarray",
    "numpy.squeeze",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.Conv3DTransposeTest.test_computation_padding_same.f": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "haiku._src.conv.Conv3DTranspose",
    "haiku._src.conv_test.create_constant_initializers",
    "jax.numpy.ones",
    "net"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.Conv3DTransposeTest.test_computation_padding_valid": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey",
    "numpy.asarray",
    "numpy.squeeze",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.Conv3DTransposeTest.test_computation_padding_valid.f": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "haiku._src.conv.Conv3DTranspose",
    "haiku._src.conv_test.create_constant_initializers",
    "jax.numpy.ones",
    "net"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTest": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.conv_test.ConvTest.testIncorrectN": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "absl.testing.parameterized.parameters",
    "haiku._src.conv.ConvND",
    "haiku._src.transform.transform",
    "init_fn"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTest.test_connect_conv_channels_first": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTest.test_connect_conv_channels_first.f": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "haiku._src.conv.ConvND",
    "jax.numpy.zeros",
    "net"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTest.test_connect_conv_padding_function_same": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTest.test_connect_conv_padding_function_same.f": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "haiku._src.conv.ConvND",
    "jax.numpy.zeros",
    "net"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTest.test_connect_conv_padding_function_same.foo": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTest.test_connect_conv_padding_function_valid": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTest.test_connect_conv_padding_function_valid.f": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "haiku._src.conv.ConvND",
    "jax.numpy.zeros",
    "net"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTest.test_connect_conv_padding_function_valid.foo": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTest.test_connect_conv_same": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTest.test_connect_conv_same.f": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "haiku._src.conv.ConvND",
    "jax.numpy.zeros",
    "net"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTest.test_connect_conv_valid": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTest.test_connect_conv_valid.f": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "haiku._src.conv.ConvND",
    "jax.numpy.zeros",
    "net"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTest.test_diluted_conv": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTest.test_diluted_conv.f": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "haiku._src.conv.ConvND",
    "jax.numpy.zeros",
    "net"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTest.test_group_conv": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "haiku._src.conv.Conv1D",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.asarray",
    "net",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTest.test_invalid_input_shape": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.conv.ConvND",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.zeros",
    "net"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTest.test_invalid_mask_shape": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.conv.ConvND",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "jax.numpy.zeros",
    "net"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTest.test_strided_conv": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTest.test_strided_conv.f": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "haiku._src.conv.ConvND",
    "jax.numpy.zeros",
    "net"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTest.test_unbatched": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTest.test_unbatched.f": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "haiku._src.conv.ConvND",
    "jax.numpy.zeros",
    "net"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTest.test_valid_mask_shape": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "haiku._src.conv.ConvND",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "jax.numpy.zeros",
    "net"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTransposeTest": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.conv_test.ConvTransposeTest.testIncorrectN": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "ValueError",
    "absl.testing.parameterized.parameters",
    "haiku._src.conv.ConvNDTranspose",
    "haiku._src.transform.transform",
    "init_fn"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTransposeTest.test_connect_conv_transpose_channels_first": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTransposeTest.test_connect_conv_transpose_channels_first.f": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "haiku._src.conv.ConvNDTranspose",
    "jax.numpy.zeros",
    "net"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTransposeTest.test_connect_conv_transpose_same": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTransposeTest.test_connect_conv_transpose_same.f": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "haiku._src.conv.ConvNDTranspose",
    "jax.numpy.zeros",
    "net"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTransposeTest.test_connect_conv_transpose_strided": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTransposeTest.test_connect_conv_transpose_strided.f": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "haiku._src.conv.ConvNDTranspose",
    "jax.numpy.zeros",
    "net"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTransposeTest.test_connect_conv_transpose_valid": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTransposeTest.test_connect_conv_transpose_valid.f": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "haiku._src.conv.ConvNDTranspose",
    "jax.numpy.zeros",
    "net"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTransposeTest.test_initializer_variance": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "c",
    "c.params_dict",
    "haiku._src.conv.ConvNDTranspose",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "numpy.abs",
    "numpy.prod",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTransposeTest.test_invalid_input_mask": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.conv.ConvNDTranspose",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.zeros",
    "net"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTransposeTest.test_invalid_input_shape": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.conv.ConvNDTranspose",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.zeros",
    "net"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTransposeTest.test_output_sizes": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "haiku._src.conv.ConvNDTranspose",
    "haiku._src.conv_test.default_output_shape",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.zeros",
    "len",
    "net",
    "tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTransposeTest.test_unbatched": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTransposeTest.test_unbatched.f": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "haiku._src.conv.ConvNDTranspose",
    "jax.numpy.zeros",
    "net"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.ConvTransposeTest.test_valid_input_mask": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "haiku._src.conv.ConvNDTranspose",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.zeros",
    "net"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.conv_test.conv": {
  "data": {
   "shadows": "haiku._src.conv"
  },
  "type": "import"
 },
 "haiku._src.conv_test.create_constant_initializers": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "haiku._src.initializers.Constant"
   ]
  },
  "type": "function"
 },
 "haiku._src.conv_test.default_output_shape": {
  "data": {
   "lineno": 443
  },
  "type": "function"
 },
 "haiku._src.conv_test.initializers": {
  "data": {
   "shadows": "haiku._src.initializers"
  },
  "type": "import"
 },
 "haiku._src.conv_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.conv_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.conv_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.conv_test.random": {
  "data": {
   "shadows": "jax.random"
  },
  "type": "import"
 },
 "haiku._src.conv_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.conv_test.transform": {
  "data": {
   "shadows": "haiku._src.transform"
  },
  "type": "import"
 },
 "haiku._src.data_structures": {
  "data": {
   "symbols_in_volume": [
    "haiku._src.data_structures.FlatComponents",
    "haiku._src.data_structures.FlatMapping",
    "haiku._src.data_structures.frozendict",
    "haiku._src.data_structures.jax",
    "tuple",
    "type",
    "typing.TypeVar",
    "zip"
   ]
  },
  "type": "module"
 },
 "haiku._src.data_structures.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "haiku._src.data_structures.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "haiku._src.data_structures.FlatComponents": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "haiku._src.data_structures.PyTreeDef",
    "typing.Any",
    "typing.NamedTuple",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "haiku._src.data_structures.FlatMapping": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "haiku._src.data_structures.K",
    "haiku._src.data_structures.V",
    "typing.Mapping"
   ]
  },
  "type": "class"
 },
 "haiku._src.data_structures.FlatMapping.__eq__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "haiku._src.data_structures.FlatMapping",
    "type"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.FlatMapping.__getattr__": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.FlatMapping.__getitem__": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "haiku._src.data_structures.K",
    "haiku._src.data_structures.V"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.FlatMapping.__hash__": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.FlatMapping.__init__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "dict",
    "haiku._src.data_structures.FlatComponents",
    "haiku._src.data_structures.jax",
    "len",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.FlatMapping.__iter__": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.FlatMapping.__len__": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.FlatMapping.__reduce__": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "haiku._src.data_structures.FlatMapping"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.FlatMapping.__str__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "haiku._src.data_structures._repr_item",
    "haiku._src.utils.indent",
    "len",
    "type"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.FlatMapping._to_mapping": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "haiku._src.data_structures.K",
    "haiku._src.data_structures.V",
    "haiku._src.data_structures.jax",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.FlatMapping.items": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "haiku._src.data_structures.FlatMapping.keys": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "haiku._src.data_structures.KeysOnlyKeysView"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.FlatMapping.values": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "haiku._src.data_structures.Generic": {
  "data": {
   "shadows": "typing.Generic"
  },
  "type": "import"
 },
 "haiku._src.data_structures.K": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "haiku._src.data_structures.KeysOnlyKeysView": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "haiku._src.data_structures.collections"
   ]
  },
  "type": "class"
 },
 "haiku._src.data_structures.KeysOnlyKeysView.__init__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.KeysOnlyKeysView.__repr__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "haiku._src.data_structures.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "haiku._src.data_structures.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "haiku._src.data_structures.PyTreeDef": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "haiku._src.data_structures.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "haiku._src.data_structures.Stack": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "haiku._src.data_structures.T",
    "typing.Generic"
   ]
  },
  "type": "class"
 },
 "haiku._src.data_structures.Stack.__call__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "haiku._src.data_structures.contextlib"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.Stack.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "haiku._src.data_structures.collections"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.Stack.__iter__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "iter",
    "reversed"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.Stack.__len__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.Stack.clone": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "haiku._src.data_structures.Stack.map": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "fn",
    "haiku._src.data_structures.T",
    "haiku._src.data_structures.U",
    "type",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.Stack.peek": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "haiku._src.data_structures.T"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.Stack.pop": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "haiku._src.data_structures.T"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.Stack.popleft": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "haiku._src.data_structures.T"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.Stack.push": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "haiku._src.data_structures.T"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.T": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "haiku._src.data_structures.ThreadLocalStack": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "haiku._src.data_structures.Stack",
    "haiku._src.data_structures.T",
    "haiku._src.data_structures.threading"
   ]
  },
  "type": "class"
 },
 "haiku._src.data_structures.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "haiku._src.data_structures.U": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "haiku._src.data_structures.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "haiku._src.data_structures.V": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "haiku._src.data_structures._repr_item": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "haiku._src.data_structures.pprint",
    "haiku._src.utils.indent",
    "len",
    "repr"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "haiku._src.data_structures.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "haiku._src.data_structures.frozendict": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "haiku._src.data_structures.K",
    "haiku._src.data_structures.V",
    "typing.Mapping"
   ]
  },
  "type": "class"
 },
 "haiku._src.data_structures.frozendict.__eq__": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "dict",
    "haiku._src.data_structures.frozendict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.frozendict.__getattr__": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "haiku._src.data_structures.K",
    "haiku._src.data_structures.V"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.frozendict.__getitem__": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "haiku._src.data_structures.K",
    "haiku._src.data_structures.V"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.frozendict.__hash__": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "haiku._src.data_structures.frozendict.__init__": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "dict",
    "hash",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.frozendict.__iter__": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.frozendict.__len__": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.frozendict.__reduce__": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "haiku._src.data_structures.frozendict"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.frozendict.__repr__": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "haiku._src.data_structures._repr_item",
    "haiku._src.utils.indent",
    "len",
    "type"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.frozendict.get": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "haiku._src.data_structures.K",
    "haiku._src.data_structures.T",
    "haiku._src.data_structures.V",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.frozendict.keys": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "haiku._src.data_structures.KeysOnlyKeysView"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.data_structures.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "haiku._src.data_structures.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "haiku._src.data_structures.to_immutable_dict": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "FlatMapping",
    "dict",
    "haiku._src.data_structures.K",
    "haiku._src.data_structures.V",
    "type",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.to_mutable_dict": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "FlatMapping",
    "type"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures.utils": {
  "data": {
   "shadows": "haiku._src.utils"
  },
  "type": "import"
 },
 "haiku._src.data_structures_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main",
    "haiku._src.data_structures.FlatMapping"
   ]
  },
  "type": "module"
 },
 "haiku._src.data_structures_test.DataStructuresTest": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.data_structures_test.DataStructuresTest.test_to_immutable_dict": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "haiku._src.data_structures.to_immutable_dict",
    "haiku._src.data_structures_test.FlatMapping",
    "type"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.DataStructuresTest.test_to_mutable_dict": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "dict",
    "haiku._src.data_structures.to_mutable_dict",
    "haiku._src.data_structures_test.FlatMapping",
    "type"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.FlatMapping": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "haiku._src.data_structures_test.FlatMappingTest": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.data_structures_test.FlatMappingTest.test_copy": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "clone",
    "dict",
    "haiku._src.data_structures.to_immutable_dict",
    "haiku._src.data_structures_test.cloudpickle",
    "haiku._src.data_structures_test.copy",
    "haiku._src.data_structures_test.dill",
    "haiku._src.data_structures_test.jax",
    "haiku._src.data_structures_test.pickle"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.FlatMappingTest.test_deepcopy_still_immutable": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "haiku._src.data_structures_test.FlatMapping",
    "haiku._src.data_structures_test.copy"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.FlatMappingTest.test_different_sequence_types": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "haiku._src.data_structures_test.FlatMapping",
    "haiku._src.data_structures_test.jax",
    "list",
    "tuple",
    "type_of_sequence"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.FlatMappingTest.test_eq_hash": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "dict",
    "haiku._src.data_structures_test.FlatMapping",
    "hash"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.FlatMappingTest.test_flatten_nested_struct": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "haiku._src.data_structures_test.FlatMapping",
    "haiku._src.data_structures_test.jax"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.FlatMappingTest.test_frozen_builtins_jax_compatibility": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "haiku._src.data_structures_test.FlatMapping",
    "haiku._src.data_structures_test.jax"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.FlatMappingTest.test_get": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "dict",
    "haiku._src.data_structures_test.FlatMapping"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.FlatMappingTest.test_get_item": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "KeyError",
    "haiku._src.data_structures_test.FlatMapping"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.FlatMappingTest.test_getattr": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "dict",
    "haiku._src.data_structures_test.FlatMapping"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.FlatMappingTest.test_getitem": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "dict",
    "haiku._src.data_structures_test.FlatMapping"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.FlatMappingTest.test_getitem_missing": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "KeyError",
    "haiku._src.data_structures_test.FlatMapping"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.FlatMappingTest.test_getitem_missing_nested": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "KeyError",
    "haiku._src.data_structures_test.FlatMapping"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.FlatMappingTest.test_getitem_nested_immutable": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "TypeError",
    "haiku._src.data_structures.to_immutable_dict"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.FlatMappingTest.test_init": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "haiku._src.data_structures.FlatComponents",
    "haiku._src.data_structures_test.FlatMapping",
    "haiku._src.data_structures_test.jax"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.FlatMappingTest.test_init_from_dict": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "dict",
    "haiku._src.data_structures_test.FlatMapping"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.FlatMappingTest.test_items": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "haiku._src.data_structures_test.FlatMapping",
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.FlatMappingTest.test_keys": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "haiku._src.data_structures_test.FlatMapping",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.FlatMappingTest.test_nested_sequence": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "haiku._src.data_structures_test.FlatMapping",
    "haiku._src.data_structures_test.jax",
    "print"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.FlatMappingTest.test_replace_leaves_with_nodes_in_map": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "haiku._src.data_structures_test.FlatMapping",
    "haiku._src.data_structures_test.jax"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.FlatMappingTest.test_setattr": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "AttributeError",
    "dict",
    "haiku._src.data_structures_test.FlatMapping"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.FlatMappingTest.test_tree_functions": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "haiku._src.data_structures_test.FlatMapping",
    "haiku._src.data_structures_test.jax",
    "type"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.FlatMappingTest.test_tree_map": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "dict",
    "haiku._src.data_structures_test.FlatMapping",
    "haiku._src.data_structures_test.jax",
    "haiku._src.data_structures_test.tree",
    "tree_map",
    "type"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.FlatMappingTest.test_tree_transpose": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "haiku._src.data_structures_test.FlatMapping",
    "haiku._src.data_structures_test.jax"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.StackTest": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase",
    "haiku._src.data_structures.Stack"
   ]
  },
  "type": "class"
 },
 "haiku._src.data_structures_test.StackTest.test_call": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "s",
    "s.peek"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.StackTest.test_clone": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.StackTest.test_exception_safe": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "object",
    "s",
    "s.peek"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.StackTest.test_len": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.StackTest.test_map": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.StackTest.test_popleft": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.StackTest.test_push_peek_pop": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.ThreadLocalStackTest": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "haiku._src.data_structures.ThreadLocalStack",
    "haiku._src.data_structures_test.StackTest"
   ]
  },
  "type": "class"
 },
 "haiku._src.data_structures_test.ThreadLocalStackTest.test_stack_per_thread": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "haiku._src.data_structures_test.threading",
    "s",
    "s.pop",
    "s.push"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.ThreadLocalStackTest.test_stack_per_thread.second_thread": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "len",
    "s",
    "s.push"
   ]
  },
  "type": "function"
 },
 "haiku._src.data_structures_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.data_structures_test.cloudpickle": {
  "data": {
   "shadows": "cloudpickle"
  },
  "type": "import"
 },
 "haiku._src.data_structures_test.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "haiku._src.data_structures_test.data_structures": {
  "data": {
   "shadows": "haiku._src.data_structures"
  },
  "type": "import"
 },
 "haiku._src.data_structures_test.dill": {
  "data": {
   "shadows": "dill"
  },
  "type": "import"
 },
 "haiku._src.data_structures_test.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.data_structures_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.data_structures_test.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "haiku._src.data_structures_test.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "haiku._src.data_structures_test.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "haiku._src.depthwise_conv": {
  "data": {
   "symbols_in_volume": [
    "haiku._src.base",
    "haiku._src.base.get_parameter",
    "haiku._src.depthwise_conv.hk",
    "haiku._src.depthwise_conv.types",
    "haiku._src.initializers",
    "haiku._src.module",
    "haiku._src.module.Module"
   ]
  },
  "type": "module"
 },
 "haiku._src.depthwise_conv.DIMENSION_NUMBERS": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "haiku._src.depthwise_conv.DIMENSION_NUMBERS_NCSPATIAL": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "haiku._src.depthwise_conv.DepthwiseConv2D": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "haiku._src.depthwise_conv.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.depthwise_conv.DepthwiseConv2D.__call__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "haiku._src.depthwise_conv.hk",
    "haiku._src.utils.get_channel_index",
    "jax.lax.conv_general_dilated",
    "jax.numpy.broadcast_to",
    "jax.numpy.ndarray",
    "numpy.prod",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "haiku._src.depthwise_conv.DepthwiseConv2D.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "bool",
    "haiku._src.depthwise_conv.DIMENSION_NUMBERS",
    "haiku._src.depthwise_conv.DIMENSION_NUMBERS_NCSPATIAL",
    "haiku._src.depthwise_conv.hk",
    "haiku._src.utils.get_channel_index",
    "haiku._src.utils.replicate",
    "int",
    "jax.numpy.zeros",
    "len",
    "str",
    "super",
    "typing.Optional",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.depthwise_conv.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "haiku._src.depthwise_conv.SeparableDepthwiseConv2D": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "haiku._src.depthwise_conv.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.depthwise_conv.SeparableDepthwiseConv2D.__call__": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "jax.numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "haiku._src.depthwise_conv.SeparableDepthwiseConv2D.__init__": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "bool",
    "haiku._src.depthwise_conv.DepthwiseConv2D",
    "haiku._src.depthwise_conv.hk",
    "haiku._src.utils.replicate",
    "int",
    "str",
    "super",
    "typing.Optional",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.depthwise_conv.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "haiku._src.depthwise_conv.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "haiku._src.depthwise_conv.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "haiku._src.depthwise_conv.base": {
  "data": {
   "shadows": "haiku._src.base"
  },
  "type": "import"
 },
 "haiku._src.depthwise_conv.hk": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "haiku._src.depthwise_conv.initializers": {
  "data": {
   "shadows": "haiku._src.initializers"
  },
  "type": "import"
 },
 "haiku._src.depthwise_conv.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.depthwise_conv.lax": {
  "data": {
   "shadows": "jax.lax"
  },
  "type": "import"
 },
 "haiku._src.depthwise_conv.module": {
  "data": {
   "shadows": "haiku._src.module"
  },
  "type": "import"
 },
 "haiku._src.depthwise_conv.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.depthwise_conv.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "haiku._src.depthwise_conv.utils": {
  "data": {
   "shadows": "haiku._src.utils"
  },
  "type": "import"
 },
 "haiku._src.depthwise_conv_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "haiku._src.depthwise_conv_test.DepthwiseConv2DTest": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.depthwise_conv_test.DepthwiseConv2DTest.test_channel_multiplier": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey"
   ]
  },
  "type": "function"
 },
 "haiku._src.depthwise_conv_test.DepthwiseConv2DTest.test_channel_multiplier.f": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "haiku._src.depthwise_conv.DepthwiseConv2D",
    "haiku._src.depthwise_conv_test.create_constant_initializers",
    "jax.numpy.array",
    "net",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.depthwise_conv_test.DepthwiseConv2DTest.test_channels_first": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "haiku._src.depthwise_conv_test.DepthwiseConv2DTest.test_channels_first.f": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "haiku._src.depthwise_conv.DepthwiseConv2D",
    "haiku._src.depthwise_conv_test.create_constant_initializers",
    "jax.numpy.array",
    "net",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.depthwise_conv_test.DepthwiseConv2DTest.test_channels_first_mult": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey"
   ]
  },
  "type": "function"
 },
 "haiku._src.depthwise_conv_test.DepthwiseConv2DTest.test_channels_first_mult.f": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "haiku._src.depthwise_conv.DepthwiseConv2D",
    "haiku._src.depthwise_conv_test.create_constant_initializers",
    "jax.numpy.array",
    "net",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.depthwise_conv_test.DepthwiseConv2DTest.test_convolution": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "haiku._src.depthwise_conv_test.DepthwiseConv2DTest.test_convolution.f": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "haiku._src.depthwise_conv.DepthwiseConv2D",
    "haiku._src.depthwise_conv_test.create_constant_initializers",
    "jax.numpy.array",
    "net",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.depthwise_conv_test.DepthwiseConv2DTest.test_padding": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey"
   ]
  },
  "type": "function"
 },
 "haiku._src.depthwise_conv_test.DepthwiseConv2DTest.test_padding.f": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "haiku._src.depthwise_conv.DepthwiseConv2D",
    "haiku._src.depthwise_conv_test.create_constant_initializers",
    "jax.numpy.array",
    "net",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.depthwise_conv_test.SeparableDepthwiseConv2DTest": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.depthwise_conv_test.SeparableDepthwiseConv2DTest.test_channel_multiplier": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey"
   ]
  },
  "type": "function"
 },
 "haiku._src.depthwise_conv_test.SeparableDepthwiseConv2DTest.test_channel_multiplier.f": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "haiku._src.depthwise_conv.SeparableDepthwiseConv2D",
    "haiku._src.depthwise_conv_test.create_constant_initializers",
    "jax.numpy.array",
    "net",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.depthwise_conv_test.SeparableDepthwiseConv2DTest.test_channels_first": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "haiku._src.depthwise_conv_test.SeparableDepthwiseConv2DTest.test_channels_first.f": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "haiku._src.depthwise_conv.SeparableDepthwiseConv2D",
    "haiku._src.depthwise_conv_test.create_constant_initializers",
    "jax.numpy.array",
    "net",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.depthwise_conv_test.SeparableDepthwiseConv2DTest.test_channels_first_mult": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey"
   ]
  },
  "type": "function"
 },
 "haiku._src.depthwise_conv_test.SeparableDepthwiseConv2DTest.test_channels_first_mult.f": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "haiku._src.depthwise_conv.SeparableDepthwiseConv2D",
    "haiku._src.depthwise_conv_test.create_constant_initializers",
    "jax.numpy.array",
    "net",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.depthwise_conv_test.SeparableDepthwiseConv2DTest.test_convolution": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "haiku._src.depthwise_conv_test.SeparableDepthwiseConv2DTest.test_convolution.f": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "haiku._src.depthwise_conv.SeparableDepthwiseConv2D",
    "haiku._src.depthwise_conv_test.create_constant_initializers",
    "jax.numpy.array",
    "net",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.depthwise_conv_test.SeparableDepthwiseConv2DTest.test_padding": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.random.PRNGKey"
   ]
  },
  "type": "function"
 },
 "haiku._src.depthwise_conv_test.SeparableDepthwiseConv2DTest.test_padding.f": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "haiku._src.depthwise_conv.SeparableDepthwiseConv2D",
    "haiku._src.depthwise_conv_test.create_constant_initializers",
    "jax.numpy.array",
    "net",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.depthwise_conv_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.depthwise_conv_test.create_constant_initializers": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "haiku._src.initializers.Constant"
   ]
  },
  "type": "function"
 },
 "haiku._src.depthwise_conv_test.depthwise_conv": {
  "data": {
   "shadows": "haiku._src.depthwise_conv"
  },
  "type": "import"
 },
 "haiku._src.depthwise_conv_test.initializers": {
  "data": {
   "shadows": "haiku._src.initializers"
  },
  "type": "import"
 },
 "haiku._src.depthwise_conv_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.depthwise_conv_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.depthwise_conv_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.depthwise_conv_test.random": {
  "data": {
   "shadows": "jax.random"
  },
  "type": "import"
 },
 "haiku._src.depthwise_conv_test.transform": {
  "data": {
   "shadows": "haiku._src.transform"
  },
  "type": "import"
 },
 "haiku._src.dot": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "haiku._src.data_structures.ThreadLocalStack",
    "haiku._src.dot.collections"
   ]
  },
  "type": "module"
 },
 "haiku._src.dot.DotTrace": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "haiku._src.dot.jax"
   ]
  },
  "type": "class"
 },
 "haiku._src.dot.DotTrace.lift": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "haiku._src.dot.DotTracer"
   ]
  },
  "type": "function"
 },
 "haiku._src.dot.DotTrace.process_call": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "haiku._src.dot.DotTracer",
    "haiku._src.dot.Graph",
    "haiku._src.dot._interpret_subtrace",
    "haiku._src.dot.graph_stack",
    "haiku._src.dot.name_or_str"
   ]
  },
  "type": "function"
 },
 "haiku._src.dot.DotTrace.process_custom_jvp_call": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "haiku._src.dot.DotTrace.process_custom_vjp_call": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "haiku._src.dot.DotTrace.process_primitive": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "haiku._src.dot.DotTracer",
    "haiku._src.dot.Node",
    "haiku._src.dot.graph_stack",
    "haiku._src.dot.jax",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "haiku._src.dot.DotTrace.pure": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "haiku._src.dot.DotTracer"
   ]
  },
  "type": "function"
 },
 "haiku._src.dot.DotTrace.sublift": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "haiku._src.dot.DotTracer"
   ]
  },
  "type": "function"
 },
 "haiku._src.dot.DotTracer": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "haiku._src.dot.jax"
   ]
  },
  "type": "class"
 },
 "haiku._src.dot.DotTracer.__init__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "haiku._src.dot.DotTracer.aval": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "haiku._src.dot.jax",
    "property"
   ]
  },
  "type": "function"
 },
 "haiku._src.dot.DotTracer.full_lower": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "haiku._src.dot.Edge": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "haiku._src.dot.Graph": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "haiku._src.dot.Edge",
    "haiku._src.dot.Node",
    "str",
    "typing.List",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "haiku._src.dot.Graph.create": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "classmethod",
    "haiku._src.dot.Graph",
    "str"
   ]
  },
  "type": "function"
 },
 "haiku._src.dot.Graph.evolve": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "haiku._src.dot.Graph"
   ]
  },
  "type": "function"
 },
 "haiku._src.dot.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "haiku._src.dot.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "haiku._src.dot.Node": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "haiku._src.dot.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "haiku._src.dot._format_val": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "haiku._src.utils.simple_dtype",
    "hasattr",
    "map",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "haiku._src.dot._graph_to_dot": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "ImportError",
    "format_path",
    "haiku._src.dot.Graph",
    "haiku._src.dot._format_val",
    "haiku._src.dot._max_depth",
    "haiku._src.dot._scaled_font_size",
    "haiku._src.dot.collections",
    "haiku._src.dot.escape",
    "haiku._src.dot.jax",
    "haiku._src.dot.tree",
    "hasattr",
    "id",
    "len",
    "map",
    "range",
    "render_graph",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "haiku._src.dot._graph_to_dot.format_path": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "map",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.dot._graph_to_dot.render_graph": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "haiku._src.dot.Graph",
    "haiku._src.dot._format_val",
    "haiku._src.dot._scaled_font_size",
    "haiku._src.dot.escape",
    "id",
    "int",
    "map",
    "render_graph",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.dot._interpret_subtrace": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "DotTrace",
    "DotTracer",
    "haiku._src.dot.jax",
    "map"
   ]
  },
  "type": "function"
 },
 "haiku._src.dot._max_depth": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "haiku._src.dot.Graph",
    "int",
    "max"
   ]
  },
  "type": "function"
 },
 "haiku._src.dot._scaled_font_size": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "haiku._src.dot.abstract_to_dot": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "haiku._src.dot.abstract_to_dot.wrapped_fun": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "haiku._src.dot.functools",
    "haiku._src.dot.jax"
   ]
  },
  "type": "function"
 },
 "haiku._src.dot.abstract_to_dot.wrapped_fun.dot_extractor_fn": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "haiku._src.dot.to_dot"
   ]
  },
  "type": "function"
 },
 "haiku._src.dot.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "haiku._src.dot.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "haiku._src.dot.data_structures": {
  "data": {
   "shadows": "haiku._src.data_structures"
  },
  "type": "import"
 },
 "haiku._src.dot.escape": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "haiku._src.dot.html",
    "str"
   ]
  },
  "type": "function"
 },
 "haiku._src.dot.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "haiku._src.dot.graph_stack": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "haiku._src.dot.html": {
  "data": {
   "shadows": "html"
  },
  "type": "import"
 },
 "haiku._src.dot.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.dot.module": {
  "data": {
   "shadows": "haiku._src.module"
  },
  "type": "import"
 },
 "haiku._src.dot.name_or_str": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "haiku._src.dot.to_dot": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "to_graph"
   ]
  },
  "type": "function"
 },
 "haiku._src.dot.to_dot.wrapped_fun": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "_graph_to_dot",
    "graph_fun",
    "haiku._src.dot.functools",
    "haiku._src.module.modules_with_named_call",
    "haiku._src.module.profiler_name_scopes"
   ]
  },
  "type": "function"
 },
 "haiku._src.dot.to_graph": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "haiku._src.dot.to_graph.wrapped_fun": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "_interpret_subtrace",
    "haiku._src.dot.Graph",
    "haiku._src.dot.functools",
    "haiku._src.dot.graph_stack",
    "haiku._src.dot.jax",
    "haiku._src.dot.name_or_str",
    "haiku._src.module.hook_methods",
    "out_tree"
   ]
  },
  "type": "function"
 },
 "haiku._src.dot.to_graph.wrapped_fun.method_hook": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "haiku._src.dot.Graph",
    "haiku._src.dot.contextlib",
    "haiku._src.dot.graph_stack",
    "haiku._src.module.Module",
    "str"
   ]
  },
  "type": "function"
 },
 "haiku._src.dot.tree": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "haiku._src.dot.utils": {
  "data": {
   "shadows": "haiku._src.utils"
  },
  "type": "import"
 },
 "haiku._src.dot_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main",
    "haiku._src.module.profiler_name_scopes"
   ]
  },
  "type": "module"
 },
 "haiku._src.dot_test.AddModule": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "haiku._src.module.Module"
   ]
  },
  "type": "class"
 },
 "haiku._src.dot_test.AddModule.__call__": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "haiku._src.dot_test.DotTest": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.dot_test.DotTest.test_add_module": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "AddModule",
    "haiku._src.dot.to_graph",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.dot_test.DotTest.test_call": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "haiku._src.dot.to_graph",
    "haiku._src.dot_test.jax",
    "jax.numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.dot_test.DotTest.test_call.my_function": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "haiku._src.dot_test.DotTest.test_empty": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "haiku._src.dot.to_graph"
   ]
  },
  "type": "function"
 },
 "haiku._src.dot_test.DotTest.test_module_namescope_setting_unchanged": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "haiku._src.dot.to_dot",
    "haiku._src.module.modules_with_named_call",
    "haiku._src.module.profiler_name_scopes",
    "jax.numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.dot_test.DotTest.test_no_namescopes_inside_abstract_dot": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "AddModule",
    "haiku._src.dot.abstract_to_dot",
    "haiku._src.dot_test.jax",
    "haiku._src.dot_test.mock",
    "haiku._src.module.modules_with_named_call",
    "haiku._src.module.profiler_name_scopes",
    "haiku._src.stateful",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.float32",
    "tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.dot_test.DotTest.test_no_namescopes_inside_dot": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "AddModule",
    "haiku._src.dot.to_dot",
    "haiku._src.dot_test.mock",
    "haiku._src.module.modules_with_named_call",
    "haiku._src.module.profiler_name_scopes",
    "haiku._src.stateful",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.dot_test.DotTest.test_pmap": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "haiku._src.dot.to_graph",
    "haiku._src.dot_test.jax",
    "jax.numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.dot_test.DotTest.test_pmap.my_function": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "haiku._src.dot_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.dot_test.dot": {
  "data": {
   "shadows": "haiku._src.dot"
  },
  "type": "import"
 },
 "haiku._src.dot_test.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.dot_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.dot_test.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "haiku._src.dot_test.module": {
  "data": {
   "shadows": "haiku._src.module"
  },
  "type": "import"
 },
 "haiku._src.dot_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.dot_test.stateful": {
  "data": {
   "shadows": "haiku._src.stateful"
  },
  "type": "import"
 },
 "haiku._src.dot_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.embed": {
  "data": {
   "symbols_in_volume": [
    "haiku._src.base",
    "haiku._src.base.get_parameter",
    "haiku._src.embed.EmbedLookupStyle",
    "haiku._src.embed.hk",
    "haiku._src.embed.types",
    "haiku._src.initializers",
    "haiku._src.module",
    "haiku._src.module.Module"
   ]
  },
  "type": "module"
 },
 "haiku._src.embed.Embed": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "haiku._src.embed.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.embed.Embed.__call__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "getattr",
    "haiku._src.embed.hk",
    "haiku._src.embed.jax",
    "isinstance",
    "jax.numpy.asarray",
    "jax.numpy.integer",
    "jax.numpy.issubdtype",
    "jax.numpy.ndarray",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.embed.Embed.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.embed.hk",
    "int",
    "jax.numpy.asarray",
    "jax.numpy.ndarray",
    "str",
    "super",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.embed.Embed.embeddings": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "haiku._src.embed.hk",
    "property"
   ]
  },
  "type": "function"
 },
 "haiku._src.embed.EmbedLookupStyle": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "haiku._src.embed.enum"
   ]
  },
  "type": "class"
 },
 "haiku._src.embed.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "haiku._src.embed.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "haiku._src.embed.base": {
  "data": {
   "shadows": "haiku._src.base"
  },
  "type": "import"
 },
 "haiku._src.embed.enum": {
  "data": {
   "shadows": "enum"
  },
  "type": "import"
 },
 "haiku._src.embed.hk": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "haiku._src.embed.initializers": {
  "data": {
   "shadows": "haiku._src.initializers"
  },
  "type": "import"
 },
 "haiku._src.embed.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.embed.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.embed.module": {
  "data": {
   "shadows": "haiku._src.module"
  },
  "type": "import"
 },
 "haiku._src.embed.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "haiku._src.embed_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main",
    "numpy.asarray"
   ]
  },
  "type": "module"
 },
 "haiku._src.embed_test.EmbedTest": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.embed_test.EmbedTest.test_default_creation": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "emb",
    "haiku._src.embed.Embed",
    "haiku._src.embed_test._1D_IDS",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.embed_test.EmbedTest.test_embed_dtype_check": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ValueError",
    "emb",
    "haiku._src.embed.Embed",
    "haiku._src.embed_test._EMBEDDING_MATRIX",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.embed_test.EmbedTest.test_embed_invalid_lookup": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "AttributeError",
    "emb",
    "haiku._src.embed.Embed",
    "haiku._src.embed_test._1D_IDS",
    "haiku._src.embed_test._EMBEDDING_MATRIX",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.embed_test.EmbedTest.test_embed_property_check": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "emb",
    "emb.embed_dim",
    "emb.embeddings",
    "emb.vocab_size",
    "haiku._src.embed.Embed",
    "haiku._src.embed_test._EMBEDDING_MATRIX",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.asarray",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.embed_test.EmbedTest.test_inconsistent_creation_args": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.embed.Embed",
    "haiku._src.embed_test._EMBEDDING_MATRIX",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.embed_test.EmbedTest.test_lookup": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "emb",
    "haiku._src.embed.Embed",
    "haiku._src.embed_test._1D_IDS",
    "haiku._src.embed_test._2D_IDS",
    "haiku._src.embed_test._3D_IDS",
    "haiku._src.embed_test._EMBEDDING_MATRIX",
    "haiku._src.embed_test.itertools",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.asarray",
    "list",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.embed_test.EmbedTest.test_no_creation_args": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.embed.Embed",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.embed_test._1D_IDS": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "haiku._src.embed_test._2D_IDS": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "haiku._src.embed_test._3D_IDS": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "haiku._src.embed_test._EMBEDDING_MATRIX": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "haiku._src.embed_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.embed_test.embed": {
  "data": {
   "shadows": "haiku._src.embed"
  },
  "type": "import"
 },
 "haiku._src.embed_test.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "haiku._src.embed_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.embed_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.embed_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.embed_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.filtering": {
  "data": {
   "symbols_in_volume": [
    "haiku._src.typing.Params",
    "haiku._src.typing.State",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "haiku._src.filtering.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "haiku._src.filtering.Params": {
  "data": {
   "shadows": "haiku._src.typing.Params"
  },
  "type": "import"
 },
 "haiku._src.filtering.State": {
  "data": {
   "shadows": "haiku._src.typing.State"
  },
  "type": "import"
 },
 "haiku._src.filtering.T": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "haiku._src.filtering.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "haiku._src.filtering.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "haiku._src.filtering.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "haiku._src.filtering.data_structures": {
  "data": {
   "shadows": "haiku._src.data_structures"
  },
  "type": "import"
 },
 "haiku._src.filtering.filter": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "bool",
    "dict",
    "haiku._src.data_structures.to_immutable_dict",
    "haiku._src.filtering.T",
    "haiku._src.filtering.collections",
    "jax.numpy.ndarray",
    "predicate",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "haiku._src.filtering.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.filtering.merge": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "dict",
    "haiku._src.data_structures.to_immutable_dict",
    "haiku._src.filtering.T",
    "haiku._src.filtering.collections"
   ]
  },
  "type": "function"
 },
 "haiku._src.filtering.partition": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "bool",
    "dict",
    "haiku._src.data_structures.to_immutable_dict",
    "haiku._src.filtering.T",
    "haiku._src.filtering.collections",
    "jax.numpy.ndarray",
    "predicate",
    "str",
    "typing.Callable",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.filtering_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "haiku._src.filtering_test.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "haiku._src.filtering_test.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "haiku._src.filtering_test.PartitionTest": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.filtering_test.PartitionTest.test_matching": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "haiku._src.filtering.filter",
    "haiku._src.filtering_test.get_names",
    "haiku._src.filtering_test.get_net",
    "haiku._src.filtering_test.jax",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.numpy.ones",
    "set"
   ]
  },
  "type": "function"
 },
 "haiku._src.filtering_test.PartitionTest.test_partitioning": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "haiku._src.filtering.partition",
    "haiku._src.filtering_test.compile_regex",
    "haiku._src.filtering_test.get_names",
    "haiku._src.filtering_test.get_net",
    "haiku._src.filtering_test.jax",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.numpy.ones",
    "set"
   ]
  },
  "type": "function"
 },
 "haiku._src.filtering_test.PartitionTest.test_transforms_with_filer": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "df_fn",
    "fn",
    "haiku._src.filtering_test.get_net",
    "haiku._src.filtering_test.jax",
    "haiku._src.filtering_test.jax_fn_with_filter",
    "haiku._src.filtering_test.to_set",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.numpy.array",
    "jax.numpy.ones",
    "jf_fn",
    "set"
   ]
  },
  "type": "function"
 },
 "haiku._src.filtering_test.PartitionTest.test_transforms_with_filer.get_stacked_net": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "haiku._src.filtering_test.get_net",
    "jax.numpy.stack"
   ]
  },
  "type": "function"
 },
 "haiku._src.filtering_test.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "haiku._src.filtering_test.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "haiku._src.filtering_test.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "haiku._src.filtering_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.filtering_test.basic": {
  "data": {
   "shadows": "haiku._src.basic"
  },
  "type": "import"
 },
 "haiku._src.filtering_test.compile_regex": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "haiku._src.filtering_test.re",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "haiku._src.filtering_test.filtering": {
  "data": {
   "shadows": "haiku._src.filtering"
  },
  "type": "import"
 },
 "haiku._src.filtering_test.get_names": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "haiku._src.filtering_test.get_net": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "haiku._src.basic.Linear",
    "init",
    "jax.numpy.mean"
   ]
  },
  "type": "function"
 },
 "haiku._src.filtering_test.get_net.init": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "dict",
    "jax.numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.filtering_test.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.filtering_test.jax_fn_with_filter": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "bool",
    "jax.numpy.ndarray",
    "jax_fn",
    "str",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "haiku._src.filtering_test.jax_fn_with_filter.fn_with_filter": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "haiku._src.filtering.partition",
    "jaxed_fn"
   ]
  },
  "type": "function"
 },
 "haiku._src.filtering_test.jax_fn_with_filter.wrapper": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "f",
    "haiku._src.filtering.merge"
   ]
  },
  "type": "function"
 },
 "haiku._src.filtering_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.filtering_test.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "haiku._src.filtering_test.to_set": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "float",
    "haiku._src.filtering_test.jax",
    "set",
    "str",
    "tuple",
    "typing.Sequence",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.filtering_test.transform": {
  "data": {
   "shadows": "haiku._src.transform"
  },
  "type": "import"
 },
 "haiku._src.group_norm": {
  "data": {
   "symbols_in_volume": [
    "haiku._src.base",
    "haiku._src.base.get_parameter",
    "haiku._src.group_norm.hk",
    "haiku._src.group_norm.types",
    "haiku._src.initializers",
    "haiku._src.module",
    "haiku._src.module.Module"
   ]
  },
  "type": "module"
 },
 "haiku._src.group_norm.GroupNorm": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "haiku._src.group_norm.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.group_norm.GroupNorm.__call__": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.group_norm.hk",
    "haiku._src.group_norm.jax",
    "jax.numpy.mean",
    "jax.numpy.ndarray",
    "jax.numpy.var",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.group_norm.GroupNorm.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "bool",
    "float",
    "haiku._src.group_norm.collections",
    "haiku._src.group_norm.hk",
    "haiku._src.utils.get_channel_index",
    "int",
    "isinstance",
    "jax.numpy.ones",
    "jax.numpy.zeros",
    "slice",
    "str",
    "super",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.group_norm.GroupNorm._initialize": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "jax.numpy.ndarray",
    "range",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.group_norm.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "haiku._src.group_norm.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "haiku._src.group_norm.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "haiku._src.group_norm.base": {
  "data": {
   "shadows": "haiku._src.base"
  },
  "type": "import"
 },
 "haiku._src.group_norm.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "haiku._src.group_norm.hk": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "haiku._src.group_norm.initializers": {
  "data": {
   "shadows": "haiku._src.initializers"
  },
  "type": "import"
 },
 "haiku._src.group_norm.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.group_norm.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.group_norm.module": {
  "data": {
   "shadows": "haiku._src.module"
  },
  "type": "import"
 },
 "haiku._src.group_norm.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "haiku._src.group_norm.utils": {
  "data": {
   "shadows": "haiku._src.utils"
  },
  "type": "import"
 },
 "haiku._src.group_norm_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "haiku._src.group_norm_test.GroupNormTest": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.group_norm_test.GroupNormTest.assertAllClose": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.group_norm_test.GroupNormTest.test3ddata_format_agnostic": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "c_first_layer",
    "c_last_layer",
    "haiku._src.group_norm.GroupNorm",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.reshape",
    "jax.numpy.transpose",
    "numpy.float32",
    "numpy.random.normal",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "haiku._src.group_norm_test.GroupNormTest.test5ddata_format_agnostic": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "c_first_layer",
    "c_last_layer",
    "haiku._src.group_norm.GroupNorm",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.reshape",
    "jax.numpy.transpose",
    "numpy.float32",
    "numpy.random.normal",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "haiku._src.group_norm_test.GroupNormTest.test_create_offset_and_offset_provided": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.group_norm.GroupNorm",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "layer"
   ]
  },
  "type": "function"
 },
 "haiku._src.group_norm_test.GroupNormTest.test_create_scale_and_scale_provided": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.group_norm.GroupNorm",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "layer"
   ]
  },
  "type": "function"
 },
 "haiku._src.group_norm_test.GroupNormTest.test_data_format_agnostic_tensor": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "c_first",
    "c_last",
    "haiku._src.group_norm.GroupNorm",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.reshape",
    "jax.numpy.transpose",
    "numpy.float32",
    "numpy.random.normal",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "haiku._src.group_norm_test.GroupNormTest.test_data_format_agnostic_var": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "c_first_layer",
    "c_last_layer",
    "haiku._src.group_norm.GroupNorm",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.transpose",
    "numpy.float32",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "haiku._src.group_norm_test.GroupNormTest.test_incompatible_groups_and_tensor": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "ValueError",
    "absl.testing.parameterized.named_parameters",
    "haiku._src.group_norm.GroupNorm",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "layer"
   ]
  },
  "type": "function"
 },
 "haiku._src.group_norm_test.GroupNormTest.test_invalid_axis": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "ValueError",
    "absl.testing.parameterized.named_parameters",
    "haiku._src.group_norm.GroupNorm",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.group_norm_test.GroupNormTest.test_invalid_data_format": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ValueError",
    "absl.testing.parameterized.parameters",
    "haiku._src.group_norm.GroupNorm",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.group_norm_test.GroupNormTest.test_no_offset_beta_init_provided": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.group_norm.GroupNorm",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.group_norm_test.GroupNormTest.test_no_scale_and_init_provided": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.group_norm.GroupNorm",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.group_norm_test.GroupNormTest.test_rank_changes": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.group_norm.GroupNorm",
    "haiku._src.group_norm_test.constant",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "layer"
   ]
  },
  "type": "function"
 },
 "haiku._src.group_norm_test.GroupNormTest.test_simple_case": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "haiku._src.group_norm.GroupNorm",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "layer",
    "numpy.nditer"
   ]
  },
  "type": "function"
 },
 "haiku._src.group_norm_test.GroupNormTest.test_simple_case_nchwtensor": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "haiku._src.group_norm.GroupNorm",
    "haiku._src.group_norm_test.constant",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "layer",
    "numpy.nditer"
   ]
  },
  "type": "function"
 },
 "haiku._src.group_norm_test.GroupNormTest.test_simple_case_nchwvar": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "haiku._src.group_norm.GroupNorm",
    "haiku._src.initializers.Constant",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "layer",
    "numpy.nditer"
   ]
  },
  "type": "function"
 },
 "haiku._src.group_norm_test.GroupNormTest.test_simple_case_tensor": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "haiku._src.group_norm.GroupNorm",
    "haiku._src.group_norm_test.constant",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "layer",
    "numpy.nditer"
   ]
  },
  "type": "function"
 },
 "haiku._src.group_norm_test.GroupNormTest.test_simple_case_var": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "haiku._src.group_norm.GroupNorm",
    "haiku._src.initializers.Constant",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "layer",
    "numpy.nditer"
   ]
  },
  "type": "function"
 },
 "haiku._src.group_norm_test.GroupNormTest.test_slice_axis": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "axis_layer",
    "haiku._src.group_norm.GroupNorm",
    "haiku._src.test_utils.transform_and_run",
    "numpy.float32",
    "numpy.random.normal",
    "numpy.random.uniform",
    "slice_layer"
   ]
  },
  "type": "function"
 },
 "haiku._src.group_norm_test.GroupNormTest.test_valid_data_format_channels_first": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "haiku._src.group_norm.GroupNorm",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.group_norm_test.GroupNormTest.test_valid_data_format_channels_last": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "haiku._src.group_norm.GroupNorm",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.group_norm_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.group_norm_test.constant": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.full"
   ]
  },
  "type": "function"
 },
 "haiku._src.group_norm_test.group_norm": {
  "data": {
   "shadows": "haiku._src.group_norm"
  },
  "type": "import"
 },
 "haiku._src.group_norm_test.initializers": {
  "data": {
   "shadows": "haiku._src.initializers"
  },
  "type": "import"
 },
 "haiku._src.group_norm_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.group_norm_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.group_norm_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.group_norm_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.initializers": {
  "data": {
   "symbols_in_volume": [
    "haiku._src.base",
    "haiku._src.base.next_rng_key",
    "haiku._src.initializers.hk",
    "haiku._src.initializers.types",
    "haiku._src.typing.Initializer"
   ]
  },
  "type": "module"
 },
 "haiku._src.initializers.Constant": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "haiku._src.initializers.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.initializers.Constant.__call__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "int",
    "jax.numpy.broadcast_to",
    "jax.numpy.ndarray",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "haiku._src.initializers.Constant.__init__": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "haiku._src.initializers.Identity": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "haiku._src.typing.Initializer"
   ]
  },
  "type": "class"
 },
 "haiku._src.initializers.Identity.__call__": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.initializers.jax",
    "int",
    "jax.numpy.broadcast_to",
    "jax.numpy.eye",
    "jax.numpy.ndarray",
    "len",
    "tuple",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "haiku._src.initializers.Identity.__init__": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "float",
    "jax.numpy.ndarray",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.initializers.Initializer": {
  "data": {
   "shadows": "haiku._src.typing.Initializer"
  },
  "type": "import"
 },
 "haiku._src.initializers.Orthogonal": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "haiku._src.initializers.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.initializers.Orthogonal.__call__": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.initializers.hk",
    "haiku._src.initializers.jax",
    "int",
    "jax.numpy.diag",
    "jax.numpy.linalg.qr",
    "jax.numpy.moveaxis",
    "jax.numpy.ndarray",
    "jax.numpy.reshape",
    "jax.numpy.sign",
    "len",
    "numpy.delete",
    "numpy.prod",
    "tuple",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "haiku._src.initializers.Orthogonal.__init__": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "haiku._src.initializers.RandomNormal": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "haiku._src.initializers.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.initializers.RandomNormal.__call__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "haiku._src.initializers.hk",
    "haiku._src.initializers.jax",
    "int",
    "jax.numpy.ndarray",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "haiku._src.initializers.RandomNormal.__init__": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "haiku._src.initializers.RandomUniform": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "haiku._src.initializers.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.initializers.RandomUniform.__call__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "haiku._src.initializers.hk",
    "haiku._src.initializers.jax",
    "int",
    "jax.numpy.ndarray",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "haiku._src.initializers.RandomUniform.__init__": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "haiku._src.initializers.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "haiku._src.initializers.TruncatedNormal": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "haiku._src.initializers.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.initializers.TruncatedNormal.__call__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "haiku._src.initializers.hk",
    "haiku._src.initializers.jax",
    "int",
    "jax.numpy.ndarray",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "haiku._src.initializers.TruncatedNormal.__init__": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "haiku._src.initializers.UniformScaling": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "haiku._src.initializers.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.initializers.UniformScaling.__call__": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "haiku._src.initializers.RandomUniform",
    "int",
    "jax.numpy.ndarray",
    "numpy.product",
    "numpy.sqrt",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "haiku._src.initializers.UniformScaling.__init__": {
  "data": {
   "lineno": 211
  },
  "type": "function"
 },
 "haiku._src.initializers.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "haiku._src.initializers.VarianceScaling": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "haiku._src.initializers.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.initializers.VarianceScaling.__call__": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "haiku._src.initializers.RandomNormal",
    "haiku._src.initializers.RandomUniform",
    "haiku._src.initializers.TruncatedNormal",
    "haiku._src.initializers._compute_fans",
    "int",
    "jax.numpy.ndarray",
    "max",
    "numpy.asarray",
    "numpy.sqrt",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "haiku._src.initializers.VarianceScaling.__init__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "haiku._src.initializers._compute_fans": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "len",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "haiku._src.initializers.base": {
  "data": {
   "shadows": "haiku._src.base"
  },
  "type": "import"
 },
 "haiku._src.initializers.hk": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "haiku._src.initializers.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.initializers.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.initializers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.initializers.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "haiku._src.initializers_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main",
    "jax.config.config.update"
   ]
  },
  "type": "module"
 },
 "haiku._src.initializers_test.InitializersTest": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.initializers_test.InitializersTest.testRange": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "haiku._src.initializers.Identity",
    "init",
    "itertools.product",
    "jax.numpy.float32",
    "jax.numpy.int32",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "haiku._src.initializers_test.InitializersTest.test_compute_fans": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "haiku._src.initializers._compute_fans",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.initializers_test.InitializersTest.test_identity_identity": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "haiku._src.initializers.Identity",
    "haiku._src.initializers_test.jax",
    "haiku._src.test_utils.transform_and_run",
    "init",
    "jax.numpy.float32",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.initializers_test.InitializersTest.test_identity_invalid_shape": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.initializers.Identity",
    "haiku._src.test_utils.transform_and_run",
    "init",
    "jax.numpy.float32"
   ]
  },
  "type": "function"
 },
 "haiku._src.initializers_test.InitializersTest.test_initializers": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "as_np_f64",
    "haiku._src.initializers.Constant",
    "haiku._src.initializers.Identity",
    "haiku._src.initializers.Orthogonal",
    "haiku._src.initializers.RandomNormal",
    "haiku._src.initializers.RandomUniform",
    "haiku._src.initializers.TruncatedNormal",
    "haiku._src.initializers.UniformScaling",
    "haiku._src.initializers.VarianceScaling",
    "haiku._src.test_utils.transform_and_run",
    "init",
    "jax.numpy.float32",
    "jax.numpy.ones",
    "jax.numpy.zeros",
    "numpy.array",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "haiku._src.initializers_test.InitializersTest.test_invalid_variance_scale": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.initializers.VarianceScaling",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.initializers_test.InitializersTest.test_orthogonal_invalid_shape": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.initializers.Orthogonal",
    "haiku._src.test_utils.transform_and_run",
    "init",
    "jax.numpy.float32"
   ]
  },
  "type": "function"
 },
 "haiku._src.initializers_test.InitializersTest.test_orthogonal_orthogonal": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "haiku._src.initializers.Orthogonal",
    "haiku._src.test_utils.transform_and_run",
    "init",
    "jax.numpy.float32"
   ]
  },
  "type": "function"
 },
 "haiku._src.initializers_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.initializers_test.config": {
  "data": {
   "shadows": "jax.config.config"
  },
  "type": "import"
 },
 "haiku._src.initializers_test.initializers": {
  "data": {
   "shadows": "haiku._src.initializers"
  },
  "type": "import"
 },
 "haiku._src.initializers_test.it": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "haiku._src.initializers_test.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.initializers_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.initializers_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.initializers_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.initializers_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.integration": {
  "data": {},
  "type": "module"
 },
 "haiku._src.integration.checkpoint_generate": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.app.run",
    "absl.flags.DEFINE_string",
    "absl.flags.FLAGS",
    "absl.flags.mark_flag_as_required",
    "haiku._src.integration.checkpoint_generate.main"
   ]
  },
  "type": "module"
 },
 "haiku._src.integration.checkpoint_generate.FLAGS": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "haiku._src.integration.checkpoint_generate.app": {
  "data": {
   "shadows": "absl.app"
  },
  "type": "import"
 },
 "haiku._src.integration.checkpoint_generate.checkpoint_utils": {
  "data": {
   "shadows": "haiku._src.integration.checkpoint_utils"
  },
  "type": "import"
 },
 "haiku._src.integration.checkpoint_generate.descriptors": {
  "data": {
   "shadows": "haiku._src.integration.descriptors"
  },
  "type": "import"
 },
 "haiku._src.integration.checkpoint_generate.flags": {
  "data": {
   "shadows": "absl.flags"
  },
  "type": "import"
 },
 "haiku._src.integration.checkpoint_generate.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "haiku._src.integration.checkpoint_generate.main": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "absl.app.UsageError",
    "haiku._src.integration.checkpoint_generate.FLAGS",
    "haiku._src.integration.checkpoint_generate.json",
    "haiku._src.integration.checkpoint_generate.os",
    "haiku._src.integration.checkpoint_utils.summarize",
    "haiku._src.integration.descriptors.ALL_MODULES",
    "haiku._src.integration.descriptors.module_type",
    "haiku._src.integration.descriptors.to_file_name",
    "len",
    "open"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.checkpoint_generate.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "haiku._src.integration.checkpoint_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main",
    "haiku._src.integration.descriptors.ModuleFn"
   ]
  },
  "type": "module"
 },
 "haiku._src.integration.checkpoint_test.CheckpointTest": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.integration.checkpoint_test.CheckpointTest.test_checkpoint_format": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.integration.checkpoint_test.HOW_TO_REGENERATE",
    "haiku._src.integration.checkpoint_test.ModuleFn",
    "haiku._src.integration.checkpoint_test.json",
    "haiku._src.integration.checkpoint_test.os",
    "haiku._src.integration.checkpoint_utils.summarize",
    "haiku._src.integration.descriptors.ALL_MODULES",
    "haiku._src.integration.descriptors.ModuleDescriptor",
    "haiku._src.integration.descriptors.module_type",
    "haiku._src.integration.descriptors.to_file_name",
    "haiku._src.integration.descriptors.with_name",
    "haiku._src.test_utils.combined_named_parameters",
    "open"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.checkpoint_test.HOW_TO_REGENERATE": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "haiku._src.integration.checkpoint_test.ModuleFn": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "haiku._src.integration.checkpoint_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.integration.checkpoint_test.checkpoint_utils": {
  "data": {
   "shadows": "haiku._src.integration.checkpoint_utils"
  },
  "type": "import"
 },
 "haiku._src.integration.checkpoint_test.descriptors": {
  "data": {
   "shadows": "haiku._src.integration.descriptors"
  },
  "type": "import"
 },
 "haiku._src.integration.checkpoint_test.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "haiku._src.integration.checkpoint_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "haiku._src.integration.checkpoint_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.integration.checkpoint_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.integration.checkpoint_utils": {
  "data": {},
  "type": "module"
 },
 "haiku._src.integration.checkpoint_utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "haiku._src.integration.checkpoint_utils.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "haiku._src.integration.checkpoint_utils.descriptors": {
  "data": {
   "shadows": "haiku._src.integration.descriptors"
  },
  "type": "import"
 },
 "haiku._src.integration.checkpoint_utils.format_tensor": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "haiku._src.utils.simple_dtype",
    "jax.numpy.ndarray",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.checkpoint_utils.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "haiku._src.integration.checkpoint_utils.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.integration.checkpoint_utils.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.integration.checkpoint_utils.module_name": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "haiku._src.integration.descriptors.ModuleDescriptor",
    "haiku._src.integration.descriptors.unwrap",
    "haiku.testing.transform_and_run",
    "str"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.checkpoint_utils.summarize": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "haiku._src.integration.checkpoint_utils.format_tensor",
    "haiku._src.integration.checkpoint_utils.jax",
    "haiku._src.integration.checkpoint_utils.module_name",
    "haiku._src.integration.descriptors.ModuleDescriptor",
    "haiku.data_structures.to_mutable_dict",
    "haiku.data_structures.tree_bytes",
    "haiku.data_structures.tree_size",
    "haiku.transform_with_state",
    "int",
    "jax.numpy.ones",
    "map",
    "str",
    "typing.Any",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.checkpoint_utils.utils": {
  "data": {
   "shadows": "haiku._src.utils"
  },
  "type": "import"
 },
 "haiku._src.integration.common": {
  "data": {
   "symbols_in_volume": [
    "haiku._src.integration.descriptors.ModuleFn"
   ]
  },
  "type": "module"
 },
 "haiku._src.integration.common.DTypeTestCase": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.integration.common.DTypeTestCase.assert_dtype": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "haiku._src.integration.common.ModuleFn",
    "haiku._src.integration.common.jax",
    "haiku._src.integration.common.tree",
    "haiku.transform_with_state",
    "jax.numpy.bfloat16",
    "jax.numpy.float16",
    "jax.numpy.float32",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.common.DTypeTestCase.assert_dtype.assert_dtype": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "jax.numpy.floating",
    "jax.numpy.issubdtype"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.common.DTypeTestCase.assert_dtype.cast_if_floating": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "jax.numpy.floating",
    "jax.numpy.issubdtype"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.common.DTypeTestCase.assert_dtype.g": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "haiku.experimental.custom_creator",
    "mod",
    "module_fn"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.common.DTypeTestCase.assert_dtype.ones_creator": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "next_creator",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.common.ModuleFn": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "haiku._src.integration.common.descriptors": {
  "data": {
   "shadows": "haiku._src.integration.descriptors"
  },
  "type": "import"
 },
 "haiku._src.integration.common.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "haiku._src.integration.common.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.integration.common.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.integration.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.integration.common.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.integration.common.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "haiku._src.integration.descriptors": {
  "data": {
   "symbols_in_volume": [
    "haiku.AvgPool",
    "haiku.BatchApply",
    "haiku.BatchNorm",
    "haiku.Bias",
    "haiku.Conv1D",
    "haiku.Conv1DLSTM",
    "haiku.Conv1DTranspose",
    "haiku.Conv2D",
    "haiku.Conv2DLSTM",
    "haiku.Conv2DTranspose",
    "haiku.Conv3D",
    "haiku.Conv3DLSTM",
    "haiku.Conv3DTranspose",
    "haiku.ConvND",
    "haiku.ConvNDTranspose",
    "haiku.DeepRNN",
    "haiku.DepthwiseConv2D",
    "haiku.EMAParamsTree",
    "haiku.Embed",
    "haiku.ExponentialMovingAverage",
    "haiku.Flatten",
    "haiku.GRU",
    "haiku.GroupNorm",
    "haiku.IdentityCore",
    "haiku.InstanceNorm",
    "haiku.LSTM",
    "haiku.LayerNorm",
    "haiku.Linear",
    "haiku.MaxPool",
    "haiku.Module",
    "haiku.MultiHeadAttention",
    "haiku.RNNCore",
    "haiku.ResetCore",
    "haiku.Reshape",
    "haiku.SNParamsTree",
    "haiku.SeparableDepthwiseConv2D",
    "haiku.Sequential",
    "haiku.SpectralNorm",
    "haiku.VanillaRNN",
    "haiku._src.integration.descriptors.BATCH_MODULES",
    "haiku._src.integration.descriptors.BATCH_SIZE",
    "haiku._src.integration.descriptors.DummyCore",
    "haiku._src.integration.descriptors.ModuleDescriptor",
    "haiku._src.integration.descriptors.MultiInput",
    "haiku._src.integration.descriptors.OPTIONAL_BATCH_MODULES",
    "haiku._src.integration.descriptors.RECURRENT_MODULES",
    "haiku._src.integration.descriptors.RNN_CORES",
    "haiku._src.integration.descriptors.ResetCoreAdapter",
    "haiku._src.integration.descriptors.Training",
    "haiku._src.integration.descriptors.unroll_descriptors",
    "haiku.dynamic_unroll",
    "haiku.experimental.lift",
    "haiku.nets.MLP",
    "haiku.nets.MobileNetV1",
    "haiku.nets.ResNet",
    "haiku.nets.ResNet101",
    "haiku.nets.ResNet152",
    "haiku.nets.ResNet18",
    "haiku.nets.ResNet200",
    "haiku.nets.ResNet34",
    "haiku.nets.ResNet50",
    "haiku.nets.VectorQuantizer",
    "haiku.nets.VectorQuantizerEMA",
    "haiku.static_unroll",
    "jax.numpy.int32",
    "jax.numpy.ndarray",
    "typing.Callable"
   ]
  },
  "type": "module"
 },
 "haiku._src.integration.descriptors.ALL_MODULES": {
  "data": {
   "lineno": 303
  },
  "type": "constant"
 },
 "haiku._src.integration.descriptors.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "haiku._src.integration.descriptors.BATCH_MODULES": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "haiku._src.integration.descriptors.BATCH_SIZE": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "haiku._src.integration.descriptors.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "haiku._src.integration.descriptors.DummyCore": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "haiku.RNNCore"
   ]
  },
  "type": "class"
 },
 "haiku._src.integration.descriptors.DummyCore.__call__": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "haiku._src.integration.descriptors.DummyCore.initial_state": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "jax.numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.descriptors.IGNORED_MODULES": {
  "data": {
   "lineno": 305
  },
  "type": "constant"
 },
 "haiku._src.integration.descriptors.ModuleDescriptor": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "haiku._src.integration.descriptors.ModuleFn",
    "int",
    "jax.numpy.float32",
    "typing.Any",
    "typing.NamedTuple",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "haiku._src.integration.descriptors.ModuleFn": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "haiku._src.integration.descriptors.MultiInput": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "haiku._src.integration.descriptors.Wrapped"
   ]
  },
  "type": "class"
 },
 "haiku._src.integration.descriptors.MultiInput.__call__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "jax.numpy.ndarray",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.descriptors.MultiInput.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.descriptors.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "haiku._src.integration.descriptors.OPTIONAL_BATCH_MODULES": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "haiku._src.integration.descriptors.RECURRENT_MODULES": {
  "data": {
   "lineno": 299
  },
  "type": "constant"
 },
 "haiku._src.integration.descriptors.RNN_CORES": {
  "data": {
   "lineno": 228
  },
  "type": "constant"
 },
 "haiku._src.integration.descriptors.Recurrent": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "haiku._src.integration.descriptors.Wrapped"
   ]
  },
  "type": "class"
 },
 "haiku._src.integration.descriptors.Recurrent.__call__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "haiku._src.integration.descriptors.jax",
    "jax.numpy.expand_dims",
    "jax.numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.descriptors.Recurrent.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "haiku.RNNCore",
    "super"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.descriptors.ResetCoreAdapter": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "haiku.RNNCore",
    "haiku._src.integration.descriptors.Wrapped"
   ]
  },
  "type": "class"
 },
 "haiku._src.integration.descriptors.ResetCoreAdapter.__call__": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "numpy.broadcast_to"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.descriptors.ResetCoreAdapter.initial_state": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "haiku._src.integration.descriptors.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "haiku._src.integration.descriptors.Training": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "haiku._src.integration.descriptors.Wrapped"
   ]
  },
  "type": "class"
 },
 "haiku._src.integration.descriptors.Training.__call__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "jax.numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.descriptors.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "haiku._src.integration.descriptors.Wrapped": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "haiku.Module"
   ]
  },
  "type": "class"
 },
 "haiku._src.integration.descriptors.Wrapped.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "haiku._src.integration.descriptors.Wrapped",
    "super"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.descriptors.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "haiku._src.integration.descriptors.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.integration.descriptors.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.integration.descriptors.module_type": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "haiku.Module",
    "haiku._src.integration.descriptors.ModuleFn",
    "haiku._src.integration.descriptors.jax",
    "haiku._src.integration.descriptors.unwrap",
    "haiku.transform_with_state",
    "module_fn",
    "type",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.descriptors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.integration.descriptors.recurrent_factory": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "create_core",
    "haiku.RNNCore",
    "haiku._src.integration.descriptors.Recurrent",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.descriptors.to_file_name": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "haiku._src.integration.descriptors.ModuleDescriptor"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.descriptors.unroll_descriptors": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "haiku._src.integration.descriptors.ModuleDescriptor",
    "haiku._src.integration.descriptors.recurrent_factory",
    "tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.descriptors.unwrap": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "haiku._src.integration.descriptors.Wrapped",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.descriptors.with_name": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "haiku._src.integration.descriptors.ModuleDescriptor",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.descriptors_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main",
    "haiku._src.integration.descriptors.ALL_MODULES",
    "haiku._src.integration.descriptors.IGNORED_MODULES"
   ]
  },
  "type": "module"
 },
 "haiku._src.integration.descriptors_test.ALL_MODULES": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "haiku._src.integration.descriptors_test.DescriptorsTest": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.integration.descriptors_test.DescriptorsTest.test_coverage": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "frozenset",
    "haiku",
    "haiku.Module",
    "haiku._src.integration.descriptors.unwrap",
    "haiku._src.integration.descriptors_test.ALL_MODULES",
    "haiku._src.integration.descriptors_test.IGNORED_MODULES",
    "haiku._src.test_utils.find_subclasses",
    "haiku._src.test_utils.transform_and_run",
    "type"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.descriptors_test.IGNORED_MODULES": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "haiku._src.integration.descriptors_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.integration.descriptors_test.descriptors": {
  "data": {
   "shadows": "haiku._src.integration.descriptors"
  },
  "type": "import"
 },
 "haiku._src.integration.descriptors_test.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "haiku._src.integration.descriptors_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.integration.doctest_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "haiku._src.integration.doctest_test.DoctestTest": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.integration.doctest_test.DoctestTest.test_doctest": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "absl.logging.info",
    "absl.testing.parameterized.named_parameters",
    "dir",
    "getattr",
    "haiku",
    "haiku._src.integration.doctest_test.inspect",
    "haiku._src.integration.doctest_test.jax",
    "haiku._src.test_utils.find_internal_python_modules",
    "haiku.transform_with_state",
    "hasattr",
    "init_fn"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.doctest_test.DoctestTest.test_doctest.run_test": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "absl.logging.info",
    "haiku",
    "haiku._src.integration.doctest_test.contextlib",
    "haiku._src.integration.doctest_test.doctest",
    "haiku._src.integration.doctest_test.jax",
    "haiku._src.integration.doctest_test.unittest",
    "jax.numpy"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.doctest_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.integration.doctest_test.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "haiku._src.integration.doctest_test.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "haiku._src.integration.doctest_test.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "haiku._src.integration.doctest_test.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "haiku._src.integration.doctest_test.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.integration.doctest_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.integration.doctest_test.logging": {
  "data": {
   "shadows": "absl.logging"
  },
  "type": "import"
 },
 "haiku._src.integration.doctest_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.integration.doctest_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.integration.doctest_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "haiku._src.integration.float64_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main",
    "haiku._src.integration.descriptors.ModuleFn",
    "jax.config.config.update"
   ]
  },
  "type": "module"
 },
 "haiku._src.integration.float64_test.Float64Test": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "haiku._src.integration.common.DTypeTestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.integration.float64_test.Float64Test.test_float32": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "haiku._src.integration.descriptors.ALL_MODULES",
    "haiku._src.integration.float64_test.ModuleFn",
    "haiku._src.test_utils.combined_named_parameters",
    "jax.numpy.float32"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.float64_test.Float64Test.test_float64": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "haiku._src.integration.descriptors.ALL_MODULES",
    "haiku._src.integration.float64_test.ModuleFn",
    "haiku._src.test_utils.combined_named_parameters",
    "jax.numpy.float64"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.float64_test.ModuleFn": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "haiku._src.integration.float64_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.integration.float64_test.common": {
  "data": {
   "shadows": "haiku._src.integration.common"
  },
  "type": "import"
 },
 "haiku._src.integration.float64_test.config": {
  "data": {
   "shadows": "jax.config.config"
  },
  "type": "import"
 },
 "haiku._src.integration.float64_test.descriptors": {
  "data": {
   "shadows": "haiku._src.integration.descriptors"
  },
  "type": "import"
 },
 "haiku._src.integration.float64_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.integration.float64_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.integration.half_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main",
    "haiku._src.integration.descriptors.ModuleFn"
   ]
  },
  "type": "module"
 },
 "haiku._src.integration.half_test.Bfloat16Test": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "haiku._src.integration.common.DTypeTestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.integration.half_test.Bfloat16Test.test_bfloat16": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "haiku._src.integration.descriptors.ALL_MODULES",
    "haiku._src.integration.descriptors.ModuleFn",
    "haiku._src.test_utils.combined_named_parameters",
    "jax.numpy.bfloat16"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.half_test.Bfloat16Test.test_float16": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "haiku._src.integration.descriptors.ALL_MODULES",
    "haiku._src.integration.descriptors.ModuleFn",
    "haiku._src.test_utils.combined_named_parameters",
    "jax.numpy.float16"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.half_test.ModuleFn": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "haiku._src.integration.half_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.integration.half_test.common": {
  "data": {
   "shadows": "haiku._src.integration.common"
  },
  "type": "import"
 },
 "haiku._src.integration.half_test.descriptors": {
  "data": {
   "shadows": "haiku._src.integration.descriptors"
  },
  "type": "import"
 },
 "haiku._src.integration.half_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.integration.half_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.integration.hk_transforms_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main",
    "haiku.BatchNorm",
    "haiku.SeparableDepthwiseConv2D",
    "haiku._src.integration.descriptors.ModuleFn",
    "haiku.nets.MobileNetV1",
    "haiku.nets.ResNet"
   ]
  },
  "type": "module"
 },
 "haiku._src.integration.hk_transforms_test.CUSTOM_ATOL": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "haiku._src.integration.hk_transforms_test.DEFAULT_ATOL": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "haiku._src.integration.hk_transforms_test.HaikuTransformsTest": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.integration.hk_transforms_test.HaikuTransformsTest.test_hk_jit": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "haiku._src.integration.descriptors.ALL_MODULES",
    "haiku._src.integration.hk_transforms_test.ModuleFn",
    "haiku._src.integration.hk_transforms_test.functools",
    "haiku._src.integration.hk_transforms_test.jax",
    "haiku._src.test_utils.combined_named_parameters",
    "haiku._src.test_utils.named_bools",
    "haiku.transform_with_state",
    "jax.numpy.integer",
    "jax.numpy.issubdtype",
    "numpy.prod",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.hk_transforms_test.HaikuTransformsTest.test_hk_jit.g": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "haiku.jit",
    "mod",
    "module_fn"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.hk_transforms_test.HaikuTransformsTest.test_hk_remat": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "grad_hk_remat",
    "grad_jax_remat",
    "haiku._src.integration.descriptors.ALL_MODULES",
    "haiku._src.integration.descriptors.RECURRENT_MODULES",
    "haiku._src.integration.hk_transforms_test.ModuleFn",
    "haiku._src.integration.hk_transforms_test.functools",
    "haiku._src.integration.hk_transforms_test.jax",
    "haiku._src.test_utils.combined_named_parameters",
    "haiku.transform_with_state",
    "jax.numpy.integer",
    "jax.numpy.issubdtype",
    "numpy.prod",
    "numpy.testing.assert_allclose",
    "set"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.hk_transforms_test.HaikuTransformsTest.test_hk_remat.g": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "dict",
    "haiku.remat",
    "isinstance",
    "jax.numpy.mean",
    "mod",
    "module_fn"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.hk_transforms_test.HaikuTransformsTest.test_hk_scan": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "haiku._src.integration.descriptors.ALL_MODULES",
    "haiku._src.integration.descriptors.ModuleFn",
    "haiku._src.integration.hk_transforms_test.functools",
    "haiku._src.integration.hk_transforms_test.jax",
    "haiku._src.test_utils.combined_named_parameters",
    "haiku._src.test_utils.named_bools",
    "haiku.transform_with_state",
    "jax.numpy.broadcast_to",
    "jax.numpy.integer",
    "jax.numpy.issubdtype",
    "numpy.prod",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.hk_transforms_test.HaikuTransformsTest.test_hk_scan.f": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "mod",
    "module_fn"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.hk_transforms_test.HaikuTransformsTest.test_hk_scan.fun": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "haiku._src.integration.hk_transforms_test.HaikuTransformsTest.test_hk_scan.u_f": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "haiku.scan",
    "mod",
    "module_fn"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.hk_transforms_test.HaikuTransformsTest.test_hk_scan.u_f.s": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "mod"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.hk_transforms_test.HaikuTransformsTest.test_optimize_rng_use_under_jit": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "haiku._src.integration.descriptors.ALL_MODULES",
    "haiku._src.integration.descriptors.module_type",
    "haiku._src.integration.hk_transforms_test.CUSTOM_ATOL",
    "haiku._src.integration.hk_transforms_test.DEFAULT_ATOL",
    "haiku._src.integration.hk_transforms_test.ModuleFn",
    "haiku._src.integration.hk_transforms_test.functools",
    "haiku._src.integration.hk_transforms_test.jax",
    "haiku._src.test_utils.combined_named_parameters",
    "haiku.experimental.optimize_rng_use",
    "haiku.nets.VectorQuantizer",
    "haiku.nets.VectorQuantizerEMA",
    "haiku.transform_with_state",
    "jax.numpy.integer",
    "jax.numpy.issubdtype",
    "module_fn",
    "numpy.prod",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.hk_transforms_test.HaikuTransformsTest.test_optimize_rng_use_under_jit.g": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "module_fn"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.hk_transforms_test.HaikuTransformsTest.test_profiler_name_scopes": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "haiku._src.integration.descriptors.ALL_MODULES",
    "haiku._src.integration.hk_transforms_test.ModuleFn",
    "haiku._src.integration.hk_transforms_test.functools",
    "haiku._src.integration.hk_transforms_test.jax",
    "haiku._src.test_utils.combined_named_parameters",
    "haiku.experimental.profiler_name_scopes",
    "haiku.transform_with_state",
    "jax.numpy.integer",
    "jax.numpy.issubdtype",
    "numpy.prod",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.hk_transforms_test.HaikuTransformsTest.test_profiler_name_scopes.g": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "haiku.experimental.profiler_name_scopes",
    "mod",
    "module_fn"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.hk_transforms_test.HaikuTransformsTest.test_vmap": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "haiku._src.integration.descriptors.OPTIONAL_BATCH_MODULES",
    "haiku._src.integration.descriptors.module_type",
    "haiku._src.integration.hk_transforms_test.CUSTOM_ATOL",
    "haiku._src.integration.hk_transforms_test.DEFAULT_ATOL",
    "haiku._src.integration.hk_transforms_test.ModuleFn",
    "haiku._src.integration.hk_transforms_test.functools",
    "haiku._src.integration.hk_transforms_test.jax",
    "haiku._src.test_utils.combined_named_parameters",
    "haiku.transform_with_state",
    "haiku.vmap",
    "jax.numpy.broadcast_to",
    "jax.numpy.integer",
    "jax.numpy.issubdtype",
    "module_fn",
    "numpy.prod",
    "numpy.testing.assert_allclose",
    "v_apply"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.hk_transforms_test.ModuleFn": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "haiku._src.integration.hk_transforms_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.integration.hk_transforms_test.descriptors": {
  "data": {
   "shadows": "haiku._src.integration.descriptors"
  },
  "type": "import"
 },
 "haiku._src.integration.hk_transforms_test.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "haiku._src.integration.hk_transforms_test.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "haiku._src.integration.hk_transforms_test.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.integration.hk_transforms_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.integration.hk_transforms_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.integration.hk_transforms_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.integration.hk_transforms_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.integration.jax2tf_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main",
    "haiku._src.integration.descriptors.ModuleFn",
    "haiku._src.integration.jax2tf_test.jax",
    "haiku.nets.ResNet",
    "tensorflow.function"
   ]
  },
  "type": "module"
 },
 "haiku._src.integration.jax2tf_test.CUSTOM_ATOL": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "haiku._src.integration.jax2tf_test.DEFAULT_ATOL": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "haiku._src.integration.jax2tf_test.JAX_TRANSFORM": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "haiku._src.integration.jax2tf_test.JaxToTfTest": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.integration.jax2tf_test.JaxToTfTest.test_convert": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "apply_jax",
    "apply_tf",
    "bool",
    "get",
    "haiku._src.integration.descriptors.ALL_MODULES",
    "haiku._src.integration.descriptors.module_type",
    "haiku._src.integration.jax2tf_test.CUSTOM_ATOL",
    "haiku._src.integration.jax2tf_test.DEFAULT_ATOL",
    "haiku._src.integration.jax2tf_test.JAX_TRANSFORM",
    "haiku._src.integration.jax2tf_test.ModuleFn",
    "haiku._src.integration.jax2tf_test.TF_TRANSFORM",
    "haiku._src.integration.jax2tf_test.functools",
    "haiku._src.integration.jax2tf_test.jax",
    "haiku._src.test_utils.combined_named_parameters",
    "haiku._src.test_utils.named_bools",
    "haiku.transform_with_state",
    "init_jax",
    "init_tf",
    "jax.experimental.jax2tf.convert",
    "jax.numpy.integer",
    "jax.numpy.issubdtype",
    "jax_transform",
    "module_fn",
    "numpy.prod",
    "numpy.testing.assert_allclose",
    "tf_transform"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.jax2tf_test.JaxToTfTest.test_convert.g": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "module_fn"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.jax2tf_test.ModuleFn": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "haiku._src.integration.jax2tf_test.TF_TRANSFORM": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "haiku._src.integration.jax2tf_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.integration.jax2tf_test.descriptors": {
  "data": {
   "shadows": "haiku._src.integration.descriptors"
  },
  "type": "import"
 },
 "haiku._src.integration.jax2tf_test.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "haiku._src.integration.jax2tf_test.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "haiku._src.integration.jax2tf_test.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.integration.jax2tf_test.jax2tf": {
  "data": {
   "shadows": "jax.experimental.jax2tf"
  },
  "type": "import"
 },
 "haiku._src.integration.jax2tf_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.integration.jax2tf_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.integration.jax2tf_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.integration.jax2tf_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.integration.jax2tf_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "haiku._src.integration.jax_transforms_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main",
    "haiku.BatchNorm",
    "haiku.SeparableDepthwiseConv2D",
    "haiku._src.integration.descriptors.ModuleFn",
    "haiku.nets.MobileNetV1",
    "haiku.nets.ResNet",
    "haiku.nets.VectorQuantizer",
    "haiku.nets.VectorQuantizerEMA"
   ]
  },
  "type": "module"
 },
 "haiku._src.integration.jax_transforms_test.CUSTOM_ATOL": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "haiku._src.integration.jax_transforms_test.DEFAULT_ATOL": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "haiku._src.integration.jax_transforms_test.JaxTransformsTest": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.integration.jax_transforms_test.JaxTransformsTest.test_jit": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "haiku._src.integration.descriptors.ALL_MODULES",
    "haiku._src.integration.descriptors.module_type",
    "haiku._src.integration.jax_transforms_test.CUSTOM_ATOL",
    "haiku._src.integration.jax_transforms_test.DEFAULT_ATOL",
    "haiku._src.integration.jax_transforms_test.ModuleFn",
    "haiku._src.integration.jax_transforms_test.functools",
    "haiku._src.integration.jax_transforms_test.jax",
    "haiku._src.test_utils.combined_named_parameters",
    "haiku.transform_with_state",
    "jax.numpy.integer",
    "jax.numpy.issubdtype",
    "module_fn",
    "numpy.prod",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.jax_transforms_test.JaxTransformsTest.test_jit.g": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "module_fn"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.jax_transforms_test.JaxTransformsTest.test_vmap": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "haiku._src.integration.descriptors.OPTIONAL_BATCH_MODULES",
    "haiku._src.integration.jax_transforms_test.DEFAULT_ATOL",
    "haiku._src.integration.jax_transforms_test.ModuleFn",
    "haiku._src.integration.jax_transforms_test.jax",
    "haiku._src.test_utils.combined_named_parameters",
    "haiku.transform_with_state",
    "jax.numpy.broadcast_to",
    "jax.numpy.integer",
    "jax.numpy.issubdtype",
    "numpy.prod",
    "numpy.testing.assert_allclose",
    "v_apply"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.jax_transforms_test.JaxTransformsTest.test_vmap.g": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "module_fn"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.jax_transforms_test.ModuleFn": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "haiku._src.integration.jax_transforms_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.integration.jax_transforms_test.descriptors": {
  "data": {
   "shadows": "haiku._src.integration.descriptors"
  },
  "type": "import"
 },
 "haiku._src.integration.jax_transforms_test.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "haiku._src.integration.jax_transforms_test.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "haiku._src.integration.jax_transforms_test.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.integration.jax_transforms_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.integration.jax_transforms_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.integration.jax_transforms_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.integration.jax_transforms_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.integration.numpy_inputs_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main",
    "haiku._src.integration.descriptors.ModuleFn"
   ]
  },
  "type": "module"
 },
 "haiku._src.integration.numpy_inputs_test.ModuleFn": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "haiku._src.integration.numpy_inputs_test.NumpyInputsTest": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.integration.numpy_inputs_test.NumpyInputsTest.test_numpy_and_jax_results_close": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "haiku._src.integration.descriptors.ALL_MODULES",
    "haiku._src.integration.numpy_inputs_test.ModuleFn",
    "haiku._src.integration.numpy_inputs_test.jax",
    "haiku._src.test_utils.combined_named_parameters",
    "haiku.transform_with_state",
    "jax.numpy.ones",
    "module_fn",
    "numpy.asarray",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.numpy_inputs_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.integration.numpy_inputs_test.descriptors": {
  "data": {
   "shadows": "haiku._src.integration.descriptors"
  },
  "type": "import"
 },
 "haiku._src.integration.numpy_inputs_test.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "haiku._src.integration.numpy_inputs_test.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.integration.numpy_inputs_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.integration.numpy_inputs_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.integration.numpy_inputs_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.integration.numpy_inputs_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.integration.rank_promotion_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main",
    "haiku._src.integration.descriptors.ModuleFn"
   ]
  },
  "type": "module"
 },
 "haiku._src.integration.rank_promotion_test.ModuleFn": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "haiku._src.integration.rank_promotion_test.RankPromotionTest": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.integration.rank_promotion_test.RankPromotionTest.setUp": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "haiku._src.integration.rank_promotion_test.jax",
    "super"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.rank_promotion_test.RankPromotionTest.tearDown": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "haiku._src.integration.rank_promotion_test.jax",
    "super"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.rank_promotion_test.RankPromotionTest.test_rank_promotion_exception": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError",
    "jax.numpy.zeros",
    "str"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.rank_promotion_test.RankPromotionTest.test_strict_promotion": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "haiku._src.integration.descriptors.ALL_MODULES",
    "haiku._src.integration.descriptors.module_type",
    "haiku._src.integration.rank_promotion_test.ModuleFn",
    "haiku._src.integration.rank_promotion_test.jax",
    "haiku._src.test_utils.combined_named_parameters",
    "haiku.nets.VectorQuantizer",
    "haiku.nets.VectorQuantizerEMA",
    "haiku.transform_with_state",
    "jax.numpy.ones",
    "module_fn"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.rank_promotion_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.integration.rank_promotion_test.descriptors": {
  "data": {
   "shadows": "haiku._src.integration.descriptors"
  },
  "type": "import"
 },
 "haiku._src.integration.rank_promotion_test.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "haiku._src.integration.rank_promotion_test.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.integration.rank_promotion_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.integration.rank_promotion_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.integration.rank_promotion_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.integration.shim_hk_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "haiku._src.integration.shim_hk_test.ShimHkTest": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.integration.shim_hk_test.ShimHkTest.test_hk_shim": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "absl.testing.parameterized.named_parameters",
    "dir",
    "getattr",
    "haiku",
    "haiku._src.integration.shim_hk_test.named_internal_modules",
    "haiku._src.integration.shim_hk_test.types",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.shim_hk_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.integration.shim_hk_test.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "haiku._src.integration.shim_hk_test.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "haiku._src.integration.shim_hk_test.named_internal_modules": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "dir",
    "haiku._src.integration.shim_hk_test.importlib"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.shim_hk_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.integration.shim_hk_test.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "haiku._src.integration.to_dot_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main",
    "haiku._src.integration.descriptors.ModuleFn"
   ]
  },
  "type": "module"
 },
 "haiku._src.integration.to_dot_test.DotTest": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.integration.to_dot_test.DotTest.test_dot": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "haiku._src.integration.descriptors.ALL_MODULES",
    "haiku._src.integration.to_dot_test.ModuleFn",
    "haiku._src.integration.to_dot_test.jax",
    "haiku._src.test_utils.combined_named_parameters",
    "haiku.experimental.to_dot",
    "haiku.transform_with_state",
    "jax.numpy.ones",
    "module_fn"
   ]
  },
  "type": "function"
 },
 "haiku._src.integration.to_dot_test.ModuleFn": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "haiku._src.integration.to_dot_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.integration.to_dot_test.descriptors": {
  "data": {
   "shadows": "haiku._src.integration.descriptors"
  },
  "type": "import"
 },
 "haiku._src.integration.to_dot_test.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "haiku._src.integration.to_dot_test.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.integration.to_dot_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.integration.to_dot_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.integration.to_dot_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.layer_norm": {
  "data": {
   "symbols_in_volume": [
    "haiku._src.base",
    "haiku._src.base.get_parameter",
    "haiku._src.initializers",
    "haiku._src.layer_norm.hk",
    "haiku._src.layer_norm.types",
    "haiku._src.module",
    "haiku._src.module.Module"
   ]
  },
  "type": "module"
 },
 "haiku._src.layer_norm.InstanceNorm": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "haiku._src.layer_norm.LayerNorm"
   ]
  },
  "type": "class"
 },
 "haiku._src.layer_norm.InstanceNorm.__init__": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "bool",
    "float",
    "haiku._src.layer_norm.hk",
    "haiku._src.utils.get_channel_index",
    "slice",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.layer_norm.LayerNorm": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "haiku._src.layer_norm.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.layer_norm.LayerNorm.__call__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.layer_norm.hk",
    "haiku._src.layer_norm.jax",
    "isinstance",
    "jax.numpy.broadcast_to",
    "jax.numpy.mean",
    "jax.numpy.ndarray",
    "jax.numpy.var",
    "numpy.array",
    "range",
    "slice",
    "tuple",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.layer_norm.LayerNorm.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "bool",
    "float",
    "haiku._src.layer_norm.collections",
    "haiku._src.layer_norm.hk",
    "int",
    "isinstance",
    "jax.numpy.ones",
    "jax.numpy.zeros",
    "slice",
    "str",
    "super",
    "tuple",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.layer_norm.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "haiku._src.layer_norm.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "haiku._src.layer_norm.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "haiku._src.layer_norm.base": {
  "data": {
   "shadows": "haiku._src.base"
  },
  "type": "import"
 },
 "haiku._src.layer_norm.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "haiku._src.layer_norm.hk": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "haiku._src.layer_norm.initializers": {
  "data": {
   "shadows": "haiku._src.initializers"
  },
  "type": "import"
 },
 "haiku._src.layer_norm.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.layer_norm.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.layer_norm.module": {
  "data": {
   "shadows": "haiku._src.module"
  },
  "type": "import"
 },
 "haiku._src.layer_norm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.layer_norm.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "haiku._src.layer_norm.utils": {
  "data": {
   "shadows": "haiku._src.utils"
  },
  "type": "import"
 },
 "haiku._src.layer_norm_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "haiku._src.layer_norm_test.LayerNormTest": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.layer_norm_test.LayerNormTest.test_bf16": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "haiku._src.layer_norm_test.itertools",
    "haiku._src.layer_norm_test.jax",
    "haiku._src.transform.transform",
    "jax.numpy.bfloat16",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.layer_norm_test.LayerNormTest.test_bf16.f": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "haiku._src.layer_norm.LayerNorm",
    "ln"
   ]
  },
  "type": "function"
 },
 "haiku._src.layer_norm_test.LayerNormTest.test_connection": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "haiku._src.layer_norm.LayerNorm",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.zeros",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "haiku._src.layer_norm_test.LayerNormTest.test_connection_instance_norm": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "haiku._src.layer_norm.InstanceNorm",
    "haiku._src.test_utils.transform_and_run",
    "layer",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.layer_norm_test.LayerNormTest.test_create_offset_and_offset_provided": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.layer_norm.LayerNorm",
    "haiku._src.test_utils.transform_and_run",
    "layer",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.layer_norm_test.LayerNormTest.test_create_scale_and_scale_provided": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.layer_norm.LayerNorm",
    "haiku._src.test_utils.transform_and_run",
    "layer",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.layer_norm_test.LayerNormTest.test_invalid_axis": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ValueError",
    "absl.testing.parameterized.named_parameters",
    "haiku._src.layer_norm.LayerNorm",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.layer_norm_test.LayerNormTest.test_no_offset_beta_init_provided": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.layer_norm.LayerNorm",
    "haiku._src.test_utils.transform_and_run",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.layer_norm_test.LayerNormTest.test_no_scale_and_init_provided": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.layer_norm.LayerNorm",
    "haiku._src.test_utils.transform_and_run",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.layer_norm_test.LayerNormTest.test_simple_case": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "haiku._src.layer_norm.LayerNorm",
    "haiku._src.test_utils.transform_and_run",
    "layer",
    "numpy.nditer",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.layer_norm_test.LayerNormTest.test_simple_case_tensor": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "haiku._src.layer_norm.LayerNorm",
    "haiku._src.test_utils.transform_and_run",
    "layer",
    "numpy.full",
    "numpy.nditer",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.layer_norm_test.LayerNormTest.test_simple_case_var": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "haiku._src.initializers.Constant",
    "haiku._src.layer_norm.LayerNorm",
    "haiku._src.test_utils.transform_and_run",
    "layer",
    "numpy.nditer",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.layer_norm_test.LayerNormTest.test_slice_axis": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "axis_layer",
    "haiku._src.layer_norm.LayerNorm",
    "haiku._src.test_utils.transform_and_run",
    "numpy.random.normal",
    "numpy.random.uniform",
    "numpy.testing.assert_array_equal",
    "slice",
    "slice_layer"
   ]
  },
  "type": "function"
 },
 "haiku._src.layer_norm_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.layer_norm_test.initializers": {
  "data": {
   "shadows": "haiku._src.initializers"
  },
  "type": "import"
 },
 "haiku._src.layer_norm_test.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "haiku._src.layer_norm_test.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.layer_norm_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.layer_norm_test.layer_norm": {
  "data": {
   "shadows": "haiku._src.layer_norm"
  },
  "type": "import"
 },
 "haiku._src.layer_norm_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.layer_norm_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.layer_norm_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.layer_norm_test.transform": {
  "data": {
   "shadows": "haiku._src.transform"
  },
  "type": "import"
 },
 "haiku._src.lift": {
  "data": {
   "symbols_in_volume": [
    "haiku._src.lift.LiftingModule"
   ]
  },
  "type": "module"
 },
 "haiku._src.lift.LiftingModule": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "haiku._src.module.Module"
   ]
  },
  "type": "class"
 },
 "haiku._src.lift.LiftingModule.__call__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "haiku._src.base.current_frame",
    "haiku._src.base.params_frozen",
    "haiku._src.lift.pack_into_dict",
    "haiku._src.lift.unpack_from_dict"
   ]
  },
  "type": "function"
 },
 "haiku._src.lift.LiftingModule.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "haiku._src.lift.base": {
  "data": {
   "shadows": "haiku._src.base"
  },
  "type": "import"
 },
 "haiku._src.lift.data_structures": {
  "data": {
   "shadows": "haiku._src.data_structures"
  },
  "type": "import"
 },
 "haiku._src.lift.lift": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "haiku._src.lift.module": {
  "data": {
   "shadows": "haiku._src.module"
  },
  "type": "import"
 },
 "haiku._src.lift.pack_into_dict": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "haiku._src.lift.unpack_from_dict": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "dict",
    "haiku._src.data_structures.to_immutable_dict",
    "len"
   ]
  },
  "type": "function"
 },
 "haiku._src.lift_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "haiku._src.lift_test.Bias": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "haiku._src.module.Module"
   ]
  },
  "type": "class"
 },
 "haiku._src.lift_test.Bias.__call__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "haiku._src.base.get_parameter",
    "jax.numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.lift_test.LiftTest": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.lift_test.LiftTest.test_functionalize": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "haiku._src.lift_test.jax",
    "haiku._src.transform.transform",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.lift_test.LiftTest.test_functionalize.inner_fn": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "haiku._src.lift_test.Bias"
   ]
  },
  "type": "function"
 },
 "haiku._src.lift_test.LiftTest.test_functionalize.outer_fn": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "haiku._src.base.next_rng_key",
    "haiku._src.lift.lift",
    "haiku._src.lift_test.Bias",
    "haiku._src.lift_test.jax",
    "haiku._src.transform.transform",
    "haiku._src.transform.without_apply_rng",
    "vmap_inner"
   ]
  },
  "type": "function"
 },
 "haiku._src.lift_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.lift_test.base": {
  "data": {
   "shadows": "haiku._src.base"
  },
  "type": "import"
 },
 "haiku._src.lift_test.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.lift_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.lift_test.lift": {
  "data": {
   "shadows": "haiku._src.lift"
  },
  "type": "import"
 },
 "haiku._src.lift_test.module": {
  "data": {
   "shadows": "haiku._src.module"
  },
  "type": "import"
 },
 "haiku._src.lift_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.lift_test.transform": {
  "data": {
   "shadows": "haiku._src.transform"
  },
  "type": "import"
 },
 "haiku._src.module": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "haiku._src.data_structures.ThreadLocalStack",
    "haiku._src.module.Args",
    "haiku._src.module.Kwargs",
    "haiku._src.module.MethodContext",
    "haiku._src.module.MethodGetter",
    "haiku._src.module.MethodHook",
    "haiku._src.module.Module",
    "haiku._src.module.NextGetter",
    "haiku._src.module.ThreadLocalStack",
    "haiku._src.module._VALID_IDENTIFIER_R",
    "haiku._src.module.re",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.ContextManager",
    "typing.Dict",
    "typing.Tuple",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "haiku._src.module.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "haiku._src.module.Args": {
  "data": {
   "lineno": 199
  },
  "type": "constant"
 },
 "haiku._src.module.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "haiku._src.module.ContextManager": {
  "data": {
   "shadows": "typing.ContextManager"
  },
  "type": "import"
 },
 "haiku._src.module.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "haiku._src.module.Kwargs": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "haiku._src.module.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "haiku._src.module.MethodContext": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "haiku._src.module.MethodGetter": {
  "data": {
   "lineno": 202
  },
  "type": "constant"
 },
 "haiku._src.module.MethodHook": {
  "data": {
   "lineno": 561
  },
  "type": "constant"
 },
 "haiku._src.module.Module": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "haiku._src.module.ModuleMetaclass",
    "object"
   ]
  },
  "type": "class"
 },
 "haiku._src.module.Module.__init__": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.module.valid_identifier",
    "haiku._src.utils.camel_to_snake",
    "hasattr",
    "set",
    "str",
    "type",
    "typing.Optional",
    "unique_and_canonical_name"
   ]
  },
  "type": "function"
 },
 "haiku._src.module.Module.params_dict": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.base.current_frame",
    "haiku._src.base.frame_stack",
    "jax.numpy.array",
    "str",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "haiku._src.module.ModuleMetaclass": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "haiku._src.module.abc"
   ]
  },
  "type": "class"
 },
 "haiku._src.module.ModuleMetaclass.__call__": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.module.T",
    "haiku._src.utils.auto_repr",
    "hasattr",
    "init",
    "typing.Type",
    "wrap_method"
   ]
  },
  "type": "function"
 },
 "haiku._src.module.ModuleMetaclass.__new__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "getattr",
    "haiku._src.module.ModuleMetaclass",
    "haiku._src.module.T",
    "haiku._src.module.inspect",
    "isinstance",
    "property",
    "setattr",
    "str",
    "super",
    "typing.Any",
    "typing.Dict",
    "typing.Tuple",
    "typing.Type",
    "wrap_method"
   ]
  },
  "type": "function"
 },
 "haiku._src.module.NameScope": {
  "data": {
   "lineno": 288
  },
  "type": "class"
 },
 "haiku._src.module.NameScope.__enter__": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.module.simulate_module_call"
   ]
  },
  "type": "function"
 },
 "haiku._src.module.NameScope.__exit__": {
  "data": {
   "lineno": 313
  },
  "type": "function"
 },
 "haiku._src.module.NameScope.__init__": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "Module",
    "ValueError",
    "haiku._src.module.contextlib",
    "haiku._src.module.simulate_module_call",
    "str"
   ]
  },
  "type": "function"
 },
 "haiku._src.module.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "haiku._src.module.NextGetter": {
  "data": {
   "lineno": 201
  },
  "type": "constant"
 },
 "haiku._src.module.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "haiku._src.module.T": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "haiku._src.module.ThreadLocalStack": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "haiku._src.module.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "haiku._src.module.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "haiku._src.module.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "haiku._src.module._APPLY_NAME_SCOPE": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "haiku._src.module._VALID_IDENTIFIER_R": {
  "data": {
   "lineno": 417
  },
  "type": "constant"
 },
 "haiku._src.module._module_method_call": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "haiku._src.module.Module",
    "haiku._src.module.contextlib",
    "method_hook",
    "method_hook_stack",
    "str"
   ]
  },
  "type": "function"
 },
 "haiku._src.module.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "haiku._src.module.base": {
  "data": {
   "shadows": "haiku._src.base"
  },
  "type": "import"
 },
 "haiku._src.module.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "haiku._src.module.data_structures": {
  "data": {
   "shadows": "haiku._src.data_structures"
  },
  "type": "import"
 },
 "haiku._src.module.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "haiku._src.module.hook_methods": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "haiku._src.module.MethodHook",
    "method_hook_stack",
    "typing.ContextManager"
   ]
  },
  "type": "function"
 },
 "haiku._src.module.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "haiku._src.module.intercept_methods": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "haiku._src.base.assert_context",
    "haiku._src.module.MethodGetter",
    "interceptor_stack"
   ]
  },
  "type": "function"
 },
 "haiku._src.module.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.module.modules_with_named_call": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "haiku._src.module.name_scope": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "haiku._src.base.assert_context",
    "haiku._src.module.NameScope",
    "str",
    "typing.ContextManager"
   ]
  },
  "type": "function"
 },
 "haiku._src.module.profiler_name_scopes": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "haiku._src.module.modules_with_named_call"
   ]
  },
  "type": "function"
 },
 "haiku._src.module.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "haiku._src.module.run_interceptors": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "bound_method",
    "haiku._src.module.Args",
    "haiku._src.module.Kwargs",
    "haiku._src.module.MethodContext",
    "interceptor_stack",
    "interceptor_stack.clone",
    "next_fun",
    "str",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "haiku._src.module.run_interceptors.next_fun": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "bound_method",
    "interceptor_fun"
   ]
  },
  "type": "function"
 },
 "haiku._src.module.simulate_module_call": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "haiku._src.base.ModuleState",
    "haiku._src.base.current_frame"
   ]
  },
  "type": "function"
 },
 "haiku._src.module.stateful": {
  "data": {
   "shadows": "haiku._src.stateful"
  },
  "type": "import"
 },
 "haiku._src.module.transparent": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "haiku._src.module.T",
    "haiku._src.module._APPLY_NAME_SCOPE",
    "setattr"
   ]
  },
  "type": "function"
 },
 "haiku._src.module.unique_and_canonical_name": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.base.current_frame",
    "haiku._src.base.safe_get_module_name",
    "haiku._src.module.re",
    "int",
    "len",
    "max",
    "str"
   ]
  },
  "type": "function"
 },
 "haiku._src.module.utils": {
  "data": {
   "shadows": "haiku._src.utils"
  },
  "type": "import"
 },
 "haiku._src.module.valid_identifier": {
  "data": {
   "lineno": 418
  },
  "type": "constant"
 },
 "haiku._src.module.wrap_method": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "getattr",
    "haiku._src.module._APPLY_NAME_SCOPE"
   ]
  },
  "type": "function"
 },
 "haiku._src.module.wrap_method.wrapped": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "ValueError",
    "_module_method_call",
    "f",
    "getattr",
    "haiku._src.base.ModuleState",
    "haiku._src.base.current_frame",
    "haiku._src.base.frame_stack",
    "haiku._src.module.functools",
    "haiku._src.module.modules_with_named_call",
    "haiku._src.module.run_interceptors",
    "haiku._src.stateful.named_call"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "haiku._src.module_test.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "haiku._src.module_test.CapturesModule": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "haiku._src.module.Module"
   ]
  },
  "type": "class"
 },
 "haiku._src.module_test.CapturesModule.__call__": {
  "data": {
   "lineno": 484
  },
  "type": "function"
 },
 "haiku._src.module_test.CapturesModule.__init__": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "haiku._src.module_test.CapturesModule",
    "mod",
    "super"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.CountingModule": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "haiku._src.module.Module"
   ]
  },
  "type": "class"
 },
 "haiku._src.module_test.CountingModule.__call__": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "haiku._src.base.get_state",
    "haiku._src.base.set_state",
    "jax.numpy.int32",
    "jax.numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.DataLinear": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "haiku._src.module.Module",
    "haiku._src.module_test.dataclasses",
    "int",
    "str",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "haiku._src.module_test.DataLinear.__call__": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "haiku._src.base.get_parameter",
    "jax.numpy.ones",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.DataMLP": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "haiku._src.module.Module",
    "haiku._src.module_test.dataclasses",
    "haiku._src.module_test.jax",
    "int",
    "jax.numpy.ndarray",
    "str",
    "typing.Callable",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "haiku._src.module_test.DataMLP.__call__": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "enumerate",
    "haiku._src.module_test.DataLinear"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.EmptyModule": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "haiku._src.module.Module"
   ]
  },
  "type": "class"
 },
 "haiku._src.module_test.IdentityModule": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "haiku._src.module.Module"
   ]
  },
  "type": "class"
 },
 "haiku._src.module_test.IdentityModule.__call__": {
  "data": {
   "lineno": 468
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.module_test.ModuleTest.test_callback_runs_after_submodules_updated": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "CapturesModule",
    "ScalarModule",
    "haiku._src.module.hook_methods",
    "haiku._src.test_utils.transform_and_run",
    "m"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_callback_runs_after_submodules_updated.method_hook": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "haiku._src.module_test.contextlib",
    "mod.module_name",
    "mod.params_dict",
    "tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_context_reuse_same_instance": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "ParentModule",
    "haiku._src.base.new_context",
    "jax.numpy.array"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_dataclass": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "DataMLP",
    "absl.testing.parameterized.parameters",
    "haiku._src.base.new_context",
    "jax.numpy.ones",
    "list",
    "mlp",
    "zip"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_flatten_invalid_name": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "EmptyModule",
    "ValueError",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_inline_use": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "haiku._src.module_test.jax",
    "haiku._src.transform.transform"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_inline_use.f": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "ScalarModule"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_intercept_method": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "IdentityModule",
    "haiku._src.module.intercept_methods",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "mod"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_intercept_method.add_one_interceptor": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "f",
    "mod"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_intercept_methods_calling_underlying_optional": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "AssertionError",
    "RaisesModule",
    "haiku._src.module.intercept_methods",
    "haiku._src.test_utils.transform_and_run",
    "m"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_intercept_methods_calling_underlying_optional.do_nothing_interceptor": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_intercept_methods_run_in_lifo_order": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "IdentityModule",
    "haiku._src.module.intercept_methods",
    "haiku._src.test_utils.transform_and_run",
    "mod",
    "op_interceptor"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_intercept_methods_run_in_lifo_order.op_interceptor": {
  "data": {
   "lineno": 378
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_intercept_methods_run_in_lifo_order.op_interceptor._interceptor": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "f",
    "op"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_method_hook": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "CapturesModule",
    "EmptyModule",
    "ScalarModule",
    "events",
    "haiku._src.module.hook_methods",
    "haiku._src.test_utils.transform_and_run",
    "m"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_method_hook.method_hook": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "events.append",
    "getattr",
    "haiku._src.module_test.contextlib",
    "mod",
    "mod.module_name"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_module_naming_custom": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "EmptyModule",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_module_naming_default": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "EmptyModule",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_module_naming_explicit_numbering": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "EmptyModule",
    "absl.testing.parameterized.parameters",
    "haiku._src.test_utils.transform_and_run",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_module_naming_explicit_numbering_collision": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "EmptyModule",
    "ValueError",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_module_naming_explicit_numbering_out_of_order": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "EmptyModule",
    "ValueError",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_module_naming_explicit_reverse_numbering": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "EmptyModule",
    "absl.testing.parameterized.parameters",
    "haiku._src.test_utils.transform_and_run",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_multiple_forward_methods": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "MultipleForwardMethods",
    "haiku._src.test_utils.transform_and_run",
    "mod",
    "mod.call_mod.module_name",
    "mod.ctor_mod.module_name",
    "mod.decode_mod.module_name",
    "mod.encode_mod.module_name"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_name_scope_duplicate_name": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "haiku._src.module.Module",
    "haiku._src.module.name_scope",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_name_scope_inside_module": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "NameScopeModule",
    "haiku._src.test_utils.transform_and_run",
    "mod",
    "mod.params_dict"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_name_scope_leading_slash": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.module.name_scope",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_name_scope_nesting": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "haiku._src.module.Module",
    "haiku._src.module.name_scope",
    "haiku._src.test_utils.transform_and_run",
    "mod",
    "mod.module_name"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_name_scope_outside_transform": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.module.name_scope"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_name_scope_reenter": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.module.name_scope",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_name_scope_reuse": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.module.name_scope",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_name_scope_slash_delimited": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "haiku._src.module.Module",
    "haiku._src.module.name_scope",
    "haiku._src.test_utils.transform_and_run",
    "mod",
    "mod.module_name"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_name_scope_trivial": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "haiku._src.module.Module",
    "haiku._src.module.name_scope",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_nesting": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ParentModule",
    "haiku._src.test_utils.transform_and_run",
    "mod",
    "mod.child1.module_name",
    "mod.child2.module_name",
    "mod.module_name"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_outside_transform_exception": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "EmptyModule",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_parameter_reuse": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ScalarModule",
    "haiku._src.test_utils.transform_and_run",
    "mod"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_params": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ScalarModule",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_params_dict": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "ScalarModule",
    "enumerate",
    "haiku._src.test_utils.transform_and_run",
    "mod",
    "mod.params_dict",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_params_dict_captured": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "CapturesModule",
    "ScalarModule",
    "haiku._src.test_utils.transform_and_run",
    "mod",
    "mod.params_dict"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_params_dict_captured_lambda": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "CapturesModule",
    "ScalarModule",
    "haiku._src.test_utils.transform_and_run",
    "mod",
    "mod.params_dict"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_params_nested": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "MultipleForwardMethods",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_stateful_module": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "CountingModule",
    "apply_fn",
    "haiku._src.transform.transform_with_state",
    "init_fn"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_supports_arg_named_module": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "MyModule",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_supports_arg_named_module.MyModule": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "haiku._src.module.Module"
   ]
  },
  "type": "class"
 },
 "haiku._src.module_test.ModuleTest.test_supports_arg_named_module.MyModule.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "haiku._src.module",
    "super"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_transparent": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "TransparentModule",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_used_inside_transform": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "ScalarModule",
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_used_inside_transform.counting_creator": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "mod",
    "mod.module_name",
    "next_creator",
    "type"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_used_inside_transform.net": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "MultipleForwardMethods",
    "haiku._src.base.custom_creator"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_without_state": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "ScalarModule",
    "apply_fn",
    "haiku._src.transform.transform_with_state",
    "haiku._src.transform.without_state",
    "init_fn"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.ModuleTest.test_without_state_raises_if_state_used": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "CountingModule",
    "ValueError",
    "haiku._src.transform.transform_with_state",
    "haiku._src.transform.without_state",
    "init_fn"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.MultipleForwardMethods": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "haiku._src.module.Module"
   ]
  },
  "type": "class"
 },
 "haiku._src.module_test.MultipleForwardMethods.__call__": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "haiku._src.module_test.ScalarModule",
    "s"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.MultipleForwardMethods.__init__": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "haiku._src.module_test.MultipleForwardMethods",
    "haiku._src.module_test.ScalarModule",
    "s",
    "super"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.MultipleForwardMethods.autoencode": {
  "data": {
   "lineno": 521
  },
  "type": "function"
 },
 "haiku._src.module_test.MultipleForwardMethods.decode": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "haiku._src.module_test.ScalarModule",
    "s"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.MultipleForwardMethods.encode": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "haiku._src.module_test.ScalarModule",
    "s"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.NameScopeModule": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "haiku._src.module.Module"
   ]
  },
  "type": "class"
 },
 "haiku._src.module_test.NameScopeModule.__call__": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "haiku._src.base.get_parameter",
    "haiku._src.module.name_scope",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "haiku._src.module_test.ParentModule": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "haiku._src.module.Module"
   ]
  },
  "type": "class"
 },
 "haiku._src.module_test.ParentModule.__init__": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "haiku._src.module_test.ParentModule",
    "haiku._src.module_test.ScalarModule",
    "super"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.RaisesModule": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "haiku._src.module.Module"
   ]
  },
  "type": "class"
 },
 "haiku._src.module_test.RaisesModule.__call__": {
  "data": {
   "lineno": 474
  },
  "type": "function"
 },
 "haiku._src.module_test.ScalarModule": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "haiku._src.module.Module"
   ]
  },
  "type": "class"
 },
 "haiku._src.module_test.ScalarModule.__call__": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "haiku._src.base.get_parameter",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "haiku._src.module_test.TransparentModule": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "haiku._src.module.Module"
   ]
  },
  "type": "class"
 },
 "haiku._src.module_test.TransparentModule.__call__": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "haiku._src.module.transparent",
    "haiku._src.module_test.ScalarModule"
   ]
  },
  "type": "function"
 },
 "haiku._src.module_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.module_test.base": {
  "data": {
   "shadows": "haiku._src.base"
  },
  "type": "import"
 },
 "haiku._src.module_test.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "haiku._src.module_test.dataclasses": {
  "data": {
   "shadows": "dataclasses"
  },
  "type": "import"
 },
 "haiku._src.module_test.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.module_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.module_test.module": {
  "data": {
   "shadows": "haiku._src.module"
  },
  "type": "import"
 },
 "haiku._src.module_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.module_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.module_test.transform": {
  "data": {
   "shadows": "haiku._src.transform"
  },
  "type": "import"
 },
 "haiku._src.moving_averages": {
  "data": {
   "symbols_in_volume": [
    "haiku._src.base",
    "haiku._src.base.get_state",
    "haiku._src.base.set_state",
    "haiku._src.data_structures",
    "haiku._src.initializers",
    "haiku._src.module",
    "haiku._src.module.Module",
    "haiku._src.moving_averages.hk",
    "haiku._src.moving_averages.types"
   ]
  },
  "type": "module"
 },
 "haiku._src.moving_averages.EMAParamsTree": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "haiku._src.moving_averages.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.moving_averages.EMAParamsTree.__call__": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "haiku._src.moving_averages.hk",
    "maybe_ema"
   ]
  },
  "type": "function"
 },
 "haiku._src.moving_averages.EMAParamsTree.__call__.maybe_ema": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "haiku._src.moving_averages.ExponentialMovingAverage",
    "haiku._src.moving_averages.re"
   ]
  },
  "type": "function"
 },
 "haiku._src.moving_averages.EMAParamsTree.__init__": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.moving_averages.ExponentialMovingAverage": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "haiku._src.moving_averages.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.moving_averages.ExponentialMovingAverage.__call__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "bool",
    "haiku._src.moving_averages.hk",
    "haiku._src.moving_averages.jax",
    "isinstance",
    "jax.numpy.asarray",
    "jax.numpy.int32",
    "jax.numpy.ndarray",
    "jax.numpy.ones",
    "jax.numpy.power",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.moving_averages.ExponentialMovingAverage.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.moving_averages.ExponentialMovingAverage.average": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "haiku._src.moving_averages.hk",
    "property"
   ]
  },
  "type": "function"
 },
 "haiku._src.moving_averages.ExponentialMovingAverage.initialize": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "DeprecationWarning",
    "haiku._src.moving_averages.hk",
    "haiku._src.moving_averages.warnings",
    "hasattr",
    "jax.numpy.float32",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.moving_averages.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "haiku._src.moving_averages.base": {
  "data": {
   "shadows": "haiku._src.base"
  },
  "type": "import"
 },
 "haiku._src.moving_averages.data_structures": {
  "data": {
   "shadows": "haiku._src.data_structures"
  },
  "type": "import"
 },
 "haiku._src.moving_averages.hk": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "haiku._src.moving_averages.initializers": {
  "data": {
   "shadows": "haiku._src.initializers"
  },
  "type": "import"
 },
 "haiku._src.moving_averages.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.moving_averages.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.moving_averages.module": {
  "data": {
   "shadows": "haiku._src.module"
  },
  "type": "import"
 },
 "haiku._src.moving_averages.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "haiku._src.moving_averages.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "haiku._src.moving_averages.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "haiku._src.moving_averages_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "haiku._src.moving_averages_test.EMAParamsTreeTest": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.moving_averages_test.EMAParamsTreeTest.test_ema_naming_scheme": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "haiku._src.transform.transform",
    "haiku._src.transform.transform_with_state",
    "init_fn",
    "jax.random.PRNGKey",
    "set"
   ]
  },
  "type": "function"
 },
 "haiku._src.moving_averages_test.EMAParamsTreeTest.test_ema_naming_scheme.f": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "haiku._src.basic.Linear",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.moving_averages_test.EMAParamsTreeTest.test_ema_naming_scheme.g": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "haiku._src.moving_averages.EMAParamsTree"
   ]
  },
  "type": "function"
 },
 "haiku._src.moving_averages_test.EMAParamsTreeTest.test_ema_on_changing_data": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "AssertionError",
    "apply_fn",
    "haiku._src.moving_averages_test.tree",
    "haiku._src.transform.transform",
    "haiku._src.transform.transform_with_state",
    "haiku._src.transform.without_apply_rng",
    "init_fn",
    "jax.random.PRNGKey",
    "numpy.testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "haiku._src.moving_averages_test.EMAParamsTreeTest.test_ema_on_changing_data.f": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "haiku._src.basic.Linear",
    "jax.numpy.ones",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.moving_averages_test.EMAParamsTreeTest.test_ema_on_changing_data.g": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "haiku._src.moving_averages.EMAParamsTree"
   ]
  },
  "type": "function"
 },
 "haiku._src.moving_averages_test.EMAParamsTreeTest.test_ignore_regex": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "apply_fn",
    "haiku._src.moving_averages_test.tree",
    "haiku._src.transform.transform",
    "haiku._src.transform.transform_with_state",
    "haiku._src.transform.without_apply_rng",
    "init_fn",
    "jax.random.PRNGKey"
   ]
  },
  "type": "function"
 },
 "haiku._src.moving_averages_test.EMAParamsTreeTest.test_ignore_regex.f": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "haiku._src.basic.Linear",
    "jax.numpy.ones",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.moving_averages_test.EMAParamsTreeTest.test_ignore_regex.g": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "haiku._src.moving_averages.EMAParamsTree"
   ]
  },
  "type": "function"
 },
 "haiku._src.moving_averages_test.EMAParamsTreeTest.test_tree_update_stats": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "AssertionError",
    "apply_fn_g",
    "apply_fn_h",
    "haiku._src.moving_averages_test.tree",
    "haiku._src.transform.transform",
    "haiku._src.transform.transform_with_state",
    "haiku._src.transform.without_apply_rng",
    "init_fn",
    "jax.random.PRNGKey",
    "numpy.testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "haiku._src.moving_averages_test.EMAParamsTreeTest.test_tree_update_stats.f": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "haiku._src.basic.Linear",
    "jax.numpy.ones",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.moving_averages_test.EMAParamsTreeTest.test_tree_update_stats.g": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "haiku._src.moving_averages.EMAParamsTree"
   ]
  },
  "type": "function"
 },
 "haiku._src.moving_averages_test.EMAParamsTreeTest.test_tree_update_stats.h": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "haiku._src.moving_averages.EMAParamsTree"
   ]
  },
  "type": "function"
 },
 "haiku._src.moving_averages_test.MovingAveragesTest": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.moving_averages_test.MovingAveragesTest.test_call": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ema",
    "haiku._src.moving_averages.ExponentialMovingAverage",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.moving_averages_test.MovingAveragesTest.test_ema_is_identity_on_unchanged_data": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "apply_fn",
    "haiku._src.transform.transform_with_state",
    "haiku._src.transform.without_apply_rng",
    "init_fn",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.moving_averages_test.MovingAveragesTest.test_ema_is_identity_on_unchanged_data.f": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "haiku._src.moving_averages.ExponentialMovingAverage"
   ]
  },
  "type": "function"
 },
 "haiku._src.moving_averages_test.MovingAveragesTest.test_fast_slow_decay": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ema_fast",
    "ema_slow",
    "haiku._src.moving_averages.ExponentialMovingAverage",
    "haiku._src.test_utils.transform_and_run",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.moving_averages_test.MovingAveragesTest.test_fast_slow_decay_without_update": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ema_fast",
    "ema_slow",
    "haiku._src.moving_averages.ExponentialMovingAverage",
    "haiku._src.test_utils.transform_and_run",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.moving_averages_test.MovingAveragesTest.test_initialize": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "ema",
    "ema.average",
    "ema.initialize",
    "haiku._src.moving_averages.ExponentialMovingAverage",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.array",
    "jax.numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.moving_averages_test.MovingAveragesTest.test_invalid_warmup_length": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.moving_averages.ExponentialMovingAverage",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.moving_averages_test.MovingAveragesTest.test_warmup": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ema",
    "haiku._src.moving_averages.ExponentialMovingAverage",
    "haiku._src.moving_averages_test.jax",
    "haiku._src.test_utils.transform_and_run",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.moving_averages_test.MovingAveragesTest.test_warmup_length_and_zero_debias": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.moving_averages.ExponentialMovingAverage",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.moving_averages_test.MovingAveragesTest.test_zero_decay": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ema",
    "haiku._src.moving_averages.ExponentialMovingAverage",
    "haiku._src.moving_averages_test.jax",
    "haiku._src.test_utils.transform_and_run",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.moving_averages_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.moving_averages_test.basic": {
  "data": {
   "shadows": "haiku._src.basic"
  },
  "type": "import"
 },
 "haiku._src.moving_averages_test.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.moving_averages_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.moving_averages_test.moving_averages": {
  "data": {
   "shadows": "haiku._src.moving_averages"
  },
  "type": "import"
 },
 "haiku._src.moving_averages_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.moving_averages_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.moving_averages_test.random": {
  "data": {
   "shadows": "jax.random"
  },
  "type": "import"
 },
 "haiku._src.moving_averages_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.moving_averages_test.transform": {
  "data": {
   "shadows": "haiku._src.transform"
  },
  "type": "import"
 },
 "haiku._src.moving_averages_test.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "haiku._src.nets": {
  "data": {},
  "type": "module"
 },
 "haiku._src.nets.mlp": {
  "data": {
   "symbols_in_volume": [
    "haiku._src.base",
    "haiku._src.base.PRNGSequence",
    "haiku._src.base.get_parameter",
    "haiku._src.basic",
    "haiku._src.basic.Linear",
    "haiku._src.basic.dropout",
    "haiku._src.initializers",
    "haiku._src.module",
    "haiku._src.module.Module",
    "haiku._src.nets.mlp.hk",
    "haiku._src.nets.mlp.types"
   ]
  },
  "type": "module"
 },
 "haiku._src.nets.mlp.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "haiku._src.nets.mlp.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "haiku._src.nets.mlp.MLP": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "haiku._src.nets.mlp.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.nets.mlp.MLP.__call__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "float",
    "haiku._src.nets.mlp.hk",
    "jax.numpy.ndarray",
    "layer",
    "len",
    "next",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mlp.MLP.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "enumerate",
    "haiku._src.nets.mlp.hk",
    "haiku._src.nets.mlp.jax",
    "int",
    "jax.numpy.ndarray",
    "str",
    "super",
    "tuple",
    "typing.Callable",
    "typing.Iterable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mlp.MLP.reverse": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "bool",
    "haiku._src.nets.mlp.MLP",
    "layer",
    "layer.input_size",
    "reversed",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mlp.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "haiku._src.nets.mlp.base": {
  "data": {
   "shadows": "haiku._src.base"
  },
  "type": "import"
 },
 "haiku._src.nets.mlp.basic": {
  "data": {
   "shadows": "haiku._src.basic"
  },
  "type": "import"
 },
 "haiku._src.nets.mlp.hk": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "haiku._src.nets.mlp.initializers": {
  "data": {
   "shadows": "haiku._src.initializers"
  },
  "type": "import"
 },
 "haiku._src.nets.mlp.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.nets.mlp.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.nets.mlp.module": {
  "data": {
   "shadows": "haiku._src.module"
  },
  "type": "import"
 },
 "haiku._src.nets.mlp.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "haiku._src.nets.mlp_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "haiku._src.nets.mlp_test.CountingActivation": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "haiku._src.nets.mlp_test.CountingActivation.__call__": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "haiku._src.nets.mlp_test.CountingActivation.__init__": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "haiku._src.nets.mlp_test.CountingInitializer": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "haiku._src.nets.mlp_test.CountingInitializer.__call__": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "jax.numpy.float32",
    "jax.numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mlp_test.CountingInitializer.__init__": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "haiku._src.nets.mlp_test.MLPTest": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.nets.mlp_test.MLPTest.test_activate_final": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "CountingActivation",
    "absl.testing.parameterized.parameters",
    "haiku._src.nets.mlp.MLP",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "mod"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mlp_test.MLPTest.test_adds_index_to_layer_names": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "enumerate",
    "haiku._src.nets.mlp.MLP",
    "haiku._src.test_utils.transform_and_run",
    "mod",
    "mod.layers"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mlp_test.MLPTest.test_applies_activation": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "CountingActivation",
    "absl.testing.parameterized.parameters",
    "haiku._src.nets.mlp.MLP",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "mod"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mlp_test.MLPTest.test_applies_activation_with_dropout": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "CountingActivation",
    "absl.testing.parameterized.parameters",
    "haiku._src.nets.mlp.MLP",
    "haiku._src.nets.mlp_test.jax",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "mod"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mlp_test.MLPTest.test_b_init_when_with_bias_false": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.nets.mlp.MLP",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mlp_test.MLPTest.test_custom_name": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "haiku._src.nets.mlp.MLP",
    "haiku._src.test_utils.transform_and_run",
    "mod",
    "mod.name"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mlp_test.MLPTest.test_default_name": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "haiku._src.nets.mlp.MLP",
    "haiku._src.test_utils.transform_and_run",
    "mod",
    "mod.name"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mlp_test.MLPTest.test_dropout_requires_key": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.nets.mlp.MLP",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "mod"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mlp_test.MLPTest.test_layers": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "haiku._src.nets.mlp.MLP",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mlp_test.MLPTest.test_no_dropout_rejects_rng": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.nets.mlp.MLP",
    "haiku._src.nets.mlp_test.jax",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "mod"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mlp_test.MLPTest.test_passes_with_bias_to_layers": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "haiku._src.nets.mlp.MLP",
    "haiku._src.test_utils.transform_and_run",
    "mod",
    "mod.layers"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mlp_test.MLPTest.test_repeat_initializer": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "CountingInitializer",
    "haiku._src.nets.mlp.MLP",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "mod"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mlp_test.MLPTest.test_repr": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "enumerate",
    "haiku._src.nets.mlp.MLP",
    "haiku._src.test_utils.transform_and_run",
    "mod",
    "mod.layers",
    "repr"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mlp_test.MLPTest.test_reverse": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "haiku._src.test_utils.transform_and_run",
    "mod",
    "mod.layers",
    "reversed_mlp"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mlp_test.MLPTest.test_reverse_activate_final": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "CountingActivation",
    "absl.testing.parameterized.parameters",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "mod",
    "reversed_mlp"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mlp_test.MLPTest.test_reverse_activation": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "CountingActivation",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "mod",
    "reversed_mlp"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mlp_test.MLPTest.test_reverse_b_init": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "CountingInitializer",
    "haiku._src.test_utils.transform_and_run",
    "mod",
    "mod.layers",
    "reversed_mlp"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mlp_test.MLPTest.test_reverse_custom_name": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "haiku._src.test_utils.transform_and_run",
    "mod",
    "mod.name",
    "reversed_mlp"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mlp_test.MLPTest.test_reverse_default_name": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "haiku._src.test_utils.transform_and_run",
    "mod",
    "mod.name",
    "reversed_mlp"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mlp_test.MLPTest.test_reverse_override_name": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "haiku._src.nets.mlp.MLP",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "mod",
    "mod.reverse"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mlp_test.MLPTest.test_reverse_passed_with_bias": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "haiku._src.test_utils.transform_and_run",
    "mod",
    "mod.layers",
    "reversed_mlp"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mlp_test.MLPTest.test_reverse_w_init": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "CountingInitializer",
    "haiku._src.test_utils.transform_and_run",
    "mod",
    "mod.layers",
    "reversed_mlp"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mlp_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.nets.mlp_test.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.nets.mlp_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.nets.mlp_test.mlp": {
  "data": {
   "shadows": "haiku._src.nets.mlp"
  },
  "type": "import"
 },
 "haiku._src.nets.mlp_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.nets.mlp_test.reversed_mlp": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "haiku._src.nets.mlp.MLP",
    "jax.numpy.ones",
    "mod",
    "mod.reverse"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mlp_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.nets.mobilenetv1": {
  "data": {
   "symbols_in_volume": [
    "haiku._src.basic",
    "haiku._src.basic.Linear",
    "haiku._src.batch_norm",
    "haiku._src.batch_norm.BatchNorm",
    "haiku._src.conv",
    "haiku._src.conv.Conv2D",
    "haiku._src.depthwise_conv",
    "haiku._src.depthwise_conv.DepthwiseConv2D",
    "haiku._src.module",
    "haiku._src.module.Module",
    "haiku._src.nets.mobilenetv1.hk",
    "haiku._src.nets.mobilenetv1.types",
    "haiku._src.reshape",
    "haiku._src.reshape.Flatten"
   ]
  },
  "type": "module"
 },
 "haiku._src.nets.mobilenetv1.MobileNetV1": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "haiku._src.nets.mobilenetv1.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.nets.mobilenetv1.MobileNetV1.__call__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "block",
    "bn",
    "bool",
    "haiku._src.nets.mobilenetv1.MobileNetV1Block",
    "haiku._src.nets.mobilenetv1.hk",
    "haiku._src.nets.mobilenetv1.jax",
    "initial_conv",
    "jax.numpy.mean",
    "jax.numpy.ndarray",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mobilenetv1.MobileNetV1.__init__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "len",
    "str",
    "super",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mobilenetv1.MobileNetV1Block": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "haiku._src.nets.mobilenetv1.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.nets.mobilenetv1.MobileNetV1Block.__call__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "bn1",
    "bn2",
    "bool",
    "depthwise",
    "haiku._src.nets.mobilenetv1.hk",
    "haiku._src.nets.mobilenetv1.jax",
    "jax.numpy.ndarray",
    "pointwise"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mobilenetv1.MobileNetV1Block.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mobilenetv1.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "haiku._src.nets.mobilenetv1.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "haiku._src.nets.mobilenetv1.basic": {
  "data": {
   "shadows": "haiku._src.basic"
  },
  "type": "import"
 },
 "haiku._src.nets.mobilenetv1.batch_norm": {
  "data": {
   "shadows": "haiku._src.batch_norm"
  },
  "type": "import"
 },
 "haiku._src.nets.mobilenetv1.conv": {
  "data": {
   "shadows": "haiku._src.conv"
  },
  "type": "import"
 },
 "haiku._src.nets.mobilenetv1.depthwise_conv": {
  "data": {
   "shadows": "haiku._src.depthwise_conv"
  },
  "type": "import"
 },
 "haiku._src.nets.mobilenetv1.hk": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "haiku._src.nets.mobilenetv1.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.nets.mobilenetv1.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.nets.mobilenetv1.module": {
  "data": {
   "shadows": "haiku._src.module"
  },
  "type": "import"
 },
 "haiku._src.nets.mobilenetv1.reshape": {
  "data": {
   "shadows": "haiku._src.reshape"
  },
  "type": "import"
 },
 "haiku._src.nets.mobilenetv1.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "haiku._src.nets.mobilenetv1_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "haiku._src.nets.mobilenetv1_test.MobileNetV1Test": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.nets.mobilenetv1_test.MobileNetV1Test.test_error_incorrect_args_stride_list": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.nets.mobilenetv1.MobileNetV1",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mobilenetv1_test.MobileNetV1Test.test_simple": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "haiku._src.nets.mobilenetv1.MobileNetV1",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "model"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.mobilenetv1_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.nets.mobilenetv1_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.nets.mobilenetv1_test.mobilenetv1": {
  "data": {
   "shadows": "haiku._src.nets.mobilenetv1"
  },
  "type": "import"
 },
 "haiku._src.nets.mobilenetv1_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.nets.mobilenetv1_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.nets.resnet": {
  "data": {
   "symbols_in_volume": [
    "haiku._src.basic",
    "haiku._src.basic.Linear",
    "haiku._src.batch_norm",
    "haiku._src.batch_norm.BatchNorm",
    "haiku._src.conv",
    "haiku._src.conv.Conv2D",
    "haiku._src.module",
    "haiku._src.module.Module",
    "haiku._src.nets.resnet.hk",
    "haiku._src.nets.resnet.types",
    "haiku._src.pool",
    "haiku._src.pool.max_pool"
   ]
  },
  "type": "module"
 },
 "haiku._src.nets.resnet.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "haiku._src.nets.resnet.BlockGroup": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "haiku._src.nets.resnet.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.nets.resnet.BlockGroup.__call__": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "block"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.resnet.BlockGroup.__init__": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "block_cls",
    "bool",
    "float",
    "haiku._src.nets.resnet.BlockV1",
    "haiku._src.nets.resnet.BlockV2",
    "int",
    "range",
    "str",
    "super",
    "typing.Mapping",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.resnet.BlockV1": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "haiku._src.nets.resnet.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.nets.resnet.BlockV1.__call__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "bn_i",
    "conv_i",
    "enumerate",
    "haiku._src.nets.resnet.jax",
    "len"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.resnet.BlockV1.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "bool",
    "dict",
    "float",
    "haiku._src.nets.resnet.hk",
    "int",
    "jax.numpy.zeros",
    "str",
    "super",
    "typing.Mapping",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.resnet.BlockV2": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "haiku._src.nets.resnet.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.nets.resnet.BlockV2.__call__": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "bn_i",
    "conv_i",
    "enumerate",
    "haiku._src.nets.resnet.jax"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.resnet.BlockV2.__init__": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "bool",
    "dict",
    "float",
    "haiku._src.nets.resnet.hk",
    "int",
    "str",
    "super",
    "typing.Mapping",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.resnet.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "haiku._src.nets.resnet.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "haiku._src.nets.resnet.ResNet": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "haiku._src.nets.resnet.BlockGroup",
    "haiku._src.nets.resnet.BlockV1",
    "haiku._src.nets.resnet.BlockV2",
    "haiku._src.nets.resnet.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.nets.resnet.ResNet.__call__": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "block_group",
    "haiku._src.nets.resnet.hk",
    "haiku._src.nets.resnet.jax",
    "jax.numpy.mean"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.resnet.ResNet.__init__": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "bool",
    "dict",
    "float",
    "haiku._src.nets.resnet.BlockGroup",
    "haiku._src.nets.resnet.check_length",
    "haiku._src.nets.resnet.hk",
    "int",
    "jax.numpy.zeros",
    "range",
    "str",
    "super",
    "typing.Any",
    "typing.Mapping",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.resnet.ResNet101": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "haiku._src.nets.resnet.ResNet"
   ]
  },
  "type": "class"
 },
 "haiku._src.nets.resnet.ResNet101.__init__": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "str",
    "super",
    "typing.Any",
    "typing.Mapping",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.resnet.ResNet152": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "haiku._src.nets.resnet.ResNet"
   ]
  },
  "type": "class"
 },
 "haiku._src.nets.resnet.ResNet152.__init__": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "str",
    "super",
    "typing.Any",
    "typing.Mapping",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.resnet.ResNet18": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "haiku._src.nets.resnet.ResNet"
   ]
  },
  "type": "class"
 },
 "haiku._src.nets.resnet.ResNet18.__init__": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "str",
    "super",
    "typing.Any",
    "typing.Mapping",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.resnet.ResNet200": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "haiku._src.nets.resnet.ResNet"
   ]
  },
  "type": "class"
 },
 "haiku._src.nets.resnet.ResNet200.__init__": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "str",
    "super",
    "typing.Any",
    "typing.Mapping",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.resnet.ResNet34": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "haiku._src.nets.resnet.ResNet"
   ]
  },
  "type": "class"
 },
 "haiku._src.nets.resnet.ResNet34.__init__": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "str",
    "super",
    "typing.Any",
    "typing.Mapping",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.resnet.ResNet50": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "haiku._src.nets.resnet.ResNet"
   ]
  },
  "type": "class"
 },
 "haiku._src.nets.resnet.ResNet50.__init__": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "str",
    "super",
    "typing.Any",
    "typing.Mapping",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.resnet.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "haiku._src.nets.resnet.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "haiku._src.nets.resnet.basic": {
  "data": {
   "shadows": "haiku._src.basic"
  },
  "type": "import"
 },
 "haiku._src.nets.resnet.batch_norm": {
  "data": {
   "shadows": "haiku._src.batch_norm"
  },
  "type": "import"
 },
 "haiku._src.nets.resnet.check_length": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.resnet.conv": {
  "data": {
   "shadows": "haiku._src.conv"
  },
  "type": "import"
 },
 "haiku._src.nets.resnet.hk": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "haiku._src.nets.resnet.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.nets.resnet.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.nets.resnet.module": {
  "data": {
   "shadows": "haiku._src.module"
  },
  "type": "import"
 },
 "haiku._src.nets.resnet.pool": {
  "data": {
   "shadows": "haiku._src.pool"
  },
  "type": "import"
 },
 "haiku._src.nets.resnet.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "haiku._src.nets.resnet_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main",
    "int"
   ]
  },
  "type": "module"
 },
 "haiku._src.nets.resnet_test.ResnetTest": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.nets.resnet_test.ResnetTest.test_error_incorrect_args_block_list": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "absl.testing.parameterized.parameters",
    "haiku._src.nets.resnet.ResNet",
    "haiku._src.test_utils.transform_and_run",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.resnet_test.ResnetTest.test_error_incorrect_args_channel_list": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "absl.testing.parameterized.parameters",
    "haiku._src.nets.resnet.ResNet",
    "haiku._src.test_utils.transform_and_run",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.resnet_test.ResnetTest.test_has_projection": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "enumerate",
    "getattr",
    "haiku._src.nets.resnet",
    "haiku._src.nets.resnet_test._RESNETS",
    "haiku._src.nets.resnet_test._RESNET_HAS_PROJECTION",
    "haiku._src.test_utils.combined_named_parameters",
    "haiku._src.test_utils.named_bools",
    "haiku._src.test_utils.transform_and_run",
    "hasattr",
    "model",
    "model.block_groups",
    "resnet_class",
    "zip"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.resnet_test.ResnetTest.test_local_stats": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "haiku._src.nets.resnet_test.jax",
    "haiku._src.test_utils.combined_named_parameters",
    "haiku._src.test_utils.named_bools",
    "haiku._src.transform.transform",
    "jax.numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.resnet_test.ResnetTest.test_local_stats.forward_fn": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "haiku._src.nets.resnet.ResNet",
    "model"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.resnet_test.ResnetTest.test_logits_config": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "getattr",
    "haiku._src.nets.resnet",
    "haiku._src.nets.resnet_test._RESNETS",
    "haiku._src.nets.resnet_test.jax",
    "haiku._src.test_utils.combined_named_parameters",
    "haiku._src.test_utils.named_bools",
    "haiku.transform_with_state",
    "jax.numpy.ones",
    "jax.numpy.ones_like",
    "jax.numpy.zeros_like",
    "model",
    "model.init",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.resnet_test.ResnetTest.test_logits_config.model_func_logits_config_default": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "model",
    "resnet_class"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.resnet_test.ResnetTest.test_logits_config.model_func_logits_config_modified": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "dict",
    "jax.numpy.ones",
    "model",
    "resnet_class"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.resnet_test.ResnetTest.test_num_params": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "getattr",
    "haiku._src.nets.resnet",
    "haiku._src.nets.resnet_test._RESNETS",
    "haiku._src.nets.resnet_test._RESNET_NUM_PARAMS",
    "haiku._src.nets.resnet_test.jax",
    "haiku._src.test_utils.combined_named_parameters",
    "haiku._src.test_utils.named_bools",
    "haiku.transform_with_state",
    "int",
    "jax.numpy.ones",
    "model",
    "model.init",
    "numpy.prod",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.resnet_test.ResnetTest.test_num_params.model_func": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "model",
    "resnet_class"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.resnet_test.ResnetTest.test_simple": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "haiku._src.nets.resnet.ResNet",
    "haiku._src.test_utils.combined_named_parameters",
    "haiku._src.test_utils.named_bools",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "model"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.resnet_test._RESNETS": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "haiku._src.nets.resnet_test._RESNET_HAS_PROJECTION": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "haiku._src.nets.resnet_test._RESNET_NUM_PARAMS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "haiku._src.nets.resnet_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.nets.resnet_test.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "haiku._src.nets.resnet_test.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.nets.resnet_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.nets.resnet_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.nets.resnet_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.nets.resnet_test.resnet": {
  "data": {
   "shadows": "haiku._src.nets.resnet"
  },
  "type": "import"
 },
 "haiku._src.nets.resnet_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.nets.resnet_test.transform": {
  "data": {
   "shadows": "haiku._src.transform"
  },
  "type": "import"
 },
 "haiku._src.nets.vqvae": {
  "data": {
   "symbols_in_volume": [
    "haiku._src.base",
    "haiku._src.base.get_parameter",
    "haiku._src.base.get_state",
    "haiku._src.base.set_state",
    "haiku._src.initializers",
    "haiku._src.module",
    "haiku._src.module.Module",
    "haiku._src.moving_averages",
    "haiku._src.moving_averages.ExponentialMovingAverage",
    "haiku._src.nets.vqvae.hk",
    "haiku._src.nets.vqvae.types"
   ]
  },
  "type": "module"
 },
 "haiku._src.nets.vqvae.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "haiku._src.nets.vqvae.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "haiku._src.nets.vqvae.VectorQuantizer": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "haiku._src.nets.vqvae.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.nets.vqvae.VectorQuantizer.__call__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "haiku._src.nets.vqvae.jax",
    "jax.numpy.argmax",
    "jax.numpy.exp",
    "jax.numpy.log",
    "jax.numpy.matmul",
    "jax.numpy.mean",
    "jax.numpy.reshape",
    "jax.numpy.sum"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.vqvae.VectorQuantizer.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "float",
    "haiku._src.nets.vqvae.hk",
    "int",
    "jax.numpy.float32",
    "str",
    "super",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.vqvae.VectorQuantizer.quantize": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "haiku._src.nets.vqvae.jax"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.vqvae.VectorQuantizerEMA": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "haiku._src.nets.vqvae.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.nets.vqvae.VectorQuantizerEMA.__call__": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "haiku._src.nets.vqvae.hk",
    "haiku._src.nets.vqvae.jax",
    "jax.numpy.argmax",
    "jax.numpy.exp",
    "jax.numpy.log",
    "jax.numpy.matmul",
    "jax.numpy.mean",
    "jax.numpy.reshape",
    "jax.numpy.sum"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.vqvae.VectorQuantizerEMA.__init__": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "haiku._src.nets.vqvae.hk",
    "jax.numpy.float32",
    "str",
    "super",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.vqvae.VectorQuantizerEMA.embeddings": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "haiku._src.nets.vqvae.hk",
    "property"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.vqvae.VectorQuantizerEMA.quantize": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "haiku._src.nets.vqvae.base": {
  "data": {
   "shadows": "haiku._src.base"
  },
  "type": "import"
 },
 "haiku._src.nets.vqvae.hk": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "haiku._src.nets.vqvae.initializers": {
  "data": {
   "shadows": "haiku._src.initializers"
  },
  "type": "import"
 },
 "haiku._src.nets.vqvae.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.nets.vqvae.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.nets.vqvae.module": {
  "data": {
   "shadows": "haiku._src.module"
  },
  "type": "import"
 },
 "haiku._src.nets.vqvae.moving_averages": {
  "data": {
   "shadows": "haiku._src.moving_averages"
  },
  "type": "import"
 },
 "haiku._src.nets.vqvae.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "haiku._src.nets.vqvae_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "haiku._src.nets.vqvae_test.VqvaeTest": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.nets.vqvae_test.VqvaeTest.testConstruct": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "constructor",
    "haiku._src.nets.vqvae.VectorQuantizer",
    "haiku._src.nets.vqvae.VectorQuantizerEMA",
    "haiku._src.nets.vqvae_test.jax",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.array",
    "numpy.argmax",
    "numpy.dot",
    "numpy.float32",
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "vqvae_module",
    "vqvae_module.embeddings"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.vqvae_test.VqvaeTest.testEmaCrossReplica": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "haiku._src.nets.vqvae_test.functools",
    "haiku._src.nets.vqvae_test.jax",
    "haiku._src.transform.transform_with_state",
    "jax.numpy.broadcast_to",
    "numpy.random.rand",
    "numpy.testing.assert_allclose",
    "range",
    "update_fn",
    "vqvae_f",
    "vqvae_f.apply",
    "vqvae_f.init"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.vqvae_test.VqvaeTest.testEmaCrossReplica.my_function": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "haiku._src.nets.vqvae.VectorQuantizerEMA",
    "jax.numpy.float32",
    "numpy.array",
    "numpy.float32",
    "vqvae_module",
    "vqvae_module.embeddings"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.vqvae_test.VqvaeTest.testEmaUpdating": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "haiku._src.nets.vqvae.VectorQuantizerEMA",
    "haiku._src.nets.vqvae_test.jax",
    "haiku._src.stateful.jit",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.float32",
    "jax.numpy.float64",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.random.rand",
    "range",
    "vqvae_f",
    "vqvae_module",
    "vqvae_module.embeddings"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.vqvae_test.VqvaeTest.testNoneBatch": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "constructor",
    "haiku._src.nets.vqvae.VectorQuantizer",
    "haiku._src.nets.vqvae.VectorQuantizerEMA",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.zeros",
    "vqvae_module"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.vqvae_test.VqvaeTest.testShapeChecking": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "TypeError",
    "absl.testing.parameterized.parameters",
    "constructor",
    "haiku._src.nets.vqvae.VectorQuantizer",
    "haiku._src.nets.vqvae.VectorQuantizerEMA",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.array",
    "numpy.float32",
    "numpy.random.randn",
    "vqvae_module"
   ]
  },
  "type": "function"
 },
 "haiku._src.nets.vqvae_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.nets.vqvae_test.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "haiku._src.nets.vqvae_test.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.nets.vqvae_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.nets.vqvae_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.nets.vqvae_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.nets.vqvae_test.stateful": {
  "data": {
   "shadows": "haiku._src.stateful"
  },
  "type": "import"
 },
 "haiku._src.nets.vqvae_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.nets.vqvae_test.transform": {
  "data": {
   "shadows": "haiku._src.transform"
  },
  "type": "import"
 },
 "haiku._src.nets.vqvae_test.vqvae": {
  "data": {
   "shadows": "haiku._src.nets.vqvae"
  },
  "type": "import"
 },
 "haiku._src.pad": {
  "data": {
   "symbols_in_volume": [
    "haiku._src.pad.PadFn",
    "haiku._src.pad.hk",
    "haiku._src.pad.types",
    "int",
    "typing.Callable",
    "typing.Tuple"
   ]
  },
  "type": "module"
 },
 "haiku._src.pad.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "haiku._src.pad.PadFn": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "haiku._src.pad.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "haiku._src.pad.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "haiku._src.pad.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "haiku._src.pad.causal": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "int",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.pad.create": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "haiku._src.pad.hk",
    "haiku._src.utils.replicate",
    "int",
    "map",
    "tuple",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union",
    "x"
   ]
  },
  "type": "function"
 },
 "haiku._src.pad.full": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "int",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.pad.hk": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "haiku._src.pad.reverse_causal": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "int",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.pad.same": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "int",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.pad.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "haiku._src.pad.utils": {
  "data": {
   "shadows": "haiku._src.utils"
  },
  "type": "import"
 },
 "haiku._src.pad.valid": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "int",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.pad_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "haiku._src.pad_test.PadTest": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.pad_test.PadTest.test_padding_1d": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "haiku._src.pad.create",
    "haiku._src.pad.full"
   ]
  },
  "type": "function"
 },
 "haiku._src.pad_test.PadTest.test_padding_2d": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "haiku._src.pad.causal",
    "haiku._src.pad.create",
    "haiku._src.pad.full"
   ]
  },
  "type": "function"
 },
 "haiku._src.pad_test.PadTest.test_padding_3d": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "haiku._src.pad.causal",
    "haiku._src.pad.create",
    "haiku._src.pad.full"
   ]
  },
  "type": "function"
 },
 "haiku._src.pad_test.PadTest.test_padding_causal": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "haiku._src.pad.causal",
    "haiku._src.pad.create"
   ]
  },
  "type": "function"
 },
 "haiku._src.pad_test.PadTest.test_padding_full": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "haiku._src.pad.create",
    "haiku._src.pad.full"
   ]
  },
  "type": "function"
 },
 "haiku._src.pad_test.PadTest.test_padding_incorrect_input": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "TypeError",
    "absl.testing.parameterized.parameters",
    "haiku._src.pad.create",
    "haiku._src.pad.full"
   ]
  },
  "type": "function"
 },
 "haiku._src.pad_test.PadTest.test_padding_reverse_causal": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "haiku._src.pad.create",
    "haiku._src.pad.reverse_causal"
   ]
  },
  "type": "function"
 },
 "haiku._src.pad_test.PadTest.test_padding_same": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "haiku._src.pad.create",
    "haiku._src.pad.same"
   ]
  },
  "type": "function"
 },
 "haiku._src.pad_test.PadTest.test_padding_valid": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "haiku._src.pad.create",
    "haiku._src.pad.valid"
   ]
  },
  "type": "function"
 },
 "haiku._src.pad_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.pad_test.pad": {
  "data": {
   "shadows": "haiku._src.pad"
  },
  "type": "import"
 },
 "haiku._src.pad_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.pool": {
  "data": {
   "symbols_in_volume": [
    "haiku._src.module",
    "haiku._src.module.Module",
    "haiku._src.pool.hk",
    "haiku._src.pool.types"
   ]
  },
  "type": "module"
 },
 "haiku._src.pool.AvgPool": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "haiku._src.pool.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.pool.AvgPool.__call__": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "haiku._src.pool.avg_pool",
    "jax.numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "haiku._src.pool.AvgPool.__init__": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "int",
    "str",
    "super",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.pool.MaxPool": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "haiku._src.pool.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.pool.MaxPool.__call__": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "haiku._src.pool.max_pool",
    "jax.numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "haiku._src.pool.MaxPool.__init__": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "int",
    "str",
    "super",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.pool.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "haiku._src.pool.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "haiku._src.pool.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "haiku._src.pool.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "haiku._src.pool._VMAP_SHAPE_INFERENCE_WARNING": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "haiku._src.pool._infer_shape": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "int",
    "isinstance",
    "jax.numpy.ndarray",
    "len",
    "range",
    "tuple",
    "typing.Optional",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.pool._warn_if_unsafe": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "DeprecationWarning",
    "haiku._src.pool._VMAP_SHAPE_INFERENCE_WARNING",
    "haiku._src.pool.warnings",
    "int",
    "isinstance",
    "unsafe"
   ]
  },
  "type": "function"
 },
 "haiku._src.pool.avg_pool": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.pool._infer_shape",
    "haiku._src.pool._warn_if_unsafe",
    "int",
    "jax.lax.add",
    "jax.lax.reduce_window",
    "jax.numpy.ndarray",
    "jax.numpy.ones_like",
    "numpy.prod",
    "str",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.pool.hk": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "haiku._src.pool.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.pool.lax": {
  "data": {
   "shadows": "jax.lax"
  },
  "type": "import"
 },
 "haiku._src.pool.max_pool": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.pool._infer_shape",
    "haiku._src.pool._warn_if_unsafe",
    "int",
    "jax.lax.max",
    "jax.lax.reduce_window",
    "jax.numpy.inf",
    "jax.numpy.ndarray",
    "str",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.pool.module": {
  "data": {
   "shadows": "haiku._src.module"
  },
  "type": "import"
 },
 "haiku._src.pool.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.pool.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "haiku._src.pool.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "haiku._src.pool_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "haiku._src.pool_test.AvgPoolTest": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.pool_test.AvgPoolTest.test_avg_pool_basic": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "haiku._src.pool.avg_pool",
    "jax.numpy.float32",
    "numpy.arange",
    "numpy.asarray",
    "numpy.broadcast_to",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "haiku._src.pool_test.AvgPoolTest.test_avg_pool_basic_with_inferred_shapes": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "haiku._src.pool.avg_pool",
    "jax.numpy.float32",
    "numpy.arange",
    "numpy.asarray",
    "numpy.broadcast_to",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "haiku._src.pool_test.AvgPoolTest.test_avg_pool_batch_vs_vmap": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "haiku._src.pool.avg_pool",
    "haiku._src.pool_test.functools",
    "haiku._src.pool_test.jax",
    "numpy.testing.assert_allclose",
    "p"
   ]
  },
  "type": "function"
 },
 "haiku._src.pool_test.AvgPoolTest.test_avg_pool_overlapping_windows": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "haiku._src.pool.avg_pool",
    "jax.numpy.float32",
    "numpy.arange",
    "numpy.asarray",
    "numpy.broadcast_to",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "haiku._src.pool_test.AvgPoolTest.test_avg_pool_same_padding": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "haiku._src.pool.avg_pool",
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "haiku._src.pool_test.AvgPoolTest.test_avg_pool_same_padding_class": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "avg_pool",
    "haiku._src.pool.AvgPool",
    "haiku._src.test_utils.transform_and_run",
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "haiku._src.pool_test.AvgPoolTest.test_avg_pool_same_padding_class_with_inferred_shapes": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "haiku._src.pool.AvgPool",
    "haiku._src.test_utils.transform_and_run",
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "haiku._src.pool_test.AvgPoolTest.test_avg_pool_same_padding_with_inferred_shapes": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "haiku._src.pool.avg_pool",
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "haiku._src.pool_test.AvgPoolTest.test_avg_pool_unbatched": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "haiku._src.pool.avg_pool",
    "jax.numpy.float32",
    "numpy.arange",
    "numpy.asarray",
    "numpy.broadcast_to",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "haiku._src.pool_test.AvgPoolTest.test_avg_pool_unbatched_vmapped": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "haiku._src.pool.avg_pool",
    "haiku._src.pool_test.functools",
    "haiku._src.pool_test.jax",
    "jax.numpy.float32",
    "numpy.arange",
    "numpy.asarray",
    "numpy.broadcast_to",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "haiku._src.pool_test.MaxPoolTest": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.pool_test.MaxPoolTest.test_max_pool_basic": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "haiku._src.pool.max_pool",
    "jax.numpy.float32",
    "numpy.arange",
    "numpy.asarray",
    "numpy.broadcast_to",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "haiku._src.pool_test.MaxPoolTest.test_max_pool_basic_with_inferred_shapes": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "haiku._src.pool.max_pool",
    "jax.numpy.float32",
    "numpy.arange",
    "numpy.asarray",
    "numpy.broadcast_to",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "haiku._src.pool_test.MaxPoolTest.test_max_pool_batch_vs_vmap": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "haiku._src.pool.max_pool",
    "haiku._src.pool_test.functools",
    "haiku._src.pool_test.jax",
    "numpy.testing.assert_allclose",
    "p"
   ]
  },
  "type": "function"
 },
 "haiku._src.pool_test.MaxPoolTest.test_max_pool_overlapping_windows": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "haiku._src.pool.max_pool",
    "jax.numpy.float32",
    "numpy.arange",
    "numpy.asarray",
    "numpy.broadcast_to",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "haiku._src.pool_test.MaxPoolTest.test_max_pool_same_padding": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "haiku._src.pool.max_pool",
    "jax.numpy.float32",
    "numpy.arange",
    "numpy.broadcast_to",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "haiku._src.pool_test.MaxPoolTest.test_max_pool_same_padding_class": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "haiku._src.pool.MaxPool",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.float32",
    "max_pool",
    "numpy.arange",
    "numpy.broadcast_to",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "haiku._src.pool_test.MaxPoolTest.test_max_pool_same_padding_class_with_inferred_shapes": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "haiku._src.pool.MaxPool",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.float32",
    "max_pool",
    "numpy.arange",
    "numpy.broadcast_to",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "haiku._src.pool_test.MaxPoolTest.test_max_pool_same_padding_with_inferred_shapes": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "haiku._src.pool.max_pool",
    "jax.numpy.float32",
    "numpy.arange",
    "numpy.broadcast_to",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "haiku._src.pool_test.MaxPoolTest.test_max_pool_unbatched": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "haiku._src.pool.max_pool",
    "jax.numpy.float32",
    "numpy.arange",
    "numpy.asarray",
    "numpy.broadcast_to",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "haiku._src.pool_test.MaxPoolTest.test_max_pool_unbatched_vmapped": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "haiku._src.pool.max_pool",
    "haiku._src.pool_test.functools",
    "haiku._src.pool_test.jax",
    "jax.numpy.float32",
    "numpy.arange",
    "numpy.asarray",
    "numpy.broadcast_to",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "haiku._src.pool_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.pool_test.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "haiku._src.pool_test.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.pool_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.pool_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.pool_test.pool": {
  "data": {
   "shadows": "haiku._src.pool"
  },
  "type": "import"
 },
 "haiku._src.pool_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.random": {
  "data": {},
  "type": "module"
 },
 "haiku._src.random.base": {
  "data": {
   "shadows": "haiku._src.base"
  },
  "type": "import"
 },
 "haiku._src.random.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "haiku._src.random.count_hk_rngs_requested": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "haiku._src.base.next_rng_key_internal",
    "haiku._src.random.contextlib",
    "orig_next_rng_key"
   ]
  },
  "type": "function"
 },
 "haiku._src.random.count_hk_rngs_requested.counting_next_rng_key": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "orig_next_rng_key"
   ]
  },
  "type": "function"
 },
 "haiku._src.random.data_structures": {
  "data": {
   "shadows": "haiku._src.data_structures"
  },
  "type": "import"
 },
 "haiku._src.random.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "haiku._src.random.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.random.optimize_rng_use": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "haiku._src.random.optimize_rng_use.wrapper": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "fun",
    "haiku._src.base.assert_context",
    "haiku._src.base.current_frame",
    "haiku._src.base.extract_state",
    "haiku._src.data_structures.to_immutable_dict",
    "haiku._src.random.count_hk_rngs_requested",
    "haiku._src.random.functools",
    "haiku._src.random.jax",
    "rng_count_f"
   ]
  },
  "type": "function"
 },
 "haiku._src.random.optimize_rng_use.wrapper.pure_fun": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "fun",
    "haiku._src.base.new_context"
   ]
  },
  "type": "function"
 },
 "haiku._src.random_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "haiku._src.random_test.RandomTest": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.random_test.RandomTest.test_optimize_rng_splitting": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "haiku._src.random.optimize_rng_use",
    "haiku._src.random_test.functools",
    "haiku._src.random_test.jax",
    "haiku._src.transform.transform",
    "numpy.testing.assert_allclose",
    "split_for_n",
    "tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.random_test.RandomTest.test_optimize_rng_splitting.f": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "haiku._src.base.next_rng_key"
   ]
  },
  "type": "function"
 },
 "haiku._src.random_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.random_test.base": {
  "data": {
   "shadows": "haiku._src.base"
  },
  "type": "import"
 },
 "haiku._src.random_test.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "haiku._src.random_test.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.random_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.random_test.random": {
  "data": {
   "shadows": "haiku._src.random"
  },
  "type": "import"
 },
 "haiku._src.random_test.split_for_n": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "haiku._src.random_test.jax",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.random_test.transform": {
  "data": {
   "shadows": "haiku._src.transform"
  },
  "type": "import"
 },
 "haiku._src.recurrent": {
  "data": {
   "symbols_in_volume": [
    "haiku._src.base",
    "haiku._src.base.get_parameter",
    "haiku._src.base.inside_transform",
    "haiku._src.basic",
    "haiku._src.basic.Linear",
    "haiku._src.conv",
    "haiku._src.conv.ConvND",
    "haiku._src.initializers",
    "haiku._src.module",
    "haiku._src.module.Module",
    "haiku._src.recurrent.hk",
    "haiku._src.recurrent.types",
    "haiku._src.stateful.scan"
   ]
  },
  "type": "module"
 },
 "haiku._src.recurrent.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "haiku._src.recurrent.Conv1DLSTM": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "__doc__",
    "haiku._src.recurrent.ConvNDLSTM"
   ]
  },
  "type": "class"
 },
 "haiku._src.recurrent.Conv1DLSTM.__init__": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "int",
    "str",
    "super",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent.Conv2DLSTM": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "__doc__",
    "haiku._src.recurrent.ConvNDLSTM"
   ]
  },
  "type": "class"
 },
 "haiku._src.recurrent.Conv2DLSTM.__init__": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "int",
    "str",
    "super",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent.Conv3DLSTM": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "__doc__",
    "haiku._src.recurrent.ConvNDLSTM"
   ]
  },
  "type": "class"
 },
 "haiku._src.recurrent.Conv3DLSTM.__init__": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "int",
    "str",
    "super",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent.ConvNDLSTM": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "haiku._src.recurrent.RNNCore"
   ]
  },
  "type": "class"
 },
 "haiku._src.recurrent.ConvNDLSTM.__call__": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "haiku._src.recurrent.LSTMState",
    "haiku._src.recurrent.hk",
    "haiku._src.recurrent.jax",
    "hidden_to_hidden",
    "input_to_hidden",
    "jax.numpy.ndarray",
    "jax.numpy.split",
    "jax.numpy.tanh",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent.ConvNDLSTM.__init__": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "int",
    "str",
    "super",
    "tuple",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent.ConvNDLSTM.initial_state": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "haiku._src.recurrent.LSTMState",
    "haiku._src.recurrent.add_batch",
    "int",
    "jax.numpy.zeros",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent.DeepRNN": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "haiku._src.recurrent._DeepRNN"
   ]
  },
  "type": "class"
 },
 "haiku._src.recurrent.DeepRNN.__init__": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent.GRU": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "haiku._src.recurrent.RNNCore"
   ]
  },
  "type": "class"
 },
 "haiku._src.recurrent.GRU.__call__": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.recurrent.hk",
    "haiku._src.recurrent.jax",
    "jax.numpy.broadcast_to",
    "jax.numpy.matmul",
    "jax.numpy.split",
    "jax.numpy.tanh"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent.GRU.__init__": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "haiku._src.recurrent.hk",
    "int",
    "jax.numpy.zeros",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent.GRU.initial_state": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "haiku._src.recurrent.add_batch",
    "int",
    "jax.numpy.zeros",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent.IdentityCore": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "haiku._src.recurrent.RNNCore"
   ]
  },
  "type": "class"
 },
 "haiku._src.recurrent.IdentityCore.__call__": {
  "data": {
   "lineno": 562
  },
  "type": "function"
 },
 "haiku._src.recurrent.IdentityCore.initial_state": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "int",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent.LSTM": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "haiku._src.recurrent.RNNCore"
   ]
  },
  "type": "class"
 },
 "haiku._src.recurrent.LSTM.__call__": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.recurrent.LSTMState",
    "haiku._src.recurrent.hk",
    "haiku._src.recurrent.jax",
    "jax.numpy.concatenate",
    "jax.numpy.ndarray",
    "jax.numpy.split",
    "jax.numpy.tanh",
    "len",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent.LSTM.__init__": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "int",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent.LSTM.initial_state": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "haiku._src.recurrent.LSTMState",
    "haiku._src.recurrent.add_batch",
    "int",
    "jax.numpy.zeros",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent.LSTMState": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "jax.numpy.ndarray",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "haiku._src.recurrent.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "haiku._src.recurrent.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "haiku._src.recurrent.RNNCore": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "haiku._src.recurrent.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.recurrent.RNNCore.__call__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "haiku._src.recurrent.abc",
    "typing.Any",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent.RNNCore.initial_state": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "haiku._src.recurrent.abc",
    "int",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent.ResetCore": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "haiku._src.recurrent.RNNCore"
   ]
  },
  "type": "class"
 },
 "haiku._src.recurrent.ResetCore.__call__": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "haiku._src.recurrent._validate_and_conform",
    "haiku._src.recurrent.jax",
    "jax.numpy.where"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent.ResetCore.__init__": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "core",
    "haiku._src.recurrent.RNNCore",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent.ResetCore._is_batched": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "all",
    "haiku._src.recurrent.jax",
    "zip"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent.ResetCore.initial_state": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "int",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "haiku._src.recurrent.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "haiku._src.recurrent.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "haiku._src.recurrent.VanillaRNN": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "haiku._src.recurrent.RNNCore"
   ]
  },
  "type": "class"
 },
 "haiku._src.recurrent.VanillaRNN.__call__": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "haiku._src.recurrent.hk",
    "haiku._src.recurrent.jax",
    "hidden_to_hidden",
    "input_to_hidden"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent.VanillaRNN.__init__": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent.VanillaRNN.initial_state": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "haiku._src.recurrent.add_batch",
    "int",
    "jax.numpy.zeros",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent._DeepRNN": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "haiku._src.recurrent.RNNCore"
   ]
  },
  "type": "class"
 },
 "haiku._src.recurrent._DeepRNN.__call__": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "enumerate",
    "haiku._src.recurrent.RNNCore",
    "haiku._src.recurrent.jax",
    "isinstance",
    "jax.numpy.concatenate",
    "layer",
    "tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent._DeepRNN.__init__": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.recurrent.RNNCore",
    "isinstance",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent._DeepRNN.initial_state": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "haiku._src.recurrent.RNNCore",
    "int",
    "isinstance",
    "layer",
    "layer.initial_state",
    "tuple",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent._swap_batch_time": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "haiku._src.recurrent.jax",
    "jax.numpy.swapaxes"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent._validate_and_conform": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "ValueError",
    "jax.numpy.reshape"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "haiku._src.recurrent.add_batch": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "haiku._src.recurrent.jax",
    "int",
    "jax.numpy.broadcast_to",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent.base": {
  "data": {
   "shadows": "haiku._src.base"
  },
  "type": "import"
 },
 "haiku._src.recurrent.basic": {
  "data": {
   "shadows": "haiku._src.basic"
  },
  "type": "import"
 },
 "haiku._src.recurrent.conv": {
  "data": {
   "shadows": "haiku._src.conv"
  },
  "type": "import"
 },
 "haiku._src.recurrent.deep_rnn_with_skip_connections": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "haiku._src.recurrent.RNNCore",
    "haiku._src.recurrent._DeepRNN",
    "str",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent.dynamic_unroll": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "haiku._src.recurrent._swap_batch_time",
    "haiku._src.recurrent.hk",
    "haiku._src.recurrent.inside_transform",
    "haiku._src.recurrent.jax",
    "scan"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent.dynamic_unroll.scan_f": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "core"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent.hk": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "haiku._src.recurrent.initializers": {
  "data": {
   "shadows": "haiku._src.initializers"
  },
  "type": "import"
 },
 "haiku._src.recurrent.inside_transform": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "haiku._src.recurrent.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.recurrent.jax.nn": {
  "data": {
   "shadows": "jax.nn"
  },
  "type": "import"
 },
 "haiku._src.recurrent.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.recurrent.module": {
  "data": {
   "shadows": "haiku._src.module"
  },
  "type": "import"
 },
 "haiku._src.recurrent.stateful": {
  "data": {
   "shadows": "haiku._src.stateful"
  },
  "type": "import"
 },
 "haiku._src.recurrent.static_unroll": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "core",
    "haiku._src.recurrent.jax",
    "jax.numpy.stack",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "haiku._src.recurrent_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "haiku._src.recurrent_test.BatchMajorUnrollTest": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.recurrent_test.BatchMajorUnrollTest.test_batch_major": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "core",
    "core.initial_state",
    "haiku._src.recurrent.LSTM",
    "haiku._src.recurrent.dynamic_unroll",
    "haiku._src.recurrent.static_unroll",
    "haiku._src.recurrent_test.jax",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.swapaxes",
    "numpy.random.randn",
    "numpy.testing.assert_array_equal",
    "unroll"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent_test.ConvLSTMTest": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.recurrent_test.ConvLSTMTest.test_connect_conv_same": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "core",
    "core.initial_state",
    "haiku._src.recurrent.ConvNDLSTM",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent_test.DeepRNNTest": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.recurrent_test.DeepRNNTest.test_connection_and_shapes": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "core",
    "core.initial_state",
    "haiku._src.basic.Linear",
    "haiku._src.recurrent.DeepRNN",
    "haiku._src.recurrent.VanillaRNN",
    "haiku._src.recurrent_test.jax",
    "haiku._src.recurrent_test.make_sequence",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.zeros",
    "numpy.all",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent_test.DeepRNNTest.test_only_callables": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "core",
    "core.initial_state",
    "haiku._src.recurrent.DeepRNN",
    "haiku._src.recurrent_test.make_sequence",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.square",
    "jax.numpy.tanh",
    "numpy.square",
    "numpy.tanh",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent_test.DeepRNNTest.test_skip_connections": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "core",
    "core.initial_state",
    "haiku._src.recurrent.VanillaRNN",
    "haiku._src.recurrent.deep_rnn_with_skip_connections",
    "haiku._src.recurrent_test.make_sequence",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent_test.DeepRNNTest.test_skip_validation": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.recurrent.deep_rnn_with_skip_connections",
    "haiku._src.recurrent_test.jax",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent_test.DuplicateCore": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "haiku._src.recurrent.RNNCore"
   ]
  },
  "type": "class"
 },
 "haiku._src.recurrent_test.DuplicateCore.__call__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "haiku._src.recurrent_test.DuplicateCore.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "haiku._src.recurrent.RNNCore",
    "super"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent_test.DuplicateCore.initial_state": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "haiku._src.recurrent_test.GRUTest": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.recurrent_test.GRUTest.test_gru_raises": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "ValueError",
    "core",
    "core.initial_state",
    "haiku._src.recurrent.GRU",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent_test.IdentityCoreTest": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.recurrent_test.IdentityCoreTest.test_identity_core_call": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "core",
    "haiku._src.recurrent.IdentityCore",
    "haiku._src.test_utils.transform_and_run",
    "object"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent_test.IdentityCoreTest.test_identity_core_initial_state": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "core",
    "core.initial_state",
    "haiku._src.recurrent.IdentityCore",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent_test.LSTMTest": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.recurrent_test.LSTMTest.test_lstm_raises": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ValueError",
    "core",
    "core.initial_state",
    "haiku._src.recurrent.LSTM",
    "haiku._src.recurrent_test.tree",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.expand_dims",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent_test.RecurrentTest": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "haiku._src.recurrent.GRU",
    "haiku._src.recurrent.LSTM",
    "haiku._src.recurrent.VanillaRNN",
    "haiku._src.recurrent.dynamic_unroll",
    "haiku._src.recurrent.static_unroll"
   ]
  },
  "type": "class"
 },
 "haiku._src.recurrent_test.RecurrentTest.test_add_batch": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "dict",
    "haiku._src.recurrent.add_batch",
    "haiku._src.recurrent_test.tree",
    "jax.numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent_test.RecurrentTest.test_core_unroll_batched": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "core_cls",
    "haiku._src.recurrent_test.make_sequence",
    "haiku._src.test_utils.transform_and_run",
    "itertools.product",
    "unroll"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent_test.RecurrentTest.test_core_unroll_nested": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "haiku._src.recurrent.VanillaRNN",
    "haiku._src.recurrent_test.DuplicateCore",
    "haiku._src.recurrent_test.make_sequence",
    "haiku._src.test_utils.transform_and_run",
    "unroll"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent_test.RecurrentTest.test_core_unroll_unbatched": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "core_cls",
    "haiku._src.recurrent_test.make_sequence",
    "haiku._src.test_utils.transform_and_run",
    "itertools.product",
    "unroll"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent_test.RecurrentTest.test_unroll_outside_transform": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "jax.numpy.arange",
    "numpy.testing.assert_allclose",
    "unroll"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent_test.ResetCoreTest": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.recurrent_test.ResetCoreTest.test_allow_batched_only_cores": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "core",
    "core.initial_state",
    "haiku._src.recurrent.ResetCore",
    "haiku._src.recurrent_test._BatchedOnlyCore",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent_test.ResetCoreTest.test_input_conform": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "core",
    "dict",
    "haiku._src.recurrent.ResetCore",
    "haiku._src.recurrent_test._DummyCore",
    "haiku._src.test_utils.transform_and_run",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent_test.ResetCoreTest.test_input_conform_fails": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "ValueError",
    "absl.testing.parameterized.parameters",
    "core",
    "dict",
    "haiku._src.recurrent.ResetCore",
    "haiku._src.recurrent_test._DummyCore",
    "haiku._src.test_utils.transform_and_run",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent_test.ResetCoreTest.test_resetting": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "haiku._src.recurrent.dynamic_unroll",
    "haiku._src.recurrent.static_unroll",
    "haiku._src.recurrent_test.jax",
    "haiku._src.recurrent_test.make_sequence",
    "haiku._src.transform.transform",
    "init_fn",
    "numpy.asarray",
    "numpy.stack",
    "numpy.testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent_test.ResetCoreTest.test_resetting.net": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "core",
    "core.initial_state",
    "dict",
    "haiku._src.recurrent.LSTM",
    "haiku._src.recurrent.ResetCore",
    "haiku._src.recurrent_test.static_unroll_with_states",
    "unroll"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent_test.ResetCoreTest.test_unbatched": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "core",
    "core.initial_state",
    "haiku._src.recurrent.ResetCore",
    "haiku._src.recurrent.dynamic_unroll",
    "haiku._src.recurrent.static_unroll",
    "haiku._src.recurrent_test._IncrementByOneCore",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.arange",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "unroll"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent_test.VanillaRNNTest": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.recurrent_test.VanillaRNNTest.test_double_bias_length_parameters": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "double_bias",
    "double_bias.initial_state",
    "double_bias.params_dict",
    "haiku._src.recurrent.VanillaRNN",
    "haiku._src.recurrent_test.jax",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.zeros",
    "len",
    "vanilla",
    "vanilla.initial_state",
    "vanilla.params_dict"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent_test._BatchedOnlyCore": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "haiku._src.recurrent.RNNCore"
   ]
  },
  "type": "class"
 },
 "haiku._src.recurrent_test._BatchedOnlyCore.__call__": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "haiku._src.recurrent_test._BatchedOnlyCore.initial_state": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent_test._DummyCore": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "haiku._src.recurrent.RNNCore"
   ]
  },
  "type": "class"
 },
 "haiku._src.recurrent_test._DummyCore.__call__": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "haiku._src.recurrent_test._DummyCore.__init__": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent_test._DummyCore.initial_state": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "haiku._src.recurrent_test.jax",
    "jax.numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent_test._IncrementByOneCore": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "haiku._src.recurrent.RNNCore"
   ]
  },
  "type": "class"
 },
 "haiku._src.recurrent_test._IncrementByOneCore.__call__": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "haiku._src.recurrent_test._IncrementByOneCore.__init__": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent_test._IncrementByOneCore.initial_state": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.recurrent_test.basic": {
  "data": {
   "shadows": "haiku._src.basic"
  },
  "type": "import"
 },
 "haiku._src.recurrent_test.it": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "haiku._src.recurrent_test.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.recurrent_test.jax.nn": {
  "data": {
   "shadows": "jax.nn"
  },
  "type": "import"
 },
 "haiku._src.recurrent_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.recurrent_test.make_sequence": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.product"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.recurrent_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.recurrent_test.recurrent": {
  "data": {
   "shadows": "haiku._src.recurrent"
  },
  "type": "import"
 },
 "haiku._src.recurrent_test.static_unroll_with_states": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "core",
    "haiku._src.recurrent_test.tree",
    "jax.numpy.stack",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.recurrent_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.recurrent_test.transform": {
  "data": {
   "shadows": "haiku._src.transform"
  },
  "type": "import"
 },
 "haiku._src.recurrent_test.tree": {
  "data": {
   "shadows": "tree"
  },
  "type": "import"
 },
 "haiku._src.reshape": {
  "data": {
   "symbols_in_volume": [
    "haiku._src.module",
    "haiku._src.module.Module",
    "haiku._src.reshape.hk",
    "haiku._src.reshape.types"
   ]
  },
  "type": "module"
 },
 "haiku._src.reshape.Flatten": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "haiku._src.reshape.Reshape"
   ]
  },
  "type": "class"
 },
 "haiku._src.reshape.Flatten.__init__": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "int",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.reshape.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "haiku._src.reshape.Reshape": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "haiku._src.reshape.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.reshape.Reshape.__call__": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "haiku._src.reshape._infer_shape",
    "jax.numpy.reshape"
   ]
  },
  "type": "function"
 },
 "haiku._src.reshape.Reshape.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "str",
    "super",
    "tuple",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "haiku._src.reshape.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "haiku._src.reshape._infer_shape": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "abs",
    "numpy.array",
    "numpy.prod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.reshape.hk": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "haiku._src.reshape.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.reshape.module": {
  "data": {
   "shadows": "haiku._src.module"
  },
  "type": "import"
 },
 "haiku._src.reshape.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.reshape.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "haiku._src.reshape_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "haiku._src.reshape_test.ReshapeTest": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.reshape_test.ReshapeTest.test_flatten": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn"
   ]
  },
  "type": "function"
 },
 "haiku._src.reshape_test.ReshapeTest.test_flatten.f": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "haiku._src.reshape.Flatten",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.reshape_test.ReshapeTest.test_flatten_1d": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "haiku._src.reshape.Flatten",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.zeros",
    "mod"
   ]
  },
  "type": "function"
 },
 "haiku._src.reshape_test.ReshapeTest.test_flatten_invalid_preserve_dims": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.reshape.Flatten",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.reshape_test.ReshapeTest.test_flatten_nd": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "haiku._src.reshape.Flatten",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.zeros",
    "mod"
   ]
  },
  "type": "function"
 },
 "haiku._src.reshape_test.ReshapeTest.test_invalid_multiple_wildcard": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.transform.transform",
    "init_fn"
   ]
  },
  "type": "function"
 },
 "haiku._src.reshape_test.ReshapeTest.test_invalid_multiple_wildcard.f": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "haiku._src.reshape.Reshape",
    "mod",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.reshape_test.ReshapeTest.test_invalid_type": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "TypeError",
    "haiku._src.transform.transform",
    "init_fn"
   ]
  },
  "type": "function"
 },
 "haiku._src.reshape_test.ReshapeTest.test_invalid_type.f": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "haiku._src.reshape.Reshape",
    "mod",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.reshape_test.ReshapeTest.test_reshape": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn",
    "jax.numpy.ones",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.reshape_test.ReshapeTest.test_reshape.f": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "haiku._src.reshape.Reshape"
   ]
  },
  "type": "function"
 },
 "haiku._src.reshape_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.reshape_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.reshape_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.reshape_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.reshape_test.reshape": {
  "data": {
   "shadows": "haiku._src.reshape"
  },
  "type": "import"
 },
 "haiku._src.reshape_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.reshape_test.transform": {
  "data": {
   "shadows": "haiku._src.transform"
  },
  "type": "import"
 },
 "haiku._src.spectral_norm": {
  "data": {
   "symbols_in_volume": [
    "haiku._src.base",
    "haiku._src.base.get_parameter",
    "haiku._src.base.get_state",
    "haiku._src.base.set_state",
    "haiku._src.data_structures",
    "haiku._src.initializers",
    "haiku._src.module",
    "haiku._src.module.Module",
    "haiku._src.spectral_norm.hk",
    "haiku._src.spectral_norm.types"
   ]
  },
  "type": "module"
 },
 "haiku._src.spectral_norm.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "haiku._src.spectral_norm.SNParamsTree": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "haiku._src.spectral_norm.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.spectral_norm.SNParamsTree.__call__": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "haiku._src.spectral_norm.hk",
    "maybe_sn"
   ]
  },
  "type": "function"
 },
 "haiku._src.spectral_norm.SNParamsTree.__call__.maybe_sn": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "haiku._src.spectral_norm.SpectralNorm",
    "haiku._src.spectral_norm.re"
   ]
  },
  "type": "function"
 },
 "haiku._src.spectral_norm.SNParamsTree.__init__": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "float",
    "int",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.spectral_norm.SpectralNorm": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "haiku._src.spectral_norm.hk"
   ]
  },
  "type": "class"
 },
 "haiku._src.spectral_norm.SpectralNorm.__call__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "haiku._src.spectral_norm._l2_normalize",
    "haiku._src.spectral_norm.hk",
    "haiku._src.spectral_norm.jax",
    "jax.numpy.asarray",
    "jax.numpy.matmul",
    "jax.numpy.ndarray",
    "jax.numpy.reshape",
    "jax.numpy.transpose",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.spectral_norm.SpectralNorm.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "float",
    "int",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.spectral_norm.SpectralNorm.sigma": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "haiku._src.spectral_norm.hk",
    "jax.numpy.ones",
    "property"
   ]
  },
  "type": "function"
 },
 "haiku._src.spectral_norm.SpectralNorm.u0": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "haiku._src.spectral_norm.hk",
    "property"
   ]
  },
  "type": "function"
 },
 "haiku._src.spectral_norm._l2_normalize": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "haiku._src.spectral_norm.jax"
   ]
  },
  "type": "function"
 },
 "haiku._src.spectral_norm.base": {
  "data": {
   "shadows": "haiku._src.base"
  },
  "type": "import"
 },
 "haiku._src.spectral_norm.data_structures": {
  "data": {
   "shadows": "haiku._src.data_structures"
  },
  "type": "import"
 },
 "haiku._src.spectral_norm.hk": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "haiku._src.spectral_norm.initializers": {
  "data": {
   "shadows": "haiku._src.initializers"
  },
  "type": "import"
 },
 "haiku._src.spectral_norm.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.spectral_norm.jax.lax": {
  "data": {
   "shadows": "jax.lax"
  },
  "type": "import"
 },
 "haiku._src.spectral_norm.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.spectral_norm.module": {
  "data": {
   "shadows": "haiku._src.module"
  },
  "type": "import"
 },
 "haiku._src.spectral_norm.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "haiku._src.spectral_norm.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "haiku._src.spectral_norm_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "haiku._src.spectral_norm_test.SNParamsTreeTest": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.spectral_norm_test.SNParamsTreeTest.test_sn_naming_scheme": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "haiku._src.transform.transform",
    "haiku._src.transform.transform_with_state",
    "init_fn",
    "jax.random.PRNGKey"
   ]
  },
  "type": "function"
 },
 "haiku._src.spectral_norm_test.SNParamsTreeTest.test_sn_naming_scheme.f": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "haiku._src.basic.Linear",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.spectral_norm_test.SNParamsTreeTest.test_sn_naming_scheme.g": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "haiku._src.spectral_norm.SNParamsTree"
   ]
  },
  "type": "function"
 },
 "haiku._src.spectral_norm_test.SpectralNormTest": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "absl.testing.absltest.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.spectral_norm_test.SpectralNormTest.test_3d_tensor": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.spectral_norm.SpectralNorm",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.eye",
    "sn"
   ]
  },
  "type": "function"
 },
 "haiku._src.spectral_norm_test.SpectralNormTest.test_matrix": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "haiku._src.spectral_norm.SpectralNorm",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.eye",
    "numpy.testing.assert_allclose",
    "sn",
    "sn.sigma"
   ]
  },
  "type": "function"
 },
 "haiku._src.spectral_norm_test.SpectralNormTest.test_matrix_multiple_steps": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "haiku._src.spectral_norm.SpectralNorm",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.eye",
    "numpy.testing.assert_allclose",
    "sn",
    "sn.sigma"
   ]
  },
  "type": "function"
 },
 "haiku._src.spectral_norm_test.SpectralNormTest.test_matrix_no_stats": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "haiku._src.spectral_norm.SpectralNorm",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.eye",
    "numpy.testing.assert_allclose",
    "sn",
    "sn.sigma"
   ]
  },
  "type": "function"
 },
 "haiku._src.spectral_norm_test.SpectralNormTest.test_scalar": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.spectral_norm.SpectralNorm",
    "haiku._src.test_utils.transform_and_run",
    "sn"
   ]
  },
  "type": "function"
 },
 "haiku._src.spectral_norm_test.SpectralNormTest.test_vector": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.spectral_norm.SpectralNorm",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "sn"
   ]
  },
  "type": "function"
 },
 "haiku._src.spectral_norm_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.spectral_norm_test.basic": {
  "data": {
   "shadows": "haiku._src.basic"
  },
  "type": "import"
 },
 "haiku._src.spectral_norm_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.spectral_norm_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.spectral_norm_test.random": {
  "data": {
   "shadows": "jax.random"
  },
  "type": "import"
 },
 "haiku._src.spectral_norm_test.spectral_norm": {
  "data": {
   "shadows": "haiku._src.spectral_norm"
  },
  "type": "import"
 },
 "haiku._src.spectral_norm_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.spectral_norm_test.transform": {
  "data": {
   "shadows": "haiku._src.transform"
  },
  "type": "import"
 },
 "haiku._src.stateful": {
  "data": {
   "symbols_in_volume": [
    "haiku._src.stateful.Box",
    "haiku._src.stateful.collections",
    "haiku._src.stateful.jax",
    "haiku._src.stateful.thread_hk_state_in_kwargs",
    "str",
    "typing.Any",
    "typing.Mapping",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "haiku._src.stateful.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "haiku._src.stateful.Box": {
  "data": {
   "lineno": 230
  },
  "type": "class"
 },
 "haiku._src.stateful.Box.__init__": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "haiku._src.stateful.Bundle": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "haiku._src.stateful.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "haiku._src.stateful.InternalState": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "haiku._src.stateful.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "haiku._src.stateful.MutableMapping": {
  "data": {
   "shadows": "typing.MutableMapping"
  },
  "type": "import"
 },
 "haiku._src.stateful.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "haiku._src.stateful.T": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "haiku._src.stateful.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "haiku._src.stateful.TwoLevelMapping": {
  "data": {
   "lineno": 236
  },
  "type": "constant"
 },
 "haiku._src.stateful.TwoLevelMappingToBox": {
  "data": {
   "lineno": 237
  },
  "type": "constant"
 },
 "haiku._src.stateful.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "haiku._src.stateful._new_cond": {
  "data": {
   "lineno": 383
  },
  "type": "function"
 },
 "haiku._src.stateful._old_cond": {
  "data": {
   "lineno": 387
  },
  "type": "function"
 },
 "haiku._src.stateful.base": {
  "data": {
   "shadows": "haiku._src.base"
  },
  "type": "import"
 },
 "haiku._src.stateful.box_and_fill_missing": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "haiku._src.stateful.Box",
    "haiku._src.stateful.TwoLevelMapping",
    "haiku._src.stateful.TwoLevelMappingToBox",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "haiku._src.stateful.cond": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "f",
    "haiku._src.base.inside_transform",
    "haiku._src.stateful._new_cond",
    "haiku._src.stateful._old_cond",
    "haiku._src.stateful.inspect",
    "haiku._src.stateful.internal_state",
    "haiku._src.stateful.jax",
    "haiku._src.stateful.reserve_up_to_full_rng_block",
    "haiku._src.stateful.stateful_branch",
    "haiku._src.stateful.update_internal_state"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.copy_structure": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "haiku._src.stateful.T",
    "haiku._src.stateful.jax"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.difference": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "haiku._src.stateful.InternalState",
    "haiku._src.stateful.box_and_fill_missing",
    "haiku._src.stateful.functools",
    "haiku._src.stateful.jax",
    "is_new_rng"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.difference.if_changed": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "is_new"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.difference.is_new_rng": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "haiku._src.base.PRNGSequenceState",
    "len",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.difference.is_new_state": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "haiku._src.base.StatePair"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.fori_loop": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "ValueError",
    "body_fun",
    "haiku._src.base.inside_transform",
    "haiku._src.base.params_frozen",
    "haiku._src.stateful.internal_state",
    "haiku._src.stateful.jax",
    "haiku._src.stateful.reserve_up_to_full_rng_block",
    "haiku._src.stateful.update_internal_state"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.fori_loop.pure_body_fun": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "body_fun",
    "haiku._src.stateful.internal_state",
    "haiku._src.stateful.reserve_up_to_full_rng_block",
    "haiku._src.stateful.temporary_internal_state"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "haiku._src.stateful.grad": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "value_and_grad"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.grad.grad_fn": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "value_and_grad_fun"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "haiku._src.stateful.internal_state": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "haiku._src.base.current_frame",
    "haiku._src.stateful.InternalState",
    "haiku._src.stateful.copy_structure"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.stateful.jit": {
  "data": {
   "lineno": 367
  },
  "type": "constant"
 },
 "haiku._src.stateful.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.stateful.named_call": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.named_call.wrapper": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "fun",
    "haiku._src.base.inside_transform",
    "haiku._src.stateful.functools",
    "haiku._src.stateful.jax",
    "haiku._src.stateful.thread_hk_state_in_kwargs",
    "named_fun",
    "stateful_named_call"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.remat": {
  "data": {
   "lineno": 368
  },
  "type": "constant"
 },
 "haiku._src.stateful.reserve_up_to_full_rng_block": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "haiku._src.base.current_frame"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.scan": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "haiku._src.base.inside_transform",
    "haiku._src.base.params_frozen",
    "haiku._src.stateful.internal_state",
    "haiku._src.stateful.jax",
    "haiku._src.stateful.reserve_up_to_full_rng_block",
    "haiku._src.stateful.update_internal_state",
    "jax.numpy.concatenate",
    "jax.numpy.expand_dims",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.scan.stateful_fun": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "f",
    "haiku._src.base.assert_no_new_parameters",
    "haiku._src.stateful.internal_state",
    "haiku._src.stateful.reserve_up_to_full_rng_block",
    "haiku._src.stateful.temporary_internal_state"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.stateful_branch": {
  "data": {
   "lineno": 371
  },
  "type": "function"
 },
 "haiku._src.stateful.stateful_branch.new_branch_fun": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "branch_fun",
    "haiku._src.stateful.functools",
    "haiku._src.stateful.internal_state",
    "haiku._src.stateful.reserve_up_to_full_rng_block",
    "haiku._src.stateful.temporary_internal_state"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.switch": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.base.inside_transform",
    "haiku._src.stateful.internal_state",
    "haiku._src.stateful.jax",
    "haiku._src.stateful.reserve_up_to_full_rng_block",
    "haiku._src.stateful.stateful_branch",
    "haiku._src.stateful.update_internal_state",
    "map",
    "tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.temporary_internal_state": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "haiku._src.base.PRNGSequence",
    "haiku._src.base.current_frame",
    "haiku._src.base.frame_stack",
    "haiku._src.stateful.InternalState",
    "haiku._src.stateful.copy_structure",
    "haiku._src.stateful.internal_state"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.thread_hk_state_in_kwargs": {
  "data": {
   "lineno": 335
  },
  "type": "function"
 },
 "haiku._src.stateful.thread_hk_state_in_kwargs.wrapped_dec_fun": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "ValueError",
    "dec_fun",
    "haiku._src.base.inside_transform"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.thread_hk_state_in_kwargs.wrapped_dec_fun.stateful_fun": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "fun",
    "haiku._src.stateful.difference",
    "haiku._src.stateful.functools",
    "haiku._src.stateful.internal_state",
    "haiku._src.stateful.temporary_internal_state"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.thread_hk_state_in_kwargs.wrapped_dec_fun.wrapper": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "dec_stateful_fun",
    "haiku._src.stateful.functools",
    "haiku._src.stateful.internal_state",
    "haiku._src.stateful.update_internal_state"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.update_internal_state": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "haiku._src.base.current_frame",
    "haiku._src.stateful.InternalState",
    "haiku._src.stateful.update_recursive"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.update_recursive": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "haiku._src.stateful.collections",
    "isinstance",
    "typing.Any",
    "typing.Mapping",
    "typing.MutableMapping"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.value_and_grad": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.base.inside_transform",
    "haiku._src.stateful.jax"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.value_and_grad.stateful_fun": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "difference",
    "fun",
    "haiku._src.stateful.functools",
    "haiku._src.stateful.internal_state",
    "haiku._src.stateful.temporary_internal_state"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.value_and_grad.wrapper": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "grad_fun",
    "haiku._src.stateful.functools",
    "haiku._src.stateful.internal_state",
    "haiku._src.stateful.update_internal_state"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.vmap": {
  "data": {
   "lineno": 528
  },
  "type": "function"
 },
 "haiku._src.stateful.vmap.mapped_fun": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "fun",
    "haiku._src.stateful.functools",
    "haiku._src.stateful.internal_state",
    "haiku._src.stateful.jax",
    "haiku._src.stateful.update_internal_state",
    "mapped_pure_fun"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.vmap.pure_fun": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "fun",
    "haiku._src.stateful.difference",
    "haiku._src.stateful.internal_state",
    "haiku._src.stateful.temporary_internal_state"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.while_loop": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.base.params_frozen",
    "haiku._src.stateful.internal_state",
    "haiku._src.stateful.jax",
    "haiku._src.stateful.update_internal_state"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.while_loop.pure_body_fun": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "body_fun",
    "haiku._src.stateful.internal_state",
    "haiku._src.stateful.temporary_internal_state"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful.while_loop.pure_cond_fun": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "ValueError",
    "cond_fun",
    "haiku._src.base.StateChangedError",
    "haiku._src.base.assert_state_unchanged"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "haiku._src.stateful_test.CountingModule": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "haiku._src.module.Module"
   ]
  },
  "type": "class"
 },
 "haiku._src.stateful_test.CountingModule.__call__": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "haiku._src.base.set_state"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.CountingModule.__init__": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "jax.numpy.square",
    "super"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.CountingModule.count": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "haiku._src.base.get_state",
    "jax.numpy.zeros",
    "property"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.SquareModule": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "haiku._src.module.Module"
   ]
  },
  "type": "class"
 },
 "haiku._src.stateful_test.SquareModule.__call__": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "haiku._src.base.get_parameter",
    "haiku._src.base.set_state",
    "jax.numpy.array",
    "jax.numpy.int32"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.stateful_test.StatefulTest.test_cond": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "haiku._src.transform.transform_with_state",
    "jax.numpy.array",
    "map"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_cond.f": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "SquareModule",
    "haiku._src.stateful.cond",
    "mod"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_cond_no_transform": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.stateful.cond",
    "jax.numpy.array"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_difference_empty": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "haiku._src.stateful.difference",
    "haiku._src.stateful.internal_state",
    "haiku._src.stateful_test.jax",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_difference_new": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "get_x",
    "haiku._src.base.StatePair",
    "haiku._src.base.get_parameter",
    "haiku._src.base.get_state",
    "haiku._src.stateful.difference",
    "haiku._src.stateful.internal_state",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_difference_rng": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "haiku._src.base.next_rng_key",
    "haiku._src.stateful.difference",
    "haiku._src.stateful.internal_state",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_difference_update_state": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "haiku._src.base.StatePair",
    "haiku._src.base.get_state",
    "haiku._src.base.set_state",
    "haiku._src.stateful.difference",
    "haiku._src.stateful.internal_state",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.ones",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_fori": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "CountingModule",
    "absl.testing.parameterized.parameters",
    "haiku._src.stateful.fori_loop",
    "haiku._src.test_utils.transform_and_run",
    "itertools.product",
    "jax.numpy.square",
    "m",
    "m.count"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_grad": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "SquareModule",
    "haiku._src.stateful.grad",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_grad_and_jit": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "haiku._src.stateful_test.jax",
    "haiku._src.transform.transform_with_state",
    "jax.numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_grad_and_jit.f": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "SquareModule",
    "haiku._src.stateful.grad"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_grad_aux": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "haiku._src.stateful.grad",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.array",
    "numpy.testing.assert_allclose",
    "object"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_grad_aux.f": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "SquareModule",
    "m"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_grad_no_transform": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.stateful.grad",
    "jax.numpy.array"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_jit": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "SquareModule",
    "haiku._src.stateful.jit",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.array"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_jit_no_transform": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.stateful.jit",
    "jax.numpy.array"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_named_call": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "haiku._src.stateful_test.jax",
    "haiku._src.transform.transform_with_state",
    "init",
    "jax.numpy.array"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_named_call.f": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "SquareModule",
    "haiku._src.stateful.named_call"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_named_call_default_name": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "f",
    "haiku._src.stateful_test.jax"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_named_call_default_name.f": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "haiku._src.stateful_test.jax",
    "naming_things_is_hard"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_named_call_default_name.naming_things_is_hard": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "haiku._src.stateful.named_call"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_named_call_jax_transforms": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "haiku._src.stateful.named_call",
    "haiku._src.stateful_test.jax",
    "jax.numpy.array",
    "jax.numpy.sum",
    "jax_transform"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_named_call_non_jaxtype_arg": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "f",
    "haiku._src.stateful.named_call",
    "haiku._src.stateful_test.jax"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_named_call_non_jaxtype_arg.f": {
  "data": {
   "lineno": 470
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_named_call_partial_function": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "f",
    "haiku._src.stateful.named_call",
    "haiku._src.stateful_test.functools",
    "haiku._src.stateful_test.jax"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_remat": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "_callback_prim",
    "haiku._src.test_utils.transform_and_run",
    "test"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_remat.test": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "CountingModule",
    "callback",
    "haiku._src.stateful.remat",
    "haiku._src.stateful.value_and_grad",
    "jax.numpy.array",
    "len",
    "mod",
    "mod.count",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_remat_no_transform": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.stateful.remat",
    "jax.numpy.array"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_rng_in_cond_fails": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.stateful_test.jax",
    "haiku._src.transform.transform_with_state",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_rng_in_cond_fails.f": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "CountingModule",
    "haiku._src.base.next_rng_key",
    "haiku._src.base.params_frozen",
    "haiku._src.stateful.while_loop",
    "m"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_scan_no_transform": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.stateful.scan",
    "jax.numpy.arange"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_scan_with_state": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "haiku._src.stateful_test.jax",
    "haiku._src.transform.transform_with_state",
    "jax.numpy.arange",
    "list",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_scan_with_state.f": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "CountingModule",
    "haiku._src.stateful.scan",
    "m"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_scan_with_state.f.sf": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "m"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_stateful_cond_with_rng_use": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "haiku._src.base.DEFAULT_PRNG_RESERVE_SIZE",
    "haiku._src.base.reserve_rng_keys",
    "haiku._src.stateful.cond",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_stateful_cond_with_rng_use.false_branch": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "haiku._src.base.next_rng_key"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_stateful_cond_with_rng_use.true_branch": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "haiku._src.base.next_rng_key"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_stateful_fori_with_rng_use": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "haiku._src.base.DEFAULT_PRNG_RESERVE_SIZE",
    "haiku._src.base.reserve_rng_keys",
    "haiku._src.stateful.fori_loop",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_stateful_fori_with_rng_use.body_fun": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "haiku._src.base.next_rng_key",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_stateful_scan_with_rng_use": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "haiku._src.base.DEFAULT_PRNG_RESERVE_SIZE",
    "haiku._src.base.reserve_rng_keys",
    "haiku._src.stateful.scan",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_stateful_scan_with_rng_use.body_fun": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "haiku._src.base.next_rng_key",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_stateful_switch_with_rng_use": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "branch_f",
    "haiku._src.base.DEFAULT_PRNG_RESERVE_SIZE",
    "haiku._src.base.reserve_rng_keys",
    "haiku._src.stateful.switch",
    "haiku._src.test_utils.transform_and_run",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_stateful_switch_with_rng_use.branch_f": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "haiku._src.base.next_rng_key",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_static_argnums_named_call": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "f",
    "haiku._src.stateful.named_call",
    "haiku._src.stateful_test.jax"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_switch": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "haiku._src.transform.transform_with_state",
    "jax.numpy.array",
    "map"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_switch.f": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "SquareModule",
    "haiku._src.stateful.switch",
    "mod"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_switch_no_transform": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.stateful.switch",
    "jax.numpy.array"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_updating_state_in_cond_fails": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.transform.transform_with_state",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_updating_state_in_cond_fails.f": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "CountingModule",
    "haiku._src.base.params_frozen",
    "haiku._src.stateful.while_loop",
    "m"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_value_and_grad": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "SquareModule",
    "haiku._src.stateful.value_and_grad",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_value_and_grad_and_jit": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "haiku._src.stateful_test.jax",
    "haiku._src.transform.transform_with_state",
    "jax.numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_value_and_grad_and_jit.f": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "SquareModule",
    "haiku._src.stateful.value_and_grad"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_value_and_grad_aux": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "haiku._src.stateful.value_and_grad",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.array",
    "jax.numpy.float_power",
    "numpy.testing.assert_allclose",
    "object"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_value_and_grad_aux.f": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "SquareModule",
    "m"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_value_and_grad_no_transform": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.stateful.value_and_grad",
    "jax.numpy.array"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_vmap": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "haiku._src.stateful_test.jax",
    "haiku._src.transform.transform_with_state",
    "jax.numpy.ones",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_vmap.f": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "haiku._src.stateful.vmap"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_vmap.g": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "CountingModule"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_while_loop_rejected_in_init": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.transform.transform"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_while_loop_rejected_in_init.f": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "haiku._src.stateful.while_loop"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_while_loop_with_state": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "haiku._src.transform.transform_with_state",
    "jax.numpy.zeros",
    "list",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.StatefulTest.test_while_loop_with_state.f": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "CountingModule",
    "haiku._src.base.params_frozen",
    "haiku._src.stateful.while_loop",
    "m"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test._callback_prim": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "haiku._src.stateful_test.jax"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test._callback_prim.b_impl": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "backward"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test._callback_prim.f_impl": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "forward"
   ]
  },
  "type": "function"
 },
 "haiku._src.stateful_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.stateful_test.base": {
  "data": {
   "shadows": "haiku._src.base"
  },
  "type": "import"
 },
 "haiku._src.stateful_test.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "haiku._src.stateful_test.it": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "haiku._src.stateful_test.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.stateful_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.stateful_test.module": {
  "data": {
   "shadows": "haiku._src.module"
  },
  "type": "import"
 },
 "haiku._src.stateful_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.stateful_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.stateful_test.stateful": {
  "data": {
   "shadows": "haiku._src.stateful"
  },
  "type": "import"
 },
 "haiku._src.stateful_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.stateful_test.transform": {
  "data": {
   "shadows": "haiku._src.transform"
  },
  "type": "import"
 },
 "haiku._src.test_utils": {
  "data": {
   "symbols_in_volume": [
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "haiku._src.test_utils.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "haiku._src.test_utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "haiku._src.test_utils.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "haiku._src.test_utils.T": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "haiku._src.test_utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "haiku._src.test_utils.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "haiku._src.test_utils.combined_named_parameters": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "haiku._src.test_utils.functools",
    "haiku._src.test_utils.itertools"
   ]
  },
  "type": "function"
 },
 "haiku._src.test_utils.find_internal_python_modules": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "dir",
    "getattr",
    "haiku._src.test_utils.inspect",
    "haiku._src.test_utils.types",
    "set",
    "sorted",
    "str",
    "typing.Sequence",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.test_utils.find_subclasses": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "haiku._src.test_utils.T",
    "haiku._src.test_utils.find_internal_python_modules",
    "haiku._src.test_utils.inspect",
    "haiku._src.test_utils.types",
    "issubclass",
    "set",
    "typing.Generator"
   ]
  },
  "type": "function"
 },
 "haiku._src.test_utils.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "haiku._src.test_utils.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "haiku._src.test_utils.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "haiku._src.test_utils.named_bools": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Sequence",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.test_utils.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.test_utils.random": {
  "data": {
   "shadows": "jax.random"
  },
  "type": "import"
 },
 "haiku._src.test_utils.transform": {
  "data": {
   "shadows": "haiku._src.transform"
  },
  "type": "import"
 },
 "haiku._src.test_utils.transform_and_run": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "bool",
    "haiku._src.test_utils.functools",
    "int",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.test_utils.transform_and_run.wrapper": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "f",
    "haiku._src.test_utils.functools",
    "haiku._src.transform.transform_with_state",
    "jax.random.PRNGKey"
   ]
  },
  "type": "function"
 },
 "haiku._src.test_utils.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "haiku._src.transform": {
  "data": {
   "symbols_in_volume": [
    "haiku._src.base.PRNGSequence",
    "haiku._src.transform.RNG_ERROR_TPL",
    "haiku._src.transform.Transformed",
    "haiku._src.transform.TransformedWithState",
    "haiku._src.transform.hk",
    "haiku._src.transform.types",
    "haiku._src.typing",
    "haiku._src.typing.PRNGKey",
    "haiku._src.typing.Params",
    "haiku._src.typing.State",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "haiku._src.transform.APPLY_RNG_ERROR": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "haiku._src.transform.APPLY_RNG_STATE_ERROR": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "haiku._src.transform.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "haiku._src.transform.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "haiku._src.transform.INIT_RNG_ERROR": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "haiku._src.transform.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "haiku._src.transform.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "haiku._src.transform.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "haiku._src.transform.PRNGKey": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "haiku._src.transform.RNG_ERROR_TPL": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "haiku._src.transform.T": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "haiku._src.transform.Transformed": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "haiku._src.transform.hk",
    "typing.Any",
    "typing.Callable",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "haiku._src.transform.TransformedT": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "haiku._src.transform.TransformedWithState": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "haiku._src.transform.hk",
    "typing.Any",
    "typing.Callable",
    "typing.NamedTuple",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "haiku._src.transform.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "haiku._src.transform.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "haiku._src.transform.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "haiku._src.transform.analytics": {
  "data": {
   "shadows": "haiku._src.analytics"
  },
  "type": "import"
 },
 "haiku._src.transform.base": {
  "data": {
   "shadows": "haiku._src.base"
  },
  "type": "import"
 },
 "haiku._src.transform.check_mapping": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "haiku._src.transform.T",
    "isinstance",
    "str",
    "typing.Mapping",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform.hk": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "haiku._src.transform.running_init": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "bool",
    "haiku._src.base.assert_context",
    "haiku._src.base.params_frozen"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform.to_prng_sequence": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "haiku._src.transform.hk",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform.transform": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.analytics.log_once",
    "haiku._src.transform.Transformed",
    "haiku._src.transform.without_state",
    "transform_with_state"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform.transform_with_state": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "f",
    "haiku._src.analytics.log_once",
    "haiku._src.transform.TransformedWithState"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform.transform_with_state.apply_fn": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "check_mapping",
    "f",
    "haiku._src.base.new_context",
    "haiku._src.transform.APPLY_RNG_ERROR",
    "haiku._src.transform.APPLY_RNG_STATE_ERROR",
    "haiku._src.transform.PRNGKey",
    "haiku._src.transform.hk",
    "haiku._src.transform.to_prng_sequence",
    "int",
    "typing.Any",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform.transform_with_state.init_fn": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "f",
    "haiku._src.base.new_context",
    "haiku._src.transform.INIT_RNG_ERROR",
    "haiku._src.transform.PRNGKey",
    "haiku._src.transform.hk",
    "haiku._src.transform.to_prng_sequence",
    "int",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "haiku._src.transform.typing": {
  "data": {
   "shadows": "haiku._src.typing"
  },
  "type": "import"
 },
 "haiku._src.transform.without_apply_rng": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.transform.Transformed",
    "haiku._src.transform.TransformedT",
    "haiku._src.transform.TransformedWithState",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform.without_apply_rng.apply_fn": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "haiku._src.transform.without_state": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "haiku._src.transform.Transformed",
    "haiku._src.transform.TransformedWithState"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform.without_state.apply_fn": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform.without_state.init_fn": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "haiku._src.transform_test.ObjectWithTransform": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "haiku._src.transform_test.ObjectWithTransform.__init__": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "haiku._src.transform.transform"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.ObjectWithTransform._forward": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "haiku._src.base.get_parameter",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.ObjectWithTransform._trampoline": {
  "data": {
   "lineno": 413
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.transform_test.TransformTest.test_argspec": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "apply_fn",
    "haiku._src.transform.transform_with_state",
    "haiku._src.transform_test.inspect",
    "init_fn"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_context_copies_input": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "haiku._src.base.get_parameter",
    "haiku._src.base.new_context",
    "haiku._src.base.set_state",
    "jax.numpy.array",
    "jax.numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_get_state_no_init": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "apply_fn",
    "haiku._src.base.get_state",
    "haiku._src.transform.transform_with_state",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_get_state_no_init_raises": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ValueError",
    "apply_fn",
    "haiku._src.base.get_state",
    "haiku._src.transform.transform_with_state",
    "init_fn"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_get_state_no_shape_raises": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "ValueError",
    "apply_fn",
    "haiku._src.base.get_state",
    "haiku._src.transform.transform_with_state",
    "init_fn",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_init_custom_creator": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "haiku._src.transform.transform",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_init_custom_creator.f": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "haiku._src.base.custom_creator",
    "haiku._src.base.get_parameter",
    "jax.numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_init_custom_creator.zeros_creator": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "jax.numpy.float32",
    "jax.numpy.ones",
    "jax.numpy.zeros",
    "next_creator"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_inline_use": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "haiku._src.transform.transform",
    "haiku._src.transform_test.jax"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_inline_use.f": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "haiku._src.base.get_parameter",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_invalid_params": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "TypeError",
    "haiku._src.transform.transform_with_state"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_invalid_rng": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.transform.transform"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_invalid_rng_none_ignored": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "haiku._src.transform.transform",
    "haiku._src.transform.transform_with_state",
    "isinstance",
    "transform_fn",
    "tuple"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_invalid_rng_state": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.transform.transform_with_state"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_invalid_state": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "TypeError",
    "haiku._src.transform.transform_with_state"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_maybe_no_rng": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "haiku._src.base.maybe_next_rng_key",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_maybe_rng_no_transform": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.base.maybe_next_rng_key"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_maybe_rng_vs_not": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "jax.numpy.all",
    "jax.numpy.array",
    "maybe_three",
    "three"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_maybe_rng_vs_not.maybe_three": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "haiku._src.base.maybe_next_rng_key",
    "haiku._src.test_utils.transform_and_run",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_maybe_rng_vs_not.three": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "haiku._src.base.next_rng_key",
    "haiku._src.test_utils.transform_and_run",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_method": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "ObjectWithTransform",
    "haiku._src.transform_test.jax",
    "jax.numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_naked_get_parameter": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "haiku._src.base.get_parameter",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_naked_parameter_in_tilde_collection": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "haiku._src.transform.transform",
    "init_fn",
    "jax.numpy.ones",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_naked_parameter_in_tilde_collection.net": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "haiku._src.base.get_parameter",
    "jax.numpy.ones",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_nested_creators": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "haiku._src.transform.transform"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_nested_creators.f": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "haiku._src.base.custom_creator",
    "haiku._src.base.get_parameter",
    "jax.numpy.ones",
    "map"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_nested_creators.logging_creator": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_nested_creators.logging_creator._logging_creator": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "next_creator"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_new_context": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "haiku._src.base.new_context"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_no_rng": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.base.next_rng_key",
    "haiku._src.test_utils.transform_and_run"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_not_triggered_in_apply": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "apply_fn",
    "haiku._src.transform.transform",
    "init_fn"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_not_triggered_in_apply.counting_creator": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "next_creator"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_not_triggered_in_apply.net": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "haiku._src.base.custom_creator",
    "haiku._src.base.get_parameter",
    "jax.numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_parameter_in_apply": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ValueError",
    "absl.testing.parameterized.parameters",
    "apply_fn",
    "haiku._src.base.get_parameter",
    "haiku._src.transform.transform",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_parameter_reuse": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "haiku._src.base.get_parameter",
    "haiku._src.test_utils.transform_and_run",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_params": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "haiku._src.transform.transform",
    "init_fn",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_params.f": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "haiku._src.base.get_parameter",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_prng_sequence": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "haiku._src.base.PRNGSequence",
    "haiku._src.transform_test.jax",
    "next"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_prng_sequence_invalid_input": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.base.PRNGSequence"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_prng_sequence_wrong_shape": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.base.PRNGSequence",
    "haiku._src.transform_test.jax"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_running_init": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "haiku._src.transform.running_init",
    "haiku._src.transform.transform"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_running_init_outside_transform": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.transform.running_init"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_set_then_get": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "apply_fn",
    "haiku._src.transform.transform_with_state",
    "init_fn",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_set_then_get.net": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "haiku._src.base.get_state",
    "haiku._src.base.set_state"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_stateful": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "apply_fn",
    "haiku._src.transform.transform_with_state",
    "init_fn"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_stateful.f": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "haiku._src.base.get_state",
    "haiku._src.base.set_state",
    "jax.numpy.int32",
    "jax.numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_trampoline": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "ObjectWithTransform",
    "jax.numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_with_rng": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "haiku._src.transform.transform",
    "haiku._src.transform_test.jax"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_with_rng.with_decorator": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "haiku._src.base.next_rng_key",
    "haiku._src.base.with_rng",
    "haiku._src.transform_test.jax"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_with_rng.without_decorator": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "haiku._src.base.next_rng_key",
    "haiku._src.transform_test.jax"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_without_state": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "apply_fn",
    "haiku._src.transform.transform_with_state",
    "haiku._src.transform.without_state",
    "init_fn"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_without_state.f": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "haiku._src.base.get_parameter",
    "jax.numpy.zeros"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_without_state_raises_if_state_used": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.transform.transform_with_state",
    "haiku._src.transform.without_state",
    "init_fn"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_without_state_raises_if_state_used.f": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "haiku._src.base.get_state",
    "haiku._src.base.set_state",
    "jax.numpy.int32",
    "jax.numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.TransformTest.test_without_state_raises_if_state_used_on_apply": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.base.set_state",
    "haiku._src.transform.transform_with_state",
    "haiku._src.transform.without_state",
    "haiku._src.transform_test.jax"
   ]
  },
  "type": "function"
 },
 "haiku._src.transform_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.transform_test.base": {
  "data": {
   "shadows": "haiku._src.base"
  },
  "type": "import"
 },
 "haiku._src.transform_test.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "haiku._src.transform_test.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.transform_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.transform_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.transform_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.transform_test.transform": {
  "data": {
   "shadows": "haiku._src.transform"
  },
  "type": "import"
 },
 "haiku._src.typing": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "haiku._src.typing.typing",
    "int",
    "jax.numpy.ndarray",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Mapping",
    "typing.Sequence"
   ]
  },
  "type": "module"
 },
 "haiku._src.typing.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "haiku._src.typing.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "haiku._src.typing.Initializer": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "haiku._src.typing.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "haiku._src.typing.Module": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "haiku._src.typing.PRNGKey": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "haiku._src.typing.Params": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "haiku._src.typing.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "haiku._src.typing.State": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "haiku._src.typing.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.typing.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "haiku._src.utils": {
  "data": {
   "symbols_in_volume": [
    "haiku._src.utils._CAMEL_TO_SNAKE_R",
    "haiku._src.utils.re",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "haiku._src.utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "haiku._src.utils.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "haiku._src.utils.T": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "haiku._src.utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "haiku._src.utils.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "haiku._src.utils.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "haiku._src.utils.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "haiku._src.utils._CAMEL_TO_SNAKE_R": {
  "data": {
   "lineno": 243
  },
  "type": "constant"
 },
 "haiku._src.utils._SEQUENTIAL": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "haiku._src.utils._SPATIAL_CHANNELS_FIRST": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "haiku._src.utils._SPATIAL_CHANNELS_LAST": {
  "data": {
   "lineno": 132
  },
  "type": "constant"
 },
 "haiku._src.utils.assert_minimum_rank": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "ValueError",
    "int"
   ]
  },
  "type": "function"
 },
 "haiku._src.utils.auto_repr": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "dict",
    "fancy_repr",
    "haiku._src.utils.compare_or_false",
    "haiku._src.utils.inspect",
    "indent",
    "is_default",
    "len",
    "repr",
    "str",
    "typing.Any",
    "typing.Type",
    "zip"
   ]
  },
  "type": "function"
 },
 "haiku._src.utils.camel_to_snake": {
  "data": {
   "lineno": 244
  },
  "type": "constant"
 },
 "haiku._src.utils.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "haiku._src.utils.compare_or_false": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "haiku._src.utils.fancy_repr": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "TypeError",
    "haiku._src.utils.pprint",
    "indent",
    "len",
    "repr",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "haiku._src.utils.get_channel_index": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ValueError",
    "haiku._src.utils._SEQUENTIAL",
    "haiku._src.utils._SPATIAL_CHANNELS_FIRST",
    "haiku._src.utils._SPATIAL_CHANNELS_LAST",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "haiku._src.utils.indent": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "haiku._src.utils.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "haiku._src.utils.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku._src.utils.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "haiku._src.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "haiku._src.utils.replicate": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "TypeError",
    "bytes",
    "haiku._src.utils.T",
    "haiku._src.utils.collections",
    "int",
    "isinstance",
    "len",
    "str",
    "tuple",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "haiku._src.utils.simple_dtype": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "dtype",
    "dtype.name",
    "dtype.replace",
    "isinstance",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "haiku._src.utils.tree_bytes": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "haiku._src.utils.jax",
    "int",
    "sum"
   ]
  },
  "type": "function"
 },
 "haiku._src.utils.tree_size": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "haiku._src.utils.jax",
    "int",
    "sum"
   ]
  },
  "type": "function"
 },
 "haiku._src.utils_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "absl.testing.absltest.main"
   ]
  },
  "type": "module"
 },
 "haiku._src.utils_test.ChannelIndexTest": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.utils_test.ChannelIndexTest.test_invalid_strings": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "ValueError",
    "absl.testing.parameterized.parameters",
    "haiku._src.utils.get_channel_index"
   ]
  },
  "type": "function"
 },
 "haiku._src.utils_test.ChannelIndexTest.test_returns_index_channels_first": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "haiku._src.utils.get_channel_index"
   ]
  },
  "type": "function"
 },
 "haiku._src.utils_test.ChannelIndexTest.test_returns_index_channels_last": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "absl.testing.parameterized.parameters",
    "haiku._src.utils.get_channel_index"
   ]
  },
  "type": "function"
 },
 "haiku._src.utils_test.ReplicateTest": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase"
   ]
  },
  "type": "class"
 },
 "haiku._src.utils_test.ReplicateTest.testIncorrectLength": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "TypeError",
    "haiku._src.utils.replicate"
   ]
  },
  "type": "function"
 },
 "haiku._src.utils_test.ReplicateTest.testListLengthN": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "haiku._src.utils.replicate",
    "list"
   ]
  },
  "type": "function"
 },
 "haiku._src.utils_test.ReplicateTest.testListLengthOne": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "haiku._src.utils.replicate"
   ]
  },
  "type": "function"
 },
 "haiku._src.utils_test.ReplicateTest.testSingleValue": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "haiku._src.utils.replicate"
   ]
  },
  "type": "function"
 },
 "haiku._src.utils_test.ReplicateTest.testTupleLengthN": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "absl.testing.parameterized.named_parameters",
    "haiku._src.utils.replicate"
   ]
  },
  "type": "function"
 },
 "haiku._src.utils_test.SomeClass": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "haiku._src.utils_test.SomeClass.__init__": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "haiku._src.utils_test.UtilsTest": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "absl.testing.parameterized.TestCase",
    "jax.numpy.bfloat16",
    "numpy.float16",
    "numpy.float32",
    "numpy.int8"
   ]
  },
  "type": "class"
 },
 "haiku._src.utils_test.UtilsTest.test_auto_repr": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "haiku._src.utils.auto_repr"
   ]
  },
  "type": "function"
 },
 "haiku._src.utils_test.UtilsTest.test_indent": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "haiku._src.utils.indent",
    "haiku._src.utils_test.lines"
   ]
  },
  "type": "function"
 },
 "haiku._src.utils_test.UtilsTest.test_tree_bytes": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "container",
    "haiku._src.test_utils.combined_named_parameters",
    "haiku._src.utils.tree_bytes",
    "numpy.ones",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "haiku._src.utils_test.UtilsTest.test_tree_size": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "container",
    "haiku._src.test_utils.combined_named_parameters",
    "haiku._src.utils.tree_size",
    "numpy.ones",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "haiku._src.utils_test.absltest": {
  "data": {
   "shadows": "absl.testing.absltest"
  },
  "type": "import"
 },
 "haiku._src.utils_test.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku._src.utils_test.lines": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "haiku._src.utils_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "haiku._src.utils_test.parameterized": {
  "data": {
   "shadows": "absl.testing.parameterized"
  },
  "type": "import"
 },
 "haiku._src.utils_test.test_utils": {
  "data": {
   "shadows": "haiku._src.test_utils"
  },
  "type": "import"
 },
 "haiku._src.utils_test.utils": {
  "data": {
   "shadows": "haiku._src.utils"
  },
  "type": "import"
 },
 "haiku.avg_pool": {
  "data": {
   "shadows": "haiku._src.pool.avg_pool"
  },
  "type": "import"
 },
 "haiku.benchmarks.init": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "haiku.benchmarks.init.google_benchmark"
   ]
  },
  "type": "module"
 },
 "haiku.benchmarks.init.google_benchmark": {
  "data": {
   "shadows": "google_benchmark"
  },
  "type": "import"
 },
 "haiku.benchmarks.init.hk": {
  "data": {
   "shadows": "haiku"
  },
  "type": "import"
 },
 "haiku.benchmarks.init.init_benchmark": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "haiku.transform_with_state"
   ]
  },
  "type": "function"
 },
 "haiku.benchmarks.init.init_benchmark.compile_bench": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "haiku.benchmarks.init.google_benchmark",
    "haiku.benchmarks.init.jax",
    "jax.numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku.benchmarks.init.init_benchmark.run_bench": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "haiku.benchmarks.init.google_benchmark",
    "haiku.benchmarks.init.jax",
    "jax.numpy.ones",
    "jitted_init"
   ]
  },
  "type": "function"
 },
 "haiku.benchmarks.init.init_benchmark.trace_bench": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "haiku.benchmarks.init.google_benchmark",
    "haiku.benchmarks.init.jax",
    "jax.numpy.ones"
   ]
  },
  "type": "function"
 },
 "haiku.benchmarks.init.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "haiku.benchmarks.init.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "haiku.benchmarks.init.mlp": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "haiku.benchmarks.init.init_benchmark",
    "haiku.nets.MLP"
   ]
  },
  "type": "function"
 },
 "haiku.benchmarks.init.resnet_50": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "haiku.benchmarks.init.init_benchmark",
    "haiku.nets.ResNet50"
   ]
  },
  "type": "function"
 },
 "haiku.cond": {
  "data": {
   "shadows": "haiku._src.stateful.cond"
  },
  "type": "import"
 },
 "haiku.data_structures": {
  "data": {
   "shadows": "haiku.data_structures"
  },
  "type": "import"
 },
 "haiku.data_structures.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "haiku.data_structures.filter": {
  "data": {
   "shadows": "haiku._src.filtering.filter"
  },
  "type": "import"
 },
 "haiku.data_structures.merge": {
  "data": {
   "shadows": "haiku._src.filtering.merge"
  },
  "type": "import"
 },
 "haiku.data_structures.partition": {
  "data": {
   "shadows": "haiku._src.filtering.partition"
  },
  "type": "import"
 },
 "haiku.data_structures.to_immutable_dict": {
  "data": {
   "shadows": "haiku._src.data_structures.to_immutable_dict"
  },
  "type": "import"
 },
 "haiku.data_structures.to_mutable_dict": {
  "data": {
   "shadows": "haiku._src.data_structures.to_mutable_dict"
  },
  "type": "import"
 },
 "haiku.data_structures.tree_bytes": {
  "data": {
   "shadows": "haiku._src.utils.tree_bytes"
  },
  "type": "import"
 },
 "haiku.data_structures.tree_size": {
  "data": {
   "shadows": "haiku._src.utils.tree_size"
  },
  "type": "import"
 },
 "haiku.deep_rnn_with_skip_connections": {
  "data": {
   "shadows": "haiku._src.recurrent.deep_rnn_with_skip_connections"
  },
  "type": "import"
 },
 "haiku.dropout": {
  "data": {
   "shadows": "haiku._src.basic.dropout"
  },
  "type": "import"
 },
 "haiku.dynamic_unroll": {
  "data": {
   "shadows": "haiku._src.recurrent.dynamic_unroll"
  },
  "type": "import"
 },
 "haiku.expand_apply": {
  "data": {
   "shadows": "haiku._src.basic.expand_apply"
  },
  "type": "import"
 },
 "haiku.experimental": {
  "data": {
   "shadows": "haiku.experimental"
  },
  "type": "import"
 },
 "haiku.experimental.GetterContext": {
  "data": {
   "shadows": "haiku._src.base.GetterContext"
  },
  "type": "import"
 },
 "haiku.experimental.MethodContext": {
  "data": {
   "shadows": "haiku._src.module.MethodContext"
  },
  "type": "import"
 },
 "haiku.experimental.ParamContext": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "haiku.experimental.__all__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "haiku.experimental.abstract_to_dot": {
  "data": {
   "shadows": "haiku._src.dot.abstract_to_dot"
  },
  "type": "import"
 },
 "haiku.experimental.custom_creator": {
  "data": {
   "shadows": "haiku._src.base.custom_creator"
  },
  "type": "import"
 },
 "haiku.experimental.custom_getter": {
  "data": {
   "shadows": "haiku._src.base.custom_getter"
  },
  "type": "import"
 },
 "haiku.experimental.intercept_methods": {
  "data": {
   "shadows": "haiku._src.module.intercept_methods"
  },
  "type": "import"
 },
 "haiku.experimental.lift": {
  "data": {
   "shadows": "haiku._src.lift.lift"
  },
  "type": "import"
 },
 "haiku.experimental.name_scope": {
  "data": {
   "shadows": "haiku._src.module.name_scope"
  },
  "type": "import"
 },
 "haiku.experimental.named_call": {
  "data": {
   "shadows": "haiku._src.stateful.named_call"
  },
  "type": "import"
 },
 "haiku.experimental.optimize_rng_use": {
  "data": {
   "shadows": "haiku._src.random.optimize_rng_use"
  },
  "type": "import"
 },
 "haiku.experimental.profiler_name_scopes": {
  "data": {
   "shadows": "haiku._src.module.profiler_name_scopes"
  },
  "type": "import"
 },
 "haiku.experimental.to_dot": {
  "data": {
   "shadows": "haiku._src.dot.to_dot"
  },
  "type": "import"
 },
 "haiku.fori_loop": {
  "data": {
   "shadows": "haiku._src.stateful.fori_loop"
  },
  "type": "import"
 },
 "haiku.get_parameter": {
  "data": {
   "shadows": "haiku._src.base.get_parameter"
  },
  "type": "import"
 },
 "haiku.get_state": {
  "data": {
   "shadows": "haiku._src.base.get_state"
  },
  "type": "import"
 },
 "haiku.grad": {
  "data": {
   "shadows": "haiku._src.stateful.grad"
  },
  "type": "import"
 },
 "haiku.initializers": {
  "data": {
   "shadows": "haiku.initializers"
  },
  "type": "import"
 },
 "haiku.initializers.Constant": {
  "data": {
   "shadows": "haiku._src.initializers.Constant"
  },
  "type": "import"
 },
 "haiku.initializers.Identity": {
  "data": {
   "shadows": "haiku._src.initializers.Identity"
  },
  "type": "import"
 },
 "haiku.initializers.Initializer": {
  "data": {
   "shadows": "haiku._src.typing.Initializer"
  },
  "type": "import"
 },
 "haiku.initializers.Orthogonal": {
  "data": {
   "shadows": "haiku._src.initializers.Orthogonal"
  },
  "type": "import"
 },
 "haiku.initializers.RandomNormal": {
  "data": {
   "shadows": "haiku._src.initializers.RandomNormal"
  },
  "type": "import"
 },
 "haiku.initializers.RandomUniform": {
  "data": {
   "shadows": "haiku._src.initializers.RandomUniform"
  },
  "type": "import"
 },
 "haiku.initializers.TruncatedNormal": {
  "data": {
   "shadows": "haiku._src.initializers.TruncatedNormal"
  },
  "type": "import"
 },
 "haiku.initializers.UniformScaling": {
  "data": {
   "shadows": "haiku._src.initializers.UniformScaling"
  },
  "type": "import"
 },
 "haiku.initializers.VarianceScaling": {
  "data": {
   "shadows": "haiku._src.initializers.VarianceScaling"
  },
  "type": "import"
 },
 "haiku.initializers.__all__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "haiku.jit": {
  "data": {
   "shadows": "haiku._src.stateful.jit"
  },
  "type": "import"
 },
 "haiku.max_pool": {
  "data": {
   "shadows": "haiku._src.pool.max_pool"
  },
  "type": "import"
 },
 "haiku.maybe_next_rng_key": {
  "data": {
   "shadows": "haiku._src.base.maybe_next_rng_key"
  },
  "type": "import"
 },
 "haiku.multinomial": {
  "data": {
   "shadows": "haiku._src.basic.multinomial"
  },
  "type": "import"
 },
 "haiku.nets": {
  "data": {
   "shadows": "haiku.nets"
  },
  "type": "import"
 },
 "haiku.nets.MLP": {
  "data": {
   "shadows": "haiku._src.nets.mlp.MLP"
  },
  "type": "import"
 },
 "haiku.nets.MobileNetV1": {
  "data": {
   "shadows": "haiku._src.nets.mobilenetv1.MobileNetV1"
  },
  "type": "import"
 },
 "haiku.nets.ResNet": {
  "data": {
   "shadows": "haiku._src.nets.resnet.ResNet"
  },
  "type": "import"
 },
 "haiku.nets.ResNet101": {
  "data": {
   "shadows": "haiku._src.nets.resnet.ResNet101"
  },
  "type": "import"
 },
 "haiku.nets.ResNet152": {
  "data": {
   "shadows": "haiku._src.nets.resnet.ResNet152"
  },
  "type": "import"
 },
 "haiku.nets.ResNet18": {
  "data": {
   "shadows": "haiku._src.nets.resnet.ResNet18"
  },
  "type": "import"
 },
 "haiku.nets.ResNet200": {
  "data": {
   "shadows": "haiku._src.nets.resnet.ResNet200"
  },
  "type": "import"
 },
 "haiku.nets.ResNet34": {
  "data": {
   "shadows": "haiku._src.nets.resnet.ResNet34"
  },
  "type": "import"
 },
 "haiku.nets.ResNet50": {
  "data": {
   "shadows": "haiku._src.nets.resnet.ResNet50"
  },
  "type": "import"
 },
 "haiku.nets.VectorQuantizer": {
  "data": {
   "shadows": "haiku._src.nets.vqvae.VectorQuantizer"
  },
  "type": "import"
 },
 "haiku.nets.VectorQuantizerEMA": {
  "data": {
   "shadows": "haiku._src.nets.vqvae.VectorQuantizerEMA"
  },
  "type": "import"
 },
 "haiku.nets.__all__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "haiku.next_rng_key": {
  "data": {
   "shadows": "haiku._src.base.next_rng_key"
  },
  "type": "import"
 },
 "haiku.next_rng_keys": {
  "data": {
   "shadows": "haiku._src.base.next_rng_keys"
  },
  "type": "import"
 },
 "haiku.one_hot": {
  "data": {
   "shadows": "haiku._src.basic.one_hot"
  },
  "type": "import"
 },
 "haiku.pad": {
  "data": {},
  "type": "module"
 },
 "haiku.pad.PadFn": {
  "data": {
   "shadows": "haiku._src.pad.PadFn"
  },
  "type": "import"
 },
 "haiku.pad.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "haiku.pad.causal": {
  "data": {
   "shadows": "haiku._src.pad.causal"
  },
  "type": "import"
 },
 "haiku.pad.create": {
  "data": {
   "shadows": "haiku._src.pad.create"
  },
  "type": "import"
 },
 "haiku.pad.full": {
  "data": {
   "shadows": "haiku._src.pad.full"
  },
  "type": "import"
 },
 "haiku.pad.reverse_causal": {
  "data": {
   "shadows": "haiku._src.pad.reverse_causal"
  },
  "type": "import"
 },
 "haiku.pad.same": {
  "data": {
   "shadows": "haiku._src.pad.same"
  },
  "type": "import"
 },
 "haiku.pad.valid": {
  "data": {
   "shadows": "haiku._src.pad.valid"
  },
  "type": "import"
 },
 "haiku.remat": {
  "data": {
   "shadows": "haiku._src.stateful.remat"
  },
  "type": "import"
 },
 "haiku.reserve_rng_keys": {
  "data": {
   "shadows": "haiku._src.base.reserve_rng_keys"
  },
  "type": "import"
 },
 "haiku.running_init": {
  "data": {
   "shadows": "haiku._src.transform.running_init"
  },
  "type": "import"
 },
 "haiku.scan": {
  "data": {
   "shadows": "haiku._src.stateful.scan"
  },
  "type": "import"
 },
 "haiku.set_state": {
  "data": {
   "shadows": "haiku._src.base.set_state"
  },
  "type": "import"
 },
 "haiku.static_unroll": {
  "data": {
   "shadows": "haiku._src.recurrent.static_unroll"
  },
  "type": "import"
 },
 "haiku.switch": {
  "data": {
   "shadows": "haiku._src.stateful.switch"
  },
  "type": "import"
 },
 "haiku.testing": {
  "data": {
   "shadows": "haiku.testing"
  },
  "type": "import"
 },
 "haiku.testing.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "haiku.testing.transform_and_run": {
  "data": {
   "shadows": "haiku._src.test_utils.transform_and_run"
  },
  "type": "import"
 },
 "haiku.to_module": {
  "data": {
   "shadows": "haiku._src.basic.to_module"
  },
  "type": "import"
 },
 "haiku.transform": {
  "data": {
   "shadows": "haiku._src.transform.transform"
  },
  "type": "import"
 },
 "haiku.transform_with_state": {
  "data": {
   "shadows": "haiku._src.transform.transform_with_state"
  },
  "type": "import"
 },
 "haiku.transparent": {
  "data": {
   "shadows": "haiku._src.module.transparent"
  },
  "type": "import"
 },
 "haiku.typing": {
  "data": {},
  "type": "module"
 },
 "haiku.typing.Params": {
  "data": {
   "shadows": "haiku._src.typing.Params"
  },
  "type": "import"
 },
 "haiku.typing.State": {
  "data": {
   "shadows": "haiku._src.typing.State"
  },
  "type": "import"
 },
 "haiku.typing.__all__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "haiku.value_and_grad": {
  "data": {
   "shadows": "haiku._src.stateful.value_and_grad"
  },
  "type": "import"
 },
 "haiku.vmap": {
  "data": {
   "shadows": "haiku._src.stateful.vmap"
  },
  "type": "import"
 },
 "haiku.while_loop": {
  "data": {
   "shadows": "haiku._src.stateful.while_loop"
  },
  "type": "import"
 },
 "haiku.with_rng": {
  "data": {
   "shadows": "haiku._src.base.with_rng"
  },
  "type": "import"
 },
 "haiku.without_apply_rng": {
  "data": {
   "shadows": "haiku._src.transform.without_apply_rng"
  },
  "type": "import"
 },
 "haiku.without_state": {
  "data": {
   "shadows": "haiku._src.transform.without_state"
  },
  "type": "import"
 }
}