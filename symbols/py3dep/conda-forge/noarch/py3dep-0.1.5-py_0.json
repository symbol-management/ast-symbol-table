{
 "py3dep": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pkg_resources.DistributionNotFound",
    "pkg_resources.get_distribution"
   ]
  },
  "type": "module"
 },
 "py3dep.DistributionNotFound": {
  "data": {
   "shadows": "pkg_resources.DistributionNotFound"
  },
  "type": "import"
 },
 "py3dep.__version__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "py3dep.exceptions": {
  "data": {},
  "type": "module"
 },
 "py3dep.exceptions.InvalidInputType": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "py3dep.exceptions.InvalidInputType.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "py3dep.exceptions.InvalidInputType.__str__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "py3dep.exceptions.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "py3dep.get_distribution": {
  "data": {
   "shadows": "pkg_resources.get_distribution"
  },
  "type": "import"
 },
 "py3dep.py3dep": {
  "data": {},
  "type": "module"
 },
 "py3dep.py3dep.DEF_CRS": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "py3dep.py3dep.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "py3dep.py3dep.MatchCRS": {
  "data": {
   "shadows": "pygeoogc.MatchCRS"
  },
  "type": "import"
 },
 "py3dep.py3dep.Polygon": {
  "data": {
   "shadows": "shapely.geometry.Polygon"
  },
  "type": "import"
 },
 "py3dep.py3dep.RetrySession": {
  "data": {
   "shadows": "pygeoogc.RetrySession"
  },
  "type": "import"
 },
 "py3dep.py3dep.ServiceURL": {
  "data": {
   "shadows": "pygeoogc.ServiceURL"
  },
  "type": "import"
 },
 "py3dep.py3dep.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "py3dep.py3dep.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "py3dep.py3dep.WMS": {
  "data": {
   "shadows": "pygeoogc.WMS"
  },
  "type": "import"
 },
 "py3dep.py3dep.deg2mpm": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "numpy.deg2rad",
    "numpy.tan",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "py3dep.py3dep.elevation_bygrid": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "abs",
    "float",
    "max",
    "min",
    "py3dep.py3dep.DEF_CRS",
    "pygeoogc.ServiceURL",
    "pygeoogc.WMS",
    "rasterio.warp.Resampling",
    "rasterio.warp.Resampling.bilinear",
    "reproject",
    "str",
    "typing.List",
    "typing.Tuple",
    "xarray.DataArray",
    "xarray.merge"
   ]
  },
  "type": "function"
 },
 "py3dep.py3dep.elevation_bygrid.reproject": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError",
    "range",
    "rasterio.MemoryFile",
    "rasterio.band",
    "rasterio.vrt.WarpedVRT",
    "rasterio.warp.calculate_default_transform",
    "rasterio.warp.reproject",
    "tuple",
    "xarray.open_rasterio"
   ]
  },
  "type": "function"
 },
 "py3dep.py3dep.elevation_byloc": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "InvalidInputType",
    "ValueError",
    "abs",
    "float",
    "isinstance",
    "len",
    "py3dep.py3dep.DEF_CRS",
    "pygeoogc.MatchCRS.coords",
    "pygeoogc.RetrySession",
    "str",
    "tuple",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "py3dep.py3dep.geoutils": {
  "data": {
   "shadows": "pygeoutils"
  },
  "type": "import"
 },
 "py3dep.py3dep.get_map": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "InvalidInputType",
    "bool",
    "float",
    "isinstance",
    "list",
    "py3dep.py3dep.DEF_CRS",
    "pygeoogc.ServiceURL",
    "pygeoogc.WMS",
    "pygeoutils.geo2polygon",
    "pygeoutils.gtiff2xarray",
    "shapely.geometry.Polygon",
    "str",
    "tuple",
    "typing.List",
    "typing.Tuple",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "py3dep.py3dep.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "py3dep.py3dep.rio": {
  "data": {
   "shadows": "rasterio"
  },
  "type": "import"
 },
 "py3dep.py3dep.rio_warp": {
  "data": {
   "shadows": "rasterio.warp"
  },
  "type": "import"
 },
 "py3dep.py3dep.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 }
}