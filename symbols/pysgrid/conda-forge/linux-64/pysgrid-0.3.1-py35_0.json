{
 "pysgrid": {
  "data": {},
  "type": "module"
 },
 "pysgrid.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pysgrid.__version__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pysgrid.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pysgrid.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pysgrid.lookup": {
  "data": {},
  "type": "module"
 },
 "pysgrid.lookup.LAT_GRID_CELL_CENTER_LONG_NAME": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pysgrid.lookup.LAT_GRID_CELL_NODE_LONG_NAME": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pysgrid.lookup.LON_GRID_CELL_CENTER_LONG_NAME": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pysgrid.lookup.LON_GRID_CELL_NODE_LONG_NAME": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pysgrid.lookup.X_COORDINATES": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pysgrid.lookup.Y_COORDINATES": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pysgrid.lookup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pysgrid.lookup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pysgrid.lookup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pysgrid.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pysgrid.processing_2d": {
  "data": {},
  "type": "module"
 },
 "pysgrid.processing_2d.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pysgrid.processing_2d.avg_to_cell_center": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "pysgrid.processing_2d.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pysgrid.processing_2d.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "pysgrid.processing_2d.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pysgrid.processing_2d.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pysgrid.processing_2d.rotate_vectors": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "pysgrid.processing_2d.vector_sum": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.ma.sqrt"
   ]
  },
  "type": "function"
 },
 "pysgrid.read_netcdf": {
  "data": {},
  "type": "module"
 },
 "pysgrid.read_netcdf.NetCDFDataset": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pysgrid.read_netcdf.NetCDFDataset.__init__": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pysgrid.read_netcdf.NetCDFDataset.find_coordinates_by_location": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "AttributeError",
    "all",
    "any",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "pysgrid.read_netcdf.NetCDFDataset.find_node_coordinates": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "AttributeError",
    "any",
    "set"
   ]
  },
  "type": "function"
 },
 "pysgrid.read_netcdf.NetCDFDataset.find_variables_by_attr": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "dir",
    "getattr",
    "set"
   ]
  },
  "type": "function"
 },
 "pysgrid.read_netcdf.NetCDFDataset.sgrid_compliant_file": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "ValueError",
    "pysgrid.read_netcdf.find_grid_topology_var"
   ]
  },
  "type": "function"
 },
 "pysgrid.read_netcdf.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pysgrid.read_netcdf.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pysgrid.read_netcdf.find_grid_topology_var": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "len",
    "msg"
   ]
  },
  "type": "function"
 },
 "pysgrid.read_netcdf.parse_axes": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "pysgrid.read_netcdf.re"
   ]
  },
  "type": "function"
 },
 "pysgrid.read_netcdf.parse_padding": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "GridPadding",
    "ValueError",
    "len",
    "msg",
    "pysgrid.read_netcdf.re"
   ]
  },
  "type": "function"
 },
 "pysgrid.read_netcdf.parse_vector_axis": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "pysgrid.read_netcdf.re"
   ]
  },
  "type": "function"
 },
 "pysgrid.read_netcdf.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pysgrid.read_netcdf.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pysgrid.sgrid": {
  "data": {},
  "type": "module"
 },
 "pysgrid.sgrid.CellTree": {
  "data": {
   "shadows": "cell_tree2d.CellTree"
  },
  "type": "import"
 },
 "pysgrid.sgrid.Dataset": {
  "data": {
   "shadows": "netCDF4.Dataset"
  },
  "type": "import"
 },
 "pysgrid.sgrid.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pysgrid.sgrid.SGrid": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pysgrid.sgrid.SGrid.__init__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGrid._add_memo": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "len"
   ]
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGrid._get_grid_vars": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGrid._get_memoed": {
  "data": {
   "lineno": 317
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGrid._hash_of_pts": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "pysgrid.sgrid.hashlib"
   ]
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGrid._save_common_components": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGrid.all_padding": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGrid.build_celltree": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "cell_tree2d.CellTree",
    "hasattr",
    "numpy.array",
    "numpy.ascontiguousarray",
    "numpy.column_stack",
    "numpy.float64",
    "numpy.int32",
    "range"
   ]
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGrid.fits_data": {
  "data": {
   "lineno": 593
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGrid.get_all_edge_padding": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGrid.get_all_face_padding": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGrid.get_efficient_slice": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "slice"
   ]
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGrid.get_lines": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "numpy.ma.dstack"
   ]
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGrid.get_variable_by_index": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "numpy.ma.column_stack"
   ]
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGrid.infer_location": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGrid.interpolate_var_to_points": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "ValueError",
    "hash",
    "isinstance",
    "len",
    "numpy.bool_",
    "numpy.ma.MaskedArray",
    "numpy.ma.masked_all",
    "numpy.ma.sum",
    "numpy.nan",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGrid.interpolation_alphas": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "compute_coeffs",
    "hasattr",
    "numpy.array",
    "x_to_l"
   ]
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGrid.interpolation_alphas.compute_coeffs": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.linalg.inv",
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGrid.interpolation_alphas.x_to_l": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "lin_eqn",
    "numpy.where",
    "numpy.zeros",
    "quad_eqn"
   ]
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGrid.interpolation_alphas.x_to_l.lin_eqn": {
  "data": {
   "lineno": 662
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGrid.interpolation_alphas.x_to_l.quad_eqn": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "len",
    "numpy.logical_or",
    "numpy.ma.array",
    "numpy.ma.sqrt"
   ]
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGrid.load_grid": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "find_grid_topology_var",
    "isinstance",
    "netCDF4.Dataset",
    "pysgrid.sgrid.SGridAttributes"
   ]
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGrid.locate_faces": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "hasattr",
    "numpy.asarray",
    "numpy.column_stack",
    "numpy.float64",
    "numpy.ma.masked_less"
   ]
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGrid.nodes": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.stack",
    "property"
   ]
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGrid.non_grid_variables": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGrid.save_as_netcdf": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGridAttributes": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pysgrid.sgrid.SGridAttributes.__init__": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "NetCDFDataset"
   ]
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGridAttributes.get_angles": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "calculate_angle_from_true_east",
    "pair_arrays"
   ]
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGridAttributes.get_attr_coordinates": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGridAttributes.get_attr_dimension": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "parse_padding"
   ]
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGridAttributes.get_cell_center_lat_lon": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGridAttributes.get_cell_edge1_lat_lon": {
  "data": {
   "lineno": 859
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGridAttributes.get_cell_edge2_lat_lon": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGridAttributes.get_cell_node_lat_lon": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGridAttributes.get_dimensions": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGridAttributes.get_node_coordinates": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "AttributeError",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGridAttributes.get_topology_var": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "find_grid_topology_var"
   ]
  },
  "type": "function"
 },
 "pysgrid.sgrid.SGridAttributes.get_variable_attributes": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "hasattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pysgrid.sgrid.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pysgrid.sgrid.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pysgrid.sgrid.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "pysgrid.sgrid.load_grid": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "isinstance",
    "netCDF4.Dataset",
    "pysgrid.sgrid.SGrid"
   ]
  },
  "type": "function"
 },
 "pysgrid.sgrid.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pysgrid.sgrid.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pysgrid.tests": {
  "data": {},
  "type": "module"
 },
 "pysgrid.tests.test_interpolation": {
  "data": {
   "symbols_in_volume": [
    "SGrid",
    "numpy.array",
    "numpy.mgrid",
    "numpy.stack",
    "pysgrid.tests.test_interpolation.center_lat",
    "pysgrid.tests.test_interpolation.center_lon",
    "pysgrid.tests.test_interpolation.edge1_lat",
    "pysgrid.tests.test_interpolation.edge1_lon",
    "pysgrid.tests.test_interpolation.edge2_lat",
    "pysgrid.tests.test_interpolation.edge2_lon",
    "pysgrid.tests.test_interpolation.node_lat",
    "pysgrid.tests.test_interpolation.node_lon"
   ]
  },
  "type": "module"
 },
 "pysgrid.tests.test_interpolation.c_var": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pysgrid.tests.test_interpolation.center_lat": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pysgrid.tests.test_interpolation.center_lon": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pysgrid.tests.test_interpolation.e1_var": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pysgrid.tests.test_interpolation.e2_var": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pysgrid.tests.test_interpolation.edge1_lat": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pysgrid.tests.test_interpolation.edge1_lon": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pysgrid.tests.test_interpolation.edge2_lat": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pysgrid.tests.test_interpolation.edge2_lon": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pysgrid.tests.test_interpolation.n_var": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pysgrid.tests.test_interpolation.node_lat": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pysgrid.tests.test_interpolation.node_lon": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pysgrid.tests.test_interpolation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pysgrid.tests.test_interpolation.pts": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pysgrid.tests.test_interpolation.sgrid": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pysgrid.tests.test_interpolation.test_interpolation_alphas": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "pysgrid.tests.test_interpolation.sgrid"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_interpolation.test_locate_faces": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.ma.masked_equal",
    "pysgrid.tests.test_interpolation.sgrid"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_interpolation.test_points_in_polys": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.logical_and",
    "points_in_polys",
    "pysgrid.tests.test_interpolation.sgrid"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_interpolation.test_points_in_polys2": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.logical_and",
    "points_in_polys",
    "pysgrid.tests.test_interpolation.sgrid"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_processing_2d": {
  "data": {},
  "type": "module"
 },
 "pysgrid.tests.test_processing_2d.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pysgrid.tests.test_processing_2d.avg_center_data": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.array",
    "pysgrid.tests.test_processing_2d.pytest"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_processing_2d.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pysgrid.tests.test_processing_2d.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pysgrid.tests.test_processing_2d.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pysgrid.tests.test_processing_2d.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pysgrid.tests.test_processing_2d.rotate_vectors_data": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.pi",
    "pysgrid.tests.test_processing_2d.pytest"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_processing_2d.test_no_transpose": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "avg_to_cell_center",
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "pysgrid.tests.test_processing_2d.avg_center_data"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_processing_2d.test_vector_rotation_complex": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "pysgrid.tests.test_processing_2d.rotate_vectors_data",
    "rotate_vectors"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_processing_2d.test_vector_rotation_simple": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "pysgrid.tests.test_processing_2d.rotate_vectors_data",
    "rotate_vectors"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_processing_2d.test_vector_sum": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "vector_sum"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_processing_2d.test_with_transpose": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "avg_to_cell_center",
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "pysgrid.tests.test_processing_2d.avg_center_data"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_read_netcdf": {
  "data": {},
  "type": "module"
 },
 "pysgrid.tests.test_read_netcdf.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pysgrid.tests.test_read_netcdf.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pysgrid.tests.test_read_netcdf.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pysgrid.tests.test_read_netcdf.test_find_edge_coordinates_by_location": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "NetCDFDataset"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_read_netcdf.test_find_face_coordinates_by_location": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "NetCDFDataset"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_read_netcdf.test_find_grid_topology": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "find_grid_topology_var"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_read_netcdf.test_find_variable_by_attr": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "NetCDFDataset"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_read_netcdf.test_find_variable_by_nonexistant_attr": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "NetCDFDataset"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_read_netcdf.test_find_variables_by_standard_name": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "NetCDFDataset"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_read_netcdf.test_find_variables_by_standard_name_none": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "NetCDFDataset"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_read_netcdf.test_finding_node_variables": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "NetCDFDataset"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_read_netcdf.test_node_coordinates": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "NetCDFDataset"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_read_netcdf.test_sgrid_compliant_check": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "NetCDFDataset"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_deltares": {
  "data": {},
  "type": "module"
 },
 "pysgrid.tests.test_sgrid_deltares.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_deltares.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_deltares.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_deltares.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_deltares.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_deltares.sgrid": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "load_grid",
    "pysgrid.tests.test_sgrid_deltares.pytest"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_deltares.sgrid_no_node": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "load_grid",
    "pysgrid.tests.test_sgrid_deltares.pytest"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_deltares.sgrid_obj": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "load_grid",
    "pysgrid.tests.test_sgrid_deltares.pytest"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_deltares.test_2d_attributes": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "hasattr",
    "pysgrid.tests.test_sgrid_deltares.sgrid_obj"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_deltares.test_angles": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "pysgrid.tests.test_sgrid_deltares.sgrid_obj"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_deltares.test_averaging_axes": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "pysgrid.tests.test_sgrid_deltares.sgrid_obj"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_deltares.test_center_lat_deltares": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "pysgrid.tests.test_sgrid_deltares.sgrid_obj"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_deltares.test_center_lat_deltares_no_coord": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "pysgrid.tests.test_sgrid_deltares.sgrid"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_deltares.test_center_lon_deltares": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "pysgrid.tests.test_sgrid_deltares.sgrid_obj"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_deltares.test_center_lon_deltares_no_coord": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "pysgrid.tests.test_sgrid_deltares.sgrid"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_deltares.test_face_coordinate_inference": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pysgrid.tests.test_sgrid_deltares.sgrid"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_deltares.test_grid_angles": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "pysgrid.tests.test_sgrid_deltares.sgrid"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_deltares.test_grid_optional_attrs": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "pysgrid.tests.test_sgrid_deltares.sgrid_obj"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_deltares.test_grid_variables_deltares": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "pysgrid.tests.test_sgrid_deltares.sgrid_obj",
    "set"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_deltares.test_no_3d_attributes": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "hasattr",
    "pysgrid.tests.test_sgrid_deltares.sgrid_obj"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_deltares.test_node_lat": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "pysgrid.tests.test_sgrid_deltares.sgrid"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_deltares.test_node_lon": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "pysgrid.tests.test_sgrid_deltares.sgrid"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_deltares.test_round_trip": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "load_grid"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_deltares.test_save_as_netcdf": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pysgrid.tests.test_sgrid_deltares.sgrid_no_node",
    "set"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_deltares.test_saved_sgrid_attributes": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pysgrid.tests.test_sgrid_deltares.sgrid_no_node"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_deltares.test_topology_dimension_deltares": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "pysgrid.tests.test_sgrid_deltares.sgrid_obj"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_deltares.test_variable_slice": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.s_",
    "pysgrid.tests.test_sgrid_deltares.sgrid_obj"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_non_compliant": {
  "data": {},
  "type": "module"
 },
 "pysgrid.tests.test_sgrid_non_compliant.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_non_compliant.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_non_compliant.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_non_compliant.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_non_compliant.test_exception_raised": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "load_grid",
    "pysgrid.tests.test_sgrid_non_compliant.pytest"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_parsing": {
  "data": {},
  "type": "module"
 },
 "pysgrid.tests.test_sgrid_parsing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_parsing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_parsing.parse_pad": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pysgrid.tests.test_sgrid_parsing.pytest"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_parsing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_parsing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_parsing.test_mesh_name": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "parse_padding",
    "pysgrid.tests.test_sgrid_parsing.parse_pad"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_parsing.test_no_padding": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ValueError",
    "parse_padding",
    "pysgrid.tests.test_sgrid_parsing.parse_pad",
    "pysgrid.tests.test_sgrid_parsing.pytest"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_parsing.test_one_padding_type": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "len",
    "parse_padding",
    "pysgrid.tests.test_sgrid_parsing.parse_pad"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_parsing.test_std_name_with_transport_direction": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "parse_vector_axis"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_parsing.test_std_name_with_velocity_direction": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "parse_vector_axis"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_parsing.test_std_name_without_direction": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "parse_vector_axis"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_parsing.test_two_padding_types": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "len",
    "parse_padding",
    "pysgrid.tests.test_sgrid_parsing.parse_pad"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_parsing.test_xy_axis_parse": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "parse_axes"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_parsing.test_xyz_axis_parse": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "parse_axes"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_roms": {
  "data": {},
  "type": "module"
 },
 "pysgrid.tests.test_sgrid_roms.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_roms.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_roms.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_roms.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_roms.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_roms.sgrid": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "load_grid",
    "pysgrid.tests.test_sgrid_roms.pytest"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_roms.test_center_lat": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "pysgrid.tests.test_sgrid_roms.sgrid"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_roms.test_center_lon": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pysgrid.tests.test_sgrid_roms.sgrid"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_roms.test_grid_variable_average_axes": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "pysgrid.tests.test_sgrid_roms.sgrid"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_roms.test_grid_variables": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "len",
    "pysgrid.tests.test_sgrid_roms.sgrid",
    "set"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_roms.test_load_from_dataset": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "isinstance",
    "load_grid"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_roms.test_non_grid_variables": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "len",
    "pysgrid.tests.test_sgrid_roms.sgrid",
    "set"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_roms.test_optional_grid_attrs": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "pysgrid.tests.test_sgrid_roms.sgrid"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_roms.test_round_trip": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "isinstance",
    "load_grid",
    "pysgrid.tests.test_sgrid_roms.sgrid"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_roms.test_variable_slicing": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numpy.s_",
    "pysgrid.tests.test_sgrid_roms.sgrid"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_roms.test_variables": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "len",
    "pysgrid.tests.test_sgrid_roms.sgrid"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_variable_deltares": {
  "data": {},
  "type": "module"
 },
 "pysgrid.tests.test_sgrid_variable_deltares.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_variable_deltares.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_variable_deltares.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_variable_deltares.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_variable_deltares.sgrid_vars_deltares": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "GridPadding",
    "SGrid",
    "dict",
    "pysgrid.tests.test_sgrid_variable_deltares.pytest"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_variable_deltares.test_edge_location_inference_deltares": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pysgrid.tests.test_sgrid_variable_deltares.sgrid_vars_deltares"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_variable_deltares.test_face_location_inference_deltares": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pysgrid.tests.test_sgrid_variable_deltares.sgrid_vars_deltares"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_variable_roms": {
  "data": {},
  "type": "module"
 },
 "pysgrid.tests.test_sgrid_variable_roms.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_variable_roms.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_variable_roms.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_variable_roms.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_variable_roms.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_variable_roms.sgrid_variable_roms": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "GridPadding",
    "SGrid",
    "dict",
    "pysgrid.tests.test_sgrid_variable_roms.pytest"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_variable_roms.test_attributes_with_grid": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.dtype",
    "pysgrid.tests.test_sgrid_variable_roms.sgrid_variable_roms"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_variable_roms.test_attributes_with_location": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "numpy.dtype",
    "pysgrid.tests.test_sgrid_variable_roms.sgrid_variable_roms"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_variable_roms.test_create_sgrid_variable_object": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "isinstance",
    "pysgrid.tests.test_sgrid_variable_roms.sgrid_variable_roms"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_variable_roms.test_edge_location_inference": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "pysgrid.tests.test_sgrid_variable_roms.sgrid_variable_roms"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_variable_roms.test_edge_location_inference_with_defined_edges": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "GridPadding",
    "pysgrid.tests.test_sgrid_variable_roms.sgrid_variable_roms"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_variable_roms.test_face_location_inference": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "pysgrid.tests.test_sgrid_variable_roms.sgrid_variable_roms"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_variable_roms.test_vector_directions": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "pysgrid.tests.test_sgrid_variable_roms.sgrid_variable_roms"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_variable_wrf": {
  "data": {},
  "type": "module"
 },
 "pysgrid.tests.test_sgrid_variable_wrf.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_variable_wrf.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_variable_wrf.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_variable_wrf.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_variable_wrf.sgrid_var_wrf": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "GridPadding",
    "SGrid",
    "dict",
    "pysgrid.tests.test_sgrid_variable_wrf.pytest"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_variable_wrf.test_edge_location_inference2": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "pysgrid.tests.test_sgrid_variable_wrf.sgrid_var_wrf"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_variable_wrf.test_face_location_inference1": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "pysgrid.tests.test_sgrid_variable_wrf.sgrid_var_wrf"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_wrf": {
  "data": {},
  "type": "module"
 },
 "pysgrid.tests.test_sgrid_wrf.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_wrf.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_wrf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_wrf.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_wrf.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pysgrid.tests.test_sgrid_wrf.sgrid": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "load_grid",
    "pysgrid.tests.test_sgrid_wrf.pytest"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_wrf.test_node_coordinates": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "pysgrid.tests.test_sgrid_wrf.sgrid"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_wrf.test_node_dimensions": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "pysgrid.tests.test_sgrid_wrf.sgrid"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_wrf.test_nodes": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "pysgrid.tests.test_sgrid_wrf.sgrid"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_wrf.test_roundtrip": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "load_grid"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_wrf.test_sgrid": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "isinstance",
    "pysgrid.tests.test_sgrid_wrf.sgrid"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_wrf.test_topology_dimension": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pysgrid.tests.test_sgrid_wrf.sgrid"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_wrf.test_variable_average_axes": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pysgrid.tests.test_sgrid_wrf.sgrid"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_sgrid_wrf.test_variable_slicing_wrf": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.s_",
    "pysgrid.tests.test_sgrid_wrf.sgrid"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "pysgrid.tests.test_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pysgrid.tests.test_utils.check_element": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "pysgrid.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pysgrid.tests.test_utils.intersection_data": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "pysgrid.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pysgrid.tests.test_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pysgrid.tests.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pysgrid.tests.test_utils.test_angle_from_true_east_calculation": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "calculate_angle_from_true_east",
    "numpy.array",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_utils.test_bearing_calculation": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "calculate_bearing",
    "numpy.array",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_utils.test_intersect_does_not_exist": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "does_intersection_exist",
    "pysgrid.tests.test_utils.intersection_data"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_utils.test_intersect_exists": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "does_intersection_exist",
    "pysgrid.tests.test_utils.intersection_data"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_utils.test_list_with_different_elements": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "check_element_equal",
    "pysgrid.tests.test_utils.check_element"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_utils.test_list_with_identical_elements": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "check_element_equal",
    "pysgrid.tests.test_utils.check_element"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.test_utils.test_pair_arrays": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "pair_arrays"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.write_nc_test_files": {
  "data": {},
  "type": "module"
 },
 "pysgrid.tests.write_nc_test_files.Dataset": {
  "data": {
   "shadows": "netCDF4.Dataset"
  },
  "type": "import"
 },
 "pysgrid.tests.write_nc_test_files.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pysgrid.tests.write_nc_test_files.deltares_sgrid": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "netCDF4.Dataset",
    "numpy.random.random",
    "pysgrid.tests.write_nc_test_files.os",
    "pysgrid.tests.write_nc_test_files.pytest",
    "pysgrid.tests.write_nc_test_files.tempfile"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.write_nc_test_files.deltares_sgrid_no_optional_attr": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "netCDF4.Dataset",
    "numpy.random.random",
    "pysgrid.tests.write_nc_test_files.os",
    "pysgrid.tests.write_nc_test_files.pytest",
    "pysgrid.tests.write_nc_test_files.tempfile"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.write_nc_test_files.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pysgrid.tests.write_nc_test_files.non_compliant_sgrid": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "netCDF4.Dataset",
    "numpy.random.random",
    "pysgrid.tests.write_nc_test_files.os",
    "pysgrid.tests.write_nc_test_files.pytest",
    "pysgrid.tests.write_nc_test_files.tempfile"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.write_nc_test_files.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pysgrid.tests.write_nc_test_files.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pysgrid.tests.write_nc_test_files.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pysgrid.tests.write_nc_test_files.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pysgrid.tests.write_nc_test_files.roms_sgrid": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "netCDF4.Dataset",
    "numpy.random.random",
    "pysgrid.tests.write_nc_test_files.os",
    "pysgrid.tests.write_nc_test_files.pytest",
    "pysgrid.tests.write_nc_test_files.tempfile"
   ]
  },
  "type": "function"
 },
 "pysgrid.tests.write_nc_test_files.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pysgrid.tests.write_nc_test_files.wrf_sgrid": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "netCDF4.Dataset",
    "numpy.dtype",
    "numpy.random.random",
    "pysgrid.tests.write_nc_test_files.os",
    "pysgrid.tests.write_nc_test_files.pytest",
    "pysgrid.tests.write_nc_test_files.tempfile",
    "str"
   ]
  },
  "type": "function"
 },
 "pysgrid.utils": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "pysgrid.utils.GridPadding": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pysgrid.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pysgrid.utils.calculate_angle_from_true_east": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "numpy.append",
    "numpy.pi",
    "pysgrid.utils.calculate_bearing"
   ]
  },
  "type": "function"
 },
 "pysgrid.utils.calculate_bearing": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "numpy.arctan2",
    "numpy.cos",
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "pysgrid.utils.check_element_equal": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "pysgrid.utils.determine_variable_slicing": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "StopIteration",
    "next",
    "numpy.s_",
    "pysgrid.utils.does_intersection_exist",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pysgrid.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pysgrid.utils.does_intersection_exist": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "pysgrid.utils.infer_avg_axes": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "StopIteration",
    "len",
    "next",
    "pysgrid.utils.does_intersection_exist",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pysgrid.utils.infer_variable_location": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "TypeError",
    "pysgrid.utils.does_intersection_exist",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pysgrid.utils.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pysgrid.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pysgrid.utils.pair_arrays": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "pysgrid.utils.points_in_polys": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "numpy.logical_and",
    "numpy.logical_xor",
    "numpy.ma.masked_array",
    "numpy.where",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "pysgrid.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pysgrid.variables": {
  "data": {},
  "type": "module"
 },
 "pysgrid.variables.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pysgrid.variables.SGridVariable": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pysgrid.variables.SGridVariable.__getitem__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "hasattr",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "pysgrid.variables.SGridVariable.__init__": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "pysgrid.variables.SGridVariable.__str__": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "pysgrid.variables.SGridVariable.create_var": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "getattr",
    "hasattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pysgrid.variables.SGridVariable.create_variable": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "AttributeError",
    "classmethod",
    "cls",
    "determine_variable_slicing",
    "infer_avg_axes",
    "infer_variable_location",
    "parse_axes",
    "parse_vector_axis",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pysgrid.variables.SGridVariable.data": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pysgrid.variables.SGridVariable.max": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.max",
    "property"
   ]
  },
  "type": "function"
 },
 "pysgrid.variables.SGridVariable.min": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "numpy.min",
    "property"
   ]
  },
  "type": "function"
 },
 "pysgrid.variables.SGridVariable.ndim": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pysgrid.variables.SGridVariable.shape": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pysgrid.variables.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pysgrid.variables.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pysgrid.variables.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pysgrid.variables.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 }
}