{
 "component_contribution": {
  "data": {
   "symbols_in_volume": [
    "get_versions"
   ]
  },
  "type": "module"
 },
 "component_contribution.ZENODO_DOI_GROUPS": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "component_contribution.ZENODO_DOI_PARAMETERS": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "component_contribution.ZENODO_DOI_PARAMETERS_LEGACY": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "component_contribution.ZENODO_DOI_TRAINING_DATA": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "component_contribution.__version__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "component_contribution._version": {
  "data": {},
  "type": "module"
 },
 "component_contribution._version.get_versions": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "component_contribution._version.json",
    "component_contribution._version.version_json"
   ]
  },
  "type": "function"
 },
 "component_contribution._version.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "component_contribution._version.version_json": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "component_contribution.data": {
  "data": {},
  "type": "module"
 },
 "component_contribution.diskcache": {
  "data": {
   "symbols_in_volume": [
    "IOError",
    "component_contribution.diskcache.asyncio",
    "component_contribution.diskcache.client",
    "component_contribution.diskcache.data",
    "component_contribution.diskcache.data_streams",
    "component_contribution.diskcache.fnames",
    "component_contribution.diskcache.hashlib",
    "component_contribution.diskcache.httpx",
    "component_contribution.diskcache.md5",
    "component_contribution.diskcache.num_bytes",
    "component_contribution.diskcache.pyzenodo3",
    "component_contribution.diskcache.rec",
    "component_contribution.diskcache.tasks",
    "component_contribution.diskcache.total",
    "component_contribution.diskcache.urls",
    "component_contribution.diskcache.zen",
    "dict",
    "download_from_url",
    "int",
    "io.BytesIO",
    "len",
    "str",
    "tqdm.asyncio.tqdm",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "module"
 },
 "component_contribution.diskcache.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "component_contribution.diskcache.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "component_contribution.diskcache.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "component_contribution.diskcache.appdirs": {
  "data": {
   "shadows": "appdirs"
  },
  "type": "import"
 },
 "component_contribution.diskcache.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "component_contribution.diskcache.client": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "component_contribution.diskcache.data": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "component_contribution.diskcache.data_streams": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "component_contribution.diskcache.diskcache": {
  "data": {
   "shadows": "diskcache"
  },
  "type": "import"
 },
 "component_contribution.diskcache.fnames": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "component_contribution.diskcache.get_cached_file": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "KeyError",
    "component_contribution.diskcache.appdirs",
    "component_contribution.diskcache.diskcache",
    "component_contribution.diskcache.get_zenodo_files",
    "component_contribution.diskcache.get_zenodo_version",
    "component_contribution.diskcache.pathlib",
    "io.BytesIO",
    "packaging.version.parse",
    "str"
   ]
  },
  "type": "function"
 },
 "component_contribution.diskcache.get_zenodo_files": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "_get_zenodo_files",
    "component_contribution.diskcache.asyncio",
    "io.BytesIO",
    "str",
    "tenacity.retry",
    "tenacity.stop_after_attempt",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "component_contribution.diskcache.get_zenodo_version": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "component_contribution.diskcache.pyzenodo3",
    "component_contribution.diskcache.rec",
    "component_contribution.diskcache.zen",
    "str",
    "tenacity.retry",
    "tenacity.stop_after_attempt",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "component_contribution.diskcache.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "component_contribution.diskcache.httpx": {
  "data": {
   "shadows": "httpx"
  },
  "type": "import"
 },
 "component_contribution.diskcache.md5": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "component_contribution.diskcache.num_bytes": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "component_contribution.diskcache.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "component_contribution.diskcache.pyzenodo3": {
  "data": {
   "shadows": "pyzenodo3"
  },
  "type": "import"
 },
 "component_contribution.diskcache.rec": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "component_contribution.diskcache.retry": {
  "data": {
   "shadows": "tenacity.retry"
  },
  "type": "import"
 },
 "component_contribution.diskcache.stop_after_attempt": {
  "data": {
   "shadows": "tenacity.stop_after_attempt"
  },
  "type": "import"
 },
 "component_contribution.diskcache.tasks": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "component_contribution.diskcache.total": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "component_contribution.diskcache.tqdm": {
  "data": {
   "shadows": "tqdm.asyncio.tqdm"
  },
  "type": "import"
 },
 "component_contribution.diskcache.urls": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "component_contribution.diskcache.version": {
  "data": {
   "shadows": "packaging.version"
  },
  "type": "import"
 },
 "component_contribution.diskcache.zen": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "component_contribution.linalg": {
  "data": {},
  "type": "module"
 },
 "component_contribution.linalg.LINALG": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "component_contribution.linalg.LINALG.col_uniq": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "component_contribution.linalg.LINALG",
    "numpy.array",
    "staticmethod",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "component_contribution.linalg.LINALG.invert_project": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.fill_diagonal",
    "numpy.linalg.pinv",
    "numpy.ndarray",
    "numpy.zeros",
    "scipy.linalg.svd",
    "staticmethod",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "component_contribution.linalg.LINALG.qr_rank_deficient": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.abs",
    "numpy.array",
    "numpy.diag",
    "range",
    "scipy.linalg.qr",
    "staticmethod",
    "sum"
   ]
  },
  "type": "function"
 },
 "component_contribution.linalg.LINALG.row_uniq": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "len",
    "list",
    "numpy.array",
    "numpy.ndarray",
    "numpy.zeros",
    "range",
    "set",
    "sorted",
    "staticmethod",
    "tuple",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "component_contribution.linalg.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "component_contribution.linalg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "component_contribution.linalg.pinv": {
  "data": {
   "shadows": "numpy.linalg.pinv"
  },
  "type": "import"
 },
 "component_contribution.linalg.qr": {
  "data": {
   "shadows": "scipy.linalg.qr"
  },
  "type": "import"
 },
 "component_contribution.linalg.svd": {
  "data": {
   "shadows": "scipy.linalg.svd"
  },
  "type": "import"
 },
 "component_contribution.parameters": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "component_contribution.parameters.logging"
   ]
  },
  "type": "module"
 },
 "component_contribution.parameters.BinaryIO": {
  "data": {
   "shadows": "typing.BinaryIO"
  },
  "type": "import"
 },
 "component_contribution.parameters.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "component_contribution.parameters.CCModelParameters": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "collections.namedtuple",
    "component_contribution.parameters.PARAMETER_NAMES"
   ]
  },
  "type": "class"
 },
 "component_contribution.parameters.CCModelParameters.from_npz": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "component_contribution.parameters.CCModelParameters",
    "dict",
    "io.BytesIO",
    "numpy.load",
    "pandas.DataFrame",
    "staticmethod",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "component_contribution.parameters.CCModelParameters.from_zenodo": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "component_contribution.parameters.CCModelParameters",
    "get_cached_file",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "component_contribution.parameters.CCModelParameters.to_npz": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "dict",
    "numpy.savez",
    "pandas.DataFrame",
    "str",
    "type",
    "typing.BinaryIO",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "component_contribution.parameters.PARAMETER_NAMES": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "component_contribution.parameters.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "component_contribution.parameters.logger": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "component_contribution.parameters.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "component_contribution.parameters.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "component_contribution.parameters.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "component_contribution.parameters.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "component_contribution.predict": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "component_contribution.predict.logging"
   ]
  },
  "type": "module"
 },
 "component_contribution.predict.Compound": {
  "data": {
   "shadows": "equilibrator_cache.Compound"
  },
  "type": "import"
 },
 "component_contribution.predict.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "component_contribution.predict.FARADAY": {
  "data": {
   "shadows": "equilibrator_cache.FARADAY"
  },
  "type": "import"
 },
 "component_contribution.predict.GibbsEnergyPredictor": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "component_contribution.predict.GibbsEnergyPredictor.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "Preprocessor",
    "equilibrator_cache.Q_",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "component_contribution.predict.GibbsEnergyPredictor.combine_uncertainties": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ValueError",
    "equilibrator_cache.Q_",
    "numpy.hstack",
    "numpy.ndarray",
    "str"
   ]
  },
  "type": "function"
 },
 "component_contribution.predict.GibbsEnergyPredictor.dg_analysis": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "equilibrator_cache.Reaction",
    "object",
    "str",
    "typing.Dict",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "component_contribution.predict.GibbsEnergyPredictor.get_compound_prediction": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "equilibrator_cache.Compound",
    "float",
    "numpy.ndarray",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "component_contribution.predict.GibbsEnergyPredictor.get_reaction_prediction": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "equilibrator_cache.Compound",
    "equilibrator_cache.Reaction",
    "float",
    "numpy.ndarray",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "component_contribution.predict.GibbsEnergyPredictor.is_using_group_contribution": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "bool",
    "equilibrator_cache.Reaction"
   ]
  },
  "type": "function"
 },
 "component_contribution.predict.GibbsEnergyPredictor.multicompartmental_standard_dg_prime": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "equilibrator_cache.FARADAY",
    "equilibrator_cache.Q_",
    "equilibrator_cache.R",
    "equilibrator_cache.Reaction",
    "equilibrator_cache.thermodynamic_constants.default_pMg",
    "equilibrator_cache.ureg.Measurement",
    "equilibrator_cache.ureg.check",
    "float",
    "numpy.log",
    "numpy.sqrt",
    "sum"
   ]
  },
  "type": "function"
 },
 "component_contribution.predict.GibbsEnergyPredictor.standard_dg": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "equilibrator_cache.Q_",
    "equilibrator_cache.Reaction",
    "equilibrator_cache.ureg.Measurement",
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "component_contribution.predict.GibbsEnergyPredictor.standard_dg_multi": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "equilibrator_cache.Q_",
    "equilibrator_cache.Reaction",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "component_contribution.predict.GibbsEnergyPredictor.standard_dg_prime": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "equilibrator_cache.Q_",
    "equilibrator_cache.Reaction",
    "equilibrator_cache.thermodynamic_constants.default_pMg",
    "equilibrator_cache.ureg.Measurement",
    "equilibrator_cache.ureg.check"
   ]
  },
  "type": "function"
 },
 "component_contribution.predict.GibbsEnergyPredictor.standard_dg_prime_multi": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "component_contribution.predict.warnings",
    "enumerate",
    "equilibrator_cache.Q_",
    "equilibrator_cache.Reaction",
    "equilibrator_cache.exceptions.MissingDissociationConstantsException",
    "equilibrator_cache.thermodynamic_constants.default_pMg",
    "equilibrator_cache.ureg.check",
    "numpy.ndarray",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "component_contribution.predict.GibbsEnergyPredictor.standard_dgf": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "equilibrator_cache.Compound",
    "equilibrator_cache.Q_",
    "equilibrator_cache.ureg.Measurement",
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "component_contribution.predict.GibbsEnergyPredictor.standard_dgf_prime": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "equilibrator_cache.Compound",
    "equilibrator_cache.Q_",
    "equilibrator_cache.thermodynamic_constants.default_pMg",
    "equilibrator_cache.ureg.Measurement",
    "equilibrator_cache.ureg.check"
   ]
  },
  "type": "function"
 },
 "component_contribution.predict.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "component_contribution.predict.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "component_contribution.predict.MissingDissociationConstantsException": {
  "data": {
   "shadows": "equilibrator_cache.exceptions.MissingDissociationConstantsException"
  },
  "type": "import"
 },
 "component_contribution.predict.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "component_contribution.predict.Q_": {
  "data": {
   "shadows": "equilibrator_cache.Q_"
  },
  "type": "import"
 },
 "component_contribution.predict.R": {
  "data": {
   "shadows": "equilibrator_cache.R"
  },
  "type": "import"
 },
 "component_contribution.predict.Reaction": {
  "data": {
   "shadows": "equilibrator_cache.Reaction"
  },
  "type": "import"
 },
 "component_contribution.predict.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "component_contribution.predict.default_pMg": {
  "data": {
   "shadows": "equilibrator_cache.thermodynamic_constants.default_pMg"
  },
  "type": "import"
 },
 "component_contribution.predict.logger": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "component_contribution.predict.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "component_contribution.predict.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "component_contribution.predict.ureg": {
  "data": {
   "shadows": "equilibrator_cache.ureg"
  },
  "type": "import"
 },
 "component_contribution.predict.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "component_contribution.preprocessor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "component_contribution.preprocessor.logging"
   ]
  },
  "type": "module"
 },
 "component_contribution.preprocessor.Compound": {
  "data": {
   "shadows": "equilibrator_cache.Compound"
  },
  "type": "import"
 },
 "component_contribution.preprocessor.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "component_contribution.preprocessor.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "component_contribution.preprocessor.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "component_contribution.preprocessor.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "component_contribution.preprocessor.Preprocessor": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "component_contribution.preprocessor.Preprocessor.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "float",
    "numpy.hstack",
    "numpy.sqrt",
    "numpy.vstack",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "component_contribution.preprocessor.Preprocessor._residuals_to_matrix": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "enumerate",
    "equilibrator_cache.Compound",
    "float",
    "len",
    "numpy.ndarray",
    "numpy.zeros",
    "set",
    "sorted",
    "staticmethod",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "component_contribution.preprocessor.Preprocessor.decompose_reaction": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "dict",
    "equilibrator_cache.Compound",
    "equilibrator_cache.Reaction",
    "float",
    "numpy.ndarray",
    "numpy.zeros",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "component_contribution.preprocessor.Preprocessor.dg_analysis": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "abs",
    "equilibrator_cache.Reaction",
    "numpy.argsort",
    "object",
    "range",
    "reversed",
    "str",
    "typing.Dict",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "component_contribution.preprocessor.Preprocessor.get_compound_prediction": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "equilibrator_cache.Compound",
    "float",
    "numpy.ndarray",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "component_contribution.preprocessor.Preprocessor.get_compound_vector": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ValueError",
    "equilibrator_cache.Compound",
    "float",
    "numpy.array",
    "numpy.hstack",
    "numpy.zeros",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "component_contribution.preprocessor.Preprocessor.get_reaction_prediction": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "dict",
    "equilibrator_cache.Compound",
    "equilibrator_cache.Reaction",
    "float",
    "numpy.ndarray",
    "numpy.zeros",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "component_contribution.preprocessor.Preprocessor.get_reaction_prediction_multi": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "equilibrator_cache.Reaction",
    "list",
    "map",
    "numpy.array",
    "numpy.ndarray",
    "numpy.vstack",
    "typing.List",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "component_contribution.preprocessor.Preprocessor.get_reaction_prediction_orthogonal_dof": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "equilibrator_cache.Reaction",
    "list",
    "map",
    "numpy.ndarray",
    "numpy.vstack",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "component_contribution.preprocessor.Preprocessor.is_using_group_contribution": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "bool",
    "component_contribution.preprocessor.logging",
    "equilibrator_cache.Reaction",
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "component_contribution.preprocessor.Reaction": {
  "data": {
   "shadows": "equilibrator_cache.Reaction"
  },
  "type": "import"
 },
 "component_contribution.preprocessor.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "component_contribution.preprocessor.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "component_contribution.preprocessor.logger": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "component_contribution.preprocessor.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "component_contribution.preprocessor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "component_contribution.trainer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "component_contribution.trainer.logging"
   ]
  },
  "type": "module"
 },
 "component_contribution.trainer.Trainer": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "component_contribution.trainer.Trainer.group_incidence_matrix": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "component_contribution.trainer.logger",
    "float",
    "pandas.DataFrame",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "component_contribution.trainer.Trainer.train": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "component_contribution.trainer.Trainer",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "component_contribution.trainer.Trainer.train_from_matrices": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "CCModelParameters",
    "int",
    "len",
    "list",
    "numpy.all",
    "numpy.array",
    "numpy.diag",
    "numpy.where",
    "pandas.DataFrame",
    "pandas.Series",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "component_contribution.trainer.logger": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "component_contribution.trainer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "component_contribution.trainer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "component_contribution.trainer.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "component_contribution.training_data": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "component_contribution.training_data.logging"
   ]
  },
  "type": "module"
 },
 "component_contribution.training_data.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "component_contribution.training_data.Compound": {
  "data": {
   "shadows": "equilibrator_cache.Compound"
  },
  "type": "import"
 },
 "component_contribution.training_data.CompoundCache": {
  "data": {
   "shadows": "equilibrator_cache.CompoundCache"
  },
  "type": "import"
 },
 "component_contribution.training_data.FARADAY": {
  "data": {
   "shadows": "equilibrator_cache.FARADAY"
  },
  "type": "import"
 },
 "component_contribution.training_data.FullTrainingData": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "component_contribution.training_data.TrainingData"
   ]
  },
  "type": "class"
 },
 "component_contribution.training_data.FullTrainingData.__init__": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "component_contribution.training_data.FullTrainingData",
    "equilibrator_cache.CompoundCache",
    "super"
   ]
  },
  "type": "function"
 },
 "component_contribution.training_data.FullTrainingData.create_reaction_dataframe": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "equilibrator_cache.Compound",
    "get_cached_file",
    "pandas.DataFrame",
    "pandas.concat",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "component_contribution.training_data.FullTrainingData.read_formations": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "component_contribution.training_data.logger",
    "equilibrator_cache.Compound",
    "equilibrator_cache.Q_",
    "equilibrator_cache.Reaction",
    "equilibrator_cache.exceptions.ParseException",
    "io.BytesIO",
    "pandas.DataFrame",
    "pandas.isnull",
    "pandas.read_csv",
    "set",
    "str",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "component_contribution.training_data.FullTrainingData.read_redox": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "component_contribution.training_data.logger",
    "equilibrator_cache.Compound",
    "equilibrator_cache.FARADAY.to",
    "equilibrator_cache.Q_",
    "equilibrator_cache.Reaction",
    "io.BytesIO",
    "pandas.DataFrame",
    "pandas.read_csv",
    "set",
    "typing.Set",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "component_contribution.training_data.FullTrainingData.read_tecrdb": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "component_contribution.training_data.logger",
    "equilibrator_cache.Q_",
    "equilibrator_cache.R.to",
    "io.BytesIO",
    "numpy.log",
    "pandas.DataFrame",
    "pandas.isnull",
    "pandas.read_csv"
   ]
  },
  "type": "function"
 },
 "component_contribution.training_data.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "component_contribution.training_data.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "component_contribution.training_data.MissingDissociationConstantsException": {
  "data": {
   "shadows": "equilibrator_cache.exceptions.MissingDissociationConstantsException"
  },
  "type": "import"
 },
 "component_contribution.training_data.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "component_contribution.training_data.ParseException": {
  "data": {
   "shadows": "equilibrator_cache.exceptions.ParseException"
  },
  "type": "import"
 },
 "component_contribution.training_data.Q_": {
  "data": {
   "shadows": "equilibrator_cache.Q_"
  },
  "type": "import"
 },
 "component_contribution.training_data.R": {
  "data": {
   "shadows": "equilibrator_cache.R"
  },
  "type": "import"
 },
 "component_contribution.training_data.Reaction": {
  "data": {
   "shadows": "equilibrator_cache.Reaction"
  },
  "type": "import"
 },
 "component_contribution.training_data.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "component_contribution.training_data.ToyTrainingData": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "component_contribution.training_data.TrainingData"
   ]
  },
  "type": "class"
 },
 "component_contribution.training_data.ToyTrainingData.__init__": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "component_contribution.training_data.ToyTrainingData",
    "super"
   ]
  },
  "type": "function"
 },
 "component_contribution.training_data.ToyTrainingData.create_reaction_dataframe": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "component_contribution.training_data.pkg_resources",
    "equilibrator_cache.Compound",
    "equilibrator_cache.Q_",
    "pandas.DataFrame",
    "pandas.read_csv",
    "set",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "component_contribution.training_data.TrainingData": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "component_contribution.training_data.TrainingData.__init__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "component_contribution.training_data.logger",
    "component_contribution.training_data.warnings",
    "equilibrator_cache.CompoundCache",
    "equilibrator_cache.Q_",
    "get_cached_file",
    "list",
    "pandas.read_csv",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "component_contribution.training_data.TrainingData._balance_reaction": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "component_contribution.training_data.warnings",
    "equilibrator_cache.Reaction",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "component_contribution.training_data.TrainingData._reverse_transform": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "component_contribution.training_data.logger",
    "equilibrator_cache.Q_",
    "equilibrator_cache.exceptions.MissingDissociationConstantsException",
    "float",
    "typing.Iterable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "component_contribution.training_data.TrainingData.assert_data": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "component_contribution.training_data.TrainingData.balance_reactions": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "component_contribution.training_data.TrainingData.compounds": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "any",
    "equilibrator_cache.Compound",
    "map",
    "property",
    "sorted",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "component_contribution.training_data.TrainingData.create_reaction_dataframe": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "NotImplementedError",
    "equilibrator_cache.Compound",
    "pandas.DataFrame",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "component_contribution.training_data.TrainingData.create_stoichiometric_matrix_from_reactions": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "equilibrator_cache.reaction.create_stoichiometric_matrix_from_reactions"
   ]
  },
  "type": "function"
 },
 "component_contribution.training_data.TrainingData.decomposable_compounds": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "equilibrator_cache.Compound",
    "property",
    "set",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "component_contribution.training_data.TrainingData.non_decomposable_compounds": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "equilibrator_cache.Compound",
    "property",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "component_contribution.training_data.TrainingData.parse_formula": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "equilibrator_cache.Reaction",
    "equilibrator_cache.Reaction.parse_formula",
    "str"
   ]
  },
  "type": "function"
 },
 "component_contribution.training_data.TrainingData.standard_dg": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "pandas.Series",
    "property"
   ]
  },
  "type": "function"
 },
 "component_contribution.training_data.TrainingData.stoichiometric_matrix": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "property"
   ]
  },
  "type": "function"
 },
 "component_contribution.training_data.TrainingData.weight": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "pandas.Series",
    "property"
   ]
  },
  "type": "function"
 },
 "component_contribution.training_data.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "component_contribution.training_data.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "component_contribution.training_data.create_stoichiometric_matrix_from_reactions": {
  "data": {
   "shadows": "equilibrator_cache.reaction.create_stoichiometric_matrix_from_reactions"
  },
  "type": "import"
 },
 "component_contribution.training_data.logger": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "component_contribution.training_data.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "component_contribution.training_data.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "component_contribution.training_data.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "component_contribution.training_data.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "component_contribution.training_data.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 }
}