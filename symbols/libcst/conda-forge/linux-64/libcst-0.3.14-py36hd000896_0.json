{
 "libcst": {
  "data": {},
  "type": "module"
 },
 "libcst.Add": {
  "data": {
   "shadows": "libcst._nodes.op.Add"
  },
  "type": "import"
 },
 "libcst.AddAssign": {
  "data": {
   "shadows": "libcst._nodes.op.AddAssign"
  },
  "type": "import"
 },
 "libcst.And": {
  "data": {
   "shadows": "libcst._nodes.op.And"
  },
  "type": "import"
 },
 "libcst.AnnAssign": {
  "data": {
   "shadows": "libcst._nodes.statement.AnnAssign"
  },
  "type": "import"
 },
 "libcst.Annotation": {
  "data": {
   "shadows": "libcst._nodes.expression.Annotation"
  },
  "type": "import"
 },
 "libcst.Arg": {
  "data": {
   "shadows": "libcst._nodes.expression.Arg"
  },
  "type": "import"
 },
 "libcst.AsName": {
  "data": {
   "shadows": "libcst._nodes.statement.AsName"
  },
  "type": "import"
 },
 "libcst.Assert": {
  "data": {
   "shadows": "libcst._nodes.statement.Assert"
  },
  "type": "import"
 },
 "libcst.Assign": {
  "data": {
   "shadows": "libcst._nodes.statement.Assign"
  },
  "type": "import"
 },
 "libcst.AssignEqual": {
  "data": {
   "shadows": "libcst._nodes.op.AssignEqual"
  },
  "type": "import"
 },
 "libcst.AssignTarget": {
  "data": {
   "shadows": "libcst._nodes.statement.AssignTarget"
  },
  "type": "import"
 },
 "libcst.Asynchronous": {
  "data": {
   "shadows": "libcst._nodes.expression.Asynchronous"
  },
  "type": "import"
 },
 "libcst.Attribute": {
  "data": {
   "shadows": "libcst._nodes.expression.Attribute"
  },
  "type": "import"
 },
 "libcst.AugAssign": {
  "data": {
   "shadows": "libcst._nodes.statement.AugAssign"
  },
  "type": "import"
 },
 "libcst.Await": {
  "data": {
   "shadows": "libcst._nodes.expression.Await"
  },
  "type": "import"
 },
 "libcst.BaseAssignTargetExpression": {
  "data": {
   "shadows": "libcst._nodes.expression.BaseAssignTargetExpression"
  },
  "type": "import"
 },
 "libcst.BaseAugOp": {
  "data": {
   "shadows": "libcst._nodes.op.BaseAugOp"
  },
  "type": "import"
 },
 "libcst.BaseBinaryOp": {
  "data": {
   "shadows": "libcst._nodes.op.BaseBinaryOp"
  },
  "type": "import"
 },
 "libcst.BaseBooleanOp": {
  "data": {
   "shadows": "libcst._nodes.op.BaseBooleanOp"
  },
  "type": "import"
 },
 "libcst.BaseComp": {
  "data": {
   "shadows": "libcst._nodes.expression.BaseComp"
  },
  "type": "import"
 },
 "libcst.BaseCompOp": {
  "data": {
   "shadows": "libcst._nodes.op.BaseCompOp"
  },
  "type": "import"
 },
 "libcst.BaseCompoundStatement": {
  "data": {
   "shadows": "libcst._nodes.statement.BaseCompoundStatement"
  },
  "type": "import"
 },
 "libcst.BaseDelTargetExpression": {
  "data": {
   "shadows": "libcst._nodes.expression.BaseDelTargetExpression"
  },
  "type": "import"
 },
 "libcst.BaseDict": {
  "data": {
   "shadows": "libcst._nodes.expression.BaseDict"
  },
  "type": "import"
 },
 "libcst.BaseDictElement": {
  "data": {
   "shadows": "libcst._nodes.expression.BaseDictElement"
  },
  "type": "import"
 },
 "libcst.BaseElement": {
  "data": {
   "shadows": "libcst._nodes.expression.BaseElement"
  },
  "type": "import"
 },
 "libcst.BaseExpression": {
  "data": {
   "shadows": "libcst._nodes.expression.BaseExpression"
  },
  "type": "import"
 },
 "libcst.BaseFormattedStringContent": {
  "data": {
   "shadows": "libcst._nodes.expression.BaseFormattedStringContent"
  },
  "type": "import"
 },
 "libcst.BaseList": {
  "data": {
   "shadows": "libcst._nodes.expression.BaseList"
  },
  "type": "import"
 },
 "libcst.BaseMetadataProvider": {
  "data": {
   "shadows": "libcst.metadata.base_provider.BaseMetadataProvider"
  },
  "type": "import"
 },
 "libcst.BaseNumber": {
  "data": {
   "shadows": "libcst._nodes.expression.BaseNumber"
  },
  "type": "import"
 },
 "libcst.BaseParenthesizableWhitespace": {
  "data": {
   "shadows": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"
  },
  "type": "import"
 },
 "libcst.BaseSet": {
  "data": {
   "shadows": "libcst._nodes.expression.BaseSet"
  },
  "type": "import"
 },
 "libcst.BaseSimpleComp": {
  "data": {
   "shadows": "libcst._nodes.expression.BaseSimpleComp"
  },
  "type": "import"
 },
 "libcst.BaseSlice": {
  "data": {
   "shadows": "libcst._nodes.expression.BaseSlice"
  },
  "type": "import"
 },
 "libcst.BaseSmallStatement": {
  "data": {
   "shadows": "libcst._nodes.statement.BaseSmallStatement"
  },
  "type": "import"
 },
 "libcst.BaseStatement": {
  "data": {
   "shadows": "libcst._nodes.statement.BaseStatement"
  },
  "type": "import"
 },
 "libcst.BaseString": {
  "data": {
   "shadows": "libcst._nodes.expression.BaseString"
  },
  "type": "import"
 },
 "libcst.BaseSuite": {
  "data": {
   "shadows": "libcst._nodes.statement.BaseSuite"
  },
  "type": "import"
 },
 "libcst.BaseUnaryOp": {
  "data": {
   "shadows": "libcst._nodes.op.BaseUnaryOp"
  },
  "type": "import"
 },
 "libcst.BatchableCSTVisitor": {
  "data": {
   "shadows": "libcst._batched_visitor.BatchableCSTVisitor"
  },
  "type": "import"
 },
 "libcst.BatchableMetadataProvider": {
  "data": {
   "shadows": "libcst.metadata.base_provider.BatchableMetadataProvider"
  },
  "type": "import"
 },
 "libcst.BinaryOperation": {
  "data": {
   "shadows": "libcst._nodes.expression.BinaryOperation"
  },
  "type": "import"
 },
 "libcst.BitAnd": {
  "data": {
   "shadows": "libcst._nodes.op.BitAnd"
  },
  "type": "import"
 },
 "libcst.BitAndAssign": {
  "data": {
   "shadows": "libcst._nodes.op.BitAndAssign"
  },
  "type": "import"
 },
 "libcst.BitInvert": {
  "data": {
   "shadows": "libcst._nodes.op.BitInvert"
  },
  "type": "import"
 },
 "libcst.BitOr": {
  "data": {
   "shadows": "libcst._nodes.op.BitOr"
  },
  "type": "import"
 },
 "libcst.BitOrAssign": {
  "data": {
   "shadows": "libcst._nodes.op.BitOrAssign"
  },
  "type": "import"
 },
 "libcst.BitXor": {
  "data": {
   "shadows": "libcst._nodes.op.BitXor"
  },
  "type": "import"
 },
 "libcst.BitXorAssign": {
  "data": {
   "shadows": "libcst._nodes.op.BitXorAssign"
  },
  "type": "import"
 },
 "libcst.BooleanOperation": {
  "data": {
   "shadows": "libcst._nodes.expression.BooleanOperation"
  },
  "type": "import"
 },
 "libcst.Break": {
  "data": {
   "shadows": "libcst._nodes.statement.Break"
  },
  "type": "import"
 },
 "libcst.CSTNode": {
  "data": {
   "shadows": "libcst._nodes.base.CSTNode"
  },
  "type": "import"
 },
 "libcst.CSTNodeT": {
  "data": {
   "shadows": "libcst._visitors.CSTNodeT"
  },
  "type": "import"
 },
 "libcst.CSTTransformer": {
  "data": {
   "shadows": "libcst._visitors.CSTTransformer"
  },
  "type": "import"
 },
 "libcst.CSTValidationError": {
  "data": {
   "shadows": "libcst._nodes.base.CSTValidationError"
  },
  "type": "import"
 },
 "libcst.CSTVisitor": {
  "data": {
   "shadows": "libcst._visitors.CSTVisitor"
  },
  "type": "import"
 },
 "libcst.CSTVisitorT": {
  "data": {
   "shadows": "libcst._visitors.CSTVisitorT"
  },
  "type": "import"
 },
 "libcst.Call": {
  "data": {
   "shadows": "libcst._nodes.expression.Call"
  },
  "type": "import"
 },
 "libcst.ClassDef": {
  "data": {
   "shadows": "libcst._nodes.statement.ClassDef"
  },
  "type": "import"
 },
 "libcst.Colon": {
  "data": {
   "shadows": "libcst._nodes.op.Colon"
  },
  "type": "import"
 },
 "libcst.Comma": {
  "data": {
   "shadows": "libcst._nodes.op.Comma"
  },
  "type": "import"
 },
 "libcst.Comment": {
  "data": {
   "shadows": "libcst._nodes.whitespace.Comment"
  },
  "type": "import"
 },
 "libcst.CompFor": {
  "data": {
   "shadows": "libcst._nodes.expression.CompFor"
  },
  "type": "import"
 },
 "libcst.CompIf": {
  "data": {
   "shadows": "libcst._nodes.expression.CompIf"
  },
  "type": "import"
 },
 "libcst.Comparison": {
  "data": {
   "shadows": "libcst._nodes.expression.Comparison"
  },
  "type": "import"
 },
 "libcst.ComparisonTarget": {
  "data": {
   "shadows": "libcst._nodes.expression.ComparisonTarget"
  },
  "type": "import"
 },
 "libcst.ConcatenatedString": {
  "data": {
   "shadows": "libcst._nodes.expression.ConcatenatedString"
  },
  "type": "import"
 },
 "libcst.Continue": {
  "data": {
   "shadows": "libcst._nodes.statement.Continue"
  },
  "type": "import"
 },
 "libcst.Decorator": {
  "data": {
   "shadows": "libcst._nodes.statement.Decorator"
  },
  "type": "import"
 },
 "libcst.Del": {
  "data": {
   "shadows": "libcst._nodes.statement.Del"
  },
  "type": "import"
 },
 "libcst.Dict": {
  "data": {
   "shadows": "libcst._nodes.expression.Dict"
  },
  "type": "import"
 },
 "libcst.DictComp": {
  "data": {
   "shadows": "libcst._nodes.expression.DictComp"
  },
  "type": "import"
 },
 "libcst.DictElement": {
  "data": {
   "shadows": "libcst._nodes.expression.DictElement"
  },
  "type": "import"
 },
 "libcst.Divide": {
  "data": {
   "shadows": "libcst._nodes.op.Divide"
  },
  "type": "import"
 },
 "libcst.DivideAssign": {
  "data": {
   "shadows": "libcst._nodes.op.DivideAssign"
  },
  "type": "import"
 },
 "libcst.Dot": {
  "data": {
   "shadows": "libcst._nodes.op.Dot"
  },
  "type": "import"
 },
 "libcst.Element": {
  "data": {
   "shadows": "libcst._nodes.expression.Element"
  },
  "type": "import"
 },
 "libcst.Ellipsis": {
  "data": {
   "shadows": "libcst._nodes.expression.Ellipsis"
  },
  "type": "import"
 },
 "libcst.Else": {
  "data": {
   "shadows": "libcst._nodes.statement.Else"
  },
  "type": "import"
 },
 "libcst.EmptyLine": {
  "data": {
   "shadows": "libcst._nodes.whitespace.EmptyLine"
  },
  "type": "import"
 },
 "libcst.Equal": {
  "data": {
   "shadows": "libcst._nodes.op.Equal"
  },
  "type": "import"
 },
 "libcst.ExceptHandler": {
  "data": {
   "shadows": "libcst._nodes.statement.ExceptHandler"
  },
  "type": "import"
 },
 "libcst.Expr": {
  "data": {
   "shadows": "libcst._nodes.statement.Expr"
  },
  "type": "import"
 },
 "libcst.Finally": {
  "data": {
   "shadows": "libcst._nodes.statement.Finally"
  },
  "type": "import"
 },
 "libcst.Float": {
  "data": {
   "shadows": "libcst._nodes.expression.Float"
  },
  "type": "import"
 },
 "libcst.FloorDivide": {
  "data": {
   "shadows": "libcst._nodes.op.FloorDivide"
  },
  "type": "import"
 },
 "libcst.FloorDivideAssign": {
  "data": {
   "shadows": "libcst._nodes.op.FloorDivideAssign"
  },
  "type": "import"
 },
 "libcst.For": {
  "data": {
   "shadows": "libcst._nodes.statement.For"
  },
  "type": "import"
 },
 "libcst.FormattedString": {
  "data": {
   "shadows": "libcst._nodes.expression.FormattedString"
  },
  "type": "import"
 },
 "libcst.FormattedStringExpression": {
  "data": {
   "shadows": "libcst._nodes.expression.FormattedStringExpression"
  },
  "type": "import"
 },
 "libcst.FormattedStringText": {
  "data": {
   "shadows": "libcst._nodes.expression.FormattedStringText"
  },
  "type": "import"
 },
 "libcst.From": {
  "data": {
   "shadows": "libcst._nodes.expression.From"
  },
  "type": "import"
 },
 "libcst.FunctionDef": {
  "data": {
   "shadows": "libcst._nodes.statement.FunctionDef"
  },
  "type": "import"
 },
 "libcst.GeneratorExp": {
  "data": {
   "shadows": "libcst._nodes.expression.GeneratorExp"
  },
  "type": "import"
 },
 "libcst.Global": {
  "data": {
   "shadows": "libcst._nodes.statement.Global"
  },
  "type": "import"
 },
 "libcst.GreaterThan": {
  "data": {
   "shadows": "libcst._nodes.op.GreaterThan"
  },
  "type": "import"
 },
 "libcst.GreaterThanEqual": {
  "data": {
   "shadows": "libcst._nodes.op.GreaterThanEqual"
  },
  "type": "import"
 },
 "libcst.If": {
  "data": {
   "shadows": "libcst._nodes.statement.If"
  },
  "type": "import"
 },
 "libcst.IfExp": {
  "data": {
   "shadows": "libcst._nodes.expression.IfExp"
  },
  "type": "import"
 },
 "libcst.Imaginary": {
  "data": {
   "shadows": "libcst._nodes.expression.Imaginary"
  },
  "type": "import"
 },
 "libcst.Import": {
  "data": {
   "shadows": "libcst._nodes.statement.Import"
  },
  "type": "import"
 },
 "libcst.ImportAlias": {
  "data": {
   "shadows": "libcst._nodes.statement.ImportAlias"
  },
  "type": "import"
 },
 "libcst.ImportFrom": {
  "data": {
   "shadows": "libcst._nodes.statement.ImportFrom"
  },
  "type": "import"
 },
 "libcst.ImportStar": {
  "data": {
   "shadows": "libcst._nodes.op.ImportStar"
  },
  "type": "import"
 },
 "libcst.In": {
  "data": {
   "shadows": "libcst._nodes.op.In"
  },
  "type": "import"
 },
 "libcst.IndentedBlock": {
  "data": {
   "shadows": "libcst._nodes.statement.IndentedBlock"
  },
  "type": "import"
 },
 "libcst.Index": {
  "data": {
   "shadows": "libcst._nodes.expression.Index"
  },
  "type": "import"
 },
 "libcst.Integer": {
  "data": {
   "shadows": "libcst._nodes.expression.Integer"
  },
  "type": "import"
 },
 "libcst.Is": {
  "data": {
   "shadows": "libcst._nodes.op.Is"
  },
  "type": "import"
 },
 "libcst.IsNot": {
  "data": {
   "shadows": "libcst._nodes.op.IsNot"
  },
  "type": "import"
 },
 "libcst.KNOWN_PYTHON_VERSION_STRINGS": {
  "data": {
   "shadows": "libcst._parser.types.config.KNOWN_PYTHON_VERSION_STRINGS"
  },
  "type": "import"
 },
 "libcst.LIBCST_VERSION": {
  "data": {
   "shadows": "libcst._version.LIBCST_VERSION"
  },
  "type": "import"
 },
 "libcst.Lambda": {
  "data": {
   "shadows": "libcst._nodes.expression.Lambda"
  },
  "type": "import"
 },
 "libcst.LeftCurlyBrace": {
  "data": {
   "shadows": "libcst._nodes.expression.LeftCurlyBrace"
  },
  "type": "import"
 },
 "libcst.LeftParen": {
  "data": {
   "shadows": "libcst._nodes.expression.LeftParen"
  },
  "type": "import"
 },
 "libcst.LeftShift": {
  "data": {
   "shadows": "libcst._nodes.op.LeftShift"
  },
  "type": "import"
 },
 "libcst.LeftShiftAssign": {
  "data": {
   "shadows": "libcst._nodes.op.LeftShiftAssign"
  },
  "type": "import"
 },
 "libcst.LeftSquareBracket": {
  "data": {
   "shadows": "libcst._nodes.expression.LeftSquareBracket"
  },
  "type": "import"
 },
 "libcst.LessThan": {
  "data": {
   "shadows": "libcst._nodes.op.LessThan"
  },
  "type": "import"
 },
 "libcst.LessThanEqual": {
  "data": {
   "shadows": "libcst._nodes.op.LessThanEqual"
  },
  "type": "import"
 },
 "libcst.List": {
  "data": {
   "shadows": "libcst._nodes.expression.List"
  },
  "type": "import"
 },
 "libcst.ListComp": {
  "data": {
   "shadows": "libcst._nodes.expression.ListComp"
  },
  "type": "import"
 },
 "libcst.MatrixMultiply": {
  "data": {
   "shadows": "libcst._nodes.op.MatrixMultiply"
  },
  "type": "import"
 },
 "libcst.MatrixMultiplyAssign": {
  "data": {
   "shadows": "libcst._nodes.op.MatrixMultiplyAssign"
  },
  "type": "import"
 },
 "libcst.MaybeSentinel": {
  "data": {
   "shadows": "libcst._maybe_sentinel.MaybeSentinel"
  },
  "type": "import"
 },
 "libcst.MetadataDependent": {
  "data": {
   "shadows": "libcst._metadata_dependent.MetadataDependent"
  },
  "type": "import"
 },
 "libcst.MetadataException": {
  "data": {
   "shadows": "libcst._exceptions.MetadataException"
  },
  "type": "import"
 },
 "libcst.MetadataWrapper": {
  "data": {
   "shadows": "libcst.metadata.wrapper.MetadataWrapper"
  },
  "type": "import"
 },
 "libcst.Minus": {
  "data": {
   "shadows": "libcst._nodes.op.Minus"
  },
  "type": "import"
 },
 "libcst.Module": {
  "data": {
   "shadows": "libcst._nodes.module.Module"
  },
  "type": "import"
 },
 "libcst.Modulo": {
  "data": {
   "shadows": "libcst._nodes.op.Modulo"
  },
  "type": "import"
 },
 "libcst.ModuloAssign": {
  "data": {
   "shadows": "libcst._nodes.op.ModuloAssign"
  },
  "type": "import"
 },
 "libcst.Multiply": {
  "data": {
   "shadows": "libcst._nodes.op.Multiply"
  },
  "type": "import"
 },
 "libcst.MultiplyAssign": {
  "data": {
   "shadows": "libcst._nodes.op.MultiplyAssign"
  },
  "type": "import"
 },
 "libcst.Name": {
  "data": {
   "shadows": "libcst._nodes.expression.Name"
  },
  "type": "import"
 },
 "libcst.NameItem": {
  "data": {
   "shadows": "libcst._nodes.statement.NameItem"
  },
  "type": "import"
 },
 "libcst.NamedExpr": {
  "data": {
   "shadows": "libcst._nodes.expression.NamedExpr"
  },
  "type": "import"
 },
 "libcst.Newline": {
  "data": {
   "shadows": "libcst._nodes.whitespace.Newline"
  },
  "type": "import"
 },
 "libcst.Nonlocal": {
  "data": {
   "shadows": "libcst._nodes.statement.Nonlocal"
  },
  "type": "import"
 },
 "libcst.Not": {
  "data": {
   "shadows": "libcst._nodes.op.Not"
  },
  "type": "import"
 },
 "libcst.NotEqual": {
  "data": {
   "shadows": "libcst._nodes.op.NotEqual"
  },
  "type": "import"
 },
 "libcst.NotIn": {
  "data": {
   "shadows": "libcst._nodes.op.NotIn"
  },
  "type": "import"
 },
 "libcst.Or": {
  "data": {
   "shadows": "libcst._nodes.op.Or"
  },
  "type": "import"
 },
 "libcst.Param": {
  "data": {
   "shadows": "libcst._nodes.expression.Param"
  },
  "type": "import"
 },
 "libcst.ParamSlash": {
  "data": {
   "shadows": "libcst._nodes.expression.ParamSlash"
  },
  "type": "import"
 },
 "libcst.ParamStar": {
  "data": {
   "shadows": "libcst._nodes.expression.ParamStar"
  },
  "type": "import"
 },
 "libcst.Parameters": {
  "data": {
   "shadows": "libcst._nodes.expression.Parameters"
  },
  "type": "import"
 },
 "libcst.ParenthesizedWhitespace": {
  "data": {
   "shadows": "libcst._nodes.whitespace.ParenthesizedWhitespace"
  },
  "type": "import"
 },
 "libcst.ParserSyntaxError": {
  "data": {
   "shadows": "libcst._exceptions.ParserSyntaxError"
  },
  "type": "import"
 },
 "libcst.PartialParserConfig": {
  "data": {
   "shadows": "libcst._parser.types.config.PartialParserConfig"
  },
  "type": "import"
 },
 "libcst.Pass": {
  "data": {
   "shadows": "libcst._nodes.statement.Pass"
  },
  "type": "import"
 },
 "libcst.Plus": {
  "data": {
   "shadows": "libcst._nodes.op.Plus"
  },
  "type": "import"
 },
 "libcst.Power": {
  "data": {
   "shadows": "libcst._nodes.op.Power"
  },
  "type": "import"
 },
 "libcst.PowerAssign": {
  "data": {
   "shadows": "libcst._nodes.op.PowerAssign"
  },
  "type": "import"
 },
 "libcst.Raise": {
  "data": {
   "shadows": "libcst._nodes.statement.Raise"
  },
  "type": "import"
 },
 "libcst.RemovalSentinel": {
  "data": {
   "shadows": "libcst._removal_sentinel.RemovalSentinel"
  },
  "type": "import"
 },
 "libcst.RemoveFromParent": {
  "data": {
   "shadows": "libcst._removal_sentinel.RemoveFromParent"
  },
  "type": "import"
 },
 "libcst.Return": {
  "data": {
   "shadows": "libcst._nodes.statement.Return"
  },
  "type": "import"
 },
 "libcst.RightCurlyBrace": {
  "data": {
   "shadows": "libcst._nodes.expression.RightCurlyBrace"
  },
  "type": "import"
 },
 "libcst.RightParen": {
  "data": {
   "shadows": "libcst._nodes.expression.RightParen"
  },
  "type": "import"
 },
 "libcst.RightShift": {
  "data": {
   "shadows": "libcst._nodes.op.RightShift"
  },
  "type": "import"
 },
 "libcst.RightShiftAssign": {
  "data": {
   "shadows": "libcst._nodes.op.RightShiftAssign"
  },
  "type": "import"
 },
 "libcst.RightSquareBracket": {
  "data": {
   "shadows": "libcst._nodes.expression.RightSquareBracket"
  },
  "type": "import"
 },
 "libcst.Semicolon": {
  "data": {
   "shadows": "libcst._nodes.op.Semicolon"
  },
  "type": "import"
 },
 "libcst.Set": {
  "data": {
   "shadows": "libcst._nodes.expression.Set"
  },
  "type": "import"
 },
 "libcst.SetComp": {
  "data": {
   "shadows": "libcst._nodes.expression.SetComp"
  },
  "type": "import"
 },
 "libcst.SimpleStatementLine": {
  "data": {
   "shadows": "libcst._nodes.statement.SimpleStatementLine"
  },
  "type": "import"
 },
 "libcst.SimpleStatementSuite": {
  "data": {
   "shadows": "libcst._nodes.statement.SimpleStatementSuite"
  },
  "type": "import"
 },
 "libcst.SimpleString": {
  "data": {
   "shadows": "libcst._nodes.expression.SimpleString"
  },
  "type": "import"
 },
 "libcst.SimpleWhitespace": {
  "data": {
   "shadows": "libcst._nodes.whitespace.SimpleWhitespace"
  },
  "type": "import"
 },
 "libcst.Slice": {
  "data": {
   "shadows": "libcst._nodes.expression.Slice"
  },
  "type": "import"
 },
 "libcst.StarredDictElement": {
  "data": {
   "shadows": "libcst._nodes.expression.StarredDictElement"
  },
  "type": "import"
 },
 "libcst.StarredElement": {
  "data": {
   "shadows": "libcst._nodes.expression.StarredElement"
  },
  "type": "import"
 },
 "libcst.Subscript": {
  "data": {
   "shadows": "libcst._nodes.expression.Subscript"
  },
  "type": "import"
 },
 "libcst.SubscriptElement": {
  "data": {
   "shadows": "libcst._nodes.expression.SubscriptElement"
  },
  "type": "import"
 },
 "libcst.Subtract": {
  "data": {
   "shadows": "libcst._nodes.op.Subtract"
  },
  "type": "import"
 },
 "libcst.SubtractAssign": {
  "data": {
   "shadows": "libcst._nodes.op.SubtractAssign"
  },
  "type": "import"
 },
 "libcst.TrailingWhitespace": {
  "data": {
   "shadows": "libcst._nodes.whitespace.TrailingWhitespace"
  },
  "type": "import"
 },
 "libcst.Try": {
  "data": {
   "shadows": "libcst._nodes.statement.Try"
  },
  "type": "import"
 },
 "libcst.Tuple": {
  "data": {
   "shadows": "libcst._nodes.expression.Tuple"
  },
  "type": "import"
 },
 "libcst.UnaryOperation": {
  "data": {
   "shadows": "libcst._nodes.expression.UnaryOperation"
  },
  "type": "import"
 },
 "libcst.VisitorMetadataProvider": {
  "data": {
   "shadows": "libcst.metadata.base_provider.VisitorMetadataProvider"
  },
  "type": "import"
 },
 "libcst.While": {
  "data": {
   "shadows": "libcst._nodes.statement.While"
  },
  "type": "import"
 },
 "libcst.With": {
  "data": {
   "shadows": "libcst._nodes.statement.With"
  },
  "type": "import"
 },
 "libcst.WithItem": {
  "data": {
   "shadows": "libcst._nodes.statement.WithItem"
  },
  "type": "import"
 },
 "libcst.Yield": {
  "data": {
   "shadows": "libcst._nodes.expression.Yield"
  },
  "type": "import"
 },
 "libcst.__all__": {
  "data": {
   "lineno": 205
  },
  "type": "constant"
 },
 "libcst._add_slots": {
  "data": {
   "symbols_in_volume": [
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "libcst._add_slots.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._add_slots.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "libcst._add_slots.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "libcst._add_slots.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "libcst._add_slots._T": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "libcst._add_slots.add_slots": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "getattr",
    "libcst._add_slots._T",
    "libcst._add_slots.dataclasses",
    "tuple",
    "type",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "libcst._add_slots.add_slots.__getstate__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "object",
    "str",
    "typing.Any",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "libcst._add_slots.add_slots.__setstate__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "object",
    "object.__setattr__",
    "str",
    "typing.Any",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "libcst._add_slots.dataclasses": {
  "data": {
   "shadows": "dataclasses"
  },
  "type": "import"
 },
 "libcst._batched_visitor": {
  "data": {
   "symbols_in_volume": [
    "libcst._batched_visitor.VisitorMethod",
    "str",
    "typing.Callable",
    "typing.List",
    "typing.Mapping",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "libcst._batched_visitor.BatchableCSTVisitor": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "libcst._metadata_dependent.MetadataDependent",
    "libcst._typed_visitor.CSTTypedVisitorFunctions"
   ]
  },
  "type": "class"
 },
 "libcst._batched_visitor.BatchableCSTVisitor.get_visitors": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "libcst._batched_visitor.VisitorMethod",
    "libcst._batched_visitor.inspect",
    "str",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "libcst._batched_visitor.CSTNode": {
  "data": {
   "shadows": "libcst._nodes.base.CSTNode"
  },
  "type": "import"
 },
 "libcst._batched_visitor.CSTNodeT": {
  "data": {
   "shadows": "libcst._visitors.CSTNodeT"
  },
  "type": "import"
 },
 "libcst._batched_visitor.CSTTypedVisitorFunctions": {
  "data": {
   "shadows": "libcst._typed_visitor.CSTTypedVisitorFunctions"
  },
  "type": "import"
 },
 "libcst._batched_visitor.CSTVisitor": {
  "data": {
   "shadows": "libcst._visitors.CSTVisitor"
  },
  "type": "import"
 },
 "libcst._batched_visitor.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst._batched_visitor.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "libcst._batched_visitor.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst._batched_visitor.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "libcst._batched_visitor.MetadataDependent": {
  "data": {
   "shadows": "libcst._metadata_dependent.MetadataDependent"
  },
  "type": "import"
 },
 "libcst._batched_visitor.MutableMapping": {
  "data": {
   "shadows": "typing.MutableMapping"
  },
  "type": "import"
 },
 "libcst._batched_visitor.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst._batched_visitor.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "libcst._batched_visitor.VisitorMethod": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "libcst._batched_visitor._BatchedCSTVisitor": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "libcst._batched_visitor.VisitorMethod",
    "libcst._batched_visitor._VisitorMethodCollection",
    "libcst._visitors.CSTVisitor",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "libcst._batched_visitor._BatchedCSTVisitor.__init__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "libcst._batched_visitor.VisitorMethod",
    "libcst._batched_visitor._VisitorMethodCollection",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._batched_visitor._BatchedCSTVisitor.on_leave": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "after_leave",
    "type",
    "v"
   ]
  },
  "type": "function"
 },
 "libcst._batched_visitor._BatchedCSTVisitor.on_leave_attribute": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "str",
    "type",
    "v"
   ]
  },
  "type": "function"
 },
 "libcst._batched_visitor._BatchedCSTVisitor.on_visit": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "before_visit",
    "bool",
    "type",
    "v"
   ]
  },
  "type": "function"
 },
 "libcst._batched_visitor._BatchedCSTVisitor.on_visit_attribute": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "str",
    "type",
    "v"
   ]
  },
  "type": "function"
 },
 "libcst._batched_visitor._VisitorMethodCollection": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "libcst._batched_visitor._get_visitor_methods": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "libcst._batched_visitor.BatchableCSTVisitor",
    "libcst._batched_visitor.VisitorMethod",
    "libcst._batched_visitor._VisitorMethodCollection",
    "str",
    "typing.Iterable",
    "typing.List",
    "typing.MutableMapping"
   ]
  },
  "type": "function"
 },
 "libcst._batched_visitor.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "libcst._batched_visitor.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "libcst._batched_visitor.visit_batched": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "libcst._batched_visitor.BatchableCSTVisitor",
    "libcst._batched_visitor.VisitorMethod",
    "libcst._batched_visitor._BatchedCSTVisitor",
    "libcst._batched_visitor._get_visitor_methods",
    "libcst._visitors.CSTNodeT",
    "typing.Iterable",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst._exceptions": {
  "data": {
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "module"
 },
 "libcst._exceptions.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._exceptions.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst._exceptions.EOFSentinel": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "enum.Enum",
    "enum.auto"
   ]
  },
  "type": "class"
 },
 "libcst._exceptions.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "libcst._exceptions.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "libcst._exceptions.MetadataException": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "libcst._exceptions.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst._exceptions.ParserSyntaxError": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "Exception",
    "int",
    "str",
    "typing.Sequence",
    "typing_extensions.final"
   ]
  },
  "type": "class"
 },
 "libcst._exceptions.ParserSyntaxError.__init__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "int",
    "libcst._exceptions.ParserSyntaxError",
    "str",
    "super",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst._exceptions.ParserSyntaxError.__reduce__": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "libcst._exceptions._parser_syntax_error_unpickle",
    "object",
    "typing.Callable",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "libcst._exceptions.ParserSyntaxError.__repr__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._exceptions.ParserSyntaxError.__str__": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._exceptions.ParserSyntaxError.context": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "len",
    "libcst._tabs.expand_tabs",
    "property",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._exceptions.ParserSyntaxError.editor_column": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "int",
    "len",
    "libcst._tabs.expand_tabs",
    "property"
   ]
  },
  "type": "function"
 },
 "libcst._exceptions.ParserSyntaxError.editor_line": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "libcst._exceptions.PartialParserSyntaxError": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "Exception",
    "str",
    "typing_extensions.final"
   ]
  },
  "type": "class"
 },
 "libcst._exceptions.PartialParserSyntaxError.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._exceptions.PythonTokenTypes": {
  "data": {
   "shadows": "libcst._parser.parso.python.token.PythonTokenTypes"
  },
  "type": "import"
 },
 "libcst._exceptions.ReservedString": {
  "data": {
   "shadows": "libcst._parser.parso.pgen2.generator.ReservedString"
  },
  "type": "import"
 },
 "libcst._exceptions.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst._exceptions.Token": {
  "data": {
   "shadows": "libcst._parser.types.token.Token"
  },
  "type": "import"
 },
 "libcst._exceptions.TokenType": {
  "data": {
   "shadows": "libcst._parser.parso.python.token.TokenType"
  },
  "type": "import"
 },
 "libcst._exceptions.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "libcst._exceptions.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst._exceptions._parser_syntax_error_unpickle": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "libcst._exceptions.ParserSyntaxError",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._exceptions.auto": {
  "data": {
   "shadows": "enum.auto"
  },
  "type": "import"
 },
 "libcst._exceptions.expand_tabs": {
  "data": {
   "shadows": "libcst._tabs.expand_tabs"
  },
  "type": "import"
 },
 "libcst._exceptions.final": {
  "data": {
   "shadows": "typing_extensions.final"
  },
  "type": "import"
 },
 "libcst._exceptions.get_expected_str": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "libcst._exceptions.EOFSentinel",
    "libcst._parser.parso.pgen2.generator.ReservedString",
    "libcst._parser.parso.python.token.PythonTokenTypes.DEDENT",
    "libcst._parser.parso.python.token.PythonTokenTypes.ENDMARKER",
    "libcst._parser.parso.python.token.PythonTokenTypes.INDENT",
    "libcst._parser.parso.python.token.TokenType",
    "libcst._parser.types.token.Token",
    "repr",
    "sorted",
    "str",
    "typing.Iterable",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._maybe_sentinel": {
  "data": {},
  "type": "module"
 },
 "libcst._maybe_sentinel.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "libcst._maybe_sentinel.MaybeSentinel": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "enum.Enum",
    "enum.auto"
   ]
  },
  "type": "class"
 },
 "libcst._maybe_sentinel.MaybeSentinel.__repr__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._maybe_sentinel.auto": {
  "data": {
   "shadows": "enum.auto"
  },
  "type": "import"
 },
 "libcst._metadata_dependent": {
  "data": {
   "symbols_in_volume": [
    "object",
    "typing.TYPE_CHECKING",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "libcst._metadata_dependent.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "libcst._metadata_dependent.BaseMetadataProvider": {
  "data": {
   "shadows": "libcst.metadata.base_provider.BaseMetadataProvider"
  },
  "type": "import"
 },
 "libcst._metadata_dependent.CSTNode": {
  "data": {
   "shadows": "libcst._nodes.base.CSTNode"
  },
  "type": "import"
 },
 "libcst._metadata_dependent.ClassVar": {
  "data": {
   "shadows": "typing.ClassVar"
  },
  "type": "import"
 },
 "libcst._metadata_dependent.Collection": {
  "data": {
   "shadows": "typing.Collection"
  },
  "type": "import"
 },
 "libcst._metadata_dependent.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "libcst._metadata_dependent.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "libcst._metadata_dependent.MetadataDependent": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "abc.ABC",
    "object",
    "typing.ClassVar",
    "typing.Collection",
    "typing.Mapping"
   ]
  },
  "type": "class"
 },
 "libcst._metadata_dependent.MetadataDependent.__init__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "libcst._metadata_dependent.MetadataDependent.get_inherited_dependencies": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "AttributeError",
    "classmethod",
    "frozenset",
    "issubclass",
    "libcst._metadata_dependent.MetadataDependent",
    "libcst._metadata_dependent.inspect",
    "set",
    "typing.Collection"
   ]
  },
  "type": "function"
 },
 "libcst._metadata_dependent.MetadataDependent.get_metadata": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "KeyError",
    "libcst._metadata_dependent._T",
    "libcst._metadata_dependent._UNDEFINED_DEFAULT",
    "type",
    "typing.Type",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst._metadata_dependent.MetadataDependent.resolve": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "libcst._metadata_dependent.MetadataWrapper": {
  "data": {
   "shadows": "libcst.metadata.wrapper.MetadataWrapper"
  },
  "type": "import"
 },
 "libcst._metadata_dependent.ProviderT": {
  "data": {
   "shadows": "libcst.metadata.base_provider.ProviderT"
  },
  "type": "import"
 },
 "libcst._metadata_dependent.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "libcst._metadata_dependent.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "libcst._metadata_dependent.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "libcst._metadata_dependent._T": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "libcst._metadata_dependent._UNDEFINED_DEFAULT": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "libcst._metadata_dependent.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "libcst._metadata_dependent.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "libcst._metadata_dependent.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "libcst._nodes": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.base": {
  "data": {
   "symbols_in_volume": [
    "typing.Sequence",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "libcst._nodes.base.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "libcst._nodes.base.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.base.BaseLeaf": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.base.CSTNode"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.base.BaseLeaf._visit_and_replace_children": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "libcst._nodes.base._CSTNodeSelfT",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base.BaseLeaf.children": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "libcst._nodes.base.CSTNode",
    "property",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base.BaseValueToken": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.base.BaseLeaf",
    "str"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.base.BaseValueToken._codegen_impl": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base.CSTCodegenError": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "SyntaxError"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.base.CSTNode": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "abc.ABC",
    "dataclasses.dataclass"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.base.CSTNode.__eq__": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "bool",
    "libcst._nodes.base._CSTNodeSelfT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base.CSTNode.__hash__": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "id",
    "int"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base.CSTNode.__init_subclass__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "classmethod",
    "libcst._nodes.base.CSTNode",
    "super",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base.CSTNode.__post_init__": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "libcst._nodes.base.CSTNode.__repr__": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "dataclasses.fields",
    "getattr",
    "len",
    "libcst._nodes.base._indent",
    "libcst._nodes.base._pretty_repr",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base.CSTNode._codegen": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base.CSTNode._codegen_impl": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base.CSTNode._is_removable": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base.CSTNode._validate": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "libcst._nodes.base.CSTNode._visit_and_replace_children": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base.CSTNode.children": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "libcst._nodes.base._ChildrenCollectionVisitor",
    "property",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base.CSTNode.deep_clone": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "TypeError",
    "bytes",
    "dataclasses.field",
    "dataclasses.field.name",
    "dataclasses.fields",
    "getattr",
    "isinstance",
    "libcst._nodes.base._CSTNodeSelfT",
    "libcst._nodes.base._clone",
    "object",
    "str",
    "tuple",
    "type",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base.CSTNode.deep_equals": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "bool",
    "libcst._nodes.deep_equals.deep_equals"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base.CSTNode.deep_remove": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "libcst._nodes.base._CSTNodeSelfT",
    "libcst._nodes.base._ChildReplacementTransformer",
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._removal_sentinel.RemovalSentinel.REMOVE",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base.CSTNode.deep_replace": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "libcst._nodes.base._CSTNodeSelfT",
    "libcst._nodes.base._ChildReplacementTransformer",
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._types.CSTNodeT",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base.CSTNode.field": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "dataclasses.field",
    "object",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base.CSTNode.validate_types_deep": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "libcst._nodes.base.CSTNode.validate_types_shallow": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "TypeError",
    "dataclasses.fields",
    "getattr",
    "libcst._type_enforce.is_value_of_type",
    "type"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base.CSTNode.visit": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.base._CSTNodeSelfT",
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._visitors.CSTVisitor",
    "libcst._visitors.CSTVisitorT",
    "type",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base.CSTNode.with_changes": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "dataclasses.replace",
    "libcst._nodes.base._CSTNodeSelfT",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base.CSTNode.with_deep_changes": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "libcst._nodes.base._CSTNodeSelfT",
    "libcst._nodes.base._ChildWithChangesTransformer",
    "libcst._removal_sentinel.RemovalSentinel",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base.CSTNodeT": {
  "data": {
   "shadows": "libcst._types.CSTNodeT"
  },
  "type": "import"
 },
 "libcst._nodes.base.CSTTransformer": {
  "data": {
   "shadows": "libcst._visitors.CSTTransformer"
  },
  "type": "import"
 },
 "libcst._nodes.base.CSTValidationError": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "SyntaxError"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.base.CSTVisitor": {
  "data": {
   "shadows": "libcst._visitors.CSTVisitor"
  },
  "type": "import"
 },
 "libcst._nodes.base.CSTVisitorT": {
  "data": {
   "shadows": "libcst._visitors.CSTVisitorT"
  },
  "type": "import"
 },
 "libcst._nodes.base.CodegenState": {
  "data": {
   "shadows": "libcst._nodes.internal.CodegenState"
  },
  "type": "import"
 },
 "libcst._nodes.base.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "libcst._nodes.base.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst._nodes.base.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "libcst._nodes.base.RemovalSentinel": {
  "data": {
   "shadows": "libcst._removal_sentinel.RemovalSentinel"
  },
  "type": "import"
 },
 "libcst._nodes.base.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst._nodes.base.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "libcst._nodes.base.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst._nodes.base._CSTNodeSelfT": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "libcst._nodes.base._ChildReplacementTransformer": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "libcst._visitors.CSTTransformer"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.base._ChildReplacementTransformer.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base._ChildReplacementTransformer.on_leave": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base._ChildReplacementTransformer.on_visit": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base._ChildWithChangesTransformer": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "libcst._visitors.CSTTransformer"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.base._ChildWithChangesTransformer.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base._ChildWithChangesTransformer.on_leave": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "libcst._nodes.base._ChildWithChangesTransformer.on_visit": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base._ChildrenCollectionVisitor": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "libcst._visitors.CSTVisitor"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.base._ChildrenCollectionVisitor.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base._ChildrenCollectionVisitor.on_visit": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base._NOOPVisitor": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "libcst._visitors.CSTTransformer"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.base._clone": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "AttributeError",
    "copy.deepcopy",
    "object"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base._indent": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base._pretty_repr": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "isinstance",
    "libcst._nodes.base._pretty_repr_sequence",
    "object",
    "repr",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base._pretty_repr_sequence": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "len",
    "libcst._nodes.base._indent",
    "object",
    "repr",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "libcst._nodes.base.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "libcst._nodes.base.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "libcst._nodes.base.deep_equals_impl": {
  "data": {
   "shadows": "libcst._nodes.deep_equals.deep_equals"
  },
  "type": "import"
 },
 "libcst._nodes.base.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "libcst._nodes.base.field": {
  "data": {
   "shadows": "dataclasses.field"
  },
  "type": "import"
 },
 "libcst._nodes.base.fields": {
  "data": {
   "shadows": "dataclasses.fields"
  },
  "type": "import"
 },
 "libcst._nodes.base.is_value_of_type": {
  "data": {
   "shadows": "libcst._type_enforce.is_value_of_type"
  },
  "type": "import"
 },
 "libcst._nodes.base.replace": {
  "data": {
   "shadows": "dataclasses.replace"
  },
  "type": "import"
 },
 "libcst._nodes.deep_equals": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.deep_equals.CSTNode": {
  "data": {
   "shadows": "libcst._nodes.base.CSTNode"
  },
  "type": "import"
 },
 "libcst._nodes.deep_equals.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst._nodes.deep_equals._deep_equals_cst_node": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "bool",
    "dataclasses.fields",
    "getattr",
    "libcst._nodes.deep_equals.deep_equals",
    "type"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.deep_equals._deep_equals_sequence": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "all",
    "bool",
    "len",
    "libcst._nodes.deep_equals.deep_equals",
    "object",
    "typing.Sequence",
    "zip"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.deep_equals.deep_equals": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "isinstance",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.deep_equals._deep_equals_cst_node",
    "libcst._nodes.deep_equals._deep_equals_sequence",
    "object",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.deep_equals.fields": {
  "data": {
   "shadows": "dataclasses.fields"
  },
  "type": "import"
 },
 "libcst._nodes.expression": {
  "data": {
   "symbols_in_volume": [
    "typing_extensions.Literal"
   ]
  },
  "type": "module"
 },
 "libcst._nodes.expression.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "libcst._nodes.expression.Annotation": {
  "data": {
   "lineno": 1590,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.Annotation._codegen_impl": {
  "data": {
   "lineno": 1637,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._nodes.base.CSTCodegenError",
    "libcst._nodes.internal.CodegenState",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Annotation._visit_and_replace_children": {
  "data": {
   "lineno": 1620,
   "symbols_in_volume": [
    "libcst._nodes.expression.Annotation",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sentinel",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Arg": {
  "data": {
   "lineno": 2107,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.expression.Name",
    "libcst._nodes.op.AssignEqual",
    "libcst._nodes.op.Comma",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "typing.Optional",
    "typing.Union",
    "typing_extensions.Literal"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.Arg._codegen_impl": {
  "data": {
   "lineno": 2166,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.internal.CodegenState",
    "libcst._nodes.op.AssignEqual",
    "libcst._nodes.op.Comma"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Arg._validate": {
  "data": {
   "lineno": 2141,
   "symbols_in_volume": [
    "isinstance",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.op.AssignEqual"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Arg._visit_and_replace_children": {
  "data": {
   "lineno": 2151,
   "symbols_in_volume": [
    "libcst._nodes.expression.Arg",
    "libcst._nodes.internal.visit_optional",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sentinel",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.AssignEqual": {
  "data": {
   "shadows": "libcst._nodes.op.AssignEqual"
  },
  "type": "import"
 },
 "libcst._nodes.expression.Asynchronous": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.whitespace.SimpleWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.Asynchronous._codegen_impl": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Asynchronous._validate": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "len",
    "libcst._nodes.base.CSTValidationError"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Asynchronous._visit_and_replace_children": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "libcst._nodes.expression.Asynchronous",
    "libcst._nodes.internal.visit_required",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Attribute": {
  "data": {
   "lineno": 1355,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseAssignTargetExpression",
    "libcst._nodes.expression.BaseDelTargetExpression",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.Name",
    "libcst._nodes.expression.RightParen",
    "libcst._nodes.op.Dot",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.Attribute._codegen_impl": {
  "data": {
   "lineno": 1405,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Attribute._safe_to_use_with_word_operator": {
  "data": {
   "lineno": 1398,
   "symbols_in_volume": [
    "bool",
    "libcst._nodes.expression.Attribute",
    "libcst._nodes.expression.ExpressionPosition",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Attribute._visit_and_replace_children": {
  "data": {
   "lineno": 1389,
   "symbols_in_volume": [
    "libcst._nodes.expression.Attribute",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Await": {
  "data": {
   "lineno": 2359,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.RightParen",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.Await._codegen_impl": {
  "data": {
   "lineno": 2396,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Await._validate": {
  "data": {
   "lineno": 2379,
   "symbols_in_volume": [
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.Await",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Await._visit_and_replace_children": {
  "data": {
   "lineno": 2386,
   "symbols_in_volume": [
    "libcst._nodes.expression.Await",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.BaseAssignTargetExpression": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.expression.BaseExpression"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.BaseBinaryOp": {
  "data": {
   "shadows": "libcst._nodes.op.BaseBinaryOp"
  },
  "type": "import"
 },
 "libcst._nodes.expression.BaseBooleanOp": {
  "data": {
   "shadows": "libcst._nodes.op.BaseBooleanOp"
  },
  "type": "import"
 },
 "libcst._nodes.expression.BaseComp": {
  "data": {
   "lineno": 3403,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.expression.CompFor"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.BaseCompOp": {
  "data": {
   "shadows": "libcst._nodes.op.BaseCompOp"
  },
  "type": "import"
 },
 "libcst._nodes.expression.BaseDelTargetExpression": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.expression.BaseExpression"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.BaseDict": {
  "data": {
   "lineno": 3127,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.expression._BaseSetOrDict"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.BaseDictElement": {
  "data": {
   "lineno": 2671,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.expression._BaseElementImpl"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.BaseElement": {
  "data": {
   "lineno": 2664,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.expression._BaseElementImpl"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.BaseExpression": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.expression._BaseParenthesizedNode"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.BaseExpression._check_left_right_word_concatenation_safety": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "bool",
    "libcst._nodes.expression.ExpressionPosition"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.BaseExpression._safe_to_use_with_word_operator": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "bool",
    "len",
    "libcst._nodes.expression.ExpressionPosition"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.BaseFormattedStringContent": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.base.CSTNode"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.BaseList": {
  "data": {
   "lineno": 2953,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.LeftSquareBracket",
    "libcst._nodes.expression.RightParen",
    "libcst._nodes.expression.RightSquareBracket",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.BaseList._bracketize": {
  "data": {
   "lineno": 2970,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "libcst._nodes.internal.CodegenState",
    "typing.Generator"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.BaseList._safe_to_use_with_word_operator": {
  "data": {
   "lineno": 2967,
   "symbols_in_volume": [
    "bool",
    "libcst._nodes.expression.ExpressionPosition"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.BaseNumber": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.expression.BaseExpression"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.BaseNumber._safe_to_use_with_word_operator": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "bool",
    "libcst._nodes.expression.BaseNumber",
    "libcst._nodes.expression.ExpressionPosition",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.BaseParenthesizableWhitespace": {
  "data": {
   "shadows": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"
  },
  "type": "import"
 },
 "libcst._nodes.expression.BaseSet": {
  "data": {
   "lineno": 3058,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.expression._BaseSetOrDict"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.BaseSimpleComp": {
  "data": {
   "lineno": 3412,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.expression.BaseAssignTargetExpression",
    "libcst._nodes.expression.BaseComp",
    "libcst._nodes.expression.CompFor"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.BaseSimpleComp._validate": {
  "data": {
   "lineno": 3429,
   "symbols_in_volume": [
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.BaseSimpleComp",
    "libcst._nodes.expression.ExpressionPosition",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.BaseSlice": {
  "data": {
   "lineno": 1412,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.base.CSTNode"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.BaseString": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.expression.BaseExpression"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.BaseUnaryOp": {
  "data": {
   "shadows": "libcst._nodes.op.BaseUnaryOp"
  },
  "type": "import"
 },
 "libcst._nodes.expression.BinaryOperation": {
  "data": {
   "lineno": 1230,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.RightParen",
    "libcst._nodes.op.BaseBinaryOp",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.BinaryOperation._codegen_impl": {
  "data": {
   "lineno": 1276,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.BinaryOperation._safe_to_use_with_word_operator": {
  "data": {
   "lineno": 1269,
   "symbols_in_volume": [
    "bool",
    "libcst._nodes.expression.BinaryOperation",
    "libcst._nodes.expression.ExpressionPosition",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.BinaryOperation._visit_and_replace_children": {
  "data": {
   "lineno": 1260,
   "symbols_in_volume": [
    "libcst._nodes.expression.BinaryOperation",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.BooleanOperation": {
  "data": {
   "lineno": 1283,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.RightParen",
    "libcst._nodes.op.BaseBooleanOp",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.BooleanOperation._codegen_impl": {
  "data": {
   "lineno": 1348,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.BooleanOperation._safe_to_use_with_word_operator": {
  "data": {
   "lineno": 1341,
   "symbols_in_volume": [
    "bool",
    "libcst._nodes.expression.BooleanOperation",
    "libcst._nodes.expression.ExpressionPosition",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.BooleanOperation._validate": {
  "data": {
   "lineno": 1313,
   "symbols_in_volume": [
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.BooleanOperation",
    "libcst._nodes.expression.ExpressionPosition",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.BooleanOperation._visit_and_replace_children": {
  "data": {
   "lineno": 1332,
   "symbols_in_volume": [
    "libcst._nodes.expression.BooleanOperation",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.CSTCodegenError": {
  "data": {
   "shadows": "libcst._nodes.base.CSTCodegenError"
  },
  "type": "import"
 },
 "libcst._nodes.expression.CSTNode": {
  "data": {
   "shadows": "libcst._nodes.base.CSTNode"
  },
  "type": "import"
 },
 "libcst._nodes.expression.CSTValidationError": {
  "data": {
   "shadows": "libcst._nodes.base.CSTValidationError"
  },
  "type": "import"
 },
 "libcst._nodes.expression.CSTVisitorT": {
  "data": {
   "shadows": "libcst._visitors.CSTVisitorT"
  },
  "type": "import"
 },
 "libcst._nodes.expression.Call": {
  "data": {
   "lineno": 2287,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.Arg",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.RightParen",
    "libcst._nodes.expression._BaseExpressionWithArgs",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.Call._codegen_impl": {
  "data": {
   "lineno": 2347,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Call._safe_to_use_with_word_operator": {
  "data": {
   "lineno": 2319,
   "symbols_in_volume": [
    "bool",
    "libcst._nodes.expression.Call",
    "libcst._nodes.expression.ExpressionPosition",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Call._visit_and_replace_children": {
  "data": {
   "lineno": 2333,
   "symbols_in_volume": [
    "libcst._nodes.expression.Call",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst._nodes.expression.CodegenState": {
  "data": {
   "shadows": "libcst._nodes.internal.CodegenState"
  },
  "type": "import"
 },
 "libcst._nodes.expression.Colon": {
  "data": {
   "shadows": "libcst._nodes.op.Colon"
  },
  "type": "import"
 },
 "libcst._nodes.expression.Comma": {
  "data": {
   "shadows": "libcst._nodes.op.Comma"
  },
  "type": "import"
 },
 "libcst._nodes.expression.CompFor": {
  "data": {
   "lineno": 3183,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "iter",
    "libcst._add_slots.add_slots",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.expression.Asynchronous",
    "libcst._nodes.expression.BaseAssignTargetExpression",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.CompFor._codegen_impl": {
  "data": {
   "lineno": 3339,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.CompFor._validate": {
  "data": {
   "lineno": 3265,
   "symbols_in_volume": [
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.ExpressionPosition"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.CompFor._visit_and_replace_children": {
  "data": {
   "lineno": 3314,
   "symbols_in_volume": [
    "libcst._nodes.expression.CompFor",
    "libcst._nodes.internal.visit_optional",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.CompIf": {
  "data": {
   "lineno": 3359,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.CompIf._codegen_impl": {
  "data": {
   "lineno": 3396,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.CompIf._validate": {
  "data": {
   "lineno": 3378,
   "symbols_in_volume": [
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.ExpressionPosition"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.CompIf._visit_and_replace_children": {
  "data": {
   "lineno": 3385,
   "symbols_in_volume": [
    "libcst._nodes.expression.CompIf",
    "libcst._nodes.internal.visit_required",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Comparison": {
  "data": {
   "lineno": 1079,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.expression.ComparisonTarget",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.RightParen",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.Comparison._codegen_impl": {
  "data": {
   "lineno": 1161,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Comparison._safe_to_use_with_word_operator": {
  "data": {
   "lineno": 1122,
   "symbols_in_volume": [
    "bool",
    "libcst._nodes.expression.Comparison",
    "libcst._nodes.expression.ExpressionPosition",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Comparison._validate": {
  "data": {
   "lineno": 1130,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.Comparison",
    "libcst._nodes.expression.ExpressionPosition",
    "libcst._nodes.op.In",
    "libcst._nodes.op.Is",
    "libcst._nodes.op.IsNot",
    "libcst._nodes.op.NotIn",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Comparison._visit_and_replace_children": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": [
    "libcst._nodes.expression.Comparison",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.ComparisonTarget": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.op.BaseCompOp"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.ComparisonTarget._codegen_impl": {
  "data": {
   "lineno": 1074,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.ComparisonTarget._validate": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "isinstance",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.ExpressionPosition",
    "libcst._nodes.op.In",
    "libcst._nodes.op.Is",
    "libcst._nodes.op.IsNot",
    "libcst._nodes.op.NotIn"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.ComparisonTarget._visit_and_replace_children": {
  "data": {
   "lineno": 1068,
   "symbols_in_volume": [
    "libcst._nodes.expression.ComparisonTarget",
    "libcst._nodes.internal.visit_required",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.ConcatenatedString": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseString",
    "libcst._nodes.expression.FormattedString",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.RightParen",
    "libcst._nodes.expression.SimpleString",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.ConcatenatedString._codegen_impl": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.ConcatenatedString._safe_to_use_with_word_operator": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "bool",
    "libcst._nodes.expression.ConcatenatedString",
    "libcst._nodes.expression.ExpressionPosition",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.ConcatenatedString._validate": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "isinstance",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.ConcatenatedString",
    "libcst._nodes.expression.FormattedString",
    "libcst._nodes.expression.SimpleString",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.ConcatenatedString._visit_and_replace_children": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "libcst._nodes.expression.ConcatenatedString",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.ConcatenatedString.evaluated_value": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "isinstance",
    "libcst._nodes.expression.FormattedString",
    "property",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Dict": {
  "data": {
   "lineno": 3134,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseDict",
    "libcst._nodes.expression.BaseDictElement",
    "libcst._nodes.expression.LeftCurlyBrace",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.RightCurlyBrace",
    "libcst._nodes.expression.RightParen",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.Dict._codegen_impl": {
  "data": {
   "lineno": 3172,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Dict._visit_and_replace_children": {
  "data": {
   "lineno": 3163,
   "symbols_in_volume": [
    "libcst._nodes.expression.Dict",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.DictComp": {
  "data": {
   "lineno": 3578,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseAssignTargetExpression",
    "libcst._nodes.expression.BaseComp",
    "libcst._nodes.expression.BaseDict",
    "libcst._nodes.expression.CompFor",
    "libcst._nodes.expression.LeftCurlyBrace",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.RightCurlyBrace",
    "libcst._nodes.expression.RightParen",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.DictComp._codegen_impl": {
  "data": {
   "lineno": 3643,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.DictComp._validate": {
  "data": {
   "lineno": 3613,
   "symbols_in_volume": [
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.DictComp",
    "libcst._nodes.expression.ExpressionPosition",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.DictComp._visit_and_replace_children": {
  "data": {
   "lineno": 3626,
   "symbols_in_volume": [
    "libcst._nodes.expression.DictComp",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.DictElement": {
  "data": {
   "lineno": 2710,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.expression.BaseDictElement",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.op.Comma",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.DictElement._codegen_impl": {
  "data": {
   "lineno": 2746,
   "symbols_in_volume": [
    "bool",
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.DictElement._visit_and_replace_children": {
  "data": {
   "lineno": 2733,
   "symbols_in_volume": [
    "libcst._nodes.expression.DictElement",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sentinel",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Dot": {
  "data": {
   "shadows": "libcst._nodes.op.Dot"
  },
  "type": "import"
 },
 "libcst._nodes.expression.Element": {
  "data": {
   "lineno": 2678,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.expression.BaseElement",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.op.Comma",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.Element._codegen_impl": {
  "data": {
   "lineno": 2699,
   "symbols_in_volume": [
    "bool",
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Element._visit_and_replace_children": {
  "data": {
   "lineno": 2693,
   "symbols_in_volume": [
    "libcst._nodes.expression.Element",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sentinel",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Ellipsis": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.RightParen",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.Ellipsis._codegen_impl": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Ellipsis._safe_to_use_with_word_operator": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "bool",
    "libcst._nodes.expression.ExpressionPosition"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Ellipsis._visit_and_replace_children": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "libcst._nodes.expression.Ellipsis",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "libcst._nodes.expression.ExpressionPosition": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "enum.Enum",
    "enum.auto"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.FLOATNUMBER_RE": {
  "data": {
   "shadows": "tokenize.Floatnumber"
  },
  "type": "import"
 },
 "libcst._nodes.expression.Float": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseNumber",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.RightParen",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.Float._codegen_impl": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Float._validate": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.Float",
    "libcst._nodes.expression.re",
    "super",
    "tokenize.Floatnumber"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Float._visit_and_replace_children": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "libcst._nodes.expression.Float",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Float.evaluated_value": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "ast.literal_eval",
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.FormattedString": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseFormattedStringContent",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.RightParen",
    "libcst._nodes.expression._BasePrefixedString",
    "str",
    "typing.Sequence",
    "typing_extensions.Literal"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.FormattedString._codegen_impl": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.FormattedString._validate": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "len",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.FormattedString",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.FormattedString._visit_and_replace_children": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "libcst._nodes.expression.FormattedString",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.FormattedString.prefix": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.FormattedString.quote": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "libcst._nodes.expression.StringQuoteLiteral",
    "property"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.FormattedStringExpression": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.expression.BaseFormattedStringContent",
    "libcst._nodes.op.AssignEqual",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "str",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.FormattedStringExpression._codegen_impl": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.FormattedStringExpression._validate": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "libcst._nodes.base.CSTValidationError"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.FormattedStringExpression._visit_and_replace_children": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "libcst._nodes.expression.FormattedStringExpression",
    "libcst._nodes.internal.visit_optional",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.FormattedStringText": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseFormattedStringContent",
    "str"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.FormattedStringText._codegen_impl": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.FormattedStringText._visit_and_replace_children": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "libcst._nodes.expression.FormattedStringText",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.From": {
  "data": {
   "lineno": 2504,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.From._codegen_impl": {
  "data": {
   "lineno": 2543,
   "symbols_in_volume": [
    "isinstance",
    "libcst._nodes.internal.CodegenState",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.From._validate": {
  "data": {
   "lineno": 2522,
   "symbols_in_volume": [
    "isinstance",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.ExpressionPosition",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.From._visit_and_replace_children": {
  "data": {
   "lineno": 2532,
   "symbols_in_volume": [
    "libcst._nodes.expression.From",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sentinel",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "libcst._nodes.expression.GeneratorExp": {
  "data": {
   "lineno": 3443,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "dataclasses.field",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseAssignTargetExpression",
    "libcst._nodes.expression.BaseSimpleComp",
    "libcst._nodes.expression.CompFor",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.RightParen",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.GeneratorExp._codegen_impl": {
  "data": {
   "lineno": 3488,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.GeneratorExp._safe_to_use_with_word_operator": {
  "data": {
   "lineno": 3468,
   "symbols_in_volume": [
    "bool",
    "libcst._nodes.expression.ExpressionPosition"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.GeneratorExp._visit_and_replace_children": {
  "data": {
   "lineno": 3480,
   "symbols_in_volume": [
    "libcst._nodes.expression.GeneratorExp",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.IMAGNUMBER_RE": {
  "data": {
   "shadows": "tokenize.Imagnumber"
  },
  "type": "import"
 },
 "libcst._nodes.expression.INTNUMBER_RE": {
  "data": {
   "shadows": "tokenize.Intnumber"
  },
  "type": "import"
 },
 "libcst._nodes.expression.IfExp": {
  "data": {
   "lineno": 2403,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.RightParen",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.IfExp._codegen_impl": {
  "data": {
   "lineno": 2491,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.IfExp._validate": {
  "data": {
   "lineno": 2437,
   "symbols_in_volume": [
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.ExpressionPosition",
    "libcst._nodes.expression.IfExp",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.IfExp._visit_and_replace_children": {
  "data": {
   "lineno": 2470,
   "symbols_in_volume": [
    "libcst._nodes.expression.IfExp",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Imaginary": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseNumber",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.RightParen",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.Imaginary._codegen_impl": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Imaginary._validate": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.Imaginary",
    "libcst._nodes.expression.re",
    "super",
    "tokenize.Imagnumber"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Imaginary._visit_and_replace_children": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "libcst._nodes.expression.Imaginary",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Imaginary.evaluated_value": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "ast.literal_eval",
    "complex",
    "property"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.In": {
  "data": {
   "shadows": "libcst._nodes.op.In"
  },
  "type": "import"
 },
 "libcst._nodes.expression.Index": {
  "data": {
   "lineno": 1419,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.expression.BaseSlice"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.Index._codegen_impl": {
  "data": {
   "lineno": 1433,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Index._visit_and_replace_children": {
  "data": {
   "lineno": 1430,
   "symbols_in_volume": [
    "libcst._nodes.expression.Index",
    "libcst._nodes.internal.visit_required",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Integer": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseNumber",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.RightParen",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.Integer._codegen_impl": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Integer._validate": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.Integer",
    "libcst._nodes.expression.re",
    "super",
    "tokenize.Intnumber"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Integer._visit_and_replace_children": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "libcst._nodes.expression.Integer",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Integer.evaluated_value": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "ast.literal_eval",
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Is": {
  "data": {
   "shadows": "libcst._nodes.op.Is"
  },
  "type": "import"
 },
 "libcst._nodes.expression.IsNot": {
  "data": {
   "shadows": "libcst._nodes.op.IsNot"
  },
  "type": "import"
 },
 "libcst._nodes.expression.Lambda": {
  "data": {
   "lineno": 2002,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.Parameters",
    "libcst._nodes.expression.RightParen",
    "libcst._nodes.op.Colon",
    "libcst._nodes.op.Colon.field",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.Lambda._codegen_impl": {
  "data": {
   "lineno": 2086,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._nodes.expression.Param",
    "libcst._nodes.internal.CodegenState",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Lambda._validate": {
  "data": {
   "lineno": 2042,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.Lambda",
    "libcst._nodes.expression.Param",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Lambda._visit_and_replace_children": {
  "data": {
   "lineno": 2074,
   "symbols_in_volume": [
    "libcst._nodes.expression.Lambda",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sentinel",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.LeftCurlyBrace": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.LeftCurlyBrace._codegen_impl": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.LeftCurlyBrace._visit_and_replace_children": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "libcst._nodes.expression.LeftCurlyBrace",
    "libcst._nodes.internal.visit_required",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.LeftParen": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.LeftParen._codegen_impl": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.LeftParen._visit_and_replace_children": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.internal.visit_required",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.LeftSquareBracket": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.LeftSquareBracket._codegen_impl": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.LeftSquareBracket._visit_and_replace_children": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "libcst._nodes.expression.LeftSquareBracket",
    "libcst._nodes.internal.visit_required",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.List": {
  "data": {
   "lineno": 2977,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseAssignTargetExpression",
    "libcst._nodes.expression.BaseDelTargetExpression",
    "libcst._nodes.expression.BaseElement",
    "libcst._nodes.expression.BaseList",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.LeftSquareBracket",
    "libcst._nodes.expression.RightParen",
    "libcst._nodes.expression.RightSquareBracket",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.List._codegen_impl": {
  "data": {
   "lineno": 3019,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.List._visit_and_replace_children": {
  "data": {
   "lineno": 3010,
   "symbols_in_volume": [
    "libcst._nodes.expression.List",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.ListComp": {
  "data": {
   "lineno": 3494,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseAssignTargetExpression",
    "libcst._nodes.expression.BaseList",
    "libcst._nodes.expression.BaseSimpleComp",
    "libcst._nodes.expression.CompFor",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.LeftSquareBracket",
    "libcst._nodes.expression.RightParen",
    "libcst._nodes.expression.RightSquareBracket",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.ListComp._codegen_impl": {
  "data": {
   "lineno": 3530,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.ListComp._visit_and_replace_children": {
  "data": {
   "lineno": 3520,
   "symbols_in_volume": [
    "libcst._nodes.expression.ListComp",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Literal": {
  "data": {
   "shadows": "typing_extensions.Literal"
  },
  "type": "import"
 },
 "libcst._nodes.expression.MaybeSentinel": {
  "data": {
   "shadows": "libcst._maybe_sentinel.MaybeSentinel"
  },
  "type": "import"
 },
 "libcst._nodes.expression.Name": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseAssignTargetExpression",
    "libcst._nodes.expression.BaseDelTargetExpression",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.RightParen",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.Name._codegen_impl": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Name._validate": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "len",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.Name",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Name._visit_and_replace_children": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "libcst._nodes.expression.Name",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.NamedExpr": {
  "data": {
   "lineno": 3653,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.RightParen",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.NamedExpr._codegen_impl": {
  "data": {
   "lineno": 3697,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.NamedExpr._visit_and_replace_children": {
  "data": {
   "lineno": 3683,
   "symbols_in_volume": [
    "libcst._nodes.expression.NamedExpr",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Not": {
  "data": {
   "shadows": "libcst._nodes.op.Not"
  },
  "type": "import"
 },
 "libcst._nodes.expression.NotIn": {
  "data": {
   "shadows": "libcst._nodes.op.NotIn"
  },
  "type": "import"
 },
 "libcst._nodes.expression.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst._nodes.expression.Param": {
  "data": {
   "lineno": 1715,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.expression.Annotation",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.expression.Name",
    "libcst._nodes.op.AssignEqual",
    "libcst._nodes.op.Comma",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.Param._codegen_impl": {
  "data": {
   "lineno": 1775,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.base.CSTCodegenError",
    "libcst._nodes.internal.CodegenState",
    "libcst._nodes.op.AssignEqual",
    "libcst._nodes.op.Comma",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Param._validate": {
  "data": {
   "lineno": 1751,
   "symbols_in_volume": [
    "isinstance",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.op.AssignEqual",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Param._visit_and_replace_children": {
  "data": {
   "lineno": 1759,
   "symbols_in_volume": [
    "libcst._nodes.expression.Param",
    "libcst._nodes.internal.visit_optional",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sentinel",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.ParamSlash": {
  "data": {
   "lineno": 1687,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.op.Comma",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.ParamSlash._codegen_impl": {
  "data": {
   "lineno": 1705,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.internal.CodegenState",
    "libcst._nodes.op.Comma"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.ParamSlash._visit_and_replace_children": {
  "data": {
   "lineno": 1702,
   "symbols_in_volume": [
    "libcst._nodes.expression.ParamSlash",
    "libcst._nodes.internal.visit_sentinel",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.ParamStar": {
  "data": {
   "lineno": 1664,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.op.Comma",
    "libcst._nodes.op.Comma.field",
    "libcst._nodes.whitespace.SimpleWhitespace"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.ParamStar._codegen_impl": {
  "data": {
   "lineno": 1682,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.ParamStar._visit_and_replace_children": {
  "data": {
   "lineno": 1679,
   "symbols_in_volume": [
    "libcst._nodes.expression.ParamStar",
    "libcst._nodes.internal.visit_required",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Parameters": {
  "data": {
   "lineno": 1814,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.expression.Param",
    "libcst._nodes.expression.ParamSlash",
    "libcst._nodes.expression.ParamStar",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.Parameters._codegen_impl": {
  "data": {
   "lineno": 1937,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._nodes.expression.Param",
    "libcst._nodes.expression.ParamSlash",
    "libcst._nodes.expression.ParamStar",
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Parameters._validate": {
  "data": {
   "lineno": 1913
  },
  "type": "function"
 },
 "libcst._nodes.expression.Parameters._validate_defaults": {
  "data": {
   "lineno": 1865,
   "symbols_in_volume": [
    "isinstance",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.Param"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Parameters._validate_kwonly_star": {
  "data": {
   "lineno": 1859,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.ParamStar"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Parameters._validate_posonly_ind": {
  "data": {
   "lineno": 1853,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.ParamSlash"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Parameters._validate_stars": {
  "data": {
   "lineno": 1885,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.Param",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Parameters._validate_stars_sequence": {
  "data": {
   "lineno": 1843,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.Param",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Parameters._visit_and_replace_children": {
  "data": {
   "lineno": 1923,
   "symbols_in_volume": [
    "libcst._nodes.expression.Parameters",
    "libcst._nodes.internal.visit_optional",
    "libcst._nodes.internal.visit_sentinel",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.RightCurlyBrace": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.RightCurlyBrace._codegen_impl": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.RightCurlyBrace._visit_and_replace_children": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "libcst._nodes.expression.RightCurlyBrace",
    "libcst._nodes.internal.visit_required",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.RightParen": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.RightParen._codegen_impl": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.RightParen._visit_and_replace_children": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "libcst._nodes.expression.RightParen",
    "libcst._nodes.internal.visit_required",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.RightSquareBracket": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.RightSquareBracket._codegen_impl": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.RightSquareBracket._visit_and_replace_children": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "libcst._nodes.expression.RightSquareBracket",
    "libcst._nodes.internal.visit_required",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst._nodes.expression.Set": {
  "data": {
   "lineno": 3065,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseElement",
    "libcst._nodes.expression.BaseSet",
    "libcst._nodes.expression.LeftCurlyBrace",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.RightCurlyBrace",
    "libcst._nodes.expression.RightParen",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.Set._codegen_impl": {
  "data": {
   "lineno": 3116,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Set._validate": {
  "data": {
   "lineno": 3098,
   "symbols_in_volume": [
    "len",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.Set",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Set._visit_and_replace_children": {
  "data": {
   "lineno": 3107,
   "symbols_in_volume": [
    "libcst._nodes.expression.Set",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.SetComp": {
  "data": {
   "lineno": 3536,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseAssignTargetExpression",
    "libcst._nodes.expression.BaseSet",
    "libcst._nodes.expression.BaseSimpleComp",
    "libcst._nodes.expression.CompFor",
    "libcst._nodes.expression.LeftCurlyBrace",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.RightCurlyBrace",
    "libcst._nodes.expression.RightParen",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.SetComp._codegen_impl": {
  "data": {
   "lineno": 3572,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.SetComp._visit_and_replace_children": {
  "data": {
   "lineno": 3562,
   "symbols_in_volume": [
    "libcst._nodes.expression.SetComp",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.SimpleString": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.RightParen",
    "libcst._nodes.expression._BasePrefixedString",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.SimpleString._codegen_impl": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.SimpleString._validate": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "len",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.SimpleString",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.SimpleString._visit_and_replace_children": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "libcst._nodes.expression.SimpleString",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.SimpleString.evaluated_value": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "ast.literal_eval",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.SimpleString.prefix": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.SimpleString.quote": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "Exception",
    "len",
    "libcst._nodes.expression.StringQuoteLiteral",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.SimpleString.raw_value": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "len",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.SimpleWhitespace": {
  "data": {
   "shadows": "libcst._nodes.whitespace.SimpleWhitespace"
  },
  "type": "import"
 },
 "libcst._nodes.expression.Slice": {
  "data": {
   "lineno": 1437,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.expression.BaseSlice",
    "libcst._nodes.op.Colon",
    "libcst._nodes.op.Colon.field",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.Slice._codegen_impl": {
  "data": {
   "lineno": 1473,
   "symbols_in_volume": [
    "isinstance",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.internal.CodegenState",
    "libcst._nodes.op.Colon"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Slice._visit_and_replace_children": {
  "data": {
   "lineno": 1462,
   "symbols_in_volume": [
    "libcst._nodes.expression.Slice",
    "libcst._nodes.internal.visit_optional",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sentinel",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.StarredDictElement": {
  "data": {
   "lineno": 2822,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.expression.BaseDictElement",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.op.Comma",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.StarredDictElement._codegen_impl": {
  "data": {
   "lineno": 2854,
   "symbols_in_volume": [
    "bool",
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.StarredDictElement._visit_and_replace_children": {
  "data": {
   "lineno": 2845,
   "symbols_in_volume": [
    "libcst._nodes.expression.StarredDictElement",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sentinel",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.StarredElement": {
  "data": {
   "lineno": 2761,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.expression.BaseElement",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.RightParen",
    "libcst._nodes.expression._BaseParenthesizedNode",
    "libcst._nodes.op.Comma",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.StarredElement._codegen_impl": {
  "data": {
   "lineno": 2809,
   "symbols_in_volume": [
    "bool",
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.StarredElement._visit_and_replace_children": {
  "data": {
   "lineno": 2798,
   "symbols_in_volume": [
    "libcst._nodes.expression.StarredElement",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sentinel",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.StringQuoteLiteral": {
  "data": {
   "lineno": 528
  },
  "type": "constant"
 },
 "libcst._nodes.expression.Subscript": {
  "data": {
   "lineno": 1525,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseAssignTargetExpression",
    "libcst._nodes.expression.BaseDelTargetExpression",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.LeftSquareBracket",
    "libcst._nodes.expression.RightParen",
    "libcst._nodes.expression.RightSquareBracket",
    "libcst._nodes.expression.SubscriptElement",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "slice",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.Subscript._codegen_impl": {
  "data": {
   "lineno": 1579,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "libcst._nodes.internal.CodegenState",
    "slice",
    "slice._codegen"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Subscript._safe_to_use_with_word_operator": {
  "data": {
   "lineno": 1570,
   "symbols_in_volume": [
    "bool",
    "libcst._nodes.expression.ExpressionPosition",
    "libcst._nodes.expression.Subscript",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Subscript._validate": {
  "data": {
   "lineno": 1551,
   "symbols_in_volume": [
    "len",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.Subscript",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Subscript._visit_and_replace_children": {
  "data": {
   "lineno": 1557,
   "symbols_in_volume": [
    "libcst._nodes.expression.Subscript",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.SubscriptElement": {
  "data": {
   "lineno": 1491,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.expression.BaseSlice",
    "libcst._nodes.op.Comma",
    "slice",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.SubscriptElement._codegen_impl": {
  "data": {
   "lineno": 1514,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.internal.CodegenState",
    "libcst._nodes.op.Comma"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.SubscriptElement._visit_and_replace_children": {
  "data": {
   "lineno": 1508,
   "symbols_in_volume": [
    "libcst._nodes.expression.SubscriptElement",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sentinel",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Tuple": {
  "data": {
   "lineno": 2867,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "dataclasses.field",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseAssignTargetExpression",
    "libcst._nodes.expression.BaseDelTargetExpression",
    "libcst._nodes.expression.BaseElement",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.RightParen",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.Tuple._codegen_impl": {
  "data": {
   "lineno": 2937,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Tuple._safe_to_use_with_word_operator": {
  "data": {
   "lineno": 2894,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "len",
    "libcst._nodes.expression.ExpressionPosition",
    "libcst._nodes.expression.StarredElement",
    "libcst._nodes.expression.Tuple",
    "libcst._nodes.op.Comma",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Tuple._validate": {
  "data": {
   "lineno": 2918,
   "symbols_in_volume": [
    "len",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.Tuple",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Tuple._visit_and_replace_children": {
  "data": {
   "lineno": 2930,
   "symbols_in_volume": [
    "libcst._nodes.expression.Tuple",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.UnaryOperation": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.RightParen",
    "libcst._nodes.op.BaseUnaryOp",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.UnaryOperation._codegen_impl": {
  "data": {
   "lineno": 1224,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.UnaryOperation._safe_to_use_with_word_operator": {
  "data": {
   "lineno": 1209,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "libcst._nodes.expression.ExpressionPosition",
    "libcst._nodes.expression.UnaryOperation",
    "libcst._nodes.op.Not",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.UnaryOperation._validate": {
  "data": {
   "lineno": 1188,
   "symbols_in_volume": [
    "isinstance",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.ExpressionPosition",
    "libcst._nodes.expression.UnaryOperation",
    "libcst._nodes.op.Not",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.UnaryOperation._visit_and_replace_children": {
  "data": {
   "lineno": 1201,
   "symbols_in_volume": [
    "libcst._nodes.expression.UnaryOperation",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst._nodes.expression.Yield": {
  "data": {
   "lineno": 2556,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.expression.From",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.RightParen",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression.Yield._codegen_impl": {
  "data": {
   "lineno": 2611,
   "symbols_in_volume": [
    "isinstance",
    "libcst._nodes.expression.From",
    "libcst._nodes.internal.CodegenState",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Yield._validate": {
  "data": {
   "lineno": 2580,
   "symbols_in_volume": [
    "isinstance",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.expression.ExpressionPosition",
    "libcst._nodes.expression.From",
    "libcst._nodes.expression.Yield",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.Yield._visit_and_replace_children": {
  "data": {
   "lineno": 2601,
   "symbols_in_volume": [
    "libcst._nodes.expression.Yield",
    "libcst._nodes.internal.visit_optional",
    "libcst._nodes.internal.visit_sentinel",
    "libcst._nodes.internal.visit_sequence",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression._BaseElementImpl": {
  "data": {
   "lineno": 2628,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.op.Comma",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression._BaseElementImpl._codegen_comma": {
  "data": {
   "lineno": 2636,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.internal.CodegenState",
    "libcst._nodes.op.Comma"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression._BaseElementImpl._codegen_impl": {
  "data": {
   "lineno": 2654,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "bool",
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression._BaseExpressionWithArgs": {
  "data": {
   "lineno": 2188,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.expression.Arg",
    "libcst._nodes.expression.BaseExpression",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression._BaseExpressionWithArgs._check_kwargs_or_keywords": {
  "data": {
   "lineno": 2197,
   "symbols_in_volume": [
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.Arg",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression._BaseExpressionWithArgs._check_positional": {
  "data": {
   "lineno": 2246,
   "symbols_in_volume": [
    "libcst._nodes.expression.Arg",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression._BaseExpressionWithArgs._check_starred_or_keywords": {
  "data": {
   "lineno": 2221,
   "symbols_in_volume": [
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.Arg",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression._BaseExpressionWithArgs._validate": {
  "data": {
   "lineno": 2270,
   "symbols_in_volume": [
    "super",
    "validator"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression._BaseParenthesizedNode": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.RightParen",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression._BaseParenthesizedNode._parenthesize": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "libcst._nodes.internal.CodegenState",
    "typing.Generator"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression._BaseParenthesizedNode._validate": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "len",
    "libcst._nodes.base.CSTValidationError"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression._BasePrefixedString": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.expression.BaseString"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression._BasePrefixedString._safe_to_use_with_word_operator": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "bool",
    "libcst._nodes.expression.ExpressionPosition",
    "libcst._nodes.expression._BasePrefixedString",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression._BasePrefixedString.prefix": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression._BasePrefixedString.quote": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "libcst._nodes.expression.StringQuoteLiteral",
    "property"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression._BaseSetOrDict": {
  "data": {
   "lineno": 3030,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.expression.LeftCurlyBrace",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.RightCurlyBrace",
    "libcst._nodes.expression.RightParen",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.expression._BaseSetOrDict._braceize": {
  "data": {
   "lineno": 3051,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "libcst._nodes.internal.CodegenState",
    "typing.Generator"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression._BaseSetOrDict._safe_to_use_with_word_operator": {
  "data": {
   "lineno": 3047,
   "symbols_in_volume": [
    "bool",
    "libcst._nodes.expression.ExpressionPosition"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.expression.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "libcst._nodes.expression.add_slots": {
  "data": {
   "shadows": "libcst._add_slots.add_slots"
  },
  "type": "import"
 },
 "libcst._nodes.expression.auto": {
  "data": {
   "shadows": "enum.auto"
  },
  "type": "import"
 },
 "libcst._nodes.expression.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "libcst._nodes.expression.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "libcst._nodes.expression.field": {
  "data": {
   "shadows": "dataclasses.field"
  },
  "type": "import"
 },
 "libcst._nodes.expression.literal_eval": {
  "data": {
   "shadows": "ast.literal_eval"
  },
  "type": "import"
 },
 "libcst._nodes.expression.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "libcst._nodes.expression.visit_optional": {
  "data": {
   "shadows": "libcst._nodes.internal.visit_optional"
  },
  "type": "import"
 },
 "libcst._nodes.expression.visit_required": {
  "data": {
   "shadows": "libcst._nodes.internal.visit_required"
  },
  "type": "import"
 },
 "libcst._nodes.expression.visit_sentinel": {
  "data": {
   "shadows": "libcst._nodes.internal.visit_sentinel"
  },
  "type": "import"
 },
 "libcst._nodes.expression.visit_sequence": {
  "data": {
   "shadows": "libcst._nodes.internal.visit_sequence"
  },
  "type": "import"
 },
 "libcst._nodes.internal": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "libcst._nodes.internal.CSTNode": {
  "data": {
   "shadows": "libcst._nodes.base.CSTNode"
  },
  "type": "import"
 },
 "libcst._nodes.internal.CSTNodeT": {
  "data": {
   "shadows": "libcst._types.CSTNodeT"
  },
  "type": "import"
 },
 "libcst._nodes.internal.CSTVisitorT": {
  "data": {
   "shadows": "libcst._visitors.CSTVisitorT"
  },
  "type": "import"
 },
 "libcst._nodes.internal.CodegenState": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "dataclasses.field",
    "libcst._add_slots.add_slots",
    "list",
    "object",
    "str",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.internal.CodegenState.add_indent_tokens": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "libcst._nodes.internal.CodegenState.add_token": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.internal.CodegenState.after_codegen": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "libcst._nodes.internal.CodegenState.before_codegen": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "libcst._nodes.internal.CodegenState.decrease_indent": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "libcst._nodes.internal.CodegenState.increase_indent": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.internal.CodegenState.pop_trailing_newline": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.internal.CodegenState.record_syntactic_position": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "typing.Iterator",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.internal.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "libcst._nodes.internal.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "libcst._nodes.internal.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst._nodes.internal.MaybeSentinel": {
  "data": {
   "shadows": "libcst._maybe_sentinel.MaybeSentinel"
  },
  "type": "import"
 },
 "libcst._nodes.internal.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst._nodes.internal.RemovalSentinel": {
  "data": {
   "shadows": "libcst._removal_sentinel.RemovalSentinel"
  },
  "type": "import"
 },
 "libcst._nodes.internal.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst._nodes.internal.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "libcst._nodes.internal.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst._nodes.internal.add_slots": {
  "data": {
   "shadows": "libcst._add_slots.add_slots"
  },
  "type": "import"
 },
 "libcst._nodes.internal.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "libcst._nodes.internal.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "libcst._nodes.internal.field": {
  "data": {
   "shadows": "dataclasses.field"
  },
  "type": "import"
 },
 "libcst._nodes.internal.visit_body_iterable": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "isinstance",
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._types.CSTNodeT",
    "str",
    "typing.Iterable",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.internal.visit_body_sequence": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_body_iterable",
    "libcst._types.CSTNodeT",
    "str",
    "tuple",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.internal.visit_iterable": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "isinstance",
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._types.CSTNodeT",
    "str",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.internal.visit_optional": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "isinstance",
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._types.CSTNodeT",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.internal.visit_required": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._types.CSTNodeT",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.internal.visit_sentinel": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "isinstance",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._types.CSTNodeT",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.internal.visit_sequence": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_iterable",
    "libcst._types.CSTNodeT",
    "str",
    "tuple",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.module": {
  "data": {
   "symbols_in_volume": [
    "bytes",
    "typing.TYPE_CHECKING",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "libcst._nodes.module.BaseCompoundStatement": {
  "data": {
   "shadows": "libcst._nodes.statement.BaseCompoundStatement"
  },
  "type": "import"
 },
 "libcst._nodes.module.CSTNode": {
  "data": {
   "shadows": "libcst._nodes.base.CSTNode"
  },
  "type": "import"
 },
 "libcst._nodes.module.CSTVisitorT": {
  "data": {
   "shadows": "libcst._visitors.CSTVisitorT"
  },
  "type": "import"
 },
 "libcst._nodes.module.CodegenState": {
  "data": {
   "shadows": "libcst._nodes.internal.CodegenState"
  },
  "type": "import"
 },
 "libcst._nodes.module.EmptyLine": {
  "data": {
   "shadows": "libcst._nodes.whitespace.EmptyLine"
  },
  "type": "import"
 },
 "libcst._nodes.module.Module": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.statement.BaseCompoundStatement",
    "libcst._nodes.statement.SimpleStatementLine",
    "libcst._nodes.whitespace.EmptyLine",
    "str",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.module.Module._codegen_impl": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "len",
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.module.Module._visit_and_replace_children": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_body_sequence",
    "libcst._nodes.internal.visit_sequence",
    "libcst._nodes.module.Module",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.module.Module.bytes": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "libcst._nodes.module.builtin_bytes",
    "property"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.module.Module.code": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.module.Module.code_for_node": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.internal.CodegenState",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.module.Module.config_for_parsing": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "libcst._parser.types.config.PartialParserConfig",
    "property"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.module.Module.get_docstring": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "bool",
    "libcst._nodes.statement.get_docstring_impl",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.module.Module.visit": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "isinstance",
    "libcst._nodes.module.Module",
    "libcst._nodes.module._ModuleSelfT",
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._visitors.CSTVisitorT",
    "super",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.module.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst._nodes.module.PartialParserConfig": {
  "data": {
   "shadows": "libcst._parser.types.config.PartialParserConfig"
  },
  "type": "import"
 },
 "libcst._nodes.module.RemovalSentinel": {
  "data": {
   "shadows": "libcst._removal_sentinel.RemovalSentinel"
  },
  "type": "import"
 },
 "libcst._nodes.module.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst._nodes.module.SimpleStatementLine": {
  "data": {
   "shadows": "libcst._nodes.statement.SimpleStatementLine"
  },
  "type": "import"
 },
 "libcst._nodes.module.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "libcst._nodes.module.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "libcst._nodes.module.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst._nodes.module._ModuleSelfT": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "libcst._nodes.module.add_slots": {
  "data": {
   "shadows": "libcst._add_slots.add_slots"
  },
  "type": "import"
 },
 "libcst._nodes.module.builtin_bytes": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "libcst._nodes.module.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "libcst._nodes.module.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "libcst._nodes.module.get_docstring_impl": {
  "data": {
   "shadows": "libcst._nodes.statement.get_docstring_impl"
  },
  "type": "import"
 },
 "libcst._nodes.module.visit_body_sequence": {
  "data": {
   "shadows": "libcst._nodes.internal.visit_body_sequence"
  },
  "type": "import"
 },
 "libcst._nodes.module.visit_sequence": {
  "data": {
   "shadows": "libcst._nodes.internal.visit_sequence"
  },
  "type": "import"
 },
 "libcst._nodes.op": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.op.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "libcst._nodes.op.Add": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseBinaryOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.Add._get_token": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.AddAssign": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseAugOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.AddAssign._get_token": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.And": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseBooleanOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.And._get_token": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.AssignEqual": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.AssignEqual._get_token": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.BaseAugOp": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.base.CSTNode"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.BaseBinaryOp": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.base.CSTNode"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.BaseBooleanOp": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.op._BaseOneTokenOp"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.BaseCompOp": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.base.CSTNode"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.BaseLeaf": {
  "data": {
   "shadows": "libcst._nodes.base.BaseLeaf"
  },
  "type": "import"
 },
 "libcst._nodes.op.BaseParenthesizableWhitespace": {
  "data": {
   "shadows": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"
  },
  "type": "import"
 },
 "libcst._nodes.op.BaseUnaryOp": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.BaseUnaryOp._codegen_impl": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.BaseUnaryOp._get_token": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.BaseUnaryOp._visit_and_replace_children": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_required",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.BitAnd": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseBinaryOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.BitAnd._get_token": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.BitAndAssign": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseAugOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.BitAndAssign._get_token": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.BitInvert": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseUnaryOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.BitInvert._get_token": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.BitOr": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseBinaryOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.BitOr._get_token": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.BitOrAssign": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseAugOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.BitOrAssign._get_token": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.BitXor": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseBinaryOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.BitXor._get_token": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.BitXorAssign": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseAugOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.BitXorAssign._get_token": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.CSTNode": {
  "data": {
   "shadows": "libcst._nodes.base.CSTNode"
  },
  "type": "import"
 },
 "libcst._nodes.op.CSTValidationError": {
  "data": {
   "shadows": "libcst._nodes.base.CSTValidationError"
  },
  "type": "import"
 },
 "libcst._nodes.op.CSTVisitorT": {
  "data": {
   "shadows": "libcst._visitors.CSTVisitorT"
  },
  "type": "import"
 },
 "libcst._nodes.op.CodegenState": {
  "data": {
   "shadows": "libcst._nodes.internal.CodegenState"
  },
  "type": "import"
 },
 "libcst._nodes.op.Colon": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.Colon._get_token": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.Comma": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.Comma._get_token": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.Divide": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseBinaryOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.Divide._get_token": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.DivideAssign": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseAugOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.DivideAssign._get_token": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.Dot": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.Dot._get_token": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.Equal": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseCompOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.Equal._get_token": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.FloorDivide": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseBinaryOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.FloorDivide._get_token": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.FloorDivideAssign": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseAugOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.FloorDivideAssign._get_token": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.GreaterThan": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseCompOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.GreaterThan._get_token": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.GreaterThanEqual": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseCompOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.GreaterThanEqual._get_token": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.ImportStar": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.base.BaseLeaf"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.ImportStar._codegen_impl": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.In": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseCompOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.In._get_token": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.Is": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseCompOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.Is._get_token": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.IsNot": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseCompOp",
    "libcst._nodes.op._BaseTwoTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.IsNot._get_tokens": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.LeftShift": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseBinaryOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.LeftShift._get_token": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.LeftShiftAssign": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseAugOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.LeftShiftAssign._get_token": {
  "data": {
   "lineno": 965,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.LessThan": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseCompOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.LessThan._get_token": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.LessThanEqual": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseCompOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.LessThanEqual._get_token": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.MatrixMultiply": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseBinaryOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.MatrixMultiply._get_token": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.MatrixMultiplyAssign": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseAugOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.MatrixMultiplyAssign._get_token": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.Minus": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseUnaryOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.Minus._get_token": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.Modulo": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseBinaryOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.Modulo._get_token": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.ModuloAssign": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseAugOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.ModuloAssign._get_token": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.Multiply": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseBinaryOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.Multiply._get_token": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.MultiplyAssign": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseAugOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.MultiplyAssign._get_token": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.Not": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseUnaryOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.Not._get_token": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.NotEqual": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseCompOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "str"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.NotEqual._get_token": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.NotEqual._validate": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "libcst._nodes.base.CSTValidationError"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.NotEqual._visit_and_replace_children": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_required",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.NotIn": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseCompOp",
    "libcst._nodes.op._BaseTwoTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.NotIn._get_tokens": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.Or": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseBooleanOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.Or._get_token": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.Plus": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseUnaryOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.Plus._get_token": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.Power": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseBinaryOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.Power._get_token": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.PowerAssign": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseAugOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.PowerAssign._get_token": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.RightShift": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseBinaryOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.RightShift._get_token": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.RightShiftAssign": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseAugOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.RightShiftAssign._get_token": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.Semicolon": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.Semicolon._get_token": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.SimpleWhitespace": {
  "data": {
   "shadows": "libcst._nodes.whitespace.SimpleWhitespace"
  },
  "type": "import"
 },
 "libcst._nodes.op.Subtract": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseBinaryOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.Subtract._get_token": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.SubtractAssign": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.op.BaseAugOp",
    "libcst._nodes.op._BaseOneTokenOp",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op.SubtractAssign._get_token": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "libcst._nodes.op._BaseOneTokenOp": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op._BaseOneTokenOp._codegen_impl": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op._BaseOneTokenOp._get_token": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op._BaseOneTokenOp._visit_and_replace_children": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_required",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op._BaseTwoTokenOp": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.op._BaseTwoTokenOp._codegen_impl": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op._BaseTwoTokenOp._get_tokens": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op._BaseTwoTokenOp._validate": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "libcst._nodes.base.CSTValidationError"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op._BaseTwoTokenOp._visit_and_replace_children": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_required",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.op.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "libcst._nodes.op.add_slots": {
  "data": {
   "shadows": "libcst._add_slots.add_slots"
  },
  "type": "import"
 },
 "libcst._nodes.op.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "libcst._nodes.op.visit_required": {
  "data": {
   "shadows": "libcst._nodes.internal.visit_required"
  },
  "type": "import"
 },
 "libcst._nodes.statement": {
  "data": {
   "symbols_in_volume": [
    "libcst._nodes.statement.re",
    "str",
    "typing.Pattern"
   ]
  },
  "type": "module"
 },
 "libcst._nodes.statement.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "libcst._nodes.statement.AnnAssign": {
  "data": {
   "lineno": 1323,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.expression.Annotation",
    "libcst._nodes.expression.BaseAssignTargetExpression",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.op.AssignEqual",
    "libcst._nodes.op.Semicolon",
    "libcst._nodes.statement.BaseSmallStatement",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.AnnAssign._codegen_impl": {
  "data": {
   "lineno": 1365,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.internal.CodegenState",
    "libcst._nodes.op.AssignEqual",
    "libcst._nodes.op.Semicolon"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.AnnAssign._validate": {
  "data": {
   "lineno": 1350,
   "symbols_in_volume": [
    "isinstance",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.op.AssignEqual"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.AnnAssign._visit_and_replace_children": {
  "data": {
   "lineno": 1356,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_optional",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sentinel",
    "libcst._nodes.statement.AnnAssign",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Annotation": {
  "data": {
   "shadows": "libcst._nodes.expression.Annotation"
  },
  "type": "import"
 },
 "libcst._nodes.statement.Arg": {
  "data": {
   "shadows": "libcst._nodes.expression.Arg"
  },
  "type": "import"
 },
 "libcst._nodes.statement.AsName": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.expression.List",
    "libcst._nodes.expression.Name",
    "libcst._nodes.expression.Tuple",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.AsName._codegen_impl": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.AsName._validate": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "libcst._nodes.base.CSTValidationError"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.AsName._visit_and_replace_children": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.statement.AsName",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Assert": {
  "data": {
   "lineno": 2194,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.op.Comma",
    "libcst._nodes.op.Semicolon",
    "libcst._nodes.statement.BaseSmallStatement",
    "libcst._nodes.whitespace.SimpleWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.Assert._codegen_impl": {
  "data": {
   "lineno": 2240,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._nodes.internal.CodegenState",
    "libcst._nodes.op.Semicolon"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Assert._validate": {
  "data": {
   "lineno": 2217,
   "symbols_in_volume": [
    "isinstance",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.ExpressionPosition.RIGHT",
    "libcst._nodes.op.Comma"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Assert._visit_and_replace_children": {
  "data": {
   "lineno": 2229,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_optional",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sentinel",
    "libcst._nodes.statement.Assert",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Assign": {
  "data": {
   "lineno": 1275,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.op.Semicolon",
    "libcst._nodes.statement.AssignTarget",
    "libcst._nodes.statement.BaseSmallStatement",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.Assign._codegen_impl": {
  "data": {
   "lineno": 1307,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._nodes.internal.CodegenState",
    "libcst._nodes.op.Semicolon"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Assign._validate": {
  "data": {
   "lineno": 1294,
   "symbols_in_volume": [
    "len",
    "libcst._nodes.base.CSTValidationError"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Assign._visit_and_replace_children": {
  "data": {
   "lineno": 1300,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sentinel",
    "libcst._nodes.internal.visit_sequence",
    "libcst._nodes.statement.Assign",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.AssignEqual": {
  "data": {
   "shadows": "libcst._nodes.op.AssignEqual"
  },
  "type": "import"
 },
 "libcst._nodes.statement.AssignTarget": {
  "data": {
   "lineno": 1239,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.expression.BaseAssignTargetExpression",
    "libcst._nodes.whitespace.SimpleWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.AssignTarget._codegen_impl": {
  "data": {
   "lineno": 1266,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.AssignTarget._visit_and_replace_children": {
  "data": {
   "lineno": 1255,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.statement.AssignTarget",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Asynchronous": {
  "data": {
   "shadows": "libcst._nodes.expression.Asynchronous"
  },
  "type": "import"
 },
 "libcst._nodes.statement.Attribute": {
  "data": {
   "shadows": "libcst._nodes.expression.Attribute"
  },
  "type": "import"
 },
 "libcst._nodes.statement.AugAssign": {
  "data": {
   "lineno": 1388,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.expression.BaseAssignTargetExpression",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.op.BaseAugOp",
    "libcst._nodes.op.Semicolon",
    "libcst._nodes.statement.BaseSmallStatement",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.AugAssign._codegen_impl": {
  "data": {
   "lineno": 1416,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._nodes.internal.CodegenState",
    "libcst._nodes.op.Semicolon"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.AugAssign._visit_and_replace_children": {
  "data": {
   "lineno": 1408,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sentinel",
    "libcst._nodes.statement.AugAssign",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.BaseAssignTargetExpression": {
  "data": {
   "shadows": "libcst._nodes.expression.BaseAssignTargetExpression"
  },
  "type": "import"
 },
 "libcst._nodes.statement.BaseAugOp": {
  "data": {
   "shadows": "libcst._nodes.op.BaseAugOp"
  },
  "type": "import"
 },
 "libcst._nodes.statement.BaseCompoundStatement": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.statement.BaseStatement",
    "libcst._nodes.statement.BaseSuite",
    "libcst._nodes.whitespace.EmptyLine",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.BaseDelTargetExpression": {
  "data": {
   "shadows": "libcst._nodes.expression.BaseDelTargetExpression"
  },
  "type": "import"
 },
 "libcst._nodes.statement.BaseExpression": {
  "data": {
   "shadows": "libcst._nodes.expression.BaseExpression"
  },
  "type": "import"
 },
 "libcst._nodes.statement.BaseParenthesizableWhitespace": {
  "data": {
   "shadows": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"
  },
  "type": "import"
 },
 "libcst._nodes.statement.BaseSmallStatement": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.op.Semicolon",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.BaseSmallStatement._codegen_impl": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "bool",
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.BaseStatement": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.base.CSTNode"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.BaseSuite": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.base.CSTNode",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.Break": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.op.Semicolon",
    "libcst._nodes.statement.BaseSmallStatement",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.Break._codegen_impl": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._nodes.internal.CodegenState",
    "libcst._nodes.op.Semicolon"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Break._visit_and_replace_children": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_sentinel",
    "libcst._nodes.statement.Break",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.CSTNode": {
  "data": {
   "shadows": "libcst._nodes.base.CSTNode"
  },
  "type": "import"
 },
 "libcst._nodes.statement.CSTValidationError": {
  "data": {
   "shadows": "libcst._nodes.base.CSTValidationError"
  },
  "type": "import"
 },
 "libcst._nodes.statement.CSTVisitorT": {
  "data": {
   "shadows": "libcst._visitors.CSTVisitorT"
  },
  "type": "import"
 },
 "libcst._nodes.statement.Call": {
  "data": {
   "shadows": "libcst._nodes.expression.Call"
  },
  "type": "import"
 },
 "libcst._nodes.statement.ClassDef": {
  "data": {
   "lineno": 1655,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.expression.Arg",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.Name",
    "libcst._nodes.expression.RightParen",
    "libcst._nodes.statement.BaseCompoundStatement",
    "libcst._nodes.statement.BaseSuite",
    "libcst._nodes.statement.Decorator",
    "libcst._nodes.whitespace.EmptyLine",
    "libcst._nodes.whitespace.SimpleWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.ClassDef._codegen_impl": {
  "data": {
   "lineno": 1762,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.RightParen",
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.ClassDef._validate": {
  "data": {
   "lineno": 1731
  },
  "type": "function"
 },
 "libcst._nodes.statement.ClassDef._validate_args": {
  "data": {
   "lineno": 1723,
   "symbols_in_volume": [
    "any",
    "libcst._nodes.base.CSTValidationError"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.ClassDef._validate_parens": {
  "data": {
   "lineno": 1711,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.RightParen"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.ClassDef._validate_whitespace": {
  "data": {
   "lineno": 1705,
   "symbols_in_volume": [
    "libcst._nodes.base.CSTValidationError"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.ClassDef._visit_and_replace_children": {
  "data": {
   "lineno": 1736,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sentinel",
    "libcst._nodes.internal.visit_sequence",
    "libcst._nodes.statement.ClassDef",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.ClassDef.get_docstring": {
  "data": {
   "lineno": 1796,
   "symbols_in_volume": [
    "bool",
    "libcst._nodes.statement.get_docstring_impl",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.CodegenState": {
  "data": {
   "shadows": "libcst._nodes.internal.CodegenState"
  },
  "type": "import"
 },
 "libcst._nodes.statement.Comma": {
  "data": {
   "shadows": "libcst._nodes.op.Comma"
  },
  "type": "import"
 },
 "libcst._nodes.statement.ConcatenatedString": {
  "data": {
   "shadows": "libcst._nodes.expression.ConcatenatedString"
  },
  "type": "import"
 },
 "libcst._nodes.statement.Continue": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.op.Semicolon",
    "libcst._nodes.statement.BaseSmallStatement",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.Continue._codegen_impl": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._nodes.internal.CodegenState",
    "libcst._nodes.op.Semicolon"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Continue._visit_and_replace_children": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_sentinel",
    "libcst._nodes.statement.Continue",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Decorator": {
  "data": {
   "lineno": 1432,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.expression.Attribute",
    "libcst._nodes.expression.Call",
    "libcst._nodes.expression.Name",
    "libcst._nodes.whitespace.EmptyLine",
    "libcst._nodes.whitespace.SimpleWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "libcst._nodes.whitespace.TrailingWhitespace",
    "libcst._nodes.whitespace.TrailingWhitespace.field",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.Decorator._codegen_impl": {
  "data": {
   "lineno": 1481,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Decorator._validate": {
  "data": {
   "lineno": 1454,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.Attribute",
    "libcst._nodes.expression.Call",
    "libcst._nodes.expression.Name"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Decorator._visit_and_replace_children": {
  "data": {
   "lineno": 1467,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._nodes.statement.Decorator",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Del": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.expression.BaseDelTargetExpression",
    "libcst._nodes.op.Semicolon",
    "libcst._nodes.statement.BaseSmallStatement",
    "libcst._nodes.whitespace.SimpleWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.Del._codegen_impl": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._nodes.internal.CodegenState",
    "libcst._nodes.op.Semicolon"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Del._validate": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.ExpressionPosition.RIGHT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Del._visit_and_replace_children": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sentinel",
    "libcst._nodes.statement.Del",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Dot": {
  "data": {
   "shadows": "libcst._nodes.op.Dot"
  },
  "type": "import"
 },
 "libcst._nodes.statement.Else": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.statement.BaseSuite",
    "libcst._nodes.whitespace.EmptyLine",
    "libcst._nodes.whitespace.SimpleWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.Else._codegen_impl": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Else._visit_and_replace_children": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._nodes.statement.Else",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.EmptyLine": {
  "data": {
   "shadows": "libcst._nodes.whitespace.EmptyLine"
  },
  "type": "import"
 },
 "libcst._nodes.statement.ExceptHandler": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.statement.AsName",
    "libcst._nodes.statement.BaseSuite",
    "libcst._nodes.whitespace.EmptyLine",
    "libcst._nodes.whitespace.SimpleWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "type",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.ExceptHandler._codegen_impl": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.ExceptHandler._validate": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "isinstance",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.Name"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.ExceptHandler._visit_and_replace_children": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_optional",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._nodes.statement.ExceptHandler",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Expr": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.op.Semicolon",
    "libcst._nodes.statement.BaseSmallStatement",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.Expr._codegen_impl": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._nodes.internal.CodegenState",
    "libcst._nodes.op.Semicolon"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Expr._visit_and_replace_children": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sentinel",
    "libcst._nodes.statement.Expr",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.ExpressionPosition": {
  "data": {
   "shadows": "libcst._nodes.expression.ExpressionPosition"
  },
  "type": "import"
 },
 "libcst._nodes.statement.Finally": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.statement.BaseSuite",
    "libcst._nodes.whitespace.EmptyLine",
    "libcst._nodes.whitespace.SimpleWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.Finally._codegen_impl": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Finally._visit_and_replace_children": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._nodes.statement.Finally",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.For": {
  "data": {
   "lineno": 1918,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "iter",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.Asynchronous",
    "libcst._nodes.expression.BaseAssignTargetExpression",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.statement.BaseCompoundStatement",
    "libcst._nodes.statement.BaseSuite",
    "libcst._nodes.statement.Else",
    "libcst._nodes.whitespace.EmptyLine",
    "libcst._nodes.whitespace.SimpleWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.For._codegen_impl": {
  "data": {
   "lineno": 2007,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.For._validate": {
  "data": {
   "lineno": 1956,
   "symbols_in_volume": [
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.ExpressionPosition.LEFT",
    "libcst._nodes.expression.ExpressionPosition.RIGHT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.For._visit_and_replace_children": {
  "data": {
   "lineno": 1981,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_optional",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._nodes.statement.For",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.From": {
  "data": {
   "shadows": "libcst._nodes.expression.From"
  },
  "type": "import"
 },
 "libcst._nodes.statement.FunctionDef": {
  "data": {
   "lineno": 1528,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.Annotation",
    "libcst._nodes.expression.Asynchronous",
    "libcst._nodes.expression.Name",
    "libcst._nodes.expression.Parameters",
    "libcst._nodes.statement.BaseCompoundStatement",
    "libcst._nodes.statement.BaseSuite",
    "libcst._nodes.statement.Decorator",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.EmptyLine",
    "libcst._nodes.whitespace.SimpleWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.FunctionDef._codegen_impl": {
  "data": {
   "lineno": 1619,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.FunctionDef._validate": {
  "data": {
   "lineno": 1581,
   "symbols_in_volume": [
    "len",
    "libcst._nodes.base.CSTValidationError"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.FunctionDef._visit_and_replace_children": {
  "data": {
   "lineno": 1589,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_optional",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._nodes.statement.FunctionDef",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.FunctionDef.get_docstring": {
  "data": {
   "lineno": 1647,
   "symbols_in_volume": [
    "bool",
    "libcst._nodes.statement.get_docstring_impl",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Global": {
  "data": {
   "lineno": 2306,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.op.Semicolon",
    "libcst._nodes.statement.BaseSmallStatement",
    "libcst._nodes.statement.NameItem",
    "libcst._nodes.whitespace.SimpleWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.Global._codegen_impl": {
  "data": {
   "lineno": 2346,
   "symbols_in_volume": [
    "bool",
    "enumerate",
    "isinstance",
    "len",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._nodes.internal.CodegenState",
    "libcst._nodes.op.Semicolon"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Global._validate": {
  "data": {
   "lineno": 2323,
   "symbols_in_volume": [
    "len",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.base.CSTValidationError"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Global._visit_and_replace_children": {
  "data": {
   "lineno": 2337,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sentinel",
    "libcst._nodes.internal.visit_sequence",
    "libcst._nodes.statement.Global",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.If": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.statement.BaseCompoundStatement",
    "libcst._nodes.statement.BaseSuite",
    "libcst._nodes.statement.Else",
    "libcst._nodes.whitespace.EmptyLine",
    "libcst._nodes.whitespace.SimpleWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.If._codegen_impl": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "libcst._nodes.internal.CodegenState",
    "libcst._nodes.statement.If"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.If._visit_and_replace_children": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_optional",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._nodes.statement.If",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Import": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.op.Semicolon",
    "libcst._nodes.statement.BaseSmallStatement",
    "libcst._nodes.statement.ImportAlias",
    "libcst._nodes.whitespace.SimpleWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.Import._codegen_impl": {
  "data": {
   "lineno": 1074,
   "symbols_in_volume": [
    "bool",
    "enumerate",
    "isinstance",
    "len",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._nodes.internal.CodegenState",
    "libcst._nodes.op.Semicolon"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Import._validate": {
  "data": {
   "lineno": 1053,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.op.Comma"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Import._visit_and_replace_children": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sentinel",
    "libcst._nodes.internal.visit_sequence",
    "libcst._nodes.statement.Import",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.ImportAlias": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.expression.Attribute",
    "libcst._nodes.expression.Name",
    "libcst._nodes.op.Comma",
    "libcst._nodes.statement.AsName",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.ImportAlias._codegen_impl": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.internal.CodegenState",
    "libcst._nodes.op.Comma"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.ImportAlias._name": {
  "data": {
   "lineno": 1007,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.expression.Attribute",
    "libcst._nodes.expression.Name",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.ImportAlias._validate": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.Name",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.ImportAlias._visit_and_replace_children": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_optional",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sentinel",
    "libcst._nodes.statement.ImportAlias",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.ImportAlias.evaluated_alias": {
  "data": {
   "lineno": 1023,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.ImportAlias.evaluated_name": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.ImportFrom": {
  "data": {
   "lineno": 1092,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.expression.Attribute",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.Name",
    "libcst._nodes.expression.RightParen",
    "libcst._nodes.op.Dot",
    "libcst._nodes.op.ImportStar",
    "libcst._nodes.op.Semicolon",
    "libcst._nodes.statement.BaseSmallStatement",
    "libcst._nodes.statement.ImportAlias",
    "libcst._nodes.whitespace.SimpleWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.ImportFrom._codegen_impl": {
  "data": {
   "lineno": 1201,
   "symbols_in_volume": [
    "bool",
    "enumerate",
    "isinstance",
    "len",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._nodes.internal.CodegenState",
    "libcst._nodes.op.ImportStar",
    "libcst._nodes.op.Semicolon",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.ImportFrom._validate": {
  "data": {
   "lineno": 1172
  },
  "type": "function"
 },
 "libcst._nodes.statement.ImportFrom._validate_module": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": [
    "len",
    "libcst._nodes.base.CSTValidationError"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.ImportFrom._validate_names": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.op.ImportStar",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.ImportFrom._validate_whitespace": {
  "data": {
   "lineno": 1158,
   "symbols_in_volume": [
    "isinstance",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.op.ImportStar"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.ImportFrom._visit_and_replace_children": {
  "data": {
   "lineno": 1177,
   "symbols_in_volume": [
    "isinstance",
    "libcst._nodes.internal.visit_optional",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sentinel",
    "libcst._nodes.internal.visit_sequence",
    "libcst._nodes.op.ImportStar",
    "libcst._nodes.statement.ImportFrom",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.ImportStar": {
  "data": {
   "shadows": "libcst._nodes.op.ImportStar"
  },
  "type": "import"
 },
 "libcst._nodes.statement.IndentedBlock": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.statement.BaseStatement",
    "libcst._nodes.statement.BaseSuite",
    "libcst._nodes.whitespace.EmptyLine",
    "libcst._nodes.whitespace.TrailingWhitespace",
    "libcst._nodes.whitespace.TrailingWhitespace.field",
    "str",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.IndentedBlock._codegen_impl": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.IndentedBlock._validate": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "len",
    "libcst._nodes.base.CSTValidationError"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.IndentedBlock._visit_and_replace_children": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_body_sequence",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._nodes.statement.IndentedBlock",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.LeftParen": {
  "data": {
   "shadows": "libcst._nodes.expression.LeftParen"
  },
  "type": "import"
 },
 "libcst._nodes.statement.List": {
  "data": {
   "shadows": "libcst._nodes.expression.List"
  },
  "type": "import"
 },
 "libcst._nodes.statement.MaybeSentinel": {
  "data": {
   "shadows": "libcst._maybe_sentinel.MaybeSentinel"
  },
  "type": "import"
 },
 "libcst._nodes.statement.Name": {
  "data": {
   "shadows": "libcst._nodes.expression.Name"
  },
  "type": "import"
 },
 "libcst._nodes.statement.NameItem": {
  "data": {
   "lineno": 2266,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.expression.Name",
    "libcst._nodes.op.Comma",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.NameItem._codegen_impl": {
  "data": {
   "lineno": 2295,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.internal.CodegenState",
    "libcst._nodes.op.Comma"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.NameItem._validate": {
  "data": {
   "lineno": 2284,
   "symbols_in_volume": [
    "len",
    "libcst._nodes.base.CSTValidationError"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.NameItem._visit_and_replace_children": {
  "data": {
   "lineno": 2289,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sentinel",
    "libcst._nodes.statement.NameItem",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Nonlocal": {
  "data": {
   "lineno": 2364,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.op.Semicolon",
    "libcst._nodes.statement.BaseSmallStatement",
    "libcst._nodes.statement.NameItem",
    "libcst._nodes.whitespace.SimpleWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.Nonlocal._codegen_impl": {
  "data": {
   "lineno": 2407,
   "symbols_in_volume": [
    "bool",
    "enumerate",
    "isinstance",
    "len",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._nodes.internal.CodegenState",
    "libcst._nodes.op.Semicolon"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Nonlocal._validate": {
  "data": {
   "lineno": 2381,
   "symbols_in_volume": [
    "len",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.base.CSTValidationError"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Nonlocal._visit_and_replace_children": {
  "data": {
   "lineno": 2395,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sentinel",
    "libcst._nodes.internal.visit_sequence",
    "libcst._nodes.statement.Nonlocal",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst._nodes.statement.Parameters": {
  "data": {
   "shadows": "libcst._nodes.expression.Parameters"
  },
  "type": "import"
 },
 "libcst._nodes.statement.Pass": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.op.Semicolon",
    "libcst._nodes.statement.BaseSmallStatement",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.Pass._codegen_impl": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._nodes.internal.CodegenState",
    "libcst._nodes.op.Semicolon"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Pass._visit_and_replace_children": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_sentinel",
    "libcst._nodes.statement.Pass",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Pattern": {
  "data": {
   "shadows": "typing.Pattern"
  },
  "type": "import"
 },
 "libcst._nodes.statement.Raise": {
  "data": {
   "lineno": 2101,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.expression.From",
    "libcst._nodes.op.Semicolon",
    "libcst._nodes.statement.BaseSmallStatement",
    "libcst._nodes.whitespace.SimpleWhitespace",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.Raise._codegen_impl": {
  "data": {
   "lineno": 2168,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._nodes.internal.CodegenState",
    "libcst._nodes.op.Semicolon"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Raise._validate": {
  "data": {
   "lineno": 2124,
   "symbols_in_volume": [
    "isinstance",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.ExpressionPosition.LEFT",
    "libcst._nodes.expression.ExpressionPosition.RIGHT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Raise._visit_and_replace_children": {
  "data": {
   "lineno": 2158,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_optional",
    "libcst._nodes.internal.visit_sentinel",
    "libcst._nodes.statement.Raise",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Return": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.op.Semicolon",
    "libcst._nodes.statement.BaseSmallStatement",
    "libcst._nodes.whitespace.SimpleWhitespace",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.Return._codegen_impl": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._nodes.internal.CodegenState",
    "libcst._nodes.op.Semicolon"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Return._validate": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "isinstance",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.ExpressionPosition.RIGHT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Return._visit_and_replace_children": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_optional",
    "libcst._nodes.internal.visit_sentinel",
    "libcst._nodes.statement.Return",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.RightParen": {
  "data": {
   "shadows": "libcst._nodes.expression.RightParen"
  },
  "type": "import"
 },
 "libcst._nodes.statement.Semicolon": {
  "data": {
   "shadows": "libcst._nodes.op.Semicolon"
  },
  "type": "import"
 },
 "libcst._nodes.statement.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst._nodes.statement.SimpleStatementLine": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.statement.BaseSmallStatement",
    "libcst._nodes.statement.BaseStatement",
    "libcst._nodes.statement._BaseSimpleStatement",
    "libcst._nodes.whitespace.EmptyLine",
    "libcst._nodes.whitespace.TrailingWhitespace",
    "libcst._nodes.whitespace.TrailingWhitespace.field",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.SimpleStatementLine._codegen_impl": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState",
    "libcst._nodes.statement._BaseSimpleStatement"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.SimpleStatementLine._is_removable": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.SimpleStatementLine._visit_and_replace_children": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._nodes.statement.SimpleStatementLine",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.SimpleStatementSuite": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.statement.BaseSmallStatement",
    "libcst._nodes.statement.BaseSuite",
    "libcst._nodes.statement._BaseSimpleStatement",
    "libcst._nodes.whitespace.SimpleWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "libcst._nodes.whitespace.TrailingWhitespace",
    "libcst._nodes.whitespace.TrailingWhitespace.field",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.SimpleStatementSuite._codegen_impl": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState",
    "libcst._nodes.statement._BaseSimpleStatement"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.SimpleStatementSuite._visit_and_replace_children": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._nodes.statement.SimpleStatementSuite",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.SimpleString": {
  "data": {
   "shadows": "libcst._nodes.expression.SimpleString"
  },
  "type": "import"
 },
 "libcst._nodes.statement.SimpleWhitespace": {
  "data": {
   "shadows": "libcst._nodes.whitespace.SimpleWhitespace"
  },
  "type": "import"
 },
 "libcst._nodes.statement.TrailingWhitespace": {
  "data": {
   "shadows": "libcst._nodes.whitespace.TrailingWhitespace"
  },
  "type": "import"
 },
 "libcst._nodes.statement.Try": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.statement.BaseCompoundStatement",
    "libcst._nodes.statement.BaseSuite",
    "libcst._nodes.statement.Else",
    "libcst._nodes.statement.ExceptHandler",
    "libcst._nodes.statement.Finally",
    "libcst._nodes.whitespace.EmptyLine",
    "libcst._nodes.whitespace.SimpleWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.Try._codegen_impl": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "len",
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Try._validate": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "any",
    "len",
    "libcst._nodes.base.CSTValidationError"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Try._visit_and_replace_children": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_optional",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._nodes.statement.Try",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.Tuple": {
  "data": {
   "shadows": "libcst._nodes.expression.Tuple"
  },
  "type": "import"
 },
 "libcst._nodes.statement.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst._nodes.statement.While": {
  "data": {
   "lineno": 2032,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.statement.BaseCompoundStatement",
    "libcst._nodes.statement.BaseSuite",
    "libcst._nodes.statement.Else",
    "libcst._nodes.whitespace.EmptyLine",
    "libcst._nodes.whitespace.SimpleWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.While._codegen_impl": {
  "data": {
   "lineno": 2083,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.While._validate": {
  "data": {
   "lineno": 2058,
   "symbols_in_volume": [
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.ExpressionPosition.RIGHT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.While._visit_and_replace_children": {
  "data": {
   "lineno": 2067,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_optional",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._nodes.statement.While",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.With": {
  "data": {
   "lineno": 1842,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.Asynchronous",
    "libcst._nodes.statement.BaseCompoundStatement",
    "libcst._nodes.statement.BaseSuite",
    "libcst._nodes.statement.WithItem",
    "libcst._nodes.whitespace.EmptyLine",
    "libcst._nodes.whitespace.SimpleWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace.field",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.With._codegen_impl": {
  "data": {
   "lineno": 1899,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.With._validate": {
  "data": {
   "lineno": 1867,
   "symbols_in_volume": [
    "len",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.base.CSTValidationError",
    "libcst._nodes.expression.ExpressionPosition.RIGHT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.With._visit_and_replace_children": {
  "data": {
   "lineno": 1881,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_optional",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._nodes.statement.With",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.WithItem": {
  "data": {
   "lineno": 1803,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.op.Comma",
    "libcst._nodes.statement.AsName",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement.WithItem._codegen_impl": {
  "data": {
   "lineno": 1828,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.internal.CodegenState",
    "libcst._nodes.op.Comma"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.WithItem._visit_and_replace_children": {
  "data": {
   "lineno": 1821,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_optional",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sentinel",
    "libcst._nodes.statement.WithItem",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement._BaseSimpleStatement": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.statement.BaseSmallStatement",
    "libcst._nodes.whitespace.TrailingWhitespace",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.statement._BaseSimpleStatement._codegen_impl": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement._BaseSimpleStatement._validate": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "libcst._nodes.base.CSTValidationError"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "libcst._nodes.statement.add_slots": {
  "data": {
   "shadows": "libcst._add_slots.add_slots"
  },
  "type": "import"
 },
 "libcst._nodes.statement.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "libcst._nodes.statement.get_docstring_impl": {
  "data": {
   "lineno": 1494,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "len",
    "libcst._nodes.expression.ConcatenatedString",
    "libcst._nodes.expression.SimpleString",
    "libcst._nodes.statement.BaseCompoundStatement",
    "libcst._nodes.statement.BaseSuite",
    "libcst._nodes.statement.Expr",
    "libcst._nodes.statement.SimpleStatementLine",
    "libcst._nodes.statement.inspect",
    "str",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.statement.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "libcst._nodes.statement.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "libcst._nodes.statement.visit_body_sequence": {
  "data": {
   "shadows": "libcst._nodes.internal.visit_body_sequence"
  },
  "type": "import"
 },
 "libcst._nodes.statement.visit_optional": {
  "data": {
   "shadows": "libcst._nodes.internal.visit_optional"
  },
  "type": "import"
 },
 "libcst._nodes.statement.visit_required": {
  "data": {
   "shadows": "libcst._nodes.internal.visit_required"
  },
  "type": "import"
 },
 "libcst._nodes.statement.visit_sentinel": {
  "data": {
   "shadows": "libcst._nodes.internal.visit_sentinel"
  },
  "type": "import"
 },
 "libcst._nodes.statement.visit_sequence": {
  "data": {
   "shadows": "libcst._nodes.internal.visit_sequence"
  },
  "type": "import"
 },
 "libcst._nodes.tests": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.base": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.base.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.base.CSTNodeT": {
  "data": {
   "shadows": "libcst._types.CSTNodeT"
  },
  "type": "import"
 },
 "libcst._nodes.tests.base.CSTNodeTest": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.base.CSTNodeTest.__assert_children_match_codegen": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "libcst.CSTNode"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.base.CSTNodeTest.__assert_children_match_fields": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "getattr",
    "id",
    "isinstance",
    "libcst.CSTNode",
    "libcst._nodes.tests.base.dataclasses",
    "set",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.base.CSTNodeTest.__assert_codegen": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Module",
    "libcst.metadata.CodeRange",
    "libcst.metadata.PositionProvider",
    "libcst.metadata.position_provider.PositionProvidingCodegenState",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.base.CSTNodeTest.__assert_visit_returns_identity": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst._nodes.tests.base._NOOPVisitor"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.base.CSTNodeTest.__derive_children_from_codegen": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "_get_codegen_override",
    "contextlib.ExitStack",
    "hasattr",
    "isinstance",
    "issubclass",
    "libcst.CSTNode",
    "libcst.Module",
    "libcst.__dict__.items",
    "libcst._nodes.tests.base._CSTCodegenPatchTarget",
    "type",
    "typing.Iterable",
    "typing.List",
    "typing.Sequence",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.base.CSTNodeTest.__derive_children_from_codegen._get_codegen_override": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "libcst._nodes.tests.base._CSTCodegenPatchTarget",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.base.CSTNodeTest.__derive_children_from_codegen._get_codegen_override._codegen_impl": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "len",
    "libcst._types.CSTNodeT",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.base.CSTNodeTest.assert_invalid": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "get_node",
    "libcst.CSTNode",
    "libcst.CSTValidationError",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.base.CSTNodeTest.assert_invalid_types": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "TypeError",
    "get_node",
    "libcst.CSTNode",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.base.CSTNodeTest.assert_parses": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "bool",
    "libcst.BaseExpression",
    "libcst.ParserSyntaxError",
    "parser",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.base.CSTNodeTest.setUp": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "isinstance",
    "issubclass",
    "libcst.CSTNode",
    "libcst.__dict__.values",
    "libcst._nodes.tests.base._cst_node_equality_func",
    "type"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.base.CSTNodeTest.validate_node": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "isinstance",
    "libcst._types.CSTNodeT",
    "libcst.metadata.CodeRange",
    "parser",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.base.CSTTransformer": {
  "data": {
   "shadows": "libcst._visitors.CSTTransformer"
  },
  "type": "import"
 },
 "libcst._nodes.tests.base.CSTVisitorT": {
  "data": {
   "shadows": "libcst._visitors.CSTVisitorT"
  },
  "type": "import"
 },
 "libcst._nodes.tests.base.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst._nodes.tests.base.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.base.CodegenState": {
  "data": {
   "shadows": "libcst._nodes.internal.CodegenState"
  },
  "type": "import"
 },
 "libcst._nodes.tests.base.DummyIndentedBlock": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.CSTNode",
    "str"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.base.DummyIndentedBlock._codegen_impl": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.base.DummyIndentedBlock._visit_and_replace_children": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.tests.base.DummyIndentedBlock",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.base.ExitStack": {
  "data": {
   "shadows": "contextlib.ExitStack"
  },
  "type": "import"
 },
 "libcst._nodes.tests.base.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "libcst._nodes.tests.base.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst._nodes.tests.base.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst._nodes.tests.base.PositionProvider": {
  "data": {
   "shadows": "libcst.metadata.PositionProvider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.base.PositionProvidingCodegenState": {
  "data": {
   "shadows": "libcst.metadata.position_provider.PositionProvidingCodegenState"
  },
  "type": "import"
 },
 "libcst._nodes.tests.base.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst._nodes.tests.base.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "libcst._nodes.tests.base.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.base._CSTCodegenPatchTarget": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.CSTNode",
    "str",
    "type",
    "typing.Callable",
    "typing.Type"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.base._NOOPVisitor": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "libcst._visitors.CSTTransformer"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.base._cst_node_equality_func": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "AssertionError",
    "libcst.CSTNode",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.base.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.base.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "libcst._nodes.tests.base.dataclasses": {
  "data": {
   "shadows": "dataclasses"
  },
  "type": "import"
 },
 "libcst._nodes.tests.base.parse_expression_as": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "libcst.BaseExpression",
    "str",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.base.parse_expression_as.inner": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "libcst.BaseExpression",
    "libcst.PartialParserConfig",
    "libcst.parse_expression",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.base.parse_statement_as": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "libcst.BaseStatement",
    "str",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.base.parse_statement_as.inner": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "libcst.BaseStatement",
    "libcst.PartialParserConfig",
    "libcst.parse_statement",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.base.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "libcst._nodes.tests.base.visit_required": {
  "data": {
   "shadows": "libcst._nodes.internal.visit_required"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_assert": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_assert.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_assert.AssertConstructionTest": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_assert.AssertConstructionTest.test_invalid": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "libcst.Assert",
    "libcst.Comma",
    "libcst.Name",
    "libcst.SimpleWhitespace",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_assert.AssertConstructionTest.test_valid": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "libcst.Assert",
    "libcst.Comma",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.RightParen",
    "libcst.SimpleString",
    "libcst.SimpleWhitespace",
    "libcst.metadata.CodeRange",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_assert.AssertParsingTest": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_assert.AssertParsingTest.test_valid": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "libcst.Assert",
    "libcst.Comma",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.RightParen",
    "libcst.SimpleString",
    "libcst.SimpleWhitespace",
    "libcst._nodes.tests.test_assert._assert_parser",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_assert.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_assert.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_assert._assert_parser": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "libcst.Assert",
    "libcst.SimpleStatementLine",
    "libcst.helpers.ensure_type",
    "libcst.parse_statement",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_assert.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_assert.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_assert.ensure_type": {
  "data": {
   "shadows": "libcst.helpers.ensure_type"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_assert.parse_statement": {
  "data": {
   "shadows": "libcst.parse_statement"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_assign": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_assign.AnnAssignTest": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_assign.AnnAssignTest.test_invalid": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "libcst.AnnAssign",
    "libcst.Annotation",
    "libcst.AssignEqual",
    "libcst.Name",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_assign.AnnAssignTest.test_invalid_types": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "libcst.Add",
    "libcst.AnnAssign",
    "libcst.Annotation",
    "libcst.AssignEqual",
    "libcst.BinaryOperation",
    "libcst.Integer",
    "libcst.Name",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_assign.AnnAssignTest.test_valid": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "libcst.AnnAssign",
    "libcst.Annotation",
    "libcst.AssignEqual",
    "libcst.Index",
    "libcst.Integer",
    "libcst.Name",
    "libcst.SimpleStatementLine",
    "libcst.SimpleWhitespace",
    "libcst.Subscript",
    "libcst.SubscriptElement",
    "libcst.metadata.CodeRange",
    "libcst.parse_statement",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_assign.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_assign.AssignTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_assign.AssignTest.test_invalid": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "libcst.Assign",
    "libcst.Integer",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_assign.AssignTest.test_invalid_types": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "libcst.Add",
    "libcst.Assign",
    "libcst.BinaryOperation",
    "libcst.Integer",
    "libcst.Name",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_assign.AssignTest.test_valid": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.Assign",
    "libcst.AssignTarget",
    "libcst.Integer",
    "libcst.Name",
    "libcst.SimpleStatementLine",
    "libcst.SimpleWhitespace",
    "libcst.metadata.CodeRange",
    "libcst.parse_statement",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_assign.AugAssignTest": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_assign.AugAssignTest.test_invalid_types": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "libcst.Add",
    "libcst.AugAssign",
    "libcst.BinaryOperation",
    "libcst.Integer",
    "libcst.Name",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_assign.AugAssignTest.test_valid": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "libcst.AddAssign",
    "libcst.AugAssign",
    "libcst.Integer",
    "libcst.LeftShiftAssign",
    "libcst.MultiplyAssign",
    "libcst.Name",
    "libcst.SimpleStatementLine",
    "libcst.SimpleWhitespace",
    "libcst.metadata.CodeRange",
    "libcst.parse_statement",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_assign.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_assign.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_assign.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_assign.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_assign.parse_statement": {
  "data": {
   "shadows": "libcst.parse_statement"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_atom": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_atom.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_atom.AtomTest": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_atom.AtomTest.test_invalid": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "libcst.Comparison",
    "libcst.ComparisonTarget",
    "libcst.ConcatenatedString",
    "libcst.Ellipsis",
    "libcst.Float",
    "libcst.FormattedString",
    "libcst.Imaginary",
    "libcst.In",
    "libcst.Integer",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.RightParen",
    "libcst.SimpleString",
    "libcst.SimpleWhitespace",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_atom.AtomTest.test_valid": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "libcst.AssignEqual",
    "libcst.Call",
    "libcst.CompFor",
    "libcst.Comparison",
    "libcst.ComparisonTarget",
    "libcst.ConcatenatedString",
    "libcst.Ellipsis",
    "libcst.Equal",
    "libcst.Float",
    "libcst.FormattedString",
    "libcst.FormattedStringExpression",
    "libcst.FormattedStringText",
    "libcst.GeneratorExp",
    "libcst.Imaginary",
    "libcst.In",
    "libcst.Integer",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.NamedExpr",
    "libcst.NotEqual",
    "libcst.RightParen",
    "libcst.SimpleString",
    "libcst.SimpleWhitespace",
    "libcst._nodes.tests.test_atom._parse_expression_force_38",
    "libcst.metadata.CodeRange",
    "libcst.parse_expression",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_atom.AtomTest.test_valid_no_parse": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "libcst.FormattedStringExpression",
    "libcst.FormattedStringText",
    "libcst.Name",
    "libcst.metadata.CodeRange",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_atom.AtomTest.test_versions": {
  "data": {
   "lineno": 1066,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.parse_expression_as",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_atom.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_atom.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_atom.StringHelperTest": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_atom.StringHelperTest.test_string_prefix_and_quotes": {
  "data": {
   "lineno": 1085,
   "symbols_in_volume": [
    "libcst.FormattedString",
    "libcst.SimpleString",
    "libcst.ensure_type",
    "libcst.parse_expression"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_atom._parse_expression_force_38": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.BaseExpression",
    "libcst.PartialParserConfig",
    "libcst.parse_expression",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_atom.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_atom.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_atom.parse_expression": {
  "data": {
   "shadows": "libcst.parse_expression"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_atom.parse_expression_as": {
  "data": {
   "shadows": "libcst._nodes.tests.base.parse_expression_as"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_attribute": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_attribute.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_attribute.AttributeTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_attribute.AttributeTest.test_invalid": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "libcst.Attribute",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.RightParen",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_attribute.AttributeTest.test_valid": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.Attribute",
    "libcst.Dot",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.RightParen",
    "libcst.SimpleWhitespace",
    "libcst.metadata.CodeRange",
    "libcst.parse_expression",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_attribute.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_attribute.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_attribute.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_attribute.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_attribute.parse_expression": {
  "data": {
   "shadows": "libcst.parse_expression"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_await": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_await.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_await.AwaitTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_await.AwaitTest.test_invalid": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "libcst.Await",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.RightParen",
    "libcst.SimpleWhitespace",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_await.AwaitTest.test_valid_py36": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "libcst.Asynchronous",
    "libcst.Await",
    "libcst.Call",
    "libcst.Expr",
    "libcst.FunctionDef",
    "libcst.IndentedBlock",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.Parameters",
    "libcst.PartialParserConfig",
    "libcst.RightParen",
    "libcst.SimpleStatementLine",
    "libcst.SimpleWhitespace",
    "libcst.parse_statement",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_await.AwaitTest.test_valid_py37": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.Await",
    "libcst.Call",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.PartialParserConfig",
    "libcst.RightParen",
    "libcst.SimpleWhitespace",
    "libcst.metadata.CodeRange",
    "libcst.parse_expression",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_await.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_await.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_await.PartialParserConfig": {
  "data": {
   "shadows": "libcst.PartialParserConfig"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_await.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_await.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_await.parse_expression": {
  "data": {
   "shadows": "libcst.parse_expression"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_await.parse_statement": {
  "data": {
   "shadows": "libcst.parse_statement"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_binary_op": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_binary_op.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_binary_op.BinaryOperationTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_binary_op.BinaryOperationTest.test_invalid": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "libcst.Add",
    "libcst.BinaryOperation",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.RightParen",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_binary_op.BinaryOperationTest.test_valid": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.Add",
    "libcst.BinaryOperation",
    "libcst.BitAnd",
    "libcst.BitOr",
    "libcst.BitXor",
    "libcst.Divide",
    "libcst.Float",
    "libcst.FloorDivide",
    "libcst.Integer",
    "libcst.LeftParen",
    "libcst.LeftShift",
    "libcst.MatrixMultiply",
    "libcst.Modulo",
    "libcst.Multiply",
    "libcst.Name",
    "libcst.RightParen",
    "libcst.RightShift",
    "libcst.SimpleWhitespace",
    "libcst.Subtract",
    "libcst.metadata.CodeRange",
    "libcst.parse_expression",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_binary_op.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_binary_op.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_binary_op.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_binary_op.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_binary_op.parse_expression": {
  "data": {
   "shadows": "libcst.parse_expression"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_boolean_op": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_boolean_op.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_boolean_op.BooleanOperationTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_boolean_op.BooleanOperationTest.test_invalid": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "libcst.And",
    "libcst.BooleanOperation",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.Or",
    "libcst.RightParen",
    "libcst.SimpleWhitespace",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_boolean_op.BooleanOperationTest.test_valid": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.And",
    "libcst.BooleanOperation",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.Or",
    "libcst.RightParen",
    "libcst.SimpleWhitespace",
    "libcst.metadata.CodeRange",
    "libcst.parse_expression",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_boolean_op.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_boolean_op.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_boolean_op.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_boolean_op.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_boolean_op.parse_expression": {
  "data": {
   "shadows": "libcst.parse_expression"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_call": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_call.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_call.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_call.CallTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_call.CallTest.test_invalid": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "libcst.Arg",
    "libcst.AssignEqual",
    "libcst.Call",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.RightParen",
    "libcst.SimpleString",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_call.CallTest.test_valid": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.Arg",
    "libcst.AssignEqual",
    "libcst.Attribute",
    "libcst.Call",
    "libcst.Comma",
    "libcst.Integer",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.RightParen",
    "libcst.SimpleWhitespace",
    "libcst.metadata.CodeRange",
    "libcst.parse_expression",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_call.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_call.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_call.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_call.parse_expression": {
  "data": {
   "shadows": "libcst.parse_expression"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_classdef": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_classdef.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_classdef.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_classdef.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_classdef.ClassDefCreationTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_classdef.ClassDefCreationTest.test_invalid": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.ClassDef",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.Pass",
    "libcst.RightParen",
    "libcst.SimpleStatementSuite",
    "libcst.SimpleWhitespace",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_classdef.ClassDefCreationTest.test_valid": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.Arg",
    "libcst.ClassDef",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.Pass",
    "libcst.RightParen",
    "libcst.SimpleStatementSuite",
    "libcst.metadata.CodeRange",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_classdef.ClassDefParserTest": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_classdef.ClassDefParserTest.test_valid": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "libcst.Arg",
    "libcst.AssignEqual",
    "libcst.ClassDef",
    "libcst.Comma",
    "libcst.Comment",
    "libcst.Decorator",
    "libcst.EmptyLine",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.Pass",
    "libcst.RightParen",
    "libcst.SimpleStatementSuite",
    "libcst.SimpleWhitespace",
    "libcst.metadata.CodeRange",
    "libcst.parse_statement",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_classdef.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_classdef.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_classdef.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_classdef.parse_statement": {
  "data": {
   "shadows": "libcst.parse_statement"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_comment": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_comment.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_comment.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_comment.CommentTest": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_comment.CommentTest.test_invalid": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Comment",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_comment.CommentTest.test_valid": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Comment",
    "libcst.testing.utils.data_provider",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_comment.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_comment.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_comparison": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_comparison.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_comparison.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_comparison.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_comparison.ComparisonTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_comparison.ComparisonTest.test_invalid": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Comparison",
    "libcst.ComparisonTarget",
    "libcst.GreaterThan",
    "libcst.IfExp",
    "libcst.Integer",
    "libcst.Is",
    "libcst.LeftParen",
    "libcst.LessThan",
    "libcst.Name",
    "libcst.NotIn",
    "libcst.RightParen",
    "libcst.SimpleWhitespace",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_comparison.ComparisonTest.test_valid": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Comparison",
    "libcst.ComparisonTarget",
    "libcst.Equal",
    "libcst.GreaterThan",
    "libcst.IfExp",
    "libcst.In",
    "libcst.Integer",
    "libcst.Is",
    "libcst.IsNot",
    "libcst.LeftParen",
    "libcst.LessThan",
    "libcst.Name",
    "libcst.NotEqual",
    "libcst.NotIn",
    "libcst.RightParen",
    "libcst.SimpleWhitespace",
    "libcst.metadata.CodeRange",
    "libcst.parse_expression",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_comparison.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_comparison.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_comparison.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_comparison.parse_expression": {
  "data": {
   "shadows": "libcst.parse_expression"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_cst_node": {
  "data": {
   "symbols_in_volume": [
    "libcst.SimpleWhitespace"
   ]
  },
  "type": "module"
 },
 "libcst._nodes.tests.test_cst_node.CSTNodeT": {
  "data": {
   "shadows": "libcst._types.CSTNodeT"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_cst_node.CSTNodeTest": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_cst_node.CSTNodeTest.test_deep_equals_fails": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.EmptyLine",
    "libcst.Pass",
    "libcst.Semicolon",
    "libcst.SimpleStatementLine",
    "libcst.SimpleWhitespace",
    "libcst.testing.utils.data_provider"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_cst_node.CSTNodeTest.test_deep_equals_success": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.EmptyLine",
    "libcst.Pass",
    "libcst.SimpleStatementLine",
    "libcst.SimpleWhitespace",
    "libcst._nodes.tests.test_cst_node._EMPTY_SIMPLE_WHITESPACE",
    "libcst.testing.utils.data_provider"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_cst_node.CSTNodeTest.test_default_eq": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "libcst.SimpleWhitespace"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_cst_node.CSTNodeTest.test_hash": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "hash",
    "libcst.SimpleWhitespace"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_cst_node.CSTNodeTest.test_repr": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "libcst.Comment",
    "libcst.EmptyLine",
    "libcst.Newline",
    "libcst.Pass",
    "libcst.SimpleStatementLine",
    "libcst.SimpleWhitespace",
    "libcst.TrailingWhitespace",
    "repr",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_cst_node.CSTNodeTest.test_visit": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "libcst.Module",
    "libcst.Pass",
    "libcst.SimpleStatementLine",
    "libcst._nodes.tests.test_cst_node._TestVisitor"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_cst_node.CSTNodeTest.test_with_changes": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "libcst.Comment",
    "libcst.Newline",
    "libcst.SimpleWhitespace",
    "libcst.TrailingWhitespace",
    "libcst.testing.utils.none_throws"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_cst_node.CSTTransformer": {
  "data": {
   "shadows": "libcst._visitors.CSTTransformer"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_cst_node.RemovalSentinel": {
  "data": {
   "shadows": "libcst._removal_sentinel.RemovalSentinel"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_cst_node.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_cst_node.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_cst_node._EMPTY_SIMPLE_WHITESPACE": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "libcst._nodes.tests.test_cst_node._TestVisitor": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "libcst._visitors.CSTTransformer"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_cst_node._TestVisitor.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_cst_node._TestVisitor.assert_counter": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_cst_node._TestVisitor.on_leave": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "isinstance",
    "libcst.Module",
    "libcst.Newline",
    "libcst.Pass",
    "libcst.SimpleStatementLine",
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._types.CSTNodeT",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_cst_node._TestVisitor.on_visit": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "libcst.CSTNode",
    "libcst.Module",
    "libcst.Newline",
    "libcst.Pass",
    "libcst.SimpleStatementLine"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_cst_node.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_cst_node.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_cst_node.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_cst_node.none_throws": {
  "data": {
   "shadows": "libcst.testing.utils.none_throws"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_del": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_del.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_del.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_del.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_del.DelTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_del.DelTest.test_invalid": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "libcst.Del",
    "libcst.Name",
    "libcst.SimpleWhitespace",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_del.DelTest.test_valid": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.Del",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.RightParen",
    "libcst.Semicolon",
    "libcst.SimpleStatementLine",
    "libcst.SimpleWhitespace",
    "libcst.metadata.CodeRange",
    "libcst.parse_statement",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_del.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_del.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_del.parse_statement": {
  "data": {
   "shadows": "libcst.parse_statement"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_dict": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_dict.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_dict.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_dict.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_dict.DictTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_dict.DictTest.test_invalid": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "libcst.Dict",
    "libcst.LeftParen",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_dict.DictTest.test_valid": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.Comma",
    "libcst.CompFor",
    "libcst.CompIf",
    "libcst.Dict",
    "libcst.DictElement",
    "libcst.GeneratorExp",
    "libcst.LeftCurlyBrace",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.RightCurlyBrace",
    "libcst.RightParen",
    "libcst.SimpleWhitespace",
    "libcst.StarredDictElement",
    "libcst.metadata.CodeRange",
    "libcst.parse_expression",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_dict.DictTest.test_versions": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.parse_expression_as",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_dict.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_dict.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_dict.parse_expression": {
  "data": {
   "shadows": "libcst.parse_expression"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_dict.parse_expression_as": {
  "data": {
   "shadows": "libcst._nodes.tests.base.parse_expression_as"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_dict_comp": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_dict_comp.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_dict_comp.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_dict_comp.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_dict_comp.DictCompTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_dict_comp.DictCompTest.test_invalid": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "libcst.Asynchronous",
    "libcst.CompFor",
    "libcst.DictComp",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.SimpleWhitespace",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_dict_comp.DictCompTest.test_valid": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.CompFor",
    "libcst.CompIf",
    "libcst.DictComp",
    "libcst.LeftCurlyBrace",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.RightCurlyBrace",
    "libcst.RightParen",
    "libcst.SimpleWhitespace",
    "libcst.metadata.CodeRange",
    "libcst.parse_expression",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_dict_comp.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_dict_comp.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_dict_comp.parse_expression": {
  "data": {
   "shadows": "libcst.parse_expression"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_docstring": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_docstring.DocstringTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_docstring.DocstringTest.test_class_docstring": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "libcst.ClassDef",
    "libcst.helpers.ensure_type",
    "libcst.parse_statement",
    "libcst.testing.utils.data_provider",
    "str",
    "textwrap.dedent",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_docstring.DocstringTest.test_clean_docstring": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "libcst.parse_module",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_docstring.DocstringTest.test_function_docstring": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "libcst.FunctionDef",
    "libcst.helpers.ensure_type",
    "libcst.parse_statement",
    "libcst.testing.utils.data_provider",
    "str",
    "textwrap.dedent",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_docstring.DocstringTest.test_module_docstring": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.parse_module",
    "libcst.testing.utils.data_provider",
    "str",
    "textwrap.dedent",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_docstring.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_docstring.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_docstring.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_docstring.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_docstring.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_docstring.ensure_type": {
  "data": {
   "shadows": "libcst.helpers.ensure_type"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_else": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_else.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_else.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_else.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_else.ElseTest": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_else.ElseTest.test_valid": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst.Else",
    "libcst.Pass",
    "libcst.SimpleStatementSuite",
    "libcst.SimpleWhitespace",
    "libcst.metadata.CodeRange",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_else.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_else.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_empty_line": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_empty_line.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_empty_line.DummyIndentedBlock": {
  "data": {
   "shadows": "libcst._nodes.tests.base.DummyIndentedBlock"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_empty_line.EmptyLineTest": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_empty_line.EmptyLineTest.test_valid": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Comment",
    "libcst.EmptyLine",
    "libcst.Newline",
    "libcst.SimpleWhitespace",
    "libcst._nodes.tests.base.DummyIndentedBlock",
    "libcst.testing.utils.data_provider",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_empty_line.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_empty_line.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_for": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_for.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_for.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_for.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_for.DummyIndentedBlock": {
  "data": {
   "shadows": "libcst._nodes.tests.base.DummyIndentedBlock"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_for.ForTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_for.ForTest.test_invalid": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "libcst.Call",
    "libcst.For",
    "libcst.Name",
    "libcst.Pass",
    "libcst.SimpleStatementSuite",
    "libcst.SimpleWhitespace",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_for.ForTest.test_valid": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.Asynchronous",
    "libcst.Call",
    "libcst.Comment",
    "libcst.Else",
    "libcst.EmptyLine",
    "libcst.For",
    "libcst.FunctionDef",
    "libcst.IndentedBlock",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.Parameters",
    "libcst.PartialParserConfig",
    "libcst.Pass",
    "libcst.RightParen",
    "libcst.SimpleStatementLine",
    "libcst.SimpleStatementSuite",
    "libcst.SimpleWhitespace",
    "libcst._nodes.tests.base.DummyIndentedBlock",
    "libcst.metadata.CodeRange",
    "libcst.parse_statement",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_for.PartialParserConfig": {
  "data": {
   "shadows": "libcst.PartialParserConfig"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_for.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_for.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_for.parse_statement": {
  "data": {
   "shadows": "libcst.parse_statement"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_funcdef": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_funcdef.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_funcdef.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_funcdef.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_funcdef.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_funcdef.DummyIndentedBlock": {
  "data": {
   "shadows": "libcst._nodes.tests.base.DummyIndentedBlock"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_funcdef.FunctionDefCreationTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_funcdef.FunctionDefCreationTest.test_invalid": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "libcst.AssignEqual",
    "libcst.Asynchronous",
    "libcst.CSTNode",
    "libcst.Decorator",
    "libcst.FunctionDef",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.Param",
    "libcst.ParamSlash",
    "libcst.ParamStar",
    "libcst.Parameters",
    "libcst.Pass",
    "libcst.RightParen",
    "libcst.SimpleStatementSuite",
    "libcst.SimpleString",
    "libcst.SimpleWhitespace",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_funcdef.FunctionDefCreationTest.test_valid": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.Annotation",
    "libcst.Arg",
    "libcst.Asynchronous",
    "libcst.Call",
    "libcst.Comment",
    "libcst.Decorator",
    "libcst.EmptyLine",
    "libcst.Float",
    "libcst.FunctionDef",
    "libcst.IndentedBlock",
    "libcst.Integer",
    "libcst.Name",
    "libcst.Param",
    "libcst.Parameters",
    "libcst.ParenthesizedWhitespace",
    "libcst.Pass",
    "libcst.SimpleStatementLine",
    "libcst.SimpleStatementSuite",
    "libcst.SimpleString",
    "libcst.SimpleWhitespace",
    "libcst._nodes.tests.base.DummyIndentedBlock",
    "libcst.metadata.CodeRange",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_funcdef.FunctionDefParserTest": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_funcdef.FunctionDefParserTest.test_valid": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "libcst.Annotation",
    "libcst.Arg",
    "libcst.AssignEqual",
    "libcst.Asynchronous",
    "libcst.CSTNode",
    "libcst.Call",
    "libcst.Comma",
    "libcst.Comment",
    "libcst.Decorator",
    "libcst.EmptyLine",
    "libcst.Float",
    "libcst.FunctionDef",
    "libcst.Integer",
    "libcst.Name",
    "libcst.Param",
    "libcst.ParamStar",
    "libcst.Parameters",
    "libcst.Pass",
    "libcst.SimpleStatementSuite",
    "libcst.SimpleString",
    "libcst.SimpleWhitespace",
    "libcst.parse_statement",
    "libcst.testing.utils.data_provider",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_funcdef.FunctionDefParserTest.test_valid_38": {
  "data": {
   "lineno": 1772,
   "symbols_in_volume": [
    "libcst.Annotation",
    "libcst.AssignEqual",
    "libcst.CSTNode",
    "libcst.Comma",
    "libcst.FunctionDef",
    "libcst.Integer",
    "libcst.Name",
    "libcst.Param",
    "libcst.ParamSlash",
    "libcst.ParamStar",
    "libcst.Parameters",
    "libcst.Pass",
    "libcst.SimpleStatementSuite",
    "libcst.SimpleString",
    "libcst.SimpleWhitespace",
    "libcst._nodes.tests.test_funcdef._parse_statement_force_38",
    "libcst.testing.utils.data_provider",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_funcdef.FunctionDefParserTest.test_versions": {
  "data": {
   "lineno": 2019,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.parse_statement_as",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_funcdef._parse_statement_force_38": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "libcst.BaseCompoundStatement",
    "libcst.PartialParserConfig",
    "libcst.parse_statement",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_funcdef.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_funcdef.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_funcdef.parse_statement": {
  "data": {
   "shadows": "libcst.parse_statement"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_funcdef.parse_statement_as": {
  "data": {
   "shadows": "libcst._nodes.tests.base.parse_statement_as"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_global": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_global.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_global.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_global.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_global.GlobalConstructionTest": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_global.GlobalConstructionTest.test_invalid": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "libcst.Comma",
    "libcst.Global",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.NameItem",
    "libcst.RightParen",
    "libcst.SimpleWhitespace",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_global.GlobalConstructionTest.test_valid": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "libcst.Comma",
    "libcst.Global",
    "libcst.Name",
    "libcst.NameItem",
    "libcst.SimpleWhitespace",
    "libcst.metadata.CodeRange",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_global.GlobalParsingTest": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_global.GlobalParsingTest.test_valid": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "libcst.Comma",
    "libcst.Global",
    "libcst.Name",
    "libcst.NameItem",
    "libcst.SimpleStatementLine",
    "libcst.SimpleWhitespace",
    "libcst.helpers.ensure_type",
    "libcst.parse_statement",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_global.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_global.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_global.ensure_type": {
  "data": {
   "shadows": "libcst.helpers.ensure_type"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_global.parse_statement": {
  "data": {
   "shadows": "libcst.parse_statement"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_if": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_if.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_if.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_if.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_if.DummyIndentedBlock": {
  "data": {
   "shadows": "libcst._nodes.tests.base.DummyIndentedBlock"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_if.IfTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_if.IfTest.test_valid": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.Comment",
    "libcst.Else",
    "libcst.EmptyLine",
    "libcst.If",
    "libcst.IndentedBlock",
    "libcst.Name",
    "libcst.Pass",
    "libcst.SimpleStatementLine",
    "libcst.SimpleStatementSuite",
    "libcst.SimpleWhitespace",
    "libcst._nodes.tests.base.DummyIndentedBlock",
    "libcst.metadata.CodeRange",
    "libcst.parse_statement",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_if.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_if.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_if.parse_statement": {
  "data": {
   "shadows": "libcst.parse_statement"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_ifexp": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_ifexp.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_ifexp.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_ifexp.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_ifexp.IfExpTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_ifexp.IfExpTest.test_invalid": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.IfExp",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.RightParen",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_ifexp.IfExpTest.test_valid": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.IfExp",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.RightParen",
    "libcst.SimpleWhitespace",
    "libcst.metadata.CodeRange",
    "libcst.parse_expression",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_ifexp.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_ifexp.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_ifexp.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_ifexp.parse_expression": {
  "data": {
   "shadows": "libcst.parse_expression"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_import": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_import.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_import.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_import.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_import.ImportCreateTest": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_import.ImportCreateTest.test_invalid": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "libcst.Attribute",
    "libcst.Comma",
    "libcst.Float",
    "libcst.Import",
    "libcst.ImportAlias",
    "libcst.Name",
    "libcst.SimpleWhitespace",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_import.ImportCreateTest.test_valid": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "libcst.AsName",
    "libcst.Attribute",
    "libcst.Comma",
    "libcst.Dot",
    "libcst.Import",
    "libcst.ImportAlias",
    "libcst.Name",
    "libcst.SimpleWhitespace",
    "libcst.metadata.CodeRange",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_import.ImportFromCreateTest": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_import.ImportFromCreateTest.test_invalid": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "libcst.ImportAlias",
    "libcst.ImportFrom",
    "libcst.ImportStar",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.RightParen",
    "libcst.SimpleWhitespace",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_import.ImportFromCreateTest.test_valid": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "libcst.AsName",
    "libcst.Comma",
    "libcst.Dot",
    "libcst.ImportAlias",
    "libcst.ImportFrom",
    "libcst.ImportStar",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.RightParen",
    "libcst.SimpleWhitespace",
    "libcst.metadata.CodeRange",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_import.ImportFromParseTest": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_import.ImportFromParseTest.test_valid": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "libcst.AsName",
    "libcst.Comma",
    "libcst.Dot",
    "libcst.ImportAlias",
    "libcst.ImportFrom",
    "libcst.ImportStar",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.RightParen",
    "libcst.SimpleStatementLine",
    "libcst.SimpleWhitespace",
    "libcst.helpers.ensure_type",
    "libcst.parse_statement",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_import.ImportParseTest": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_import.ImportParseTest.test_valid": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "libcst.AsName",
    "libcst.Attribute",
    "libcst.Comma",
    "libcst.Dot",
    "libcst.Import",
    "libcst.ImportAlias",
    "libcst.Name",
    "libcst.SimpleStatementLine",
    "libcst.SimpleWhitespace",
    "libcst.helpers.ensure_type",
    "libcst.parse_statement",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_import.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_import.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_import.ensure_type": {
  "data": {
   "shadows": "libcst.helpers.ensure_type"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_import.parse_statement": {
  "data": {
   "shadows": "libcst.parse_statement"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_indented_block": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_indented_block.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_indented_block.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_indented_block.IndentedBlockTest": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_indented_block.IndentedBlockTest.test_invalid": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.IndentedBlock",
    "libcst.Pass",
    "libcst.SimpleStatementLine",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_indented_block.IndentedBlockTest.test_valid": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Comment",
    "libcst.Continue",
    "libcst.EmptyLine",
    "libcst.If",
    "libcst.IndentedBlock",
    "libcst.Name",
    "libcst.Pass",
    "libcst.SimpleStatementLine",
    "libcst.SimpleWhitespace",
    "libcst.TrailingWhitespace",
    "libcst.parse_statement",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_indented_block.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_indented_block.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_indented_block.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_indented_block.parse_statement": {
  "data": {
   "shadows": "libcst.parse_statement"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_lambda": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_lambda.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_lambda.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_lambda.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_lambda.LambdaCreationTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_lambda.LambdaCreationTest.test_invalid": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "libcst.Annotation",
    "libcst.AssignEqual",
    "libcst.CSTNode",
    "libcst.Integer",
    "libcst.Lambda",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.Param",
    "libcst.ParamStar",
    "libcst.Parameters",
    "libcst.RightParen",
    "libcst.SimpleString",
    "libcst.SimpleWhitespace",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_lambda.LambdaCreationTest.test_valid": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Colon",
    "libcst.Float",
    "libcst.Integer",
    "libcst.Lambda",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.Param",
    "libcst.Parameters",
    "libcst.RightParen",
    "libcst.SimpleString",
    "libcst.SimpleWhitespace",
    "libcst.metadata.CodeRange",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_lambda.LambdaParserTest": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_lambda.LambdaParserTest.test_valid": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "libcst.AssignEqual",
    "libcst.CSTNode",
    "libcst.Colon",
    "libcst.Comma",
    "libcst.Float",
    "libcst.Integer",
    "libcst.Lambda",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.Param",
    "libcst.ParamStar",
    "libcst.Parameters",
    "libcst.RightParen",
    "libcst.SimpleString",
    "libcst.SimpleWhitespace",
    "libcst.metadata.CodeRange",
    "libcst.parse_expression",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_lambda.LambdaParserTest.test_valid_38": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Comma",
    "libcst.Integer",
    "libcst.Lambda",
    "libcst.Name",
    "libcst.Param",
    "libcst.ParamSlash",
    "libcst.Parameters",
    "libcst.SimpleWhitespace",
    "libcst._nodes.tests.test_lambda._parse_expression_force_38",
    "libcst.metadata.CodeRange",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_lambda.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_lambda._parse_expression_force_38": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "libcst.BaseExpression",
    "libcst.PartialParserConfig",
    "libcst.parse_expression",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_lambda.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_lambda.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_lambda.parse_expression": {
  "data": {
   "shadows": "libcst.parse_expression"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_leaf_small_statements": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_leaf_small_statements.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_leaf_small_statements.LeafSmallStatementsTest": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_leaf_small_statements.LeafSmallStatementsTest.test_valid": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "libcst.Break",
    "libcst.CSTNode",
    "libcst.Continue",
    "libcst.Pass",
    "libcst.testing.utils.data_provider",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_leaf_small_statements.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_leaf_small_statements.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_list": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_list.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_list.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_list.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_list.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_list.ListTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_list.ListTest.test_invalid": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Element",
    "libcst.LeftParen",
    "libcst.List",
    "libcst.Name",
    "libcst.RightParen",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_list.ListTest.test_valid": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "libcst.Comma",
    "libcst.Element",
    "libcst.For",
    "libcst.LeftParen",
    "libcst.LeftSquareBracket",
    "libcst.List",
    "libcst.Name",
    "libcst.Pass",
    "libcst.RightParen",
    "libcst.RightSquareBracket",
    "libcst.SimpleStatementSuite",
    "libcst.SimpleWhitespace",
    "libcst.StarredElement",
    "libcst.metadata.CodeRange",
    "libcst.parse_expression",
    "libcst.parse_statement",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_list.ListTest.test_versions": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.parse_expression_as",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_list.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_list.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_list.parse_expression": {
  "data": {
   "shadows": "libcst.parse_expression"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_list.parse_expression_as": {
  "data": {
   "shadows": "libcst._nodes.tests.base.parse_expression_as"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_list.parse_statement": {
  "data": {
   "shadows": "libcst.parse_statement"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_matrix_multiply": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_matrix_multiply.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_matrix_multiply.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_matrix_multiply.NamedExprTest": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_matrix_multiply.NamedExprTest.test_valid": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "libcst.AugAssign",
    "libcst.BinaryOperation",
    "libcst.MatrixMultiply",
    "libcst.MatrixMultiplyAssign",
    "libcst.Name",
    "libcst.SimpleStatementLine",
    "libcst._nodes.tests.base.parse_expression_as",
    "libcst._nodes.tests.base.parse_statement_as",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_matrix_multiply.NamedExprTest.test_versions": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.parse_expression_as",
    "libcst._nodes.tests.base.parse_statement_as",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_matrix_multiply.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_matrix_multiply.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_matrix_multiply.parse_expression_as": {
  "data": {
   "shadows": "libcst._nodes.tests.base.parse_expression_as"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_matrix_multiply.parse_statement_as": {
  "data": {
   "shadows": "libcst._nodes.tests.base.parse_statement_as"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_module": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_module.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_module.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_module.MetadataWrapper": {
  "data": {
   "shadows": "libcst.metadata.MetadataWrapper"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_module.ModuleTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_module.ModuleTest.cmp_position": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "int",
    "libcst.metadata.CodeRange",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_module.ModuleTest.test_code_and_bytes_properties": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.Comment",
    "libcst.EmptyLine",
    "libcst.Module",
    "libcst.Pass",
    "libcst.SimpleStatementLine",
    "libcst.testing.utils.data_provider",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_module.ModuleTest.test_code_for_node": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Module",
    "libcst.Newline",
    "libcst.testing.utils.data_provider",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_module.ModuleTest.test_function_position": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "libcst.FunctionDef",
    "libcst.Pass",
    "libcst.SimpleStatementLine",
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.PositionProvider",
    "libcst.parse_module",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_module.ModuleTest.test_module_config_for_parsing": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "libcst.If",
    "libcst.IndentedBlock",
    "libcst.Name",
    "libcst.Newline",
    "libcst.Pass",
    "libcst.SimpleStatementLine",
    "libcst.TrailingWhitespace",
    "libcst.parse_module",
    "libcst.parse_statement"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_module.ModuleTest.test_module_position": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "libcst.metadata.CodeRange",
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.PositionProvider",
    "libcst.parse_module",
    "libcst.testing.utils.data_provider",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_module.ModuleTest.test_multiline_string_position": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "libcst.Expr",
    "libcst.SimpleStatementLine",
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.PositionProvider",
    "libcst.parse_module",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_module.ModuleTest.test_nested_indent_position": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "libcst.Else",
    "libcst.If",
    "libcst.SimpleStatementLine",
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.PositionProvider",
    "libcst.parse_module",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_module.ModuleTest.test_parser": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "libcst.Comment",
    "libcst.EmptyLine",
    "libcst.Module",
    "libcst.Pass",
    "libcst.SimpleStatementLine",
    "libcst.SimpleWhitespace",
    "libcst.TrailingWhitespace",
    "libcst.parse_module",
    "libcst.testing.utils.data_provider",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_module.PositionProvider": {
  "data": {
   "shadows": "libcst.metadata.PositionProvider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_module.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_module.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_module.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_module.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_module.parse_module": {
  "data": {
   "shadows": "libcst.parse_module"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_module.parse_statement": {
  "data": {
   "shadows": "libcst.parse_statement"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_namedexpr": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_namedexpr.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_namedexpr.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_namedexpr.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_namedexpr.NamedExprTest": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_namedexpr.NamedExprTest.test_invalid": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.NamedExpr",
    "libcst.RightParen",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_namedexpr.NamedExprTest.test_valid": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "libcst.Arg",
    "libcst.Call",
    "libcst.Comma",
    "libcst.Float",
    "libcst.If",
    "libcst.Integer",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.NamedExpr",
    "libcst.Pass",
    "libcst.RightParen",
    "libcst.SimpleStatementSuite",
    "libcst.SimpleWhitespace",
    "libcst.While",
    "libcst._nodes.tests.test_namedexpr._parse_expression_force_38",
    "libcst._nodes.tests.test_namedexpr._parse_statement_force_38",
    "libcst.metadata.CodeRange",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_namedexpr._parse_expression_force_38": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "libcst.BaseExpression",
    "libcst.PartialParserConfig",
    "libcst.parse_expression",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_namedexpr._parse_statement_force_38": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "libcst.BaseCompoundStatement",
    "libcst.PartialParserConfig",
    "libcst.parse_statement",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_namedexpr.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_namedexpr.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_newline": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_newline.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_newline.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_newline.NewlineTest": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_newline.NewlineTest.test_invalid": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Newline",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_newline.NewlineTest.test_valid": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Newline",
    "libcst.testing.utils.data_provider",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_newline.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_newline.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_nonlocal": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_nonlocal.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_nonlocal.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_nonlocal.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_nonlocal.NonlocalConstructionTest": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_nonlocal.NonlocalConstructionTest.test_invalid": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "libcst.Comma",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.NameItem",
    "libcst.Nonlocal",
    "libcst.RightParen",
    "libcst.SimpleWhitespace",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_nonlocal.NonlocalConstructionTest.test_valid": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "libcst.Comma",
    "libcst.Name",
    "libcst.NameItem",
    "libcst.Nonlocal",
    "libcst.SimpleWhitespace",
    "libcst.metadata.CodeRange",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_nonlocal.NonlocalParsingTest": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_nonlocal.NonlocalParsingTest.test_valid": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "libcst.Comma",
    "libcst.Name",
    "libcst.NameItem",
    "libcst.Nonlocal",
    "libcst.SimpleStatementLine",
    "libcst.SimpleWhitespace",
    "libcst.helpers.ensure_type",
    "libcst.parse_statement",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_nonlocal.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_nonlocal.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_nonlocal.ensure_type": {
  "data": {
   "shadows": "libcst.helpers.ensure_type"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_nonlocal.parse_statement": {
  "data": {
   "shadows": "libcst.parse_statement"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_number": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_number.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_number.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_number.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_number.NumberTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_number.NumberTest.test_invalid": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Float",
    "libcst.Imaginary",
    "libcst.Integer",
    "libcst.LeftParen",
    "libcst.RightParen",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_number.NumberTest.test_valid": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Integer",
    "libcst.LeftParen",
    "libcst.Minus",
    "libcst.Plus",
    "libcst.RightParen",
    "libcst.UnaryOperation",
    "libcst.metadata.CodeRange",
    "libcst.parse_expression",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_number.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_number.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_number.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_number.parse_expression": {
  "data": {
   "shadows": "libcst.parse_expression"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_raise": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_raise.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_raise.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_raise.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_raise.RaiseConstructionTest": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_raise.RaiseConstructionTest.test_invalid": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "libcst.Call",
    "libcst.From",
    "libcst.Name",
    "libcst.Raise",
    "libcst.SimpleWhitespace",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_raise.RaiseConstructionTest.test_valid": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "libcst.Call",
    "libcst.From",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.Raise",
    "libcst.RightParen",
    "libcst.SimpleWhitespace",
    "libcst.metadata.CodeRange",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_raise.RaiseParsingTest": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_raise.RaiseParsingTest.test_valid": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "libcst.Call",
    "libcst.From",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.Raise",
    "libcst.RightParen",
    "libcst.SimpleStatementLine",
    "libcst.SimpleWhitespace",
    "libcst.helpers.ensure_type",
    "libcst.parse_statement",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_raise.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_raise.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_raise.ensure_type": {
  "data": {
   "shadows": "libcst.helpers.ensure_type"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_raise.parse_statement": {
  "data": {
   "shadows": "libcst.parse_statement"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_removal_behavior": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_removal_behavior.CSTNodeT": {
  "data": {
   "shadows": "libcst._types.CSTNodeT"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_removal_behavior.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_removal_behavior.CSTTransformer": {
  "data": {
   "shadows": "libcst._visitors.CSTTransformer"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_removal_behavior.ContinueStatementRemovalVisitor": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "libcst._visitors.CSTTransformer"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_removal_behavior.ContinueStatementRemovalVisitor.on_leave": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "isinstance",
    "libcst.Continue",
    "libcst.RemovalSentinel",
    "libcst.RemoveFromParent",
    "libcst._types.CSTNodeT",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_removal_behavior.IfStatementRemovalVisitor": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst._visitors.CSTTransformer"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_removal_behavior.IfStatementRemovalVisitor.on_leave": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "isinstance",
    "libcst.If",
    "libcst.RemovalSentinel",
    "libcst.RemoveFromParent",
    "libcst._types.CSTNodeT",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_removal_behavior.RemovalBehavior": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_removal_behavior.RemovalBehavior.test_removal_pass_behavior": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "Exception",
    "libcst._nodes.tests.test_removal_behavior.ContinueStatementRemovalVisitor",
    "libcst._nodes.tests.test_removal_behavior.IfStatementRemovalVisitor",
    "libcst._nodes.tests.test_removal_behavior.SpecificImportRemovalVisitor",
    "libcst._visitors.CSTTransformer",
    "libcst.parse_module",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Type",
    "visitor"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_removal_behavior.RemovalSentinel": {
  "data": {
   "shadows": "libcst.RemovalSentinel"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_removal_behavior.SpecificImportRemovalVisitor": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "libcst._visitors.CSTTransformer"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_removal_behavior.SpecificImportRemovalVisitor.on_leave": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "isinstance",
    "libcst.Import",
    "libcst.ImportFrom",
    "libcst.Name",
    "libcst.RemovalSentinel",
    "libcst.RemoveFromParent",
    "libcst._types.CSTNodeT",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_removal_behavior.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_removal_behavior.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_removal_behavior.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_removal_behavior.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_removal_behavior.parse_module": {
  "data": {
   "shadows": "libcst.parse_module"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_return": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_return.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_return.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_return.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_return.ReturnCreateTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_return.ReturnCreateTest.test_invalid": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "libcst.Name",
    "libcst.Return",
    "libcst.SimpleWhitespace",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_return.ReturnCreateTest.test_valid": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.Name",
    "libcst.Return",
    "libcst.SimpleStatementLine",
    "libcst.metadata.CodeRange",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_return.ReturnParseTest": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_return.ReturnParseTest.test_valid": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.Return",
    "libcst.RightParen",
    "libcst.Semicolon",
    "libcst.SimpleStatementLine",
    "libcst.SimpleWhitespace",
    "libcst.parse_statement",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_return.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_return.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_return.parse_statement": {
  "data": {
   "shadows": "libcst.parse_statement"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_set": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_set.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_set.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_set.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_set.ListTest": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_set.ListTest.test_invalid": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Element",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.RightParen",
    "libcst.Set",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_set.ListTest.test_valid": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "libcst.Comma",
    "libcst.CompFor",
    "libcst.CompIf",
    "libcst.Element",
    "libcst.GeneratorExp",
    "libcst.LeftCurlyBrace",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.RightCurlyBrace",
    "libcst.RightParen",
    "libcst.Set",
    "libcst.SimpleWhitespace",
    "libcst.StarredElement",
    "libcst.parse_expression",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_set.ListTest.test_versions": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.parse_expression_as",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_set.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_set.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_set.parse_expression": {
  "data": {
   "shadows": "libcst.parse_expression"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_set.parse_expression_as": {
  "data": {
   "shadows": "libcst._nodes.tests.base.parse_expression_as"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_simple_comp": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_simple_comp.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_simple_comp.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_simple_comp.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_simple_comp.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_simple_comp.PartialParserConfig": {
  "data": {
   "shadows": "libcst.PartialParserConfig"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_simple_comp.SimpleCompTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_simple_comp.SimpleCompTest.test_invalid": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "libcst.Asynchronous",
    "libcst.CSTNode",
    "libcst.CompFor",
    "libcst.CompIf",
    "libcst.GeneratorExp",
    "libcst.LeftParen",
    "libcst.ListComp",
    "libcst.Name",
    "libcst.RightParen",
    "libcst.SetComp",
    "libcst.SimpleWhitespace",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_simple_comp.SimpleCompTest.test_valid": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.Arg",
    "libcst.Asynchronous",
    "libcst.Call",
    "libcst.CompFor",
    "libcst.CompIf",
    "libcst.Comparison",
    "libcst.ComparisonTarget",
    "libcst.Expr",
    "libcst.FunctionDef",
    "libcst.GeneratorExp",
    "libcst.IndentedBlock",
    "libcst.Is",
    "libcst.LeftCurlyBrace",
    "libcst.LeftParen",
    "libcst.LeftSquareBracket",
    "libcst.ListComp",
    "libcst.Name",
    "libcst.Parameters",
    "libcst.PartialParserConfig",
    "libcst.RightCurlyBrace",
    "libcst.RightParen",
    "libcst.RightSquareBracket",
    "libcst.SetComp",
    "libcst.SimpleStatementLine",
    "libcst.SimpleWhitespace",
    "libcst.metadata.CodeRange",
    "libcst.parse_expression",
    "libcst.parse_statement",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_simple_comp.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_simple_comp.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_simple_comp.parse_expression": {
  "data": {
   "shadows": "libcst.parse_expression"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_simple_comp.parse_statement": {
  "data": {
   "shadows": "libcst.parse_statement"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_simple_statement": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_simple_statement.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_simple_statement.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_simple_statement.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_simple_statement.DummyIndentedBlock": {
  "data": {
   "shadows": "libcst._nodes.tests.base.DummyIndentedBlock"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_simple_statement.SimpleStatementTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_simple_statement.SimpleStatementTest.test_valid": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.Break",
    "libcst.Comment",
    "libcst.ConcatenatedString",
    "libcst.Continue",
    "libcst.Ellipsis",
    "libcst.EmptyLine",
    "libcst.Expr",
    "libcst.Float",
    "libcst.Imaginary",
    "libcst.Integer",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.ParenthesizedWhitespace",
    "libcst.Pass",
    "libcst.RightParen",
    "libcst.Semicolon",
    "libcst.SimpleStatementLine",
    "libcst.SimpleStatementSuite",
    "libcst.SimpleString",
    "libcst.SimpleWhitespace",
    "libcst.TrailingWhitespace",
    "libcst._nodes.tests.base.DummyIndentedBlock",
    "libcst.metadata.CodeRange",
    "libcst.parse_statement",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_simple_statement.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_simple_statement.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_simple_statement.parse_statement": {
  "data": {
   "shadows": "libcst.parse_statement"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_simple_whitespace": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_simple_whitespace.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_simple_whitespace.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_simple_whitespace.DummyIndentedBlock": {
  "data": {
   "shadows": "libcst._nodes.tests.base.DummyIndentedBlock"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_simple_whitespace.ParenthesizedWhitespaceTest": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_simple_whitespace.ParenthesizedWhitespaceTest.test_valid": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Comment",
    "libcst.EmptyLine",
    "libcst.ParenthesizedWhitespace",
    "libcst.SimpleWhitespace",
    "libcst.TrailingWhitespace",
    "libcst._nodes.tests.base.DummyIndentedBlock",
    "libcst.testing.utils.data_provider",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_simple_whitespace.SimpleWhitespaceTest": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_simple_whitespace.SimpleWhitespaceTest.test_invalid": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.SimpleWhitespace",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_simple_whitespace.SimpleWhitespaceTest.test_valid": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.SimpleWhitespace",
    "libcst.testing.utils.data_provider",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_simple_whitespace.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_simple_whitespace.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_small_statement": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_small_statement.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_small_statement.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_small_statement.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_small_statement.SmallStatementTest": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_small_statement.SmallStatementTest.test_valid": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst.Add",
    "libcst.BinaryOperation",
    "libcst.Break",
    "libcst.Continue",
    "libcst.Expr",
    "libcst.Name",
    "libcst.Pass",
    "libcst.Semicolon",
    "libcst.SimpleWhitespace",
    "libcst.metadata.CodeRange",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_small_statement.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_small_statement.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_subscript": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_subscript.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_subscript.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_subscript.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_subscript.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_subscript.SubscriptTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_subscript.SubscriptTest.test_invalid": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Index",
    "libcst.Integer",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.RightParen",
    "libcst.Subscript",
    "libcst.SubscriptElement",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_subscript.SubscriptTest.test_valid": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "bool",
    "libcst.CSTNode",
    "libcst.Colon",
    "libcst.Comma",
    "libcst.Index",
    "libcst.Integer",
    "libcst.LeftParen",
    "libcst.LeftSquareBracket",
    "libcst.Name",
    "libcst.RightParen",
    "libcst.RightSquareBracket",
    "libcst.SimpleWhitespace",
    "libcst.Slice",
    "libcst.Subscript",
    "libcst.SubscriptElement",
    "libcst.metadata.CodeRange",
    "libcst.parse_expression",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_subscript.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_subscript.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_subscript.parse_expression": {
  "data": {
   "shadows": "libcst.parse_expression"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_trailing_whitespace": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_trailing_whitespace.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_trailing_whitespace.TrailingWhitespaceTest": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_trailing_whitespace.TrailingWhitespaceTest.test_valid": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Comment",
    "libcst.Newline",
    "libcst.SimpleWhitespace",
    "libcst.TrailingWhitespace",
    "libcst.testing.utils.data_provider",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_trailing_whitespace.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_trailing_whitespace.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_try": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_try.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_try.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_try.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_try.DummyIndentedBlock": {
  "data": {
   "shadows": "libcst._nodes.tests.base.DummyIndentedBlock"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_try.TryTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_try.TryTest.test_invalid": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "libcst.AsName",
    "libcst.Else",
    "libcst.ExceptHandler",
    "libcst.Finally",
    "libcst.Name",
    "libcst.Pass",
    "libcst.SimpleStatementSuite",
    "libcst.SimpleWhitespace",
    "libcst.Try",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_try.TryTest.test_valid": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.AsName",
    "libcst.Comma",
    "libcst.Comment",
    "libcst.Element",
    "libcst.Else",
    "libcst.EmptyLine",
    "libcst.ExceptHandler",
    "libcst.Finally",
    "libcst.IndentedBlock",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.Pass",
    "libcst.RightParen",
    "libcst.SimpleStatementLine",
    "libcst.SimpleStatementSuite",
    "libcst.SimpleWhitespace",
    "libcst.Try",
    "libcst.Tuple",
    "libcst._nodes.tests.base.DummyIndentedBlock",
    "libcst.metadata.CodeRange",
    "libcst.parse_statement",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_try.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_try.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_try.parse_statement": {
  "data": {
   "shadows": "libcst.parse_statement"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_tuple": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_tuple.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_tuple.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_tuple.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_tuple.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_tuple.TupleTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_tuple.TupleTest.test_invalid": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Element",
    "libcst.For",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.Pass",
    "libcst.RightParen",
    "libcst.SimpleStatementSuite",
    "libcst.SimpleWhitespace",
    "libcst.StarredElement",
    "libcst.Tuple",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_tuple.TupleTest.test_valid": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.Comma",
    "libcst.Comment",
    "libcst.Element",
    "libcst.Expr",
    "libcst.For",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.Pass",
    "libcst.RightParen",
    "libcst.SimpleStatementLine",
    "libcst.SimpleStatementSuite",
    "libcst.SimpleWhitespace",
    "libcst.StarredElement",
    "libcst.TrailingWhitespace",
    "libcst.Tuple",
    "libcst.metadata.CodeRange",
    "libcst.parse_expression",
    "libcst.parse_statement",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_tuple.TupleTest.test_versions": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.parse_expression_as",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_tuple.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_tuple.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_tuple.parse_expression": {
  "data": {
   "shadows": "libcst.parse_expression"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_tuple.parse_expression_as": {
  "data": {
   "shadows": "libcst._nodes.tests.base.parse_expression_as"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_tuple.parse_statement": {
  "data": {
   "shadows": "libcst.parse_statement"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_unary_op": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_unary_op.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_unary_op.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_unary_op.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_unary_op.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_unary_op.UnaryOperationTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_unary_op.UnaryOperationTest.test_invalid": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.Not",
    "libcst.Plus",
    "libcst.RightParen",
    "libcst.SimpleWhitespace",
    "libcst.UnaryOperation",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_unary_op.UnaryOperationTest.test_valid": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.BitInvert",
    "libcst.CSTNode",
    "libcst.LeftParen",
    "libcst.Minus",
    "libcst.Name",
    "libcst.Not",
    "libcst.Plus",
    "libcst.RightParen",
    "libcst.SimpleWhitespace",
    "libcst.UnaryOperation",
    "libcst.metadata.CodeRange",
    "libcst.parse_expression",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_unary_op.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_unary_op.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_unary_op.parse_expression": {
  "data": {
   "shadows": "libcst.parse_expression"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_while": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_while.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_while.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_while.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_while.DummyIndentedBlock": {
  "data": {
   "shadows": "libcst._nodes.tests.base.DummyIndentedBlock"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_while.WhileTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_while.WhileTest.test_invalid": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "libcst.Call",
    "libcst.Name",
    "libcst.Pass",
    "libcst.SimpleStatementSuite",
    "libcst.SimpleWhitespace",
    "libcst.While",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_while.WhileTest.test_valid": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.Call",
    "libcst.Comment",
    "libcst.Else",
    "libcst.EmptyLine",
    "libcst.IndentedBlock",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.Pass",
    "libcst.RightParen",
    "libcst.SimpleStatementLine",
    "libcst.SimpleStatementSuite",
    "libcst.SimpleWhitespace",
    "libcst.While",
    "libcst._nodes.tests.base.DummyIndentedBlock",
    "libcst.metadata.CodeRange",
    "libcst.parse_statement",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_while.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_while.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_while.parse_statement": {
  "data": {
   "shadows": "libcst.parse_statement"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_with": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_with.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_with.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_with.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_with.DummyIndentedBlock": {
  "data": {
   "shadows": "libcst._nodes.tests.base.DummyIndentedBlock"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_with.PartialParserConfig": {
  "data": {
   "shadows": "libcst.PartialParserConfig"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_with.WithTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_with.WithTest.test_invalid": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "libcst.Call",
    "libcst.Comma",
    "libcst.IndentedBlock",
    "libcst.Name",
    "libcst.Pass",
    "libcst.SimpleStatementLine",
    "libcst.SimpleStatementSuite",
    "libcst.SimpleWhitespace",
    "libcst.With",
    "libcst.WithItem",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_with.WithTest.test_valid": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.AsName",
    "libcst.Asynchronous",
    "libcst.Call",
    "libcst.Comma",
    "libcst.Comment",
    "libcst.EmptyLine",
    "libcst.FunctionDef",
    "libcst.IndentedBlock",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.Parameters",
    "libcst.PartialParserConfig",
    "libcst.Pass",
    "libcst.RightParen",
    "libcst.SimpleStatementLine",
    "libcst.SimpleStatementSuite",
    "libcst.SimpleWhitespace",
    "libcst.With",
    "libcst.WithItem",
    "libcst._nodes.tests.base.DummyIndentedBlock",
    "libcst.metadata.CodeRange",
    "libcst.parse_statement",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_with.WithTest.test_versions": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.parse_statement_as",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_with.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_with.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_with.parse_statement": {
  "data": {
   "shadows": "libcst.parse_statement"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_with.parse_statement_as": {
  "data": {
   "shadows": "libcst._nodes.tests.base.parse_statement_as"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_yield": {
  "data": {},
  "type": "module"
 },
 "libcst._nodes.tests.test_yield.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_yield.CSTNodeTest": {
  "data": {
   "shadows": "libcst._nodes.tests.base.CSTNodeTest"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_yield.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_yield.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_yield.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_yield.YieldConstructionTest": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_yield.YieldConstructionTest.test_invalid": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Call",
    "libcst.From",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.RightParen",
    "libcst.SimpleWhitespace",
    "libcst.Yield",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_yield.YieldConstructionTest.test_valid": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Call",
    "libcst.From",
    "libcst.Integer",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.RightParen",
    "libcst.SimpleWhitespace",
    "libcst.Yield",
    "libcst.metadata.CodeRange",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_yield.YieldParsingTest": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.CSTNodeTest"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.tests.test_yield.YieldParsingTest.test_valid": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Call",
    "libcst.Expr",
    "libcst.From",
    "libcst.Integer",
    "libcst.LeftParen",
    "libcst.Name",
    "libcst.RightParen",
    "libcst.SimpleStatementLine",
    "libcst.SimpleWhitespace",
    "libcst.Yield",
    "libcst.helpers.ensure_type",
    "libcst.metadata.CodeRange",
    "libcst.parse_statement",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_yield.YieldParsingTest.test_versions": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "libcst._nodes.tests.base.parse_statement_as",
    "libcst.testing.utils.data_provider",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.tests.test_yield.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_yield.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_yield.ensure_type": {
  "data": {
   "shadows": "libcst.helpers.ensure_type"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_yield.parse_statement": {
  "data": {
   "shadows": "libcst.parse_statement"
  },
  "type": "import"
 },
 "libcst._nodes.tests.test_yield.parse_statement_as": {
  "data": {
   "shadows": "libcst._nodes.tests.base.parse_statement_as"
  },
  "type": "import"
 },
 "libcst._nodes.whitespace": {
  "data": {
   "symbols_in_volume": [
    "libcst._nodes.whitespace.re",
    "str",
    "typing.Pattern"
   ]
  },
  "type": "module"
 },
 "libcst._nodes.whitespace.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "libcst._nodes.whitespace.BaseLeaf": {
  "data": {
   "shadows": "libcst._nodes.base.BaseLeaf"
  },
  "type": "import"
 },
 "libcst._nodes.whitespace.BaseParenthesizableWhitespace": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst._nodes.base.CSTNode"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.whitespace.BaseParenthesizableWhitespace.empty": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.whitespace.BaseValueToken": {
  "data": {
   "shadows": "libcst._nodes.base.BaseValueToken"
  },
  "type": "import"
 },
 "libcst._nodes.whitespace.CSTNode": {
  "data": {
   "shadows": "libcst._nodes.base.CSTNode"
  },
  "type": "import"
 },
 "libcst._nodes.whitespace.CSTValidationError": {
  "data": {
   "shadows": "libcst._nodes.base.CSTValidationError"
  },
  "type": "import"
 },
 "libcst._nodes.whitespace.CSTVisitorT": {
  "data": {
   "shadows": "libcst._visitors.CSTVisitorT"
  },
  "type": "import"
 },
 "libcst._nodes.whitespace.CodegenState": {
  "data": {
   "shadows": "libcst._nodes.internal.CodegenState"
  },
  "type": "import"
 },
 "libcst._nodes.whitespace.Comment": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.base.BaseValueToken",
    "str"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.whitespace.Comment._validate": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "libcst._nodes.base.CSTValidationError",
    "repr"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.whitespace.EmptyLine": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.whitespace.Comment",
    "libcst._nodes.whitespace.Newline",
    "libcst._nodes.whitespace.SimpleWhitespace",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.whitespace.EmptyLine._codegen_impl": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.whitespace.EmptyLine._visit_and_replace_children": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_optional",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.whitespace.EmptyLine",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.whitespace.Newline": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.base.BaseLeaf",
    "str",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.whitespace.Newline._codegen_impl": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.whitespace.Newline._validate": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "libcst._nodes.base.CSTValidationError",
    "repr"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.whitespace.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst._nodes.whitespace.ParenthesizedWhitespace": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.EmptyLine",
    "libcst._nodes.whitespace.SimpleWhitespace",
    "libcst._nodes.whitespace.TrailingWhitespace",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.whitespace.ParenthesizedWhitespace._codegen_impl": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.whitespace.ParenthesizedWhitespace._visit_and_replace_children": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.internal.visit_sequence",
    "libcst._nodes.whitespace.ParenthesizedWhitespace",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.whitespace.ParenthesizedWhitespace.empty": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.whitespace.Pattern": {
  "data": {
   "shadows": "typing.Pattern"
  },
  "type": "import"
 },
 "libcst._nodes.whitespace.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst._nodes.whitespace.SimpleWhitespace": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.base.BaseValueToken",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "str"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.whitespace.SimpleWhitespace._validate": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "libcst._nodes.base.CSTValidationError",
    "repr"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.whitespace.SimpleWhitespace.empty": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "bool",
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.whitespace.TrailingWhitespace": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.whitespace.Comment",
    "libcst._nodes.whitespace.Newline",
    "libcst._nodes.whitespace.SimpleWhitespace",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "libcst._nodes.whitespace.TrailingWhitespace._codegen_impl": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "libcst._nodes.internal.CodegenState"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.whitespace.TrailingWhitespace._visit_and_replace_children": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "libcst._nodes.internal.visit_optional",
    "libcst._nodes.internal.visit_required",
    "libcst._nodes.whitespace.TrailingWhitespace",
    "libcst._visitors.CSTVisitorT"
   ]
  },
  "type": "function"
 },
 "libcst._nodes.whitespace.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "libcst._nodes.whitespace.add_slots": {
  "data": {
   "shadows": "libcst._add_slots.add_slots"
  },
  "type": "import"
 },
 "libcst._nodes.whitespace.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "libcst._nodes.whitespace.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "libcst._nodes.whitespace.visit_optional": {
  "data": {
   "shadows": "libcst._nodes.internal.visit_optional"
  },
  "type": "import"
 },
 "libcst._nodes.whitespace.visit_required": {
  "data": {
   "shadows": "libcst._nodes.internal.visit_required"
  },
  "type": "import"
 },
 "libcst._nodes.whitespace.visit_sequence": {
  "data": {
   "shadows": "libcst._nodes.internal.visit_sequence"
  },
  "type": "import"
 },
 "libcst._parser": {
  "data": {},
  "type": "module"
 },
 "libcst._parser.base_parser": {
  "data": {
   "symbols_in_volume": [
    "libcst._parser.parso.python.token.TokenType",
    "libcst._parser.types.token.Token",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "libcst._parser.base_parser.BaseParser": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "bool",
    "libcst._parser.base_parser.StackNode",
    "libcst._parser.base_parser._NodeT",
    "libcst._parser.base_parser._TokenT",
    "libcst._parser.base_parser._TokenTypeT",
    "str",
    "typing.Generic",
    "typing.Iterable",
    "typing.List",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._parser.base_parser.BaseParser.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "libcst._parser.base_parser.StackNode",
    "libcst._parser.base_parser._TokenT",
    "str",
    "typing.Iterable",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst._parser.base_parser.BaseParser._add_token": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "Exception",
    "IndexError",
    "KeyError",
    "libcst._exceptions.EOFSentinel.EOF",
    "libcst._exceptions.ParserSyntaxError",
    "libcst._exceptions.PartialParserSyntaxError",
    "libcst._exceptions.get_expected_str",
    "libcst._parser.base_parser.StackNode",
    "libcst._parser.base_parser._TokenT",
    "libcst._parser.base_parser._token_to_transition"
   ]
  },
  "type": "function"
 },
 "libcst._parser.base_parser.BaseParser._pop": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "libcst._parser.base_parser.BaseParser.convert_nonterminal": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "libcst._parser.base_parser._NodeT",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst._parser.base_parser.BaseParser.convert_terminal": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "libcst._parser.base_parser._NodeT",
    "libcst._parser.base_parser._TokenT"
   ]
  },
  "type": "function"
 },
 "libcst._parser.base_parser.BaseParser.parse": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "Exception",
    "len",
    "libcst._exceptions.EOFSentinel.EOF",
    "libcst._exceptions.ParserSyntaxError",
    "libcst._exceptions.get_expected_str",
    "libcst._parser.base_parser._NodeT"
   ]
  },
  "type": "function"
 },
 "libcst._parser.base_parser.DFAState": {
  "data": {
   "shadows": "libcst._parser.parso.pgen2.generator.DFAState"
  },
  "type": "import"
 },
 "libcst._parser.base_parser.EOFSentinel": {
  "data": {
   "shadows": "libcst._exceptions.EOFSentinel"
  },
  "type": "import"
 },
 "libcst._parser.base_parser.Generic": {
  "data": {
   "shadows": "typing.Generic"
  },
  "type": "import"
 },
 "libcst._parser.base_parser.Grammar": {
  "data": {
   "shadows": "libcst._parser.parso.pgen2.generator.Grammar"
  },
  "type": "import"
 },
 "libcst._parser.base_parser.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "libcst._parser.base_parser.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst._parser.base_parser.ParserSyntaxError": {
  "data": {
   "shadows": "libcst._exceptions.ParserSyntaxError"
  },
  "type": "import"
 },
 "libcst._parser.base_parser.PartialParserSyntaxError": {
  "data": {
   "shadows": "libcst._exceptions.PartialParserSyntaxError"
  },
  "type": "import"
 },
 "libcst._parser.base_parser.ReservedString": {
  "data": {
   "shadows": "libcst._parser.parso.pgen2.generator.ReservedString"
  },
  "type": "import"
 },
 "libcst._parser.base_parser.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst._parser.base_parser.StackNode": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "dataclasses.field",
    "libcst._parser.base_parser._NodeT",
    "libcst._parser.base_parser._TokenTypeT",
    "list",
    "typing.Generic",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "libcst._parser.base_parser.StackNode.nonterminal": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._parser.base_parser.Token": {
  "data": {
   "shadows": "libcst._parser.types.token.Token"
  },
  "type": "import"
 },
 "libcst._parser.base_parser.TokenType": {
  "data": {
   "shadows": "libcst._parser.parso.python.token.TokenType"
  },
  "type": "import"
 },
 "libcst._parser.base_parser.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "libcst._parser.base_parser.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst._parser.base_parser._NodeT": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "libcst._parser.base_parser._TokenT": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "libcst._parser.base_parser._TokenTypeT": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "libcst._parser.base_parser._token_to_transition": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "KeyError",
    "libcst._parser.base_parser._TokenTypeT",
    "libcst._parser.parso.pgen2.generator.ReservedString",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._parser.base_parser.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "libcst._parser.base_parser.field": {
  "data": {
   "shadows": "dataclasses.field"
  },
  "type": "import"
 },
 "libcst._parser.base_parser.get_expected_str": {
  "data": {
   "shadows": "libcst._exceptions.get_expected_str"
  },
  "type": "import"
 },
 "libcst._parser.conversions": {
  "data": {},
  "type": "module"
 },
 "libcst._parser.conversions.module": {
  "data": {},
  "type": "module"
 },
 "libcst._parser.conversions.module.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._parser.conversions.module.Module": {
  "data": {
   "shadows": "libcst._nodes.module.Module"
  },
  "type": "import"
 },
 "libcst._parser.conversions.module.NEWLINE_RE": {
  "data": {
   "shadows": "libcst._nodes.whitespace.NEWLINE_RE"
  },
  "type": "import"
 },
 "libcst._parser.conversions.module.ParserConfig": {
  "data": {
   "shadows": "libcst._parser.types.config.ParserConfig"
  },
  "type": "import"
 },
 "libcst._parser.conversions.module.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst._parser.conversions.module.convert_file_input": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "len",
    "libcst._nodes.module.Module",
    "libcst._nodes.whitespace.NEWLINE_RE.fullmatch",
    "libcst._parser.production_decorator.with_production",
    "libcst._parser.types.config.ParserConfig",
    "typing.Any",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst._parser.conversions.module.with_production": {
  "data": {
   "shadows": "libcst._parser.production_decorator.with_production"
  },
  "type": "import"
 },
 "libcst._parser.conversions.params": {
  "data": {},
  "type": "module"
 },
 "libcst._parser.conversions.params.Annotation": {
  "data": {
   "shadows": "libcst._nodes.expression.Annotation"
  },
  "type": "import"
 },
 "libcst._parser.conversions.params.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._parser.conversions.params.AssignEqual": {
  "data": {
   "shadows": "libcst._nodes.op.AssignEqual"
  },
  "type": "import"
 },
 "libcst._parser.conversions.params.Comma": {
  "data": {
   "shadows": "libcst._nodes.op.Comma"
  },
  "type": "import"
 },
 "libcst._parser.conversions.params.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst._parser.conversions.params.MaybeSentinel": {
  "data": {
   "shadows": "libcst._maybe_sentinel.MaybeSentinel"
  },
  "type": "import"
 },
 "libcst._parser.conversions.params.Name": {
  "data": {
   "shadows": "libcst._nodes.expression.Name"
  },
  "type": "import"
 },
 "libcst._parser.conversions.params.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst._parser.conversions.params.Param": {
  "data": {
   "shadows": "libcst._nodes.expression.Param"
  },
  "type": "import"
 },
 "libcst._parser.conversions.params.ParamSlash": {
  "data": {
   "shadows": "libcst._nodes.expression.ParamSlash"
  },
  "type": "import"
 },
 "libcst._parser.conversions.params.ParamStar": {
  "data": {
   "shadows": "libcst._nodes.expression.ParamStar"
  },
  "type": "import"
 },
 "libcst._parser.conversions.params.ParamStarPartial": {
  "data": {
   "shadows": "libcst._parser.types.partials.ParamStarPartial"
  },
  "type": "import"
 },
 "libcst._parser.conversions.params.Parameters": {
  "data": {
   "shadows": "libcst._nodes.expression.Parameters"
  },
  "type": "import"
 },
 "libcst._parser.conversions.params.ParserConfig": {
  "data": {
   "shadows": "libcst._parser.types.config.ParserConfig"
  },
  "type": "import"
 },
 "libcst._parser.conversions.params.PartialParserSyntaxError": {
  "data": {
   "shadows": "libcst._exceptions.PartialParserSyntaxError"
  },
  "type": "import"
 },
 "libcst._parser.conversions.params.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst._parser.conversions.params.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst._parser.conversions.params.convert_argslist": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "add_param",
    "bool",
    "isinstance",
    "len",
    "libcst._exceptions.PartialParserSyntaxError",
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
    "libcst._nodes.expression.Param",
    "libcst._nodes.expression.ParamSlash",
    "libcst._nodes.expression.ParamStar",
    "libcst._nodes.expression.Parameters",
    "libcst._nodes.op.Comma",
    "libcst._parser.custom_itertools.grouper",
    "libcst._parser.production_decorator.with_production",
    "libcst._parser.types.config.ParserConfig",
    "libcst._parser.types.partials.ParamStarPartial",
    "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
    "tuple",
    "typing.Any",
    "typing.List",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._parser.conversions.params.convert_argslist.add_param": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "len",
    "libcst._exceptions.PartialParserSyntaxError",
    "libcst._nodes.expression.Param",
    "libcst._nodes.expression.ParamSlash",
    "libcst._nodes.expression.ParamStar",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._parser.conversions.params.convert_fpdef": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "len",
    "libcst._nodes.expression.Annotation",
    "libcst._nodes.expression.Name",
    "libcst._nodes.expression.Param",
    "libcst._parser.production_decorator.with_production",
    "libcst._parser.types.config.ParserConfig",
    "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
    "typing.Any",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst._parser.conversions.params.convert_fpdef_assign": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "len",
    "libcst._nodes.op.AssignEqual",
    "libcst._parser.production_decorator.with_production",
    "libcst._parser.types.config.ParserConfig",
    "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
    "typing.Any",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst._parser.conversions.params.convert_fpdef_slash": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "libcst._nodes.expression.ParamSlash",
    "libcst._parser.production_decorator.with_production",
    "libcst._parser.types.config.ParserConfig",
    "typing.Any",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst._parser.conversions.params.convert_fpdef_star": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "len",
    "libcst._parser.production_decorator.with_production",
    "libcst._parser.types.config.ParserConfig",
    "libcst._parser.types.partials.ParamStarPartial",
    "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
    "typing.Any",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst._parser.conversions.params.convert_fpdef_starstar": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "libcst._parser.production_decorator.with_production",
    "libcst._parser.types.config.ParserConfig",
    "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
    "typing.Any",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst._parser.conversions.params.grouper": {
  "data": {
   "shadows": "libcst._parser.custom_itertools.grouper"
  },
  "type": "import"
 },
 "libcst._parser.conversions.params.parse_parenthesizable_whitespace": {
  "data": {
   "shadows": "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace"
  },
  "type": "import"
 },
 "libcst._parser.conversions.params.with_production": {
  "data": {
   "shadows": "libcst._parser.production_decorator.with_production"
  },
  "type": "import"
 },
 "libcst._parser.conversions.terminals": {
  "data": {},
  "type": "module"
 },
 "libcst._parser.conversions.terminals.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._parser.conversions.terminals.ParserConfig": {
  "data": {
   "shadows": "libcst._parser.types.config.ParserConfig"
  },
  "type": "import"
 },
 "libcst._parser.conversions.terminals.SimpleString": {
  "data": {
   "shadows": "libcst._nodes.expression.SimpleString"
  },
  "type": "import"
 },
 "libcst._parser.conversions.terminals.Token": {
  "data": {
   "shadows": "libcst._parser.types.token.Token"
  },
  "type": "import"
 },
 "libcst._parser.conversions.terminals.WithLeadingWhitespace": {
  "data": {
   "shadows": "libcst._parser.types.partials.WithLeadingWhitespace"
  },
  "type": "import"
 },
 "libcst._parser.conversions.terminals.convert_ASYNC": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "libcst._parser.types.config.ParserConfig",
    "libcst._parser.types.token.Token",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._parser.conversions.terminals.convert_AWAIT": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "libcst._parser.types.config.ParserConfig",
    "libcst._parser.types.token.Token",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._parser.conversions.terminals.convert_DEDENT": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "libcst._parser.types.config.ParserConfig",
    "libcst._parser.types.token.Token",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._parser.conversions.terminals.convert_ENDMARKER": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "libcst._parser.types.config.ParserConfig",
    "libcst._parser.types.token.Token",
    "libcst._parser.whitespace_parser.parse_empty_lines",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._parser.conversions.terminals.convert_FSTRING_END": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "libcst._parser.types.config.ParserConfig",
    "libcst._parser.types.token.Token",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._parser.conversions.terminals.convert_FSTRING_START": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "libcst._parser.types.config.ParserConfig",
    "libcst._parser.types.token.Token",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._parser.conversions.terminals.convert_FSTRING_STRING": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "libcst._parser.types.config.ParserConfig",
    "libcst._parser.types.token.Token",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._parser.conversions.terminals.convert_INDENT": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "libcst._parser.types.config.ParserConfig",
    "libcst._parser.types.token.Token",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._parser.conversions.terminals.convert_NAME": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "libcst._parser.types.config.ParserConfig",
    "libcst._parser.types.token.Token",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._parser.conversions.terminals.convert_NEWLINE": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "libcst._parser.types.config.ParserConfig",
    "libcst._parser.types.token.Token",
    "libcst._parser.whitespace_parser.parse_trailing_whitespace",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._parser.conversions.terminals.convert_NUMBER": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "libcst._parser.types.config.ParserConfig",
    "libcst._parser.types.token.Token",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._parser.conversions.terminals.convert_OP": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "libcst._parser.types.config.ParserConfig",
    "libcst._parser.types.token.Token",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._parser.conversions.terminals.convert_STRING": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "libcst._nodes.expression.SimpleString",
    "libcst._parser.types.config.ParserConfig",
    "libcst._parser.types.partials.WithLeadingWhitespace",
    "libcst._parser.types.token.Token",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._parser.conversions.terminals.parse_empty_lines": {
  "data": {
   "shadows": "libcst._parser.whitespace_parser.parse_empty_lines"
  },
  "type": "import"
 },
 "libcst._parser.conversions.terminals.parse_trailing_whitespace": {
  "data": {
   "shadows": "libcst._parser.whitespace_parser.parse_trailing_whitespace"
  },
  "type": "import"
 },
 "libcst._parser.custom_itertools": {
  "data": {
   "symbols_in_volume": [
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "libcst._parser.custom_itertools.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "libcst._parser.custom_itertools.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "libcst._parser.custom_itertools.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "libcst._parser.custom_itertools._T": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "libcst._parser.custom_itertools.grouper": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "int",
    "iter",
    "itertools.zip_longest",
    "libcst._parser.custom_itertools._T",
    "typing.Iterable",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "libcst._parser.custom_itertools.zip_longest": {
  "data": {
   "shadows": "itertools.zip_longest"
  },
  "type": "import"
 },
 "libcst._parser.detect_config": {
  "data": {
   "symbols_in_volume": [
    "libcst._parser.detect_config.re",
    "libcst._parser.parso.python.token.PythonTokenTypes.INDENT",
    "libcst._parser.parso.python.token.PythonTokenTypes.NAME",
    "libcst._parser.parso.python.token.PythonTokenTypes.NEWLINE",
    "libcst._parser.parso.python.token.PythonTokenTypes.STRING",
    "libcst._parser.parso.python.token.TokenType",
    "str",
    "typing.Pattern"
   ]
  },
  "type": "module"
 },
 "libcst._parser.detect_config.AutoConfig": {
  "data": {
   "shadows": "libcst._parser.types.config.AutoConfig"
  },
  "type": "import"
 },
 "libcst._parser.detect_config.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "libcst._parser.detect_config.ConfigDetectionResult": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._parser.types.config.ParserConfig",
    "libcst._parser.types.token.Token",
    "typing.Iterator"
   ]
  },
  "type": "class"
 },
 "libcst._parser.detect_config.FrozenSet": {
  "data": {
   "shadows": "typing.FrozenSet"
  },
  "type": "import"
 },
 "libcst._parser.detect_config.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "libcst._parser.detect_config.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "libcst._parser.detect_config.NEWLINE_RE": {
  "data": {
   "shadows": "libcst._nodes.whitespace.NEWLINE_RE"
  },
  "type": "import"
 },
 "libcst._parser.detect_config.ParserConfig": {
  "data": {
   "shadows": "libcst._parser.types.config.ParserConfig"
  },
  "type": "import"
 },
 "libcst._parser.detect_config.PartialParserConfig": {
  "data": {
   "shadows": "libcst._parser.types.config.PartialParserConfig"
  },
  "type": "import"
 },
 "libcst._parser.detect_config.Pattern": {
  "data": {
   "shadows": "typing.Pattern"
  },
  "type": "import"
 },
 "libcst._parser.detect_config.PythonTokenTypes": {
  "data": {
   "shadows": "libcst._parser.parso.python.token.PythonTokenTypes"
  },
  "type": "import"
 },
 "libcst._parser.detect_config.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "libcst._parser.detect_config.Token": {
  "data": {
   "shadows": "libcst._parser.types.token.Token"
  },
  "type": "import"
 },
 "libcst._parser.detect_config.TokenType": {
  "data": {
   "shadows": "libcst._parser.parso.python.token.TokenType"
  },
  "type": "import"
 },
 "libcst._parser.detect_config.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst._parser.detect_config._FALLBACK_DEFAULT_INDENT": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "libcst._parser.detect_config._FALLBACK_DEFAULT_NEWLINE": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "libcst._parser.detect_config._detect_default_newline": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "libcst._nodes.whitespace.NEWLINE_RE.search",
    "libcst._parser.detect_config._FALLBACK_DEFAULT_NEWLINE",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._parser.detect_config._detect_encoding": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "bytes",
    "io.BytesIO",
    "isinstance",
    "str",
    "tokenize.detect_encoding",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._parser.detect_config._detect_future_imports": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "frozenset",
    "libcst._parser.types.token.Token",
    "set",
    "str",
    "typing.FrozenSet",
    "typing.Iterable",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "libcst._parser.detect_config._detect_indent": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "StopIteration",
    "libcst._parser.detect_config._FALLBACK_DEFAULT_INDENT",
    "libcst._parser.types.token.Token",
    "next",
    "str",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "libcst._parser.detect_config._detect_trailing_newline": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "bool",
    "len",
    "libcst._nodes.whitespace.NEWLINE_RE.fullmatch",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._parser.detect_config.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "libcst._parser.detect_config.detect_config": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "isinstance",
    "libcst._parser.detect_config.ConfigDetectionResult",
    "libcst._parser.detect_config._FALLBACK_DEFAULT_NEWLINE",
    "libcst._parser.detect_config._detect_default_newline",
    "libcst._parser.detect_config._detect_encoding",
    "libcst._parser.detect_config._detect_future_imports",
    "libcst._parser.detect_config._detect_indent",
    "libcst._parser.detect_config._detect_trailing_newline",
    "libcst._parser.detect_config.itertools",
    "libcst._parser.parso.utils.split_lines",
    "libcst._parser.types.config.AutoConfig",
    "libcst._parser.types.config.ParserConfig",
    "libcst._parser.types.config.PartialParserConfig",
    "libcst._parser.wrapped_tokenize.tokenize_lines",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._parser.detect_config.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "libcst._parser.detect_config.py_tokenize_detect_encoding": {
  "data": {
   "shadows": "tokenize.detect_encoding"
  },
  "type": "import"
 },
 "libcst._parser.detect_config.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "libcst._parser.detect_config.split_lines": {
  "data": {
   "shadows": "libcst._parser.parso.utils.split_lines"
  },
  "type": "import"
 },
 "libcst._parser.detect_config.tokenize_lines": {
  "data": {
   "shadows": "libcst._parser.wrapped_tokenize.tokenize_lines"
  },
  "type": "import"
 },
 "libcst._parser.entrypoints": {
  "data": {
   "symbols_in_volume": [
    "libcst._parser.types.config.PartialParserConfig"
   ]
  },
  "type": "module"
 },
 "libcst._parser.entrypoints.BaseCompoundStatement": {
  "data": {
   "shadows": "libcst._nodes.statement.BaseCompoundStatement"
  },
  "type": "import"
 },
 "libcst._parser.entrypoints.BaseExpression": {
  "data": {
   "shadows": "libcst._nodes.expression.BaseExpression"
  },
  "type": "import"
 },
 "libcst._parser.entrypoints.CSTNode": {
  "data": {
   "shadows": "libcst._nodes.base.CSTNode"
  },
  "type": "import"
 },
 "libcst._parser.entrypoints.Module": {
  "data": {
   "shadows": "libcst._nodes.module.Module"
  },
  "type": "import"
 },
 "libcst._parser.entrypoints.PartialParserConfig": {
  "data": {
   "shadows": "libcst._parser.types.config.PartialParserConfig"
  },
  "type": "import"
 },
 "libcst._parser.entrypoints.PythonCSTParser": {
  "data": {
   "shadows": "libcst._parser.python_parser.PythonCSTParser"
  },
  "type": "import"
 },
 "libcst._parser.entrypoints.SimpleStatementLine": {
  "data": {
   "shadows": "libcst._nodes.statement.SimpleStatementLine"
  },
  "type": "import"
 },
 "libcst._parser.entrypoints.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst._parser.entrypoints._parse": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "isinstance",
    "libcst._nodes.base.CSTNode",
    "libcst._parser.detect_config.detect_config",
    "libcst._parser.grammar.get_grammar",
    "libcst._parser.grammar.validate_grammar",
    "libcst._parser.python_parser.PythonCSTParser",
    "libcst._parser.types.config.PartialParserConfig",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._parser.entrypoints.detect_config": {
  "data": {
   "shadows": "libcst._parser.detect_config.detect_config"
  },
  "type": "import"
 },
 "libcst._parser.entrypoints.get_grammar": {
  "data": {
   "shadows": "libcst._parser.grammar.get_grammar"
  },
  "type": "import"
 },
 "libcst._parser.entrypoints.parse_expression": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "isinstance",
    "libcst._nodes.expression.BaseExpression",
    "libcst._parser.entrypoints._parse",
    "libcst._parser.types.config.PartialParserConfig",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._parser.entrypoints.parse_module": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "libcst._nodes.module.Module",
    "libcst._parser.entrypoints._parse",
    "libcst._parser.types.config.PartialParserConfig",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._parser.entrypoints.parse_statement": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "isinstance",
    "libcst._nodes.statement.BaseCompoundStatement",
    "libcst._nodes.statement.SimpleStatementLine",
    "libcst._parser.entrypoints._parse",
    "libcst._parser.types.config.PartialParserConfig",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._parser.entrypoints.validate_grammar": {
  "data": {
   "shadows": "libcst._parser.grammar.validate_grammar"
  },
  "type": "import"
 },
 "libcst._parser.grammar": {
  "data": {
   "symbols_in_volume": [
    "libcst._parser.conversions.expression.convert_arg_assign_comp_for",
    "libcst._parser.conversions.expression.convert_arglist",
    "libcst._parser.conversions.expression.convert_argument",
    "libcst._parser.conversions.expression.convert_atom",
    "libcst._parser.conversions.expression.convert_atom_basic",
    "libcst._parser.conversions.expression.convert_atom_curlybraces",
    "libcst._parser.conversions.expression.convert_atom_ellipses",
    "libcst._parser.conversions.expression.convert_atom_expr",
    "libcst._parser.conversions.expression.convert_atom_expr_await",
    "libcst._parser.conversions.expression.convert_atom_expr_trailer",
    "libcst._parser.conversions.expression.convert_atom_parens",
    "libcst._parser.conversions.expression.convert_atom_squarebrackets",
    "libcst._parser.conversions.expression.convert_atom_string",
    "libcst._parser.conversions.expression.convert_binop",
    "libcst._parser.conversions.expression.convert_boolop",
    "libcst._parser.conversions.expression.convert_comp_for",
    "libcst._parser.conversions.expression.convert_comp_if",
    "libcst._parser.conversions.expression.convert_comp_op",
    "libcst._parser.conversions.expression.convert_comparison",
    "libcst._parser.conversions.expression.convert_dictorsetmaker",
    "libcst._parser.conversions.expression.convert_expression_input",
    "libcst._parser.conversions.expression.convert_factor",
    "libcst._parser.conversions.expression.convert_fstring",
    "libcst._parser.conversions.expression.convert_fstring_content",
    "libcst._parser.conversions.expression.convert_fstring_conversion",
    "libcst._parser.conversions.expression.convert_fstring_equality",
    "libcst._parser.conversions.expression.convert_fstring_expr",
    "libcst._parser.conversions.expression.convert_fstring_format_spec",
    "libcst._parser.conversions.expression.convert_lambda",
    "libcst._parser.conversions.expression.convert_namedexpr_test",
    "libcst._parser.conversions.expression.convert_not_test",
    "libcst._parser.conversions.expression.convert_power",
    "libcst._parser.conversions.expression.convert_sliceop",
    "libcst._parser.conversions.expression.convert_star_arg",
    "libcst._parser.conversions.expression.convert_star_expr",
    "libcst._parser.conversions.expression.convert_subscript",
    "libcst._parser.conversions.expression.convert_subscriptlist",
    "libcst._parser.conversions.expression.convert_sync_comp_for",
    "libcst._parser.conversions.expression.convert_test",
    "libcst._parser.conversions.expression.convert_test_nocond",
    "libcst._parser.conversions.expression.convert_test_or_expr_list",
    "libcst._parser.conversions.expression.convert_testlist_comp_list",
    "libcst._parser.conversions.expression.convert_testlist_comp_tuple",
    "libcst._parser.conversions.expression.convert_trailer",
    "libcst._parser.conversions.expression.convert_trailer_arglist",
    "libcst._parser.conversions.expression.convert_trailer_attribute",
    "libcst._parser.conversions.expression.convert_trailer_subscriptlist",
    "libcst._parser.conversions.expression.convert_yield_arg",
    "libcst._parser.conversions.expression.convert_yield_expr",
    "libcst._parser.conversions.module.convert_file_input",
    "libcst._parser.conversions.params.convert_argslist",
    "libcst._parser.conversions.params.convert_fpdef",
    "libcst._parser.conversions.params.convert_fpdef_assign",
    "libcst._parser.conversions.params.convert_fpdef_slash",
    "libcst._parser.conversions.params.convert_fpdef_star",
    "libcst._parser.conversions.params.convert_fpdef_starstar",
    "libcst._parser.conversions.statement.convert_annassign",
    "libcst._parser.conversions.statement.convert_assert_stmt",
    "libcst._parser.conversions.statement.convert_assign",
    "libcst._parser.conversions.statement.convert_asyncable_funcdef",
    "libcst._parser.conversions.statement.convert_asyncable_stmt",
    "libcst._parser.conversions.statement.convert_augassign",
    "libcst._parser.conversions.statement.convert_break_stmt",
    "libcst._parser.conversions.statement.convert_classdef",
    "libcst._parser.conversions.statement.convert_compound_stmt",
    "libcst._parser.conversions.statement.convert_continue_stmt",
    "libcst._parser.conversions.statement.convert_decorated",
    "libcst._parser.conversions.statement.convert_decorator",
    "libcst._parser.conversions.statement.convert_decorators",
    "libcst._parser.conversions.statement.convert_del_stmt",
    "libcst._parser.conversions.statement.convert_dotted_as_name",
    "libcst._parser.conversions.statement.convert_dotted_as_names",
    "libcst._parser.conversions.statement.convert_dotted_name",
    "libcst._parser.conversions.statement.convert_except_clause",
    "libcst._parser.conversions.statement.convert_expr_stmt",
    "libcst._parser.conversions.statement.convert_for_stmt",
    "libcst._parser.conversions.statement.convert_funcdef",
    "libcst._parser.conversions.statement.convert_funcdef_annotation",
    "libcst._parser.conversions.statement.convert_global_stmt",
    "libcst._parser.conversions.statement.convert_if_stmt",
    "libcst._parser.conversions.statement.convert_if_stmt_elif",
    "libcst._parser.conversions.statement.convert_if_stmt_else",
    "libcst._parser.conversions.statement.convert_import_as_name",
    "libcst._parser.conversions.statement.convert_import_as_names",
    "libcst._parser.conversions.statement.convert_import_from",
    "libcst._parser.conversions.statement.convert_import_name",
    "libcst._parser.conversions.statement.convert_import_relative",
    "libcst._parser.conversions.statement.convert_import_stmt",
    "libcst._parser.conversions.statement.convert_indented_suite",
    "libcst._parser.conversions.statement.convert_nonlocal_stmt",
    "libcst._parser.conversions.statement.convert_parameters",
    "libcst._parser.conversions.statement.convert_pass_stmt",
    "libcst._parser.conversions.statement.convert_raise_stmt",
    "libcst._parser.conversions.statement.convert_return_stmt",
    "libcst._parser.conversions.statement.convert_simple_stmt_line",
    "libcst._parser.conversions.statement.convert_simple_stmt_partial",
    "libcst._parser.conversions.statement.convert_simple_stmt_suite",
    "libcst._parser.conversions.statement.convert_small_stmt",
    "libcst._parser.conversions.statement.convert_stmt",
    "libcst._parser.conversions.statement.convert_stmt_input",
    "libcst._parser.conversions.statement.convert_suite",
    "libcst._parser.conversions.statement.convert_try_stmt",
    "libcst._parser.conversions.statement.convert_while_stmt",
    "libcst._parser.conversions.statement.convert_with_item",
    "libcst._parser.conversions.statement.convert_with_stmt",
    "libcst._parser.conversions.terminals.convert_ASYNC",
    "libcst._parser.conversions.terminals.convert_AWAIT",
    "libcst._parser.conversions.terminals.convert_DEDENT",
    "libcst._parser.conversions.terminals.convert_ENDMARKER",
    "libcst._parser.conversions.terminals.convert_FSTRING_END",
    "libcst._parser.conversions.terminals.convert_FSTRING_START",
    "libcst._parser.conversions.terminals.convert_FSTRING_STRING",
    "libcst._parser.conversions.terminals.convert_INDENT",
    "libcst._parser.conversions.terminals.convert_NAME",
    "libcst._parser.conversions.terminals.convert_NEWLINE",
    "libcst._parser.conversions.terminals.convert_NUMBER",
    "libcst._parser.conversions.terminals.convert_OP",
    "libcst._parser.conversions.terminals.convert_STRING",
    "libcst._parser.types.conversions.NonterminalConversion",
    "libcst._parser.types.conversions.TerminalConversion",
    "typing.Tuple"
   ]
  },
  "type": "module"
 },
 "libcst._parser.grammar.AutoConfig": {
  "data": {
   "shadows": "libcst._parser.types.config.AutoConfig"
  },
  "type": "import"
 },
 "libcst._parser.grammar.FrozenSet": {
  "data": {
   "shadows": "typing.FrozenSet"
  },
  "type": "import"
 },
 "libcst._parser.grammar.Grammar": {
  "data": {
   "shadows": "libcst._parser.parso.pgen2.generator.Grammar"
  },
  "type": "import"
 },
 "libcst._parser.grammar.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "libcst._parser.grammar.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "libcst._parser.grammar.NonterminalConversion": {
  "data": {
   "shadows": "libcst._parser.types.conversions.NonterminalConversion"
  },
  "type": "import"
 },
 "libcst._parser.grammar.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst._parser.grammar.Production": {
  "data": {
   "shadows": "libcst._parser.types.production.Production"
  },
  "type": "import"
 },
 "libcst._parser.grammar.PythonTokenTypes": {
  "data": {
   "shadows": "libcst._parser.parso.python.token.PythonTokenTypes"
  },
  "type": "import"
 },
 "libcst._parser.grammar.PythonVersionInfo": {
  "data": {
   "shadows": "libcst._parser.parso.utils.PythonVersionInfo"
  },
  "type": "import"
 },
 "libcst._parser.grammar.TerminalConversion": {
  "data": {
   "shadows": "libcst._parser.types.conversions.TerminalConversion"
  },
  "type": "import"
 },
 "libcst._parser.grammar.TokenType": {
  "data": {
   "shadows": "libcst._parser.parso.python.token.TokenType"
  },
  "type": "import"
 },
 "libcst._parser.grammar.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "libcst._parser.grammar.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst._parser.grammar._compare_versions": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "libcst._parser.parso.utils.PythonVersionInfo",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._parser.grammar._get_version_comparison": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "Exception",
    "libcst._parser.parso.utils.PythonVersionInfo",
    "libcst._parser.parso.utils.parse_version_string",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "libcst._parser.grammar._should_include": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "bool",
    "libcst._parser.grammar._compare_versions",
    "libcst._parser.grammar._get_version_comparison",
    "libcst._parser.parso.utils.PythonVersionInfo",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._parser.grammar._should_include_future": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.FrozenSet",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._parser.grammar.convert_ASYNC": {
  "data": {
   "shadows": "libcst._parser.conversions.terminals.convert_ASYNC"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_AWAIT": {
  "data": {
   "shadows": "libcst._parser.conversions.terminals.convert_AWAIT"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_DEDENT": {
  "data": {
   "shadows": "libcst._parser.conversions.terminals.convert_DEDENT"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_ENDMARKER": {
  "data": {
   "shadows": "libcst._parser.conversions.terminals.convert_ENDMARKER"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_FSTRING_END": {
  "data": {
   "shadows": "libcst._parser.conversions.terminals.convert_FSTRING_END"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_FSTRING_START": {
  "data": {
   "shadows": "libcst._parser.conversions.terminals.convert_FSTRING_START"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_FSTRING_STRING": {
  "data": {
   "shadows": "libcst._parser.conversions.terminals.convert_FSTRING_STRING"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_INDENT": {
  "data": {
   "shadows": "libcst._parser.conversions.terminals.convert_INDENT"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_NAME": {
  "data": {
   "shadows": "libcst._parser.conversions.terminals.convert_NAME"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_NEWLINE": {
  "data": {
   "shadows": "libcst._parser.conversions.terminals.convert_NEWLINE"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_NUMBER": {
  "data": {
   "shadows": "libcst._parser.conversions.terminals.convert_NUMBER"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_OP": {
  "data": {
   "shadows": "libcst._parser.conversions.terminals.convert_OP"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_STRING": {
  "data": {
   "shadows": "libcst._parser.conversions.terminals.convert_STRING"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_annassign": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_annassign"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_arg_assign_comp_for": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_arg_assign_comp_for"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_arglist": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_arglist"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_argslist": {
  "data": {
   "shadows": "libcst._parser.conversions.params.convert_argslist"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_argument": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_argument"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_assert_stmt": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_assert_stmt"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_assign": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_assign"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_asyncable_funcdef": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_asyncable_funcdef"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_asyncable_stmt": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_asyncable_stmt"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_atom": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_atom"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_atom_basic": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_atom_basic"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_atom_curlybraces": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_atom_curlybraces"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_atom_ellipses": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_atom_ellipses"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_atom_expr": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_atom_expr"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_atom_expr_await": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_atom_expr_await"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_atom_expr_trailer": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_atom_expr_trailer"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_atom_parens": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_atom_parens"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_atom_squarebrackets": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_atom_squarebrackets"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_atom_string": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_atom_string"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_augassign": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_augassign"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_binop": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_binop"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_boolop": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_boolop"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_break_stmt": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_break_stmt"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_classdef": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_classdef"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_comp_for": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_comp_for"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_comp_if": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_comp_if"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_comp_op": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_comp_op"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_comparison": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_comparison"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_compound_stmt": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_compound_stmt"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_continue_stmt": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_continue_stmt"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_decorated": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_decorated"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_decorator": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_decorator"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_decorators": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_decorators"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_del_stmt": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_del_stmt"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_dictorsetmaker": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_dictorsetmaker"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_dotted_as_name": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_dotted_as_name"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_dotted_as_names": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_dotted_as_names"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_dotted_name": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_dotted_name"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_except_clause": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_except_clause"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_expr_stmt": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_expr_stmt"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_expression_input": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_expression_input"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_factor": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_factor"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_file_input": {
  "data": {
   "shadows": "libcst._parser.conversions.module.convert_file_input"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_for_stmt": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_for_stmt"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_fpdef": {
  "data": {
   "shadows": "libcst._parser.conversions.params.convert_fpdef"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_fpdef_assign": {
  "data": {
   "shadows": "libcst._parser.conversions.params.convert_fpdef_assign"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_fpdef_slash": {
  "data": {
   "shadows": "libcst._parser.conversions.params.convert_fpdef_slash"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_fpdef_star": {
  "data": {
   "shadows": "libcst._parser.conversions.params.convert_fpdef_star"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_fpdef_starstar": {
  "data": {
   "shadows": "libcst._parser.conversions.params.convert_fpdef_starstar"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_fstring": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_fstring"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_fstring_content": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_fstring_content"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_fstring_conversion": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_fstring_conversion"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_fstring_equality": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_fstring_equality"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_fstring_expr": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_fstring_expr"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_fstring_format_spec": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_fstring_format_spec"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_funcdef": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_funcdef"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_funcdef_annotation": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_funcdef_annotation"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_global_stmt": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_global_stmt"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_if_stmt": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_if_stmt"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_if_stmt_elif": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_if_stmt_elif"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_if_stmt_else": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_if_stmt_else"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_import_as_name": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_import_as_name"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_import_as_names": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_import_as_names"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_import_from": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_import_from"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_import_name": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_import_name"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_import_relative": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_import_relative"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_import_stmt": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_import_stmt"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_indented_suite": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_indented_suite"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_lambda": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_lambda"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_namedexpr_test": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_namedexpr_test"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_nonlocal_stmt": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_nonlocal_stmt"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_not_test": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_not_test"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_parameters": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_parameters"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_pass_stmt": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_pass_stmt"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_power": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_power"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_raise_stmt": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_raise_stmt"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_return_stmt": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_return_stmt"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_simple_stmt_line": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_simple_stmt_line"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_simple_stmt_partial": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_simple_stmt_partial"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_simple_stmt_suite": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_simple_stmt_suite"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_sliceop": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_sliceop"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_small_stmt": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_small_stmt"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_star_arg": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_star_arg"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_star_expr": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_star_expr"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_stmt": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_stmt"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_stmt_input": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_stmt_input"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_subscript": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_subscript"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_subscriptlist": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_subscriptlist"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_suite": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_suite"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_sync_comp_for": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_sync_comp_for"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_test": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_test"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_test_nocond": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_test_nocond"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_test_or_expr_list": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_test_or_expr_list"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_testlist_comp_list": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_testlist_comp_list"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_testlist_comp_tuple": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_testlist_comp_tuple"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_trailer": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_trailer"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_trailer_arglist": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_trailer_arglist"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_trailer_attribute": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_trailer_attribute"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_trailer_subscriptlist": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_trailer_subscriptlist"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_try_stmt": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_try_stmt"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_while_stmt": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_while_stmt"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_with_item": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_with_item"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_with_stmt": {
  "data": {
   "shadows": "libcst._parser.conversions.statement.convert_with_stmt"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_yield_arg": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_yield_arg"
  },
  "type": "import"
 },
 "libcst._parser.grammar.convert_yield_expr": {
  "data": {
   "shadows": "libcst._parser.conversions.expression.convert_yield_expr"
  },
  "type": "import"
 },
 "libcst._parser.grammar.generate_grammar": {
  "data": {
   "shadows": "libcst._parser.parso.pgen2.generator.generate_grammar"
  },
  "type": "import"
 },
 "libcst._parser.grammar.get_grammar": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "frozenset",
    "functools.lru_cache",
    "isinstance",
    "libcst._parser.grammar.get_grammar_str",
    "libcst._parser.parso.pgen2.generator.generate_grammar",
    "libcst._parser.parso.python.token.PythonTokenTypes",
    "libcst._parser.parso.utils.PythonVersionInfo",
    "libcst._parser.types.config.AutoConfig",
    "str",
    "typing.FrozenSet",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._parser.grammar.get_grammar_str": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "libcst._parser.grammar.get_nonterminal_productions",
    "libcst._parser.parso.utils.PythonVersionInfo",
    "str",
    "typing.FrozenSet"
   ]
  },
  "type": "function"
 },
 "libcst._parser.grammar.get_nonterminal_conversions": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "Exception",
    "functools.lru_cache",
    "libcst._parser.grammar._should_include",
    "libcst._parser.grammar._should_include_future",
    "libcst._parser.parso.utils.PythonVersionInfo",
    "libcst._parser.production_decorator.get_productions",
    "libcst._parser.types.conversions.NonterminalConversion",
    "str",
    "typing.FrozenSet",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "libcst._parser.grammar.get_nonterminal_productions": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "libcst._parser.grammar._should_include",
    "libcst._parser.grammar._should_include_future",
    "libcst._parser.parso.utils.PythonVersionInfo",
    "libcst._parser.production_decorator.get_productions",
    "libcst._parser.types.production.Production",
    "str",
    "typing.FrozenSet",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "libcst._parser.grammar.get_productions": {
  "data": {
   "shadows": "libcst._parser.production_decorator.get_productions"
  },
  "type": "import"
 },
 "libcst._parser.grammar.get_terminal_conversions": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "functools.lru_cache",
    "libcst._parser.grammar.re",
    "libcst._parser.types.conversions.TerminalConversion",
    "str",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "libcst._parser.grammar.lru_cache": {
  "data": {
   "shadows": "functools.lru_cache"
  },
  "type": "import"
 },
 "libcst._parser.grammar.parse_version_string": {
  "data": {
   "shadows": "libcst._parser.parso.utils.parse_version_string"
  },
  "type": "import"
 },
 "libcst._parser.grammar.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "libcst._parser.grammar.validate_grammar": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "Exception",
    "all",
    "functools.lru_cache",
    "libcst._parser.production_decorator.get_productions"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso": {
  "data": {},
  "type": "module"
 },
 "libcst._parser.parso.pgen2": {
  "data": {},
  "type": "module"
 },
 "libcst._parser.parso.pgen2.generator": {
  "data": {
   "symbols_in_volume": [
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "libcst._parser.parso.pgen2.generator.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._parser.parso.pgen2.generator.DFAPlan": {
  "data": {
   "lineno": 46
  },
  "type": "class"
 },
 "libcst._parser.parso.pgen2.generator.DFAPlan.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator.DFAPlan.__repr__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator.DFAState": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "libcst._parser.parso.pgen2.generator._TokenTypeT",
    "typing.Generic"
   ]
  },
  "type": "class"
 },
 "libcst._parser.parso.pgen2.generator.DFAState.__eq__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "libcst._parser.parso.pgen2.generator.DFAState"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator.DFAState.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "libcst._parser.parso.pgen2.generator.DFAPlan",
    "libcst._parser.parso.pgen2.generator.DFAState",
    "libcst._parser.parso.pgen2.generator._TokenTypeT",
    "libcst._parser.parso.pgen2.grammar_parser.NFAState",
    "str",
    "typing.Mapping",
    "typing.Set",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator.DFAState.__repr__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator.DFAState.add_arc": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "isinstance",
    "libcst._parser.parso.pgen2.generator.DFAState",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator.DFAState.unifystate": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator.Generic": {
  "data": {
   "shadows": "typing.Generic"
  },
  "type": "import"
 },
 "libcst._parser.parso.pgen2.generator.Grammar": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "libcst._parser.parso.pgen2.generator._TokenTypeT",
    "typing.Generic"
   ]
  },
  "type": "class"
 },
 "libcst._parser.parso.pgen2.generator.Grammar.__init__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "libcst._parser.parso.pgen2.generator.DFAState",
    "libcst._parser.parso.pgen2.generator.ReservedString",
    "libcst._parser.parso.pgen2.generator._TokenTypeT",
    "str",
    "typing.Mapping",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator.GrammarParser": {
  "data": {
   "shadows": "libcst._parser.parso.pgen2.grammar_parser.GrammarParser"
  },
  "type": "import"
 },
 "libcst._parser.parso.pgen2.generator.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "libcst._parser.parso.pgen2.generator.NFAState": {
  "data": {
   "shadows": "libcst._parser.parso.pgen2.grammar_parser.NFAState"
  },
  "type": "import"
 },
 "libcst._parser.parso.pgen2.generator.ReservedString": {
  "data": {
   "lineno": 121
  },
  "type": "class"
 },
 "libcst._parser.parso.pgen2.generator.ReservedString.__init__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator.ReservedString.__repr__": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst._parser.parso.pgen2.generator.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "libcst._parser.parso.pgen2.generator.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "libcst._parser.parso.pgen2.generator.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst._parser.parso.pgen2.generator._TokenTypeT": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "libcst._parser.parso.pgen2.generator._calculate_first_plans": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "KeyError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator._calculate_tree_traversal": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "ValueError",
    "libcst._parser.parso.pgen2.generator.DFAPlan",
    "libcst._parser.parso.pgen2.generator._calculate_first_plans",
    "list",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator._make_dfas": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "addclosure",
    "isinstance",
    "libcst._parser.parso.pgen2.generator.DFAState",
    "libcst._parser.parso.pgen2.grammar_parser.NFAState",
    "set"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator._make_dfas.addclosure": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "addclosure",
    "isinstance",
    "libcst._parser.parso.pgen2.grammar_parser.NFAState"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator._make_transition": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "KeyError",
    "ast.literal_eval",
    "getattr",
    "libcst._parser.parso.pgen2.generator.ReservedString"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator._simplify_dfas": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator.generate_grammar": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "Exception",
    "libcst._parser.parso.pgen2.generator.DFAPlan",
    "libcst._parser.parso.pgen2.generator.Grammar",
    "libcst._parser.parso.pgen2.generator._calculate_tree_traversal",
    "libcst._parser.parso.pgen2.generator._make_dfas",
    "libcst._parser.parso.pgen2.generator._make_transition",
    "libcst._parser.parso.pgen2.generator._simplify_dfas",
    "libcst._parser.parso.pgen2.grammar_parser.GrammarParser",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator.literal_eval": {
  "data": {
   "shadows": "ast.literal_eval"
  },
  "type": "import"
 },
 "libcst._parser.parso.pgen2.grammar_parser": {
  "data": {},
  "type": "module"
 },
 "libcst._parser.parso.pgen2.grammar_parser.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "libcst._parser.parso.pgen2.grammar_parser.GrammarParser": {
  "data": {
   "lineno": 46
  },
  "type": "class"
 },
 "libcst._parser.parso.pgen2.grammar_parser.GrammarParser.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "libcst._parser.parso.python.tokenize.tokenize",
    "libcst._parser.parso.utils.parse_version_string",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.pgen2.grammar_parser.GrammarParser._expect": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "libcst._parser.parso.pgen2.grammar_parser.GrammarParser._gettoken": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "next"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.pgen2.grammar_parser.GrammarParser._parse_atom": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "libcst._parser.parso.pgen2.grammar_parser.NFAState",
    "libcst._parser.parso.python.token.PythonTokenTypes.NAME",
    "libcst._parser.parso.python.token.PythonTokenTypes.OP",
    "libcst._parser.parso.python.token.PythonTokenTypes.STRING"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.pgen2.grammar_parser.GrammarParser._parse_item": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "libcst._parser.parso.python.token.PythonTokenTypes.OP"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.pgen2.grammar_parser.GrammarParser._parse_items": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "libcst._parser.parso.python.token.PythonTokenTypes.NAME",
    "libcst._parser.parso.python.token.PythonTokenTypes.STRING"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.pgen2.grammar_parser.GrammarParser._parse_rhs": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "libcst._parser.parso.pgen2.grammar_parser.NFAState"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.pgen2.grammar_parser.GrammarParser._raise_error": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "Exception",
    "SyntaxError",
    "list",
    "map",
    "object",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.pgen2.grammar_parser.GrammarParser.parse": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "libcst._parser.parso.pgen2.grammar_parser.NFAState",
    "libcst._parser.parso.python.token.PythonTokenTypes.ENDMARKER",
    "libcst._parser.parso.python.token.PythonTokenTypes.NAME",
    "libcst._parser.parso.python.token.PythonTokenTypes.NEWLINE",
    "libcst._parser.parso.python.token.PythonTokenTypes.OP",
    "typing.Generator",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.pgen2.grammar_parser.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst._parser.parso.pgen2.grammar_parser.NFAArc": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "libcst._parser.parso.pgen2.grammar_parser.NFAArc.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.pgen2.grammar_parser.NFAArc.__repr__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.pgen2.grammar_parser.NFAState": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "libcst._parser.parso.pgen2.grammar_parser.NFAState.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "libcst._parser.parso.pgen2.grammar_parser.NFAArc",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.pgen2.grammar_parser.NFAState.__repr__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.pgen2.grammar_parser.NFAState.add_arc": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "libcst._parser.parso.pgen2.grammar_parser.NFAArc",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.pgen2.grammar_parser.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst._parser.parso.pgen2.grammar_parser.PythonTokenTypes": {
  "data": {
   "shadows": "libcst._parser.parso.python.token.PythonTokenTypes"
  },
  "type": "import"
 },
 "libcst._parser.parso.pgen2.grammar_parser.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "libcst._parser.parso.pgen2.grammar_parser.parse_version_string": {
  "data": {
   "shadows": "libcst._parser.parso.utils.parse_version_string"
  },
  "type": "import"
 },
 "libcst._parser.parso.pgen2.grammar_parser.tokenize": {
  "data": {
   "shadows": "libcst._parser.parso.python.tokenize.tokenize"
  },
  "type": "import"
 },
 "libcst._parser.parso.python": {
  "data": {},
  "type": "module"
 },
 "libcst._parser.parso.python.token": {
  "data": {},
  "type": "module"
 },
 "libcst._parser.parso.python.token.PythonTokenTypes": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "libcst._parser.parso.python.token.TokenType"
   ]
  },
  "type": "class"
 },
 "libcst._parser.parso.python.token.TokenType": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "str"
   ]
  },
  "type": "class"
 },
 "libcst._parser.parso.python.token.TokenType.__repr__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.python.token.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "libcst._parser.parso.tests": {
  "data": {},
  "type": "module"
 },
 "libcst._parser.parso.tests.test_fstring": {
  "data": {},
  "type": "module"
 },
 "libcst._parser.parso.tests.test_fstring.ParsoTokenizeTest": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst._parser.parso.tests.test_fstring.ParsoTokenizeTest.test_tokenize_start_pos": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "libcst._parser.parso.python.tokenize.tokenize",
    "libcst._parser.parso.utils.parse_version_string",
    "libcst.testing.utils.data_provider",
    "list"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.tests.test_fstring.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst._parser.parso.tests.test_fstring.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._parser.parso.tests.test_fstring.parse_version_string": {
  "data": {
   "shadows": "libcst._parser.parso.utils.parse_version_string"
  },
  "type": "import"
 },
 "libcst._parser.parso.tests.test_fstring.tokenize": {
  "data": {
   "shadows": "libcst._parser.parso.python.tokenize.tokenize"
  },
  "type": "import"
 },
 "libcst._parser.parso.tests.test_tokenize": {
  "data": {
   "symbols_in_volume": [
    "libcst._parser.parso.python.token.PythonTokenTypes.DEDENT",
    "libcst._parser.parso.python.token.PythonTokenTypes.ENDMARKER",
    "libcst._parser.parso.python.token.PythonTokenTypes.ERRORTOKEN",
    "libcst._parser.parso.python.token.PythonTokenTypes.ERROR_DEDENT",
    "libcst._parser.parso.python.token.PythonTokenTypes.FSTRING_END",
    "libcst._parser.parso.python.token.PythonTokenTypes.FSTRING_START",
    "libcst._parser.parso.python.token.PythonTokenTypes.FSTRING_STRING",
    "libcst._parser.parso.python.token.PythonTokenTypes.INDENT",
    "libcst._parser.parso.python.token.PythonTokenTypes.NAME",
    "libcst._parser.parso.python.token.PythonTokenTypes.NEWLINE",
    "libcst._parser.parso.python.token.PythonTokenTypes.NUMBER",
    "libcst._parser.parso.python.token.PythonTokenTypes.OP",
    "libcst._parser.parso.python.token.PythonTokenTypes.STRING"
   ]
  },
  "type": "module"
 },
 "libcst._parser.parso.tests.test_tokenize.DEDENT": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "libcst._parser.parso.tests.test_tokenize.ENDMARKER": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "libcst._parser.parso.tests.test_tokenize.ERRORTOKEN": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "libcst._parser.parso.tests.test_tokenize.ERROR_DEDENT": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "libcst._parser.parso.tests.test_tokenize.FSTRING_END": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "libcst._parser.parso.tests.test_tokenize.FSTRING_START": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "libcst._parser.parso.tests.test_tokenize.FSTRING_STRING": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "libcst._parser.parso.tests.test_tokenize.INDENT": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "libcst._parser.parso.tests.test_tokenize.NAME": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "libcst._parser.parso.tests.test_tokenize.NEWLINE": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "libcst._parser.parso.tests.test_tokenize.NUMBER": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "libcst._parser.parso.tests.test_tokenize.OP": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_backslash": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "libcst._parser.parso.tests.test_tokenize._get_token_list"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_brackets_no_indentation": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "libcst._parser.parso.tests.test_tokenize.ENDMARKER",
    "libcst._parser.parso.tests.test_tokenize.NEWLINE",
    "libcst._parser.parso.tests.test_tokenize.OP",
    "libcst._parser.parso.tests.test_tokenize._get_token_list",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_carriage_return": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "libcst._parser.parso.tests.test_tokenize.DEDENT",
    "libcst._parser.parso.tests.test_tokenize.ENDMARKER",
    "libcst._parser.parso.tests.test_tokenize.INDENT",
    "libcst._parser.parso.tests.test_tokenize.NAME",
    "libcst._parser.parso.tests.test_tokenize.OP",
    "libcst._parser.parso.tests.test_tokenize._get_token_list"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_endmarker_end_pos": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "check"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_endmarker_end_pos.check": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "len",
    "libcst._parser.parso.tests.test_tokenize._get_token_list",
    "libcst._parser.parso.utils.split_lines"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_error_literal": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "libcst._parser.parso.tests.test_tokenize.ENDMARKER",
    "libcst._parser.parso.tests.test_tokenize.ERRORTOKEN",
    "libcst._parser.parso.tests.test_tokenize.NEWLINE",
    "libcst._parser.parso.tests.test_tokenize._get_token_list"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_error_string": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "libcst._parser.parso.tests.test_tokenize.ERRORTOKEN",
    "libcst._parser.parso.tests.test_tokenize.NEWLINE",
    "libcst._parser.parso.tests.test_tokenize._get_token_list"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_error_token_after_dedent": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "libcst._parser.parso.tests.test_tokenize.DEDENT",
    "libcst._parser.parso.tests.test_tokenize.ENDMARKER",
    "libcst._parser.parso.tests.test_tokenize.ERRORTOKEN",
    "libcst._parser.parso.tests.test_tokenize.INDENT",
    "libcst._parser.parso.tests.test_tokenize.NAME",
    "libcst._parser.parso.tests.test_tokenize.NEWLINE",
    "libcst._parser.parso.tests.test_tokenize.OP",
    "libcst._parser.parso.tests.test_tokenize._get_token_list",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_form_feed": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "libcst._parser.parso.tests.test_tokenize._get_token_list",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_fstring": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "libcst._parser.parso.tests.test_tokenize.ENDMARKER",
    "libcst._parser.parso.tests.test_tokenize.ERRORTOKEN",
    "libcst._parser.parso.tests.test_tokenize.FSTRING_END",
    "libcst._parser.parso.tests.test_tokenize.FSTRING_START",
    "libcst._parser.parso.tests.test_tokenize.FSTRING_STRING",
    "libcst._parser.parso.tests.test_tokenize.NAME",
    "libcst._parser.parso.tests.test_tokenize.NEWLINE",
    "libcst._parser.parso.tests.test_tokenize.NUMBER",
    "libcst._parser.parso.tests.test_tokenize.OP",
    "libcst._parser.parso.tests.test_tokenize._get_token_list",
    "libcst.testing.utils.data_provider"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_function_whitespace": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "libcst._parser.parso.tests.test_tokenize._get_token_list",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_identifier_contains_unicode": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "libcst._parser.parso.tests.test_tokenize.NAME",
    "libcst._parser.parso.tests.test_tokenize._get_token_list",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_indent_error_recovery": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "libcst._parser.parso.tests.test_tokenize.DEDENT",
    "libcst._parser.parso.tests.test_tokenize.ENDMARKER",
    "libcst._parser.parso.tests.test_tokenize.INDENT",
    "libcst._parser.parso.tests.test_tokenize.NAME",
    "libcst._parser.parso.tests.test_tokenize.NEWLINE",
    "libcst._parser.parso.tests.test_tokenize.OP",
    "libcst._parser.parso.tests.test_tokenize._get_token_list",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_simple_no_whitespace": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "libcst._parser.parso.tests.test_tokenize._get_token_list"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_simple_with_whitespace": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "libcst._parser.parso.tests.test_tokenize.INDENT",
    "libcst._parser.parso.tests.test_tokenize.NEWLINE",
    "libcst._parser.parso.tests.test_tokenize.STRING",
    "libcst._parser.parso.tests.test_tokenize._get_token_list"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_token_types": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "libcst._parser.parso.tests.test_tokenize.DEDENT",
    "libcst._parser.parso.tests.test_tokenize.ENDMARKER",
    "libcst._parser.parso.tests.test_tokenize.ERRORTOKEN",
    "libcst._parser.parso.tests.test_tokenize.ERROR_DEDENT",
    "libcst._parser.parso.tests.test_tokenize.INDENT",
    "libcst._parser.parso.tests.test_tokenize.NAME",
    "libcst._parser.parso.tests.test_tokenize.NEWLINE",
    "libcst._parser.parso.tests.test_tokenize.NUMBER",
    "libcst._parser.parso.tests.test_tokenize._get_token_list",
    "libcst.testing.utils.data_provider"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_tokenize_multiline_I": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "libcst._parser.parso.python.tokenize.PythonToken",
    "libcst._parser.parso.tests.test_tokenize.ENDMARKER",
    "libcst._parser.parso.tests.test_tokenize.ERRORTOKEN",
    "libcst._parser.parso.tests.test_tokenize._get_token_list"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_tokenize_multiline_II": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "libcst._parser.parso.python.tokenize.PythonToken",
    "libcst._parser.parso.tests.test_tokenize.ENDMARKER",
    "libcst._parser.parso.tests.test_tokenize.ERRORTOKEN",
    "libcst._parser.parso.tests.test_tokenize._get_token_list"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_tokenize_multiline_III": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "libcst._parser.parso.python.tokenize.PythonToken",
    "libcst._parser.parso.tests.test_tokenize.ENDMARKER",
    "libcst._parser.parso.tests.test_tokenize.ERRORTOKEN",
    "libcst._parser.parso.tests.test_tokenize._get_token_list"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_ur_literals": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "check"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_ur_literals.check": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "libcst._parser.parso.tests.test_tokenize.FSTRING_START",
    "libcst._parser.parso.tests.test_tokenize.NAME",
    "libcst._parser.parso.tests.test_tokenize.STRING",
    "libcst._parser.parso.tests.test_tokenize._get_token_list"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.PythonToken": {
  "data": {
   "shadows": "libcst._parser.parso.python.tokenize.PythonToken"
  },
  "type": "import"
 },
 "libcst._parser.parso.tests.test_tokenize.PythonTokenTypes": {
  "data": {
   "shadows": "libcst._parser.parso.python.token.PythonTokenTypes"
  },
  "type": "import"
 },
 "libcst._parser.parso.tests.test_tokenize.STRING": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "libcst._parser.parso.tests.test_tokenize.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst._parser.parso.tests.test_tokenize._get_token_list": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "libcst._parser.parso.python.tokenize.tokenize",
    "libcst._parser.parso.utils.parse_version_string",
    "list"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._parser.parso.tests.test_tokenize.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "libcst._parser.parso.tests.test_tokenize.parse_version_string": {
  "data": {
   "shadows": "libcst._parser.parso.utils.parse_version_string"
  },
  "type": "import"
 },
 "libcst._parser.parso.tests.test_tokenize.split_lines": {
  "data": {
   "shadows": "libcst._parser.parso.utils.split_lines"
  },
  "type": "import"
 },
 "libcst._parser.parso.tests.test_tokenize.tokenize": {
  "data": {
   "shadows": "libcst._parser.parso.python.tokenize.tokenize"
  },
  "type": "import"
 },
 "libcst._parser.parso.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "libcst._parser.parso.tests.test_utils.ParsoUtilsTest": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst._parser.parso.tests.test_utils.ParsoUtilsTest.test_python_bytes_to_unicode_unicode_text": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "libcst._parser.parso.utils.python_bytes_to_unicode"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.tests.test_utils.ParsoUtilsTest.test_split_lines": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "libcst._parser.parso.utils.split_lines",
    "libcst.testing.utils.data_provider"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.tests.test_utils.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst._parser.parso.tests.test_utils.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._parser.parso.tests.test_utils.python_bytes_to_unicode": {
  "data": {
   "shadows": "libcst._parser.parso.utils.python_bytes_to_unicode"
  },
  "type": "import"
 },
 "libcst._parser.parso.tests.test_utils.split_lines": {
  "data": {
   "shadows": "libcst._parser.parso.utils.split_lines"
  },
  "type": "import"
 },
 "libcst._parser.parso.utils": {
  "data": {},
  "type": "module"
 },
 "libcst._parser.parso.utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst._parser.parso.utils.PythonVersionInfo": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "int"
   ]
  },
  "type": "class"
 },
 "libcst._parser.parso.utils.PythonVersionInfo.__eq__": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "isinstance",
    "len",
    "tuple",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.utils.PythonVersionInfo.__ge__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "bool",
    "int",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.utils.PythonVersionInfo.__gt__": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "isinstance",
    "len",
    "tuple",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.utils.PythonVersionInfo.__hash__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "hash",
    "int"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.utils.PythonVersionInfo.__le__": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "bool",
    "int",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.utils.PythonVersionInfo.__lt__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "isinstance",
    "len",
    "tuple",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.utils.PythonVersionInfo.__ne__": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "bool",
    "int",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.utils.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst._parser.parso.utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "libcst._parser.parso.utils.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst._parser.parso.utils.Version": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "int"
   ]
  },
  "type": "class"
 },
 "libcst._parser.parso.utils._NON_LINE_BREAKS": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "libcst._parser.parso.utils._parse_version": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "int",
    "libcst._parser.parso.utils.PythonVersionInfo",
    "libcst._parser.parso.utils.re",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.utils.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "libcst._parser.parso.utils.literal_eval": {
  "data": {
   "shadows": "ast.literal_eval"
  },
  "type": "import"
 },
 "libcst._parser.parso.utils.parse_version_string": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "libcst._parser.parso.utils.PythonVersionInfo",
    "libcst._parser.parso.utils._parse_version",
    "libcst._parser.parso.utils.sys",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.utils.python_bytes_to_unicode": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "bytes",
    "detect_encoding",
    "isinstance",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.utils.python_bytes_to_unicode.detect_encoding": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "ast.literal_eval",
    "bytes",
    "libcst._parser.parso.utils.re",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "libcst._parser.parso.utils.split_lines": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "IndexError",
    "bool",
    "enumerate",
    "libcst._parser.parso.utils._NON_LINE_BREAKS",
    "libcst._parser.parso.utils.re",
    "reversed",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst._parser.parso.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libcst._parser.production_decorator": {
  "data": {
   "symbols_in_volume": [
    "libcst._parser.types.conversions.NonterminalConversion",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "libcst._parser.production_decorator.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst._parser.production_decorator.NonterminalConversion": {
  "data": {
   "shadows": "libcst._parser.types.conversions.NonterminalConversion"
  },
  "type": "import"
 },
 "libcst._parser.production_decorator.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst._parser.production_decorator.Production": {
  "data": {
   "shadows": "libcst._parser.types.production.Production"
  },
  "type": "import"
 },
 "libcst._parser.production_decorator.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst._parser.production_decorator.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "libcst._parser.production_decorator._NonterminalConversionT": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "libcst._parser.production_decorator.get_productions": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "libcst._parser.types.conversions.NonterminalConversion",
    "libcst._parser.types.production.Production",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst._parser.production_decorator.with_production": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "libcst._parser.production_decorator._NonterminalConversionT",
    "str",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._parser.production_decorator.with_production.inner": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "Exception",
    "hasattr",
    "libcst._parser.production_decorator._NonterminalConversionT",
    "libcst._parser.types.production.Production"
   ]
  },
  "type": "function"
 },
 "libcst._parser.python_parser": {
  "data": {},
  "type": "module"
 },
 "libcst._parser.python_parser.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._parser.python_parser.BaseParser": {
  "data": {
   "shadows": "libcst._parser.base_parser.BaseParser"
  },
  "type": "import"
 },
 "libcst._parser.python_parser.Grammar": {
  "data": {
   "shadows": "libcst._parser.parso.pgen2.generator.Grammar"
  },
  "type": "import"
 },
 "libcst._parser.python_parser.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "libcst._parser.python_parser.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "libcst._parser.python_parser.NonterminalConversion": {
  "data": {
   "shadows": "libcst._parser.types.conversions.NonterminalConversion"
  },
  "type": "import"
 },
 "libcst._parser.python_parser.ParserConfig": {
  "data": {
   "shadows": "libcst._parser.types.config.ParserConfig"
  },
  "type": "import"
 },
 "libcst._parser.python_parser.PythonCSTParser": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "libcst._parser.base_parser.BaseParser",
    "libcst._parser.parso.python.token.TokenType",
    "libcst._parser.types.config.ParserConfig",
    "libcst._parser.types.conversions.NonterminalConversion",
    "libcst._parser.types.conversions.TerminalConversion",
    "libcst._parser.types.token.Token",
    "str",
    "typing.Any",
    "typing.Mapping"
   ]
  },
  "type": "class"
 },
 "libcst._parser.python_parser.PythonCSTParser.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "libcst._parser.grammar.get_nonterminal_conversions",
    "libcst._parser.grammar.get_terminal_conversions",
    "libcst._parser.types.config.ParserConfig",
    "libcst._parser.types.token.Token",
    "str",
    "super",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "libcst._parser.python_parser.PythonCSTParser.convert_nonterminal": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst._parser.python_parser.PythonCSTParser.convert_terminal": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "libcst._parser.types.token.Token",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst._parser.python_parser.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst._parser.python_parser.TerminalConversion": {
  "data": {
   "shadows": "libcst._parser.types.conversions.TerminalConversion"
  },
  "type": "import"
 },
 "libcst._parser.python_parser.Token": {
  "data": {
   "shadows": "libcst._parser.types.token.Token"
  },
  "type": "import"
 },
 "libcst._parser.python_parser.TokenType": {
  "data": {
   "shadows": "libcst._parser.parso.python.token.TokenType"
  },
  "type": "import"
 },
 "libcst._parser.python_parser.get_nonterminal_conversions": {
  "data": {
   "shadows": "libcst._parser.grammar.get_nonterminal_conversions"
  },
  "type": "import"
 },
 "libcst._parser.python_parser.get_terminal_conversions": {
  "data": {
   "shadows": "libcst._parser.grammar.get_terminal_conversions"
  },
  "type": "import"
 },
 "libcst._parser.tests": {
  "data": {},
  "type": "module"
 },
 "libcst._parser.tests.test_config": {
  "data": {},
  "type": "module"
 },
 "libcst._parser.tests.test_config.ConfigTest": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst._parser.tests.test_config.ConfigTest.test_pick_compatible": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "libcst._parser.parso.utils.PythonVersionInfo",
    "libcst._parser.types.config._pick_compatible_python_version"
   ]
  },
  "type": "function"
 },
 "libcst._parser.tests.test_config.PythonVersionInfo": {
  "data": {
   "shadows": "libcst._parser.parso.utils.PythonVersionInfo"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_config.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_config._pick_compatible_python_version": {
  "data": {
   "shadows": "libcst._parser.types.config._pick_compatible_python_version"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_detect_config": {
  "data": {},
  "type": "module"
 },
 "libcst._parser.tests.test_detect_config.ParserConfig": {
  "data": {
   "shadows": "libcst._parser.types.config.ParserConfig"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_detect_config.PartialParserConfig": {
  "data": {
   "shadows": "libcst._parser.types.config.PartialParserConfig"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_detect_config.PythonVersionInfo": {
  "data": {
   "shadows": "libcst._parser.parso.utils.PythonVersionInfo"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_detect_config.TestDetectConfig": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst._parser.tests.test_detect_config.TestDetectConfig.test_detect_module_config": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "frozenset",
    "libcst._parser.detect_config.detect_config",
    "libcst._parser.parso.utils.PythonVersionInfo",
    "libcst._parser.tests.test_detect_config.dataclasses",
    "libcst._parser.types.config.ParserConfig",
    "libcst._parser.types.config.PartialParserConfig",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._parser.tests.test_detect_config.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_detect_config.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_detect_config.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_detect_config.dataclasses": {
  "data": {
   "shadows": "dataclasses"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_detect_config.detect_config": {
  "data": {
   "shadows": "libcst._parser.detect_config.detect_config"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_footer_behavior": {
  "data": {},
  "type": "module"
 },
 "libcst._parser.tests.test_footer_behavior.FooterBehaviorTest": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst._parser.tests.test_footer_behavior.FooterBehaviorTest.test_parsers": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst.Assign",
    "libcst.AssignTarget",
    "libcst.CSTNode",
    "libcst.Comment",
    "libcst.Else",
    "libcst.EmptyLine",
    "libcst.FunctionDef",
    "libcst.If",
    "libcst.IndentedBlock",
    "libcst.Integer",
    "libcst.Module",
    "libcst.Name",
    "libcst.Parameters",
    "libcst.Pass",
    "libcst.Return",
    "libcst.SimpleStatementLine",
    "libcst.SimpleWhitespace",
    "libcst.TrailingWhitespace",
    "libcst._nodes.deep_equals.deep_equals",
    "libcst.parse_module",
    "libcst.testing.utils.data_provider",
    "str",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst._parser.tests.test_footer_behavior.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_footer_behavior.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_footer_behavior.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_footer_behavior.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_footer_behavior.deep_equals": {
  "data": {
   "shadows": "libcst._nodes.deep_equals.deep_equals"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_footer_behavior.parse_module": {
  "data": {
   "shadows": "libcst.parse_module"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_node_identity": {
  "data": {},
  "type": "module"
 },
 "libcst._parser.tests.test_node_identity.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_node_identity.DuplicateLeafNodeTest": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst._parser.tests.test_node_identity.DuplicateLeafNodeTest.test_tokenize": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "CountVisitor",
    "libcst.parse_module",
    "libcst.testing.utils.data_provider",
    "str",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst._parser.tests.test_node_identity.DuplicateLeafNodeTest.test_tokenize.CountVisitor": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "libcst.CSTVisitor"
   ]
  },
  "type": "class"
 },
 "libcst._parser.tests.test_node_identity.DuplicateLeafNodeTest.test_tokenize.CountVisitor.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "collections.Counter"
   ]
  },
  "type": "function"
 },
 "libcst._parser.tests.test_node_identity.DuplicateLeafNodeTest.test_tokenize.CountVisitor.on_visit": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "bool",
    "id",
    "libcst.CSTNode"
   ]
  },
  "type": "function"
 },
 "libcst._parser.tests.test_node_identity.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_node_identity.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_node_identity.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_node_identity.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_parse_errors": {
  "data": {},
  "type": "module"
 },
 "libcst._parser.tests.test_parse_errors.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_parse_errors.ParseErrorsTest": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst._parser.tests.test_parse_errors.ParseErrorsTest.test_parser_syntax_error_str": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst.ParserSyntaxError",
    "libcst.parse_expression",
    "libcst.parse_module",
    "libcst.parse_statement",
    "libcst.testing.utils.data_provider",
    "object",
    "parse_fn",
    "str",
    "textwrap.dedent",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst._parser.tests.test_parse_errors.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_parse_errors.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_parse_errors.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_parse_errors.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_version_compare": {
  "data": {},
  "type": "module"
 },
 "libcst._parser.tests.test_version_compare.PythonVersionInfo": {
  "data": {
   "shadows": "libcst._parser.parso.utils.PythonVersionInfo"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_version_compare.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_version_compare.VersionCompareTest": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst._parser.tests.test_version_compare.VersionCompareTest.test_tokenize": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "bool",
    "libcst._parser.grammar._should_include",
    "libcst._parser.parso.utils.PythonVersionInfo",
    "libcst.testing.utils.data_provider",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._parser.tests.test_version_compare._should_include": {
  "data": {
   "shadows": "libcst._parser.grammar._should_include"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_version_compare.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_whitespace_parser": {
  "data": {
   "symbols_in_volume": [
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "libcst._parser.tests.test_whitespace_parser.BaseWhitespaceParserConfig": {
  "data": {
   "shadows": "libcst._parser.types.config.BaseWhitespaceParserConfig"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_whitespace_parser.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_whitespace_parser.Config": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._parser.types.config.BaseWhitespaceParserConfig",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._parser.tests.test_whitespace_parser.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_whitespace_parser.State": {
  "data": {
   "shadows": "libcst._parser.types.whitespace_state.WhitespaceState"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_whitespace_parser.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_whitespace_parser.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_whitespace_parser.WhitespaceParserTest": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst._parser.tests.test_whitespace_parser.WhitespaceParserTest.test_parsers": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "libcst.Comment",
    "libcst.EmptyLine",
    "libcst.Newline",
    "libcst.SimpleWhitespace",
    "libcst.TrailingWhitespace",
    "libcst._nodes.deep_equals.deep_equals",
    "libcst._parser.tests.test_whitespace_parser.Config",
    "libcst._parser.tests.test_whitespace_parser._T",
    "libcst._parser.types.whitespace_state.WhitespaceState",
    "libcst._parser.whitespace_parser.parse_empty_lines",
    "libcst._parser.whitespace_parser.parse_simple_whitespace",
    "libcst._parser.whitespace_parser.parse_trailing_whitespace",
    "libcst.testing.utils.data_provider",
    "parser",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst._parser.tests.test_whitespace_parser._T": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "libcst._parser.tests.test_whitespace_parser.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_whitespace_parser.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_whitespace_parser.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_whitespace_parser.deep_equals": {
  "data": {
   "shadows": "libcst._nodes.deep_equals.deep_equals"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_whitespace_parser.parse_empty_lines": {
  "data": {
   "shadows": "libcst._parser.whitespace_parser.parse_empty_lines"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_whitespace_parser.parse_simple_whitespace": {
  "data": {
   "shadows": "libcst._parser.whitespace_parser.parse_simple_whitespace"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_whitespace_parser.parse_trailing_whitespace": {
  "data": {
   "shadows": "libcst._parser.whitespace_parser.parse_trailing_whitespace"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_wrapped_tokenize": {
  "data": {
   "symbols_in_volume": [
    "libcst._parser.parso.utils.parse_version_string"
   ]
  },
  "type": "module"
 },
 "libcst._parser.tests.test_wrapped_tokenize.ParserSyntaxError": {
  "data": {
   "shadows": "libcst._exceptions.ParserSyntaxError"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_wrapped_tokenize.PythonTokenTypes": {
  "data": {
   "shadows": "libcst._parser.parso.python.token.PythonTokenTypes"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_wrapped_tokenize.PythonVersionInfo": {
  "data": {
   "shadows": "libcst._parser.parso.utils.PythonVersionInfo"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_wrapped_tokenize.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_wrapped_tokenize.Token": {
  "data": {
   "shadows": "libcst._parser.wrapped_tokenize.Token"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_wrapped_tokenize.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_wrapped_tokenize.WhitespaceState": {
  "data": {
   "shadows": "libcst._parser.types.whitespace_state.WhitespaceState"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_wrapped_tokenize.WrappedTokenizeTest": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst._parser.tests.test_wrapped_tokenize.WrappedTokenizeTest.test_error_dedent": {
  "data": {
   "lineno": 1903,
   "symbols_in_volume": [
    "libcst._exceptions.ParserSyntaxError",
    "libcst._parser.tests.test_wrapped_tokenize._PY36",
    "libcst._parser.tests.test_wrapped_tokenize._PY37",
    "libcst._parser.tests.test_wrapped_tokenize._PY38",
    "libcst._parser.wrapped_tokenize.tokenize",
    "tuple"
   ]
  },
  "type": "function"
 },
 "libcst._parser.tests.test_wrapped_tokenize.WrappedTokenizeTest.test_errortoken": {
  "data": {
   "lineno": 1896,
   "symbols_in_volume": [
    "libcst._exceptions.ParserSyntaxError",
    "libcst._parser.tests.test_wrapped_tokenize._PY36",
    "libcst._parser.tests.test_wrapped_tokenize._PY37",
    "libcst._parser.tests.test_wrapped_tokenize._PY38",
    "libcst._parser.wrapped_tokenize.tokenize",
    "tuple"
   ]
  },
  "type": "function"
 },
 "libcst._parser.tests.test_wrapped_tokenize.WrappedTokenizeTest.test_tokenize": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "libcst._parser.parso.python.token.PythonTokenTypes.ASYNC",
    "libcst._parser.parso.python.token.PythonTokenTypes.AWAIT",
    "libcst._parser.parso.python.token.PythonTokenTypes.DEDENT",
    "libcst._parser.parso.python.token.PythonTokenTypes.ENDMARKER",
    "libcst._parser.parso.python.token.PythonTokenTypes.INDENT",
    "libcst._parser.parso.python.token.PythonTokenTypes.NAME",
    "libcst._parser.parso.python.token.PythonTokenTypes.NEWLINE",
    "libcst._parser.parso.python.token.PythonTokenTypes.OP",
    "libcst._parser.parso.utils.PythonVersionInfo",
    "libcst._parser.tests.test_wrapped_tokenize._PY35",
    "libcst._parser.tests.test_wrapped_tokenize._PY36",
    "libcst._parser.tests.test_wrapped_tokenize._PY37",
    "libcst._parser.tests.test_wrapped_tokenize._PY38",
    "libcst._parser.types.whitespace_state.WhitespaceState",
    "libcst._parser.wrapped_tokenize.Token",
    "libcst._parser.wrapped_tokenize.tokenize",
    "libcst.testing.utils.data_provider",
    "str",
    "tuple",
    "typing.Sequence",
    "zip"
   ]
  },
  "type": "function"
 },
 "libcst._parser.tests.test_wrapped_tokenize._PY35": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "libcst._parser.tests.test_wrapped_tokenize._PY36": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "libcst._parser.tests.test_wrapped_tokenize._PY37": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "libcst._parser.tests.test_wrapped_tokenize._PY38": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "libcst._parser.tests.test_wrapped_tokenize.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_wrapped_tokenize.parse_version_string": {
  "data": {
   "shadows": "libcst._parser.parso.utils.parse_version_string"
  },
  "type": "import"
 },
 "libcst._parser.tests.test_wrapped_tokenize.tokenize": {
  "data": {
   "shadows": "libcst._parser.wrapped_tokenize.tokenize"
  },
  "type": "import"
 },
 "libcst._parser.types": {
  "data": {},
  "type": "module"
 },
 "libcst._parser.types.config": {
  "data": {
   "symbols_in_volume": [
    "libcst._parser.types.config.re",
    "str",
    "typing.Pattern"
   ]
  },
  "type": "module"
 },
 "libcst._parser.types.config.AutoConfig": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "enum.Enum",
    "int"
   ]
  },
  "type": "class"
 },
 "libcst._parser.types.config.AutoConfig.__repr__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._parser.types.config.BaseWhitespaceParserConfig": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "libcst._parser.types.config.abc",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._parser.types.config.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "libcst._parser.types.config.FrozenSet": {
  "data": {
   "shadows": "typing.FrozenSet"
  },
  "type": "import"
 },
 "libcst._parser.types.config.KNOWN_PYTHON_VERSION_STRINGS": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "libcst._parser.types.config.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst._parser.types.config.NEWLINE_RE": {
  "data": {
   "shadows": "libcst._nodes.whitespace.NEWLINE_RE"
  },
  "type": "import"
 },
 "libcst._parser.types.config.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst._parser.types.config.ParserConfig": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._parser.parso.utils.PythonVersionInfo",
    "libcst._parser.types.config.BaseWhitespaceParserConfig",
    "str",
    "typing.FrozenSet",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._parser.types.config.PartialParserConfig": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "dataclasses.field",
    "libcst._add_slots.add_slots",
    "libcst._parser.parso.utils.PythonVersionInfo",
    "libcst._parser.types.config.AutoConfig",
    "str",
    "typing.FrozenSet",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._parser.types.config.PartialParserConfig.__post_init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "LookupError",
    "ValueError",
    "any",
    "isinstance",
    "libcst._nodes.whitespace.NEWLINE_RE.fullmatch",
    "libcst._parser.parso.utils.parse_version_string",
    "libcst._parser.types.config.AutoConfig",
    "libcst._parser.types.config.KNOWN_PYTHON_VERSION_STRINGS",
    "libcst._parser.types.config._pick_compatible_python_version",
    "libcst._parser.types.config.codecs",
    "object.__setattr__",
    "repr"
   ]
  },
  "type": "function"
 },
 "libcst._parser.types.config.PartialParserConfig.__repr__": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "dataclasses.fields",
    "getattr",
    "isinstance",
    "libcst._parser.types.config.AutoConfig",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst._parser.types.config.Pattern": {
  "data": {
   "shadows": "typing.Pattern"
  },
  "type": "import"
 },
 "libcst._parser.types.config.PythonVersionInfo": {
  "data": {
   "shadows": "libcst._parser.parso.utils.PythonVersionInfo"
  },
  "type": "import"
 },
 "libcst._parser.types.config.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst._parser.types.config.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst._parser.types.config._pick_compatible_python_version": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "ValueError",
    "libcst._parser.parso.utils.PythonVersionInfo",
    "libcst._parser.parso.utils.parse_version_string",
    "libcst._parser.types.config.KNOWN_PYTHON_VERSION_STRINGS",
    "libcst._parser.types.config.sys",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._parser.types.config.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "libcst._parser.types.config.add_slots": {
  "data": {
   "shadows": "libcst._add_slots.add_slots"
  },
  "type": "import"
 },
 "libcst._parser.types.config.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "libcst._parser.types.config.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "libcst._parser.types.config.field": {
  "data": {
   "shadows": "dataclasses.field"
  },
  "type": "import"
 },
 "libcst._parser.types.config.fields": {
  "data": {
   "shadows": "dataclasses.fields"
  },
  "type": "import"
 },
 "libcst._parser.types.config.parse_version_string": {
  "data": {
   "shadows": "libcst._parser.parso.utils.parse_version_string"
  },
  "type": "import"
 },
 "libcst._parser.types.config.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "libcst._parser.types.config.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libcst._parser.types.conversions": {
  "data": {
   "symbols_in_volume": [
    "libcst._parser.types.config.ParserConfig",
    "libcst._parser.types.token.Token",
    "typing.Any",
    "typing.Callable",
    "typing.Sequence"
   ]
  },
  "type": "module"
 },
 "libcst._parser.types.conversions.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._parser.types.conversions.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst._parser.types.conversions.NonterminalConversion": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "libcst._parser.types.conversions.ParserConfig": {
  "data": {
   "shadows": "libcst._parser.types.config.ParserConfig"
  },
  "type": "import"
 },
 "libcst._parser.types.conversions.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst._parser.types.conversions.TerminalConversion": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "libcst._parser.types.conversions.Token": {
  "data": {
   "shadows": "libcst._parser.types.token.Token"
  },
  "type": "import"
 },
 "libcst._parser.types.partials": {
  "data": {
   "symbols_in_volume": [
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "libcst._parser.types.partials.AnnAssignPartial": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.Annotation",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.op.AssignEqual",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "libcst._parser.types.partials.Annotation": {
  "data": {
   "shadows": "libcst._nodes.expression.Annotation"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.Arg": {
  "data": {
   "shadows": "libcst._nodes.expression.Arg"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.ArglistPartial": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.Arg",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._parser.types.partials.AsName": {
  "data": {
   "shadows": "libcst._nodes.statement.AsName"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.AssignEqual": {
  "data": {
   "shadows": "libcst._nodes.op.AssignEqual"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.AssignPartial": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.op.AssignEqual"
   ]
  },
  "type": "class"
 },
 "libcst._parser.types.partials.Attribute": {
  "data": {
   "shadows": "libcst._nodes.expression.Attribute"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.AttributePartial": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.Name",
    "libcst._nodes.op.Dot"
   ]
  },
  "type": "class"
 },
 "libcst._parser.types.partials.AugAssignPartial": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.op.BaseAugOp"
   ]
  },
  "type": "class"
 },
 "libcst._parser.types.partials.BaseAugOp": {
  "data": {
   "shadows": "libcst._nodes.op.BaseAugOp"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.BaseExpression": {
  "data": {
   "shadows": "libcst._nodes.expression.BaseExpression"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.BaseFormattedStringContent": {
  "data": {
   "shadows": "libcst._nodes.expression.BaseFormattedStringContent"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.BaseSmallStatement": {
  "data": {
   "shadows": "libcst._nodes.statement.BaseSmallStatement"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.CallPartial": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.Arg",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.RightParen",
    "libcst._parser.types.partials.WithLeadingWhitespace",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._parser.types.partials.Colon": {
  "data": {
   "shadows": "libcst._nodes.op.Colon"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.Decorator": {
  "data": {
   "shadows": "libcst._nodes.statement.Decorator"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.DecoratorPartial": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.statement.Decorator",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._parser.types.partials.Dot": {
  "data": {
   "shadows": "libcst._nodes.op.Dot"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.EmptyLine": {
  "data": {
   "shadows": "libcst._nodes.whitespace.EmptyLine"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.ExceptClausePartial": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.statement.AsName",
    "libcst._nodes.whitespace.EmptyLine",
    "libcst._nodes.whitespace.SimpleWhitespace",
    "type",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._parser.types.partials.FormattedStringConversionPartial": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._parser.types.whitespace_state.WhitespaceState",
    "str"
   ]
  },
  "type": "class"
 },
 "libcst._parser.types.partials.FormattedStringFormatSpecPartial": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseFormattedStringContent",
    "libcst._parser.types.whitespace_state.WhitespaceState",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._parser.types.partials.FuncdefPartial": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.Parameters",
    "libcst._nodes.expression.RightParen"
   ]
  },
  "type": "class"
 },
 "libcst._parser.types.partials.Generic": {
  "data": {
   "shadows": "typing.Generic"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.ImportAlias": {
  "data": {
   "shadows": "libcst._nodes.statement.ImportAlias"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.ImportPartial": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.statement.ImportAlias",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._parser.types.partials.ImportRelativePartial": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.Attribute",
    "libcst._nodes.expression.Name",
    "libcst._nodes.op.Dot",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._parser.types.partials.Index": {
  "data": {
   "shadows": "libcst._nodes.expression.Index"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.LeftParen": {
  "data": {
   "shadows": "libcst._nodes.expression.LeftParen"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.LeftSquareBracket": {
  "data": {
   "shadows": "libcst._nodes.expression.LeftSquareBracket"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.Name": {
  "data": {
   "shadows": "libcst._nodes.expression.Name"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.ParamStarPartial": {
  "data": {
   "lineno": 110
  },
  "type": "class"
 },
 "libcst._parser.types.partials.Parameters": {
  "data": {
   "shadows": "libcst._nodes.expression.Parameters"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.RightParen": {
  "data": {
   "shadows": "libcst._nodes.expression.RightParen"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.RightSquareBracket": {
  "data": {
   "shadows": "libcst._nodes.expression.RightSquareBracket"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.SimpleStatementPartial": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.statement.BaseSmallStatement",
    "libcst._nodes.whitespace.TrailingWhitespace",
    "libcst._parser.types.whitespace_state.WhitespaceState",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._parser.types.partials.SimpleWhitespace": {
  "data": {
   "shadows": "libcst._nodes.whitespace.SimpleWhitespace"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.Slice": {
  "data": {
   "shadows": "libcst._nodes.expression.Slice"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.SlicePartial": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.op.Colon",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "libcst._parser.types.partials.SubscriptElement": {
  "data": {
   "shadows": "libcst._nodes.expression.SubscriptElement"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.SubscriptPartial": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._nodes.expression.Index",
    "libcst._nodes.expression.LeftSquareBracket",
    "libcst._nodes.expression.RightSquareBracket",
    "libcst._nodes.expression.Slice",
    "libcst._nodes.expression.SubscriptElement",
    "libcst._parser.types.whitespace_state.WhitespaceState",
    "slice",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst._parser.types.partials.TrailingWhitespace": {
  "data": {
   "shadows": "libcst._nodes.whitespace.TrailingWhitespace"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.WhitespaceState": {
  "data": {
   "shadows": "libcst._parser.types.whitespace_state.WhitespaceState"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.WithLeadingWhitespace": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._parser.types.partials._T",
    "libcst._parser.types.whitespace_state.WhitespaceState",
    "typing.Generic"
   ]
  },
  "type": "class"
 },
 "libcst._parser.types.partials._T": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "libcst._parser.types.partials.add_slots": {
  "data": {
   "shadows": "libcst._add_slots.add_slots"
  },
  "type": "import"
 },
 "libcst._parser.types.partials.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "libcst._parser.types.production": {
  "data": {},
  "type": "module"
 },
 "libcst._parser.types.production.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst._parser.types.production.Production": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "str",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "libcst._parser.types.production.Production.__str__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._parser.types.production.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "libcst._parser.types.tests": {
  "data": {},
  "type": "module"
 },
 "libcst._parser.types.tests.test_config": {
  "data": {},
  "type": "module"
 },
 "libcst._parser.types.tests.test_config.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst._parser.types.tests.test_config.PartialParserConfig": {
  "data": {
   "shadows": "libcst._parser.types.config.PartialParserConfig"
  },
  "type": "import"
 },
 "libcst._parser.types.tests.test_config.TestConfig": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst._parser.types.tests.test_config.TestConfig.test_invalid_partial_parser_config": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "factory",
    "libcst._parser.types.config.PartialParserConfig",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst._parser.types.tests.test_config.TestConfig.test_valid_partial_parser_config": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "factory",
    "libcst._parser.types.config.PartialParserConfig",
    "libcst.testing.utils.data_provider",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst._parser.types.tests.test_config.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst._parser.types.tests.test_config.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst._parser.types.token": {
  "data": {},
  "type": "module"
 },
 "libcst._parser.types.token.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst._parser.types.token.Token": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "int",
    "libcst._add_slots.add_slots",
    "libcst._parser.parso.python.token.TokenType",
    "libcst._parser.types.whitespace_state.WhitespaceState",
    "str",
    "type",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "libcst._parser.types.token.TokenType": {
  "data": {
   "shadows": "libcst._parser.parso.python.token.TokenType"
  },
  "type": "import"
 },
 "libcst._parser.types.token.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "libcst._parser.types.token.WhitespaceState": {
  "data": {
   "shadows": "libcst._parser.types.whitespace_state.WhitespaceState"
  },
  "type": "import"
 },
 "libcst._parser.types.token.add_slots": {
  "data": {
   "shadows": "libcst._add_slots.add_slots"
  },
  "type": "import"
 },
 "libcst._parser.types.token.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "libcst._parser.types.whitespace_state": {
  "data": {},
  "type": "module"
 },
 "libcst._parser.types.whitespace_state.WhitespaceState": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "int",
    "libcst._add_slots.add_slots",
    "str"
   ]
  },
  "type": "class"
 },
 "libcst._parser.types.whitespace_state.add_slots": {
  "data": {
   "shadows": "libcst._add_slots.add_slots"
  },
  "type": "import"
 },
 "libcst._parser.types.whitespace_state.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "libcst._parser.whitespace_parser": {
  "data": {},
  "type": "module"
 },
 "libcst._parser.whitespace_parser.BaseWhitespaceParserConfig": {
  "data": {
   "shadows": "libcst._parser.types.config.BaseWhitespaceParserConfig"
  },
  "type": "import"
 },
 "libcst._parser.whitespace_parser.COMMENT_RE": {
  "data": {
   "shadows": "libcst._nodes.whitespace.COMMENT_RE"
  },
  "type": "import"
 },
 "libcst._parser.whitespace_parser.Comment": {
  "data": {
   "shadows": "libcst._nodes.whitespace.Comment"
  },
  "type": "import"
 },
 "libcst._parser.whitespace_parser.EmptyLine": {
  "data": {
   "shadows": "libcst._nodes.whitespace.EmptyLine"
  },
  "type": "import"
 },
 "libcst._parser.whitespace_parser.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst._parser.whitespace_parser.NEWLINE_RE": {
  "data": {
   "shadows": "libcst._nodes.whitespace.NEWLINE_RE"
  },
  "type": "import"
 },
 "libcst._parser.whitespace_parser.Newline": {
  "data": {
   "shadows": "libcst._nodes.whitespace.Newline"
  },
  "type": "import"
 },
 "libcst._parser.whitespace_parser.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst._parser.whitespace_parser.ParenthesizedWhitespace": {
  "data": {
   "shadows": "libcst._nodes.whitespace.ParenthesizedWhitespace"
  },
  "type": "import"
 },
 "libcst._parser.whitespace_parser.SIMPLE_WHITESPACE_RE": {
  "data": {
   "shadows": "libcst._nodes.whitespace.SIMPLE_WHITESPACE_RE"
  },
  "type": "import"
 },
 "libcst._parser.whitespace_parser.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst._parser.whitespace_parser.SimpleWhitespace": {
  "data": {
   "shadows": "libcst._nodes.whitespace.SimpleWhitespace"
  },
  "type": "import"
 },
 "libcst._parser.whitespace_parser.State": {
  "data": {
   "shadows": "libcst._parser.types.whitespace_state.WhitespaceState"
  },
  "type": "import"
 },
 "libcst._parser.whitespace_parser.TrailingWhitespace": {
  "data": {
   "shadows": "libcst._nodes.whitespace.TrailingWhitespace"
  },
  "type": "import"
 },
 "libcst._parser.whitespace_parser.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "libcst._parser.whitespace_parser.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst._parser.whitespace_parser._parse_comment": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "len",
    "libcst._nodes.whitespace.COMMENT_RE.match",
    "libcst._nodes.whitespace.Comment",
    "libcst._parser.types.config.BaseWhitespaceParserConfig",
    "libcst._parser.types.whitespace_state.WhitespaceState",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._parser.whitespace_parser._parse_empty_line": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "Exception",
    "libcst._nodes.whitespace.EmptyLine",
    "libcst._parser.types.config.BaseWhitespaceParserConfig",
    "libcst._parser.types.whitespace_state.WhitespaceState",
    "libcst._parser.whitespace_parser._parse_comment",
    "libcst._parser.whitespace_parser._parse_indent",
    "libcst._parser.whitespace_parser._parse_newline",
    "libcst._parser.whitespace_parser.parse_simple_whitespace",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._parser.whitespace_parser._parse_indent": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "len",
    "libcst._parser.types.config.BaseWhitespaceParserConfig",
    "libcst._parser.types.whitespace_state.WhitespaceState",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._parser.whitespace_parser._parse_newline": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "Exception",
    "len",
    "libcst._nodes.whitespace.NEWLINE_RE.match",
    "libcst._nodes.whitespace.Newline",
    "libcst._parser.types.config.BaseWhitespaceParserConfig",
    "libcst._parser.types.whitespace_state.WhitespaceState",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._parser.whitespace_parser._parse_parenthesized_whitespace": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "libcst._nodes.whitespace.ParenthesizedWhitespace",
    "libcst._parser.types.config.BaseWhitespaceParserConfig",
    "libcst._parser.types.whitespace_state.WhitespaceState",
    "libcst._parser.whitespace_parser._parse_empty_line",
    "libcst._parser.whitespace_parser._parse_indent",
    "libcst._parser.whitespace_parser._parse_trailing_whitespace",
    "libcst._parser.whitespace_parser.parse_simple_whitespace",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._parser.whitespace_parser._parse_trailing_whitespace": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "libcst._nodes.whitespace.TrailingWhitespace",
    "libcst._parser.types.config.BaseWhitespaceParserConfig",
    "libcst._parser.types.whitespace_state.WhitespaceState",
    "libcst._parser.whitespace_parser._parse_comment",
    "libcst._parser.whitespace_parser._parse_newline",
    "libcst._parser.whitespace_parser.parse_simple_whitespace",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._parser.whitespace_parser.parse_empty_lines": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "len",
    "libcst._nodes.whitespace.EmptyLine",
    "libcst._parser.types.config.BaseWhitespaceParserConfig",
    "libcst._parser.types.whitespace_state.WhitespaceState",
    "libcst._parser.whitespace_parser._parse_empty_line",
    "range",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Sequence",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "libcst._nodes.whitespace.ParenthesizedWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace",
    "libcst._parser.types.config.BaseWhitespaceParserConfig",
    "libcst._parser.types.whitespace_state.WhitespaceState",
    "libcst._parser.whitespace_parser._parse_parenthesized_whitespace",
    "libcst._parser.whitespace_parser.parse_simple_whitespace",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._parser.whitespace_parser.parse_simple_whitespace": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "len",
    "libcst._nodes.whitespace.SIMPLE_WHITESPACE_RE.match",
    "libcst._nodes.whitespace.SimpleWhitespace",
    "libcst._parser.types.config.BaseWhitespaceParserConfig",
    "libcst._parser.types.whitespace_state.WhitespaceState"
   ]
  },
  "type": "function"
 },
 "libcst._parser.whitespace_parser.parse_trailing_whitespace": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "Exception",
    "libcst._nodes.whitespace.TrailingWhitespace",
    "libcst._parser.types.config.BaseWhitespaceParserConfig",
    "libcst._parser.types.whitespace_state.WhitespaceState",
    "libcst._parser.whitespace_parser._parse_trailing_whitespace"
   ]
  },
  "type": "function"
 },
 "libcst._parser.wrapped_tokenize": {
  "data": {
   "symbols_in_volume": [
    "libcst._parser.parso.python.token.PythonTokenTypes.DEDENT",
    "libcst._parser.parso.python.token.PythonTokenTypes.ENDMARKER",
    "libcst._parser.parso.python.token.PythonTokenTypes.ERRORTOKEN",
    "libcst._parser.parso.python.token.PythonTokenTypes.ERROR_DEDENT",
    "libcst._parser.parso.python.token.PythonTokenTypes.FSTRING_END",
    "libcst._parser.parso.python.token.PythonTokenTypes.FSTRING_START",
    "libcst._parser.parso.python.token.PythonTokenTypes.INDENT",
    "libcst._parser.parso.python.token.PythonTokenTypes.OP",
    "libcst._parser.parso.python.token.TokenType",
    "libcst._parser.wrapped_tokenize._ParenthesisOrFStringStackEntry"
   ]
  },
  "type": "module"
 },
 "libcst._parser.wrapped_tokenize.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "libcst._parser.wrapped_tokenize.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "libcst._parser.wrapped_tokenize.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst._parser.wrapped_tokenize.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst._parser.wrapped_tokenize.OrigToken": {
  "data": {
   "shadows": "libcst._parser.parso.python.tokenize.Token"
  },
  "type": "import"
 },
 "libcst._parser.wrapped_tokenize.ParserSyntaxError": {
  "data": {
   "shadows": "libcst._exceptions.ParserSyntaxError"
  },
  "type": "import"
 },
 "libcst._parser.wrapped_tokenize.PythonTokenTypes": {
  "data": {
   "shadows": "libcst._parser.parso.python.token.PythonTokenTypes"
  },
  "type": "import"
 },
 "libcst._parser.wrapped_tokenize.PythonVersionInfo": {
  "data": {
   "shadows": "libcst._parser.parso.utils.PythonVersionInfo"
  },
  "type": "import"
 },
 "libcst._parser.wrapped_tokenize.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst._parser.wrapped_tokenize.Token": {
  "data": {
   "shadows": "libcst._parser.types.token.Token"
  },
  "type": "import"
 },
 "libcst._parser.wrapped_tokenize.TokenType": {
  "data": {
   "shadows": "libcst._parser.parso.python.token.TokenType"
  },
  "type": "import"
 },
 "libcst._parser.wrapped_tokenize.WhitespaceState": {
  "data": {
   "shadows": "libcst._parser.types.whitespace_state.WhitespaceState"
  },
  "type": "import"
 },
 "libcst._parser.wrapped_tokenize._ParenthesisOrFStringStackEntry": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "libcst._parser.wrapped_tokenize._TokenizeState": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "dataclasses.field",
    "libcst._add_slots.add_slots",
    "libcst._parser.types.whitespace_state.WhitespaceState",
    "libcst._parser.wrapped_tokenize._ParenthesisOrFStringStackEntry",
    "list",
    "str",
    "typing.List",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst._parser.wrapped_tokenize._convert_token": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "libcst._exceptions.ParserSyntaxError",
    "libcst._parser.parso.python.tokenize.Token",
    "libcst._parser.parso.utils.split_lines",
    "libcst._parser.types.token.Token",
    "libcst._parser.types.whitespace_state.WhitespaceState",
    "libcst._parser.wrapped_tokenize._TokenizeState",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._parser.wrapped_tokenize.add_slots": {
  "data": {
   "shadows": "libcst._add_slots.add_slots"
  },
  "type": "import"
 },
 "libcst._parser.wrapped_tokenize.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "libcst._parser.wrapped_tokenize.field": {
  "data": {
   "shadows": "dataclasses.field"
  },
  "type": "import"
 },
 "libcst._parser.wrapped_tokenize.orig_tokenize_lines": {
  "data": {
   "shadows": "libcst._parser.parso.python.tokenize.tokenize_lines"
  },
  "type": "import"
 },
 "libcst._parser.wrapped_tokenize.split_lines": {
  "data": {
   "shadows": "libcst._parser.parso.utils.split_lines"
  },
  "type": "import"
 },
 "libcst._parser.wrapped_tokenize.tokenize": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "libcst._parser.parso.python.tokenize.tokenize_lines",
    "libcst._parser.parso.utils.PythonVersionInfo",
    "libcst._parser.parso.utils.split_lines",
    "libcst._parser.types.token.Token",
    "str",
    "typing.Generator"
   ]
  },
  "type": "function"
 },
 "libcst._parser.wrapped_tokenize.tokenize_lines": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "StopIteration",
    "iter",
    "libcst._parser.parso.python.tokenize.tokenize_lines",
    "libcst._parser.parso.utils.PythonVersionInfo",
    "libcst._parser.types.token.Token",
    "libcst._parser.wrapped_tokenize._TokenizeState",
    "libcst._parser.wrapped_tokenize._convert_token",
    "next",
    "str",
    "typing.Generator",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst._position": {
  "data": {
   "symbols_in_volume": [
    "int",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "libcst._position.CodePosition": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "int",
    "libcst._add_slots.add_slots"
   ]
  },
  "type": "class"
 },
 "libcst._position.CodeRange": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst._position.CodePosition"
   ]
  },
  "type": "class"
 },
 "libcst._position.CodeRange.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "isinstance",
    "libcst._position.CodePosition",
    "libcst._position._CodePositionT",
    "object.__setattr__",
    "tuple",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst._position.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "libcst._position.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst._position._CodePositionT": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "libcst._position.add_slots": {
  "data": {
   "shadows": "libcst._add_slots.add_slots"
  },
  "type": "import"
 },
 "libcst._position.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "libcst._position.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "libcst._position.overload": {
  "data": {
   "shadows": "typing.overload"
  },
  "type": "import"
 },
 "libcst._removal_sentinel": {
  "data": {},
  "type": "module"
 },
 "libcst._removal_sentinel.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "libcst._removal_sentinel.RemovalSentinel": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "enum.Enum",
    "enum.auto"
   ]
  },
  "type": "class"
 },
 "libcst._removal_sentinel.RemoveFromParent": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel"
   ]
  },
  "type": "function"
 },
 "libcst._removal_sentinel.auto": {
  "data": {
   "shadows": "enum.auto"
  },
  "type": "import"
 },
 "libcst._tabs": {
  "data": {},
  "type": "module"
 },
 "libcst._tabs.expand_tabs": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst._type_enforce": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "libcst._type_enforce.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._type_enforce.ForwardRef": {
  "data": {
   "shadows": "typing._ForwardRef"
  },
  "type": "import"
 },
 "libcst._type_enforce.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "libcst._type_enforce.Literal": {
  "data": {
   "shadows": "typing_extensions.Literal"
  },
  "type": "import"
 },
 "libcst._type_enforce.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "libcst._type_enforce.MutableMapping": {
  "data": {
   "shadows": "typing.MutableMapping"
  },
  "type": "import"
 },
 "libcst._type_enforce.MutableSequence": {
  "data": {
   "shadows": "typing.MutableSequence"
  },
  "type": "import"
 },
 "libcst._type_enforce.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "libcst._type_enforce.get_args": {
  "data": {
   "shadows": "typing_inspect.get_args"
  },
  "type": "import"
 },
 "libcst._type_enforce.get_origin": {
  "data": {
   "shadows": "typing_inspect.get_origin"
  },
  "type": "import"
 },
 "libcst._type_enforce.is_classvar": {
  "data": {
   "shadows": "typing_inspect.is_classvar"
  },
  "type": "import"
 },
 "libcst._type_enforce.is_typevar": {
  "data": {
   "shadows": "typing_inspect.is_typevar"
  },
  "type": "import"
 },
 "libcst._type_enforce.is_union_type": {
  "data": {
   "shadows": "typing_inspect.is_union_type"
  },
  "type": "import"
 },
 "libcst._type_enforce.is_value_of_type": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Exception",
    "NotImplementedError",
    "all",
    "any",
    "bool",
    "bytes",
    "float",
    "hasattr",
    "int",
    "isinstance",
    "issubclass",
    "len",
    "str",
    "tuple",
    "type",
    "typing.Any",
    "typing.Iterable",
    "typing.Mapping",
    "typing.MutableMapping",
    "typing.MutableSequence",
    "typing.Tuple",
    "typing._ForwardRef",
    "typing_extensions.Literal",
    "typing_inspect.get_args",
    "typing_inspect.get_origin",
    "typing_inspect.is_classvar",
    "typing_inspect.is_typevar",
    "typing_inspect.is_union_type",
    "zip"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "libcst._typed_visitor.Add": {
  "data": {
   "shadows": "libcst._nodes.op.Add"
  },
  "type": "import"
 },
 "libcst._typed_visitor.AddAssign": {
  "data": {
   "shadows": "libcst._nodes.op.AddAssign"
  },
  "type": "import"
 },
 "libcst._typed_visitor.And": {
  "data": {
   "shadows": "libcst._nodes.op.And"
  },
  "type": "import"
 },
 "libcst._typed_visitor.AnnAssign": {
  "data": {
   "shadows": "libcst._nodes.statement.AnnAssign"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Annotation": {
  "data": {
   "shadows": "libcst._nodes.expression.Annotation"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Arg": {
  "data": {
   "shadows": "libcst._nodes.expression.Arg"
  },
  "type": "import"
 },
 "libcst._typed_visitor.AsName": {
  "data": {
   "shadows": "libcst._nodes.statement.AsName"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Assert": {
  "data": {
   "shadows": "libcst._nodes.statement.Assert"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Assign": {
  "data": {
   "shadows": "libcst._nodes.statement.Assign"
  },
  "type": "import"
 },
 "libcst._typed_visitor.AssignEqual": {
  "data": {
   "shadows": "libcst._nodes.op.AssignEqual"
  },
  "type": "import"
 },
 "libcst._typed_visitor.AssignTarget": {
  "data": {
   "shadows": "libcst._nodes.statement.AssignTarget"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Asynchronous": {
  "data": {
   "shadows": "libcst._nodes.expression.Asynchronous"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Attribute": {
  "data": {
   "shadows": "libcst._nodes.expression.Attribute"
  },
  "type": "import"
 },
 "libcst._typed_visitor.AugAssign": {
  "data": {
   "shadows": "libcst._nodes.statement.AugAssign"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Await": {
  "data": {
   "shadows": "libcst._nodes.expression.Await"
  },
  "type": "import"
 },
 "libcst._typed_visitor.BaseAugOp": {
  "data": {
   "shadows": "libcst._nodes.op.BaseAugOp"
  },
  "type": "import"
 },
 "libcst._typed_visitor.BaseBinaryOp": {
  "data": {
   "shadows": "libcst._nodes.op.BaseBinaryOp"
  },
  "type": "import"
 },
 "libcst._typed_visitor.BaseBooleanOp": {
  "data": {
   "shadows": "libcst._nodes.op.BaseBooleanOp"
  },
  "type": "import"
 },
 "libcst._typed_visitor.BaseCompOp": {
  "data": {
   "shadows": "libcst._nodes.op.BaseCompOp"
  },
  "type": "import"
 },
 "libcst._typed_visitor.BaseDictElement": {
  "data": {
   "shadows": "libcst._nodes.expression.BaseDictElement"
  },
  "type": "import"
 },
 "libcst._typed_visitor.BaseElement": {
  "data": {
   "shadows": "libcst._nodes.expression.BaseElement"
  },
  "type": "import"
 },
 "libcst._typed_visitor.BaseExpression": {
  "data": {
   "shadows": "libcst._nodes.expression.BaseExpression"
  },
  "type": "import"
 },
 "libcst._typed_visitor.BaseFormattedStringContent": {
  "data": {
   "shadows": "libcst._nodes.expression.BaseFormattedStringContent"
  },
  "type": "import"
 },
 "libcst._typed_visitor.BaseParenthesizableWhitespace": {
  "data": {
   "shadows": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"
  },
  "type": "import"
 },
 "libcst._typed_visitor.BaseSlice": {
  "data": {
   "shadows": "libcst._nodes.expression.BaseSlice"
  },
  "type": "import"
 },
 "libcst._typed_visitor.BaseSmallStatement": {
  "data": {
   "shadows": "libcst._nodes.statement.BaseSmallStatement"
  },
  "type": "import"
 },
 "libcst._typed_visitor.BaseStatement": {
  "data": {
   "shadows": "libcst._nodes.statement.BaseStatement"
  },
  "type": "import"
 },
 "libcst._typed_visitor.BaseSuite": {
  "data": {
   "shadows": "libcst._nodes.statement.BaseSuite"
  },
  "type": "import"
 },
 "libcst._typed_visitor.BaseUnaryOp": {
  "data": {
   "shadows": "libcst._nodes.op.BaseUnaryOp"
  },
  "type": "import"
 },
 "libcst._typed_visitor.BinaryOperation": {
  "data": {
   "shadows": "libcst._nodes.expression.BinaryOperation"
  },
  "type": "import"
 },
 "libcst._typed_visitor.BitAnd": {
  "data": {
   "shadows": "libcst._nodes.op.BitAnd"
  },
  "type": "import"
 },
 "libcst._typed_visitor.BitAndAssign": {
  "data": {
   "shadows": "libcst._nodes.op.BitAndAssign"
  },
  "type": "import"
 },
 "libcst._typed_visitor.BitInvert": {
  "data": {
   "shadows": "libcst._nodes.op.BitInvert"
  },
  "type": "import"
 },
 "libcst._typed_visitor.BitOr": {
  "data": {
   "shadows": "libcst._nodes.op.BitOr"
  },
  "type": "import"
 },
 "libcst._typed_visitor.BitOrAssign": {
  "data": {
   "shadows": "libcst._nodes.op.BitOrAssign"
  },
  "type": "import"
 },
 "libcst._typed_visitor.BitXor": {
  "data": {
   "shadows": "libcst._nodes.op.BitXor"
  },
  "type": "import"
 },
 "libcst._typed_visitor.BitXorAssign": {
  "data": {
   "shadows": "libcst._nodes.op.BitXorAssign"
  },
  "type": "import"
 },
 "libcst._typed_visitor.BooleanOperation": {
  "data": {
   "shadows": "libcst._nodes.expression.BooleanOperation"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Break": {
  "data": {
   "shadows": "libcst._nodes.statement.Break"
  },
  "type": "import"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions": {
  "data": {
   "lineno": 183
  },
  "type": "class"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AddAssign_whitespace_after": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AddAssign_whitespace_before": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Add_whitespace_after": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Add_whitespace_before": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_And_whitespace_after": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_And_whitespace_before": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AnnAssign_annotation": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AnnAssign_equal": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AnnAssign_semicolon": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AnnAssign_target": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AnnAssign_value": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Annotation_annotation": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Annotation_whitespace_after_indicator": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Annotation_whitespace_before_indicator": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Arg_comma": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Arg_equal": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Arg_keyword": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Arg_star": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Arg_value": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Arg_whitespace_after_arg": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Arg_whitespace_after_star": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AsName_name": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AsName_whitespace_after_as": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AsName_whitespace_before_as": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Assert_comma": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Assert_msg": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Assert_semicolon": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Assert_test": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Assert_whitespace_after_assert": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AssignEqual_whitespace_after": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AssignEqual_whitespace_before": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AssignTarget_target": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AssignTarget_whitespace_after_equal": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AssignTarget_whitespace_before_equal": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Assign_semicolon": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Assign_targets": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Assign_value": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Asynchronous_whitespace_after": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Attribute_attr": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Attribute_dot": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Attribute_lpar": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Attribute_rpar": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Attribute_value": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AugAssign_operator": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AugAssign_semicolon": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AugAssign_target": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AugAssign_value": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Await_expression": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Await_lpar": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Await_rpar": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Await_whitespace_after_await": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BinaryOperation_left": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BinaryOperation_lpar": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BinaryOperation_operator": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BinaryOperation_right": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BinaryOperation_rpar": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BitAndAssign_whitespace_after": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BitAndAssign_whitespace_before": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BitAnd_whitespace_after": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BitAnd_whitespace_before": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BitInvert_whitespace_after": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BitOrAssign_whitespace_after": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BitOrAssign_whitespace_before": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BitOr_whitespace_after": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BitOr_whitespace_before": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BitXorAssign_whitespace_after": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BitXorAssign_whitespace_before": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BitXor_whitespace_after": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BitXor_whitespace_before": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BooleanOperation_left": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BooleanOperation_lpar": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BooleanOperation_operator": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BooleanOperation_right": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BooleanOperation_rpar": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Break_semicolon": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Call_args": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Call_func": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Call_lpar": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Call_rpar": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Call_whitespace_after_func": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Call_whitespace_before_args": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ClassDef_bases": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ClassDef_body": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ClassDef_decorators": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ClassDef_keywords": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ClassDef_leading_lines": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ClassDef_lines_after_decorators": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ClassDef_lpar": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ClassDef_name": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ClassDef_rpar": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ClassDef_whitespace_after_class": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ClassDef_whitespace_after_name": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ClassDef_whitespace_before_colon": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Colon_whitespace_after": {
  "data": {
   "lineno": 1052,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Colon_whitespace_before": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Comma_whitespace_after": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Comma_whitespace_before": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Comment_value": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_CompFor_asynchronous": {
  "data": {
   "lineno": 1128,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_CompFor_ifs": {
  "data": {
   "lineno": 1112,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_CompFor_inner_for_in": {
  "data": {
   "lineno": 1120,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_CompFor_iter": {
  "data": {
   "lineno": 1104,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_CompFor_target": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_CompFor_whitespace_after_for": {
  "data": {
   "lineno": 1144,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_CompFor_whitespace_after_in": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_CompFor_whitespace_before": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_CompFor_whitespace_before_in": {
  "data": {
   "lineno": 1152,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_CompIf_test": {
  "data": {
   "lineno": 1172,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_CompIf_whitespace_before": {
  "data": {
   "lineno": 1180,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_CompIf_whitespace_before_test": {
  "data": {
   "lineno": 1188,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ComparisonTarget_comparator": {
  "data": {
   "lineno": 1244,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ComparisonTarget_operator": {
  "data": {
   "lineno": 1236,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Comparison_comparisons": {
  "data": {
   "lineno": 1208,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Comparison_left": {
  "data": {
   "lineno": 1200,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Comparison_lpar": {
  "data": {
   "lineno": 1216,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Comparison_rpar": {
  "data": {
   "lineno": 1224,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ConcatenatedString_left": {
  "data": {
   "lineno": 1256,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ConcatenatedString_lpar": {
  "data": {
   "lineno": 1272,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ConcatenatedString_right": {
  "data": {
   "lineno": 1264,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ConcatenatedString_rpar": {
  "data": {
   "lineno": 1280,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ConcatenatedString_whitespace_between": {
  "data": {
   "lineno": 1290,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Continue_semicolon": {
  "data": {
   "lineno": 1304,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Decorator_decorator": {
  "data": {
   "lineno": 1316,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Decorator_leading_lines": {
  "data": {
   "lineno": 1324,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Decorator_trailing_whitespace": {
  "data": {
   "lineno": 1340,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Decorator_whitespace_after_at": {
  "data": {
   "lineno": 1332,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Del_semicolon": {
  "data": {
   "lineno": 1368,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Del_target": {
  "data": {
   "lineno": 1352,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Del_whitespace_after_del": {
  "data": {
   "lineno": 1360,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DictComp_for_in": {
  "data": {
   "lineno": 1440,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DictComp_key": {
  "data": {
   "lineno": 1424,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DictComp_lbrace": {
  "data": {
   "lineno": 1448,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DictComp_lpar": {
  "data": {
   "lineno": 1464,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DictComp_rbrace": {
  "data": {
   "lineno": 1456,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DictComp_rpar": {
  "data": {
   "lineno": 1472,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DictComp_value": {
  "data": {
   "lineno": 1432,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DictComp_whitespace_after_colon": {
  "data": {
   "lineno": 1488,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DictComp_whitespace_before_colon": {
  "data": {
   "lineno": 1480,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DictElement_comma": {
  "data": {
   "lineno": 1516,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DictElement_key": {
  "data": {
   "lineno": 1500,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DictElement_value": {
  "data": {
   "lineno": 1508,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DictElement_whitespace_after_colon": {
  "data": {
   "lineno": 1532,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DictElement_whitespace_before_colon": {
  "data": {
   "lineno": 1524,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Dict_elements": {
  "data": {
   "lineno": 1380,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Dict_lbrace": {
  "data": {
   "lineno": 1388,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Dict_lpar": {
  "data": {
   "lineno": 1404,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Dict_rbrace": {
  "data": {
   "lineno": 1396,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Dict_rpar": {
  "data": {
   "lineno": 1412,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DivideAssign_whitespace_after": {
  "data": {
   "lineno": 1572,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DivideAssign_whitespace_before": {
  "data": {
   "lineno": 1564,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Divide_whitespace_after": {
  "data": {
   "lineno": 1552,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Divide_whitespace_before": {
  "data": {
   "lineno": 1544,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Dot_whitespace_after": {
  "data": {
   "lineno": 1592,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Dot_whitespace_before": {
  "data": {
   "lineno": 1584,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Element_comma": {
  "data": {
   "lineno": 1612,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Element_value": {
  "data": {
   "lineno": 1604,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Ellipsis_lpar": {
  "data": {
   "lineno": 1624,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Ellipsis_rpar": {
  "data": {
   "lineno": 1632,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Else_body": {
  "data": {
   "lineno": 1644,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Else_leading_lines": {
  "data": {
   "lineno": 1652,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Else_whitespace_before_colon": {
  "data": {
   "lineno": 1660,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_EmptyLine_comment": {
  "data": {
   "lineno": 1688,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_EmptyLine_indent": {
  "data": {
   "lineno": 1672,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_EmptyLine_newline": {
  "data": {
   "lineno": 1696,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_EmptyLine_whitespace": {
  "data": {
   "lineno": 1680,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Equal_whitespace_after": {
  "data": {
   "lineno": 1716,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Equal_whitespace_before": {
  "data": {
   "lineno": 1708,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ExceptHandler_body": {
  "data": {
   "lineno": 1728,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ExceptHandler_leading_lines": {
  "data": {
   "lineno": 1752,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ExceptHandler_name": {
  "data": {
   "lineno": 1744,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ExceptHandler_type": {
  "data": {
   "lineno": 1736,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ExceptHandler_whitespace_after_except": {
  "data": {
   "lineno": 1762,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ExceptHandler_whitespace_before_colon": {
  "data": {
   "lineno": 1774,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Expr_semicolon": {
  "data": {
   "lineno": 1796,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Expr_value": {
  "data": {
   "lineno": 1788,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Finally_body": {
  "data": {
   "lineno": 1808,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Finally_leading_lines": {
  "data": {
   "lineno": 1816,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Finally_whitespace_before_colon": {
  "data": {
   "lineno": 1824,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Float_lpar": {
  "data": {
   "lineno": 1844,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Float_rpar": {
  "data": {
   "lineno": 1852,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Float_value": {
  "data": {
   "lineno": 1836,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FloorDivideAssign_whitespace_after": {
  "data": {
   "lineno": 1898,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FloorDivideAssign_whitespace_before": {
  "data": {
   "lineno": 1886,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FloorDivide_whitespace_after": {
  "data": {
   "lineno": 1872,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FloorDivide_whitespace_before": {
  "data": {
   "lineno": 1864,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_For_asynchronous": {
  "data": {
   "lineno": 1944,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_For_body": {
  "data": {
   "lineno": 1928,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_For_iter": {
  "data": {
   "lineno": 1920,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_For_leading_lines": {
  "data": {
   "lineno": 1952,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_For_orelse": {
  "data": {
   "lineno": 1936,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_For_target": {
  "data": {
   "lineno": 1912,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_For_whitespace_after_for": {
  "data": {
   "lineno": 1960,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_For_whitespace_after_in": {
  "data": {
   "lineno": 1976,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_For_whitespace_before_colon": {
  "data": {
   "lineno": 1984,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_For_whitespace_before_in": {
  "data": {
   "lineno": 1968,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FormattedStringExpression_conversion": {
  "data": {
   "lineno": 2056,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FormattedStringExpression_equal": {
  "data": {
   "lineno": 2104,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FormattedStringExpression_expression": {
  "data": {
   "lineno": 2044,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FormattedStringExpression_format_spec": {
  "data": {
   "lineno": 2068,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FormattedStringExpression_whitespace_after_expression": {
  "data": {
   "lineno": 2092,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FormattedStringExpression_whitespace_before_expression": {
  "data": {
   "lineno": 2080,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FormattedStringText_value": {
  "data": {
   "lineno": 2118,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FormattedString_end": {
  "data": {
   "lineno": 2012,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FormattedString_lpar": {
  "data": {
   "lineno": 2020,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FormattedString_parts": {
  "data": {
   "lineno": 1996,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FormattedString_rpar": {
  "data": {
   "lineno": 2028,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FormattedString_start": {
  "data": {
   "lineno": 2004,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_From_item": {
  "data": {
   "lineno": 2130,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_From_whitespace_after_from": {
  "data": {
   "lineno": 2146,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_From_whitespace_before_from": {
  "data": {
   "lineno": 2138,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FunctionDef_asynchronous": {
  "data": {
   "lineno": 2198,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FunctionDef_body": {
  "data": {
   "lineno": 2174,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FunctionDef_decorators": {
  "data": {
   "lineno": 2182,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FunctionDef_leading_lines": {
  "data": {
   "lineno": 2206,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FunctionDef_lines_after_decorators": {
  "data": {
   "lineno": 2214,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FunctionDef_name": {
  "data": {
   "lineno": 2158,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FunctionDef_params": {
  "data": {
   "lineno": 2166,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FunctionDef_returns": {
  "data": {
   "lineno": 2190,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FunctionDef_whitespace_after_def": {
  "data": {
   "lineno": 2222,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FunctionDef_whitespace_after_name": {
  "data": {
   "lineno": 2230,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FunctionDef_whitespace_before_colon": {
  "data": {
   "lineno": 2246,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FunctionDef_whitespace_before_params": {
  "data": {
   "lineno": 2238,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_GeneratorExp_elt": {
  "data": {
   "lineno": 2258,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_GeneratorExp_for_in": {
  "data": {
   "lineno": 2266,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_GeneratorExp_lpar": {
  "data": {
   "lineno": 2274,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_GeneratorExp_rpar": {
  "data": {
   "lineno": 2282,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Global_names": {
  "data": {
   "lineno": 2294,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Global_semicolon": {
  "data": {
   "lineno": 2310,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Global_whitespace_after_global": {
  "data": {
   "lineno": 2302,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_GreaterThanEqual_whitespace_after": {
  "data": {
   "lineno": 2354,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_GreaterThanEqual_whitespace_before": {
  "data": {
   "lineno": 2344,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_GreaterThan_whitespace_after": {
  "data": {
   "lineno": 2330,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_GreaterThan_whitespace_before": {
  "data": {
   "lineno": 2322,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IfExp_body": {
  "data": {
   "lineno": 2426,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IfExp_lpar": {
  "data": {
   "lineno": 2442,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IfExp_orelse": {
  "data": {
   "lineno": 2434,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IfExp_rpar": {
  "data": {
   "lineno": 2450,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IfExp_test": {
  "data": {
   "lineno": 2418,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IfExp_whitespace_after_else": {
  "data": {
   "lineno": 2482,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IfExp_whitespace_after_if": {
  "data": {
   "lineno": 2466,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IfExp_whitespace_before_else": {
  "data": {
   "lineno": 2474,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IfExp_whitespace_before_if": {
  "data": {
   "lineno": 2458,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_If_body": {
  "data": {
   "lineno": 2374,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_If_leading_lines": {
  "data": {
   "lineno": 2390,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_If_orelse": {
  "data": {
   "lineno": 2382,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_If_test": {
  "data": {
   "lineno": 2366,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_If_whitespace_after_test": {
  "data": {
   "lineno": 2406,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_If_whitespace_before_test": {
  "data": {
   "lineno": 2398,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Imaginary_lpar": {
  "data": {
   "lineno": 2502,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Imaginary_rpar": {
  "data": {
   "lineno": 2510,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Imaginary_value": {
  "data": {
   "lineno": 2494,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ImportAlias_asname": {
  "data": {
   "lineno": 2558,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ImportAlias_comma": {
  "data": {
   "lineno": 2566,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ImportAlias_name": {
  "data": {
   "lineno": 2550,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ImportFrom_lpar": {
  "data": {
   "lineno": 2602,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ImportFrom_module": {
  "data": {
   "lineno": 2578,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ImportFrom_names": {
  "data": {
   "lineno": 2586,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ImportFrom_relative": {
  "data": {
   "lineno": 2594,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ImportFrom_rpar": {
  "data": {
   "lineno": 2610,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ImportFrom_semicolon": {
  "data": {
   "lineno": 2618,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ImportFrom_whitespace_after_from": {
  "data": {
   "lineno": 2626,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ImportFrom_whitespace_after_import": {
  "data": {
   "lineno": 2642,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ImportFrom_whitespace_before_import": {
  "data": {
   "lineno": 2634,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Import_names": {
  "data": {
   "lineno": 2522,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Import_semicolon": {
  "data": {
   "lineno": 2530,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Import_whitespace_after_import": {
  "data": {
   "lineno": 2538,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_In_whitespace_after": {
  "data": {
   "lineno": 2666,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_In_whitespace_before": {
  "data": {
   "lineno": 2658,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IndentedBlock_body": {
  "data": {
   "lineno": 2678,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IndentedBlock_footer": {
  "data": {
   "lineno": 2702,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IndentedBlock_header": {
  "data": {
   "lineno": 2686,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IndentedBlock_indent": {
  "data": {
   "lineno": 2694,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Index_value": {
  "data": {
   "lineno": 2714,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Integer_lpar": {
  "data": {
   "lineno": 2734,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Integer_rpar": {
  "data": {
   "lineno": 2742,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Integer_value": {
  "data": {
   "lineno": 2726,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IsNot_whitespace_after": {
  "data": {
   "lineno": 2790,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IsNot_whitespace_before": {
  "data": {
   "lineno": 2774,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IsNot_whitespace_between": {
  "data": {
   "lineno": 2782,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Is_whitespace_after": {
  "data": {
   "lineno": 2762,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Is_whitespace_before": {
  "data": {
   "lineno": 2754,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Lambda_body": {
  "data": {
   "lineno": 2810,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Lambda_colon": {
  "data": {
   "lineno": 2818,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Lambda_lpar": {
  "data": {
   "lineno": 2826,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Lambda_params": {
  "data": {
   "lineno": 2802,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Lambda_rpar": {
  "data": {
   "lineno": 2834,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Lambda_whitespace_after_lambda": {
  "data": {
   "lineno": 2842,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_LeftCurlyBrace_whitespace_after": {
  "data": {
   "lineno": 2854,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_LeftParen_whitespace_after": {
  "data": {
   "lineno": 2866,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_LeftShiftAssign_whitespace_after": {
  "data": {
   "lineno": 2906,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_LeftShiftAssign_whitespace_before": {
  "data": {
   "lineno": 2898,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_LeftShift_whitespace_after": {
  "data": {
   "lineno": 2886,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_LeftShift_whitespace_before": {
  "data": {
   "lineno": 2878,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_LeftSquareBracket_whitespace_after": {
  "data": {
   "lineno": 2920,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_LessThanEqual_whitespace_after": {
  "data": {
   "lineno": 2962,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_LessThanEqual_whitespace_before": {
  "data": {
   "lineno": 2954,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_LessThan_whitespace_after": {
  "data": {
   "lineno": 2942,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_LessThan_whitespace_before": {
  "data": {
   "lineno": 2934,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ListComp_elt": {
  "data": {
   "lineno": 3018,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ListComp_for_in": {
  "data": {
   "lineno": 3026,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ListComp_lbracket": {
  "data": {
   "lineno": 3034,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ListComp_lpar": {
  "data": {
   "lineno": 3050,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ListComp_rbracket": {
  "data": {
   "lineno": 3042,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ListComp_rpar": {
  "data": {
   "lineno": 3058,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_List_elements": {
  "data": {
   "lineno": 2974,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_List_lbracket": {
  "data": {
   "lineno": 2982,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_List_lpar": {
  "data": {
   "lineno": 2998,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_List_rbracket": {
  "data": {
   "lineno": 2990,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_List_rpar": {
  "data": {
   "lineno": 3006,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_MatrixMultiplyAssign_whitespace_after": {
  "data": {
   "lineno": 3106,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_MatrixMultiplyAssign_whitespace_before": {
  "data": {
   "lineno": 3094,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_MatrixMultiply_whitespace_after": {
  "data": {
   "lineno": 3078,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_MatrixMultiply_whitespace_before": {
  "data": {
   "lineno": 3070,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Minus_whitespace_after": {
  "data": {
   "lineno": 3120,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Module_body": {
  "data": {
   "lineno": 3132,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Module_default_indent": {
  "data": {
   "lineno": 3164,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Module_default_newline": {
  "data": {
   "lineno": 3172,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Module_encoding": {
  "data": {
   "lineno": 3156,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Module_footer": {
  "data": {
   "lineno": 3148,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Module_has_trailing_newline": {
  "data": {
   "lineno": 3180,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Module_header": {
  "data": {
   "lineno": 3140,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ModuloAssign_whitespace_after": {
  "data": {
   "lineno": 3220,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ModuloAssign_whitespace_before": {
  "data": {
   "lineno": 3212,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Modulo_whitespace_after": {
  "data": {
   "lineno": 3200,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Modulo_whitespace_before": {
  "data": {
   "lineno": 3192,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_MultiplyAssign_whitespace_after": {
  "data": {
   "lineno": 3260,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_MultiplyAssign_whitespace_before": {
  "data": {
   "lineno": 3252,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Multiply_whitespace_after": {
  "data": {
   "lineno": 3240,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Multiply_whitespace_before": {
  "data": {
   "lineno": 3232,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_NameItem_comma": {
  "data": {
   "lineno": 3308,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_NameItem_name": {
  "data": {
   "lineno": 3300,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Name_lpar": {
  "data": {
   "lineno": 3280,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Name_rpar": {
  "data": {
   "lineno": 3288,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Name_value": {
  "data": {
   "lineno": 3272,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_NamedExpr_lpar": {
  "data": {
   "lineno": 3336,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_NamedExpr_rpar": {
  "data": {
   "lineno": 3344,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_NamedExpr_target": {
  "data": {
   "lineno": 3320,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_NamedExpr_value": {
  "data": {
   "lineno": 3328,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_NamedExpr_whitespace_after_walrus": {
  "data": {
   "lineno": 3360,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_NamedExpr_whitespace_before_walrus": {
  "data": {
   "lineno": 3352,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Newline_value": {
  "data": {
   "lineno": 3372,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Nonlocal_names": {
  "data": {
   "lineno": 3384,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Nonlocal_semicolon": {
  "data": {
   "lineno": 3400,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Nonlocal_whitespace_after_nonlocal": {
  "data": {
   "lineno": 3392,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_NotEqual_value": {
  "data": {
   "lineno": 3424,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_NotEqual_whitespace_after": {
  "data": {
   "lineno": 3440,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_NotEqual_whitespace_before": {
  "data": {
   "lineno": 3432,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_NotIn_whitespace_after": {
  "data": {
   "lineno": 3468,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_NotIn_whitespace_before": {
  "data": {
   "lineno": 3452,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_NotIn_whitespace_between": {
  "data": {
   "lineno": 3460,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Not_whitespace_after": {
  "data": {
   "lineno": 3412,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Or_whitespace_after": {
  "data": {
   "lineno": 3488,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Or_whitespace_before": {
  "data": {
   "lineno": 3480,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ParamSlash_comma": {
  "data": {
   "lineno": 3568,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ParamStar_comma": {
  "data": {
   "lineno": 3580,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Param_annotation": {
  "data": {
   "lineno": 3508,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Param_comma": {
  "data": {
   "lineno": 3532,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Param_default": {
  "data": {
   "lineno": 3524,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Param_equal": {
  "data": {
   "lineno": 3516,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Param_name": {
  "data": {
   "lineno": 3500,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Param_star": {
  "data": {
   "lineno": 3540,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Param_whitespace_after_param": {
  "data": {
   "lineno": 3556,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Param_whitespace_after_star": {
  "data": {
   "lineno": 3548,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Parameters_kwonly_params": {
  "data": {
   "lineno": 3608,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Parameters_params": {
  "data": {
   "lineno": 3592,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Parameters_posonly_ind": {
  "data": {
   "lineno": 3632,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Parameters_posonly_params": {
  "data": {
   "lineno": 3624,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Parameters_star_arg": {
  "data": {
   "lineno": 3600,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Parameters_star_kwarg": {
  "data": {
   "lineno": 3616,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ParenthesizedWhitespace_empty_lines": {
  "data": {
   "lineno": 3660,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ParenthesizedWhitespace_first_line": {
  "data": {
   "lineno": 3648,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ParenthesizedWhitespace_indent": {
  "data": {
   "lineno": 3672,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ParenthesizedWhitespace_last_line": {
  "data": {
   "lineno": 3684,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Pass_semicolon": {
  "data": {
   "lineno": 3698,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Plus_whitespace_after": {
  "data": {
   "lineno": 3710,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_PowerAssign_whitespace_after": {
  "data": {
   "lineno": 3750,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_PowerAssign_whitespace_before": {
  "data": {
   "lineno": 3742,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Power_whitespace_after": {
  "data": {
   "lineno": 3730,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Power_whitespace_before": {
  "data": {
   "lineno": 3722,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Raise_cause": {
  "data": {
   "lineno": 3770,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Raise_exc": {
  "data": {
   "lineno": 3762,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Raise_semicolon": {
  "data": {
   "lineno": 3786,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Raise_whitespace_after_raise": {
  "data": {
   "lineno": 3778,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Return_semicolon": {
  "data": {
   "lineno": 3814,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Return_value": {
  "data": {
   "lineno": 3798,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Return_whitespace_after_return": {
  "data": {
   "lineno": 3806,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_RightCurlyBrace_whitespace_before": {
  "data": {
   "lineno": 3826,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_RightParen_whitespace_before": {
  "data": {
   "lineno": 3838,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_RightShiftAssign_whitespace_after": {
  "data": {
   "lineno": 3882,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_RightShiftAssign_whitespace_before": {
  "data": {
   "lineno": 3872,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_RightShift_whitespace_after": {
  "data": {
   "lineno": 3858,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_RightShift_whitespace_before": {
  "data": {
   "lineno": 3850,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_RightSquareBracket_whitespace_before": {
  "data": {
   "lineno": 3896,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Semicolon_whitespace_after": {
  "data": {
   "lineno": 3918,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Semicolon_whitespace_before": {
  "data": {
   "lineno": 3910,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SetComp_elt": {
  "data": {
   "lineno": 3974,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SetComp_for_in": {
  "data": {
   "lineno": 3982,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SetComp_lbrace": {
  "data": {
   "lineno": 3990,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SetComp_lpar": {
  "data": {
   "lineno": 4006,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SetComp_rbrace": {
  "data": {
   "lineno": 3998,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SetComp_rpar": {
  "data": {
   "lineno": 4014,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Set_elements": {
  "data": {
   "lineno": 3930,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Set_lbrace": {
  "data": {
   "lineno": 3938,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Set_lpar": {
  "data": {
   "lineno": 3954,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Set_rbrace": {
  "data": {
   "lineno": 3946,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Set_rpar": {
  "data": {
   "lineno": 3962,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SimpleStatementLine_body": {
  "data": {
   "lineno": 4026,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SimpleStatementLine_leading_lines": {
  "data": {
   "lineno": 4036,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SimpleStatementLine_trailing_whitespace": {
  "data": {
   "lineno": 4048,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SimpleStatementSuite_body": {
  "data": {
   "lineno": 4064,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SimpleStatementSuite_leading_whitespace": {
  "data": {
   "lineno": 4074,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SimpleStatementSuite_trailing_whitespace": {
  "data": {
   "lineno": 4086,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SimpleString_lpar": {
  "data": {
   "lineno": 4108,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SimpleString_rpar": {
  "data": {
   "lineno": 4116,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SimpleString_value": {
  "data": {
   "lineno": 4100,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SimpleWhitespace_value": {
  "data": {
   "lineno": 4128,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Slice_first_colon": {
  "data": {
   "lineno": 4164,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Slice_lower": {
  "data": {
   "lineno": 4140,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Slice_second_colon": {
  "data": {
   "lineno": 4172,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Slice_step": {
  "data": {
   "lineno": 4156,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Slice_upper": {
  "data": {
   "lineno": 4148,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_StarredDictElement_comma": {
  "data": {
   "lineno": 4192,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_StarredDictElement_value": {
  "data": {
   "lineno": 4184,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_StarredDictElement_whitespace_before_value": {
  "data": {
   "lineno": 4202,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_StarredElement_comma": {
  "data": {
   "lineno": 4224,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_StarredElement_lpar": {
  "data": {
   "lineno": 4232,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_StarredElement_rpar": {
  "data": {
   "lineno": 4240,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_StarredElement_value": {
  "data": {
   "lineno": 4216,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_StarredElement_whitespace_before_value": {
  "data": {
   "lineno": 4250,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SubscriptElement_comma": {
  "data": {
   "lineno": 4332,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SubscriptElement_slice": {
  "data": {
   "lineno": 4324,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Subscript_lbracket": {
  "data": {
   "lineno": 4280,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Subscript_lpar": {
  "data": {
   "lineno": 4296,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Subscript_rbracket": {
  "data": {
   "lineno": 4288,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Subscript_rpar": {
  "data": {
   "lineno": 4304,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Subscript_slice": {
  "data": {
   "lineno": 4272,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Subscript_value": {
  "data": {
   "lineno": 4264,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Subscript_whitespace_after_value": {
  "data": {
   "lineno": 4312,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SubtractAssign_whitespace_after": {
  "data": {
   "lineno": 4372,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SubtractAssign_whitespace_before": {
  "data": {
   "lineno": 4364,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Subtract_whitespace_after": {
  "data": {
   "lineno": 4352,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Subtract_whitespace_before": {
  "data": {
   "lineno": 4344,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_TrailingWhitespace_comment": {
  "data": {
   "lineno": 4392,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_TrailingWhitespace_newline": {
  "data": {
   "lineno": 4400,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_TrailingWhitespace_whitespace": {
  "data": {
   "lineno": 4384,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Try_body": {
  "data": {
   "lineno": 4412,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Try_finalbody": {
  "data": {
   "lineno": 4436,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Try_handlers": {
  "data": {
   "lineno": 4420,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Try_leading_lines": {
  "data": {
   "lineno": 4444,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Try_orelse": {
  "data": {
   "lineno": 4428,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Try_whitespace_before_colon": {
  "data": {
   "lineno": 4452,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Tuple_elements": {
  "data": {
   "lineno": 4464,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Tuple_lpar": {
  "data": {
   "lineno": 4472,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Tuple_rpar": {
  "data": {
   "lineno": 4480,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_UnaryOperation_expression": {
  "data": {
   "lineno": 4500,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_UnaryOperation_lpar": {
  "data": {
   "lineno": 4508,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_UnaryOperation_operator": {
  "data": {
   "lineno": 4492,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_UnaryOperation_rpar": {
  "data": {
   "lineno": 4516,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_While_body": {
  "data": {
   "lineno": 4536,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_While_leading_lines": {
  "data": {
   "lineno": 4552,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_While_orelse": {
  "data": {
   "lineno": 4544,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_While_test": {
  "data": {
   "lineno": 4528,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_While_whitespace_after_while": {
  "data": {
   "lineno": 4560,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_While_whitespace_before_colon": {
  "data": {
   "lineno": 4568,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_WithItem_asname": {
  "data": {
   "lineno": 4640,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_WithItem_comma": {
  "data": {
   "lineno": 4648,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_WithItem_item": {
  "data": {
   "lineno": 4632,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_With_asynchronous": {
  "data": {
   "lineno": 4596,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_With_body": {
  "data": {
   "lineno": 4588,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_With_items": {
  "data": {
   "lineno": 4580,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_With_leading_lines": {
  "data": {
   "lineno": 4604,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_With_whitespace_after_with": {
  "data": {
   "lineno": 4612,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_With_whitespace_before_colon": {
  "data": {
   "lineno": 4620,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Yield_lpar": {
  "data": {
   "lineno": 4668,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Yield_rpar": {
  "data": {
   "lineno": 4676,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Yield_value": {
  "data": {
   "lineno": 4660,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Yield_whitespace_after_yield": {
  "data": {
   "lineno": 4684,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Add": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AddAssign": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AddAssign_whitespace_after": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AddAssign_whitespace_before": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Add_whitespace_after": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Add_whitespace_before": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_And": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_And_whitespace_after": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_And_whitespace_before": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AnnAssign": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AnnAssign_annotation": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AnnAssign_equal": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AnnAssign_semicolon": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AnnAssign_target": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AnnAssign_value": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Annotation": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Annotation_annotation": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Annotation_whitespace_after_indicator": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Annotation_whitespace_before_indicator": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Arg": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Arg_comma": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Arg_equal": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Arg_keyword": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Arg_star": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Arg_value": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Arg_whitespace_after_arg": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Arg_whitespace_after_star": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AsName": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AsName_name": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AsName_whitespace_after_as": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AsName_whitespace_before_as": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Assert": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Assert_comma": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Assert_msg": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Assert_semicolon": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Assert_test": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Assert_whitespace_after_assert": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Assign": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AssignEqual": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AssignEqual_whitespace_after": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AssignEqual_whitespace_before": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AssignTarget": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AssignTarget_target": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AssignTarget_whitespace_after_equal": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AssignTarget_whitespace_before_equal": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Assign_semicolon": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Assign_targets": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Assign_value": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Asynchronous": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Asynchronous_whitespace_after": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Attribute": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Attribute_attr": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Attribute_dot": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Attribute_lpar": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Attribute_rpar": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Attribute_value": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AugAssign": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AugAssign_operator": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AugAssign_semicolon": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AugAssign_target": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AugAssign_value": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Await": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Await_expression": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Await_lpar": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Await_rpar": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Await_whitespace_after_await": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BinaryOperation": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BinaryOperation_left": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BinaryOperation_lpar": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BinaryOperation_operator": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BinaryOperation_right": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BinaryOperation_rpar": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitAnd": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitAndAssign": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitAndAssign_whitespace_after": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitAndAssign_whitespace_before": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitAnd_whitespace_after": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitAnd_whitespace_before": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitInvert": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitInvert_whitespace_after": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitOr": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitOrAssign": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitOrAssign_whitespace_after": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitOrAssign_whitespace_before": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitOr_whitespace_after": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitOr_whitespace_before": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitXor": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitXorAssign": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitXorAssign_whitespace_after": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitXorAssign_whitespace_before": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitXor_whitespace_after": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitXor_whitespace_before": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BooleanOperation": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BooleanOperation_left": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BooleanOperation_lpar": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BooleanOperation_operator": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BooleanOperation_right": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BooleanOperation_rpar": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Break": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Break_semicolon": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Call": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Call_args": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Call_func": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Call_lpar": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Call_rpar": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Call_whitespace_after_func": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Call_whitespace_before_args": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ClassDef": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ClassDef_bases": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ClassDef_body": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ClassDef_decorators": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ClassDef_keywords": {
  "data": {
   "lineno": 964,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ClassDef_leading_lines": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ClassDef_lines_after_decorators": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ClassDef_lpar": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ClassDef_name": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ClassDef_rpar": {
  "data": {
   "lineno": 988,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ClassDef_whitespace_after_class": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ClassDef_whitespace_after_name": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ClassDef_whitespace_before_colon": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Colon": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Colon_whitespace_after": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Colon_whitespace_before": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Comma": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Comma_whitespace_after": {
  "data": {
   "lineno": 1068,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Comma_whitespace_before": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Comment": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Comment_value": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_CompFor": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_CompFor_asynchronous": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_CompFor_ifs": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_CompFor_inner_for_in": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_CompFor_iter": {
  "data": {
   "lineno": 1100,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_CompFor_target": {
  "data": {
   "lineno": 1092,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_CompFor_whitespace_after_for": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_CompFor_whitespace_after_in": {
  "data": {
   "lineno": 1156,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_CompFor_whitespace_before": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_CompFor_whitespace_before_in": {
  "data": {
   "lineno": 1148,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_CompIf": {
  "data": {
   "lineno": 1164,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_CompIf_test": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_CompIf_whitespace_before": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_CompIf_whitespace_before_test": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Comparison": {
  "data": {
   "lineno": 1192,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ComparisonTarget": {
  "data": {
   "lineno": 1228,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ComparisonTarget_comparator": {
  "data": {
   "lineno": 1240,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ComparisonTarget_operator": {
  "data": {
   "lineno": 1232,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Comparison_comparisons": {
  "data": {
   "lineno": 1204,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Comparison_left": {
  "data": {
   "lineno": 1196,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Comparison_lpar": {
  "data": {
   "lineno": 1212,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Comparison_rpar": {
  "data": {
   "lineno": 1220,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ConcatenatedString": {
  "data": {
   "lineno": 1248,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ConcatenatedString_left": {
  "data": {
   "lineno": 1252,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ConcatenatedString_lpar": {
  "data": {
   "lineno": 1268,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ConcatenatedString_right": {
  "data": {
   "lineno": 1260,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ConcatenatedString_rpar": {
  "data": {
   "lineno": 1276,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ConcatenatedString_whitespace_between": {
  "data": {
   "lineno": 1284,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Continue": {
  "data": {
   "lineno": 1296,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Continue_semicolon": {
  "data": {
   "lineno": 1300,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Decorator": {
  "data": {
   "lineno": 1308,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Decorator_decorator": {
  "data": {
   "lineno": 1312,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Decorator_leading_lines": {
  "data": {
   "lineno": 1320,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Decorator_trailing_whitespace": {
  "data": {
   "lineno": 1336,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Decorator_whitespace_after_at": {
  "data": {
   "lineno": 1328,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Del": {
  "data": {
   "lineno": 1344,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Del_semicolon": {
  "data": {
   "lineno": 1364,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Del_target": {
  "data": {
   "lineno": 1348,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Del_whitespace_after_del": {
  "data": {
   "lineno": 1356,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Dict": {
  "data": {
   "lineno": 1372,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictComp": {
  "data": {
   "lineno": 1416,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictComp_for_in": {
  "data": {
   "lineno": 1436,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictComp_key": {
  "data": {
   "lineno": 1420,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictComp_lbrace": {
  "data": {
   "lineno": 1444,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictComp_lpar": {
  "data": {
   "lineno": 1460,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictComp_rbrace": {
  "data": {
   "lineno": 1452,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictComp_rpar": {
  "data": {
   "lineno": 1468,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictComp_value": {
  "data": {
   "lineno": 1428,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictComp_whitespace_after_colon": {
  "data": {
   "lineno": 1484,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictComp_whitespace_before_colon": {
  "data": {
   "lineno": 1476,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictElement": {
  "data": {
   "lineno": 1492,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictElement_comma": {
  "data": {
   "lineno": 1512,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictElement_key": {
  "data": {
   "lineno": 1496,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictElement_value": {
  "data": {
   "lineno": 1504,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictElement_whitespace_after_colon": {
  "data": {
   "lineno": 1528,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictElement_whitespace_before_colon": {
  "data": {
   "lineno": 1520,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Dict_elements": {
  "data": {
   "lineno": 1376,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Dict_lbrace": {
  "data": {
   "lineno": 1384,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Dict_lpar": {
  "data": {
   "lineno": 1400,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Dict_rbrace": {
  "data": {
   "lineno": 1392,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Dict_rpar": {
  "data": {
   "lineno": 1408,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Divide": {
  "data": {
   "lineno": 1536,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DivideAssign": {
  "data": {
   "lineno": 1556,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DivideAssign_whitespace_after": {
  "data": {
   "lineno": 1568,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DivideAssign_whitespace_before": {
  "data": {
   "lineno": 1560,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Divide_whitespace_after": {
  "data": {
   "lineno": 1548,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Divide_whitespace_before": {
  "data": {
   "lineno": 1540,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Dot": {
  "data": {
   "lineno": 1576,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Dot_whitespace_after": {
  "data": {
   "lineno": 1588,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Dot_whitespace_before": {
  "data": {
   "lineno": 1580,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Element": {
  "data": {
   "lineno": 1596,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Element_comma": {
  "data": {
   "lineno": 1608,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Element_value": {
  "data": {
   "lineno": 1600,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Ellipsis": {
  "data": {
   "lineno": 1616,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Ellipsis_lpar": {
  "data": {
   "lineno": 1620,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Ellipsis_rpar": {
  "data": {
   "lineno": 1628,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Else": {
  "data": {
   "lineno": 1636,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Else_body": {
  "data": {
   "lineno": 1640,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Else_leading_lines": {
  "data": {
   "lineno": 1648,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Else_whitespace_before_colon": {
  "data": {
   "lineno": 1656,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_EmptyLine": {
  "data": {
   "lineno": 1664,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_EmptyLine_comment": {
  "data": {
   "lineno": 1684,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_EmptyLine_indent": {
  "data": {
   "lineno": 1668,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_EmptyLine_newline": {
  "data": {
   "lineno": 1692,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_EmptyLine_whitespace": {
  "data": {
   "lineno": 1676,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Equal": {
  "data": {
   "lineno": 1700,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Equal_whitespace_after": {
  "data": {
   "lineno": 1712,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Equal_whitespace_before": {
  "data": {
   "lineno": 1704,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ExceptHandler": {
  "data": {
   "lineno": 1720,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ExceptHandler_body": {
  "data": {
   "lineno": 1724,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ExceptHandler_leading_lines": {
  "data": {
   "lineno": 1748,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ExceptHandler_name": {
  "data": {
   "lineno": 1740,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ExceptHandler_type": {
  "data": {
   "lineno": 1732,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ExceptHandler_whitespace_after_except": {
  "data": {
   "lineno": 1756,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ExceptHandler_whitespace_before_colon": {
  "data": {
   "lineno": 1768,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Expr": {
  "data": {
   "lineno": 1780,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Expr_semicolon": {
  "data": {
   "lineno": 1792,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Expr_value": {
  "data": {
   "lineno": 1784,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Finally": {
  "data": {
   "lineno": 1800,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Finally_body": {
  "data": {
   "lineno": 1804,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Finally_leading_lines": {
  "data": {
   "lineno": 1812,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Finally_whitespace_before_colon": {
  "data": {
   "lineno": 1820,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Float": {
  "data": {
   "lineno": 1828,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Float_lpar": {
  "data": {
   "lineno": 1840,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Float_rpar": {
  "data": {
   "lineno": 1848,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Float_value": {
  "data": {
   "lineno": 1832,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FloorDivide": {
  "data": {
   "lineno": 1856,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FloorDivideAssign": {
  "data": {
   "lineno": 1876,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FloorDivideAssign_whitespace_after": {
  "data": {
   "lineno": 1892,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FloorDivideAssign_whitespace_before": {
  "data": {
   "lineno": 1880,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FloorDivide_whitespace_after": {
  "data": {
   "lineno": 1868,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FloorDivide_whitespace_before": {
  "data": {
   "lineno": 1860,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_For": {
  "data": {
   "lineno": 1904,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_For_asynchronous": {
  "data": {
   "lineno": 1940,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_For_body": {
  "data": {
   "lineno": 1924,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_For_iter": {
  "data": {
   "lineno": 1916,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_For_leading_lines": {
  "data": {
   "lineno": 1948,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_For_orelse": {
  "data": {
   "lineno": 1932,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_For_target": {
  "data": {
   "lineno": 1908,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_For_whitespace_after_for": {
  "data": {
   "lineno": 1956,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_For_whitespace_after_in": {
  "data": {
   "lineno": 1972,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_For_whitespace_before_colon": {
  "data": {
   "lineno": 1980,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_For_whitespace_before_in": {
  "data": {
   "lineno": 1964,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FormattedString": {
  "data": {
   "lineno": 1988,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FormattedStringExpression": {
  "data": {
   "lineno": 2032,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FormattedStringExpression_conversion": {
  "data": {
   "lineno": 2050,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FormattedStringExpression_equal": {
  "data": {
   "lineno": 2098,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FormattedStringExpression_expression": {
  "data": {
   "lineno": 2038,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FormattedStringExpression_format_spec": {
  "data": {
   "lineno": 2062,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FormattedStringExpression_whitespace_after_expression": {
  "data": {
   "lineno": 2086,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FormattedStringExpression_whitespace_before_expression": {
  "data": {
   "lineno": 2074,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FormattedStringText": {
  "data": {
   "lineno": 2110,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FormattedStringText_value": {
  "data": {
   "lineno": 2114,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FormattedString_end": {
  "data": {
   "lineno": 2008,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FormattedString_lpar": {
  "data": {
   "lineno": 2016,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FormattedString_parts": {
  "data": {
   "lineno": 1992,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FormattedString_rpar": {
  "data": {
   "lineno": 2024,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FormattedString_start": {
  "data": {
   "lineno": 2000,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_From": {
  "data": {
   "lineno": 2122,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_From_item": {
  "data": {
   "lineno": 2126,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_From_whitespace_after_from": {
  "data": {
   "lineno": 2142,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_From_whitespace_before_from": {
  "data": {
   "lineno": 2134,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FunctionDef": {
  "data": {
   "lineno": 2150,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FunctionDef_asynchronous": {
  "data": {
   "lineno": 2194,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FunctionDef_body": {
  "data": {
   "lineno": 2170,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FunctionDef_decorators": {
  "data": {
   "lineno": 2178,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FunctionDef_leading_lines": {
  "data": {
   "lineno": 2202,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FunctionDef_lines_after_decorators": {
  "data": {
   "lineno": 2210,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FunctionDef_name": {
  "data": {
   "lineno": 2154,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FunctionDef_params": {
  "data": {
   "lineno": 2162,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FunctionDef_returns": {
  "data": {
   "lineno": 2186,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FunctionDef_whitespace_after_def": {
  "data": {
   "lineno": 2218,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FunctionDef_whitespace_after_name": {
  "data": {
   "lineno": 2226,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FunctionDef_whitespace_before_colon": {
  "data": {
   "lineno": 2242,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FunctionDef_whitespace_before_params": {
  "data": {
   "lineno": 2234,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_GeneratorExp": {
  "data": {
   "lineno": 2250,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_GeneratorExp_elt": {
  "data": {
   "lineno": 2254,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_GeneratorExp_for_in": {
  "data": {
   "lineno": 2262,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_GeneratorExp_lpar": {
  "data": {
   "lineno": 2270,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_GeneratorExp_rpar": {
  "data": {
   "lineno": 2278,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Global": {
  "data": {
   "lineno": 2286,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Global_names": {
  "data": {
   "lineno": 2290,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Global_semicolon": {
  "data": {
   "lineno": 2306,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Global_whitespace_after_global": {
  "data": {
   "lineno": 2298,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_GreaterThan": {
  "data": {
   "lineno": 2314,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_GreaterThanEqual": {
  "data": {
   "lineno": 2334,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_GreaterThanEqual_whitespace_after": {
  "data": {
   "lineno": 2350,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_GreaterThanEqual_whitespace_before": {
  "data": {
   "lineno": 2338,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_GreaterThan_whitespace_after": {
  "data": {
   "lineno": 2326,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_GreaterThan_whitespace_before": {
  "data": {
   "lineno": 2318,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_If": {
  "data": {
   "lineno": 2358,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IfExp": {
  "data": {
   "lineno": 2410,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IfExp_body": {
  "data": {
   "lineno": 2422,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IfExp_lpar": {
  "data": {
   "lineno": 2438,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IfExp_orelse": {
  "data": {
   "lineno": 2430,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IfExp_rpar": {
  "data": {
   "lineno": 2446,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IfExp_test": {
  "data": {
   "lineno": 2414,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IfExp_whitespace_after_else": {
  "data": {
   "lineno": 2478,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IfExp_whitespace_after_if": {
  "data": {
   "lineno": 2462,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IfExp_whitespace_before_else": {
  "data": {
   "lineno": 2470,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IfExp_whitespace_before_if": {
  "data": {
   "lineno": 2454,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_If_body": {
  "data": {
   "lineno": 2370,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_If_leading_lines": {
  "data": {
   "lineno": 2386,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_If_orelse": {
  "data": {
   "lineno": 2378,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_If_test": {
  "data": {
   "lineno": 2362,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_If_whitespace_after_test": {
  "data": {
   "lineno": 2402,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_If_whitespace_before_test": {
  "data": {
   "lineno": 2394,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Imaginary": {
  "data": {
   "lineno": 2486,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Imaginary_lpar": {
  "data": {
   "lineno": 2498,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Imaginary_rpar": {
  "data": {
   "lineno": 2506,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Imaginary_value": {
  "data": {
   "lineno": 2490,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Import": {
  "data": {
   "lineno": 2514,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportAlias": {
  "data": {
   "lineno": 2542,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportAlias_asname": {
  "data": {
   "lineno": 2554,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportAlias_comma": {
  "data": {
   "lineno": 2562,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportAlias_name": {
  "data": {
   "lineno": 2546,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportFrom": {
  "data": {
   "lineno": 2570,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportFrom_lpar": {
  "data": {
   "lineno": 2598,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportFrom_module": {
  "data": {
   "lineno": 2574,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportFrom_names": {
  "data": {
   "lineno": 2582,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportFrom_relative": {
  "data": {
   "lineno": 2590,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportFrom_rpar": {
  "data": {
   "lineno": 2606,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportFrom_semicolon": {
  "data": {
   "lineno": 2614,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportFrom_whitespace_after_from": {
  "data": {
   "lineno": 2622,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportFrom_whitespace_after_import": {
  "data": {
   "lineno": 2638,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportFrom_whitespace_before_import": {
  "data": {
   "lineno": 2630,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportStar": {
  "data": {
   "lineno": 2646,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Import_names": {
  "data": {
   "lineno": 2518,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Import_semicolon": {
  "data": {
   "lineno": 2526,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Import_whitespace_after_import": {
  "data": {
   "lineno": 2534,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_In": {
  "data": {
   "lineno": 2650,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_In_whitespace_after": {
  "data": {
   "lineno": 2662,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_In_whitespace_before": {
  "data": {
   "lineno": 2654,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IndentedBlock": {
  "data": {
   "lineno": 2670,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IndentedBlock_body": {
  "data": {
   "lineno": 2674,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IndentedBlock_footer": {
  "data": {
   "lineno": 2698,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IndentedBlock_header": {
  "data": {
   "lineno": 2682,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IndentedBlock_indent": {
  "data": {
   "lineno": 2690,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Index": {
  "data": {
   "lineno": 2706,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Index_value": {
  "data": {
   "lineno": 2710,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Integer": {
  "data": {
   "lineno": 2718,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Integer_lpar": {
  "data": {
   "lineno": 2730,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Integer_rpar": {
  "data": {
   "lineno": 2738,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Integer_value": {
  "data": {
   "lineno": 2722,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Is": {
  "data": {
   "lineno": 2746,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IsNot": {
  "data": {
   "lineno": 2766,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IsNot_whitespace_after": {
  "data": {
   "lineno": 2786,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IsNot_whitespace_before": {
  "data": {
   "lineno": 2770,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IsNot_whitespace_between": {
  "data": {
   "lineno": 2778,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Is_whitespace_after": {
  "data": {
   "lineno": 2758,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Is_whitespace_before": {
  "data": {
   "lineno": 2750,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Lambda": {
  "data": {
   "lineno": 2794,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Lambda_body": {
  "data": {
   "lineno": 2806,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Lambda_colon": {
  "data": {
   "lineno": 2814,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Lambda_lpar": {
  "data": {
   "lineno": 2822,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Lambda_params": {
  "data": {
   "lineno": 2798,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Lambda_rpar": {
  "data": {
   "lineno": 2830,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Lambda_whitespace_after_lambda": {
  "data": {
   "lineno": 2838,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LeftCurlyBrace": {
  "data": {
   "lineno": 2846,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LeftCurlyBrace_whitespace_after": {
  "data": {
   "lineno": 2850,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LeftParen": {
  "data": {
   "lineno": 2858,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LeftParen_whitespace_after": {
  "data": {
   "lineno": 2862,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LeftShift": {
  "data": {
   "lineno": 2870,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LeftShiftAssign": {
  "data": {
   "lineno": 2890,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LeftShiftAssign_whitespace_after": {
  "data": {
   "lineno": 2902,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LeftShiftAssign_whitespace_before": {
  "data": {
   "lineno": 2894,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LeftShift_whitespace_after": {
  "data": {
   "lineno": 2882,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LeftShift_whitespace_before": {
  "data": {
   "lineno": 2874,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LeftSquareBracket": {
  "data": {
   "lineno": 2910,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LeftSquareBracket_whitespace_after": {
  "data": {
   "lineno": 2914,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LessThan": {
  "data": {
   "lineno": 2926,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LessThanEqual": {
  "data": {
   "lineno": 2946,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LessThanEqual_whitespace_after": {
  "data": {
   "lineno": 2958,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LessThanEqual_whitespace_before": {
  "data": {
   "lineno": 2950,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LessThan_whitespace_after": {
  "data": {
   "lineno": 2938,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LessThan_whitespace_before": {
  "data": {
   "lineno": 2930,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_List": {
  "data": {
   "lineno": 2966,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ListComp": {
  "data": {
   "lineno": 3010,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ListComp_elt": {
  "data": {
   "lineno": 3014,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ListComp_for_in": {
  "data": {
   "lineno": 3022,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ListComp_lbracket": {
  "data": {
   "lineno": 3030,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ListComp_lpar": {
  "data": {
   "lineno": 3046,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ListComp_rbracket": {
  "data": {
   "lineno": 3038,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ListComp_rpar": {
  "data": {
   "lineno": 3054,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_List_elements": {
  "data": {
   "lineno": 2970,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_List_lbracket": {
  "data": {
   "lineno": 2978,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_List_lpar": {
  "data": {
   "lineno": 2994,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_List_rbracket": {
  "data": {
   "lineno": 2986,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_List_rpar": {
  "data": {
   "lineno": 3002,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_MatrixMultiply": {
  "data": {
   "lineno": 3062,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_MatrixMultiplyAssign": {
  "data": {
   "lineno": 3082,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_MatrixMultiplyAssign_whitespace_after": {
  "data": {
   "lineno": 3100,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_MatrixMultiplyAssign_whitespace_before": {
  "data": {
   "lineno": 3088,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_MatrixMultiply_whitespace_after": {
  "data": {
   "lineno": 3074,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_MatrixMultiply_whitespace_before": {
  "data": {
   "lineno": 3066,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Minus": {
  "data": {
   "lineno": 3112,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Minus_whitespace_after": {
  "data": {
   "lineno": 3116,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Module": {
  "data": {
   "lineno": 3124,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Module_body": {
  "data": {
   "lineno": 3128,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Module_default_indent": {
  "data": {
   "lineno": 3160,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Module_default_newline": {
  "data": {
   "lineno": 3168,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Module_encoding": {
  "data": {
   "lineno": 3152,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Module_footer": {
  "data": {
   "lineno": 3144,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Module_has_trailing_newline": {
  "data": {
   "lineno": 3176,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Module_header": {
  "data": {
   "lineno": 3136,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Modulo": {
  "data": {
   "lineno": 3184,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ModuloAssign": {
  "data": {
   "lineno": 3204,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ModuloAssign_whitespace_after": {
  "data": {
   "lineno": 3216,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ModuloAssign_whitespace_before": {
  "data": {
   "lineno": 3208,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Modulo_whitespace_after": {
  "data": {
   "lineno": 3196,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Modulo_whitespace_before": {
  "data": {
   "lineno": 3188,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Multiply": {
  "data": {
   "lineno": 3224,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_MultiplyAssign": {
  "data": {
   "lineno": 3244,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_MultiplyAssign_whitespace_after": {
  "data": {
   "lineno": 3256,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_MultiplyAssign_whitespace_before": {
  "data": {
   "lineno": 3248,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Multiply_whitespace_after": {
  "data": {
   "lineno": 3236,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Multiply_whitespace_before": {
  "data": {
   "lineno": 3228,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Name": {
  "data": {
   "lineno": 3264,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NameItem": {
  "data": {
   "lineno": 3292,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NameItem_comma": {
  "data": {
   "lineno": 3304,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NameItem_name": {
  "data": {
   "lineno": 3296,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Name_lpar": {
  "data": {
   "lineno": 3276,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Name_rpar": {
  "data": {
   "lineno": 3284,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Name_value": {
  "data": {
   "lineno": 3268,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NamedExpr": {
  "data": {
   "lineno": 3312,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NamedExpr_lpar": {
  "data": {
   "lineno": 3332,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NamedExpr_rpar": {
  "data": {
   "lineno": 3340,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NamedExpr_target": {
  "data": {
   "lineno": 3316,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NamedExpr_value": {
  "data": {
   "lineno": 3324,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NamedExpr_whitespace_after_walrus": {
  "data": {
   "lineno": 3356,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NamedExpr_whitespace_before_walrus": {
  "data": {
   "lineno": 3348,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Newline": {
  "data": {
   "lineno": 3364,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Newline_value": {
  "data": {
   "lineno": 3368,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Nonlocal": {
  "data": {
   "lineno": 3376,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Nonlocal_names": {
  "data": {
   "lineno": 3380,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Nonlocal_semicolon": {
  "data": {
   "lineno": 3396,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Nonlocal_whitespace_after_nonlocal": {
  "data": {
   "lineno": 3388,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Not": {
  "data": {
   "lineno": 3404,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NotEqual": {
  "data": {
   "lineno": 3416,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NotEqual_value": {
  "data": {
   "lineno": 3420,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NotEqual_whitespace_after": {
  "data": {
   "lineno": 3436,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NotEqual_whitespace_before": {
  "data": {
   "lineno": 3428,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NotIn": {
  "data": {
   "lineno": 3444,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NotIn_whitespace_after": {
  "data": {
   "lineno": 3464,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NotIn_whitespace_before": {
  "data": {
   "lineno": 3448,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NotIn_whitespace_between": {
  "data": {
   "lineno": 3456,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Not_whitespace_after": {
  "data": {
   "lineno": 3408,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Or": {
  "data": {
   "lineno": 3472,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Or_whitespace_after": {
  "data": {
   "lineno": 3484,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Or_whitespace_before": {
  "data": {
   "lineno": 3476,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Param": {
  "data": {
   "lineno": 3492,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ParamSlash": {
  "data": {
   "lineno": 3560,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ParamSlash_comma": {
  "data": {
   "lineno": 3564,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ParamStar": {
  "data": {
   "lineno": 3572,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ParamStar_comma": {
  "data": {
   "lineno": 3576,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Param_annotation": {
  "data": {
   "lineno": 3504,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Param_comma": {
  "data": {
   "lineno": 3528,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Param_default": {
  "data": {
   "lineno": 3520,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Param_equal": {
  "data": {
   "lineno": 3512,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Param_name": {
  "data": {
   "lineno": 3496,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Param_star": {
  "data": {
   "lineno": 3536,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Param_whitespace_after_param": {
  "data": {
   "lineno": 3552,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Param_whitespace_after_star": {
  "data": {
   "lineno": 3544,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Parameters": {
  "data": {
   "lineno": 3584,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Parameters_kwonly_params": {
  "data": {
   "lineno": 3604,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Parameters_params": {
  "data": {
   "lineno": 3588,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Parameters_posonly_ind": {
  "data": {
   "lineno": 3628,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Parameters_posonly_params": {
  "data": {
   "lineno": 3620,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Parameters_star_arg": {
  "data": {
   "lineno": 3596,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Parameters_star_kwarg": {
  "data": {
   "lineno": 3612,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ParenthesizedWhitespace": {
  "data": {
   "lineno": 3636,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ParenthesizedWhitespace_empty_lines": {
  "data": {
   "lineno": 3654,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ParenthesizedWhitespace_first_line": {
  "data": {
   "lineno": 3642,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ParenthesizedWhitespace_indent": {
  "data": {
   "lineno": 3666,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ParenthesizedWhitespace_last_line": {
  "data": {
   "lineno": 3678,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Pass": {
  "data": {
   "lineno": 3690,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Pass_semicolon": {
  "data": {
   "lineno": 3694,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Plus": {
  "data": {
   "lineno": 3702,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Plus_whitespace_after": {
  "data": {
   "lineno": 3706,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Power": {
  "data": {
   "lineno": 3714,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_PowerAssign": {
  "data": {
   "lineno": 3734,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_PowerAssign_whitespace_after": {
  "data": {
   "lineno": 3746,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_PowerAssign_whitespace_before": {
  "data": {
   "lineno": 3738,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Power_whitespace_after": {
  "data": {
   "lineno": 3726,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Power_whitespace_before": {
  "data": {
   "lineno": 3718,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Raise": {
  "data": {
   "lineno": 3754,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Raise_cause": {
  "data": {
   "lineno": 3766,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Raise_exc": {
  "data": {
   "lineno": 3758,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Raise_semicolon": {
  "data": {
   "lineno": 3782,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Raise_whitespace_after_raise": {
  "data": {
   "lineno": 3774,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Return": {
  "data": {
   "lineno": 3790,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Return_semicolon": {
  "data": {
   "lineno": 3810,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Return_value": {
  "data": {
   "lineno": 3794,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Return_whitespace_after_return": {
  "data": {
   "lineno": 3802,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_RightCurlyBrace": {
  "data": {
   "lineno": 3818,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_RightCurlyBrace_whitespace_before": {
  "data": {
   "lineno": 3822,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_RightParen": {
  "data": {
   "lineno": 3830,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_RightParen_whitespace_before": {
  "data": {
   "lineno": 3834,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_RightShift": {
  "data": {
   "lineno": 3842,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_RightShiftAssign": {
  "data": {
   "lineno": 3862,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_RightShiftAssign_whitespace_after": {
  "data": {
   "lineno": 3878,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_RightShiftAssign_whitespace_before": {
  "data": {
   "lineno": 3866,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_RightShift_whitespace_after": {
  "data": {
   "lineno": 3854,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_RightShift_whitespace_before": {
  "data": {
   "lineno": 3846,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_RightSquareBracket": {
  "data": {
   "lineno": 3886,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_RightSquareBracket_whitespace_before": {
  "data": {
   "lineno": 3890,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Semicolon": {
  "data": {
   "lineno": 3902,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Semicolon_whitespace_after": {
  "data": {
   "lineno": 3914,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Semicolon_whitespace_before": {
  "data": {
   "lineno": 3906,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Set": {
  "data": {
   "lineno": 3922,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SetComp": {
  "data": {
   "lineno": 3966,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SetComp_elt": {
  "data": {
   "lineno": 3970,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SetComp_for_in": {
  "data": {
   "lineno": 3978,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SetComp_lbrace": {
  "data": {
   "lineno": 3986,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SetComp_lpar": {
  "data": {
   "lineno": 4002,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SetComp_rbrace": {
  "data": {
   "lineno": 3994,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SetComp_rpar": {
  "data": {
   "lineno": 4010,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Set_elements": {
  "data": {
   "lineno": 3926,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Set_lbrace": {
  "data": {
   "lineno": 3934,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Set_lpar": {
  "data": {
   "lineno": 3950,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Set_rbrace": {
  "data": {
   "lineno": 3942,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Set_rpar": {
  "data": {
   "lineno": 3958,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SimpleStatementLine": {
  "data": {
   "lineno": 4018,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SimpleStatementLine_body": {
  "data": {
   "lineno": 4022,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SimpleStatementLine_leading_lines": {
  "data": {
   "lineno": 4030,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SimpleStatementLine_trailing_whitespace": {
  "data": {
   "lineno": 4042,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SimpleStatementSuite": {
  "data": {
   "lineno": 4054,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SimpleStatementSuite_body": {
  "data": {
   "lineno": 4060,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SimpleStatementSuite_leading_whitespace": {
  "data": {
   "lineno": 4068,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SimpleStatementSuite_trailing_whitespace": {
  "data": {
   "lineno": 4080,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SimpleString": {
  "data": {
   "lineno": 4092,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SimpleString_lpar": {
  "data": {
   "lineno": 4104,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SimpleString_rpar": {
  "data": {
   "lineno": 4112,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SimpleString_value": {
  "data": {
   "lineno": 4096,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SimpleWhitespace": {
  "data": {
   "lineno": 4120,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SimpleWhitespace_value": {
  "data": {
   "lineno": 4124,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Slice": {
  "data": {
   "lineno": 4132,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Slice_first_colon": {
  "data": {
   "lineno": 4160,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Slice_lower": {
  "data": {
   "lineno": 4136,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Slice_second_colon": {
  "data": {
   "lineno": 4168,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Slice_step": {
  "data": {
   "lineno": 4152,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Slice_upper": {
  "data": {
   "lineno": 4144,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_StarredDictElement": {
  "data": {
   "lineno": 4176,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_StarredDictElement_comma": {
  "data": {
   "lineno": 4188,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_StarredDictElement_value": {
  "data": {
   "lineno": 4180,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_StarredDictElement_whitespace_before_value": {
  "data": {
   "lineno": 4196,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_StarredElement": {
  "data": {
   "lineno": 4208,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_StarredElement_comma": {
  "data": {
   "lineno": 4220,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_StarredElement_lpar": {
  "data": {
   "lineno": 4228,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_StarredElement_rpar": {
  "data": {
   "lineno": 4236,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_StarredElement_value": {
  "data": {
   "lineno": 4212,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_StarredElement_whitespace_before_value": {
  "data": {
   "lineno": 4244,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Subscript": {
  "data": {
   "lineno": 4256,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SubscriptElement": {
  "data": {
   "lineno": 4316,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SubscriptElement_comma": {
  "data": {
   "lineno": 4328,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SubscriptElement_slice": {
  "data": {
   "lineno": 4320,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Subscript_lbracket": {
  "data": {
   "lineno": 4276,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Subscript_lpar": {
  "data": {
   "lineno": 4292,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Subscript_rbracket": {
  "data": {
   "lineno": 4284,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Subscript_rpar": {
  "data": {
   "lineno": 4300,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Subscript_slice": {
  "data": {
   "lineno": 4268,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Subscript_value": {
  "data": {
   "lineno": 4260,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Subscript_whitespace_after_value": {
  "data": {
   "lineno": 4308,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Subtract": {
  "data": {
   "lineno": 4336,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SubtractAssign": {
  "data": {
   "lineno": 4356,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SubtractAssign_whitespace_after": {
  "data": {
   "lineno": 4368,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SubtractAssign_whitespace_before": {
  "data": {
   "lineno": 4360,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Subtract_whitespace_after": {
  "data": {
   "lineno": 4348,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Subtract_whitespace_before": {
  "data": {
   "lineno": 4340,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_TrailingWhitespace": {
  "data": {
   "lineno": 4376,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_TrailingWhitespace_comment": {
  "data": {
   "lineno": 4388,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_TrailingWhitespace_newline": {
  "data": {
   "lineno": 4396,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_TrailingWhitespace_whitespace": {
  "data": {
   "lineno": 4380,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Try": {
  "data": {
   "lineno": 4404,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Try_body": {
  "data": {
   "lineno": 4408,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Try_finalbody": {
  "data": {
   "lineno": 4432,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Try_handlers": {
  "data": {
   "lineno": 4416,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Try_leading_lines": {
  "data": {
   "lineno": 4440,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Try_orelse": {
  "data": {
   "lineno": 4424,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Try_whitespace_before_colon": {
  "data": {
   "lineno": 4448,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Tuple": {
  "data": {
   "lineno": 4456,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Tuple_elements": {
  "data": {
   "lineno": 4460,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Tuple_lpar": {
  "data": {
   "lineno": 4468,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Tuple_rpar": {
  "data": {
   "lineno": 4476,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_UnaryOperation": {
  "data": {
   "lineno": 4484,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_UnaryOperation_expression": {
  "data": {
   "lineno": 4496,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_UnaryOperation_lpar": {
  "data": {
   "lineno": 4504,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_UnaryOperation_operator": {
  "data": {
   "lineno": 4488,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_UnaryOperation_rpar": {
  "data": {
   "lineno": 4512,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_While": {
  "data": {
   "lineno": 4520,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_While_body": {
  "data": {
   "lineno": 4532,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_While_leading_lines": {
  "data": {
   "lineno": 4548,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_While_orelse": {
  "data": {
   "lineno": 4540,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_While_test": {
  "data": {
   "lineno": 4524,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_While_whitespace_after_while": {
  "data": {
   "lineno": 4556,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_While_whitespace_before_colon": {
  "data": {
   "lineno": 4564,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_With": {
  "data": {
   "lineno": 4572,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_WithItem": {
  "data": {
   "lineno": 4624,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_WithItem_asname": {
  "data": {
   "lineno": 4636,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_WithItem_comma": {
  "data": {
   "lineno": 4644,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_WithItem_item": {
  "data": {
   "lineno": 4628,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_With_asynchronous": {
  "data": {
   "lineno": 4592,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_With_body": {
  "data": {
   "lineno": 4584,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_With_items": {
  "data": {
   "lineno": 4576,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_With_leading_lines": {
  "data": {
   "lineno": 4600,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_With_whitespace_after_with": {
  "data": {
   "lineno": 4608,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_With_whitespace_before_colon": {
  "data": {
   "lineno": 4616,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Yield": {
  "data": {
   "lineno": 4652,
   "symbols_in_volume": [
    "bool",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Yield_lpar": {
  "data": {
   "lineno": 4664,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Yield_rpar": {
  "data": {
   "lineno": 4672,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Yield_value": {
  "data": {
   "lineno": 4656,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Yield_whitespace_after_yield": {
  "data": {
   "lineno": 4680,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions": {
  "data": {
   "lineno": 5267,
   "symbols_in_volume": [
    "libcst._typed_visitor.CSTTypedBaseFunctions"
   ]
  },
  "type": "class"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Add": {
  "data": {
   "lineno": 5270,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_AddAssign": {
  "data": {
   "lineno": 5274,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_And": {
  "data": {
   "lineno": 5280,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_AnnAssign": {
  "data": {
   "lineno": 5284,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Annotation": {
  "data": {
   "lineno": 5290,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Arg": {
  "data": {
   "lineno": 5296,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_AsName": {
  "data": {
   "lineno": 5302,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Assert": {
  "data": {
   "lineno": 5306,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Assign": {
  "data": {
   "lineno": 5312,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_AssignEqual": {
  "data": {
   "lineno": 5318,
   "symbols_in_volume": [
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_AssignTarget": {
  "data": {
   "lineno": 5324,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Asynchronous": {
  "data": {
   "lineno": 5330,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Attribute": {
  "data": {
   "lineno": 5336,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_AugAssign": {
  "data": {
   "lineno": 5342,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Await": {
  "data": {
   "lineno": 5348,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_BinaryOperation": {
  "data": {
   "lineno": 5354,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_BitAnd": {
  "data": {
   "lineno": 5360,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_BitAndAssign": {
  "data": {
   "lineno": 5366,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_BitInvert": {
  "data": {
   "lineno": 5372,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_BitOr": {
  "data": {
   "lineno": 5378,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_BitOrAssign": {
  "data": {
   "lineno": 5384,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_BitXor": {
  "data": {
   "lineno": 5390,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_BitXorAssign": {
  "data": {
   "lineno": 5396,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_BooleanOperation": {
  "data": {
   "lineno": 5402,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Break": {
  "data": {
   "lineno": 5408,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Call": {
  "data": {
   "lineno": 5414,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_ClassDef": {
  "data": {
   "lineno": 5420,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Colon": {
  "data": {
   "lineno": 5426,
   "symbols_in_volume": [
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Comma": {
  "data": {
   "lineno": 5432,
   "symbols_in_volume": [
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Comment": {
  "data": {
   "lineno": 5438,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_CompFor": {
  "data": {
   "lineno": 5444,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_CompIf": {
  "data": {
   "lineno": 5450,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Comparison": {
  "data": {
   "lineno": 5454,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_ComparisonTarget": {
  "data": {
   "lineno": 5460,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_ConcatenatedString": {
  "data": {
   "lineno": 5466,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Continue": {
  "data": {
   "lineno": 5472,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Decorator": {
  "data": {
   "lineno": 5478,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Del": {
  "data": {
   "lineno": 5484,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Dict": {
  "data": {
   "lineno": 5490,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_DictComp": {
  "data": {
   "lineno": 5496,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_DictElement": {
  "data": {
   "lineno": 5502,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Divide": {
  "data": {
   "lineno": 5508,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_DivideAssign": {
  "data": {
   "lineno": 5514,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Dot": {
  "data": {
   "lineno": 5520,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Element": {
  "data": {
   "lineno": 5526,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Ellipsis": {
  "data": {
   "lineno": 5532,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Else": {
  "data": {
   "lineno": 5538,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_EmptyLine": {
  "data": {
   "lineno": 5542,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Equal": {
  "data": {
   "lineno": 5548,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_ExceptHandler": {
  "data": {
   "lineno": 5554,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Expr": {
  "data": {
   "lineno": 5560,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Finally": {
  "data": {
   "lineno": 5566,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Float": {
  "data": {
   "lineno": 5572,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_FloorDivide": {
  "data": {
   "lineno": 5578,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_FloorDivideAssign": {
  "data": {
   "lineno": 5584,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_For": {
  "data": {
   "lineno": 5590,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_FormattedString": {
  "data": {
   "lineno": 5596,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_FormattedStringExpression": {
  "data": {
   "lineno": 5602,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_FormattedStringText": {
  "data": {
   "lineno": 5610,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_From": {
  "data": {
   "lineno": 5616,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_FunctionDef": {
  "data": {
   "lineno": 5620,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_GeneratorExp": {
  "data": {
   "lineno": 5626,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Global": {
  "data": {
   "lineno": 5632,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_GreaterThan": {
  "data": {
   "lineno": 5638,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_GreaterThanEqual": {
  "data": {
   "lineno": 5644,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_If": {
  "data": {
   "lineno": 5650,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_IfExp": {
  "data": {
   "lineno": 5656,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Imaginary": {
  "data": {
   "lineno": 5662,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Import": {
  "data": {
   "lineno": 5668,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_ImportAlias": {
  "data": {
   "lineno": 5674,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_ImportFrom": {
  "data": {
   "lineno": 5680,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_ImportStar": {
  "data": {
   "lineno": 5686,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_In": {
  "data": {
   "lineno": 5692,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_IndentedBlock": {
  "data": {
   "lineno": 5696,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Index": {
  "data": {
   "lineno": 5702,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Integer": {
  "data": {
   "lineno": 5706,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Is": {
  "data": {
   "lineno": 5712,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_IsNot": {
  "data": {
   "lineno": 5716,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Lambda": {
  "data": {
   "lineno": 5722,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_LeftCurlyBrace": {
  "data": {
   "lineno": 5728,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_LeftParen": {
  "data": {
   "lineno": 5734,
   "symbols_in_volume": [
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_LeftShift": {
  "data": {
   "lineno": 5740,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_LeftShiftAssign": {
  "data": {
   "lineno": 5746,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_LeftSquareBracket": {
  "data": {
   "lineno": 5752,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_LessThan": {
  "data": {
   "lineno": 5758,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_LessThanEqual": {
  "data": {
   "lineno": 5764,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_List": {
  "data": {
   "lineno": 5770,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_ListComp": {
  "data": {
   "lineno": 5776,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_MatrixMultiply": {
  "data": {
   "lineno": 5782,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_MatrixMultiplyAssign": {
  "data": {
   "lineno": 5788,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Minus": {
  "data": {
   "lineno": 5796,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Module": {
  "data": {
   "lineno": 5802,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Modulo": {
  "data": {
   "lineno": 5806,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_ModuloAssign": {
  "data": {
   "lineno": 5812,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Multiply": {
  "data": {
   "lineno": 5818,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_MultiplyAssign": {
  "data": {
   "lineno": 5824,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Name": {
  "data": {
   "lineno": 5830,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_NameItem": {
  "data": {
   "lineno": 5836,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_NamedExpr": {
  "data": {
   "lineno": 5842,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Newline": {
  "data": {
   "lineno": 5848,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Nonlocal": {
  "data": {
   "lineno": 5854,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Not": {
  "data": {
   "lineno": 5860,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_NotEqual": {
  "data": {
   "lineno": 5864,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_NotIn": {
  "data": {
   "lineno": 5870,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Or": {
  "data": {
   "lineno": 5876,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Param": {
  "data": {
   "lineno": 5880,
   "symbols_in_volume": [
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_ParamSlash": {
  "data": {
   "lineno": 5886,
   "symbols_in_volume": [
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_ParamStar": {
  "data": {
   "lineno": 5892,
   "symbols_in_volume": [
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Parameters": {
  "data": {
   "lineno": 5898,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_ParenthesizedWhitespace": {
  "data": {
   "lineno": 5904,
   "symbols_in_volume": [
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Pass": {
  "data": {
   "lineno": 5912,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Plus": {
  "data": {
   "lineno": 5918,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Power": {
  "data": {
   "lineno": 5922,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_PowerAssign": {
  "data": {
   "lineno": 5928,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Raise": {
  "data": {
   "lineno": 5934,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Return": {
  "data": {
   "lineno": 5940,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_RightCurlyBrace": {
  "data": {
   "lineno": 5946,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_RightParen": {
  "data": {
   "lineno": 5952,
   "symbols_in_volume": [
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_RightShift": {
  "data": {
   "lineno": 5958,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_RightShiftAssign": {
  "data": {
   "lineno": 5964,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_RightSquareBracket": {
  "data": {
   "lineno": 5970,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Semicolon": {
  "data": {
   "lineno": 5976,
   "symbols_in_volume": [
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Set": {
  "data": {
   "lineno": 5982,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_SetComp": {
  "data": {
   "lineno": 5986,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_SimpleStatementLine": {
  "data": {
   "lineno": 5992,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_SimpleStatementSuite": {
  "data": {
   "lineno": 5998,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_SimpleString": {
  "data": {
   "lineno": 6006,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_SimpleWhitespace": {
  "data": {
   "lineno": 6012,
   "symbols_in_volume": [
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Slice": {
  "data": {
   "lineno": 6018,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_StarredDictElement": {
  "data": {
   "lineno": 6022,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_StarredElement": {
  "data": {
   "lineno": 6028,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Subscript": {
  "data": {
   "lineno": 6034,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_SubscriptElement": {
  "data": {
   "lineno": 6040,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Subtract": {
  "data": {
   "lineno": 6046,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_SubtractAssign": {
  "data": {
   "lineno": 6052,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_TrailingWhitespace": {
  "data": {
   "lineno": 6058,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Try": {
  "data": {
   "lineno": 6064,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Tuple": {
  "data": {
   "lineno": 6070,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_UnaryOperation": {
  "data": {
   "lineno": 6076,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_While": {
  "data": {
   "lineno": 6082,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_With": {
  "data": {
   "lineno": 6088,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_WithItem": {
  "data": {
   "lineno": 6094,
   "symbols_in_volume": [
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._typed_visitor_base.mark_no_op",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Yield": {
  "data": {
   "lineno": 6100,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions": {
  "data": {
   "lineno": 4689,
   "symbols_in_volume": [
    "libcst._typed_visitor.CSTTypedBaseFunctions"
   ]
  },
  "type": "class"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Add": {
  "data": {
   "lineno": 4690,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_AddAssign": {
  "data": {
   "lineno": 4694,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_And": {
  "data": {
   "lineno": 4698,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_AnnAssign": {
  "data": {
   "lineno": 4702,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Annotation": {
  "data": {
   "lineno": 4706,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Arg": {
  "data": {
   "lineno": 4710,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_AsName": {
  "data": {
   "lineno": 4714,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Assert": {
  "data": {
   "lineno": 4718,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Assign": {
  "data": {
   "lineno": 4722,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_AssignEqual": {
  "data": {
   "lineno": 4726,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_AssignTarget": {
  "data": {
   "lineno": 4730,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Asynchronous": {
  "data": {
   "lineno": 4734,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Attribute": {
  "data": {
   "lineno": 4738,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_AugAssign": {
  "data": {
   "lineno": 4742,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Await": {
  "data": {
   "lineno": 4746,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_BinaryOperation": {
  "data": {
   "lineno": 4750,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_BitAnd": {
  "data": {
   "lineno": 4754,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_BitAndAssign": {
  "data": {
   "lineno": 4758,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_BitInvert": {
  "data": {
   "lineno": 4762,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_BitOr": {
  "data": {
   "lineno": 4766,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_BitOrAssign": {
  "data": {
   "lineno": 4770,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_BitXor": {
  "data": {
   "lineno": 4774,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_BitXorAssign": {
  "data": {
   "lineno": 4778,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_BooleanOperation": {
  "data": {
   "lineno": 4782,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Break": {
  "data": {
   "lineno": 4786,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Call": {
  "data": {
   "lineno": 4790,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_ClassDef": {
  "data": {
   "lineno": 4794,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Colon": {
  "data": {
   "lineno": 4798,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Comma": {
  "data": {
   "lineno": 4802,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Comment": {
  "data": {
   "lineno": 4806,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_CompFor": {
  "data": {
   "lineno": 4810,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_CompIf": {
  "data": {
   "lineno": 4814,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Comparison": {
  "data": {
   "lineno": 4818,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_ComparisonTarget": {
  "data": {
   "lineno": 4822,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_ConcatenatedString": {
  "data": {
   "lineno": 4826,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Continue": {
  "data": {
   "lineno": 4830,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Decorator": {
  "data": {
   "lineno": 4834,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Del": {
  "data": {
   "lineno": 4838,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Dict": {
  "data": {
   "lineno": 4842,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_DictComp": {
  "data": {
   "lineno": 4846,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_DictElement": {
  "data": {
   "lineno": 4850,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Divide": {
  "data": {
   "lineno": 4854,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_DivideAssign": {
  "data": {
   "lineno": 4858,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Dot": {
  "data": {
   "lineno": 4862,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Element": {
  "data": {
   "lineno": 4866,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Ellipsis": {
  "data": {
   "lineno": 4870,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Else": {
  "data": {
   "lineno": 4874,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_EmptyLine": {
  "data": {
   "lineno": 4878,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Equal": {
  "data": {
   "lineno": 4882,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_ExceptHandler": {
  "data": {
   "lineno": 4886,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Expr": {
  "data": {
   "lineno": 4890,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Finally": {
  "data": {
   "lineno": 4894,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Float": {
  "data": {
   "lineno": 4898,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_FloorDivide": {
  "data": {
   "lineno": 4902,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_FloorDivideAssign": {
  "data": {
   "lineno": 4906,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_For": {
  "data": {
   "lineno": 4910,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_FormattedString": {
  "data": {
   "lineno": 4914,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_FormattedStringExpression": {
  "data": {
   "lineno": 4918,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_FormattedStringText": {
  "data": {
   "lineno": 4924,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_From": {
  "data": {
   "lineno": 4928,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_FunctionDef": {
  "data": {
   "lineno": 4932,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_GeneratorExp": {
  "data": {
   "lineno": 4936,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Global": {
  "data": {
   "lineno": 4940,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_GreaterThan": {
  "data": {
   "lineno": 4944,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_GreaterThanEqual": {
  "data": {
   "lineno": 4948,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_If": {
  "data": {
   "lineno": 4952,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_IfExp": {
  "data": {
   "lineno": 4956,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Imaginary": {
  "data": {
   "lineno": 4960,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Import": {
  "data": {
   "lineno": 4964,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_ImportAlias": {
  "data": {
   "lineno": 4968,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_ImportFrom": {
  "data": {
   "lineno": 4972,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_ImportStar": {
  "data": {
   "lineno": 4976,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_In": {
  "data": {
   "lineno": 4980,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_IndentedBlock": {
  "data": {
   "lineno": 4984,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Index": {
  "data": {
   "lineno": 4988,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Integer": {
  "data": {
   "lineno": 4992,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Is": {
  "data": {
   "lineno": 4996,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_IsNot": {
  "data": {
   "lineno": 5000,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Lambda": {
  "data": {
   "lineno": 5004,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_LeftCurlyBrace": {
  "data": {
   "lineno": 5008,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_LeftParen": {
  "data": {
   "lineno": 5012,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_LeftShift": {
  "data": {
   "lineno": 5016,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_LeftShiftAssign": {
  "data": {
   "lineno": 5020,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_LeftSquareBracket": {
  "data": {
   "lineno": 5024,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_LessThan": {
  "data": {
   "lineno": 5028,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_LessThanEqual": {
  "data": {
   "lineno": 5032,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_List": {
  "data": {
   "lineno": 5036,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_ListComp": {
  "data": {
   "lineno": 5040,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_MatrixMultiply": {
  "data": {
   "lineno": 5044,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_MatrixMultiplyAssign": {
  "data": {
   "lineno": 5048,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Minus": {
  "data": {
   "lineno": 5052,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Module": {
  "data": {
   "lineno": 5056,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Modulo": {
  "data": {
   "lineno": 5060,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_ModuloAssign": {
  "data": {
   "lineno": 5064,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Multiply": {
  "data": {
   "lineno": 5068,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_MultiplyAssign": {
  "data": {
   "lineno": 5072,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Name": {
  "data": {
   "lineno": 5076,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_NameItem": {
  "data": {
   "lineno": 5080,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_NamedExpr": {
  "data": {
   "lineno": 5084,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Newline": {
  "data": {
   "lineno": 5088,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Nonlocal": {
  "data": {
   "lineno": 5092,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Not": {
  "data": {
   "lineno": 5096,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_NotEqual": {
  "data": {
   "lineno": 5100,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_NotIn": {
  "data": {
   "lineno": 5104,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Or": {
  "data": {
   "lineno": 5108,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Param": {
  "data": {
   "lineno": 5112,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_ParamSlash": {
  "data": {
   "lineno": 5116,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_ParamStar": {
  "data": {
   "lineno": 5120,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Parameters": {
  "data": {
   "lineno": 5124,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_ParenthesizedWhitespace": {
  "data": {
   "lineno": 5128,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Pass": {
  "data": {
   "lineno": 5134,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Plus": {
  "data": {
   "lineno": 5138,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Power": {
  "data": {
   "lineno": 5142,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_PowerAssign": {
  "data": {
   "lineno": 5146,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Raise": {
  "data": {
   "lineno": 5150,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Return": {
  "data": {
   "lineno": 5154,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_RightCurlyBrace": {
  "data": {
   "lineno": 5158,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_RightParen": {
  "data": {
   "lineno": 5162,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_RightShift": {
  "data": {
   "lineno": 5166,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_RightShiftAssign": {
  "data": {
   "lineno": 5170,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_RightSquareBracket": {
  "data": {
   "lineno": 5174,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Semicolon": {
  "data": {
   "lineno": 5178,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Set": {
  "data": {
   "lineno": 5182,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_SetComp": {
  "data": {
   "lineno": 5186,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_SimpleStatementLine": {
  "data": {
   "lineno": 5190,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_SimpleStatementSuite": {
  "data": {
   "lineno": 5194,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_SimpleString": {
  "data": {
   "lineno": 5198,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_SimpleWhitespace": {
  "data": {
   "lineno": 5202,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Slice": {
  "data": {
   "lineno": 5206,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_StarredDictElement": {
  "data": {
   "lineno": 5210,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_StarredElement": {
  "data": {
   "lineno": 5214,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Subscript": {
  "data": {
   "lineno": 5218,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_SubscriptElement": {
  "data": {
   "lineno": 5222,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Subtract": {
  "data": {
   "lineno": 5226,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_SubtractAssign": {
  "data": {
   "lineno": 5230,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_TrailingWhitespace": {
  "data": {
   "lineno": 5234,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Try": {
  "data": {
   "lineno": 5238,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Tuple": {
  "data": {
   "lineno": 5242,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_UnaryOperation": {
  "data": {
   "lineno": 5246,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_While": {
  "data": {
   "lineno": 5250,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_With": {
  "data": {
   "lineno": 5254,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_WithItem": {
  "data": {
   "lineno": 5258,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Yield": {
  "data": {
   "lineno": 5262,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.mark_no_op"
   ]
  },
  "type": "function"
 },
 "libcst._typed_visitor.Call": {
  "data": {
   "shadows": "libcst._nodes.expression.Call"
  },
  "type": "import"
 },
 "libcst._typed_visitor.ClassDef": {
  "data": {
   "shadows": "libcst._nodes.statement.ClassDef"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Colon": {
  "data": {
   "shadows": "libcst._nodes.op.Colon"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Comma": {
  "data": {
   "shadows": "libcst._nodes.op.Comma"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Comment": {
  "data": {
   "shadows": "libcst._nodes.whitespace.Comment"
  },
  "type": "import"
 },
 "libcst._typed_visitor.CompFor": {
  "data": {
   "shadows": "libcst._nodes.expression.CompFor"
  },
  "type": "import"
 },
 "libcst._typed_visitor.CompIf": {
  "data": {
   "shadows": "libcst._nodes.expression.CompIf"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Comparison": {
  "data": {
   "shadows": "libcst._nodes.expression.Comparison"
  },
  "type": "import"
 },
 "libcst._typed_visitor.ComparisonTarget": {
  "data": {
   "shadows": "libcst._nodes.expression.ComparisonTarget"
  },
  "type": "import"
 },
 "libcst._typed_visitor.ConcatenatedString": {
  "data": {
   "shadows": "libcst._nodes.expression.ConcatenatedString"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Continue": {
  "data": {
   "shadows": "libcst._nodes.statement.Continue"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Decorator": {
  "data": {
   "shadows": "libcst._nodes.statement.Decorator"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Del": {
  "data": {
   "shadows": "libcst._nodes.statement.Del"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Dict": {
  "data": {
   "shadows": "libcst._nodes.expression.Dict"
  },
  "type": "import"
 },
 "libcst._typed_visitor.DictComp": {
  "data": {
   "shadows": "libcst._nodes.expression.DictComp"
  },
  "type": "import"
 },
 "libcst._typed_visitor.DictElement": {
  "data": {
   "shadows": "libcst._nodes.expression.DictElement"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Divide": {
  "data": {
   "shadows": "libcst._nodes.op.Divide"
  },
  "type": "import"
 },
 "libcst._typed_visitor.DivideAssign": {
  "data": {
   "shadows": "libcst._nodes.op.DivideAssign"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Dot": {
  "data": {
   "shadows": "libcst._nodes.op.Dot"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Element": {
  "data": {
   "shadows": "libcst._nodes.expression.Element"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Ellipsis": {
  "data": {
   "shadows": "libcst._nodes.expression.Ellipsis"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Else": {
  "data": {
   "shadows": "libcst._nodes.statement.Else"
  },
  "type": "import"
 },
 "libcst._typed_visitor.EmptyLine": {
  "data": {
   "shadows": "libcst._nodes.whitespace.EmptyLine"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Equal": {
  "data": {
   "shadows": "libcst._nodes.op.Equal"
  },
  "type": "import"
 },
 "libcst._typed_visitor.ExceptHandler": {
  "data": {
   "shadows": "libcst._nodes.statement.ExceptHandler"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Expr": {
  "data": {
   "shadows": "libcst._nodes.statement.Expr"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Finally": {
  "data": {
   "shadows": "libcst._nodes.statement.Finally"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Float": {
  "data": {
   "shadows": "libcst._nodes.expression.Float"
  },
  "type": "import"
 },
 "libcst._typed_visitor.FloorDivide": {
  "data": {
   "shadows": "libcst._nodes.op.FloorDivide"
  },
  "type": "import"
 },
 "libcst._typed_visitor.FloorDivideAssign": {
  "data": {
   "shadows": "libcst._nodes.op.FloorDivideAssign"
  },
  "type": "import"
 },
 "libcst._typed_visitor.For": {
  "data": {
   "shadows": "libcst._nodes.statement.For"
  },
  "type": "import"
 },
 "libcst._typed_visitor.FormattedString": {
  "data": {
   "shadows": "libcst._nodes.expression.FormattedString"
  },
  "type": "import"
 },
 "libcst._typed_visitor.FormattedStringExpression": {
  "data": {
   "shadows": "libcst._nodes.expression.FormattedStringExpression"
  },
  "type": "import"
 },
 "libcst._typed_visitor.FormattedStringText": {
  "data": {
   "shadows": "libcst._nodes.expression.FormattedStringText"
  },
  "type": "import"
 },
 "libcst._typed_visitor.From": {
  "data": {
   "shadows": "libcst._nodes.expression.From"
  },
  "type": "import"
 },
 "libcst._typed_visitor.FunctionDef": {
  "data": {
   "shadows": "libcst._nodes.statement.FunctionDef"
  },
  "type": "import"
 },
 "libcst._typed_visitor.GeneratorExp": {
  "data": {
   "shadows": "libcst._nodes.expression.GeneratorExp"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Global": {
  "data": {
   "shadows": "libcst._nodes.statement.Global"
  },
  "type": "import"
 },
 "libcst._typed_visitor.GreaterThan": {
  "data": {
   "shadows": "libcst._nodes.op.GreaterThan"
  },
  "type": "import"
 },
 "libcst._typed_visitor.GreaterThanEqual": {
  "data": {
   "shadows": "libcst._nodes.op.GreaterThanEqual"
  },
  "type": "import"
 },
 "libcst._typed_visitor.If": {
  "data": {
   "shadows": "libcst._nodes.statement.If"
  },
  "type": "import"
 },
 "libcst._typed_visitor.IfExp": {
  "data": {
   "shadows": "libcst._nodes.expression.IfExp"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Imaginary": {
  "data": {
   "shadows": "libcst._nodes.expression.Imaginary"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Import": {
  "data": {
   "shadows": "libcst._nodes.statement.Import"
  },
  "type": "import"
 },
 "libcst._typed_visitor.ImportAlias": {
  "data": {
   "shadows": "libcst._nodes.statement.ImportAlias"
  },
  "type": "import"
 },
 "libcst._typed_visitor.ImportFrom": {
  "data": {
   "shadows": "libcst._nodes.statement.ImportFrom"
  },
  "type": "import"
 },
 "libcst._typed_visitor.ImportStar": {
  "data": {
   "shadows": "libcst._nodes.op.ImportStar"
  },
  "type": "import"
 },
 "libcst._typed_visitor.In": {
  "data": {
   "shadows": "libcst._nodes.op.In"
  },
  "type": "import"
 },
 "libcst._typed_visitor.IndentedBlock": {
  "data": {
   "shadows": "libcst._nodes.statement.IndentedBlock"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Index": {
  "data": {
   "shadows": "libcst._nodes.expression.Index"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Integer": {
  "data": {
   "shadows": "libcst._nodes.expression.Integer"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Is": {
  "data": {
   "shadows": "libcst._nodes.op.Is"
  },
  "type": "import"
 },
 "libcst._typed_visitor.IsNot": {
  "data": {
   "shadows": "libcst._nodes.op.IsNot"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Lambda": {
  "data": {
   "shadows": "libcst._nodes.expression.Lambda"
  },
  "type": "import"
 },
 "libcst._typed_visitor.LeftCurlyBrace": {
  "data": {
   "shadows": "libcst._nodes.expression.LeftCurlyBrace"
  },
  "type": "import"
 },
 "libcst._typed_visitor.LeftParen": {
  "data": {
   "shadows": "libcst._nodes.expression.LeftParen"
  },
  "type": "import"
 },
 "libcst._typed_visitor.LeftShift": {
  "data": {
   "shadows": "libcst._nodes.op.LeftShift"
  },
  "type": "import"
 },
 "libcst._typed_visitor.LeftShiftAssign": {
  "data": {
   "shadows": "libcst._nodes.op.LeftShiftAssign"
  },
  "type": "import"
 },
 "libcst._typed_visitor.LeftSquareBracket": {
  "data": {
   "shadows": "libcst._nodes.expression.LeftSquareBracket"
  },
  "type": "import"
 },
 "libcst._typed_visitor.LessThan": {
  "data": {
   "shadows": "libcst._nodes.op.LessThan"
  },
  "type": "import"
 },
 "libcst._typed_visitor.LessThanEqual": {
  "data": {
   "shadows": "libcst._nodes.op.LessThanEqual"
  },
  "type": "import"
 },
 "libcst._typed_visitor.List": {
  "data": {
   "shadows": "libcst._nodes.expression.List"
  },
  "type": "import"
 },
 "libcst._typed_visitor.ListComp": {
  "data": {
   "shadows": "libcst._nodes.expression.ListComp"
  },
  "type": "import"
 },
 "libcst._typed_visitor.MatrixMultiply": {
  "data": {
   "shadows": "libcst._nodes.op.MatrixMultiply"
  },
  "type": "import"
 },
 "libcst._typed_visitor.MatrixMultiplyAssign": {
  "data": {
   "shadows": "libcst._nodes.op.MatrixMultiplyAssign"
  },
  "type": "import"
 },
 "libcst._typed_visitor.MaybeSentinel": {
  "data": {
   "shadows": "libcst._maybe_sentinel.MaybeSentinel"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Minus": {
  "data": {
   "shadows": "libcst._nodes.op.Minus"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Module": {
  "data": {
   "shadows": "libcst._nodes.module.Module"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Modulo": {
  "data": {
   "shadows": "libcst._nodes.op.Modulo"
  },
  "type": "import"
 },
 "libcst._typed_visitor.ModuloAssign": {
  "data": {
   "shadows": "libcst._nodes.op.ModuloAssign"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Multiply": {
  "data": {
   "shadows": "libcst._nodes.op.Multiply"
  },
  "type": "import"
 },
 "libcst._typed_visitor.MultiplyAssign": {
  "data": {
   "shadows": "libcst._nodes.op.MultiplyAssign"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Name": {
  "data": {
   "shadows": "libcst._nodes.expression.Name"
  },
  "type": "import"
 },
 "libcst._typed_visitor.NameItem": {
  "data": {
   "shadows": "libcst._nodes.statement.NameItem"
  },
  "type": "import"
 },
 "libcst._typed_visitor.NamedExpr": {
  "data": {
   "shadows": "libcst._nodes.expression.NamedExpr"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Newline": {
  "data": {
   "shadows": "libcst._nodes.whitespace.Newline"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Nonlocal": {
  "data": {
   "shadows": "libcst._nodes.statement.Nonlocal"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Not": {
  "data": {
   "shadows": "libcst._nodes.op.Not"
  },
  "type": "import"
 },
 "libcst._typed_visitor.NotEqual": {
  "data": {
   "shadows": "libcst._nodes.op.NotEqual"
  },
  "type": "import"
 },
 "libcst._typed_visitor.NotIn": {
  "data": {
   "shadows": "libcst._nodes.op.NotIn"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Or": {
  "data": {
   "shadows": "libcst._nodes.op.Or"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Param": {
  "data": {
   "shadows": "libcst._nodes.expression.Param"
  },
  "type": "import"
 },
 "libcst._typed_visitor.ParamSlash": {
  "data": {
   "shadows": "libcst._nodes.expression.ParamSlash"
  },
  "type": "import"
 },
 "libcst._typed_visitor.ParamStar": {
  "data": {
   "shadows": "libcst._nodes.expression.ParamStar"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Parameters": {
  "data": {
   "shadows": "libcst._nodes.expression.Parameters"
  },
  "type": "import"
 },
 "libcst._typed_visitor.ParenthesizedWhitespace": {
  "data": {
   "shadows": "libcst._nodes.whitespace.ParenthesizedWhitespace"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Pass": {
  "data": {
   "shadows": "libcst._nodes.statement.Pass"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Plus": {
  "data": {
   "shadows": "libcst._nodes.op.Plus"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Power": {
  "data": {
   "shadows": "libcst._nodes.op.Power"
  },
  "type": "import"
 },
 "libcst._typed_visitor.PowerAssign": {
  "data": {
   "shadows": "libcst._nodes.op.PowerAssign"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Raise": {
  "data": {
   "shadows": "libcst._nodes.statement.Raise"
  },
  "type": "import"
 },
 "libcst._typed_visitor.RemovalSentinel": {
  "data": {
   "shadows": "libcst._removal_sentinel.RemovalSentinel"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Return": {
  "data": {
   "shadows": "libcst._nodes.statement.Return"
  },
  "type": "import"
 },
 "libcst._typed_visitor.RightCurlyBrace": {
  "data": {
   "shadows": "libcst._nodes.expression.RightCurlyBrace"
  },
  "type": "import"
 },
 "libcst._typed_visitor.RightParen": {
  "data": {
   "shadows": "libcst._nodes.expression.RightParen"
  },
  "type": "import"
 },
 "libcst._typed_visitor.RightShift": {
  "data": {
   "shadows": "libcst._nodes.op.RightShift"
  },
  "type": "import"
 },
 "libcst._typed_visitor.RightShiftAssign": {
  "data": {
   "shadows": "libcst._nodes.op.RightShiftAssign"
  },
  "type": "import"
 },
 "libcst._typed_visitor.RightSquareBracket": {
  "data": {
   "shadows": "libcst._nodes.expression.RightSquareBracket"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Semicolon": {
  "data": {
   "shadows": "libcst._nodes.op.Semicolon"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Set": {
  "data": {
   "shadows": "libcst._nodes.expression.Set"
  },
  "type": "import"
 },
 "libcst._typed_visitor.SetComp": {
  "data": {
   "shadows": "libcst._nodes.expression.SetComp"
  },
  "type": "import"
 },
 "libcst._typed_visitor.SimpleStatementLine": {
  "data": {
   "shadows": "libcst._nodes.statement.SimpleStatementLine"
  },
  "type": "import"
 },
 "libcst._typed_visitor.SimpleStatementSuite": {
  "data": {
   "shadows": "libcst._nodes.statement.SimpleStatementSuite"
  },
  "type": "import"
 },
 "libcst._typed_visitor.SimpleString": {
  "data": {
   "shadows": "libcst._nodes.expression.SimpleString"
  },
  "type": "import"
 },
 "libcst._typed_visitor.SimpleWhitespace": {
  "data": {
   "shadows": "libcst._nodes.whitespace.SimpleWhitespace"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Slice": {
  "data": {
   "shadows": "libcst._nodes.expression.Slice"
  },
  "type": "import"
 },
 "libcst._typed_visitor.StarredDictElement": {
  "data": {
   "shadows": "libcst._nodes.expression.StarredDictElement"
  },
  "type": "import"
 },
 "libcst._typed_visitor.StarredElement": {
  "data": {
   "shadows": "libcst._nodes.expression.StarredElement"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Subscript": {
  "data": {
   "shadows": "libcst._nodes.expression.Subscript"
  },
  "type": "import"
 },
 "libcst._typed_visitor.SubscriptElement": {
  "data": {
   "shadows": "libcst._nodes.expression.SubscriptElement"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Subtract": {
  "data": {
   "shadows": "libcst._nodes.op.Subtract"
  },
  "type": "import"
 },
 "libcst._typed_visitor.SubtractAssign": {
  "data": {
   "shadows": "libcst._nodes.op.SubtractAssign"
  },
  "type": "import"
 },
 "libcst._typed_visitor.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "libcst._typed_visitor.TrailingWhitespace": {
  "data": {
   "shadows": "libcst._nodes.whitespace.TrailingWhitespace"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Try": {
  "data": {
   "shadows": "libcst._nodes.statement.Try"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Tuple": {
  "data": {
   "shadows": "libcst._nodes.expression.Tuple"
  },
  "type": "import"
 },
 "libcst._typed_visitor.UnaryOperation": {
  "data": {
   "shadows": "libcst._nodes.expression.UnaryOperation"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst._typed_visitor.While": {
  "data": {
   "shadows": "libcst._nodes.statement.While"
  },
  "type": "import"
 },
 "libcst._typed_visitor.With": {
  "data": {
   "shadows": "libcst._nodes.statement.With"
  },
  "type": "import"
 },
 "libcst._typed_visitor.WithItem": {
  "data": {
   "shadows": "libcst._nodes.statement.WithItem"
  },
  "type": "import"
 },
 "libcst._typed_visitor.Yield": {
  "data": {
   "shadows": "libcst._nodes.expression.Yield"
  },
  "type": "import"
 },
 "libcst._typed_visitor.mark_no_op": {
  "data": {
   "shadows": "libcst._typed_visitor_base.mark_no_op"
  },
  "type": "import"
 },
 "libcst._typed_visitor_base": {
  "data": {
   "symbols_in_volume": [
    "typing.Callable",
    "typing.TYPE_CHECKING",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "libcst._typed_visitor_base.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst._typed_visitor_base.CSTTypedBaseFunctions": {
  "data": {
   "shadows": "libcst._typed_visitor.CSTTypedBaseFunctions"
  },
  "type": "import"
 },
 "libcst._typed_visitor_base.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst._typed_visitor_base.F": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "libcst._typed_visitor_base.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "libcst._typed_visitor_base.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "libcst._typed_visitor_base.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "libcst._typed_visitor_base.mark_no_op": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst._typed_visitor_base.F",
    "typing.Any",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst._types": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "libcst._types.CSTNode": {
  "data": {
   "shadows": "libcst._nodes.base.CSTNode"
  },
  "type": "import"
 },
 "libcst._types.CSTNodeT": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "libcst._types.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "libcst._types.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "libcst._version": {
  "data": {
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "module"
 },
 "libcst._visitors": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "libcst._visitors.CSTNode": {
  "data": {
   "shadows": "libcst._nodes.base.CSTNode"
  },
  "type": "import"
 },
 "libcst._visitors.CSTNodeT": {
  "data": {
   "shadows": "libcst._types.CSTNodeT"
  },
  "type": "import"
 },
 "libcst._visitors.CSTTransformer": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "libcst._metadata_dependent.MetadataDependent",
    "libcst._typed_visitor.CSTTypedTransformerFunctions"
   ]
  },
  "type": "class"
 },
 "libcst._visitors.CSTTransformer.on_leave": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "getattr",
    "leave_func",
    "libcst._removal_sentinel.RemovalSentinel",
    "libcst._types.CSTNodeT",
    "type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst._visitors.CSTTransformer.on_leave_attribute": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "getattr",
    "leave_func",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "libcst._visitors.CSTTransformer.on_visit": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "bool",
    "getattr",
    "type",
    "visit_func"
   ]
  },
  "type": "function"
 },
 "libcst._visitors.CSTTransformer.on_visit_attribute": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "getattr",
    "str",
    "type",
    "visit_func"
   ]
  },
  "type": "function"
 },
 "libcst._visitors.CSTTypedTransformerFunctions": {
  "data": {
   "shadows": "libcst._typed_visitor.CSTTypedTransformerFunctions"
  },
  "type": "import"
 },
 "libcst._visitors.CSTTypedVisitorFunctions": {
  "data": {
   "shadows": "libcst._typed_visitor.CSTTypedVisitorFunctions"
  },
  "type": "import"
 },
 "libcst._visitors.CSTVisitor": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "libcst._metadata_dependent.MetadataDependent",
    "libcst._typed_visitor.CSTTypedVisitorFunctions"
   ]
  },
  "type": "class"
 },
 "libcst._visitors.CSTVisitor.on_leave": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "getattr",
    "leave_func",
    "type"
   ]
  },
  "type": "function"
 },
 "libcst._visitors.CSTVisitor.on_leave_attribute": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "getattr",
    "leave_func",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "libcst._visitors.CSTVisitor.on_visit": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "bool",
    "getattr",
    "type",
    "visit_func"
   ]
  },
  "type": "function"
 },
 "libcst._visitors.CSTVisitor.on_visit_attribute": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "getattr",
    "str",
    "type",
    "visit_func"
   ]
  },
  "type": "function"
 },
 "libcst._visitors.CSTVisitorT": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "libcst._visitors.MetadataDependent": {
  "data": {
   "shadows": "libcst._metadata_dependent.MetadataDependent"
  },
  "type": "import"
 },
 "libcst._visitors.RemovalSentinel": {
  "data": {
   "shadows": "libcst._removal_sentinel.RemovalSentinel"
  },
  "type": "import"
 },
 "libcst._visitors.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "libcst._visitors.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst.codegen": {
  "data": {},
  "type": "module"
 },
 "libcst.codegen.gather": {
  "data": {
   "symbols_in_volume": [
    "collections.defaultdict",
    "dataclasses.fields",
    "issubclass",
    "libcst.CSTNode",
    "libcst.codegen.gather.Usage",
    "libcst.codegen.gather._calc_node_usage",
    "libcst.codegen.gather._get_bases",
    "libcst.codegen.gather._get_most_generic_base_for_node",
    "libcst.codegen.gather._get_nodes",
    "libcst.codegen.gather.inspect",
    "list",
    "reversed",
    "set",
    "sorted",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Mapping",
    "typing.Sequence",
    "typing.Set",
    "typing.Type"
   ]
  },
  "type": "module"
 },
 "libcst.codegen.gather.ABCSequence": {
  "data": {
   "shadows": "collections.abc.Sequence"
  },
  "type": "import"
 },
 "libcst.codegen.gather.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "libcst.codegen.gather.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "libcst.codegen.gather.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst.codegen.gather.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "libcst.codegen.gather.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst.codegen.gather.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "libcst.codegen.gather.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "libcst.codegen.gather.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst.codegen.gather.Usage": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass"
   ]
  },
  "type": "class"
 },
 "libcst.codegen.gather._calc_node_usage": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "any",
    "dataclasses.replace",
    "isinstance",
    "libcst.codegen.gather._get_args",
    "libcst.codegen.gather._is_maybe",
    "libcst.codegen.gather._is_sequence",
    "libcst.codegen.gather._is_union",
    "object",
    "type"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gather._get_args": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "AttributeError",
    "object",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gather._get_bases": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "dir",
    "getattr",
    "libcst",
    "libcst.CSTNode",
    "typing.Generator",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gather._get_most_generic_base_for_node": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gather._get_nodes": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "TypeError",
    "dir",
    "getattr",
    "issubclass",
    "libcst",
    "libcst.CSTNode",
    "typing.Generator",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gather._get_origin": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "AttributeError",
    "object"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gather._is_maybe": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "issubclass",
    "libcst.MaybeSentinel",
    "object"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gather._is_sequence": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "bool",
    "collections.abc.Sequence",
    "libcst.codegen.gather._get_origin",
    "object",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gather._is_union": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "bool",
    "libcst.codegen.gather._get_origin",
    "object",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gather.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.codegen.gather.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "libcst.codegen.gather.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "libcst.codegen.gather.fields": {
  "data": {
   "shadows": "dataclasses.fields"
  },
  "type": "import"
 },
 "libcst.codegen.gather.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "libcst.codegen.gather.replace": {
  "data": {
   "shadows": "dataclasses.replace"
  },
  "type": "import"
 },
 "libcst.codegen.gen_matcher_classes": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dir",
    "issubclass",
    "libcst",
    "libcst.codegen.gather.all_libcst_nodes",
    "libcst.codegen.gather.typeclasses",
    "libcst.codegen.gen_matcher_classes._get_fields",
    "libcst.codegen.gen_matcher_classes.has_aliases",
    "libcst.codegen.gen_matcher_classes.node_fields",
    "list",
    "print",
    "repr",
    "set",
    "sorted",
    "str",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "module"
 },
 "libcst.codegen.gen_matcher_classes.AddLogicMatchersToUnions": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "libcst.CSTTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.codegen.gen_matcher_classes.AddLogicMatchersToUnions.leave_Subscript": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "libcst.Index",
    "libcst.Name",
    "libcst.Subscript",
    "libcst.SubscriptElement",
    "libcst.codegen.gen_matcher_classes._add_generic",
    "libcst.codegen.gen_matcher_classes._remove_types"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes.AddWildcardsToSequenceUnions": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "libcst.CSTTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.codegen.gen_matcher_classes.AddWildcardsToSequenceUnions.__init__": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Subscript",
    "set",
    "super",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes.AddWildcardsToSequenceUnions.leave_Subscript": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "libcst.Index",
    "libcst.Subscript",
    "libcst.SubscriptElement",
    "libcst.codegen.gen_matcher_classes._add_generic"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes.AddWildcardsToSequenceUnions.visit_Subscript": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "len",
    "libcst.Index",
    "libcst.Name",
    "libcst.Subscript"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes.Alias": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "str",
    "type"
   ]
  },
  "type": "class"
 },
 "libcst.codegen.gen_matcher_classes.CleanseFullTypeNames": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "libcst.CSTTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.codegen.gen_matcher_classes.CleanseFullTypeNames.leave_Attribute": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "libcst.Attribute",
    "libcst.Name",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes.CleanseFullTypeNames.leave_Call": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "isinstance",
    "libcst.BaseExpression",
    "libcst.Call",
    "libcst.Name"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes.CleanseFullTypeNames.leave_Name": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "libcst.Name",
    "libcst.SimpleString",
    "repr",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes.CleanseFullTypeNames.leave_SubscriptElement": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "isinstance",
    "libcst.Index",
    "libcst.MaybeSentinel.DEFAULT",
    "libcst.Name",
    "libcst.RemovalSentinel",
    "libcst.RemoveFromParent",
    "libcst.SubscriptElement",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes.Field": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "aliases",
    "dataclasses.dataclass",
    "libcst.codegen.gen_matcher_classes.Alias",
    "str",
    "type",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "libcst.codegen.gen_matcher_classes.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "libcst.codegen.gen_matcher_classes.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst.codegen.gen_matcher_classes.MatcherClassToLibCSTClass": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "libcst.CSTTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.codegen.gen_matcher_classes.MatcherClassToLibCSTClass.leave_SimpleString": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "libcst.Attribute",
    "libcst.Name",
    "libcst.SimpleString",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.codegen.gen_matcher_classes.RemoveTypesFromGeneric": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "libcst.CSTTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.codegen.gen_matcher_classes.RemoveTypesFromGeneric.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "set",
    "str",
    "typing.Sequence",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes.RemoveTypesFromGeneric.leave_SubscriptElement": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "isinstance",
    "libcst.Index",
    "libcst.Name",
    "libcst.RemovalSentinel",
    "libcst.RemoveFromParent",
    "libcst.SubscriptElement",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst.codegen.gen_matcher_classes.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "libcst.codegen.gen_matcher_classes.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "libcst.codegen.gen_matcher_classes.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "libcst.codegen.gen_matcher_classes.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst.codegen.gen_matcher_classes._add_generic": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "libcst.BaseExpression",
    "libcst.Index",
    "libcst.Name",
    "libcst.Subscript",
    "libcst.SubscriptElement",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes._convert_match_nodes_to_cst_nodes": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "libcst.BaseExpression",
    "libcst.codegen.gen_matcher_classes.MatcherClassToLibCSTClass",
    "libcst.ensure_type"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes._get_alias_name": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "any",
    "isinstance",
    "libcst.CSTNode",
    "libcst.Name",
    "libcst.SimpleString",
    "libcst.Subscript",
    "libcst.codegen.gen_matcher_classes._get_raw_name",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes._get_clean_type_and_aliases": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "Exception",
    "aliases",
    "isinstance",
    "libcst.CSTNode",
    "libcst.Module",
    "libcst.Name",
    "libcst.SimpleString",
    "libcst.Subscript",
    "libcst.codegen.gen_matcher_classes.AddLogicMatchersToUnions",
    "libcst.codegen.gen_matcher_classes.AddWildcardsToSequenceUnions",
    "libcst.codegen.gen_matcher_classes.Alias",
    "libcst.codegen.gen_matcher_classes.CleanseFullTypeNames",
    "libcst.codegen.gen_matcher_classes._get_clean_type_from_expression",
    "libcst.codegen.gen_matcher_classes._get_clean_type_from_subscript",
    "libcst.ensure_type",
    "libcst.parse_expression",
    "object",
    "repr",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes._get_clean_type_from_expression": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "aliases",
    "libcst.BaseExpression",
    "libcst.codegen.gen_matcher_classes.Alias",
    "libcst.codegen.gen_matcher_classes._get_alias_name",
    "libcst.codegen.gen_matcher_classes._get_match_if_true",
    "libcst.codegen.gen_matcher_classes._get_match_metadata",
    "libcst.codegen.gen_matcher_classes._get_wrapped_union_type",
    "libcst.codegen.gen_matcher_classes._wrap_clean_type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes._get_clean_type_from_subscript": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "Exception",
    "aliases",
    "isinstance",
    "len",
    "libcst.BaseExpression",
    "libcst.Index",
    "libcst.Name",
    "libcst.SimpleString",
    "libcst.Subscript",
    "libcst.codegen.gen_matcher_classes.Alias",
    "libcst.codegen.gen_matcher_classes._get_clean_type_from_expression",
    "libcst.codegen.gen_matcher_classes._get_clean_type_from_union",
    "libcst.codegen.gen_matcher_classes._get_do_not_care",
    "libcst.codegen.gen_matcher_classes._get_match_if_true",
    "libcst.codegen.gen_matcher_classes._get_wrapped_union_type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes._get_clean_type_from_union": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "aliases",
    "libcst.BaseExpression",
    "libcst.Subscript",
    "libcst.codegen.gen_matcher_classes.Alias",
    "libcst.codegen.gen_matcher_classes._get_alias_name",
    "libcst.codegen.gen_matcher_classes._get_match_if_true",
    "libcst.codegen.gen_matcher_classes._get_match_metadata",
    "libcst.codegen.gen_matcher_classes._maybe_fix_sequence_in_union",
    "libcst.codegen.gen_matcher_classes._wrap_clean_type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes._get_do_not_care": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "libcst.Index",
    "libcst.Name",
    "libcst.SubscriptElement"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes._get_fields": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "aliases",
    "dataclasses.fields",
    "libcst.CSTNode",
    "libcst.codegen.gen_matcher_classes.Field",
    "libcst.codegen.gen_matcher_classes._get_clean_type_and_aliases",
    "typing.Generator",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes._get_match_if_true": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "libcst.BaseExpression",
    "libcst.Element",
    "libcst.Index",
    "libcst.List",
    "libcst.Name",
    "libcst.Subscript",
    "libcst.SubscriptElement",
    "libcst.codegen.gen_matcher_classes._convert_match_nodes_to_cst_nodes"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes._get_match_metadata": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "libcst.Index",
    "libcst.Name",
    "libcst.SubscriptElement"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes._get_raw_name": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "isinstance",
    "libcst.CSTNode",
    "libcst.Index",
    "libcst.Name",
    "libcst.SimpleString",
    "libcst.SubscriptElement",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes._get_wrapped_union_type": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "libcst.BaseExpression",
    "libcst.Index",
    "libcst.Name",
    "libcst.Subscript",
    "libcst.SubscriptElement"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes._maybe_fix_sequence_in_union": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "aliases",
    "isinstance",
    "libcst.Index",
    "libcst.Subscript",
    "libcst.SubscriptElement",
    "libcst.codegen.gen_matcher_classes.Alias",
    "libcst.codegen.gen_matcher_classes._get_clean_type_from_subscript",
    "libcst.ensure_type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes._remove_types": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "libcst.BaseExpression",
    "libcst.codegen.gen_matcher_classes.RemoveTypesFromGeneric",
    "libcst.ensure_type",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes._wrap_clean_type": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "aliases.append",
    "libcst.BaseExpression",
    "libcst.Module",
    "libcst.Name",
    "libcst.Subscript",
    "libcst.codegen.gen_matcher_classes.Alias",
    "libcst.codegen.gen_matcher_classes._get_do_not_care",
    "libcst.codegen.gen_matcher_classes._get_wrapped_union_type",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes.all_libcst_nodes": {
  "data": {
   "shadows": "libcst.codegen.gather.all_libcst_nodes"
  },
  "type": "import"
 },
 "libcst.codegen.gen_matcher_classes.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.codegen.gen_matcher_classes.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "libcst.codegen.gen_matcher_classes.ensure_type": {
  "data": {
   "shadows": "libcst.ensure_type"
  },
  "type": "import"
 },
 "libcst.codegen.gen_matcher_classes.fields": {
  "data": {
   "shadows": "dataclasses.fields"
  },
  "type": "import"
 },
 "libcst.codegen.gen_matcher_classes.fields_printed": {
  "data": {
   "lineno": 556
  },
  "type": "constant"
 },
 "libcst.codegen.gen_matcher_classes.has_aliases": {
  "data": {
   "lineno": 543
  },
  "type": "constant"
 },
 "libcst.codegen.gen_matcher_classes.node_fields": {
  "data": {
   "lineno": 536
  },
  "type": "constant"
 },
 "libcst.codegen.gen_matcher_classes.parse_expression": {
  "data": {
   "shadows": "libcst.parse_expression"
  },
  "type": "import"
 },
 "libcst.codegen.gen_matcher_classes.typeclasses": {
  "data": {
   "shadows": "libcst.codegen.gather.typeclasses"
  },
  "type": "import"
 },
 "libcst.codegen.gen_type_mapping": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "libcst.codegen.gather.imports.items",
    "libcst.codegen.gather.nodebases",
    "libcst.codegen.gather.nodebases.__name__",
    "libcst.codegen.gather.nodebases.keys",
    "libcst.codegen.gather.nodeuses",
    "libcst.codegen.gen_type_mapping.base_uses",
    "libcst.codegen.gen_type_mapping.name",
    "libcst.codegen.gen_type_mapping.node_uses",
    "list",
    "print",
    "sorted",
    "str",
    "typing.List"
   ]
  },
  "type": "module"
 },
 "libcst.codegen.gen_type_mapping.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst.codegen.gen_type_mapping.base_uses": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "libcst.codegen.gen_type_mapping.imports": {
  "data": {
   "shadows": "libcst.codegen.gather.imports"
  },
  "type": "import"
 },
 "libcst.codegen.gen_type_mapping.name": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "libcst.codegen.gen_type_mapping.node_uses": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "libcst.codegen.gen_type_mapping.nodebases": {
  "data": {
   "shadows": "libcst.codegen.gather.nodebases"
  },
  "type": "import"
 },
 "libcst.codegen.gen_type_mapping.nodeuses": {
  "data": {
   "shadows": "libcst.codegen.gather.nodeuses"
  },
  "type": "import"
 },
 "libcst.codegen.gen_visitor_functions": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dataclasses.fields",
    "libcst.codegen.gather.imports.items",
    "libcst.codegen.gather.nodebases",
    "libcst.codegen.gather.nodebases.__name__",
    "libcst.codegen.gather.nodebases.keys",
    "libcst.codegen.gather.nodeuses",
    "libcst.codegen.gen_visitor_functions.base_uses",
    "libcst.codegen.gen_visitor_functions.name",
    "libcst.codegen.gen_visitor_functions.node_uses",
    "list",
    "print",
    "sorted",
    "str",
    "typing.List"
   ]
  },
  "type": "module"
 },
 "libcst.codegen.gen_visitor_functions.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst.codegen.gen_visitor_functions.base_uses": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "libcst.codegen.gen_visitor_functions.fields": {
  "data": {
   "shadows": "dataclasses.fields"
  },
  "type": "import"
 },
 "libcst.codegen.gen_visitor_functions.imports": {
  "data": {
   "shadows": "libcst.codegen.gather.imports"
  },
  "type": "import"
 },
 "libcst.codegen.gen_visitor_functions.name": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "libcst.codegen.gen_visitor_functions.node_uses": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "libcst.codegen.gen_visitor_functions.nodebases": {
  "data": {
   "shadows": "libcst.codegen.gather.nodebases"
  },
  "type": "import"
 },
 "libcst.codegen.gen_visitor_functions.nodeuses": {
  "data": {
   "shadows": "libcst.codegen.gather.nodeuses"
  },
  "type": "import"
 },
 "libcst.codegen.generate": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "libcst.codegen.generate.main",
    "libcst.codegen.generate.sys"
   ]
  },
  "type": "module"
 },
 "libcst.codegen.generate.DoubleQuoteForwardRefsTransformer": {
  "data": {
   "shadows": "libcst.codegen.transforms.DoubleQuoteForwardRefsTransformer"
  },
  "type": "import"
 },
 "libcst.codegen.generate.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst.codegen.generate.SimplifyUnionsTransformer": {
  "data": {
   "shadows": "libcst.codegen.transforms.SimplifyUnionsTransformer"
  },
  "type": "import"
 },
 "libcst.codegen.generate.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "libcst.codegen.generate.clean_generated_code": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "libcst.Module",
    "libcst.codegen.transforms.DoubleQuoteForwardRefsTransformer",
    "libcst.codegen.transforms.SimplifyUnionsTransformer",
    "libcst.ensure_type",
    "libcst.parse_module",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.generate.codegen_matchers": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "libcst.codegen.gen_matcher_classes.generated_code",
    "libcst.codegen.generate.clean_generated_code",
    "libcst.codegen.generate.format_file",
    "libcst.codegen.generate.os",
    "open",
    "print"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.generate.codegen_return_types": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "libcst.codegen.gen_type_mapping.generated_code",
    "libcst.codegen.generate.clean_generated_code",
    "libcst.codegen.generate.format_file",
    "libcst.codegen.generate.os",
    "open",
    "print"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.generate.codegen_visitors": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "Exception",
    "libcst.codegen.gen_visitor_functions.generated_code",
    "libcst.codegen.generate.clean_generated_code",
    "libcst.codegen.generate.format_file",
    "libcst.codegen.generate.os",
    "libcst.codegen.generate.shutil",
    "libcst.codegen.generate.subprocess",
    "libcst.codegen.generate.sys",
    "open",
    "print"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.generate.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.codegen.generate.ensure_type": {
  "data": {
   "shadows": "libcst.ensure_type"
  },
  "type": "import"
 },
 "libcst.codegen.generate.format_file": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "libcst.codegen.generate.os",
    "libcst.codegen.generate.subprocess",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.generate.main": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "int",
    "libcst.codegen.generate.argparse",
    "libcst.codegen.generate.codegen_matchers",
    "libcst.codegen.generate.codegen_return_types",
    "libcst.codegen.generate.codegen_visitors",
    "print",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.generate.matcher_codegen": {
  "data": {
   "shadows": "libcst.codegen.gen_matcher_classes"
  },
  "type": "import"
 },
 "libcst.codegen.generate.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libcst.codegen.generate.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "libcst.codegen.generate.parse_module": {
  "data": {
   "shadows": "libcst.parse_module"
  },
  "type": "import"
 },
 "libcst.codegen.generate.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "libcst.codegen.generate.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "libcst.codegen.generate.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libcst.codegen.generate.type_codegen": {
  "data": {
   "shadows": "libcst.codegen.gen_type_mapping"
  },
  "type": "import"
 },
 "libcst.codegen.generate.visitor_codegen": {
  "data": {
   "shadows": "libcst.codegen.gen_visitor_functions"
  },
  "type": "import"
 },
 "libcst.codegen.tests": {
  "data": {},
  "type": "module"
 },
 "libcst.codegen.tests.test_codegen_clean": {
  "data": {},
  "type": "module"
 },
 "libcst.codegen.tests.test_codegen_clean.TestCodegenClean": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.codegen.tests.test_codegen_clean.TestCodegenClean.test_codegen_clean_matcher_classes": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "Exception",
    "libcst.codegen.gen_matcher_classes.generated_code",
    "libcst.codegen.generate.clean_generated_code",
    "libcst.codegen.generate.format_file",
    "libcst.codegen.tests.test_codegen_clean.os",
    "open"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.tests.test_codegen_clean.TestCodegenClean.test_codegen_clean_return_types": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "Exception",
    "libcst.codegen.gen_type_mapping.generated_code",
    "libcst.codegen.generate.clean_generated_code",
    "libcst.codegen.generate.format_file",
    "libcst.codegen.tests.test_codegen_clean.os",
    "open"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.tests.test_codegen_clean.TestCodegenClean.test_codegen_clean_visitor_functions": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "Exception",
    "libcst.codegen.gen_visitor_functions.generated_code",
    "libcst.codegen.generate.clean_generated_code",
    "libcst.codegen.generate.format_file",
    "libcst.codegen.tests.test_codegen_clean.os",
    "open"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.tests.test_codegen_clean.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.codegen.tests.test_codegen_clean.clean_generated_code": {
  "data": {
   "shadows": "libcst.codegen.generate.clean_generated_code"
  },
  "type": "import"
 },
 "libcst.codegen.tests.test_codegen_clean.format_file": {
  "data": {
   "shadows": "libcst.codegen.generate.format_file"
  },
  "type": "import"
 },
 "libcst.codegen.tests.test_codegen_clean.matcher_codegen": {
  "data": {
   "shadows": "libcst.codegen.gen_matcher_classes"
  },
  "type": "import"
 },
 "libcst.codegen.tests.test_codegen_clean.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libcst.codegen.tests.test_codegen_clean.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "libcst.codegen.tests.test_codegen_clean.type_codegen": {
  "data": {
   "shadows": "libcst.codegen.gen_type_mapping"
  },
  "type": "import"
 },
 "libcst.codegen.tests.test_codegen_clean.visitor_codegen": {
  "data": {
   "shadows": "libcst.codegen.gen_visitor_functions"
  },
  "type": "import"
 },
 "libcst.codegen.transforms": {
  "data": {},
  "type": "module"
 },
 "libcst.codegen.transforms.DoubleQuoteForwardRefsTransformer": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.codegen.transforms.DoubleQuoteForwardRefsTransformer.leave_SimpleString": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "SyntaxError",
    "libcst.SimpleString",
    "libcst.codegen.transforms.ast",
    "libcst.matchers.Annotation",
    "libcst.matchers.call_if_inside"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.transforms.SimplifyUnionsTransformer": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.codegen.transforms.SimplifyUnionsTransformer._leave_union": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "len",
    "libcst.BaseExpression",
    "libcst.Index",
    "libcst.Subscript",
    "libcst.ensure_type",
    "libcst.matchers.Name",
    "libcst.matchers.Subscript",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.codegen.transforms.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "libcst.codegen.transforms.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.codegen.transforms.m": {
  "data": {
   "shadows": "libcst.matchers"
  },
  "type": "import"
 },
 "libcst.codemod": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.Codemod": {
  "data": {
   "shadows": "libcst.codemod._codemod.Codemod"
  },
  "type": "import"
 },
 "libcst.codemod.CodemodCommand": {
  "data": {
   "shadows": "libcst.codemod._command.CodemodCommand"
  },
  "type": "import"
 },
 "libcst.codemod.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod._context.CodemodContext"
  },
  "type": "import"
 },
 "libcst.codemod.CodemodTest": {
  "data": {
   "shadows": "libcst.codemod._testing.CodemodTest"
  },
  "type": "import"
 },
 "libcst.codemod.ContextAwareTransformer": {
  "data": {
   "shadows": "libcst.codemod._visitor.ContextAwareTransformer"
  },
  "type": "import"
 },
 "libcst.codemod.ContextAwareVisitor": {
  "data": {
   "shadows": "libcst.codemod._visitor.ContextAwareVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.MagicArgsCodemodCommand": {
  "data": {
   "shadows": "libcst.codemod._command.MagicArgsCodemodCommand"
  },
  "type": "import"
 },
 "libcst.codemod.ParallelTransformResult": {
  "data": {
   "shadows": "libcst.codemod._cli.ParallelTransformResult"
  },
  "type": "import"
 },
 "libcst.codemod.SkipFile": {
  "data": {
   "shadows": "libcst.codemod._runner.SkipFile"
  },
  "type": "import"
 },
 "libcst.codemod.SkipReason": {
  "data": {
   "shadows": "libcst.codemod._runner.SkipReason"
  },
  "type": "import"
 },
 "libcst.codemod.TransformExit": {
  "data": {
   "shadows": "libcst.codemod._runner.TransformExit"
  },
  "type": "import"
 },
 "libcst.codemod.TransformFailure": {
  "data": {
   "shadows": "libcst.codemod._runner.TransformFailure"
  },
  "type": "import"
 },
 "libcst.codemod.TransformResult": {
  "data": {
   "shadows": "libcst.codemod._runner.TransformResult"
  },
  "type": "import"
 },
 "libcst.codemod.TransformSkip": {
  "data": {
   "shadows": "libcst.codemod._runner.TransformSkip"
  },
  "type": "import"
 },
 "libcst.codemod.TransformSuccess": {
  "data": {
   "shadows": "libcst.codemod._runner.TransformSuccess"
  },
  "type": "import"
 },
 "libcst.codemod.VisitorBasedCodemodCommand": {
  "data": {
   "shadows": "libcst.codemod._command.VisitorBasedCodemodCommand"
  },
  "type": "import"
 },
 "libcst.codemod.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "libcst.codemod._cli": {
  "data": {
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "module"
 },
 "libcst.codemod._cli.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst.codemod._cli.AnyStr": {
  "data": {
   "shadows": "typing.AnyStr"
  },
  "type": "import"
 },
 "libcst.codemod._cli.Codemod": {
  "data": {
   "shadows": "libcst.codemod._codemod.Codemod"
  },
  "type": "import"
 },
 "libcst.codemod._cli.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "libcst.codemod._cli.DummyPool": {
  "data": {
   "shadows": "libcst.codemod._dummy_pool.DummyPool"
  },
  "type": "import"
 },
 "libcst.codemod._cli.ExecutionConfig": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "int",
    "str",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst.codemod._cli.ExecutionResult": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.codemod._runner.TransformResult",
    "str"
   ]
  },
  "type": "class"
 },
 "libcst.codemod._cli.FullRepoManager": {
  "data": {
   "shadows": "libcst.metadata.FullRepoManager"
  },
  "type": "import"
 },
 "libcst.codemod._cli.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst.codemod._cli.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.codemod._cli.ParallelTransformResult": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "int"
   ]
  },
  "type": "class"
 },
 "libcst.codemod._cli.PartialParserConfig": {
  "data": {
   "shadows": "libcst.PartialParserConfig"
  },
  "type": "import"
 },
 "libcst.codemod._cli.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "libcst.codemod._cli.Pool": {
  "data": {
   "shadows": "multiprocessing.Pool"
  },
  "type": "import"
 },
 "libcst.codemod._cli.Progress": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "class"
 },
 "libcst.codemod._cli.Progress.__init__": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "len",
    "libcst.codemod._cli.time",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._cli.Progress._human_seconds": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "divmod",
    "float",
    "int",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._cli.Progress.clear": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "libcst.codemod._cli.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._cli.Progress.estimate_completion": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "float",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._cli.Progress.print": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "float",
    "int",
    "libcst.codemod._cli.sys",
    "libcst.codemod._cli.time",
    "max",
    "print"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._cli.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst.codemod._cli.SkipFile": {
  "data": {
   "shadows": "libcst.codemod._runner.SkipFile"
  },
  "type": "import"
 },
 "libcst.codemod._cli.SkipReason": {
  "data": {
   "shadows": "libcst.codemod._runner.SkipReason"
  },
  "type": "import"
 },
 "libcst.codemod._cli.TransformExit": {
  "data": {
   "shadows": "libcst.codemod._runner.TransformExit"
  },
  "type": "import"
 },
 "libcst.codemod._cli.TransformFailure": {
  "data": {
   "shadows": "libcst.codemod._runner.TransformFailure"
  },
  "type": "import"
 },
 "libcst.codemod._cli.TransformResult": {
  "data": {
   "shadows": "libcst.codemod._runner.TransformResult"
  },
  "type": "import"
 },
 "libcst.codemod._cli.TransformSkip": {
  "data": {
   "shadows": "libcst.codemod._runner.TransformSkip"
  },
  "type": "import"
 },
 "libcst.codemod._cli.TransformSuccess": {
  "data": {
   "shadows": "libcst.codemod._runner.TransformSuccess"
  },
  "type": "import"
 },
 "libcst.codemod._cli.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst.codemod._cli._calculate_module": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "len",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._cli._execute_transform": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "Exception",
    "KeyboardInterrupt",
    "dataclasses.replace",
    "libcst.PartialParserConfig",
    "libcst.codemod._cli.ExecutionConfig",
    "libcst.codemod._cli.ExecutionResult",
    "libcst.codemod._cli._calculate_module",
    "libcst.codemod._cli.diff_code",
    "libcst.codemod._cli.invoke_formatter",
    "libcst.codemod._cli.re",
    "libcst.codemod._cli.traceback",
    "libcst.codemod._codemod.Codemod",
    "libcst.codemod._runner.SkipFile",
    "libcst.codemod._runner.SkipReason.BLACKLISTED",
    "libcst.codemod._runner.SkipReason.GENERATED",
    "libcst.codemod._runner.SkipReason.OTHER",
    "libcst.codemod._runner.TransformExit",
    "libcst.codemod._runner.TransformFailure",
    "libcst.codemod._runner.TransformSkip",
    "libcst.codemod._runner.TransformSuccess",
    "libcst.parse_module",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._cli._execute_transform_wrap": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "libcst.codemod._cli.ExecutionResult",
    "libcst.codemod._cli._execute_transform",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._cli._print_parallel_result": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "libcst.codemod._cli.ExecutionResult",
    "libcst.codemod._cli.Progress",
    "libcst.codemod._cli.print_execution_result",
    "libcst.codemod._cli.sys",
    "libcst.codemod._runner.SkipReason.BLACKLISTED",
    "libcst.codemod._runner.SkipReason.GENERATED",
    "libcst.codemod._runner.TransformFailure",
    "libcst.codemod._runner.TransformSkip",
    "libcst.codemod._runner.TransformSuccess",
    "print"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._cli.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "libcst.codemod._cli.cpu_count": {
  "data": {
   "shadows": "multiprocessing.cpu_count"
  },
  "type": "import"
 },
 "libcst.codemod._cli.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "libcst.codemod._cli.diff_code": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "int",
    "libcst.codemod._cli.difflib",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._cli.difflib": {
  "data": {
   "shadows": "difflib"
  },
  "type": "import"
 },
 "libcst.codemod._cli.exec_transform_with_prettyprint": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "isinstance",
    "libcst.codemod._cli.invoke_formatter",
    "libcst.codemod._cli.print_execution_result",
    "libcst.codemod._cli.sys",
    "libcst.codemod._cli.traceback",
    "libcst.codemod._codemod.Codemod",
    "libcst.codemod._runner.TransformExit",
    "libcst.codemod._runner.TransformFailure",
    "libcst.codemod._runner.TransformSkip",
    "libcst.codemod._runner.transform_module",
    "print",
    "str",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._cli.gather_files": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "bool",
    "pathlib.Path",
    "sorted",
    "str",
    "typing.List",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._cli.invoke_formatter": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "Exception",
    "bytes",
    "isinstance",
    "len",
    "libcst.codemod._cli.subprocess",
    "str",
    "typing.AnyStr",
    "typing.Sequence",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._cli.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "libcst.codemod._cli.parallel_exec_transform_with_prettyprint": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "dataclasses.replace",
    "int",
    "isinstance",
    "len",
    "libcst.PartialParserConfig",
    "libcst.codemod._cli.ExecutionConfig",
    "libcst.codemod._cli.ParallelTransformResult",
    "libcst.codemod._cli.Progress",
    "libcst.codemod._cli._execute_transform_wrap",
    "libcst.codemod._cli._print_parallel_result",
    "libcst.codemod._cli.sys",
    "libcst.codemod._codemod.Codemod",
    "libcst.codemod._dummy_pool.DummyPool",
    "libcst.codemod._runner.TransformExit",
    "libcst.codemod._runner.TransformFailure",
    "libcst.codemod._runner.TransformSkip",
    "libcst.codemod._runner.TransformSuccess",
    "libcst.metadata.FullRepoManager",
    "libcst.parse_module",
    "list",
    "multiprocessing.Pool",
    "multiprocessing.cpu_count",
    "pool_impl",
    "print",
    "sorted",
    "str",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._cli.parse_module": {
  "data": {
   "shadows": "libcst.parse_module"
  },
  "type": "import"
 },
 "libcst.codemod._cli.print_execution_result": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "isinstance",
    "libcst.codemod._cli.subprocess",
    "libcst.codemod._cli.sys",
    "libcst.codemod._runner.TransformFailure",
    "libcst.codemod._runner.TransformResult",
    "print"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._cli.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "libcst.codemod._cli.replace": {
  "data": {
   "shadows": "dataclasses.replace"
  },
  "type": "import"
 },
 "libcst.codemod._cli.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "libcst.codemod._cli.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libcst.codemod._cli.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "libcst.codemod._cli.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "libcst.codemod._cli.transform_module": {
  "data": {
   "shadows": "libcst.codemod._runner.transform_module"
  },
  "type": "import"
 },
 "libcst.codemod._codemod": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod._codemod.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "libcst.codemod._codemod.Codemod": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst.MetadataDependent"
   ]
  },
  "type": "class"
 },
 "libcst.codemod._codemod.Codemod.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "libcst.MetadataDependent.__init__",
    "libcst.codemod._context.CodemodContext"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._codemod.Codemod._handle_metadata_reference": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "dataclasses.replace",
    "libcst.MetadataWrapper",
    "libcst.Module",
    "typing.Generator"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._codemod.Codemod.module": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "Exception",
    "libcst.Module",
    "property"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._codemod.Codemod.should_allow_multiple_passes": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._codemod.Codemod.transform_module": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "libcst.Module"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._codemod.Codemod.transform_module_impl": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "libcst.Module"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._codemod.Codemod.warn": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._codemod.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod._context.CodemodContext"
  },
  "type": "import"
 },
 "libcst.codemod._codemod.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "libcst.codemod._codemod.MetadataDependent": {
  "data": {
   "shadows": "libcst.MetadataDependent"
  },
  "type": "import"
 },
 "libcst.codemod._codemod.MetadataWrapper": {
  "data": {
   "shadows": "libcst.MetadataWrapper"
  },
  "type": "import"
 },
 "libcst.codemod._codemod.Module": {
  "data": {
   "shadows": "libcst.Module"
  },
  "type": "import"
 },
 "libcst.codemod._codemod.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "libcst.codemod._codemod.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "libcst.codemod._codemod.replace": {
  "data": {
   "shadows": "dataclasses.replace"
  },
  "type": "import"
 },
 "libcst.codemod._command": {
  "data": {
   "symbols_in_volume": [
    "libcst.codemod._codemod.Codemod",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "libcst.codemod._command.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "libcst.codemod._command.AddImportsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors._add_imports.AddImportsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod._command.Codemod": {
  "data": {
   "shadows": "libcst.codemod._codemod.Codemod"
  },
  "type": "import"
 },
 "libcst.codemod._command.CodemodCommand": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst.codemod._codemod.Codemod",
    "str"
   ]
  },
  "type": "class"
 },
 "libcst.codemod._command.CodemodCommand._instantiate_and_run": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "libcst.Module",
    "libcst.codemod._command._Codemod",
    "transform",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._command.CodemodCommand.add_args": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "libcst.codemod._command.argparse",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._command.CodemodCommand.transform_module": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "libcst.Module",
    "libcst.codemod._codemod.Codemod",
    "libcst.codemod.visitors._add_imports.AddImportsVisitor",
    "libcst.codemod.visitors._add_imports.AddImportsVisitor.CONTEXT_KEY",
    "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor",
    "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor.CONTEXT_KEY",
    "str",
    "super",
    "transform",
    "typing.Dict",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._command.CodemodCommand.transform_module_impl": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "libcst.Module"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._command.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod._context.CodemodContext"
  },
  "type": "import"
 },
 "libcst.codemod._command.ContextAwareTransformer": {
  "data": {
   "shadows": "libcst.codemod._visitor.ContextAwareTransformer"
  },
  "type": "import"
 },
 "libcst.codemod._command.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "libcst.codemod._command.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "libcst.codemod._command.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst.codemod._command.MagicArgsCodemodCommand": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst.codemod._command.CodemodCommand"
   ]
  },
  "type": "class"
 },
 "libcst.codemod._command.MagicArgsCodemodCommand.__init__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "libcst.codemod._context.CodemodContext",
    "object",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._command.MagicArgsCodemodCommand._instantiate": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "KeyError",
    "enumerate",
    "len",
    "libcst.codemod._codemod.Codemod",
    "libcst.codemod._command.inspect",
    "object",
    "str",
    "transform",
    "transform.__init__",
    "transform.__name__",
    "typing.Dict",
    "typing.List",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._command.MagicArgsCodemodCommand.get_transforms": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "libcst.codemod._codemod.Codemod",
    "typing.Generator",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._command.MagicArgsCodemodCommand.transform_module_impl": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "libcst.Module",
    "transform"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._command.Module": {
  "data": {
   "shadows": "libcst.Module"
  },
  "type": "import"
 },
 "libcst.codemod._command.RemoveImportsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod._command.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "libcst.codemod._command.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "libcst.codemod._command.VisitorBasedCodemodCommand": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst.codemod._command.CodemodCommand",
    "libcst.codemod._visitor.ContextAwareTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.codemod._command._Codemod": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "libcst.codemod._command.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "libcst.codemod._command.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "libcst.codemod._command.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "libcst.codemod._context": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod._context.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst.codemod._context.CodemodContext": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "dataclasses.field",
    "dict",
    "libcst.MetadataWrapper",
    "libcst.metadata.FullRepoManager",
    "list",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "libcst.codemod._context.CodemodContext.module": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "libcst.Module",
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._context.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "libcst.codemod._context.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst.codemod._context.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.codemod._context.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.codemod._context.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "libcst.codemod._context.field": {
  "data": {
   "shadows": "dataclasses.field"
  },
  "type": "import"
 },
 "libcst.codemod._context.meta": {
  "data": {
   "shadows": "libcst.metadata"
  },
  "type": "import"
 },
 "libcst.codemod._dummy_pool": {
  "data": {
   "symbols_in_volume": [
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "libcst.codemod._dummy_pool.ArgT": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "libcst.codemod._dummy_pool.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst.codemod._dummy_pool.DummyPool": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "libcst.codemod._dummy_pool.DummyPool.__enter__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "libcst.codemod._dummy_pool.DummyPool.__exit__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "Exception",
    "types.TracebackType",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._dummy_pool.DummyPool.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "int",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._dummy_pool.DummyPool.imap_unordered": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "func",
    "int",
    "libcst.codemod._dummy_pool.ArgT",
    "libcst.codemod._dummy_pool.RetT",
    "typing.Callable",
    "typing.Generator",
    "typing.Iterable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._dummy_pool.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "libcst.codemod._dummy_pool.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "libcst.codemod._dummy_pool.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.codemod._dummy_pool.RetT": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "libcst.codemod._dummy_pool.TracebackType": {
  "data": {
   "shadows": "types.TracebackType"
  },
  "type": "import"
 },
 "libcst.codemod._dummy_pool.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "libcst.codemod._dummy_pool.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "libcst.codemod._runner": {
  "data": {
   "symbols_in_volume": [
    "libcst.codemod._runner.TransformExit",
    "libcst.codemod._runner.TransformFailure",
    "libcst.codemod._runner.TransformSkip",
    "libcst.codemod._runner.TransformSuccess",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "libcst.codemod._runner.Codemod": {
  "data": {
   "shadows": "libcst.codemod._codemod.Codemod"
  },
  "type": "import"
 },
 "libcst.codemod._runner.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "libcst.codemod._runner.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.codemod._runner.PartialParserConfig": {
  "data": {
   "shadows": "libcst.PartialParserConfig"
  },
  "type": "import"
 },
 "libcst.codemod._runner.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst.codemod._runner.SkipFile": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "libcst.codemod._runner.SkipReason": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "libcst.codemod._runner.TransformExit": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst.codemod._runner.TransformFailure": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "Exception",
    "dataclasses.dataclass",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst.codemod._runner.TransformResult": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "libcst.codemod._runner.TransformSkip": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.codemod._runner.SkipReason",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst.codemod._runner.TransformSuccess": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst.codemod._runner.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst.codemod._runner.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "libcst.codemod._runner.parse_module": {
  "data": {
   "shadows": "libcst.parse_module"
  },
  "type": "import"
 },
 "libcst.codemod._runner.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "libcst.codemod._runner.transform_module": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "Exception",
    "KeyboardInterrupt",
    "libcst.PartialParserConfig",
    "libcst.codemod._codemod.Codemod",
    "libcst.codemod._runner.SkipFile",
    "libcst.codemod._runner.SkipReason",
    "libcst.codemod._runner.TransformExit",
    "libcst.codemod._runner.TransformFailure",
    "libcst.codemod._runner.TransformResult",
    "libcst.codemod._runner.TransformSkip",
    "libcst.codemod._runner.TransformSuccess",
    "libcst.codemod._runner.traceback",
    "libcst.parse_module",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._testing": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod._testing.Codemod": {
  "data": {
   "shadows": "libcst.codemod._codemod.Codemod"
  },
  "type": "import"
 },
 "libcst.codemod._testing.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod._context.CodemodContext"
  },
  "type": "import"
 },
 "libcst.codemod._testing.CodemodTest": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "libcst.codemod._testing._CodemodTest",
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.codemod._testing.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.codemod._testing.PartialParserConfig": {
  "data": {
   "shadows": "libcst.PartialParserConfig"
  },
  "type": "import"
 },
 "libcst.codemod._testing.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst.codemod._testing.SkipFile": {
  "data": {
   "shadows": "libcst.codemod._runner.SkipFile"
  },
  "type": "import"
 },
 "libcst.codemod._testing.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "libcst.codemod._testing.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.codemod._testing._CodemodTest": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "libcst.codemod._codemod.Codemod",
    "typing.Type"
   ]
  },
  "type": "class"
 },
 "libcst.codemod._testing._CodemodTest.assertCodeEqual": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._testing._CodemodTest.assertCodemod": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "bool",
    "libcst.PartialParserConfig",
    "libcst.codemod._context.CodemodContext",
    "libcst.codemod._runner.SkipFile",
    "libcst.parse_module",
    "object",
    "str",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._testing._CodemodTest.make_fixture_data": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "filter_line",
    "staticmethod",
    "str",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._testing._CodemodTest.make_fixture_data.filter_line": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._testing.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "libcst.codemod._testing.parse_module": {
  "data": {
   "shadows": "libcst.parse_module"
  },
  "type": "import"
 },
 "libcst.codemod._visitor": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod._visitor.Codemod": {
  "data": {
   "shadows": "libcst.codemod._codemod.Codemod"
  },
  "type": "import"
 },
 "libcst.codemod._visitor.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod._context.CodemodContext"
  },
  "type": "import"
 },
 "libcst.codemod._visitor.ContextAwareTransformer": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.codemod._codemod.Codemod",
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.codemod._visitor.ContextAwareTransformer.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "libcst.codemod._codemod.Codemod.__init__",
    "libcst.codemod._context.CodemodContext",
    "libcst.matchers.MatcherDecoratableTransformer.__init__"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._visitor.ContextAwareTransformer.transform_module_impl": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "libcst.Module"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._visitor.ContextAwareVisitor": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "libcst.MetadataDependent",
    "libcst.matchers.MatcherDecoratableVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.codemod._visitor.ContextAwareVisitor.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "Exception",
    "libcst.CSTNode",
    "libcst.MetadataDependent.__init__",
    "libcst.codemod._context.CodemodContext",
    "libcst.matchers.MatcherDecoratableVisitor.__init__",
    "libcst.metadata.ProviderT",
    "object",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._visitor.ContextAwareVisitor.module": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "Exception",
    "libcst.Module",
    "property"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._visitor.ContextAwareVisitor.warn": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.codemod._visitor.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "libcst.codemod._visitor.MatcherDecoratableTransformer": {
  "data": {
   "shadows": "libcst.matchers.MatcherDecoratableTransformer"
  },
  "type": "import"
 },
 "libcst.codemod._visitor.MatcherDecoratableVisitor": {
  "data": {
   "shadows": "libcst.matchers.MatcherDecoratableVisitor"
  },
  "type": "import"
 },
 "libcst.codemod._visitor.MetadataDependent": {
  "data": {
   "shadows": "libcst.MetadataDependent"
  },
  "type": "import"
 },
 "libcst.codemod._visitor.ProviderT": {
  "data": {
   "shadows": "libcst.metadata.ProviderT"
  },
  "type": "import"
 },
 "libcst.codemod._visitor.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.codemod.commands": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.commands.add_pyre_directive": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.commands.add_pyre_directive.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "libcst.codemod.commands.add_pyre_directive.AddPyreDirectiveCommand": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst.codemod.VisitorBasedCodemodCommand",
    "str"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.add_pyre_directive.AddPyreDirectiveCommand.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "libcst.codemod.CodemodContext",
    "libcst.codemod.commands.add_pyre_directive.re",
    "str",
    "super",
    "typing.Pattern"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.add_pyre_directive.AddPyreDirectiveCommand.leave_Module": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "libcst.codemod.commands.add_pyre_directive.libcst",
    "libcst.helpers.insert_header_comments"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.add_pyre_directive.AddPyreDirectiveCommand.visit_Comment": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "libcst.codemod.commands.add_pyre_directive.libcst"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.add_pyre_directive.AddPyreStrictCommand": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "libcst.codemod.commands.add_pyre_directive.AddPyreDirectiveCommand",
    "str"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.add_pyre_directive.AddPyreUnsafeCommand": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "libcst.codemod.commands.add_pyre_directive.AddPyreDirectiveCommand",
    "str"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.add_pyre_directive.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod.CodemodContext"
  },
  "type": "import"
 },
 "libcst.codemod.commands.add_pyre_directive.Pattern": {
  "data": {
   "shadows": "typing.Pattern"
  },
  "type": "import"
 },
 "libcst.codemod.commands.add_pyre_directive.VisitorBasedCodemodCommand": {
  "data": {
   "shadows": "libcst.codemod.VisitorBasedCodemodCommand"
  },
  "type": "import"
 },
 "libcst.codemod.commands.add_pyre_directive.insert_header_comments": {
  "data": {
   "shadows": "libcst.helpers.insert_header_comments"
  },
  "type": "import"
 },
 "libcst.codemod.commands.add_pyre_directive.libcst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.codemod.commands.add_pyre_directive.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "libcst.codemod.commands.convert_format_to_fstring": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.commands.convert_format_to_fstring.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod.CodemodContext"
  },
  "type": "import"
 },
 "libcst.codemod.commands.convert_format_to_fstring.ContextAwareTransformer": {
  "data": {
   "shadows": "libcst.codemod.ContextAwareTransformer"
  },
  "type": "import"
 },
 "libcst.codemod.commands.convert_format_to_fstring.ContextAwareVisitor": {
  "data": {
   "shadows": "libcst.codemod.ContextAwareVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.commands.convert_format_to_fstring.ConvertFormatStringCommand": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "libcst.codemod.VisitorBasedCodemodCommand",
    "str"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.convert_format_to_fstring.ConvertFormatStringCommand.__init__": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "bool",
    "libcst.codemod.CodemodContext",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.convert_format_to_fstring.ConvertFormatStringCommand._convert_token_to_fstring_expression": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "libcst.Arg",
    "libcst.BaseExpression",
    "libcst.FormattedStringExpression",
    "libcst.LeftParen",
    "libcst.RightParen",
    "libcst.SimpleString",
    "libcst.codemod.commands.convert_format_to_fstring.StringQuoteGatherer",
    "libcst.codemod.commands.convert_format_to_fstring.StripNewlinesTransformer",
    "libcst.codemod.commands.convert_format_to_fstring.SwitchStringQuotesTransformer",
    "libcst.codemod.commands.convert_format_to_fstring._find_expr_from_field_name",
    "libcst.ensure_type",
    "libcst.matchers.Await",
    "libcst.matchers.Comment",
    "libcst.matchers.FormattedString",
    "str",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.convert_format_to_fstring.ConvertFormatStringCommand.add_args": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "libcst.codemod.commands.convert_format_to_fstring.argparse",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.convert_format_to_fstring.ConvertFormatStringCommand.leave_Call": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "Exception",
    "int",
    "len",
    "libcst.BaseExpression",
    "libcst.BaseFormattedStringContent",
    "libcst.Call",
    "libcst.FormattedString",
    "libcst.FormattedStringText",
    "libcst.SimpleString",
    "libcst.codemod.commands.convert_format_to_fstring._get_tokens",
    "libcst.ensure_type",
    "libcst.matchers.Attribute",
    "libcst.matchers.Call",
    "libcst.matchers.Name",
    "libcst.matchers.SaveMatchedNode",
    "libcst.matchers.SimpleString",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.convert_format_to_fstring.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "libcst.codemod.commands.convert_format_to_fstring.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst.codemod.commands.convert_format_to_fstring.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.codemod.commands.convert_format_to_fstring.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst.codemod.commands.convert_format_to_fstring.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "libcst.codemod.commands.convert_format_to_fstring.StringQuoteGatherer": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "libcst.codemod.ContextAwareVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.convert_format_to_fstring.StringQuoteGatherer.__init__": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "libcst.codemod.CodemodContext",
    "set",
    "str",
    "super",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.convert_format_to_fstring.StringQuoteGatherer.visit_SimpleString": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "libcst.SimpleString"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.convert_format_to_fstring.StripNewlinesTransformer": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "libcst.codemod.ContextAwareTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.convert_format_to_fstring.StripNewlinesTransformer.leave_ParenthesizedWhitespace": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "libcst.ParenthesizedWhitespace",
    "libcst.SimpleWhitespace"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.convert_format_to_fstring.SwitchStringQuotesTransformer": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "libcst.codemod.ContextAwareTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.convert_format_to_fstring.SwitchStringQuotesTransformer.__init__": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "Exception",
    "libcst.codemod.CodemodContext",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.convert_format_to_fstring.SwitchStringQuotesTransformer.leave_SimpleString": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "Exception",
    "libcst.SimpleString",
    "libcst.codemod.commands.convert_format_to_fstring.ast"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.convert_format_to_fstring.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "libcst.codemod.commands.convert_format_to_fstring.VisitorBasedCodemodCommand": {
  "data": {
   "shadows": "libcst.codemod.VisitorBasedCodemodCommand"
  },
  "type": "import"
 },
 "libcst.codemod.commands.convert_format_to_fstring._find_expr_from_field_name": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "Exception",
    "any",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "libcst.Arg",
    "libcst.BaseExpression",
    "libcst.Integer",
    "libcst.Name",
    "libcst.codemod.commands.convert_format_to_fstring._get_lhs",
    "libcst.parse_expression",
    "str",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.convert_format_to_fstring._get_field": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "str",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.convert_format_to_fstring._get_lhs": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "libcst.Attribute",
    "libcst.BaseExpression",
    "libcst.Integer",
    "libcst.Name",
    "libcst.Subscript"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.convert_format_to_fstring._get_tokens": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "enumerate",
    "int",
    "len",
    "libcst.codemod.commands.convert_format_to_fstring._get_field",
    "str",
    "typing.Generator",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.convert_format_to_fstring.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "libcst.codemod.commands.convert_format_to_fstring.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "libcst.codemod.commands.convert_format_to_fstring.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.codemod.commands.convert_format_to_fstring.m": {
  "data": {
   "shadows": "libcst.matchers"
  },
  "type": "import"
 },
 "libcst.codemod.commands.convert_namedtuple_to_dataclass": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.commands.convert_namedtuple_to_dataclass.AddImportsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors.AddImportsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.commands.convert_namedtuple_to_dataclass.ConvertNamedTupleToDataclassCommand": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "libcst.codemod.VisitorBasedCodemodCommand",
    "libcst.metadata.ProviderT",
    "libcst.metadata.QualifiedName",
    "libcst.metadata.QualifiedNameProvider",
    "libcst.metadata.QualifiedNameSource.IMPORT",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.convert_namedtuple_to_dataclass.ConvertNamedTupleToDataclassCommand.leave_ClassDef": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "libcst.Arg",
    "libcst.Call",
    "libcst.ClassDef",
    "libcst.Decorator",
    "libcst.MaybeSentinel.DEFAULT",
    "libcst.codemod.visitors.AddImportsVisitor.add_needed_import",
    "libcst.codemod.visitors.RemoveImportsVisitor.remove_unused_import_by_node",
    "libcst.ensure_type",
    "libcst.metadata.QualifiedNameProvider.has_name",
    "libcst.parse_expression",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.convert_namedtuple_to_dataclass.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst.codemod.commands.convert_namedtuple_to_dataclass.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.codemod.commands.convert_namedtuple_to_dataclass.ProviderT": {
  "data": {
   "shadows": "libcst.metadata.ProviderT"
  },
  "type": "import"
 },
 "libcst.codemod.commands.convert_namedtuple_to_dataclass.QualifiedName": {
  "data": {
   "shadows": "libcst.metadata.QualifiedName"
  },
  "type": "import"
 },
 "libcst.codemod.commands.convert_namedtuple_to_dataclass.QualifiedNameProvider": {
  "data": {
   "shadows": "libcst.metadata.QualifiedNameProvider"
  },
  "type": "import"
 },
 "libcst.codemod.commands.convert_namedtuple_to_dataclass.QualifiedNameSource": {
  "data": {
   "shadows": "libcst.metadata.QualifiedNameSource"
  },
  "type": "import"
 },
 "libcst.codemod.commands.convert_namedtuple_to_dataclass.RemoveImportsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors.RemoveImportsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.commands.convert_namedtuple_to_dataclass.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst.codemod.commands.convert_namedtuple_to_dataclass.VisitorBasedCodemodCommand": {
  "data": {
   "shadows": "libcst.codemod.VisitorBasedCodemodCommand"
  },
  "type": "import"
 },
 "libcst.codemod.commands.convert_namedtuple_to_dataclass.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.codemod.commands.convert_percent_format_to_fstring": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.commands.convert_percent_format_to_fstring.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst.codemod.commands.convert_percent_format_to_fstring.ConvertPercentFormatStringCommand": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "libcst.codemod.VisitorBasedCodemodCommand",
    "str"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.convert_percent_format_to_fstring.ConvertPercentFormatStringCommand.leave_BinaryOperation": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "len",
    "libcst.BaseExpression",
    "libcst.BinaryOperation",
    "libcst.FormattedString",
    "libcst.FormattedStringExpression",
    "libcst.FormattedStringText",
    "libcst.SimpleString",
    "libcst.Tuple",
    "libcst.codemod.commands.convert_percent_format_to_fstring.EscapeStringQuote",
    "libcst.codemod.commands.convert_percent_format_to_fstring._gen_match_simple_expression",
    "libcst.codemod.commands.convert_percent_format_to_fstring._match_simple_string",
    "libcst.ensure_type",
    "libcst.matchers.BinaryOperation",
    "libcst.matchers.MatchIfTrue",
    "libcst.matchers.Modulo",
    "libcst.matchers.SaveMatchedNode",
    "libcst.matchers.extract",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.convert_percent_format_to_fstring.EscapeStringQuote": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "libcst.CSTTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.convert_percent_format_to_fstring.EscapeStringQuote.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.convert_percent_format_to_fstring.EscapeStringQuote.leave_SimpleString": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "Exception",
    "libcst.SimpleString"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.convert_percent_format_to_fstring.USE_FSTRING_SIMPLE_EXPRESSION_MAX_LENGTH": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "libcst.codemod.commands.convert_percent_format_to_fstring.VisitorBasedCodemodCommand": {
  "data": {
   "shadows": "libcst.codemod.VisitorBasedCodemodCommand"
  },
  "type": "import"
 },
 "libcst.codemod.commands.convert_percent_format_to_fstring._gen_match_simple_expression": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "bool",
    "libcst.CSTNode",
    "libcst.Module",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.convert_percent_format_to_fstring._gen_match_simple_expression._match_simple_expression": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "all",
    "bool",
    "isinstance",
    "len",
    "libcst.CSTNode",
    "libcst.Tuple",
    "libcst.codemod.commands.convert_percent_format_to_fstring.USE_FSTRING_SIMPLE_EXPRESSION_MAX_LENGTH"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.convert_percent_format_to_fstring._match_simple_string": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "libcst.CSTNode",
    "libcst.SimpleString",
    "libcst.codemod.commands.convert_percent_format_to_fstring.re"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.convert_percent_format_to_fstring.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "libcst.codemod.commands.convert_percent_format_to_fstring.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.codemod.commands.convert_percent_format_to_fstring.m": {
  "data": {
   "shadows": "libcst.matchers"
  },
  "type": "import"
 },
 "libcst.codemod.commands.convert_percent_format_to_fstring.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "libcst.codemod.commands.ensure_import_present": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.commands.ensure_import_present.AddImportsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors.AddImportsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.commands.ensure_import_present.Codemod": {
  "data": {
   "shadows": "libcst.codemod.Codemod"
  },
  "type": "import"
 },
 "libcst.codemod.commands.ensure_import_present.EnsureImportPresentCommand": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "libcst.codemod.MagicArgsCodemodCommand",
    "str"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.ensure_import_present.EnsureImportPresentCommand.add_args": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "libcst.codemod.commands.ensure_import_present.argparse",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.ensure_import_present.EnsureImportPresentCommand.get_transforms": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "libcst.codemod.Codemod",
    "libcst.codemod.visitors.AddImportsVisitor",
    "libcst.codemod.visitors.AddImportsVisitor.add_needed_import",
    "typing.Generator",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.ensure_import_present.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "libcst.codemod.commands.ensure_import_present.MagicArgsCodemodCommand": {
  "data": {
   "shadows": "libcst.codemod.MagicArgsCodemodCommand"
  },
  "type": "import"
 },
 "libcst.codemod.commands.ensure_import_present.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "libcst.codemod.commands.ensure_import_present.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "libcst.codemod.commands.fix_pyre_directives": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.commands.fix_pyre_directives.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod.CodemodContext"
  },
  "type": "import"
 },
 "libcst.codemod.commands.fix_pyre_directives.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "libcst.codemod.commands.fix_pyre_directives.FixPyreDirectivesCommand": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "libcst.codemod.VisitorBasedCodemodCommand",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.fix_pyre_directives.FixPyreDirectivesCommand.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "bool",
    "int",
    "libcst.codemod.CodemodContext",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.fix_pyre_directives.FixPyreDirectivesCommand.leave_EmptyLine": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "libcst.codemod.commands.fix_pyre_directives.libcst",
    "libcst.matchers.Comment",
    "libcst.matchers.EmptyLine",
    "libcst.matchers.matches",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.fix_pyre_directives.FixPyreDirectivesCommand.leave_Module": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "libcst.codemod.commands.fix_pyre_directives.libcst",
    "libcst.helpers.insert_header_comments"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.fix_pyre_directives.FixPyreDirectivesCommand.leave_Module_header": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "Exception",
    "libcst.codemod.commands.fix_pyre_directives.libcst"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.fix_pyre_directives.FixPyreDirectivesCommand.visit_Module_header": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "Exception",
    "libcst.codemod.commands.fix_pyre_directives.libcst"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.fix_pyre_directives.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst.codemod.commands.fix_pyre_directives.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst.codemod.commands.fix_pyre_directives.VisitorBasedCodemodCommand": {
  "data": {
   "shadows": "libcst.codemod.VisitorBasedCodemodCommand"
  },
  "type": "import"
 },
 "libcst.codemod.commands.fix_pyre_directives.insert_header_comments": {
  "data": {
   "shadows": "libcst.helpers.insert_header_comments"
  },
  "type": "import"
 },
 "libcst.codemod.commands.fix_pyre_directives.libcst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.codemod.commands.fix_pyre_directives.m": {
  "data": {
   "shadows": "libcst.matchers"
  },
  "type": "import"
 },
 "libcst.codemod.commands.noop": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.commands.noop.CodemodCommand": {
  "data": {
   "shadows": "libcst.codemod.CodemodCommand"
  },
  "type": "import"
 },
 "libcst.codemod.commands.noop.Module": {
  "data": {
   "shadows": "libcst.Module"
  },
  "type": "import"
 },
 "libcst.codemod.commands.noop.NOOPCommand": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "libcst.codemod.CodemodCommand",
    "str"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.noop.NOOPCommand.transform_module_impl": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "libcst.Module"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.remove_pyre_directive": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.commands.remove_pyre_directive.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "libcst.codemod.commands.remove_pyre_directive.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod.CodemodContext"
  },
  "type": "import"
 },
 "libcst.codemod.commands.remove_pyre_directive.Pattern": {
  "data": {
   "shadows": "typing.Pattern"
  },
  "type": "import"
 },
 "libcst.codemod.commands.remove_pyre_directive.RemovePyreDirectiveCommand": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "abc.ABC",
    "libcst.codemod.VisitorBasedCodemodCommand",
    "str"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.remove_pyre_directive.RemovePyreDirectiveCommand.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "libcst.codemod.CodemodContext",
    "libcst.codemod.commands.remove_pyre_directive.re",
    "str",
    "super",
    "typing.Pattern"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.remove_pyre_directive.RemovePyreDirectiveCommand.leave_EmptyLine": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "bool",
    "libcst.codemod.commands.remove_pyre_directive.libcst",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.remove_pyre_directive.RemovePyreStrictCommand": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "libcst.codemod.commands.remove_pyre_directive.RemovePyreDirectiveCommand",
    "str"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.remove_pyre_directive.RemovePyreUnsafeCommand": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "libcst.codemod.commands.remove_pyre_directive.RemovePyreDirectiveCommand",
    "str"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.remove_pyre_directive.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst.codemod.commands.remove_pyre_directive.VisitorBasedCodemodCommand": {
  "data": {
   "shadows": "libcst.codemod.VisitorBasedCodemodCommand"
  },
  "type": "import"
 },
 "libcst.codemod.commands.remove_pyre_directive.libcst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.codemod.commands.remove_pyre_directive.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "libcst.codemod.commands.remove_unused_imports": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.commands.remove_unused_imports.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod.CodemodContext"
  },
  "type": "import"
 },
 "libcst.codemod.commands.remove_unused_imports.DEFAULT_SUPPRESS_COMMENT_REGEX": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "libcst.codemod.commands.remove_unused_imports.GatherCommentsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors.GatherCommentsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.commands.remove_unused_imports.Import": {
  "data": {
   "shadows": "libcst.Import"
  },
  "type": "import"
 },
 "libcst.codemod.commands.remove_unused_imports.ImportFrom": {
  "data": {
   "shadows": "libcst.ImportFrom"
  },
  "type": "import"
 },
 "libcst.codemod.commands.remove_unused_imports.ImportStar": {
  "data": {
   "shadows": "libcst.ImportStar"
  },
  "type": "import"
 },
 "libcst.codemod.commands.remove_unused_imports.Module": {
  "data": {
   "shadows": "libcst.Module"
  },
  "type": "import"
 },
 "libcst.codemod.commands.remove_unused_imports.PositionProvider": {
  "data": {
   "shadows": "libcst.metadata.PositionProvider"
  },
  "type": "import"
 },
 "libcst.codemod.commands.remove_unused_imports.ProviderT": {
  "data": {
   "shadows": "libcst.metadata.ProviderT"
  },
  "type": "import"
 },
 "libcst.codemod.commands.remove_unused_imports.RemoveImportsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors.RemoveImportsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.commands.remove_unused_imports.RemoveUnusedImportsCommand": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "libcst.codemod.VisitorBasedCodemodCommand",
    "libcst.metadata.PositionProvider",
    "libcst.metadata.ProviderT",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.remove_unused_imports.RemoveUnusedImportsCommand.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "int",
    "libcst.codemod.CodemodContext",
    "set",
    "super",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.remove_unused_imports.RemoveUnusedImportsCommand._handle_import": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "libcst.Import",
    "libcst.ImportFrom",
    "libcst.ImportStar",
    "libcst.codemod.visitors.RemoveImportsVisitor.remove_unused_import",
    "libcst.helpers.get_absolute_module_for_import",
    "libcst.metadata.PositionProvider",
    "range",
    "set",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.remove_unused_imports.RemoveUnusedImportsCommand.visit_Import": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "bool",
    "libcst.Import"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.remove_unused_imports.RemoveUnusedImportsCommand.visit_ImportFrom": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "bool",
    "libcst.ImportFrom"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.remove_unused_imports.RemoveUnusedImportsCommand.visit_Module": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "bool",
    "libcst.Module",
    "libcst.codemod.commands.remove_unused_imports.DEFAULT_SUPPRESS_COMMENT_REGEX",
    "libcst.codemod.visitors.GatherCommentsVisitor",
    "set"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.remove_unused_imports.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "libcst.codemod.commands.remove_unused_imports.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "libcst.codemod.commands.remove_unused_imports.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst.codemod.commands.remove_unused_imports.VisitorBasedCodemodCommand": {
  "data": {
   "shadows": "libcst.codemod.VisitorBasedCodemodCommand"
  },
  "type": "import"
 },
 "libcst.codemod.commands.remove_unused_imports.get_absolute_module_for_import": {
  "data": {
   "shadows": "libcst.helpers.get_absolute_module_for_import"
  },
  "type": "import"
 },
 "libcst.codemod.commands.rename": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.commands.rename.AddImportsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors.AddImportsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.commands.rename.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst.codemod.commands.rename.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod.CodemodContext"
  },
  "type": "import"
 },
 "libcst.codemod.commands.rename.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.codemod.commands.rename.QualifiedNameProvider": {
  "data": {
   "shadows": "libcst.metadata.QualifiedNameProvider"
  },
  "type": "import"
 },
 "libcst.codemod.commands.rename.RemoveImportsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors.RemoveImportsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.commands.rename.RenameCommand": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "libcst.codemod.VisitorBasedCodemodCommand",
    "libcst.metadata.QualifiedNameProvider",
    "str"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.rename.RenameCommand.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "libcst.CSTNode",
    "libcst.codemod.CodemodContext",
    "set",
    "str",
    "super",
    "typing.Optional",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.rename.RenameCommand.add_args": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "libcst.codemod.commands.rename.argparse",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.rename.RenameCommand.gen_name_or_attr_node": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "libcst.Attribute",
    "libcst.BaseExpression",
    "libcst.Name",
    "libcst.parse_expression",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.rename.RenameCommand.gen_replacement": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.rename.RenameCommand.gen_replacement_module": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.rename.RenameCommand.leave_Attribute": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "libcst.Attribute",
    "libcst.Name",
    "libcst.helpers.get_full_name_for_node",
    "libcst.metadata.QualifiedNameProvider",
    "libcst.metadata.QualifiedNameProvider.has_name",
    "libcst.parse_expression",
    "set",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.rename.RenameCommand.leave_Import": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "libcst.Attribute",
    "libcst.Import",
    "libcst.ImportAlias",
    "libcst.Name",
    "libcst.codemod.commands.rename.leave_import_decorator",
    "libcst.helpers.get_full_name_for_node",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.rename.RenameCommand.leave_ImportFrom": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "libcst.Attribute",
    "libcst.ImportAlias",
    "libcst.ImportFrom",
    "libcst.Name",
    "libcst.codemod.commands.rename.leave_import_decorator",
    "libcst.helpers.get_full_name_for_node",
    "libcst.parse_expression",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.rename.RenameCommand.leave_Module": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "libcst.Module",
    "libcst.codemod.visitors.AddImportsVisitor.add_needed_import",
    "libcst.codemod.visitors.RemoveImportsVisitor.remove_unused_import_by_node",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.rename.RenameCommand.leave_Name": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "bool",
    "libcst.Attribute",
    "libcst.Name",
    "libcst.metadata.QualifiedNameProvider",
    "libcst.metadata.QualifiedNameProvider.has_name",
    "set",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.rename.RenameCommand.record_asname": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "isinstance",
    "libcst.Attribute",
    "libcst.Import",
    "libcst.ImportFrom",
    "libcst.Name",
    "libcst.helpers.get_full_name_for_node",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.rename.RenameCommand.visit_Import": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "libcst.Import",
    "libcst.helpers.get_full_name_for_node"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.rename.RenameCommand.visit_ImportFrom": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "libcst.ImportFrom",
    "libcst.helpers.get_full_name_for_node"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.rename.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst.codemod.commands.rename.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "libcst.codemod.commands.rename.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "libcst.codemod.commands.rename.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst.codemod.commands.rename.VisitorBasedCodemodCommand": {
  "data": {
   "shadows": "libcst.codemod.VisitorBasedCodemodCommand"
  },
  "type": "import"
 },
 "libcst.codemod.commands.rename.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "libcst.codemod.commands.rename.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.codemod.commands.rename.get_full_name_for_node": {
  "data": {
   "shadows": "libcst.helpers.get_full_name_for_node"
  },
  "type": "import"
 },
 "libcst.codemod.commands.rename.leave_import_decorator": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "libcst.Import",
    "libcst.ImportFrom",
    "typing.Callable",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.rename.leave_import_decorator.wrapper": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "libcst.Import",
    "libcst.ImportFrom",
    "method",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.strip_strings_from_types": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.commands.strip_strings_from_types.AddImportsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors.AddImportsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.commands.strip_strings_from_types.QualifiedNameProvider": {
  "data": {
   "shadows": "libcst.metadata.QualifiedNameProvider"
  },
  "type": "import"
 },
 "libcst.codemod.commands.strip_strings_from_types.StripStringsCommand": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.codemod.VisitorBasedCodemodCommand",
    "libcst.metadata.QualifiedNameProvider",
    "str"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.strip_strings_from_types.StripStringsCommand.leave_SimpleString": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "any",
    "libcst.codemod.commands.strip_strings_from_types.libcst",
    "libcst.codemod.visitors.AddImportsVisitor.add_needed_import",
    "libcst.matchers.Annotation",
    "libcst.matchers.MatchMetadataIfTrue",
    "libcst.matchers.Subscript",
    "libcst.matchers.call_if_inside",
    "libcst.matchers.call_if_not_inside",
    "libcst.metadata.QualifiedNameProvider",
    "libcst.parse_expression",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.strip_strings_from_types.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst.codemod.commands.strip_strings_from_types.VisitorBasedCodemodCommand": {
  "data": {
   "shadows": "libcst.codemod.VisitorBasedCodemodCommand"
  },
  "type": "import"
 },
 "libcst.codemod.commands.strip_strings_from_types.libcst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.codemod.commands.strip_strings_from_types.m": {
  "data": {
   "shadows": "libcst.matchers"
  },
  "type": "import"
 },
 "libcst.codemod.commands.strip_strings_from_types.parse_expression": {
  "data": {
   "shadows": "libcst.parse_expression"
  },
  "type": "import"
 },
 "libcst.codemod.commands.tests": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.commands.tests.test_add_pyre_directive": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.commands.tests.test_add_pyre_directive.AddPyreUnsafeCommand": {
  "data": {
   "shadows": "libcst.codemod.commands.add_pyre_directive.AddPyreUnsafeCommand"
  },
  "type": "import"
 },
 "libcst.codemod.commands.tests.test_add_pyre_directive.CodemodTest": {
  "data": {
   "shadows": "libcst.codemod.CodemodTest"
  },
  "type": "import"
 },
 "libcst.codemod.commands.tests.test_add_pyre_directive.TestAddPyreUnsafeCommand": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "libcst.codemod.CodemodTest",
    "libcst.codemod.commands.add_pyre_directive.AddPyreUnsafeCommand"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.tests.test_add_pyre_directive.TestAddPyreUnsafeCommand.test_add_to_file": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_add_pyre_directive.TestAddPyreUnsafeCommand.test_add_to_file_with_comment": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_add_pyre_directive.TestAddPyreUnsafeCommand.test_add_to_file_with_import": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_add_pyre_directive.TestAddPyreUnsafeCommand.test_add_to_file_with_pyre_unsafe": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_add_pyre_directive.TestAddPyreUnsafeCommand.test_add_to_file_with_pyre_unsafe_after": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_add_pyre_directive.TestAddPyreUnsafeCommand.test_add_to_file_with_pyre_unsafe_before": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_add_pyre_directive.TestAddPyreUnsafeCommand.test_empty_file": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.CodemodTest": {
  "data": {
   "shadows": "libcst.codemod.CodemodTest"
  },
  "type": "import"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.ConvertFormatStringCommand": {
  "data": {
   "shadows": "libcst.codemod.commands.convert_format_to_fstring.ConvertFormatStringCommand"
  },
  "type": "import"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.ConvertFormatStringCommandTest": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "libcst.codemod.CodemodTest",
    "libcst.codemod.commands.convert_format_to_fstring.ConvertFormatStringCommand"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.ConvertFormatStringCommandTest.test_enable_unsupported_await": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.ConvertFormatStringCommandTest.test_enable_unsupported_comments": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.ConvertFormatStringCommandTest.test_formatspec_conversion": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.ConvertFormatStringCommandTest.test_name_replacement": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.ConvertFormatStringCommandTest.test_noop": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.ConvertFormatStringCommandTest.test_position_replacement": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.ConvertFormatStringCommandTest.test_replacement_with_conversion": {
  "data": {
   "lineno": 346
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.ConvertFormatStringCommandTest.test_replacement_with_dict": {
  "data": {
   "lineno": 409
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.ConvertFormatStringCommandTest.test_replacement_with_escapes": {
  "data": {
   "lineno": 272
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.ConvertFormatStringCommandTest.test_replacement_with_expression": {
  "data": {
   "lineno": 312
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.ConvertFormatStringCommandTest.test_replacement_with_newline": {
  "data": {
   "lineno": 362
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.ConvertFormatStringCommandTest.test_replacement_with_string": {
  "data": {
   "lineno": 381
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.ConvertFormatStringCommandTest.test_unsupported_expansion": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.ConvertFormatStringCommandTest.test_unsupported_expression": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_namedtuple_to_dataclass": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.commands.tests.test_convert_namedtuple_to_dataclass.CodemodTest": {
  "data": {
   "shadows": "libcst.codemod.CodemodTest"
  },
  "type": "import"
 },
 "libcst.codemod.commands.tests.test_convert_namedtuple_to_dataclass.ConvertNamedTupleToDataclassCommand": {
  "data": {
   "shadows": "libcst.codemod.commands.convert_namedtuple_to_dataclass.ConvertNamedTupleToDataclassCommand"
  },
  "type": "import"
 },
 "libcst.codemod.commands.tests.test_convert_namedtuple_to_dataclass.ConvertNamedTupleToDataclassCommandTest": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "libcst.codemod.CodemodTest",
    "libcst.codemod.commands.convert_namedtuple_to_dataclass.ConvertNamedTupleToDataclassCommand"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.tests.test_convert_namedtuple_to_dataclass.ConvertNamedTupleToDataclassCommandTest.test_aliased_module_import": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_namedtuple_to_dataclass.ConvertNamedTupleToDataclassCommandTest.test_aliased_object_import": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_namedtuple_to_dataclass.ConvertNamedTupleToDataclassCommandTest.test_change": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_namedtuple_to_dataclass.ConvertNamedTupleToDataclassCommandTest.test_multiple_bases": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_namedtuple_to_dataclass.ConvertNamedTupleToDataclassCommandTest.test_nested_classes": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_namedtuple_to_dataclass.ConvertNamedTupleToDataclassCommandTest.test_no_change": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_namedtuple_to_dataclass.ConvertNamedTupleToDataclassCommandTest.test_other_unused_imports_not_removed": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_namedtuple_to_dataclass.ConvertNamedTupleToDataclassCommandTest.test_with_decorator_already": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_percent_format_to_fstring": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.commands.tests.test_convert_percent_format_to_fstring.CodemodTest": {
  "data": {
   "shadows": "libcst.codemod.CodemodTest"
  },
  "type": "import"
 },
 "libcst.codemod.commands.tests.test_convert_percent_format_to_fstring.ConvertPercentFormatStringCommand": {
  "data": {
   "shadows": "libcst.codemod.commands.convert_percent_format_to_fstring.ConvertPercentFormatStringCommand"
  },
  "type": "import"
 },
 "libcst.codemod.commands.tests.test_convert_percent_format_to_fstring.ConvertPercentFormatStringCommandTest": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "libcst.codemod.CodemodTest",
    "libcst.codemod.commands.convert_percent_format_to_fstring.ConvertPercentFormatStringCommand"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.tests.test_convert_percent_format_to_fstring.ConvertPercentFormatStringCommandTest.test_escaping": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_percent_format_to_fstring.ConvertPercentFormatStringCommandTest.test_not_supported_case": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_percent_format_to_fstring.ConvertPercentFormatStringCommandTest.test_simple_cases": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_ensure_import_present": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.commands.tests.test_ensure_import_present.CodemodTest": {
  "data": {
   "shadows": "libcst.codemod.CodemodTest"
  },
  "type": "import"
 },
 "libcst.codemod.commands.tests.test_ensure_import_present.EnsureImportPresentCommand": {
  "data": {
   "shadows": "libcst.codemod.commands.ensure_import_present.EnsureImportPresentCommand"
  },
  "type": "import"
 },
 "libcst.codemod.commands.tests.test_ensure_import_present.EnsureImportPresentCommandTest": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "libcst.codemod.CodemodTest",
    "libcst.codemod.commands.ensure_import_present.EnsureImportPresentCommand"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.tests.test_ensure_import_present.EnsureImportPresentCommandTest.test_import_entity": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_ensure_import_present.EnsureImportPresentCommandTest.test_import_entity_aliased": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_ensure_import_present.EnsureImportPresentCommandTest.test_import_module": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_ensure_import_present.EnsureImportPresentCommandTest.test_import_module_aliased": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_ensure_import_present.EnsureImportPresentCommandTest.test_import_wildcard": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_fix_pyre_directives": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.commands.tests.test_fix_pyre_directives.CodemodTest": {
  "data": {
   "shadows": "libcst.codemod.CodemodTest"
  },
  "type": "import"
 },
 "libcst.codemod.commands.tests.test_fix_pyre_directives.FixPyreDirectivesCommand": {
  "data": {
   "shadows": "libcst.codemod.commands.fix_pyre_directives.FixPyreDirectivesCommand"
  },
  "type": "import"
 },
 "libcst.codemod.commands.tests.test_fix_pyre_directives.TestFixPyreDirectivesCommand": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "libcst.codemod.CodemodTest",
    "libcst.codemod.commands.fix_pyre_directives.FixPyreDirectivesCommand"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.tests.test_fix_pyre_directives.TestFixPyreDirectivesCommand.test_fix_body_duplicate": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_fix_pyre_directives.TestFixPyreDirectivesCommand.test_fix_header_duplicate": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_fix_pyre_directives.TestFixPyreDirectivesCommand.test_fix_misspelled_body": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_fix_pyre_directives.TestFixPyreDirectivesCommand.test_fix_misspelled_header": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_fix_pyre_directives.TestFixPyreDirectivesCommand.test_fix_misspelled_header_duplicate": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_fix_pyre_directives.TestFixPyreDirectivesCommand.test_fix_misspelled_header_duplicate_body": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_fix_pyre_directives.TestFixPyreDirectivesCommand.test_fix_wrong_location": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_fix_pyre_directives.TestFixPyreDirectivesCommand.test_no_need_to_fix_complex_bottom": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_fix_pyre_directives.TestFixPyreDirectivesCommand.test_no_need_to_fix_complex_top": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_fix_pyre_directives.TestFixPyreDirectivesCommand.test_no_need_to_fix_simple": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_noop": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.commands.tests.test_noop.CodemodTest": {
  "data": {
   "shadows": "libcst.codemod.CodemodTest"
  },
  "type": "import"
 },
 "libcst.codemod.commands.tests.test_noop.NOOPCommand": {
  "data": {
   "shadows": "libcst.codemod.commands.noop.NOOPCommand"
  },
  "type": "import"
 },
 "libcst.codemod.commands.tests.test_noop.TestNOOPCodemod": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "libcst.codemod.CodemodTest",
    "libcst.codemod.commands.noop.NOOPCommand"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.tests.test_noop.TestNOOPCodemod.test_noop": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_pyre_directive": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.commands.tests.test_remove_pyre_directive.CodemodTest": {
  "data": {
   "shadows": "libcst.codemod.CodemodTest"
  },
  "type": "import"
 },
 "libcst.codemod.commands.tests.test_remove_pyre_directive.RemovePyreStrictCommand": {
  "data": {
   "shadows": "libcst.codemod.commands.remove_pyre_directive.RemovePyreStrictCommand"
  },
  "type": "import"
 },
 "libcst.codemod.commands.tests.test_remove_pyre_directive.RemovePyreUnsafeCommand": {
  "data": {
   "shadows": "libcst.codemod.commands.remove_pyre_directive.RemovePyreUnsafeCommand"
  },
  "type": "import"
 },
 "libcst.codemod.commands.tests.test_remove_pyre_directive.TestRemovePyreStrictCommand": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "libcst.codemod.CodemodTest",
    "libcst.codemod.commands.remove_pyre_directive.RemovePyreStrictCommand"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.tests.test_remove_pyre_directive.TestRemovePyreStrictCommand.test_remove_from_file": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_pyre_directive.TestRemovePyreStrictCommand.test_remove_from_file_with_comment": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_pyre_directive.TestRemovePyreStrictCommand.test_remove_from_file_with_pyre_strict_after": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_pyre_directive.TestRemovePyreStrictCommand.test_remove_from_file_with_pyre_strict_before": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_pyre_directive.TestRemovePyreStrictCommand.test_remove_from_file_without_pyre_strict": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_pyre_directive.TestRemovePyreUnsafeCommand": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "libcst.codemod.CodemodTest",
    "libcst.codemod.commands.remove_pyre_directive.RemovePyreUnsafeCommand"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.tests.test_remove_pyre_directive.TestRemovePyreUnsafeCommand.test_remove_from_file": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_pyre_directive.TestRemovePyreUnsafeCommand.test_remove_from_file_with_comment": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_pyre_directive.TestRemovePyreUnsafeCommand.test_remove_from_file_with_pyre_unsafe_after": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_pyre_directive.TestRemovePyreUnsafeCommand.test_remove_from_file_with_pyre_unsafe_before": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_pyre_directive.TestRemovePyreUnsafeCommand.test_remove_from_file_without_pyre_unsafe": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_unused_imports": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.commands.tests.test_remove_unused_imports.CodemodTest": {
  "data": {
   "shadows": "libcst.codemod.CodemodTest"
  },
  "type": "import"
 },
 "libcst.codemod.commands.tests.test_remove_unused_imports.RemoveUnusedImportsCommand": {
  "data": {
   "shadows": "libcst.codemod.commands.remove_unused_imports.RemoveUnusedImportsCommand"
  },
  "type": "import"
 },
 "libcst.codemod.commands.tests.test_remove_unused_imports.RemoveUnusedImportsCommandTest": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "libcst.codemod.CodemodTest",
    "libcst.codemod.commands.remove_unused_imports.RemoveUnusedImportsCommand"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.tests.test_remove_unused_imports.RemoveUnusedImportsCommandTest.test_access_in_assignment": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_unused_imports.RemoveUnusedImportsCommandTest.test_conditional_import": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_unused_imports.RemoveUnusedImportsCommandTest.test_dotted_imports": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_unused_imports.RemoveUnusedImportsCommandTest.test_double_import": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_unused_imports.RemoveUnusedImportsCommandTest.test_enclosed_attributes": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_unused_imports.RemoveUnusedImportsCommandTest.test_no_formatting_if_no_unused_imports": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_unused_imports.RemoveUnusedImportsCommandTest.test_simple_case": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_unused_imports.RemoveUnusedImportsCommandTest.test_suppression": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_unused_imports.RemoveUnusedImportsCommandTest.test_suppression_on_first_line_of_multiline_import_refers_to_whole_block": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_unused_imports.RemoveUnusedImportsCommandTest.test_type_annotations": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_unused_imports.RemoveUnusedImportsCommandTest.test_unused_in_conditional": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.commands.tests.test_rename.CodemodTest": {
  "data": {
   "shadows": "libcst.codemod.CodemodTest"
  },
  "type": "import"
 },
 "libcst.codemod.commands.tests.test_rename.RenameCommand": {
  "data": {
   "shadows": "libcst.codemod.commands.rename.RenameCommand"
  },
  "type": "import"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "libcst.codemod.CodemodTest",
    "libcst.codemod.commands.rename.RenameCommand"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_complex_module_rename": {
  "data": {
   "lineno": 451
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_complex_module_rename_with_asname": {
  "data": {
   "lineno": 466
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_input_with_colon_sep": {
  "data": {
   "lineno": 611
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_input_with_colon_sep_at_the_end": {
  "data": {
   "lineno": 626
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_input_with_colon_sep_at_the_front": {
  "data": {
   "lineno": 641
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_module_does_not_change": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_names_with_repeated_substrings": {
  "data": {
   "lineno": 481
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_no_change_because_no_match_was_found": {
  "data": {
   "lineno": 657
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_no_codemod": {
  "data": {
   "lineno": 521
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_no_removal_of_dotted_import_in_use": {
  "data": {
   "lineno": 384
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_no_removal_of_import_from_in_use": {
  "data": {
   "lineno": 408
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_no_removal_of_import_in_use": {
  "data": {
   "lineno": 360
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_other_import_froms_untouched": {
  "data": {
   "lineno": 337
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_other_imports_untouched": {
  "data": {
   "lineno": 315
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_other_unused_imports_untouched": {
  "data": {
   "lineno": 429
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_attr": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_attr_asname": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_class": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_import_from_prefix": {
  "data": {
   "lineno": 549
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_import_prefix": {
  "data": {
   "lineno": 535
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_importfrom_same_module": {
  "data": {
   "lineno": 238
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_importfrom_same_module_2": {
  "data": {
   "lineno": 258
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_local_variable": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_module_import": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_module_import_2": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_module_import_from": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_module_import_from_2": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_module_import_no_change": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_multiple_imports": {
  "data": {
   "lineno": 584
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_multiple_occurrences": {
  "data": {
   "lineno": 563
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_name": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_name_asname": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_repeated_name_with_asname": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_repeated_name": {
  "data": {
   "lineno": 501
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_strip_strings_from_types": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.commands.tests.test_strip_strings_from_types.CodemodTest": {
  "data": {
   "shadows": "libcst.codemod.CodemodTest"
  },
  "type": "import"
 },
 "libcst.codemod.commands.tests.test_strip_strings_from_types.StripStringsCommand": {
  "data": {
   "shadows": "libcst.codemod.commands.strip_strings_from_types.StripStringsCommand"
  },
  "type": "import"
 },
 "libcst.codemod.commands.tests.test_strip_strings_from_types.TestStripStringsCodemod": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "libcst.codemod.CodemodTest",
    "libcst.codemod.commands.strip_strings_from_types.StripStringsCommand"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.tests.test_strip_strings_from_types.TestStripStringsCodemod.test_async": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_strip_strings_from_types.TestStripStringsCodemod.test_literal": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_strip_strings_from_types.TestStripStringsCodemod.test_literal_alias": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_strip_strings_from_types.TestStripStringsCodemod.test_literal_object": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_strip_strings_from_types.TestStripStringsCodemod.test_literal_object_alias": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_strip_strings_from_types.TestStripStringsCodemod.test_non_async": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_strip_strings_from_types.TestStripStringsCodemod.test_noop": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_strip_strings_from_types.TestStripStringsCodemod.test_recursive": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_unnecessary_format_string": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.commands.tests.test_unnecessary_format_string.Codemod": {
  "data": {
   "shadows": "libcst.codemod.Codemod"
  },
  "type": "import"
 },
 "libcst.codemod.commands.tests.test_unnecessary_format_string.CodemodTest": {
  "data": {
   "shadows": "libcst.codemod.CodemodTest"
  },
  "type": "import"
 },
 "libcst.codemod.commands.tests.test_unnecessary_format_string.TestUnnecessaryFormatString": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "libcst.codemod.Codemod",
    "libcst.codemod.CodemodTest",
    "libcst.codemod.commands.unnecessary_format_string.UnnecessaryFormatString",
    "typing.Type"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.tests.test_unnecessary_format_string.TestUnnecessaryFormatString.test_replace": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_unnecessary_format_string.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "libcst.codemod.commands.tests.test_unnecessary_format_string.UnnecessaryFormatString": {
  "data": {
   "shadows": "libcst.codemod.commands.unnecessary_format_string.UnnecessaryFormatString"
  },
  "type": "import"
 },
 "libcst.codemod.commands.unnecessary_format_string": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.commands.unnecessary_format_string.UnnecessaryFormatString": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "libcst.codemod.VisitorBasedCodemodCommand",
    "str"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.commands.unnecessary_format_string.UnnecessaryFormatString._check_formatted_string": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "eval",
    "libcst.codemod.commands.unnecessary_format_string.libcst",
    "libcst.matchers.FormattedString",
    "libcst.matchers.FormattedStringText",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.commands.unnecessary_format_string.VisitorBasedCodemodCommand": {
  "data": {
   "shadows": "libcst.codemod.VisitorBasedCodemodCommand"
  },
  "type": "import"
 },
 "libcst.codemod.commands.unnecessary_format_string.libcst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.codemod.commands.unnecessary_format_string.m": {
  "data": {
   "shadows": "libcst.matchers"
  },
  "type": "import"
 },
 "libcst.codemod.diff_code": {
  "data": {
   "shadows": "libcst.codemod._cli.diff_code"
  },
  "type": "import"
 },
 "libcst.codemod.exec_transform_with_prettyprint": {
  "data": {
   "shadows": "libcst.codemod._cli.exec_transform_with_prettyprint"
  },
  "type": "import"
 },
 "libcst.codemod.gather_files": {
  "data": {
   "shadows": "libcst.codemod._cli.gather_files"
  },
  "type": "import"
 },
 "libcst.codemod.parallel_exec_transform_with_prettyprint": {
  "data": {
   "shadows": "libcst.codemod._cli.parallel_exec_transform_with_prettyprint"
  },
  "type": "import"
 },
 "libcst.codemod.tests": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.tests.test_cli": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.tests.test_cli.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_cli.TestPackageCalculation": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.tests.test_cli.TestPackageCalculation.test_calculate_module": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "libcst.codemod._cli._calculate_module",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.tests.test_cli.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_cli._calculate_module": {
  "data": {
   "shadows": "libcst.codemod._cli._calculate_module"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_cli.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_codemod": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.tests.test_codemod.Codemod": {
  "data": {
   "shadows": "libcst.codemod.Codemod"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_codemod.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod.CodemodContext"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_codemod.CodemodTest": {
  "data": {
   "shadows": "libcst.codemod.CodemodTest"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_codemod.IncrementCodemod": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "libcst.codemod.Codemod"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.tests.test_codemod.IncrementCodemod.__init__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "int",
    "libcst.codemod.CodemodContext",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.tests.test_codemod.IncrementCodemod.should_allow_multiple_passes": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.tests.test_codemod.IncrementCodemod.transform_module_impl": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "int",
    "libcst.Module",
    "libcst.ensure_type",
    "libcst.matchers.Integer",
    "libcst.matchers.replace",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.tests.test_codemod.SimpleCodemod": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "libcst.codemod.Codemod"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.tests.test_codemod.SimpleCodemod.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "bool",
    "libcst.codemod.CodemodContext",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.tests.test_codemod.SimpleCodemod.transform_module_impl": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "libcst.Module",
    "libcst.codemod.SkipFile"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.tests.test_codemod.SkipFile": {
  "data": {
   "shadows": "libcst.codemod.SkipFile"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_codemod.TestMultipass": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "libcst.codemod.CodemodTest",
    "libcst.codemod.tests.test_codemod.IncrementCodemod"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.tests.test_codemod.TestMultipass.test_multi_iterations": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "libcst.codemod.tests.test_codemod.TestSkipDetection": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "libcst.codemod.CodemodTest",
    "libcst.codemod.tests.test_codemod.SimpleCodemod"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.tests.test_codemod.TestSkipDetection.test_detect_skip": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "libcst.codemod.tests.test_codemod.TestSkipDetection.test_did_not_skip_but_should": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "unittest.expectedFailure"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.tests.test_codemod.TestSkipDetection.test_skipped_but_should_not": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "unittest.expectedFailure"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.tests.test_codemod.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_codemod.expectedFailure": {
  "data": {
   "shadows": "unittest.expectedFailure"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_codemod.m": {
  "data": {
   "shadows": "libcst.matchers"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_codemod_cli": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.tests.test_codemod_cli.TestCodemodCLI": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.tests.test_codemod_cli.TestCodemodCLI.test_codemod_formatter_error_input": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst.codemod.tests.test_codemod_cli.subprocess",
    "libcst.codemod.tests.test_codemod_cli.sys"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.tests.test_codemod_cli.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_codemod_cli.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_codemod_cli.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_metadata": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.tests.test_metadata.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod.CodemodContext"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_metadata.ContextAwareTransformer": {
  "data": {
   "shadows": "libcst.codemod.ContextAwareTransformer"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_metadata.ContextAwareVisitor": {
  "data": {
   "shadows": "libcst.codemod.ContextAwareVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_metadata.PositionProvider": {
  "data": {
   "shadows": "libcst.metadata.PositionProvider"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_metadata.TestMetadata": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.tests.test_metadata.TestMetadata.test_metadata_works": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "libcst.codemod.CodemodContext",
    "libcst.codemod.tests.test_metadata.TestingTransform",
    "libcst.parse_module",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.tests.test_metadata.TestingCollector": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst.codemod.ContextAwareVisitor",
    "libcst.metadata.PositionProvider"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.tests.test_metadata.TestingCollector.visit_Pass": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "libcst.Pass",
    "libcst.metadata.PositionProvider"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.tests.test_metadata.TestingTransform": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "libcst.codemod.ContextAwareTransformer",
    "libcst.metadata.PositionProvider"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.tests.test_metadata.TestingTransform.visit_FunctionDef": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "libcst.FunctionDef",
    "libcst.codemod.tests.test_metadata.TestingCollector",
    "libcst.metadata.PositionProvider"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.tests.test_metadata.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_metadata.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_metadata.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_metadata.parse_module": {
  "data": {
   "shadows": "libcst.parse_module"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_runner": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.tests.test_runner.Codemod": {
  "data": {
   "shadows": "libcst.codemod.Codemod"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_runner.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod.CodemodContext"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_runner.CodemodTest": {
  "data": {
   "shadows": "libcst.codemod.CodemodTest"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_runner.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_runner.SkipFile": {
  "data": {
   "shadows": "libcst.codemod.SkipFile"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_runner.TestRunner": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "libcst.codemod.CodemodTest"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.tests.test_runner.TestRunner.test_runner_default": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "SimpleCodemod",
    "isinstance",
    "libcst.codemod.CodemodContext",
    "libcst.codemod.TransformSuccess",
    "libcst.codemod.transform_module",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.tests.test_runner.TestRunner.test_runner_default.SimpleCodemod": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "libcst.codemod.Codemod"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.tests.test_runner.TestRunner.test_runner_default.SimpleCodemod.transform_module_impl": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "libcst.Comment",
    "libcst.EmptyLine",
    "libcst.Module"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.tests.test_runner.TestRunner.test_runner_failure": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "KeyError",
    "SimpleCodemod",
    "isinstance",
    "libcst.codemod.CodemodContext",
    "libcst.codemod.TransformFailure",
    "libcst.codemod.transform_module",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.tests.test_runner.TestRunner.test_runner_failure.SimpleCodemod": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "libcst.codemod.Codemod"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.tests.test_runner.TestRunner.test_runner_failure.SimpleCodemod.transform_module_impl": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "libcst.Module",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.tests.test_runner.TestRunner.test_runner_interrupted": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "SimpleCodemod",
    "libcst.codemod.CodemodContext",
    "libcst.codemod.TransformExit",
    "libcst.codemod.transform_module",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.tests.test_runner.TestRunner.test_runner_interrupted.SimpleCodemod": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "libcst.codemod.Codemod"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.tests.test_runner.TestRunner.test_runner_interrupted.SimpleCodemod.transform_module_impl": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "libcst.Module"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.tests.test_runner.TestRunner.test_runner_skip": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "SimpleCodemod",
    "libcst.codemod.CodemodContext",
    "libcst.codemod.TransformSkip",
    "libcst.codemod.transform_module",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.tests.test_runner.TestRunner.test_runner_skip.SimpleCodemod": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "libcst.codemod.Codemod"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.tests.test_runner.TestRunner.test_runner_skip.SimpleCodemod.transform_module_impl": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "libcst.Module",
    "libcst.codemod.SkipFile"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.tests.test_runner.TransformExit": {
  "data": {
   "shadows": "libcst.codemod.TransformExit"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_runner.TransformFailure": {
  "data": {
   "shadows": "libcst.codemod.TransformFailure"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_runner.TransformSkip": {
  "data": {
   "shadows": "libcst.codemod.TransformSkip"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_runner.TransformSuccess": {
  "data": {
   "shadows": "libcst.codemod.TransformSuccess"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_runner.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_runner.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "libcst.codemod.tests.test_runner.transform_module": {
  "data": {
   "shadows": "libcst.codemod.transform_module"
  },
  "type": "import"
 },
 "libcst.codemod.transform_module": {
  "data": {
   "shadows": "libcst.codemod._runner.transform_module"
  },
  "type": "import"
 },
 "libcst.codemod.visitors": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.visitors.AddImportsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors._add_imports.AddImportsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.ApplyTypeAnnotationsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.GatherCommentsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors._gather_comments.GatherCommentsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.GatherExportsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors._gather_exports.GatherExportsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.GatherImportsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors._gather_imports.GatherImportsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.GatherNamesFromStringAnnotationsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.GatherUnusedImportsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.RemoveImportsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "libcst.codemod.visitors._add_imports": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.visitors._add_imports.AddImportsVisitor": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "libcst.codemod._visitor.ContextAwareTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.visitors._add_imports.AddImportsVisitor.__init__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "Exception",
    "libcst.codemod._context.CodemodContext",
    "libcst.codemod.visitors._add_imports.AddImportsVisitor",
    "libcst.codemod.visitors._add_imports.libcst",
    "libcst.matchers",
    "sorted",
    "str",
    "super",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Sequence",
    "typing.Set",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._add_imports.AddImportsVisitor._get_imports_from_context": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "libcst.codemod._context.CodemodContext",
    "libcst.codemod.visitors._add_imports.AddImportsVisitor",
    "list",
    "staticmethod",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._add_imports.AddImportsVisitor._insert_empty_line": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "len",
    "libcst.codemod.visitors._add_imports.libcst",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._add_imports.AddImportsVisitor._split_module": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "libcst.codemod.visitors._add_imports.libcst",
    "libcst.matchers.Assign",
    "libcst.matchers.AssignTarget",
    "libcst.matchers.Expr",
    "libcst.matchers.Module",
    "libcst.matchers.Name",
    "libcst.matchers.SimpleStatementLine",
    "libcst.matchers.SimpleString",
    "libcst.matchers.ZeroOrMore",
    "libcst.matchers.matches",
    "list",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._add_imports.AddImportsVisitor.add_needed_import": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "Exception",
    "libcst.codemod._context.CodemodContext",
    "libcst.codemod.visitors._add_imports.AddImportsVisitor",
    "staticmethod",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._add_imports.AddImportsVisitor.leave_ImportFrom": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "isinstance",
    "libcst.codemod.visitors._add_imports.libcst",
    "libcst.helpers.get_absolute_module_for_import",
    "sorted"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._add_imports.AddImportsVisitor.leave_Module": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "aliases",
    "collections.defaultdict",
    "libcst.codemod.visitors._add_imports.libcst",
    "libcst.parse_statement",
    "list",
    "object",
    "sorted"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._add_imports.AddImportsVisitor.visit_Module": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "aliases",
    "len",
    "libcst.codemod.visitors._add_imports.libcst",
    "libcst.codemod.visitors._gather_imports.GatherImportsVisitor"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._add_imports.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod._context.CodemodContext"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._add_imports.ContextAwareTransformer": {
  "data": {
   "shadows": "libcst.codemod._visitor.ContextAwareTransformer"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._add_imports.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._add_imports.GatherImportsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors._gather_imports.GatherImportsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._add_imports.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._add_imports.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._add_imports.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._add_imports.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._add_imports.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._add_imports.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._add_imports.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._add_imports.get_absolute_module_for_import": {
  "data": {
   "shadows": "libcst.helpers.get_absolute_module_for_import"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._add_imports.libcst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._add_imports.m": {
  "data": {
   "shadows": "libcst.matchers"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._add_imports.parse_statement": {
  "data": {
   "shadows": "libcst.parse_statement"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._apply_type_annotations": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.visitors._apply_type_annotations.AddImportsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors._add_imports.AddImportsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._apply_type_annotations.Annotations": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "dataclasses.field",
    "dict",
    "libcst.Annotation",
    "libcst.ClassDef",
    "libcst.codemod.visitors._apply_type_annotations.FunctionAnnotation",
    "str",
    "typing.Dict"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "libcst.codemod._visitor.ContextAwareTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor.__init__": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "bool",
    "libcst.Annotation",
    "libcst.ImportFrom",
    "libcst.codemod._context.CodemodContext",
    "libcst.codemod.visitors._apply_type_annotations.Annotations",
    "set",
    "str",
    "super",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor._add_to_toplevel_annotations": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor._annotate_single_target": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "isinstance",
    "libcst.AnnAssign",
    "libcst.Assign",
    "libcst.List",
    "libcst.Name",
    "libcst.Subscript",
    "libcst.Tuple",
    "libcst.helpers.get_full_name_for_node",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor._insert_empty_line": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "len",
    "libcst.BaseCompoundStatement",
    "libcst.EmptyLine",
    "libcst.SimpleStatementLine",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor._qualifier_name": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor._split_module": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "libcst.BaseCompoundStatement",
    "libcst.Module",
    "libcst.SimpleStatementLine",
    "list",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor._update_parameters": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "libcst.FunctionDef",
    "libcst.Parameters",
    "libcst.codemod.visitors._apply_type_annotations.FunctionAnnotation",
    "update_annotation"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor._update_parameters.update_annotation": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "libcst.Param",
    "typing.List",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor.leave_Assign": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "libcst.AnnAssign",
    "libcst.Assign",
    "libcst.Attribute",
    "libcst.Name",
    "libcst.helpers.get_full_name_for_node",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor.leave_ClassDef": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "libcst.ClassDef"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor.leave_FunctionDef": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "libcst.FunctionDef"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor.leave_ImportFrom": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "libcst.ImportFrom"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor.leave_Module": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "libcst.AnnAssign",
    "libcst.Module",
    "libcst.Name",
    "libcst.SimpleStatementLine"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor.store_stub_in_context": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "bool",
    "libcst.Module",
    "libcst.codemod._context.CodemodContext",
    "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor.transform_module_impl": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "libcst.Module",
    "libcst.codemod._context.CodemodContext",
    "libcst.codemod.visitors._add_imports.AddImportsVisitor",
    "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor",
    "libcst.codemod.visitors._apply_type_annotations.TypeCollector",
    "libcst.codemod.visitors._apply_type_annotations._get_import_names",
    "libcst.codemod.visitors._gather_imports.GatherImportsVisitor"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor.visit_ClassDef": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "libcst.ClassDef"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor.visit_FunctionDef": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "bool",
    "libcst.FunctionDef"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod._context.CodemodContext"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._apply_type_annotations.ContextAwareTransformer": {
  "data": {
   "shadows": "libcst.codemod._visitor.ContextAwareTransformer"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._apply_type_annotations.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._apply_type_annotations.FunctionAnnotation": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.Annotation",
    "libcst.Parameters",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.visitors._apply_type_annotations.GatherImportsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors._gather_imports.GatherImportsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._apply_type_annotations.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._apply_type_annotations.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._apply_type_annotations.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._apply_type_annotations.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._apply_type_annotations.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._apply_type_annotations.TypeCollector": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "libcst.CSTVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.visitors._apply_type_annotations.TypeCollector.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "libcst.Annotation",
    "libcst.ClassDef",
    "libcst.codemod._context.CodemodContext",
    "libcst.codemod.visitors._apply_type_annotations.FunctionAnnotation",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.TypeCollector._add_annotation_to_imports": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "libcst.Attribute",
    "libcst.Name",
    "libcst.codemod.visitors._add_imports.AddImportsVisitor.add_needed_import",
    "libcst.helpers.get_full_name_for_node",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.TypeCollector._create_import_from_annotation": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "isinstance",
    "libcst.Annotation",
    "libcst.Attribute",
    "libcst.Subscript",
    "libcst.matchers.Name",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.TypeCollector._handle_Index": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "isinstance",
    "libcst.Attribute",
    "libcst.Index",
    "libcst.Subscript",
    "slice.value",
    "slice.with_changes"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.TypeCollector._handle_Subscript": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "isinstance",
    "libcst.Attribute",
    "libcst.Index",
    "libcst.Name",
    "libcst.Subscript",
    "libcst.matchers.Name",
    "libcst.matchers.matches",
    "list",
    "slice"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.TypeCollector._import_parameter_annotations": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "libcst.Parameters",
    "update_annotations"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.TypeCollector._import_parameter_annotations.update_annotations": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "libcst.Param",
    "list",
    "typing.List",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.TypeCollector.leave_AnnAssign": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "libcst.AnnAssign"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.TypeCollector.leave_ClassDef": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "libcst.ClassDef"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.TypeCollector.leave_FunctionDef": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "libcst.FunctionDef"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.TypeCollector.visit_AnnAssign": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "bool",
    "libcst.AnnAssign",
    "libcst.helpers.get_full_name_for_node"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.TypeCollector.visit_ClassDef": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "libcst.ClassDef"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.TypeCollector.visit_FunctionDef": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "bool",
    "libcst.FunctionDef",
    "libcst.codemod.visitors._apply_type_annotations.FunctionAnnotation"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.TypeCollector.visit_ImportFrom": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "isinstance",
    "libcst.ImportFrom",
    "libcst.ImportStar",
    "libcst.codemod.visitors._add_imports.AddImportsVisitor.add_needed_import",
    "libcst.codemod.visitors._apply_type_annotations._get_import_alias_names",
    "libcst.helpers.get_full_name_for_node"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._apply_type_annotations._get_import_alias_names": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "libcst.ImportAlias",
    "libcst.helpers.get_full_name_for_node",
    "set",
    "str",
    "typing.Sequence",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations._get_import_names": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "isinstance",
    "libcst.Import",
    "libcst.ImportFrom",
    "libcst.ImportStar",
    "libcst.codemod.visitors._apply_type_annotations._get_import_alias_names",
    "set",
    "str",
    "typing.Sequence",
    "typing.Set",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._apply_type_annotations.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._apply_type_annotations.field": {
  "data": {
   "shadows": "dataclasses.field"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._apply_type_annotations.get_full_name_for_node": {
  "data": {
   "shadows": "libcst.helpers.get_full_name_for_node"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._apply_type_annotations.m": {
  "data": {
   "shadows": "libcst.matchers"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_comments": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.visitors._gather_comments.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod._context.CodemodContext"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_comments.ContextAwareVisitor": {
  "data": {
   "shadows": "libcst.codemod._visitor.ContextAwareVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_comments.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_comments.GatherCommentsVisitor": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst.codemod._visitor.ContextAwareVisitor",
    "libcst.metadata.PositionProvider"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.visitors._gather_comments.GatherCommentsVisitor.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "int",
    "libcst.Comment",
    "libcst.codemod._context.CodemodContext",
    "libcst.codemod.visitors._gather_comments.re",
    "str",
    "super",
    "typing.Dict",
    "typing.Pattern"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_comments.GatherCommentsVisitor.handle_comment": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "isinstance",
    "libcst.EmptyLine",
    "libcst.TrailingWhitespace",
    "libcst.metadata.PositionProvider",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_comments.GatherCommentsVisitor.visit_EmptyLine": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "bool",
    "libcst.EmptyLine"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_comments.GatherCommentsVisitor.visit_TrailingWhitespace": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "bool",
    "libcst.TrailingWhitespace"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_comments.Pattern": {
  "data": {
   "shadows": "typing.Pattern"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_comments.PositionProvider": {
  "data": {
   "shadows": "libcst.metadata.PositionProvider"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_comments.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_comments.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_comments.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_exports": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.visitors._gather_exports.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod._context.CodemodContext"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_exports.ContextAwareVisitor": {
  "data": {
   "shadows": "libcst.codemod._visitor.ContextAwareVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_exports.GatherExportsVisitor": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "libcst.codemod._visitor.ContextAwareVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.visitors._gather_exports.GatherExportsVisitor.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "libcst.List",
    "libcst.Set",
    "libcst.Tuple",
    "libcst.codemod._context.CodemodContext",
    "set",
    "str",
    "super",
    "typing.Set",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_exports.GatherExportsVisitor._handle_assign_target": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "bool",
    "enumerate",
    "isinstance",
    "libcst.BaseExpression",
    "libcst.List",
    "libcst.Set",
    "libcst.Tuple",
    "libcst.helpers.get_full_name_for_node"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_exports.GatherExportsVisitor._handle_string_export": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "libcst.ConcatenatedString",
    "libcst.SimpleString",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_exports.GatherExportsVisitor.leave_List": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "libcst.List"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_exports.GatherExportsVisitor.leave_Set": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "libcst.Set"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_exports.GatherExportsVisitor.leave_Tuple": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "libcst.Tuple"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_exports.GatherExportsVisitor.visit_AnnAssign": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "bool",
    "libcst.AnnAssign"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_exports.GatherExportsVisitor.visit_Assign": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "bool",
    "libcst.Assign"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_exports.GatherExportsVisitor.visit_ConcatenatedString": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "bool",
    "libcst.ConcatenatedString"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_exports.GatherExportsVisitor.visit_List": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "bool",
    "libcst.List"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_exports.GatherExportsVisitor.visit_Set": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "bool",
    "libcst.Set"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_exports.GatherExportsVisitor.visit_SimpleString": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "bool",
    "libcst.SimpleString"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_exports.GatherExportsVisitor.visit_Tuple": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "bool",
    "libcst.Tuple"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_exports.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_exports.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_exports.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_exports.get_full_name_for_node": {
  "data": {
   "shadows": "libcst.helpers.get_full_name_for_node"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_imports": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.visitors._gather_imports.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod._context.CodemodContext"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_imports.ContextAwareVisitor": {
  "data": {
   "shadows": "libcst.codemod._visitor.ContextAwareVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_imports.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_imports.GatherImportsVisitor": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "libcst.codemod._visitor.ContextAwareVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.visitors._gather_imports.GatherImportsVisitor.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "libcst.codemod._context.CodemodContext",
    "libcst.codemod.visitors._gather_imports.libcst",
    "set",
    "str",
    "super",
    "typing.Dict",
    "typing.List",
    "typing.Set",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_imports.GatherImportsVisitor.visit_Import": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "libcst.codemod.visitors._gather_imports.libcst"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_imports.GatherImportsVisitor.visit_ImportFrom": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "isinstance",
    "libcst.codemod.visitors._gather_imports.libcst",
    "libcst.helpers.get_absolute_module_for_import",
    "set",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_imports.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_imports.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_imports.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_imports.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_imports.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_imports.get_absolute_module_for_import": {
  "data": {
   "shadows": "libcst.helpers.get_absolute_module_for_import"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_imports.libcst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_string_annotation_names": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.visitors._gather_string_annotation_names.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod._context.CodemodContext"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_string_annotation_names.Collection": {
  "data": {
   "shadows": "typing.Collection"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_string_annotation_names.ContextAwareVisitor": {
  "data": {
   "shadows": "libcst.codemod._visitor.ContextAwareVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_string_annotation_names.FUNCS_CONSIDERED_AS_STRING_ANNOTATIONS": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "libcst.codemod._visitor.ContextAwareVisitor",
    "libcst.metadata.QualifiedNameProvider"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.codemod._context.CodemodContext",
    "libcst.codemod.visitors._gather_string_annotation_names.FUNCS_CONSIDERED_AS_STRING_ANNOTATIONS",
    "set",
    "str",
    "super",
    "typing.Collection",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor.handle_any_string": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "isinstance",
    "libcst.Attribute",
    "libcst.ConcatenatedString",
    "libcst.SimpleString",
    "libcst.matchers.Attribute",
    "libcst.matchers.DoNotCare",
    "libcst.matchers.MatchMetadataIfTrue",
    "libcst.matchers.Name",
    "libcst.matchers.SaveMatchedNode",
    "libcst.matchers.extractall",
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.ParentNodeProvider",
    "libcst.metadata.scope_provider._gen_dotted_names",
    "libcst.parse_module",
    "str",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor.leave_Annotation": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "libcst.Annotation"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor.leave_Call": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "libcst.Call"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor.visit_Annotation": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "bool",
    "libcst.Annotation"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor.visit_Call": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "any",
    "bool",
    "libcst.Call",
    "libcst.metadata.QualifiedNameProvider"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor.visit_ConcatenatedString": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "bool",
    "libcst.ConcatenatedString"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor.visit_SimpleString": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "bool",
    "libcst.SimpleString"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_string_annotation_names.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_string_annotation_names.MetadataWrapper": {
  "data": {
   "shadows": "libcst.metadata.MetadataWrapper"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_string_annotation_names.QualifiedNameProvider": {
  "data": {
   "shadows": "libcst.metadata.QualifiedNameProvider"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_string_annotation_names.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_string_annotation_names.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_string_annotation_names.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_string_annotation_names.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_string_annotation_names.m": {
  "data": {
   "shadows": "libcst.matchers"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_unused_imports": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.visitors._gather_unused_imports.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod._context.CodemodContext"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_unused_imports.Collection": {
  "data": {
   "shadows": "typing.Collection"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_unused_imports.ContextAwareVisitor": {
  "data": {
   "shadows": "libcst.codemod._visitor.ContextAwareVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_unused_imports.FUNCS_CONSIDERED_AS_STRING_ANNOTATIONS": {
  "data": {
   "shadows": "libcst.codemod.visitors._gather_string_annotation_names.FUNCS_CONSIDERED_AS_STRING_ANNOTATIONS"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_unused_imports.GatherExportsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors._gather_exports.GatherExportsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_unused_imports.GatherNamesFromStringAnnotationsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "libcst.codemod._visitor.ContextAwareVisitor",
    "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor.METADATA_DEPENDENCIES",
    "libcst.metadata.ProviderT",
    "libcst.metadata.ScopeProvider",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "libcst.Import",
    "libcst.ImportAlias",
    "libcst.ImportFrom",
    "libcst.codemod._context.CodemodContext",
    "libcst.codemod.visitors._gather_string_annotation_names.FUNCS_CONSIDERED_AS_STRING_ANNOTATIONS",
    "libcst.codemod.visitors._gather_unused_imports.MODULES_IGNORED_BY_DEFAULT",
    "set",
    "str",
    "super",
    "typing.Collection",
    "typing.Set",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor.filter_unused_imports": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "libcst.Import",
    "libcst.ImportAlias",
    "libcst.ImportFrom",
    "libcst.metadata.ScopeProvider",
    "set",
    "typing.Iterable",
    "typing.Set",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor.handle_import": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "isinstance",
    "libcst.Import",
    "libcst.ImportFrom",
    "libcst.ImportStar",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor.is_in_use": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "len",
    "libcst.Import",
    "libcst.ImportAlias",
    "libcst.ImportFrom",
    "libcst.Name",
    "libcst.ensure_type",
    "libcst.metadata.Assignment",
    "libcst.metadata.Scope",
    "libcst.metadata.scope_provider._gen_dotted_names"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor.leave_Module": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "libcst.Module"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor.visit_Import": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "bool",
    "libcst.Import"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor.visit_ImportFrom": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "libcst.ImportFrom",
    "libcst.ImportStar"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor.visit_Module": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "bool",
    "libcst.Module",
    "libcst.codemod.visitors._gather_exports.GatherExportsVisitor",
    "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._gather_unused_imports.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_unused_imports.MODULES_IGNORED_BY_DEFAULT": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "libcst.codemod.visitors._gather_unused_imports.ProviderT": {
  "data": {
   "shadows": "libcst.metadata.ProviderT"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_unused_imports.ScopeProvider": {
  "data": {
   "shadows": "libcst.metadata.ScopeProvider"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_unused_imports.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_unused_imports.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_unused_imports.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_unused_imports._gen_dotted_names": {
  "data": {
   "shadows": "libcst.metadata.scope_provider._gen_dotted_names"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._gather_unused_imports.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._remove_imports": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.visitors._remove_imports.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._remove_imports.Assignment": {
  "data": {
   "shadows": "libcst.metadata.Assignment"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._remove_imports.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod._context.CodemodContext"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._remove_imports.ContextAwareTransformer": {
  "data": {
   "shadows": "libcst.codemod._visitor.ContextAwareTransformer"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._remove_imports.ContextAwareVisitor": {
  "data": {
   "shadows": "libcst.codemod._visitor.ContextAwareVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._remove_imports.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._remove_imports.GatherUnusedImportsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._remove_imports.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._remove_imports.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._remove_imports.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._remove_imports.ProviderT": {
  "data": {
   "shadows": "libcst.metadata.ProviderT"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "libcst.codemod._visitor.ContextAwareTransformer",
    "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor.METADATA_DEPENDENCIES",
    "libcst.metadata.ProviderT",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor.__init__": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "libcst.Import",
    "libcst.ImportAlias",
    "libcst.ImportFrom",
    "libcst.codemod._context.CodemodContext",
    "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor",
    "set",
    "str",
    "super",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Sequence",
    "typing.Set",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor._get_imports_from_context": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "libcst.codemod._context.CodemodContext",
    "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor",
    "list",
    "staticmethod",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor._process_importfrom_aliases": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "libcst.Comma",
    "libcst.ImportAlias",
    "libcst.ImportFrom",
    "libcst.LeftParen",
    "libcst.codemod.visitors._remove_imports._merge_whitespace_after",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor.leave_Import": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "len",
    "libcst.Import",
    "libcst.MaybeSentinel.DEFAULT",
    "libcst.RemovalSentinel",
    "libcst.RemoveFromParent",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor.leave_ImportFrom": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "libcst.ImportFrom",
    "libcst.ImportStar",
    "libcst.MaybeSentinel.DEFAULT",
    "libcst.RemovalSentinel",
    "libcst.RemoveFromParent",
    "libcst.helpers.get_absolute_module_for_import",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor.remove_unused_import": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "libcst.codemod._context.CodemodContext",
    "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor",
    "staticmethod",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor.remove_unused_import_by_node": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "libcst.CSTNode",
    "libcst.Import",
    "libcst.ImportFrom",
    "libcst.ImportStar",
    "libcst.codemod._context.CodemodContext",
    "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor",
    "libcst.codemod.visitors._remove_imports.RemovedNodeVisitor",
    "libcst.helpers.get_absolute_module_for_import",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor.visit_Module": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "libcst.Module",
    "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._remove_imports.RemovedNodeVisitor": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.codemod._visitor.ContextAwareVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.visitors._remove_imports.RemovedNodeVisitor._remove_imports_from_import_stmt": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "libcst.Import",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._remove_imports.RemovedNodeVisitor._remove_imports_from_importfrom_stmt": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "libcst.ImportFrom",
    "libcst.ImportStar",
    "libcst.helpers.get_absolute_module_for_import",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._remove_imports.RemovedNodeVisitor._visit_name_attr_alike": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "isinstance",
    "libcst.Attribute",
    "libcst.Import",
    "libcst.ImportFrom",
    "libcst.Name",
    "libcst.helpers.get_full_name_for_node",
    "libcst.metadata.Assignment",
    "libcst.metadata.ScopeProvider",
    "set",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._remove_imports.RemovedNodeVisitor.visit_Attribute": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "libcst.Attribute"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._remove_imports.RemovedNodeVisitor.visit_Name": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "libcst.Name"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._remove_imports.ScopeProvider": {
  "data": {
   "shadows": "libcst.metadata.ScopeProvider"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._remove_imports.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._remove_imports.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._remove_imports.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._remove_imports.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._remove_imports._merge_whitespace_after": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "isinstance",
    "libcst.BaseParenthesizableWhitespace",
    "libcst.ParenthesizedWhitespace",
    "tuple"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors._remove_imports.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._remove_imports.get_absolute_module_for_import": {
  "data": {
   "shadows": "libcst.helpers.get_absolute_module_for_import"
  },
  "type": "import"
 },
 "libcst.codemod.visitors._remove_imports.get_full_name_for_node": {
  "data": {
   "shadows": "libcst.helpers.get_full_name_for_node"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.visitors.tests.test_add_imports": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.visitors.tests.test_add_imports.AddImportsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors.AddImportsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_add_imports.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod.CodemodContext"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_add_imports.CodemodTest": {
  "data": {
   "shadows": "libcst.codemod.CodemodTest"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "libcst.codemod.CodemodTest",
    "libcst.codemod.visitors.AddImportsVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_add_and_modify_complex": {
  "data": {
   "lineno": 404
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_add_future": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_add_import_preserve_doctring_multiples": {
  "data": {
   "lineno": 486
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_add_import_preserve_doctring_simple": {
  "data": {
   "lineno": 458
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_add_module_alias_simple": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_add_module_complex": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_add_module_simple": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_add_object_alias_modify_simple": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_add_object_alias_simple": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_add_object_modify_complex": {
  "data": {
   "lineno": 359
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_add_object_modify_simple": {
  "data": {
   "lineno": 307
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_add_object_relative_modify_simple": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "libcst.codemod.CodemodContext"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_add_object_simple": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_dont_add_module_alias_simple": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_dont_add_module_simple": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_dont_add_object_alias_simple": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_dont_add_object_simple": {
  "data": {
   "lineno": 255
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_dont_add_relative_object_simple": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "libcst.codemod.CodemodContext"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_import_in_docstring_module": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "libcst.codemod.CodemodContext"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_import_order": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "libcst.codemod.CodemodContext"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_noop": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_strict_module_no_imports": {
  "data": {
   "lineno": 517
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_strict_module_with_imports": {
  "data": {
   "lineno": 537
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_apply_type_annotations": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.visitors.tests.test_apply_type_annotations.ApplyTypeAnnotationsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_apply_type_annotations.Codemod": {
  "data": {
   "shadows": "libcst.codemod.Codemod"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_apply_type_annotations.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod.CodemodContext"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_apply_type_annotations.CodemodTest": {
  "data": {
   "shadows": "libcst.codemod.CodemodTest"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_apply_type_annotations.TestApplyAnnotationsVisitor": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "libcst.codemod.Codemod",
    "libcst.codemod.CodemodTest",
    "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor",
    "typing.Type"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.visitors.tests.test_apply_type_annotations.TestApplyAnnotationsVisitor.test_annotate_functions": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "libcst.codemod.CodemodContext",
    "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor.store_stub_in_context",
    "libcst.codemod.visitors.tests.test_apply_type_annotations.textwrap",
    "libcst.parse_module",
    "libcst.testing.utils.data_provider",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_apply_type_annotations.TestApplyAnnotationsVisitor.test_annotate_functions_py38": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "libcst.codemod.CodemodContext",
    "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor.store_stub_in_context",
    "libcst.codemod.visitors.tests.test_apply_type_annotations.sys",
    "libcst.codemod.visitors.tests.test_apply_type_annotations.textwrap",
    "libcst.codemod.visitors.tests.test_apply_type_annotations.unittest",
    "libcst.parse_module",
    "libcst.testing.utils.data_provider",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_apply_type_annotations.TestApplyAnnotationsVisitor.test_annotate_functions_with_existing_annotations": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "libcst.codemod.CodemodContext",
    "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor.store_stub_in_context",
    "libcst.codemod.visitors.tests.test_apply_type_annotations.textwrap",
    "libcst.parse_module",
    "libcst.testing.utils.data_provider",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_apply_type_annotations.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_apply_type_annotations.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_apply_type_annotations.parse_module": {
  "data": {
   "shadows": "libcst.parse_module"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_apply_type_annotations.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_apply_type_annotations.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_apply_type_annotations.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_gather_comments": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.visitors.tests.test_gather_comments.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod.CodemodContext"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_gather_comments.CodemodTest": {
  "data": {
   "shadows": "libcst.codemod.CodemodTest"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_gather_comments.Comment": {
  "data": {
   "shadows": "libcst.Comment"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_gather_comments.GatherCommentsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors.GatherCommentsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_gather_comments.MetadataWrapper": {
  "data": {
   "shadows": "libcst.MetadataWrapper"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_gather_comments.TestGatherCommentsVisitor": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.visitors.tests.test_gather_comments.TestGatherCommentsVisitor.gather_comments": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "libcst.MetadataWrapper",
    "libcst.codemod.CodemodContext",
    "libcst.codemod.CodemodTest.make_fixture_data",
    "libcst.codemod.visitors.GatherCommentsVisitor",
    "libcst.codemod.visitors.GatherCommentsVisitor.METADATA_DEPENDENCIES",
    "libcst.parse_module",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_comments.TestGatherCommentsVisitor.test_no_comments": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_comments.TestGatherCommentsVisitor.test_noqa_comments": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "isinstance",
    "libcst.Comment"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_comments.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_gather_comments.parse_module": {
  "data": {
   "shadows": "libcst.parse_module"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_gather_exports": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.visitors.tests.test_gather_exports.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod.CodemodContext"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_gather_exports.CodemodTest": {
  "data": {
   "shadows": "libcst.codemod.CodemodTest"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_gather_exports.GatherExportsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors.GatherExportsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_gather_exports.TestGatherExportsVisitor": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.visitors.tests.test_gather_exports.TestGatherExportsVisitor.gather_exports": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "libcst.codemod.CodemodContext",
    "libcst.codemod.CodemodTest.make_fixture_data",
    "libcst.codemod.visitors.GatherExportsVisitor",
    "libcst.parse_module",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_exports.TestGatherExportsVisitor.test_gather_exports_ignore_invalid_1": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_exports.TestGatherExportsVisitor.test_gather_exports_ignore_invalid_2": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_exports.TestGatherExportsVisitor.test_gather_exports_ignore_valid_1": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_exports.TestGatherExportsVisitor.test_gather_exports_ignore_valid_2": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_exports.TestGatherExportsVisitor.test_gather_exports_ignore_valid_3": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_exports.TestGatherExportsVisitor.test_gather_exports_simple": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_exports.TestGatherExportsVisitor.test_gather_exports_simple_annotated": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_exports.TestGatherExportsVisitor.test_gather_exports_simple_set": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_exports.TestGatherExportsVisitor.test_gather_exports_simple_tuple": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_exports.TestGatherExportsVisitor.test_gather_noop": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_exports.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_gather_exports.parse_module": {
  "data": {
   "shadows": "libcst.parse_module"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_gather_imports": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.visitors.tests.test_gather_imports.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod.CodemodContext"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_gather_imports.CodemodTest": {
  "data": {
   "shadows": "libcst.codemod.CodemodTest"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_gather_imports.GatherImportsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors.GatherImportsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_gather_imports.TestGatherImportsVisitor": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.visitors.tests.test_gather_imports.TestGatherImportsVisitor.gather_imports": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "libcst.codemod.CodemodContext",
    "libcst.codemod.CodemodTest.make_fixture_data",
    "libcst.codemod.visitors.GatherImportsVisitor",
    "libcst.parse_module",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_imports.TestGatherImportsVisitor.test_gather_aliased_module": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_imports.TestGatherImportsVisitor.test_gather_aliased_object": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_imports.TestGatherImportsVisitor.test_gather_aliased_object_disjoint": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_imports.TestGatherImportsVisitor.test_gather_aliased_object_mixed": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_imports.TestGatherImportsVisitor.test_gather_module": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_imports.TestGatherImportsVisitor.test_gather_nothing": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_imports.TestGatherImportsVisitor.test_gather_object": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_imports.TestGatherImportsVisitor.test_gather_object_disjoint": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_imports.TestGatherImportsVisitor.test_gather_relative_object": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_imports.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_gather_imports.parse_module": {
  "data": {
   "shadows": "libcst.parse_module"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_gather_string_annotation_names": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.visitors.tests.test_gather_string_annotation_names.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod.CodemodContext"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_gather_string_annotation_names.CodemodTest": {
  "data": {
   "shadows": "libcst.codemod.CodemodTest"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors.GatherNamesFromStringAnnotationsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_gather_string_annotation_names.MetadataWrapper": {
  "data": {
   "shadows": "libcst.MetadataWrapper"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_gather_string_annotation_names.TestGatherNamesFromStringAnnotationsVisitor": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.visitors.tests.test_gather_string_annotation_names.TestGatherNamesFromStringAnnotationsVisitor.gather_names": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "libcst.MetadataWrapper",
    "libcst.codemod.CodemodContext",
    "libcst.codemod.CodemodTest.make_fixture_data",
    "libcst.codemod.visitors.GatherNamesFromStringAnnotationsVisitor",
    "libcst.codemod.visitors.GatherNamesFromStringAnnotationsVisitor.METADATA_DEPENDENCIES",
    "libcst.parse_module",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_string_annotation_names.TestGatherNamesFromStringAnnotationsVisitor.test_complex": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_string_annotation_names.TestGatherNamesFromStringAnnotationsVisitor.test_concatenated_string_annotations": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_string_annotation_names.TestGatherNamesFromStringAnnotationsVisitor.test_dotted_names": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_string_annotation_names.TestGatherNamesFromStringAnnotationsVisitor.test_no_annotations": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_string_annotation_names.TestGatherNamesFromStringAnnotationsVisitor.test_simple_string_annotations": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_string_annotation_names.TestGatherNamesFromStringAnnotationsVisitor.test_typevars": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_string_annotation_names.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_gather_string_annotation_names.parse_module": {
  "data": {
   "shadows": "libcst.parse_module"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_gather_unused_imports": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.visitors.tests.test_gather_unused_imports.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod.CodemodContext"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_gather_unused_imports.CodemodTest": {
  "data": {
   "shadows": "libcst.codemod.CodemodTest"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_gather_unused_imports.GatherUnusedImportsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors.GatherUnusedImportsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_gather_unused_imports.MetadataWrapper": {
  "data": {
   "shadows": "libcst.MetadataWrapper"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_gather_unused_imports.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_gather_unused_imports.TestGatherUnusedImportsVisitor": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.visitors.tests.test_gather_unused_imports.TestGatherUnusedImportsVisitor.gather_imports": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst.MetadataWrapper",
    "libcst.codemod.CodemodContext",
    "libcst.codemod.CodemodTest.make_fixture_data",
    "libcst.codemod.visitors.GatherUnusedImportsVisitor",
    "libcst.codemod.visitors.GatherUnusedImportsVisitor.METADATA_DEPENDENCIES",
    "libcst.parse_module",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_unused_imports.TestGatherUnusedImportsVisitor.test_alias": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_unused_imports.TestGatherUnusedImportsVisitor.test_dotted_imports": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_unused_imports.TestGatherUnusedImportsVisitor.test_exports": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_unused_imports.TestGatherUnusedImportsVisitor.test_future": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_unused_imports.TestGatherUnusedImportsVisitor.test_import_complex": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_unused_imports.TestGatherUnusedImportsVisitor.test_import_from_complex": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_unused_imports.TestGatherUnusedImportsVisitor.test_no_imports": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_unused_imports.TestGatherUnusedImportsVisitor.test_string_annotation": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_unused_imports.TestGatherUnusedImportsVisitor.test_typevars": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_unused_imports.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_gather_unused_imports.parse_module": {
  "data": {
   "shadows": "libcst.parse_module"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_remove_imports": {
  "data": {},
  "type": "module"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.AddImportsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors.AddImportsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod.CodemodContext"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.CodemodTest": {
  "data": {
   "shadows": "libcst.codemod.CodemodTest"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.QualifiedName": {
  "data": {
   "shadows": "libcst.metadata.QualifiedName"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.QualifiedNameProvider": {
  "data": {
   "shadows": "libcst.metadata.QualifiedNameProvider"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.QualifiedNameSource": {
  "data": {
   "shadows": "libcst.metadata.QualifiedNameSource"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.RemoveImportsVisitor": {
  "data": {
   "shadows": "libcst.codemod.visitors.RemoveImportsVisitor"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.ScopeProvider": {
  "data": {
   "shadows": "libcst.metadata.ScopeProvider"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "libcst.codemod.CodemodTest",
    "libcst.codemod.visitors.RemoveImportsVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_dont_remove_import_alias_simple": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_dont_remove_import_simple": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_dont_remove_import_simple_wrong_alias": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_dont_remove_import_wrong_alias_simple": {
  "data": {
   "lineno": 247
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_dont_remove_importfrom_alias_simple": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_dont_remove_importfrom_alias_simple_wrong_alias": {
  "data": {
   "lineno": 377
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_dont_remove_importfrom_simple": {
  "data": {
   "lineno": 311
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_dont_remove_importfrom_simple_wrong_alias": {
  "data": {
   "lineno": 355
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_dont_remove_inuse_importfrom_relative": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "libcst.codemod.CodemodContext"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_dont_remove_wrong_importfrom_relative": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "libcst.codemod.CodemodContext"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_noop": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_comma": {
  "data": {
   "lineno": 916
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_fromimport_complex": {
  "data": {
   "lineno": 524
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_fromimport_keeping_inline_comment": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_fromimport_keeping_standalone_comment": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_fromimport_simple": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_alias_after_inserting": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "AddRemoveTransformer",
    "libcst.codemod.CodemodContext",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_alias_after_inserting.AddRemoveTransformer": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "libcst.codemod.VisitorBasedCodemodCommand"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_alias_after_inserting.AddRemoveTransformer.visit_Module": {
  "data": {
   "lineno": 906,
   "symbols_in_volume": [
    "libcst.Module",
    "libcst.codemod.visitors.AddImportsVisitor.add_needed_import",
    "libcst.codemod.visitors.RemoveImportsVisitor.remove_unused_import"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_alias_simple": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_by_node_simple": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "RemoveBarTransformer",
    "libcst.codemod.CodemodContext",
    "libcst.parse_module",
    "libcst.testing.utils.data_provider",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_by_node_simple.RemoveBarTransformer": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "libcst.codemod.VisitorBasedCodemodCommand",
    "libcst.metadata.QualifiedNameProvider",
    "libcst.metadata.ScopeProvider"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_by_node_simple.RemoveBarTransformer._leave_foo_bar": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "libcst.RemovalSentinel",
    "libcst.RemoveFromParent",
    "libcst.SimpleStatementLine",
    "libcst.codemod.visitors.RemoveImportsVisitor.remove_unused_import_by_node",
    "libcst.matchers.Call",
    "libcst.matchers.Expr",
    "libcst.matchers.MatchMetadata",
    "libcst.matchers.SimpleStatementLine",
    "libcst.matchers.leave",
    "libcst.metadata.QualifiedName",
    "libcst.metadata.QualifiedNameProvider",
    "libcst.metadata.QualifiedNameSource.IMPORT"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_complex": {
  "data": {
   "lineno": 479
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_from_node": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "RemoveImportTransformer",
    "libcst.codemod.CodemodContext",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_from_node.RemoveImportTransformer": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "libcst.codemod.VisitorBasedCodemodCommand",
    "libcst.metadata.QualifiedNameProvider",
    "libcst.metadata.ScopeProvider"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_from_node.RemoveImportTransformer.visit_ImportFrom": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "libcst.ImportFrom",
    "libcst.codemod.visitors.RemoveImportsVisitor.remove_unused_import_by_node"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_multiple_assignments": {
  "data": {
   "lineno": 564
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_node": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "RemoveImportTransformer",
    "libcst.codemod.CodemodContext",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_node.RemoveImportTransformer": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "libcst.codemod.VisitorBasedCodemodCommand",
    "libcst.metadata.QualifiedNameProvider",
    "libcst.metadata.ScopeProvider"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_node.RemoveImportTransformer.visit_Import": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "libcst.Import",
    "libcst.codemod.visitors.RemoveImportsVisitor.remove_unused_import_by_node"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_simple": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_with_all": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "RemoveImportTransformer",
    "libcst.codemod.CodemodContext",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_with_all.RemoveImportTransformer": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "libcst.codemod.VisitorBasedCodemodCommand",
    "libcst.metadata.QualifiedNameProvider",
    "libcst.metadata.ScopeProvider"
   ]
  },
  "type": "class"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_with_all.RemoveImportTransformer.visit_ImportFrom": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "libcst.ImportFrom",
    "libcst.codemod.visitors.RemoveImportsVisitor.remove_unused_import_by_node"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_importfrom_alias_simple": {
  "data": {
   "lineno": 290
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_importfrom_relative": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "libcst.codemod.CodemodContext"
   ]
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_importfrom_simple": {
  "data": {
   "lineno": 269
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_multiple_imports": {
  "data": {
   "lineno": 586
  },
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.VisitorBasedCodemodCommand": {
  "data": {
   "shadows": "libcst.codemod.VisitorBasedCodemodCommand"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.m": {
  "data": {
   "shadows": "libcst.matchers"
  },
  "type": "import"
 },
 "libcst.ensure_type": {
  "data": {
   "shadows": "libcst.helpers.ensure_type"
  },
  "type": "import"
 },
 "libcst.helpers": {
  "data": {},
  "type": "module"
 },
 "libcst.helpers.__all__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "libcst.helpers._statement": {
  "data": {},
  "type": "module"
 },
 "libcst.helpers._statement.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.helpers._statement.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.helpers._statement.get_absolute_module_for_import": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "len",
    "libcst.ImportFrom",
    "libcst.helpers.expression.get_full_name_for_node",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.helpers._statement.get_absolute_module_for_import_or_raise": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "Exception",
    "libcst.ImportFrom",
    "libcst.helpers._statement.get_absolute_module_for_import",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.helpers._statement.get_full_name_for_node": {
  "data": {
   "shadows": "libcst.helpers.expression.get_full_name_for_node"
  },
  "type": "import"
 },
 "libcst.helpers._template": {
  "data": {
   "symbols_in_volume": [
    "libcst.Annotation",
    "libcst.Arg",
    "libcst.AssignTarget",
    "libcst.BaseExpression",
    "libcst.BaseSlice",
    "libcst.BaseSmallStatement",
    "libcst.BaseStatement",
    "libcst.BaseSuite",
    "libcst.Decorator",
    "libcst.Param",
    "libcst.Parameters",
    "libcst.PartialParserConfig",
    "libcst.SubscriptElement",
    "str",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "libcst.helpers._template.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "libcst.helpers._template.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "libcst.helpers._template.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.helpers._template.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "libcst.helpers._template.TemplateChecker": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "libcst.CSTVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.helpers._template.TemplateChecker.__init__": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "libcst.helpers._template.TemplateChecker.visit_Name": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "Exception",
    "libcst.Name",
    "libcst.helpers._template.mangled_name"
   ]
  },
  "type": "function"
 },
 "libcst.helpers._template.TemplateTransformer": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "libcst.CSTTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.helpers._template.TemplateTransformer.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "iter",
    "libcst.Annotation",
    "libcst.Arg",
    "libcst.AssignTarget",
    "libcst.BaseExpression",
    "libcst.BaseSlice",
    "libcst.BaseSmallStatement",
    "libcst.BaseStatement",
    "libcst.BaseSuite",
    "libcst.Decorator",
    "libcst.Param",
    "libcst.Parameters",
    "libcst.SubscriptElement",
    "libcst.helpers._template.ValidReplacementType",
    "next",
    "str",
    "typing.Dict",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "libcst.helpers._template.TemplateTransformer.leave_Annotation": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "isinstance",
    "libcst.Annotation",
    "libcst.Name",
    "libcst.helpers._template.unmangled_name"
   ]
  },
  "type": "function"
 },
 "libcst.helpers._template.TemplateTransformer.leave_Arg": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "isinstance",
    "libcst.Arg",
    "libcst.Name",
    "libcst.helpers._template.unmangled_name"
   ]
  },
  "type": "function"
 },
 "libcst.helpers._template.TemplateTransformer.leave_AssignTarget": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "isinstance",
    "libcst.AssignTarget",
    "libcst.Name",
    "libcst.helpers._template.unmangled_name"
   ]
  },
  "type": "function"
 },
 "libcst.helpers._template.TemplateTransformer.leave_Decorator": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "isinstance",
    "libcst.Decorator",
    "libcst.Name",
    "libcst.helpers._template.unmangled_name"
   ]
  },
  "type": "function"
 },
 "libcst.helpers._template.TemplateTransformer.leave_Expr": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "isinstance",
    "libcst.BaseSmallStatement",
    "libcst.Expr",
    "libcst.Name",
    "libcst.helpers._template.unmangled_name"
   ]
  },
  "type": "function"
 },
 "libcst.helpers._template.TemplateTransformer.leave_IndentedBlock": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "libcst.BaseSuite",
    "libcst.Expr",
    "libcst.IndentedBlock",
    "libcst.Name",
    "libcst.SimpleStatementLine",
    "libcst.helpers._template.unmangled_name"
   ]
  },
  "type": "function"
 },
 "libcst.helpers._template.TemplateTransformer.leave_Index": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "isinstance",
    "libcst.BaseSlice",
    "libcst.Index",
    "libcst.Name",
    "libcst.helpers._template.unmangled_name"
   ]
  },
  "type": "function"
 },
 "libcst.helpers._template.TemplateTransformer.leave_Name": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "libcst.BaseExpression",
    "libcst.Name",
    "libcst.helpers._template.unmangled_name"
   ]
  },
  "type": "function"
 },
 "libcst.helpers._template.TemplateTransformer.leave_Param": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "libcst.Param",
    "libcst.helpers._template.unmangled_name"
   ]
  },
  "type": "function"
 },
 "libcst.helpers._template.TemplateTransformer.leave_Parameters": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "len",
    "libcst.MaybeSentinel.DEFAULT",
    "libcst.Parameters",
    "libcst.helpers._template.unmangled_name"
   ]
  },
  "type": "function"
 },
 "libcst.helpers._template.TemplateTransformer.leave_SimpleStatementLine": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "libcst.BaseStatement",
    "libcst.Expr",
    "libcst.Name",
    "libcst.SimpleStatementLine",
    "libcst.helpers._template.unmangled_name"
   ]
  },
  "type": "function"
 },
 "libcst.helpers._template.TemplateTransformer.leave_SimpleStatementSuite": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "libcst.BaseSuite",
    "libcst.Expr",
    "libcst.Name",
    "libcst.SimpleStatementSuite",
    "libcst.helpers._template.unmangled_name"
   ]
  },
  "type": "function"
 },
 "libcst.helpers._template.TemplateTransformer.leave_SubscriptElement": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "isinstance",
    "libcst.Index",
    "libcst.Name",
    "libcst.SubscriptElement",
    "libcst.helpers._template.unmangled_name"
   ]
  },
  "type": "function"
 },
 "libcst.helpers._template.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst.helpers._template.ValidReplacementType": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "libcst.helpers._template.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.helpers._template.ensure_type": {
  "data": {
   "shadows": "libcst.helpers.common.ensure_type"
  },
  "type": "import"
 },
 "libcst.helpers._template.mangle_template": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "Exception",
    "libcst.helpers._template.mangled_name",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "libcst.helpers._template.mangled_name": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.helpers._template.parse_template_expression": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "libcst.BaseExpression",
    "libcst.PartialParserConfig",
    "libcst.helpers._template.TemplateChecker",
    "libcst.helpers._template.ValidReplacementType",
    "libcst.helpers._template.mangle_template",
    "libcst.helpers._template.unmangle_nodes",
    "libcst.helpers.common.ensure_type",
    "libcst.parse_expression",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.helpers._template.parse_template_module": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "libcst.Module",
    "libcst.PartialParserConfig",
    "libcst.helpers._template.TemplateChecker",
    "libcst.helpers._template.ValidReplacementType",
    "libcst.helpers._template.mangle_template",
    "libcst.helpers._template.unmangle_nodes",
    "libcst.helpers.common.ensure_type",
    "libcst.parse_module",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.helpers._template.parse_template_statement": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "libcst.BaseCompoundStatement",
    "libcst.PartialParserConfig",
    "libcst.SimpleStatementLine",
    "libcst.helpers._template.TemplateChecker",
    "libcst.helpers._template.ValidReplacementType",
    "libcst.helpers._template.mangle_template",
    "libcst.helpers._template.unmangle_nodes",
    "libcst.parse_statement",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.helpers._template.unmangle_nodes": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.helpers._template.TemplateTransformer",
    "libcst.helpers._template.ValidReplacementType",
    "libcst.helpers.common.ensure_type",
    "str",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "libcst.helpers._template.unmangled_name": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.helpers.common": {
  "data": {},
  "type": "module"
 },
 "libcst.helpers.common.CSTNodeT": {
  "data": {
   "shadows": "libcst._types.CSTNodeT"
  },
  "type": "import"
 },
 "libcst.helpers.common.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "libcst.helpers.common.ensure_type": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "libcst._types.CSTNodeT",
    "object",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "libcst.helpers.ensure_type": {
  "data": {
   "shadows": "libcst.helpers.common.ensure_type"
  },
  "type": "import"
 },
 "libcst.helpers.expression": {
  "data": {},
  "type": "module"
 },
 "libcst.helpers.expression.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.helpers.expression.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst.helpers.expression.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.helpers.expression.get_full_name_for_node": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "isinstance",
    "libcst.Attribute",
    "libcst.CSTNode",
    "libcst.Call",
    "libcst.ClassDef",
    "libcst.Decorator",
    "libcst.FunctionDef",
    "libcst.Name",
    "libcst.Subscript",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.helpers.expression.get_full_name_for_node_or_raise": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "Exception",
    "libcst.CSTNode",
    "libcst.helpers.expression.get_full_name_for_node",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.helpers.get_absolute_module_for_import": {
  "data": {
   "shadows": "libcst.helpers._statement.get_absolute_module_for_import"
  },
  "type": "import"
 },
 "libcst.helpers.get_absolute_module_for_import_or_raise": {
  "data": {
   "shadows": "libcst.helpers._statement.get_absolute_module_for_import_or_raise"
  },
  "type": "import"
 },
 "libcst.helpers.get_full_name_for_node": {
  "data": {
   "shadows": "libcst.helpers.expression.get_full_name_for_node"
  },
  "type": "import"
 },
 "libcst.helpers.get_full_name_for_node_or_raise": {
  "data": {
   "shadows": "libcst.helpers.expression.get_full_name_for_node_or_raise"
  },
  "type": "import"
 },
 "libcst.helpers.insert_header_comments": {
  "data": {
   "shadows": "libcst.helpers.module.insert_header_comments"
  },
  "type": "import"
 },
 "libcst.helpers.module": {
  "data": {},
  "type": "module"
 },
 "libcst.helpers.module.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst.helpers.module.insert_header_comments": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "enumerate",
    "itertools.islice",
    "libcst.helpers.module.libcst",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.helpers.module.islice": {
  "data": {
   "shadows": "itertools.islice"
  },
  "type": "import"
 },
 "libcst.helpers.module.libcst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.helpers.parse_template_expression": {
  "data": {
   "shadows": "libcst.helpers._template.parse_template_expression"
  },
  "type": "import"
 },
 "libcst.helpers.parse_template_module": {
  "data": {
   "shadows": "libcst.helpers._template.parse_template_module"
  },
  "type": "import"
 },
 "libcst.helpers.parse_template_statement": {
  "data": {
   "shadows": "libcst.helpers._template.parse_template_statement"
  },
  "type": "import"
 },
 "libcst.helpers.tests": {
  "data": {},
  "type": "module"
 },
 "libcst.helpers.tests.test_expression": {
  "data": {},
  "type": "module"
 },
 "libcst.helpers.tests.test_expression.ExpressionTest": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.helpers.tests.test_expression.ExpressionTest.test_complex_evaluated_value": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ast.literal_eval",
    "libcst.Imaginary",
    "libcst.helpers.ensure_type",
    "libcst.parse_expression"
   ]
  },
  "type": "function"
 },
 "libcst.helpers.tests.test_expression.ExpressionTest.test_concatenated_string_evaluated_value": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "libcst.ConcatenatedString",
    "libcst.helpers.ensure_type",
    "libcst.parse_expression"
   ]
  },
  "type": "function"
 },
 "libcst.helpers.tests.test_expression.ExpressionTest.test_float_evaluated_value": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ast.literal_eval",
    "libcst.Float",
    "libcst.helpers.ensure_type",
    "libcst.parse_expression"
   ]
  },
  "type": "function"
 },
 "libcst.helpers.tests.test_expression.ExpressionTest.test_get_full_name_for_expression": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "Exception",
    "input",
    "libcst.Attribute",
    "libcst.CSTNode",
    "libcst.Decorator",
    "libcst.Name",
    "libcst.helpers.ensure_type",
    "libcst.helpers.get_full_name_for_node",
    "libcst.helpers.get_full_name_for_node_or_raise",
    "libcst.parse_expression",
    "libcst.parse_statement",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.helpers.tests.test_expression.ExpressionTest.test_integer_evaluated_value": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ast.literal_eval",
    "libcst.Integer",
    "libcst.helpers.ensure_type",
    "libcst.parse_expression"
   ]
  },
  "type": "function"
 },
 "libcst.helpers.tests.test_expression.ExpressionTest.test_simplestring_evaluated_value": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ast.literal_eval",
    "libcst.SimpleString",
    "libcst.helpers.ensure_type",
    "libcst.parse_expression"
   ]
  },
  "type": "function"
 },
 "libcst.helpers.tests.test_expression.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.helpers.tests.test_expression.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst.helpers.tests.test_expression.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.helpers.tests.test_expression.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.helpers.tests.test_expression.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst.helpers.tests.test_expression.ensure_type": {
  "data": {
   "shadows": "libcst.helpers.ensure_type"
  },
  "type": "import"
 },
 "libcst.helpers.tests.test_expression.get_full_name_for_node": {
  "data": {
   "shadows": "libcst.helpers.get_full_name_for_node"
  },
  "type": "import"
 },
 "libcst.helpers.tests.test_expression.get_full_name_for_node_or_raise": {
  "data": {
   "shadows": "libcst.helpers.get_full_name_for_node_or_raise"
  },
  "type": "import"
 },
 "libcst.helpers.tests.test_expression.literal_eval": {
  "data": {
   "shadows": "ast.literal_eval"
  },
  "type": "import"
 },
 "libcst.helpers.tests.test_module": {
  "data": {},
  "type": "module"
 },
 "libcst.helpers.tests.test_module.ModuleTest": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.helpers.tests.test_module.ModuleTest.test_insert_header_comments": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "libcst.helpers.insert_header_comments",
    "libcst.helpers.tests.test_module.libcst"
   ]
  },
  "type": "function"
 },
 "libcst.helpers.tests.test_module.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.helpers.tests.test_module.insert_header_comments": {
  "data": {
   "shadows": "libcst.helpers.insert_header_comments"
  },
  "type": "import"
 },
 "libcst.helpers.tests.test_module.libcst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.helpers.tests.test_statement": {
  "data": {},
  "type": "module"
 },
 "libcst.helpers.tests.test_statement.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.helpers.tests.test_statement.StatementTest": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.helpers.tests.test_statement.StatementTest.test_get_absolute_module": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Exception",
    "len",
    "libcst.ImportFrom",
    "libcst.SimpleStatementLine",
    "libcst.helpers.ensure_type",
    "libcst.helpers.get_absolute_module_for_import",
    "libcst.helpers.get_absolute_module_for_import_or_raise",
    "libcst.parse_statement",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.helpers.tests.test_statement.StatementTest.test_importalias_helpers": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "libcst.AsName",
    "libcst.Attribute",
    "libcst.ImportAlias",
    "libcst.Name",
    "libcst.testing.utils.data_provider",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.helpers.tests.test_statement.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.helpers.tests.test_statement.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.helpers.tests.test_statement.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst.helpers.tests.test_statement.ensure_type": {
  "data": {
   "shadows": "libcst.helpers.ensure_type"
  },
  "type": "import"
 },
 "libcst.helpers.tests.test_statement.get_absolute_module_for_import": {
  "data": {
   "shadows": "libcst.helpers.get_absolute_module_for_import"
  },
  "type": "import"
 },
 "libcst.helpers.tests.test_statement.get_absolute_module_for_import_or_raise": {
  "data": {
   "shadows": "libcst.helpers.get_absolute_module_for_import_or_raise"
  },
  "type": "import"
 },
 "libcst.helpers.tests.test_template": {
  "data": {},
  "type": "module"
 },
 "libcst.helpers.tests.test_template.TemplateTest": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.helpers.tests.test_template.TemplateTest.code": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Module",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.helpers.tests.test_template.TemplateTest.dedent": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "libcst.helpers.tests.test_template.os",
    "str",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst.helpers.tests.test_template.TemplateTest.test_annotation": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "libcst.Annotation",
    "libcst.Integer",
    "libcst.Name",
    "libcst.helpers.parse_template_statement"
   ]
  },
  "type": "function"
 },
 "libcst.helpers.tests.test_template.TemplateTest.test_args": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "libcst.Arg",
    "libcst.Name",
    "libcst.helpers.parse_template_expression"
   ]
  },
  "type": "function"
 },
 "libcst.helpers.tests.test_template.TemplateTest.test_assign_target": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "libcst.AssignTarget",
    "libcst.Integer",
    "libcst.Name",
    "libcst.helpers.parse_template_statement"
   ]
  },
  "type": "function"
 },
 "libcst.helpers.tests.test_template.TemplateTest.test_decorators": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "libcst.Decorator",
    "libcst.Name",
    "libcst.helpers.parse_template_statement"
   ]
  },
  "type": "function"
 },
 "libcst.helpers.tests.test_template.TemplateTest.test_parameters": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "libcst.Name",
    "libcst.Param",
    "libcst.Parameters",
    "libcst.helpers.parse_template_statement"
   ]
  },
  "type": "function"
 },
 "libcst.helpers.tests.test_template.TemplateTest.test_simple_expression": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "libcst.BinaryOperation",
    "libcst.LeftParen",
    "libcst.Multiply",
    "libcst.Name",
    "libcst.RightParen",
    "libcst.helpers.parse_template_expression"
   ]
  },
  "type": "function"
 },
 "libcst.helpers.tests.test_template.TemplateTest.test_simple_module": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "libcst.Name",
    "libcst.helpers.parse_template_module"
   ]
  },
  "type": "function"
 },
 "libcst.helpers.tests.test_template.TemplateTest.test_simple_statement": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "libcst.Name",
    "libcst.SimpleString",
    "libcst.helpers.parse_template_statement"
   ]
  },
  "type": "function"
 },
 "libcst.helpers.tests.test_template.TemplateTest.test_statement": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "libcst.Call",
    "libcst.Expr",
    "libcst.If",
    "libcst.Name",
    "libcst.Pass",
    "libcst.SimpleStatementLine",
    "libcst.SimpleStatementSuite",
    "libcst.helpers.parse_template_module"
   ]
  },
  "type": "function"
 },
 "libcst.helpers.tests.test_template.TemplateTest.test_subscript": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "libcst.Index",
    "libcst.Integer",
    "libcst.Name",
    "libcst.Slice",
    "libcst.SubscriptElement",
    "libcst.helpers.parse_template_expression"
   ]
  },
  "type": "function"
 },
 "libcst.helpers.tests.test_template.TemplateTest.test_suite": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "libcst.IndentedBlock",
    "libcst.Pass",
    "libcst.SimpleStatementLine",
    "libcst.SimpleStatementSuite",
    "libcst.helpers.parse_template_module"
   ]
  },
  "type": "function"
 },
 "libcst.helpers.tests.test_template.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.helpers.tests.test_template.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.helpers.tests.test_template.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "libcst.helpers.tests.test_template.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libcst.helpers.tests.test_template.parse_template_expression": {
  "data": {
   "shadows": "libcst.helpers.parse_template_expression"
  },
  "type": "import"
 },
 "libcst.helpers.tests.test_template.parse_template_module": {
  "data": {
   "shadows": "libcst.helpers.parse_template_module"
  },
  "type": "import"
 },
 "libcst.helpers.tests.test_template.parse_template_statement": {
  "data": {
   "shadows": "libcst.helpers.parse_template_statement"
  },
  "type": "import"
 },
 "libcst.matchers": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "libcst.Annotation",
    "libcst.Arg",
    "libcst.AsName",
    "libcst.AssignEqual",
    "libcst.AssignTarget",
    "libcst.Asynchronous",
    "libcst.Attribute",
    "libcst.BaseAssignTargetExpression",
    "libcst.BaseAugOp",
    "libcst.BaseBinaryOp",
    "libcst.BaseBooleanOp",
    "libcst.BaseCompOp",
    "libcst.BaseCompoundStatement",
    "libcst.BaseDelTargetExpression",
    "libcst.BaseDictElement",
    "libcst.BaseElement",
    "libcst.BaseExpression",
    "libcst.BaseFormattedStringContent",
    "libcst.BaseParenthesizableWhitespace",
    "libcst.BaseSlice",
    "libcst.BaseSmallStatement",
    "libcst.BaseStatement",
    "libcst.BaseSuite",
    "libcst.BaseUnaryOp",
    "libcst.Call",
    "libcst.Colon",
    "libcst.Comma",
    "libcst.Comment",
    "libcst.CompFor",
    "libcst.CompIf",
    "libcst.ComparisonTarget",
    "libcst.ConcatenatedString",
    "libcst.Decorator",
    "libcst.Dot",
    "libcst.Else",
    "libcst.EmptyLine",
    "libcst.ExceptHandler",
    "libcst.Finally",
    "libcst.FormattedString",
    "libcst.From",
    "libcst.If",
    "libcst.ImportAlias",
    "libcst.LeftCurlyBrace",
    "libcst.LeftParen",
    "libcst.LeftSquareBracket",
    "libcst.List",
    "libcst.Name",
    "libcst.NameItem",
    "libcst.Newline",
    "libcst.Param",
    "libcst.ParamSlash",
    "libcst.ParamStar",
    "libcst.Parameters",
    "libcst.RightCurlyBrace",
    "libcst.RightParen",
    "libcst.RightSquareBracket",
    "libcst.Semicolon",
    "libcst.SimpleStatementLine",
    "libcst.SimpleString",
    "libcst.SimpleWhitespace",
    "libcst.SubscriptElement",
    "libcst.TrailingWhitespace",
    "libcst.Tuple",
    "libcst.WithItem",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.MatchMetadata",
    "libcst.matchers._matcher_base.MatchMetadataIfTrue",
    "str",
    "typing.Callable",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "libcst.matchers.AbstractBaseMatcherNodeMeta": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.AbstractBaseMatcherNodeMeta"
  },
  "type": "import"
 },
 "libcst.matchers.Add": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseBinaryOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.AddAssign": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseAugOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.AllOf": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.AllOf"
  },
  "type": "import"
 },
 "libcst.matchers.And": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseBooleanOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.AnnAssign": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.AnnotationMatchType",
    "libcst.matchers.AssignEqualMatchType",
    "libcst.matchers.BaseAssignTargetExpressionMatchType",
    "libcst.matchers.BaseExpressionOrNoneMatchType",
    "libcst.matchers.BaseSmallStatement",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.SemicolonMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Annotation": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseExpressionMatchType",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.AnnotationMatchType": {
  "data": {
   "lineno": 231
  },
  "type": "constant"
 },
 "libcst.matchers.AnnotationOrNoneMatchType": {
  "data": {
   "lineno": 5517
  },
  "type": "constant"
 },
 "libcst.matchers.Arg": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.matchers.AssignEqualMatchType",
    "libcst.matchers.BaseExpressionMatchType",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.CommaMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.NameOrNoneMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Union",
    "typing_extensions.Literal"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.ArgMatchType": {
  "data": {
   "lineno": 1618
  },
  "type": "constant"
 },
 "libcst.matchers.AsName": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.NameOrTupleOrListMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.AsNameOrNoneMatchType": {
  "data": {
   "lineno": 4193
  },
  "type": "constant"
 },
 "libcst.matchers.Assert": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseExpressionMatchType",
    "libcst.matchers.BaseExpressionOrNoneMatchType",
    "libcst.matchers.BaseSmallStatement",
    "libcst.matchers.CommaMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.SemicolonMatchType",
    "libcst.matchers.SimpleWhitespaceMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Assign": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.AssignTarget",
    "libcst.matchers.AssignTargetMatchType",
    "libcst.matchers.BaseExpressionMatchType",
    "libcst.matchers.BaseSmallStatement",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.SemicolonMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.AssignEqual": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.AssignEqualMatchType": {
  "data": {
   "lineno": 240
  },
  "type": "constant"
 },
 "libcst.matchers.AssignEqualOrNoneMatchType": {
  "data": {
   "lineno": 5097
  },
  "type": "constant"
 },
 "libcst.matchers.AssignTarget": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseAssignTargetExpressionMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.SimpleWhitespaceMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.AssignTargetMatchType": {
  "data": {
   "lineno": 478
  },
  "type": "constant"
 },
 "libcst.matchers.Asynchronous": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.SimpleWhitespaceMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.AsynchronousOrNoneMatchType": {
  "data": {
   "lineno": 2394
  },
  "type": "constant"
 },
 "libcst.matchers.AtLeastN": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.AtLeastN"
  },
  "type": "import"
 },
 "libcst.matchers.AtMostN": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.AtMostN"
  },
  "type": "import"
 },
 "libcst.matchers.Attribute": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.LeftParen",
    "libcst.RightParen",
    "libcst.matchers.BaseAssignTargetExpression",
    "libcst.matchers.BaseDelTargetExpression",
    "libcst.matchers.BaseExpression",
    "libcst.matchers.BaseExpressionMatchType",
    "libcst.matchers.DotMatchType",
    "libcst.matchers.LeftParenMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.NameMatchType",
    "libcst.matchers.RightParenMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.AttributeOrNameMatchType": {
  "data": {
   "lineno": 6780
  },
  "type": "constant"
 },
 "libcst.matchers.AttributeOrNameOrNoneMatchType": {
  "data": {
   "lineno": 6813
  },
  "type": "constant"
 },
 "libcst.matchers.AugAssign": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseAssignTargetExpressionMatchType",
    "libcst.matchers.BaseAugOpMatchType",
    "libcst.matchers.BaseExpressionMatchType",
    "libcst.matchers.BaseSmallStatement",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.SemicolonMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Await": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.LeftParen",
    "libcst.RightParen",
    "libcst.matchers.BaseExpression",
    "libcst.matchers.BaseExpressionMatchType",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.LeftParenMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.RightParenMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BaseAssignTargetExpression": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "libcst.matchers._NodeABC"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BaseAssignTargetExpressionMatchType": {
  "data": {
   "lineno": 226
  },
  "type": "constant"
 },
 "libcst.matchers.BaseAugOp": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "libcst.matchers._NodeABC"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BaseAugOpMatchType": {
  "data": {
   "lineno": 847
  },
  "type": "constant"
 },
 "libcst.matchers.BaseBinaryOp": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "libcst.matchers._NodeABC"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BaseBinaryOpMatchType": {
  "data": {
   "lineno": 1068
  },
  "type": "constant"
 },
 "libcst.matchers.BaseBooleanOp": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "libcst.matchers._NodeABC"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BaseBooleanOpMatchType": {
  "data": {
   "lineno": 1409
  },
  "type": "constant"
 },
 "libcst.matchers.BaseComp": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "libcst.matchers._NodeABC"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BaseCompOp": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "libcst.matchers._NodeABC"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BaseCompOpMatchType": {
  "data": {
   "lineno": 2831
  },
  "type": "constant"
 },
 "libcst.matchers.BaseCompoundStatement": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "libcst.matchers._NodeABC"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BaseDelTargetExpression": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "libcst.matchers._NodeABC"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BaseDelTargetExpressionMatchType": {
  "data": {
   "lineno": 3203
  },
  "type": "constant"
 },
 "libcst.matchers.BaseDict": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "libcst.matchers._NodeABC"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BaseDictElement": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "libcst.matchers._NodeABC"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BaseDictElementMatchType": {
  "data": {
   "lineno": 3238
  },
  "type": "constant"
 },
 "libcst.matchers.BaseElement": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "libcst.matchers._NodeABC"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BaseElementMatchType": {
  "data": {
   "lineno": 8036
  },
  "type": "constant"
 },
 "libcst.matchers.BaseExpression": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "libcst.matchers._NodeABC"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BaseExpressionMatchType": {
  "data": {
   "lineno": 288
  },
  "type": "constant"
 },
 "libcst.matchers.BaseExpressionOrFromOrNoneMatchType": {
  "data": {
   "lineno": 12879
  },
  "type": "constant"
 },
 "libcst.matchers.BaseExpressionOrNoneMatchType": {
  "data": {
   "lineno": 234
  },
  "type": "constant"
 },
 "libcst.matchers.BaseFormattedStringContent": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "libcst.matchers._NodeABC"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BaseFormattedStringContentMatchType": {
  "data": {
   "lineno": 4814
  },
  "type": "constant"
 },
 "libcst.matchers.BaseList": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "libcst.matchers._NodeABC"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BaseMatcherNode": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.BaseMatcherNode"
  },
  "type": "import"
 },
 "libcst.matchers.BaseMetadataProvider": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "libcst.matchers._NodeABC"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BaseNumber": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "libcst.matchers._NodeABC"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BaseParenthesizableWhitespace": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "libcst.matchers._NodeABC"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BaseParenthesizableWhitespaceMatchType": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "libcst.matchers.BaseSet": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "libcst.matchers._NodeABC"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BaseSimpleComp": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "libcst.matchers._NodeABC"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BaseSlice": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "libcst.matchers._NodeABC"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BaseSliceMatchType": {
  "data": {
   "lineno": 11795
  },
  "type": "constant"
 },
 "libcst.matchers.BaseSmallStatement": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "libcst.matchers._NodeABC"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BaseSmallStatementMatchType": {
  "data": {
   "lineno": 10797
  },
  "type": "constant"
 },
 "libcst.matchers.BaseStatement": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "libcst.matchers._NodeABC"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BaseStatementMatchType": {
  "data": {
   "lineno": 7278
  },
  "type": "constant"
 },
 "libcst.matchers.BaseString": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "libcst.matchers._NodeABC"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BaseSuite": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "libcst.matchers._NodeABC"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BaseSuiteMatchType": {
  "data": {
   "lineno": 1881
  },
  "type": "constant"
 },
 "libcst.matchers.BaseUnaryOp": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "libcst.matchers._NodeABC"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BaseUnaryOpMatchType": {
  "data": {
   "lineno": 12348
  },
  "type": "constant"
 },
 "libcst.matchers.BinaryOperation": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.LeftParen",
    "libcst.RightParen",
    "libcst.matchers.BaseBinaryOpMatchType",
    "libcst.matchers.BaseExpression",
    "libcst.matchers.BaseExpressionMatchType",
    "libcst.matchers.LeftParenMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.RightParenMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BitAnd": {
  "data": {
   "lineno": 1261,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseBinaryOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BitAndAssign": {
  "data": {
   "lineno": 1283,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseAugOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BitInvert": {
  "data": {
   "lineno": 1305,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.BaseUnaryOp",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BitOr": {
  "data": {
   "lineno": 1321,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseBinaryOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BitOrAssign": {
  "data": {
   "lineno": 1343,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseAugOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BitXor": {
  "data": {
   "lineno": 1365,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseBinaryOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BitXorAssign": {
  "data": {
   "lineno": 1387,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseAugOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.BooleanOperation": {
  "data": {
   "lineno": 1414,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.LeftParen",
    "libcst.RightParen",
    "libcst.matchers.BaseBooleanOpMatchType",
    "libcst.matchers.BaseExpression",
    "libcst.matchers.BaseExpressionMatchType",
    "libcst.matchers.LeftParenMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.RightParenMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Break": {
  "data": {
   "lineno": 1602,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseSmallStatement",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.SemicolonMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Call": {
  "data": {
   "lineno": 1621,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.Arg",
    "libcst.LeftParen",
    "libcst.RightParen",
    "libcst.matchers.ArgMatchType",
    "libcst.matchers.BaseExpression",
    "libcst.matchers.BaseExpressionMatchType",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.LeftParenMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.RightParenMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst.matchers.ClassDef": {
  "data": {
   "lineno": 1892,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.Arg",
    "libcst.Decorator",
    "libcst.EmptyLine",
    "libcst.matchers.ArgMatchType",
    "libcst.matchers.BaseCompoundStatement",
    "libcst.matchers.BaseStatement",
    "libcst.matchers.BaseSuiteMatchType",
    "libcst.matchers.DecoratorMatchType",
    "libcst.matchers.EmptyLineMatchType",
    "libcst.matchers.LeftParenMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.NameMatchType",
    "libcst.matchers.RightParenMatchType",
    "libcst.matchers.SimpleWhitespaceMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Colon": {
  "data": {
   "lineno": 2325,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.ColonMatchType": {
  "data": {
   "lineno": 7704
  },
  "type": "constant"
 },
 "libcst.matchers.Comma": {
  "data": {
   "lineno": 2347,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.CommaMatchType": {
  "data": {
   "lineno": 329
  },
  "type": "constant"
 },
 "libcst.matchers.Comment": {
  "data": {
   "lineno": 2372,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "libcst.matchers.strMatchType",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.CommentOrNoneMatchType": {
  "data": {
   "lineno": 4129
  },
  "type": "constant"
 },
 "libcst.matchers.CompFor": {
  "data": {
   "lineno": 2402,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "iter",
    "libcst.CompIf",
    "libcst.matchers.AsynchronousOrNoneMatchType",
    "libcst.matchers.BaseAssignTargetExpressionMatchType",
    "libcst.matchers.BaseExpressionMatchType",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.CompForOrNoneMatchType",
    "libcst.matchers.CompIfMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.CompForMatchType": {
  "data": {
   "lineno": 3517
  },
  "type": "constant"
 },
 "libcst.matchers.CompForOrNoneMatchType": {
  "data": {
   "lineno": 2388
  },
  "type": "constant"
 },
 "libcst.matchers.CompIf": {
  "data": {
   "lineno": 2540,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseExpressionMatchType",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.CompIfMatchType": {
  "data": {
   "lineno": 2385
  },
  "type": "constant"
 },
 "libcst.matchers.Comparison": {
  "data": {
   "lineno": 2575,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.ComparisonTarget",
    "libcst.LeftParen",
    "libcst.RightParen",
    "libcst.matchers.BaseExpression",
    "libcst.matchers.BaseExpressionMatchType",
    "libcst.matchers.ComparisonTargetMatchType",
    "libcst.matchers.LeftParenMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.RightParenMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.ComparisonTarget": {
  "data": {
   "lineno": 2836,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseCompOpMatchType",
    "libcst.matchers.BaseExpressionMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.ComparisonTargetMatchType": {
  "data": {
   "lineno": 2568
  },
  "type": "constant"
 },
 "libcst.matchers.ConcatenatedString": {
  "data": {
   "lineno": 2877,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.LeftParen",
    "libcst.RightParen",
    "libcst.matchers.BaseExpression",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.BaseString",
    "libcst.matchers.LeftParenMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.RightParenMatchType",
    "libcst.matchers.SimpleStringOrFormattedStringMatchType",
    "libcst.matchers.SimpleStringOrFormattedStringOrConcatenatedStringMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Continue": {
  "data": {
   "lineno": 3065,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseSmallStatement",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.SemicolonMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Decorator": {
  "data": {
   "lineno": 3095,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.EmptyLine",
    "libcst.matchers.EmptyLineMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.NameOrAttributeOrCallMatchType",
    "libcst.matchers.SimpleWhitespaceMatchType",
    "libcst.matchers.TrailingWhitespaceMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.DecoratorMatchType": {
  "data": {
   "lineno": 1884
  },
  "type": "constant"
 },
 "libcst.matchers.Del": {
  "data": {
   "lineno": 3210,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseDelTargetExpressionMatchType",
    "libcst.matchers.BaseSmallStatement",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.SemicolonMatchType",
    "libcst.matchers.SimpleWhitespaceMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Dict": {
  "data": {
   "lineno": 3255,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.BaseDictElement",
    "libcst.LeftParen",
    "libcst.RightParen",
    "libcst.matchers.BaseDict",
    "libcst.matchers.BaseDictElementMatchType",
    "libcst.matchers.BaseExpression",
    "libcst.matchers.LeftCurlyBraceMatchType",
    "libcst.matchers.LeftParenMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.RightCurlyBraceMatchType",
    "libcst.matchers.RightParenMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.DictComp": {
  "data": {
   "lineno": 3522,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.LeftParen",
    "libcst.RightParen",
    "libcst.matchers.BaseAssignTargetExpressionMatchType",
    "libcst.matchers.BaseComp",
    "libcst.matchers.BaseDict",
    "libcst.matchers.BaseExpression",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.CompForMatchType",
    "libcst.matchers.LeftCurlyBraceMatchType",
    "libcst.matchers.LeftParenMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.RightCurlyBraceMatchType",
    "libcst.matchers.RightParenMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.DictElement": {
  "data": {
   "lineno": 3734,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseDictElement",
    "libcst.matchers.BaseExpressionMatchType",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.CommaMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Divide": {
  "data": {
   "lineno": 3771,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseBinaryOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.DivideAssign": {
  "data": {
   "lineno": 3793,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseAugOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.DoNotCare": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.DoNotCare"
  },
  "type": "import"
 },
 "libcst.matchers.DoNotCareSentinel": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.DoNotCareSentinel"
  },
  "type": "import"
 },
 "libcst.matchers.DoesNotMatch": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.DoesNotMatch"
  },
  "type": "import"
 },
 "libcst.matchers.Dot": {
  "data": {
   "lineno": 3815,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.DotMatchType": {
  "data": {
   "lineno": 654
  },
  "type": "constant"
 },
 "libcst.matchers.Element": {
  "data": {
   "lineno": 3837,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseElement",
    "libcst.matchers.BaseExpressionMatchType",
    "libcst.matchers.CommaMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Ellipsis": {
  "data": {
   "lineno": 3856,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.LeftParen",
    "libcst.RightParen",
    "libcst.matchers.BaseExpression",
    "libcst.matchers.LeftParenMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.RightParenMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Else": {
  "data": {
   "lineno": 4026,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.EmptyLine",
    "libcst.matchers.BaseSuiteMatchType",
    "libcst.matchers.EmptyLineMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.SimpleWhitespaceMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.ElseOrNoneMatchType": {
  "data": {
   "lineno": 4662
  },
  "type": "constant"
 },
 "libcst.matchers.EmptyLine": {
  "data": {
   "lineno": 4140,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.CommentOrNoneMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.NewlineMatchType",
    "libcst.matchers.SimpleWhitespaceMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "libcst.matchers.boolMatchType",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.EmptyLineMatchType": {
  "data": {
   "lineno": 1887
  },
  "type": "constant"
 },
 "libcst.matchers.Equal": {
  "data": {
   "lineno": 4171,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseCompOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.ExceptHandler": {
  "data": {
   "lineno": 4201,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.EmptyLine",
    "libcst.matchers.AsNameOrNoneMatchType",
    "libcst.matchers.BaseExpressionOrNoneMatchType",
    "libcst.matchers.BaseSuiteMatchType",
    "libcst.matchers.EmptyLineMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.SimpleWhitespaceMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "type",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.ExceptHandlerMatchType": {
  "data": {
   "lineno": 11891
  },
  "type": "constant"
 },
 "libcst.matchers.Expr": {
  "data": {
   "lineno": 4321,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseExpressionMatchType",
    "libcst.matchers.BaseSmallStatement",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.SemicolonMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Finally": {
  "data": {
   "lineno": 4343,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.EmptyLine",
    "libcst.matchers.BaseSuiteMatchType",
    "libcst.matchers.EmptyLineMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.SimpleWhitespaceMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.FinallyOrNoneMatchType": {
  "data": {
   "lineno": 11894
  },
  "type": "constant"
 },
 "libcst.matchers.Float": {
  "data": {
   "lineno": 4445,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.LeftParen",
    "libcst.RightParen",
    "libcst.matchers.BaseExpression",
    "libcst.matchers.BaseNumber",
    "libcst.matchers.LeftParenMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.RightParenMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "libcst.matchers.strMatchType",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.FloorDivide": {
  "data": {
   "lineno": 4618,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseBinaryOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.FloorDivideAssign": {
  "data": {
   "lineno": 4640,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseAugOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.For": {
  "data": {
   "lineno": 4670,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "iter",
    "libcst.EmptyLine",
    "libcst.matchers.AsynchronousOrNoneMatchType",
    "libcst.matchers.BaseAssignTargetExpressionMatchType",
    "libcst.matchers.BaseCompoundStatement",
    "libcst.matchers.BaseExpressionMatchType",
    "libcst.matchers.BaseStatement",
    "libcst.matchers.BaseSuiteMatchType",
    "libcst.matchers.ElseOrNoneMatchType",
    "libcst.matchers.EmptyLineMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.SimpleWhitespaceMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.FormattedString": {
  "data": {
   "lineno": 4821,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.BaseFormattedStringContent",
    "libcst.LeftParen",
    "libcst.RightParen",
    "libcst.matchers.BaseExpression",
    "libcst.matchers.BaseFormattedStringContentMatchType",
    "libcst.matchers.BaseString",
    "libcst.matchers.LeftParenMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.RightParenMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "libcst.matchers.strMatchType",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union",
    "typing_extensions.Literal"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.FormattedStringExpression": {
  "data": {
   "lineno": 5105,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.BaseFormattedStringContent",
    "libcst.matchers.AssignEqualOrNoneMatchType",
    "libcst.matchers.BaseExpressionMatchType",
    "libcst.matchers.BaseFormattedStringContent",
    "libcst.matchers.BaseFormattedStringContentMatchType",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "libcst.matchers.strOrNoneMatchType",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.FormattedStringText": {
  "data": {
   "lineno": 5473,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseFormattedStringContent",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "libcst.matchers.strMatchType",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.From": {
  "data": {
   "lineno": 5486,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseExpressionMatchType",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.FromOrNoneMatchType": {
  "data": {
   "lineno": 10157
  },
  "type": "constant"
 },
 "libcst.matchers.FunctionDef": {
  "data": {
   "lineno": 5525,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.Decorator",
    "libcst.EmptyLine",
    "libcst.matchers.AnnotationOrNoneMatchType",
    "libcst.matchers.AsynchronousOrNoneMatchType",
    "libcst.matchers.BaseCompoundStatement",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.BaseStatement",
    "libcst.matchers.BaseSuiteMatchType",
    "libcst.matchers.DecoratorMatchType",
    "libcst.matchers.EmptyLineMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.NameMatchType",
    "libcst.matchers.ParametersMatchType",
    "libcst.matchers.SimpleWhitespaceMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.GeneratorExp": {
  "data": {
   "lineno": 5826,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.LeftParen",
    "libcst.RightParen",
    "libcst.matchers.BaseAssignTargetExpressionMatchType",
    "libcst.matchers.BaseComp",
    "libcst.matchers.BaseExpression",
    "libcst.matchers.BaseSimpleComp",
    "libcst.matchers.CompForMatchType",
    "libcst.matchers.LeftParenMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.RightParenMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Global": {
  "data": {
   "lineno": 6013,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.NameItem",
    "libcst.matchers.BaseSmallStatement",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.NameItemMatchType",
    "libcst.matchers.SemicolonMatchType",
    "libcst.matchers.SimpleWhitespaceMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.GreaterThan": {
  "data": {
   "lineno": 6115,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseCompOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.GreaterThanEqual": {
  "data": {
   "lineno": 6137,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseCompOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.If": {
  "data": {
   "lineno": 6168,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.EmptyLine",
    "libcst.matchers.BaseCompoundStatement",
    "libcst.matchers.BaseExpressionMatchType",
    "libcst.matchers.BaseStatement",
    "libcst.matchers.BaseSuiteMatchType",
    "libcst.matchers.EmptyLineMatchType",
    "libcst.matchers.IfOrElseOrNoneMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.SimpleWhitespaceMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.IfExp": {
  "data": {
   "lineno": 6288,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.LeftParen",
    "libcst.RightParen",
    "libcst.matchers.BaseExpression",
    "libcst.matchers.BaseExpressionMatchType",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.LeftParenMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.RightParenMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.IfOrElseOrNoneMatchType": {
  "data": {
   "lineno": 6159
  },
  "type": "constant"
 },
 "libcst.matchers.Imaginary": {
  "data": {
   "lineno": 6500,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.LeftParen",
    "libcst.RightParen",
    "libcst.matchers.BaseExpression",
    "libcst.matchers.BaseNumber",
    "libcst.matchers.LeftParenMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.RightParenMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "libcst.matchers.strMatchType",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Import": {
  "data": {
   "lineno": 6678,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.ImportAlias",
    "libcst.matchers.BaseSmallStatement",
    "libcst.matchers.ImportAliasMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.SemicolonMatchType",
    "libcst.matchers.SimpleWhitespaceMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.ImportAlias": {
  "data": {
   "lineno": 6788,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.AsNameOrNoneMatchType",
    "libcst.matchers.AttributeOrNameMatchType",
    "libcst.matchers.CommaMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.ImportAliasMatchType": {
  "data": {
   "lineno": 6673
  },
  "type": "constant"
 },
 "libcst.matchers.ImportFrom": {
  "data": {
   "lineno": 6834,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.Dot",
    "libcst.ImportAlias",
    "libcst.ImportStar",
    "libcst.matchers.AttributeOrNameOrNoneMatchType",
    "libcst.matchers.BaseSmallStatement",
    "libcst.matchers.DotMatchType",
    "libcst.matchers.ImportAliasMatchType",
    "libcst.matchers.LeftParenOrNoneMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.RightParenOrNoneMatchType",
    "libcst.matchers.SemicolonMatchType",
    "libcst.matchers.SimpleWhitespaceMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.ImportStar": {
  "data": {
   "lineno": 7246,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.In": {
  "data": {
   "lineno": 7256,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseCompOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.IndentedBlock": {
  "data": {
   "lineno": 7283,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.BaseStatement",
    "libcst.EmptyLine",
    "libcst.matchers.BaseStatementMatchType",
    "libcst.matchers.BaseSuite",
    "libcst.matchers.EmptyLineMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.TrailingWhitespaceMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "libcst.matchers.strOrNoneMatchType",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Index": {
  "data": {
   "lineno": 7465,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseExpressionMatchType",
    "libcst.matchers.BaseSlice",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Integer": {
  "data": {
   "lineno": 7481,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.LeftParen",
    "libcst.RightParen",
    "libcst.matchers.BaseExpression",
    "libcst.matchers.BaseNumber",
    "libcst.matchers.LeftParenMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.RightParenMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "libcst.matchers.strMatchType",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Is": {
  "data": {
   "lineno": 7654,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseCompOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.IsNot": {
  "data": {
   "lineno": 7676,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseCompOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Lambda": {
  "data": {
   "lineno": 7709,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.LeftParen",
    "libcst.RightParen",
    "libcst.matchers.BaseExpression",
    "libcst.matchers.BaseExpressionMatchType",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.ColonMatchType",
    "libcst.matchers.LeftParenMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.ParametersMatchType",
    "libcst.matchers.RightParenMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.LeftCurlyBrace": {
  "data": {
   "lineno": 7900,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.LeftCurlyBraceMatchType": {
  "data": {
   "lineno": 3243
  },
  "type": "constant"
 },
 "libcst.matchers.LeftParen": {
  "data": {
   "lineno": 7916,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.LeftParenMatchType": {
  "data": {
   "lineno": 655
  },
  "type": "constant"
 },
 "libcst.matchers.LeftParenOrNoneMatchType": {
  "data": {
   "lineno": 6820
  },
  "type": "constant"
 },
 "libcst.matchers.LeftShift": {
  "data": {
   "lineno": 7932,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseBinaryOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.LeftShiftAssign": {
  "data": {
   "lineno": 7954,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseAugOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.LeftSquareBracket": {
  "data": {
   "lineno": 7976,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.LeftSquareBracketMatchType": {
  "data": {
   "lineno": 8039
  },
  "type": "constant"
 },
 "libcst.matchers.LessThan": {
  "data": {
   "lineno": 7992,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseCompOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.LessThanEqual": {
  "data": {
   "lineno": 8014,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseCompOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.List": {
  "data": {
   "lineno": 8051,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.BaseElement",
    "libcst.LeftParen",
    "libcst.RightParen",
    "libcst.matchers.BaseAssignTargetExpression",
    "libcst.matchers.BaseDelTargetExpression",
    "libcst.matchers.BaseElementMatchType",
    "libcst.matchers.BaseExpression",
    "libcst.matchers.BaseList",
    "libcst.matchers.LeftParenMatchType",
    "libcst.matchers.LeftSquareBracketMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.RightParenMatchType",
    "libcst.matchers.RightSquareBracketMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.ListComp": {
  "data": {
   "lineno": 8319,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.LeftParen",
    "libcst.RightParen",
    "libcst.matchers.BaseAssignTargetExpressionMatchType",
    "libcst.matchers.BaseComp",
    "libcst.matchers.BaseExpression",
    "libcst.matchers.BaseList",
    "libcst.matchers.BaseSimpleComp",
    "libcst.matchers.CompForMatchType",
    "libcst.matchers.LeftParenMatchType",
    "libcst.matchers.LeftSquareBracketMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.RightParenMatchType",
    "libcst.matchers.RightSquareBracketMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Literal": {
  "data": {
   "shadows": "typing_extensions.Literal"
  },
  "type": "import"
 },
 "libcst.matchers.MatchDecoratorMismatch": {
  "data": {
   "shadows": "libcst.matchers._visitors.MatchDecoratorMismatch"
  },
  "type": "import"
 },
 "libcst.matchers.MatchIfTrue": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.MatchIfTrue"
  },
  "type": "import"
 },
 "libcst.matchers.MatchMetadata": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.MatchMetadata"
  },
  "type": "import"
 },
 "libcst.matchers.MatchMetadataIfTrue": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.MatchMetadataIfTrue"
  },
  "type": "import"
 },
 "libcst.matchers.MatchRegex": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.MatchRegex"
  },
  "type": "import"
 },
 "libcst.matchers.MatcherDecoratableTransformer": {
  "data": {
   "shadows": "libcst.matchers._visitors.MatcherDecoratableTransformer"
  },
  "type": "import"
 },
 "libcst.matchers.MatcherDecoratableVisitor": {
  "data": {
   "shadows": "libcst.matchers._visitors.MatcherDecoratableVisitor"
  },
  "type": "import"
 },
 "libcst.matchers.MatrixMultiply": {
  "data": {
   "lineno": 8513,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseBinaryOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.MatrixMultiplyAssign": {
  "data": {
   "lineno": 8535,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseAugOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.MetadataMatchType": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "libcst.matchers.Minus": {
  "data": {
   "lineno": 8557,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.BaseUnaryOp",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Module": {
  "data": {
   "lineno": 8583,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.BaseCompoundStatement",
    "libcst.EmptyLine",
    "libcst.SimpleStatementLine",
    "libcst.matchers.EmptyLineMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.SimpleStatementLineOrBaseCompoundStatementMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "libcst.matchers.boolMatchType",
    "libcst.matchers.strMatchType",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Modulo": {
  "data": {
   "lineno": 8931,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseBinaryOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.ModuloAssign": {
  "data": {
   "lineno": 8953,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseAugOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Multiply": {
  "data": {
   "lineno": 8975,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseBinaryOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.MultiplyAssign": {
  "data": {
   "lineno": 8997,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseAugOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Name": {
  "data": {
   "lineno": 9019,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.LeftParen",
    "libcst.RightParen",
    "libcst.matchers.BaseAssignTargetExpression",
    "libcst.matchers.BaseDelTargetExpression",
    "libcst.matchers.BaseExpression",
    "libcst.matchers.LeftParenMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.RightParenMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "libcst.matchers.strMatchType",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.NameItem": {
  "data": {
   "lineno": 9194,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.CommaMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.NameMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.NameItemMatchType": {
  "data": {
   "lineno": 6008
  },
  "type": "constant"
 },
 "libcst.matchers.NameMatchType": {
  "data": {
   "lineno": 651
  },
  "type": "constant"
 },
 "libcst.matchers.NameOrAttributeOrCallMatchType": {
  "data": {
   "lineno": 3081
  },
  "type": "constant"
 },
 "libcst.matchers.NameOrNoneMatchType": {
  "data": {
   "lineno": 323
  },
  "type": "constant"
 },
 "libcst.matchers.NameOrTupleOrListMatchType": {
  "data": {
   "lineno": 397
  },
  "type": "constant"
 },
 "libcst.matchers.NamedExpr": {
  "data": {
   "lineno": 9210,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.LeftParen",
    "libcst.RightParen",
    "libcst.matchers.BaseExpression",
    "libcst.matchers.BaseExpressionMatchType",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.LeftParenMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.RightParenMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Newline": {
  "data": {
   "lineno": 9404,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "libcst.matchers.strOrNoneMatchType",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.NewlineMatchType": {
  "data": {
   "lineno": 4135
  },
  "type": "constant"
 },
 "libcst.matchers.Nonlocal": {
  "data": {
   "lineno": 9420,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.NameItem",
    "libcst.matchers.BaseSmallStatement",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.NameItemMatchType",
    "libcst.matchers.SemicolonMatchType",
    "libcst.matchers.SimpleWhitespaceMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Not": {
  "data": {
   "lineno": 9522,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.BaseUnaryOp",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.NotEqual": {
  "data": {
   "lineno": 9538,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseCompOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "libcst.matchers.strMatchType",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.NotIn": {
  "data": {
   "lineno": 9563,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseCompOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.OneOf": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.OneOf"
  },
  "type": "import"
 },
 "libcst.matchers.Or": {
  "data": {
   "lineno": 9591,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseBooleanOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Param": {
  "data": {
   "lineno": 9613,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.AnnotationOrNoneMatchType",
    "libcst.matchers.AssignEqualMatchType",
    "libcst.matchers.BaseExpressionOrNoneMatchType",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.CommaMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.NameMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "libcst.matchers.strMatchType",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.ParamMatchType": {
  "data": {
   "lineno": 9688
  },
  "type": "constant"
 },
 "libcst.matchers.ParamOrNoneMatchType": {
  "data": {
   "lineno": 9697
  },
  "type": "constant"
 },
 "libcst.matchers.ParamOrParamStarMatchType": {
  "data": {
   "lineno": 9691
  },
  "type": "constant"
 },
 "libcst.matchers.ParamSlash": {
  "data": {
   "lineno": 9662,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.CommaMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.ParamSlashMatchType": {
  "data": {
   "lineno": 9703
  },
  "type": "constant"
 },
 "libcst.matchers.ParamStar": {
  "data": {
   "lineno": 9675,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.CommaMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Parameters": {
  "data": {
   "lineno": 9708,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.Param",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.ParamMatchType",
    "libcst.matchers.ParamOrNoneMatchType",
    "libcst.matchers.ParamOrParamStarMatchType",
    "libcst.matchers.ParamSlashMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.ParametersMatchType": {
  "data": {
   "lineno": 5514
  },
  "type": "constant"
 },
 "libcst.matchers.ParenthesizedWhitespace": {
  "data": {
   "lineno": 9976,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.EmptyLine",
    "libcst.matchers.BaseParenthesizableWhitespace",
    "libcst.matchers.EmptyLineMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.SimpleWhitespaceMatchType",
    "libcst.matchers.TrailingWhitespaceMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "libcst.matchers.boolMatchType",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Pass": {
  "data": {
   "lineno": 10081,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseSmallStatement",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.SemicolonMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Plus": {
  "data": {
   "lineno": 10097,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.BaseUnaryOp",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Power": {
  "data": {
   "lineno": 10113,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseBinaryOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.PowerAssign": {
  "data": {
   "lineno": 10135,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseAugOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Raise": {
  "data": {
   "lineno": 10165,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseExpressionOrNoneMatchType",
    "libcst.matchers.BaseSmallStatement",
    "libcst.matchers.FromOrNoneMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.SemicolonMatchType",
    "libcst.matchers.SimpleWhitespaceMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Return": {
  "data": {
   "lineno": 10199,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseExpressionOrNoneMatchType",
    "libcst.matchers.BaseSmallStatement",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.SemicolonMatchType",
    "libcst.matchers.SimpleWhitespaceMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.RightCurlyBrace": {
  "data": {
   "lineno": 10227,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.RightCurlyBraceMatchType": {
  "data": {
   "lineno": 3248
  },
  "type": "constant"
 },
 "libcst.matchers.RightParen": {
  "data": {
   "lineno": 10243,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.RightParenMatchType": {
  "data": {
   "lineno": 658
  },
  "type": "constant"
 },
 "libcst.matchers.RightParenOrNoneMatchType": {
  "data": {
   "lineno": 6826
  },
  "type": "constant"
 },
 "libcst.matchers.RightShift": {
  "data": {
   "lineno": 10259,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseBinaryOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.RightShiftAssign": {
  "data": {
   "lineno": 10281,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseAugOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.RightSquareBracket": {
  "data": {
   "lineno": 10303,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.RightSquareBracketMatchType": {
  "data": {
   "lineno": 8044
  },
  "type": "constant"
 },
 "libcst.matchers.SaveMatchedNode": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.SaveMatchedNode"
  },
  "type": "import"
 },
 "libcst.matchers.Semicolon": {
  "data": {
   "lineno": 10319,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.SemicolonMatchType": {
  "data": {
   "lineno": 243
  },
  "type": "constant"
 },
 "libcst.matchers.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst.matchers.Set": {
  "data": {
   "lineno": 10341,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.BaseElement",
    "libcst.LeftParen",
    "libcst.RightParen",
    "libcst.matchers.BaseElementMatchType",
    "libcst.matchers.BaseExpression",
    "libcst.matchers.BaseSet",
    "libcst.matchers.LeftCurlyBraceMatchType",
    "libcst.matchers.LeftParenMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.RightCurlyBraceMatchType",
    "libcst.matchers.RightParenMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.SetComp": {
  "data": {
   "lineno": 10603,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.LeftParen",
    "libcst.RightParen",
    "libcst.matchers.BaseAssignTargetExpressionMatchType",
    "libcst.matchers.BaseComp",
    "libcst.matchers.BaseExpression",
    "libcst.matchers.BaseSet",
    "libcst.matchers.BaseSimpleComp",
    "libcst.matchers.CompForMatchType",
    "libcst.matchers.LeftCurlyBraceMatchType",
    "libcst.matchers.LeftParenMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.RightCurlyBraceMatchType",
    "libcst.matchers.RightParenMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.SimpleStatementLine": {
  "data": {
   "lineno": 10804,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.BaseSmallStatement",
    "libcst.EmptyLine",
    "libcst.matchers.BaseSmallStatementMatchType",
    "libcst.matchers.BaseStatement",
    "libcst.matchers.EmptyLineMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.TrailingWhitespaceMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.SimpleStatementLineOrBaseCompoundStatementMatchType": {
  "data": {
   "lineno": 8573
  },
  "type": "constant"
 },
 "libcst.matchers.SimpleStatementSuite": {
  "data": {
   "lineno": 10980,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.BaseSmallStatement",
    "libcst.matchers.BaseSmallStatementMatchType",
    "libcst.matchers.BaseSuite",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.SimpleWhitespaceMatchType",
    "libcst.matchers.TrailingWhitespaceMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.SimpleString": {
  "data": {
   "lineno": 11082,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.LeftParen",
    "libcst.RightParen",
    "libcst.matchers.BaseExpression",
    "libcst.matchers.BaseString",
    "libcst.matchers.LeftParenMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.RightParenMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "libcst.matchers.strMatchType",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.SimpleStringOrFormattedStringMatchType": {
  "data": {
   "lineno": 2858
  },
  "type": "constant"
 },
 "libcst.matchers.SimpleStringOrFormattedStringOrConcatenatedStringMatchType": {
  "data": {
   "lineno": 2864
  },
  "type": "constant"
 },
 "libcst.matchers.SimpleWhitespace": {
  "data": {
   "lineno": 11255,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseParenthesizableWhitespace",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "libcst.matchers.strMatchType",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.SimpleWhitespaceMatchType": {
  "data": {
   "lineno": 434
  },
  "type": "constant"
 },
 "libcst.matchers.Slice": {
  "data": {
   "lineno": 11268,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseExpressionOrNoneMatchType",
    "libcst.matchers.BaseSlice",
    "libcst.matchers.ColonMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.StarredDictElement": {
  "data": {
   "lineno": 11302,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseDictElement",
    "libcst.matchers.BaseExpressionMatchType",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.CommaMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.StarredElement": {
  "data": {
   "lineno": 11327,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.LeftParen",
    "libcst.RightParen",
    "libcst.matchers.BaseElement",
    "libcst.matchers.BaseExpressionMatchType",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.CommaMatchType",
    "libcst.matchers.LeftParenMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.RightParenMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Subscript": {
  "data": {
   "lineno": 11519,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.LeftParen",
    "libcst.RightParen",
    "libcst.SubscriptElement",
    "libcst.matchers.BaseAssignTargetExpression",
    "libcst.matchers.BaseDelTargetExpression",
    "libcst.matchers.BaseExpression",
    "libcst.matchers.BaseExpressionMatchType",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.LeftParenMatchType",
    "libcst.matchers.LeftSquareBracketMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.RightParenMatchType",
    "libcst.matchers.RightSquareBracketMatchType",
    "libcst.matchers.SubscriptElementMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "slice",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.SubscriptElement": {
  "data": {
   "lineno": 11800,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseSliceMatchType",
    "libcst.matchers.CommaMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "slice",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.SubscriptElementMatchType": {
  "data": {
   "lineno": 11512
  },
  "type": "constant"
 },
 "libcst.matchers.Subtract": {
  "data": {
   "lineno": 11819,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseBinaryOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.SubtractAssign": {
  "data": {
   "lineno": 11841,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.BaseAugOp",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.TrailingWhitespace": {
  "data": {
   "lineno": 11863,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.CommentOrNoneMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.NewlineMatchType",
    "libcst.matchers.SimpleWhitespaceMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.TrailingWhitespaceMatchType": {
  "data": {
   "lineno": 3088
  },
  "type": "constant"
 },
 "libcst.matchers.Try": {
  "data": {
   "lineno": 11902,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.EmptyLine",
    "libcst.ExceptHandler",
    "libcst.matchers.BaseCompoundStatement",
    "libcst.matchers.BaseStatement",
    "libcst.matchers.BaseSuiteMatchType",
    "libcst.matchers.ElseOrNoneMatchType",
    "libcst.matchers.EmptyLineMatchType",
    "libcst.matchers.ExceptHandlerMatchType",
    "libcst.matchers.FinallyOrNoneMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.SimpleWhitespaceMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Tuple": {
  "data": {
   "lineno": 12096,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.BaseElement",
    "libcst.LeftParen",
    "libcst.RightParen",
    "libcst.matchers.BaseAssignTargetExpression",
    "libcst.matchers.BaseDelTargetExpression",
    "libcst.matchers.BaseElementMatchType",
    "libcst.matchers.BaseExpression",
    "libcst.matchers.LeftParenMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.RightParenMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.TypeOf": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.TypeOf"
  },
  "type": "import"
 },
 "libcst.matchers.UnaryOperation": {
  "data": {
   "lineno": 12353,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.LeftParen",
    "libcst.RightParen",
    "libcst.matchers.BaseExpression",
    "libcst.matchers.BaseExpressionMatchType",
    "libcst.matchers.BaseUnaryOpMatchType",
    "libcst.matchers.LeftParenMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.RightParenMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst.matchers.While": {
  "data": {
   "lineno": 12535,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.EmptyLine",
    "libcst.matchers.BaseCompoundStatement",
    "libcst.matchers.BaseExpressionMatchType",
    "libcst.matchers.BaseStatement",
    "libcst.matchers.BaseSuiteMatchType",
    "libcst.matchers.ElseOrNoneMatchType",
    "libcst.matchers.EmptyLineMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.SimpleWhitespaceMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.With": {
  "data": {
   "lineno": 12660,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.EmptyLine",
    "libcst.WithItem",
    "libcst.matchers.AsynchronousOrNoneMatchType",
    "libcst.matchers.BaseCompoundStatement",
    "libcst.matchers.BaseStatement",
    "libcst.matchers.BaseSuiteMatchType",
    "libcst.matchers.EmptyLineMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.SimpleWhitespaceMatchType",
    "libcst.matchers.WithItemMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.WithItem": {
  "data": {
   "lineno": 12854,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst.matchers.AsNameOrNoneMatchType",
    "libcst.matchers.BaseExpressionMatchType",
    "libcst.matchers.CommaMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.WithItemMatchType": {
  "data": {
   "lineno": 12655
  },
  "type": "constant"
 },
 "libcst.matchers.Yield": {
  "data": {
   "lineno": 12888,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "libcst.LeftParen",
    "libcst.RightParen",
    "libcst.matchers.BaseExpression",
    "libcst.matchers.BaseExpressionOrFromOrNoneMatchType",
    "libcst.matchers.BaseParenthesizableWhitespaceMatchType",
    "libcst.matchers.LeftParenMatchType",
    "libcst.matchers.MetadataMatchType",
    "libcst.matchers.RightParenMatchType",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.DoNotCare",
    "libcst.matchers._matcher_base.DoNotCareSentinel",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.OneOf",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.ZeroOrMore": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.ZeroOrMore"
  },
  "type": "import"
 },
 "libcst.matchers.ZeroOrOne": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.ZeroOrOne"
  },
  "type": "import"
 },
 "libcst.matchers._NodeABC": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "libcst.matchers._matcher_base.AbstractBaseMatcherNodeMeta"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.__all__": {
  "data": {
   "lineno": 13070
  },
  "type": "constant"
 },
 "libcst.matchers._decorators": {
  "data": {
   "symbols_in_volume": [
    "str",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "libcst.matchers._decorators.BaseMatcherNode": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.BaseMatcherNode"
  },
  "type": "import"
 },
 "libcst.matchers._decorators.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst.matchers._decorators.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "libcst.matchers._decorators._CSTVisitFuncT": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "libcst.matchers._decorators.call_if_inside": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "libcst.matchers._decorators._CSTVisitFuncT",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._decorators.call_if_inside.inner": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "libcst.matchers._decorators._CSTVisitFuncT",
    "setattr"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._decorators.call_if_not_inside": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "libcst.matchers._decorators._CSTVisitFuncT",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._decorators.call_if_not_inside.inner": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "libcst.matchers._decorators._CSTVisitFuncT",
    "setattr"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._decorators.leave": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "libcst.matchers._decorators._CSTVisitFuncT",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._decorators.leave.inner": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "libcst.matchers._decorators._CSTVisitFuncT",
    "setattr"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._decorators.visit": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "libcst.matchers._decorators._CSTVisitFuncT",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._decorators.visit.inner": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "libcst.matchers._decorators._CSTVisitFuncT",
    "setattr"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._return_types": {
  "data": {
   "symbols_in_volume": [
    "libcst._maybe_sentinel.MaybeSentinel",
    "libcst._nodes.base.CSTNode",
    "libcst._nodes.expression.Annotation",
    "libcst._nodes.expression.Arg",
    "libcst._nodes.expression.Asynchronous",
    "libcst._nodes.expression.Attribute",
    "libcst._nodes.expression.Await",
    "libcst._nodes.expression.BaseDictElement",
    "libcst._nodes.expression.BaseElement",
    "libcst._nodes.expression.BaseExpression",
    "libcst._nodes.expression.BaseFormattedStringContent",
    "libcst._nodes.expression.BaseSlice",
    "libcst._nodes.expression.BinaryOperation",
    "libcst._nodes.expression.BooleanOperation",
    "libcst._nodes.expression.Call",
    "libcst._nodes.expression.CompFor",
    "libcst._nodes.expression.CompIf",
    "libcst._nodes.expression.Comparison",
    "libcst._nodes.expression.ComparisonTarget",
    "libcst._nodes.expression.ConcatenatedString",
    "libcst._nodes.expression.Dict",
    "libcst._nodes.expression.DictComp",
    "libcst._nodes.expression.DictElement",
    "libcst._nodes.expression.Element",
    "libcst._nodes.expression.Ellipsis",
    "libcst._nodes.expression.Float",
    "libcst._nodes.expression.FormattedString",
    "libcst._nodes.expression.FormattedStringExpression",
    "libcst._nodes.expression.FormattedStringText",
    "libcst._nodes.expression.From",
    "libcst._nodes.expression.GeneratorExp",
    "libcst._nodes.expression.IfExp",
    "libcst._nodes.expression.Imaginary",
    "libcst._nodes.expression.Index",
    "libcst._nodes.expression.Integer",
    "libcst._nodes.expression.Lambda",
    "libcst._nodes.expression.LeftCurlyBrace",
    "libcst._nodes.expression.LeftParen",
    "libcst._nodes.expression.LeftSquareBracket",
    "libcst._nodes.expression.List",
    "libcst._nodes.expression.ListComp",
    "libcst._nodes.expression.Name",
    "libcst._nodes.expression.NamedExpr",
    "libcst._nodes.expression.Param",
    "libcst._nodes.expression.ParamSlash",
    "libcst._nodes.expression.ParamStar",
    "libcst._nodes.expression.Parameters",
    "libcst._nodes.expression.RightCurlyBrace",
    "libcst._nodes.expression.RightParen",
    "libcst._nodes.expression.RightSquareBracket",
    "libcst._nodes.expression.Set",
    "libcst._nodes.expression.SetComp",
    "libcst._nodes.expression.SimpleString",
    "libcst._nodes.expression.Slice",
    "libcst._nodes.expression.StarredDictElement",
    "libcst._nodes.expression.StarredElement",
    "libcst._nodes.expression.Subscript",
    "libcst._nodes.expression.SubscriptElement",
    "libcst._nodes.expression.Tuple",
    "libcst._nodes.expression.UnaryOperation",
    "libcst._nodes.expression.Yield",
    "libcst._nodes.module.Module",
    "libcst._nodes.op.Add",
    "libcst._nodes.op.AddAssign",
    "libcst._nodes.op.And",
    "libcst._nodes.op.AssignEqual",
    "libcst._nodes.op.BaseAugOp",
    "libcst._nodes.op.BaseBinaryOp",
    "libcst._nodes.op.BaseBooleanOp",
    "libcst._nodes.op.BaseCompOp",
    "libcst._nodes.op.BaseUnaryOp",
    "libcst._nodes.op.BitAnd",
    "libcst._nodes.op.BitAndAssign",
    "libcst._nodes.op.BitInvert",
    "libcst._nodes.op.BitOr",
    "libcst._nodes.op.BitOrAssign",
    "libcst._nodes.op.BitXor",
    "libcst._nodes.op.BitXorAssign",
    "libcst._nodes.op.Colon",
    "libcst._nodes.op.Comma",
    "libcst._nodes.op.Divide",
    "libcst._nodes.op.DivideAssign",
    "libcst._nodes.op.Dot",
    "libcst._nodes.op.Equal",
    "libcst._nodes.op.FloorDivide",
    "libcst._nodes.op.FloorDivideAssign",
    "libcst._nodes.op.GreaterThan",
    "libcst._nodes.op.GreaterThanEqual",
    "libcst._nodes.op.ImportStar",
    "libcst._nodes.op.In",
    "libcst._nodes.op.Is",
    "libcst._nodes.op.IsNot",
    "libcst._nodes.op.LeftShift",
    "libcst._nodes.op.LeftShiftAssign",
    "libcst._nodes.op.LessThan",
    "libcst._nodes.op.LessThanEqual",
    "libcst._nodes.op.MatrixMultiply",
    "libcst._nodes.op.MatrixMultiplyAssign",
    "libcst._nodes.op.Minus",
    "libcst._nodes.op.Modulo",
    "libcst._nodes.op.ModuloAssign",
    "libcst._nodes.op.Multiply",
    "libcst._nodes.op.MultiplyAssign",
    "libcst._nodes.op.Not",
    "libcst._nodes.op.NotEqual",
    "libcst._nodes.op.NotIn",
    "libcst._nodes.op.Or",
    "libcst._nodes.op.Plus",
    "libcst._nodes.op.Power",
    "libcst._nodes.op.PowerAssign",
    "libcst._nodes.op.RightShift",
    "libcst._nodes.op.RightShiftAssign",
    "libcst._nodes.op.Semicolon",
    "libcst._nodes.op.Subtract",
    "libcst._nodes.op.SubtractAssign",
    "libcst._nodes.statement.AnnAssign",
    "libcst._nodes.statement.AsName",
    "libcst._nodes.statement.Assert",
    "libcst._nodes.statement.Assign",
    "libcst._nodes.statement.AssignTarget",
    "libcst._nodes.statement.AugAssign",
    "libcst._nodes.statement.BaseSmallStatement",
    "libcst._nodes.statement.BaseStatement",
    "libcst._nodes.statement.BaseSuite",
    "libcst._nodes.statement.Break",
    "libcst._nodes.statement.ClassDef",
    "libcst._nodes.statement.Continue",
    "libcst._nodes.statement.Decorator",
    "libcst._nodes.statement.Del",
    "libcst._nodes.statement.Else",
    "libcst._nodes.statement.ExceptHandler",
    "libcst._nodes.statement.Expr",
    "libcst._nodes.statement.Finally",
    "libcst._nodes.statement.For",
    "libcst._nodes.statement.FunctionDef",
    "libcst._nodes.statement.Global",
    "libcst._nodes.statement.If",
    "libcst._nodes.statement.Import",
    "libcst._nodes.statement.ImportAlias",
    "libcst._nodes.statement.ImportFrom",
    "libcst._nodes.statement.IndentedBlock",
    "libcst._nodes.statement.NameItem",
    "libcst._nodes.statement.Nonlocal",
    "libcst._nodes.statement.Pass",
    "libcst._nodes.statement.Raise",
    "libcst._nodes.statement.Return",
    "libcst._nodes.statement.SimpleStatementLine",
    "libcst._nodes.statement.SimpleStatementSuite",
    "libcst._nodes.statement.Try",
    "libcst._nodes.statement.While",
    "libcst._nodes.statement.With",
    "libcst._nodes.statement.WithItem",
    "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
    "libcst._nodes.whitespace.Comment",
    "libcst._nodes.whitespace.EmptyLine",
    "libcst._nodes.whitespace.Newline",
    "libcst._nodes.whitespace.ParenthesizedWhitespace",
    "libcst._nodes.whitespace.SimpleWhitespace",
    "libcst._nodes.whitespace.TrailingWhitespace",
    "libcst._removal_sentinel.RemovalSentinel",
    "object",
    "typing.Dict",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "libcst.matchers._return_types.Add": {
  "data": {
   "shadows": "libcst._nodes.op.Add"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.AddAssign": {
  "data": {
   "shadows": "libcst._nodes.op.AddAssign"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.And": {
  "data": {
   "shadows": "libcst._nodes.op.And"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.AnnAssign": {
  "data": {
   "shadows": "libcst._nodes.statement.AnnAssign"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Annotation": {
  "data": {
   "shadows": "libcst._nodes.expression.Annotation"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Arg": {
  "data": {
   "shadows": "libcst._nodes.expression.Arg"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.AsName": {
  "data": {
   "shadows": "libcst._nodes.statement.AsName"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Assert": {
  "data": {
   "shadows": "libcst._nodes.statement.Assert"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Assign": {
  "data": {
   "shadows": "libcst._nodes.statement.Assign"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.AssignEqual": {
  "data": {
   "shadows": "libcst._nodes.op.AssignEqual"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.AssignTarget": {
  "data": {
   "shadows": "libcst._nodes.statement.AssignTarget"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Asynchronous": {
  "data": {
   "shadows": "libcst._nodes.expression.Asynchronous"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Attribute": {
  "data": {
   "shadows": "libcst._nodes.expression.Attribute"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.AugAssign": {
  "data": {
   "shadows": "libcst._nodes.statement.AugAssign"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Await": {
  "data": {
   "shadows": "libcst._nodes.expression.Await"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.BaseAugOp": {
  "data": {
   "shadows": "libcst._nodes.op.BaseAugOp"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.BaseBinaryOp": {
  "data": {
   "shadows": "libcst._nodes.op.BaseBinaryOp"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.BaseBooleanOp": {
  "data": {
   "shadows": "libcst._nodes.op.BaseBooleanOp"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.BaseCompOp": {
  "data": {
   "shadows": "libcst._nodes.op.BaseCompOp"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.BaseDictElement": {
  "data": {
   "shadows": "libcst._nodes.expression.BaseDictElement"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.BaseElement": {
  "data": {
   "shadows": "libcst._nodes.expression.BaseElement"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.BaseExpression": {
  "data": {
   "shadows": "libcst._nodes.expression.BaseExpression"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.BaseFormattedStringContent": {
  "data": {
   "shadows": "libcst._nodes.expression.BaseFormattedStringContent"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.BaseParenthesizableWhitespace": {
  "data": {
   "shadows": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.BaseSlice": {
  "data": {
   "shadows": "libcst._nodes.expression.BaseSlice"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.BaseSmallStatement": {
  "data": {
   "shadows": "libcst._nodes.statement.BaseSmallStatement"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.BaseStatement": {
  "data": {
   "shadows": "libcst._nodes.statement.BaseStatement"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.BaseSuite": {
  "data": {
   "shadows": "libcst._nodes.statement.BaseSuite"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.BaseUnaryOp": {
  "data": {
   "shadows": "libcst._nodes.op.BaseUnaryOp"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.BinaryOperation": {
  "data": {
   "shadows": "libcst._nodes.expression.BinaryOperation"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.BitAnd": {
  "data": {
   "shadows": "libcst._nodes.op.BitAnd"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.BitAndAssign": {
  "data": {
   "shadows": "libcst._nodes.op.BitAndAssign"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.BitInvert": {
  "data": {
   "shadows": "libcst._nodes.op.BitInvert"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.BitOr": {
  "data": {
   "shadows": "libcst._nodes.op.BitOr"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.BitOrAssign": {
  "data": {
   "shadows": "libcst._nodes.op.BitOrAssign"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.BitXor": {
  "data": {
   "shadows": "libcst._nodes.op.BitXor"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.BitXorAssign": {
  "data": {
   "shadows": "libcst._nodes.op.BitXorAssign"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.BooleanOperation": {
  "data": {
   "shadows": "libcst._nodes.expression.BooleanOperation"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Break": {
  "data": {
   "shadows": "libcst._nodes.statement.Break"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.CSTNode": {
  "data": {
   "shadows": "libcst._nodes.base.CSTNode"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Call": {
  "data": {
   "shadows": "libcst._nodes.expression.Call"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.ClassDef": {
  "data": {
   "shadows": "libcst._nodes.statement.ClassDef"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Colon": {
  "data": {
   "shadows": "libcst._nodes.op.Colon"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Comma": {
  "data": {
   "shadows": "libcst._nodes.op.Comma"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Comment": {
  "data": {
   "shadows": "libcst._nodes.whitespace.Comment"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.CompFor": {
  "data": {
   "shadows": "libcst._nodes.expression.CompFor"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.CompIf": {
  "data": {
   "shadows": "libcst._nodes.expression.CompIf"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Comparison": {
  "data": {
   "shadows": "libcst._nodes.expression.Comparison"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.ComparisonTarget": {
  "data": {
   "shadows": "libcst._nodes.expression.ComparisonTarget"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.ConcatenatedString": {
  "data": {
   "shadows": "libcst._nodes.expression.ConcatenatedString"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Continue": {
  "data": {
   "shadows": "libcst._nodes.statement.Continue"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Decorator": {
  "data": {
   "shadows": "libcst._nodes.statement.Decorator"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Del": {
  "data": {
   "shadows": "libcst._nodes.statement.Del"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Dict": {
  "data": {
   "shadows": "libcst._nodes.expression.Dict"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.DictComp": {
  "data": {
   "shadows": "libcst._nodes.expression.DictComp"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.DictElement": {
  "data": {
   "shadows": "libcst._nodes.expression.DictElement"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Divide": {
  "data": {
   "shadows": "libcst._nodes.op.Divide"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.DivideAssign": {
  "data": {
   "shadows": "libcst._nodes.op.DivideAssign"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Dot": {
  "data": {
   "shadows": "libcst._nodes.op.Dot"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Element": {
  "data": {
   "shadows": "libcst._nodes.expression.Element"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Ellipsis": {
  "data": {
   "shadows": "libcst._nodes.expression.Ellipsis"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Else": {
  "data": {
   "shadows": "libcst._nodes.statement.Else"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.EmptyLine": {
  "data": {
   "shadows": "libcst._nodes.whitespace.EmptyLine"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Equal": {
  "data": {
   "shadows": "libcst._nodes.op.Equal"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.ExceptHandler": {
  "data": {
   "shadows": "libcst._nodes.statement.ExceptHandler"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Expr": {
  "data": {
   "shadows": "libcst._nodes.statement.Expr"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Finally": {
  "data": {
   "shadows": "libcst._nodes.statement.Finally"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Float": {
  "data": {
   "shadows": "libcst._nodes.expression.Float"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.FloorDivide": {
  "data": {
   "shadows": "libcst._nodes.op.FloorDivide"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.FloorDivideAssign": {
  "data": {
   "shadows": "libcst._nodes.op.FloorDivideAssign"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.For": {
  "data": {
   "shadows": "libcst._nodes.statement.For"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.FormattedString": {
  "data": {
   "shadows": "libcst._nodes.expression.FormattedString"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.FormattedStringExpression": {
  "data": {
   "shadows": "libcst._nodes.expression.FormattedStringExpression"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.FormattedStringText": {
  "data": {
   "shadows": "libcst._nodes.expression.FormattedStringText"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.From": {
  "data": {
   "shadows": "libcst._nodes.expression.From"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.FunctionDef": {
  "data": {
   "shadows": "libcst._nodes.statement.FunctionDef"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.GeneratorExp": {
  "data": {
   "shadows": "libcst._nodes.expression.GeneratorExp"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Global": {
  "data": {
   "shadows": "libcst._nodes.statement.Global"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.GreaterThan": {
  "data": {
   "shadows": "libcst._nodes.op.GreaterThan"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.GreaterThanEqual": {
  "data": {
   "shadows": "libcst._nodes.op.GreaterThanEqual"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.If": {
  "data": {
   "shadows": "libcst._nodes.statement.If"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.IfExp": {
  "data": {
   "shadows": "libcst._nodes.expression.IfExp"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Imaginary": {
  "data": {
   "shadows": "libcst._nodes.expression.Imaginary"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Import": {
  "data": {
   "shadows": "libcst._nodes.statement.Import"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.ImportAlias": {
  "data": {
   "shadows": "libcst._nodes.statement.ImportAlias"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.ImportFrom": {
  "data": {
   "shadows": "libcst._nodes.statement.ImportFrom"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.ImportStar": {
  "data": {
   "shadows": "libcst._nodes.op.ImportStar"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.In": {
  "data": {
   "shadows": "libcst._nodes.op.In"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.IndentedBlock": {
  "data": {
   "shadows": "libcst._nodes.statement.IndentedBlock"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Index": {
  "data": {
   "shadows": "libcst._nodes.expression.Index"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Integer": {
  "data": {
   "shadows": "libcst._nodes.expression.Integer"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Is": {
  "data": {
   "shadows": "libcst._nodes.op.Is"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.IsNot": {
  "data": {
   "shadows": "libcst._nodes.op.IsNot"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Lambda": {
  "data": {
   "shadows": "libcst._nodes.expression.Lambda"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.LeftCurlyBrace": {
  "data": {
   "shadows": "libcst._nodes.expression.LeftCurlyBrace"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.LeftParen": {
  "data": {
   "shadows": "libcst._nodes.expression.LeftParen"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.LeftShift": {
  "data": {
   "shadows": "libcst._nodes.op.LeftShift"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.LeftShiftAssign": {
  "data": {
   "shadows": "libcst._nodes.op.LeftShiftAssign"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.LeftSquareBracket": {
  "data": {
   "shadows": "libcst._nodes.expression.LeftSquareBracket"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.LessThan": {
  "data": {
   "shadows": "libcst._nodes.op.LessThan"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.LessThanEqual": {
  "data": {
   "shadows": "libcst._nodes.op.LessThanEqual"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.List": {
  "data": {
   "shadows": "libcst._nodes.expression.List"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.ListComp": {
  "data": {
   "shadows": "libcst._nodes.expression.ListComp"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.MatrixMultiply": {
  "data": {
   "shadows": "libcst._nodes.op.MatrixMultiply"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.MatrixMultiplyAssign": {
  "data": {
   "shadows": "libcst._nodes.op.MatrixMultiplyAssign"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.MaybeSentinel": {
  "data": {
   "shadows": "libcst._maybe_sentinel.MaybeSentinel"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Minus": {
  "data": {
   "shadows": "libcst._nodes.op.Minus"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Module": {
  "data": {
   "shadows": "libcst._nodes.module.Module"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Modulo": {
  "data": {
   "shadows": "libcst._nodes.op.Modulo"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.ModuloAssign": {
  "data": {
   "shadows": "libcst._nodes.op.ModuloAssign"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Multiply": {
  "data": {
   "shadows": "libcst._nodes.op.Multiply"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.MultiplyAssign": {
  "data": {
   "shadows": "libcst._nodes.op.MultiplyAssign"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Name": {
  "data": {
   "shadows": "libcst._nodes.expression.Name"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.NameItem": {
  "data": {
   "shadows": "libcst._nodes.statement.NameItem"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.NamedExpr": {
  "data": {
   "shadows": "libcst._nodes.expression.NamedExpr"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Newline": {
  "data": {
   "shadows": "libcst._nodes.whitespace.Newline"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Nonlocal": {
  "data": {
   "shadows": "libcst._nodes.statement.Nonlocal"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Not": {
  "data": {
   "shadows": "libcst._nodes.op.Not"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.NotEqual": {
  "data": {
   "shadows": "libcst._nodes.op.NotEqual"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.NotIn": {
  "data": {
   "shadows": "libcst._nodes.op.NotIn"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Or": {
  "data": {
   "shadows": "libcst._nodes.op.Or"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Param": {
  "data": {
   "shadows": "libcst._nodes.expression.Param"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.ParamSlash": {
  "data": {
   "shadows": "libcst._nodes.expression.ParamSlash"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.ParamStar": {
  "data": {
   "shadows": "libcst._nodes.expression.ParamStar"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Parameters": {
  "data": {
   "shadows": "libcst._nodes.expression.Parameters"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.ParenthesizedWhitespace": {
  "data": {
   "shadows": "libcst._nodes.whitespace.ParenthesizedWhitespace"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Pass": {
  "data": {
   "shadows": "libcst._nodes.statement.Pass"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Plus": {
  "data": {
   "shadows": "libcst._nodes.op.Plus"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Power": {
  "data": {
   "shadows": "libcst._nodes.op.Power"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.PowerAssign": {
  "data": {
   "shadows": "libcst._nodes.op.PowerAssign"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Raise": {
  "data": {
   "shadows": "libcst._nodes.statement.Raise"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.RemovalSentinel": {
  "data": {
   "shadows": "libcst._removal_sentinel.RemovalSentinel"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Return": {
  "data": {
   "shadows": "libcst._nodes.statement.Return"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.RightCurlyBrace": {
  "data": {
   "shadows": "libcst._nodes.expression.RightCurlyBrace"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.RightParen": {
  "data": {
   "shadows": "libcst._nodes.expression.RightParen"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.RightShift": {
  "data": {
   "shadows": "libcst._nodes.op.RightShift"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.RightShiftAssign": {
  "data": {
   "shadows": "libcst._nodes.op.RightShiftAssign"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.RightSquareBracket": {
  "data": {
   "shadows": "libcst._nodes.expression.RightSquareBracket"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Semicolon": {
  "data": {
   "shadows": "libcst._nodes.op.Semicolon"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Set": {
  "data": {
   "shadows": "libcst._nodes.expression.Set"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.SetComp": {
  "data": {
   "shadows": "libcst._nodes.expression.SetComp"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.SimpleStatementLine": {
  "data": {
   "shadows": "libcst._nodes.statement.SimpleStatementLine"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.SimpleStatementSuite": {
  "data": {
   "shadows": "libcst._nodes.statement.SimpleStatementSuite"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.SimpleString": {
  "data": {
   "shadows": "libcst._nodes.expression.SimpleString"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.SimpleWhitespace": {
  "data": {
   "shadows": "libcst._nodes.whitespace.SimpleWhitespace"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Slice": {
  "data": {
   "shadows": "libcst._nodes.expression.Slice"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.StarredDictElement": {
  "data": {
   "shadows": "libcst._nodes.expression.StarredDictElement"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.StarredElement": {
  "data": {
   "shadows": "libcst._nodes.expression.StarredElement"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Subscript": {
  "data": {
   "shadows": "libcst._nodes.expression.Subscript"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.SubscriptElement": {
  "data": {
   "shadows": "libcst._nodes.expression.SubscriptElement"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Subtract": {
  "data": {
   "shadows": "libcst._nodes.op.Subtract"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.SubtractAssign": {
  "data": {
   "shadows": "libcst._nodes.op.SubtractAssign"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.TrailingWhitespace": {
  "data": {
   "shadows": "libcst._nodes.whitespace.TrailingWhitespace"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Try": {
  "data": {
   "shadows": "libcst._nodes.statement.Try"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Tuple": {
  "data": {
   "shadows": "libcst._nodes.expression.Tuple"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.TypingDict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.UnaryOperation": {
  "data": {
   "shadows": "libcst._nodes.expression.UnaryOperation"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.While": {
  "data": {
   "shadows": "libcst._nodes.statement.While"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.With": {
  "data": {
   "shadows": "libcst._nodes.statement.With"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.WithItem": {
  "data": {
   "shadows": "libcst._nodes.statement.WithItem"
  },
  "type": "import"
 },
 "libcst.matchers._return_types.Yield": {
  "data": {
   "shadows": "libcst._nodes.expression.Yield"
  },
  "type": "import"
 },
 "libcst.matchers._visitors": {
  "data": {
   "symbols_in_volume": [
    "libcst.matchers._return_types.TYPED_FUNCTION_RETURN_MAPPING",
    "str",
    "typing.Set"
   ]
  },
  "type": "module"
 },
 "libcst.matchers._visitors.AllOf": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.AllOf"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.AtLeastN": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.AtLeastN"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.AtMostN": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.AtMostN"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.BaseMatcherNode": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.BaseMatcherNode"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.CONSTRUCTED_LEAVE_MATCHER_ATTR": {
  "data": {
   "shadows": "libcst.matchers._decorators.CONSTRUCTED_LEAVE_MATCHER_ATTR"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.CONSTRUCTED_VISIT_MATCHER_ATTR": {
  "data": {
   "shadows": "libcst.matchers._decorators.CONSTRUCTED_VISIT_MATCHER_ATTR"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.CSTNodeT": {
  "data": {
   "shadows": "libcst._types.CSTNodeT"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.CSTTransformer": {
  "data": {
   "shadows": "libcst.CSTTransformer"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.CSTVisitor": {
  "data": {
   "shadows": "libcst.CSTVisitor"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.MatchDecoratorMismatch": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "libcst.matchers._visitors.MatchDecoratorMismatch.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors.MatchDecoratorMismatch.__reduce__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "libcst.matchers._visitors._match_decorator_unpickler",
    "object",
    "typing.Callable",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors.MatchIfTrue": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.MatchIfTrue"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.MatchMetadata": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.MatchMetadata"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.MatchMetadataIfTrue": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.MatchMetadataIfTrue"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.MatcherDecoratableTransformer": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "libcst.CSTTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers._visitors.MatcherDecoratableTransformer.__init__": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.CSTTransformer.__init__",
    "libcst.RemovalSentinel",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._visitors._check_types",
    "libcst.matchers._visitors._gather_constructed_leave_funcs",
    "libcst.matchers._visitors._gather_constructed_visit_funcs",
    "libcst.matchers._visitors._gather_matchers",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableTransformer.extract": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.MaybeSentinel",
    "libcst.RemovalSentinel",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.extract",
    "str",
    "typing.Dict",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableTransformer.extractall": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "bool",
    "libcst.CSTNode",
    "libcst.MaybeSentinel",
    "libcst.RemovalSentinel",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.MatchMetadata",
    "libcst.matchers._matcher_base.MatchMetadataIfTrue",
    "libcst.matchers._matcher_base.extractall",
    "str",
    "typing.Callable",
    "typing.Dict",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableTransformer.findall": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "bool",
    "libcst.CSTNode",
    "libcst.MaybeSentinel",
    "libcst.RemovalSentinel",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.MatchMetadata",
    "libcst.matchers._matcher_base.MatchMetadataIfTrue",
    "libcst.matchers._matcher_base.findall",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableTransformer.matches": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "bool",
    "libcst.CSTNode",
    "libcst.MaybeSentinel",
    "libcst.RemovalSentinel",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.matches",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableTransformer.on_leave": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "leave_func",
    "libcst.CSTNode",
    "libcst.CSTTransformer.on_leave",
    "libcst.RemovalSentinel",
    "libcst._types.CSTNodeT",
    "libcst.matchers._visitors._leave_matchers",
    "libcst.matchers._visitors._should_allow_visit",
    "list",
    "reversed",
    "type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableTransformer.on_leave_attribute": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "getattr",
    "libcst.CSTNode",
    "libcst.CSTTransformer.on_leave_attribute",
    "libcst.matchers._visitors._should_allow_visit",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableTransformer.on_visit": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "bool",
    "getattr",
    "libcst.CSTNode",
    "libcst.CSTTransformer.on_visit",
    "libcst.matchers._visitors._should_allow_visit",
    "libcst.matchers._visitors._visit_constructed_funcs",
    "libcst.matchers._visitors._visit_matchers",
    "type"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableTransformer.on_visit_attribute": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "getattr",
    "libcst.CSTNode",
    "libcst.CSTTransformer.on_visit_attribute",
    "libcst.matchers._visitors._should_allow_visit",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableTransformer.replace": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "bool",
    "libcst.CSTNode",
    "libcst.MaybeSentinel",
    "libcst.RemovalSentinel",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.MatchMetadata",
    "libcst.matchers._matcher_base.MatchMetadataIfTrue",
    "libcst.matchers._matcher_base.replace",
    "str",
    "typing.Callable",
    "typing.Dict",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableVisitor": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "libcst.CSTVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.matchers._visitors.MatcherDecoratableVisitor.__init__": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.CSTVisitor.__init__",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._visitors._check_types",
    "libcst.matchers._visitors._gather_constructed_leave_funcs",
    "libcst.matchers._visitors._gather_constructed_visit_funcs",
    "libcst.matchers._visitors._gather_matchers",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableVisitor.extract": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.MaybeSentinel",
    "libcst.RemovalSentinel",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.extract",
    "str",
    "typing.Dict",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableVisitor.extractall": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "bool",
    "libcst.CSTNode",
    "libcst.MaybeSentinel",
    "libcst.RemovalSentinel",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.MatchMetadata",
    "libcst.matchers._matcher_base.MatchMetadataIfTrue",
    "libcst.matchers._matcher_base.extractall",
    "str",
    "typing.Callable",
    "typing.Dict",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableVisitor.findall": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "bool",
    "libcst.CSTNode",
    "libcst.MaybeSentinel",
    "libcst.RemovalSentinel",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.MatchMetadata",
    "libcst.matchers._matcher_base.MatchMetadataIfTrue",
    "libcst.matchers._matcher_base.findall",
    "typing.Callable",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableVisitor.matches": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "bool",
    "libcst.CSTNode",
    "libcst.MaybeSentinel",
    "libcst.RemovalSentinel",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.matches",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableVisitor.on_leave": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "getattr",
    "leave_func",
    "libcst.CSTNode",
    "libcst.CSTVisitor.on_leave",
    "libcst.matchers._visitors._leave_matchers",
    "libcst.matchers._visitors._should_allow_visit",
    "list",
    "reversed",
    "type"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableVisitor.on_leave_attribute": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "getattr",
    "libcst.CSTNode",
    "libcst.CSTVisitor.on_leave_attribute",
    "libcst.matchers._visitors._should_allow_visit",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableVisitor.on_visit": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "bool",
    "getattr",
    "libcst.CSTNode",
    "libcst.CSTVisitor.on_visit",
    "libcst.matchers._visitors._should_allow_visit",
    "libcst.matchers._visitors._visit_constructed_funcs",
    "libcst.matchers._visitors._visit_matchers",
    "type"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableVisitor.on_visit_attribute": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "getattr",
    "libcst.CSTNode",
    "libcst.CSTVisitor.on_visit_attribute",
    "libcst.matchers._visitors._should_allow_visit",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableVisitor.replace": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "bool",
    "libcst.CSTNode",
    "libcst.MaybeSentinel",
    "libcst.RemovalSentinel",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._matcher_base.MatchMetadata",
    "libcst.matchers._matcher_base.MatchMetadataIfTrue",
    "libcst.matchers._matcher_base.replace",
    "str",
    "typing.Callable",
    "typing.Dict",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors.OneOf": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.OneOf"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.TYPED_FUNCTION_RETURN_MAPPING": {
  "data": {
   "shadows": "libcst.matchers._return_types.TYPED_FUNCTION_RETURN_MAPPING"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.VISIT_NEGATIVE_MATCHER_ATTR": {
  "data": {
   "shadows": "libcst.matchers._decorators.VISIT_NEGATIVE_MATCHER_ATTR"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.VISIT_POSITIVE_MATCHER_ATTR": {
  "data": {
   "shadows": "libcst.matchers._decorators.VISIT_POSITIVE_MATCHER_ATTR"
  },
  "type": "import"
 },
 "libcst.matchers._visitors._all_negative_matchers_false": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "bool",
    "getattr",
    "libcst.CSTNode",
    "libcst.matchers._decorators.VISIT_NEGATIVE_MATCHER_ATTR",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "object",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors._all_positive_matchers_true": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "bool",
    "getattr",
    "libcst.CSTNode",
    "libcst.matchers._decorators.VISIT_POSITIVE_MATCHER_ATTR",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "object",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors._assert_not_concrete": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.matchers._visitors.MatchDecoratorMismatch",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors._check_types": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "any",
    "bool",
    "inspect.ismethod",
    "int",
    "isinstance",
    "libcst.matchers._matcher_base.AtLeastN",
    "libcst.matchers._matcher_base.AtMostN",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.MatchIfTrue",
    "libcst.matchers._visitors.MatchDecoratorMismatch",
    "libcst.matchers._visitors._get_possible_match_classes",
    "libcst.matchers._visitors._verify_parameter_annotations",
    "libcst.matchers._visitors._verify_return_annotation",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors._gather_constructed_leave_funcs": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "Exception",
    "dir",
    "getattr",
    "inspect.ismethod",
    "libcst.CSTNode",
    "libcst.matchers._decorators.CONSTRUCTED_LEAVE_MATCHER_ATTR",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._visitors._assert_not_concrete",
    "object",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.Sequence",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors._gather_constructed_visit_funcs": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "Exception",
    "dir",
    "getattr",
    "inspect.ismethod",
    "libcst.CSTNode",
    "libcst.matchers._decorators.CONSTRUCTED_VISIT_MATCHER_ATTR",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._visitors._assert_not_concrete",
    "object",
    "typing.Callable",
    "typing.Dict",
    "typing.Sequence",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors._gather_matchers": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "Exception",
    "dir",
    "getattr",
    "libcst.matchers._decorators.VISIT_NEGATIVE_MATCHER_ATTR",
    "libcst.matchers._decorators.VISIT_POSITIVE_MATCHER_ATTR",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "object",
    "set",
    "typing.Set",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors._get_possible_annotated_classes": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "getattr",
    "object",
    "typing.List",
    "typing.Type",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors._get_possible_match_classes": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "libcst",
    "libcst.CSTNode",
    "libcst.matchers._matcher_base.AllOf",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.OneOf",
    "typing.List",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors._get_valid_leave_annotations_for_classes": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.matchers._return_types.TYPED_FUNCTION_RETURN_MAPPING",
    "libcst.matchers._visitors._get_possible_annotated_classes",
    "object",
    "set",
    "typing.Sequence",
    "typing.Set",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors._leave_matchers": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors._match_decorator_unpickler": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "libcst.matchers._visitors.MatchDecoratorMismatch",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors._should_allow_visit": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "bool",
    "libcst.CSTNode",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._visitors._all_negative_matchers_false",
    "libcst.matchers._visitors._all_positive_matchers_true",
    "object",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors._verify_parameter_annotations": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "inspect.signature",
    "int",
    "issubclass",
    "len",
    "libcst.CSTNode",
    "libcst.matchers._visitors.MatchDecoratorMismatch",
    "libcst.matchers._visitors._get_possible_annotated_classes",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Sequence",
    "typing.Type",
    "typing.get_type_hints"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors._verify_return_annotation": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "bool",
    "issubclass",
    "libcst.CSTNode",
    "libcst.matchers._visitors.MatchDecoratorMismatch",
    "libcst.matchers._visitors._get_possible_annotated_classes",
    "libcst.matchers._visitors._get_valid_leave_annotations_for_classes",
    "str",
    "type",
    "typing.Any",
    "typing.Callable",
    "typing.Sequence",
    "typing.Type",
    "typing.get_type_hints"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors._visit_constructed_funcs": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.MetadataDependent",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.matches",
    "libcst.matchers._visitors._should_allow_visit",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional",
    "typing.Sequence",
    "visit_func"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors._visit_matchers": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.MetadataDependent",
    "libcst.matchers._matcher_base.BaseMatcherNode",
    "libcst.matchers._matcher_base.matches",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.matchers._visitors.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.extract": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.extract"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.extractall": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.extractall"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.findall": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.findall"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.get_type_hints": {
  "data": {
   "shadows": "typing.get_type_hints"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.ismethod": {
  "data": {
   "shadows": "inspect.ismethod"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.matches": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.matches"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.replace": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.replace"
  },
  "type": "import"
 },
 "libcst.matchers._visitors.signature": {
  "data": {
   "shadows": "inspect.signature"
  },
  "type": "import"
 },
 "libcst.matchers.boolMatchType": {
  "data": {
   "lineno": 4128
  },
  "type": "constant"
 },
 "libcst.matchers.call_if_inside": {
  "data": {
   "shadows": "libcst.matchers._decorators.call_if_inside"
  },
  "type": "import"
 },
 "libcst.matchers.call_if_not_inside": {
  "data": {
   "shadows": "libcst.matchers._decorators.call_if_not_inside"
  },
  "type": "import"
 },
 "libcst.matchers.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.matchers.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "libcst.matchers.extract": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.extract"
  },
  "type": "import"
 },
 "libcst.matchers.extractall": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.extractall"
  },
  "type": "import"
 },
 "libcst.matchers.findall": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.findall"
  },
  "type": "import"
 },
 "libcst.matchers.leave": {
  "data": {
   "shadows": "libcst.matchers._decorators.leave"
  },
  "type": "import"
 },
 "libcst.matchers.matches": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.matches"
  },
  "type": "import"
 },
 "libcst.matchers.replace": {
  "data": {
   "shadows": "libcst.matchers._matcher_base.replace"
  },
  "type": "import"
 },
 "libcst.matchers.strMatchType": {
  "data": {
   "lineno": 2369
  },
  "type": "constant"
 },
 "libcst.matchers.strOrNoneMatchType": {
  "data": {
   "lineno": 5094
  },
  "type": "constant"
 },
 "libcst.matchers.tests": {
  "data": {},
  "type": "module"
 },
 "libcst.matchers.tests.test_decorators": {
  "data": {},
  "type": "module"
 },
 "libcst.matchers.tests.test_decorators.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_decorators.MatcherDecoratableTransformer": {
  "data": {
   "shadows": "libcst.matchers.MatcherDecoratableTransformer"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_decorators.MatcherDecoratableVisitor": {
  "data": {
   "shadows": "libcst.matchers.MatcherDecoratableVisitor"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_collect_simple": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.tests.test_decorators.fixture"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_collect_simple.TestVisitor": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_collect_simple.TestVisitor.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_collect_simple.TestVisitor.leave_SimpleString": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.call_if_inside"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_collect_simple.TestVisitor.visit_SimpleString": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.call_if_inside"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_transform_simple": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.tests.test_decorators.fixture"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_transform_simple.TestVisitor": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_transform_simple.TestVisitor.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_transform_simple.TestVisitor.leave_SimpleString": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.call_if_inside"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_transform_simple.TestVisitor.visit_SimpleString": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.call_if_inside"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_verify_original_collect": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.tests.test_decorators.fixture"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_verify_original_collect.TestVisitor": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_verify_original_collect.TestVisitor.__init__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_verify_original_collect.TestVisitor.visit_FunctionDef": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "libcst.FunctionDef"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_verify_original_collect.TestVisitor.visit_SimpleString": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.call_if_inside"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_verify_original_transform": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.tests.test_decorators.fixture"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_verify_original_transform.TestVisitor": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_verify_original_transform.TestVisitor.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_verify_original_transform.TestVisitor.visit_FunctionDef": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "libcst.FunctionDef"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_verify_original_transform.TestVisitor.visit_SimpleString": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.call_if_inside"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_not_inside_collect_simple": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.tests.test_decorators.fixture"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_not_inside_collect_simple.TestVisitor": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_not_inside_collect_simple.TestVisitor.__init__": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_not_inside_collect_simple.TestVisitor.leave_SimpleString": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.call_if_not_inside"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_not_inside_collect_simple.TestVisitor.visit_SimpleString": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.call_if_not_inside"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_not_inside_transform_simple": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.tests.test_decorators.fixture"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_not_inside_transform_simple.TestVisitor": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_not_inside_transform_simple.TestVisitor.__init__": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_not_inside_transform_simple.TestVisitor.leave_SimpleString": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.call_if_not_inside"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_not_inside_transform_simple.TestVisitor.visit_SimpleString": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.call_if_not_inside"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_multiple_visitors_collect": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.tests.test_decorators.fixture"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_multiple_visitors_collect.TestVisitor": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_multiple_visitors_collect.TestVisitor.__init__": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_multiple_visitors_collect.TestVisitor.visit_SimpleString": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.ClassDef",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.call_if_inside"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_multiple_visitors_transform": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.tests.test_decorators.fixture"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_multiple_visitors_transform.TestVisitor": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_multiple_visitors_transform.TestVisitor.__init__": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_multiple_visitors_transform.TestVisitor.visit_SimpleString": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.ClassDef",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.call_if_inside"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_visit_if_inot_inside_verify_original_collect": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.tests.test_decorators.fixture"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_visit_if_inot_inside_verify_original_collect.TestVisitor": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_visit_if_inot_inside_verify_original_collect.TestVisitor.__init__": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_visit_if_inot_inside_verify_original_collect.TestVisitor.visit_FunctionDef": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "libcst.FunctionDef"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_visit_if_inot_inside_verify_original_collect.TestVisitor.visit_SimpleString": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.call_if_not_inside"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_visit_if_inot_inside_verify_original_transform": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.tests.test_decorators.fixture"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_visit_if_inot_inside_verify_original_transform.TestVisitor": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_visit_if_inot_inside_verify_original_transform.TestVisitor.__init__": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_visit_if_inot_inside_verify_original_transform.TestVisitor.visit_FunctionDef": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "libcst.FunctionDef"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_visit_if_inot_inside_verify_original_transform.TestVisitor.visit_SimpleString": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.call_if_not_inside"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_inside_transform_attribute": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.tests.test_decorators.fixture"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_inside_transform_attribute.TestVisitor": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_inside_transform_attribute.TestVisitor.__init__": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_inside_transform_attribute.TestVisitor.leave_SimpleString_lpar": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.call_if_inside"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_inside_transform_attribute.TestVisitor.visit_SimpleString_lpar": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.call_if_inside"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_inside_visitor_attribute": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.tests.test_decorators.fixture"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_inside_visitor_attribute.TestVisitor": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_inside_visitor_attribute.TestVisitor.__init__": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_inside_visitor_attribute.TestVisitor.leave_SimpleString_lpar": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.call_if_inside"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_inside_visitor_attribute.TestVisitor.visit_SimpleString_lpar": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.call_if_inside"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_not_inside_transform_attribute": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.tests.test_decorators.fixture"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_not_inside_transform_attribute.TestVisitor": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_not_inside_transform_attribute.TestVisitor.__init__": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_not_inside_transform_attribute.TestVisitor.leave_SimpleString_lpar": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.call_if_not_inside"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_not_inside_transform_attribute.TestVisitor.visit_SimpleString_lpar": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.call_if_not_inside"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_not_inside_visitor_attribute": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.tests.test_decorators.fixture"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_not_inside_visitor_attribute.TestVisitor": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_not_inside_visitor_attribute.TestVisitor.__init__": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_not_inside_visitor_attribute.TestVisitor.leave_SimpleString_lpar": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.call_if_not_inside"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_not_inside_visitor_attribute.TestVisitor.visit_SimpleString_lpar": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.call_if_not_inside"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_duplicate_visit_collector": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.tests.test_decorators.fixture"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_duplicate_visit_collector.TestVisitor": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_duplicate_visit_collector.TestVisitor.__init__": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "set",
    "str",
    "super",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_duplicate_visit_collector.TestVisitor.leave_function1": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "libcst.FunctionDef",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_duplicate_visit_collector.TestVisitor.leave_function2": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "libcst.FunctionDef",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_duplicate_visit_collector.TestVisitor.visit_function1": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "libcst.FunctionDef",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.visit"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_duplicate_visit_collector.TestVisitor.visit_function2": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "libcst.FunctionDef",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.visit"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_duplicate_visit_transform": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.tests.test_decorators.fixture"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_duplicate_visit_transform.TestVisitor": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_duplicate_visit_transform.TestVisitor.__init__": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "set",
    "str",
    "super",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_duplicate_visit_transform.TestVisitor.leave_function1": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "libcst.FunctionDef",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_duplicate_visit_transform.TestVisitor.leave_function2": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "libcst.FunctionDef",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_duplicate_visit_transform.TestVisitor.visit_function1": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "libcst.FunctionDef",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.visit"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_duplicate_visit_transform.TestVisitor.visit_function2": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "libcst.FunctionDef",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.visit"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_gated_visit_collect": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.tests.test_decorators.fixture"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_gated_visit_collect.TestVisitor": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_gated_visit_collect.TestVisitor.__init__": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "set",
    "str",
    "super",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_gated_visit_collect.TestVisitor.leave_string1": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "ast.literal_eval",
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.SimpleString",
    "libcst.matchers.call_if_inside",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_gated_visit_collect.TestVisitor.leave_string2": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "ast.literal_eval",
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.SimpleString",
    "libcst.matchers.call_if_not_inside",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_gated_visit_collect.TestVisitor.visit_string1": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "ast.literal_eval",
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.SimpleString",
    "libcst.matchers.call_if_inside",
    "libcst.matchers.visit"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_gated_visit_collect.TestVisitor.visit_string2": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "ast.literal_eval",
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.SimpleString",
    "libcst.matchers.call_if_not_inside",
    "libcst.matchers.visit"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_gated_visit_transform": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.tests.test_decorators.fixture"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_gated_visit_transform.TestVisitor": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_gated_visit_transform.TestVisitor.__init__": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "set",
    "str",
    "super",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_gated_visit_transform.TestVisitor.leave_string1": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "ast.literal_eval",
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.SimpleString",
    "libcst.matchers.call_if_inside",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_gated_visit_transform.TestVisitor.leave_string2": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "ast.literal_eval",
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.SimpleString",
    "libcst.matchers.call_if_not_inside",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_gated_visit_transform.TestVisitor.visit_string1": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "ast.literal_eval",
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.SimpleString",
    "libcst.matchers.call_if_inside",
    "libcst.matchers.visit"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_gated_visit_transform.TestVisitor.visit_string2": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "ast.literal_eval",
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.SimpleString",
    "libcst.matchers.call_if_not_inside",
    "libcst.matchers.visit"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_init_with_unhashable_types": {
  "data": {
   "lineno": 965,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.tests.test_decorators.fixture"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_init_with_unhashable_types.TestVisitor": {
  "data": {
   "lineno": 967,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_init_with_unhashable_types.TestVisitor.__init__": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_init_with_unhashable_types.TestVisitor.visit_SimpleString": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.Parameters",
    "libcst.matchers.ZeroOrMore",
    "libcst.matchers.call_if_inside"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_stacked_visit_collector": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.tests.test_decorators.fixture"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_stacked_visit_collector.TestVisitor": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_stacked_visit_collector.TestVisitor.__init__": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_stacked_visit_collector.TestVisitor.leave_function": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "libcst.FunctionDef",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_stacked_visit_collector.TestVisitor.visit_function": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "libcst.FunctionDef",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.visit"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_stacked_visit_transform": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.tests.test_decorators.fixture"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_stacked_visit_transform.TestVisitor": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_stacked_visit_transform.TestVisitor.__init__": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_stacked_visit_transform.TestVisitor.leave_function": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "libcst.FunctionDef",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_stacked_visit_transform.TestVisitor.visit_function": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "libcst.FunctionDef",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.visit"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_transform_order": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.tests.test_decorators.fixture"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_transform_order.TestVisitor": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_transform_order.TestVisitor.leave_SimpleString": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "ast.literal_eval",
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.call_if_inside",
    "reversed"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_transform_order.TestVisitor.leave_string1": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "ast.literal_eval",
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.SimpleString",
    "libcst.matchers.call_if_inside",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_transform_order.TestVisitor.leave_string2": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "ast.literal_eval",
    "libcst.SimpleString",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.SimpleString",
    "libcst.matchers.call_if_inside",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_visit_collector": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.tests.test_decorators.fixture"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_visit_collector.TestVisitor": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_visit_collector.TestVisitor.__init__": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_visit_collector.TestVisitor.leave_function": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "libcst.FunctionDef",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_visit_collector.TestVisitor.visit_function": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "libcst.FunctionDef",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.visit"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_visit_transform": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.tests.test_decorators.fixture"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_visit_transform.TestVisitor": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_visit_transform.TestVisitor.__init__": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_visit_transform.TestVisitor.leave_function": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "libcst.FunctionDef",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_visit_transform.TestVisitor.visit_function": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "libcst.FunctionDef",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Name",
    "libcst.matchers.visit"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_decorators.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_decorators.call_if_inside": {
  "data": {
   "shadows": "libcst.matchers.call_if_inside"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_decorators.call_if_not_inside": {
  "data": {
   "shadows": "libcst.matchers.call_if_not_inside"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_decorators.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_decorators.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_decorators.fixture": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "libcst.Module",
    "libcst.parse_module",
    "str",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.leave": {
  "data": {
   "shadows": "libcst.matchers.leave"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_decorators.literal_eval": {
  "data": {
   "shadows": "ast.literal_eval"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_decorators.m": {
  "data": {
   "shadows": "libcst.matchers"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_decorators.visit": {
  "data": {
   "shadows": "libcst.matchers.visit"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_extract": {
  "data": {},
  "type": "module"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest._make_coderange": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "int",
    "libcst.metadata.CodePosition",
    "libcst.metadata.CodeRange",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_metadata": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "libcst.BinaryOperation",
    "libcst.Expr",
    "libcst.MetadataWrapper",
    "libcst.SimpleStatementLine",
    "libcst.Tuple",
    "libcst.ensure_type",
    "libcst.matchers.BinaryOperation",
    "libcst.matchers.Call",
    "libcst.matchers.Element",
    "libcst.matchers.MatchMetadata",
    "libcst.matchers.Name",
    "libcst.matchers.SaveMatchedNode",
    "libcst.matchers.Tuple",
    "libcst.matchers.extract",
    "libcst.metadata.PositionProvider",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_multiple": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "libcst.BinaryOperation",
    "libcst.Call",
    "libcst.Tuple",
    "libcst.ensure_type",
    "libcst.matchers.BinaryOperation",
    "libcst.matchers.Call",
    "libcst.matchers.Element",
    "libcst.matchers.Name",
    "libcst.matchers.SaveMatchedNode",
    "libcst.matchers.Tuple",
    "libcst.matchers.extract",
    "libcst.parse_expression"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_optional_wildcard": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "libcst.matchers.Arg",
    "libcst.matchers.Attribute",
    "libcst.matchers.Call",
    "libcst.matchers.DoNotCare",
    "libcst.matchers.Element",
    "libcst.matchers.SaveMatchedNode",
    "libcst.matchers.Tuple",
    "libcst.matchers.ZeroOrMore",
    "libcst.matchers.ZeroOrOne",
    "libcst.matchers.extract",
    "libcst.parse_expression"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_optional_wildcard_head": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "libcst.matchers.Element",
    "libcst.matchers.Integer",
    "libcst.matchers.List",
    "libcst.matchers.SaveMatchedNode",
    "libcst.matchers.ZeroOrMore",
    "libcst.matchers.extract",
    "libcst.parse_expression"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_optional_wildcard_present": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "libcst.Call",
    "libcst.Tuple",
    "libcst.ensure_type",
    "libcst.matchers.Arg",
    "libcst.matchers.Attribute",
    "libcst.matchers.Call",
    "libcst.matchers.DoNotCare",
    "libcst.matchers.Element",
    "libcst.matchers.SaveMatchedNode",
    "libcst.matchers.Tuple",
    "libcst.matchers.ZeroOrOne",
    "libcst.matchers.extract",
    "libcst.parse_expression"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_optional_wildcard_tail": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "libcst.matchers.Element",
    "libcst.matchers.Integer",
    "libcst.matchers.List",
    "libcst.matchers.SaveMatchedNode",
    "libcst.matchers.ZeroOrMore",
    "libcst.matchers.extract",
    "libcst.parse_expression"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_precedence_parent": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "libcst.Tuple",
    "libcst.ensure_type",
    "libcst.matchers.Arg",
    "libcst.matchers.Call",
    "libcst.matchers.DoNotCare",
    "libcst.matchers.Element",
    "libcst.matchers.Name",
    "libcst.matchers.SaveMatchedNode",
    "libcst.matchers.Tuple",
    "libcst.matchers.extract",
    "libcst.parse_expression"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_precedence_sequence": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "libcst.Call",
    "libcst.Tuple",
    "libcst.ensure_type",
    "libcst.matchers.Arg",
    "libcst.matchers.Call",
    "libcst.matchers.DoNotCare",
    "libcst.matchers.Element",
    "libcst.matchers.SaveMatchedNode",
    "libcst.matchers.Tuple",
    "libcst.matchers.extract",
    "libcst.parse_expression"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_precedence_sequence_wildcard": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "libcst.Call",
    "libcst.Tuple",
    "libcst.ensure_type",
    "libcst.matchers.Arg",
    "libcst.matchers.Call",
    "libcst.matchers.DoNotCare",
    "libcst.matchers.Element",
    "libcst.matchers.SaveMatchedNode",
    "libcst.matchers.Tuple",
    "libcst.matchers.ZeroOrMore",
    "libcst.matchers.extract",
    "libcst.parse_expression"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_predicates": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "libcst.BinaryOperation",
    "libcst.Call",
    "libcst.Tuple",
    "libcst.ensure_type",
    "libcst.matchers.Attribute",
    "libcst.matchers.BinaryOperation",
    "libcst.matchers.Call",
    "libcst.matchers.Element",
    "libcst.matchers.Name",
    "libcst.matchers.SaveMatchedNode",
    "libcst.matchers.Tuple",
    "libcst.matchers.extract",
    "libcst.parse_expression"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_sentinel": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "libcst.MaybeSentinel.DEFAULT",
    "libcst.RemovalSentinel.REMOVE",
    "libcst.matchers.Call",
    "libcst.matchers.Name",
    "libcst.matchers.SaveMatchedNode",
    "libcst.matchers.extract"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_sequence": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "libcst.Call",
    "libcst.Tuple",
    "libcst.ensure_type",
    "libcst.matchers.Call",
    "libcst.matchers.DoNotCare",
    "libcst.matchers.Element",
    "libcst.matchers.SaveMatchedNode",
    "libcst.matchers.Tuple",
    "libcst.matchers.ZeroOrMore",
    "libcst.matchers.extract",
    "libcst.parse_expression"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_sequence_element": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "libcst.Call",
    "libcst.Tuple",
    "libcst.ensure_type",
    "libcst.matchers.Arg",
    "libcst.matchers.Call",
    "libcst.matchers.DoNotCare",
    "libcst.matchers.Element",
    "libcst.matchers.SaveMatchedNode",
    "libcst.matchers.Subscript",
    "libcst.matchers.Tuple",
    "libcst.matchers.ZeroOrMore",
    "libcst.matchers.extract",
    "libcst.parse_expression"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_sequence_multiple_wildcards": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "libcst.Tuple",
    "libcst.ensure_type",
    "libcst.matchers.Element",
    "libcst.matchers.Integer",
    "libcst.matchers.SaveMatchedNode",
    "libcst.matchers.Tuple",
    "libcst.matchers.ZeroOrMore",
    "libcst.matchers.extract",
    "libcst.parse_expression",
    "tuple"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_simple": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "libcst.BinaryOperation",
    "libcst.Tuple",
    "libcst.ensure_type",
    "libcst.matchers.BinaryOperation",
    "libcst.matchers.Call",
    "libcst.matchers.Element",
    "libcst.matchers.Name",
    "libcst.matchers.SaveMatchedNode",
    "libcst.matchers.Subscript",
    "libcst.matchers.Tuple",
    "libcst.matchers.extract",
    "libcst.parse_expression"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_tautology": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "libcst.matchers.BinaryOperation",
    "libcst.matchers.Call",
    "libcst.matchers.Element",
    "libcst.matchers.SaveMatchedNode",
    "libcst.matchers.Tuple",
    "libcst.matchers.extract",
    "libcst.parse_expression"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_extract.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_extract.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_extract.m": {
  "data": {
   "shadows": "libcst.matchers"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_extract.meta": {
  "data": {
   "shadows": "libcst.metadata"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_findall": {
  "data": {},
  "type": "module"
 },
 "libcst.matchers.tests.test_findall.MatchersExtractAllTest": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_findall.MatchersExtractAllTest.test_extractall_simple": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "libcst.Call",
    "libcst.Tuple",
    "libcst.ensure_type",
    "libcst.matchers.Arg",
    "libcst.matchers.Name",
    "libcst.matchers.SaveMatchedNode",
    "libcst.matchers.extractall",
    "libcst.parse_expression"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_findall.MatchersFindAllTest": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_findall.MatchersFindAllTest.assertNodeSequenceEqual": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "AssertionError",
    "len",
    "libcst.CSTNode",
    "str",
    "typing.Optional",
    "typing.Sequence",
    "zip"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_findall.MatchersFindAllTest.test_findall_with_metadata_wrapper": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "libcst.Name",
    "libcst.matchers.MatchMetadata",
    "libcst.matchers.findall",
    "libcst.metadata.ExpressionContext.STORE",
    "libcst.metadata.ExpressionContextProvider",
    "libcst.metadata.MetadataWrapper",
    "libcst.parse_module",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_findall.MatchersFindAllTest.test_findall_with_sentinels": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "libcst.MaybeSentinel.DEFAULT",
    "libcst.RemovalSentinel.REMOVE",
    "libcst.matchers.Name",
    "libcst.matchers.findall"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_findall.MatchersFindAllTest.test_findall_with_transformers": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "TestTransformer",
    "libcst.Name",
    "libcst.metadata.MetadataWrapper",
    "libcst.parse_module",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_findall.MatchersFindAllTest.test_findall_with_transformers.TestTransformer": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer",
    "libcst.metadata.ExpressionContextProvider",
    "libcst.metadata.ProviderT",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_findall.MatchersFindAllTest.test_findall_with_transformers.TestTransformer.__init__": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "super",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_findall.MatchersFindAllTest.test_findall_with_transformers.TestTransformer.visit_Module": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "libcst.Module",
    "libcst.matchers.MatchMetadata",
    "libcst.metadata.ExpressionContext.STORE",
    "libcst.metadata.ExpressionContextProvider"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_findall.MatchersFindAllTest.test_findall_with_visitors": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.Name",
    "libcst.metadata.MetadataWrapper",
    "libcst.parse_module",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_findall.MatchersFindAllTest.test_findall_with_visitors.TestVisitor": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableVisitor",
    "libcst.metadata.ExpressionContextProvider",
    "libcst.metadata.ProviderT",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_findall.MatchersFindAllTest.test_findall_with_visitors.TestVisitor.__init__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "super",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_findall.MatchersFindAllTest.test_findall_with_visitors.TestVisitor.visit_Module": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "libcst.Module",
    "libcst.matchers.MatchMetadata",
    "libcst.metadata.ExpressionContext.STORE",
    "libcst.metadata.ExpressionContextProvider"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_findall.MatchersFindAllTest.test_simple_findall": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "libcst.Name",
    "libcst.matchers.Name",
    "libcst.matchers.findall",
    "libcst.parse_module",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_findall.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_findall.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_findall.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_findall.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_findall.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_findall.extractall": {
  "data": {
   "shadows": "libcst.matchers.extractall"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_findall.findall": {
  "data": {
   "shadows": "libcst.matchers.findall"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_findall.m": {
  "data": {
   "shadows": "libcst.matchers"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_findall.meta": {
  "data": {
   "shadows": "libcst.metadata"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_matchers": {
  "data": {},
  "type": "module"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_and_matcher_false": {
  "data": {
   "lineno": 1218,
   "symbols_in_volume": [
    "libcst.Arg",
    "libcst.Call",
    "libcst.Integer",
    "libcst.Name",
    "libcst.matchers.AllOf",
    "libcst.matchers.Arg",
    "libcst.matchers.Call",
    "libcst.matchers.Integer",
    "libcst.matchers.Name",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_and_matcher_true": {
  "data": {
   "lineno": 1187,
   "symbols_in_volume": [
    "libcst.Arg",
    "libcst.Call",
    "libcst.Integer",
    "libcst.Name",
    "libcst.matchers.AllOf",
    "libcst.matchers.Arg",
    "libcst.matchers.Call",
    "libcst.matchers.Integer",
    "libcst.matchers.MatchRegex",
    "libcst.matchers.Name",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_and_operator_matcher_false": {
  "data": {
   "lineno": 1276,
   "symbols_in_volume": [
    "libcst.Name",
    "libcst.matchers.Name",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_and_operator_matcher_true": {
  "data": {
   "lineno": 1247,
   "symbols_in_volume": [
    "isinstance",
    "libcst.Name",
    "libcst.matchers.MatchIfTrue",
    "libcst.matchers.MatchRegex",
    "libcst.matchers.Name",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_at_least_n_matcher_args_false": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": [
    "libcst.Arg",
    "libcst.Call",
    "libcst.Integer",
    "libcst.Name",
    "libcst.matchers.Arg",
    "libcst.matchers.AtLeastN",
    "libcst.matchers.Call",
    "libcst.matchers.Integer",
    "libcst.matchers.Name",
    "libcst.matchers.SimpleString",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_at_least_n_matcher_args_true": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "libcst.Arg",
    "libcst.Call",
    "libcst.Integer",
    "libcst.Name",
    "libcst.matchers.Arg",
    "libcst.matchers.AtLeastN",
    "libcst.matchers.Call",
    "libcst.matchers.Integer",
    "libcst.matchers.Name",
    "libcst.matchers.OneOf",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_at_least_n_matcher_no_args_false": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "libcst.Arg",
    "libcst.Call",
    "libcst.Integer",
    "libcst.Name",
    "libcst.matchers.Arg",
    "libcst.matchers.AtLeastN",
    "libcst.matchers.Call",
    "libcst.matchers.Integer",
    "libcst.matchers.Name",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_at_least_n_matcher_no_args_true": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "libcst.Arg",
    "libcst.Call",
    "libcst.Integer",
    "libcst.Name",
    "libcst.matchers.Arg",
    "libcst.matchers.AtLeastN",
    "libcst.matchers.Call",
    "libcst.matchers.Integer",
    "libcst.matchers.Name",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_at_most_n_matcher_args_false": {
  "data": {
   "lineno": 1144,
   "symbols_in_volume": [
    "libcst.Arg",
    "libcst.Call",
    "libcst.Integer",
    "libcst.Name",
    "libcst.matchers.Arg",
    "libcst.matchers.AtMostN",
    "libcst.matchers.Call",
    "libcst.matchers.Integer",
    "libcst.matchers.Name",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_at_most_n_matcher_args_true": {
  "data": {
   "lineno": 1086,
   "symbols_in_volume": [
    "libcst.Arg",
    "libcst.Call",
    "libcst.Integer",
    "libcst.Name",
    "libcst.matchers.Arg",
    "libcst.matchers.AtMostN",
    "libcst.matchers.Call",
    "libcst.matchers.Integer",
    "libcst.matchers.Name",
    "libcst.matchers.OneOf",
    "libcst.matchers.ZeroOrOne",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_at_most_n_matcher_no_args_false": {
  "data": {
   "lineno": 1038,
   "symbols_in_volume": [
    "libcst.Arg",
    "libcst.Call",
    "libcst.Integer",
    "libcst.Name",
    "libcst.matchers.Arg",
    "libcst.matchers.AtMostN",
    "libcst.matchers.Call",
    "libcst.matchers.Integer",
    "libcst.matchers.Name",
    "libcst.matchers.ZeroOrOne",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_at_most_n_matcher_no_args_true": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "libcst.Arg",
    "libcst.Call",
    "libcst.Integer",
    "libcst.Name",
    "libcst.matchers.Arg",
    "libcst.matchers.AtMostN",
    "libcst.matchers.Call",
    "libcst.matchers.Integer",
    "libcst.matchers.Name",
    "libcst.matchers.ZeroOrOne",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_complex_matcher_false": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "libcst.Arg",
    "libcst.Call",
    "libcst.Integer",
    "libcst.Name",
    "libcst.matchers.Arg",
    "libcst.matchers.Call",
    "libcst.matchers.DoNotCare",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Integer",
    "libcst.matchers.Name",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_complex_matcher_true": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "libcst.Arg",
    "libcst.Call",
    "libcst.Integer",
    "libcst.Name",
    "libcst.matchers.Arg",
    "libcst.matchers.Call",
    "libcst.matchers.DoNotCare",
    "libcst.matchers.Integer",
    "libcst.matchers.Name",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_does_not_match_false": {
  "data": {
   "lineno": 1368,
   "symbols_in_volume": [
    "libcst.Arg",
    "libcst.Call",
    "libcst.Integer",
    "libcst.Name",
    "libcst.matchers.Arg",
    "libcst.matchers.Call",
    "libcst.matchers.DoesNotMatch",
    "libcst.matchers.Integer",
    "libcst.matchers.MatchRegex",
    "libcst.matchers.Name",
    "libcst.matchers.OneOf",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_does_not_match_operator_false": {
  "data": {
   "lineno": 1416,
   "symbols_in_volume": [
    "libcst.Arg",
    "libcst.Call",
    "libcst.Integer",
    "libcst.Name",
    "libcst.matchers.Arg",
    "libcst.matchers.Call",
    "libcst.matchers.Integer",
    "libcst.matchers.MatchRegex",
    "libcst.matchers.Name",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_does_not_match_operator_true": {
  "data": {
   "lineno": 1322,
   "symbols_in_volume": [
    "libcst.Arg",
    "libcst.Call",
    "libcst.Integer",
    "libcst.Name",
    "libcst.matchers.Arg",
    "libcst.matchers.Call",
    "libcst.matchers.MatchRegex",
    "libcst.matchers.Name",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_does_not_match_true": {
  "data": {
   "lineno": 1280,
   "symbols_in_volume": [
    "libcst.Arg",
    "libcst.Call",
    "libcst.Integer",
    "libcst.Name",
    "libcst.matchers.Arg",
    "libcst.matchers.Call",
    "libcst.matchers.DoesNotMatch",
    "libcst.matchers.Integer",
    "libcst.matchers.MatchRegex",
    "libcst.matchers.Name",
    "libcst.matchers.OneOf",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_inverse_inverse_is_identity": {
  "data": {
   "lineno": 1456,
   "symbols_in_volume": [
    "libcst.matchers.DoesNotMatch",
    "libcst.matchers.Name"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_lambda_matcher_false": {
  "data": {
   "lineno": 1171,
   "symbols_in_volume": [
    "libcst.Name",
    "libcst.matchers.MatchIfTrue",
    "libcst.matchers.Name",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_lambda_matcher_true": {
  "data": {
   "lineno": 1163,
   "symbols_in_volume": [
    "libcst.Name",
    "libcst.matchers.MatchIfTrue",
    "libcst.matchers.Name",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_or_matcher_false": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "libcst.Arg",
    "libcst.Assign",
    "libcst.AssignTarget",
    "libcst.Call",
    "libcst.Integer",
    "libcst.Name",
    "libcst.matchers.Arg",
    "libcst.matchers.Assign",
    "libcst.matchers.Call",
    "libcst.matchers.Integer",
    "libcst.matchers.Name",
    "libcst.matchers.OneOf",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_or_matcher_true": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "libcst.Arg",
    "libcst.Assign",
    "libcst.AssignTarget",
    "libcst.Call",
    "libcst.Integer",
    "libcst.Name",
    "libcst.matchers.Arg",
    "libcst.matchers.Assign",
    "libcst.matchers.Call",
    "libcst.matchers.Integer",
    "libcst.matchers.Name",
    "libcst.matchers.OneOf",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_or_operator_matcher_false": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "libcst.Assign",
    "libcst.AssignTarget",
    "libcst.Name",
    "libcst.matchers.Assign",
    "libcst.matchers.Name",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_or_operator_matcher_true": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "libcst.Assign",
    "libcst.AssignTarget",
    "libcst.Name",
    "libcst.matchers.Assign",
    "libcst.matchers.Name",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_regex_matcher_false": {
  "data": {
   "lineno": 1183,
   "symbols_in_volume": [
    "libcst.Name",
    "libcst.matchers.MatchRegex",
    "libcst.matchers.Name",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_regex_matcher_true": {
  "data": {
   "lineno": 1179,
   "symbols_in_volume": [
    "libcst.Name",
    "libcst.matchers.MatchRegex",
    "libcst.matchers.Name",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_simple_matcher_false": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "libcst.Name",
    "libcst.matchers.Name",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_simple_matcher_true": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst.Name",
    "libcst.matchers.Name",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_type_of_matcher_false": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "libcst.Add",
    "libcst.BinaryOperation",
    "libcst.BooleanOperation",
    "libcst.Name",
    "libcst.Or",
    "libcst.SimpleString",
    "libcst.matchers.Attribute",
    "libcst.matchers.BinaryOperation",
    "libcst.matchers.BooleanOperation",
    "libcst.matchers.Name",
    "libcst.matchers.SimpleString",
    "libcst.matchers.TypeOf",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_type_of_matcher_true": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "libcst.Add",
    "libcst.BinaryOperation",
    "libcst.BooleanOperation",
    "libcst.Float",
    "libcst.Name",
    "libcst.Or",
    "libcst.SimpleString",
    "libcst.matchers.BinaryOperation",
    "libcst.matchers.BooleanOperation",
    "libcst.matchers.Float",
    "libcst.matchers.Name",
    "libcst.matchers.SimpleString",
    "libcst.matchers.TypeOf",
    "libcst.matchers.matches",
    "libcst.matchers.tests.test_matchers.dataclasses"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_zero_or_more_matcher_args_false": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "libcst.Arg",
    "libcst.Call",
    "libcst.Integer",
    "libcst.Name",
    "libcst.matchers.Arg",
    "libcst.matchers.Call",
    "libcst.matchers.Integer",
    "libcst.matchers.Name",
    "libcst.matchers.SimpleString",
    "libcst.matchers.ZeroOrMore",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_zero_or_more_matcher_args_true": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "libcst.Arg",
    "libcst.Call",
    "libcst.Integer",
    "libcst.Name",
    "libcst.matchers.Arg",
    "libcst.matchers.Call",
    "libcst.matchers.Integer",
    "libcst.matchers.Name",
    "libcst.matchers.OneOf",
    "libcst.matchers.ZeroOrMore",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_zero_or_more_matcher_no_args_true": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "libcst.Arg",
    "libcst.Call",
    "libcst.Integer",
    "libcst.Name",
    "libcst.matchers.Arg",
    "libcst.matchers.Call",
    "libcst.matchers.Integer",
    "libcst.matchers.Name",
    "libcst.matchers.ZeroOrMore",
    "libcst.matchers.matches"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_matchers.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_matchers.dataclasses": {
  "data": {
   "shadows": "dataclasses"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_matchers.m": {
  "data": {
   "shadows": "libcst.matchers"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_matchers.matches": {
  "data": {
   "shadows": "libcst.matchers.matches"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_matchers_with_metadata": {
  "data": {},
  "type": "module"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersMetadataTest": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersMetadataTest._make_coderange": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "int",
    "libcst.metadata.CodePosition",
    "libcst.metadata.CodeRange",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersMetadataTest._make_fixture": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "libcst.BaseExpression",
    "libcst.Expr",
    "libcst.MetadataWrapper",
    "libcst.SimpleStatementLine",
    "libcst.ensure_type",
    "libcst.metadata.MetadataWrapper",
    "libcst.parse_module",
    "str",
    "textwrap.dedent",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersMetadataTest.test_lambda_metadata_matcher": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "any",
    "libcst.FunctionDef",
    "libcst.MetadataWrapper",
    "libcst.ensure_type",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.MatchMetadataIfTrue",
    "libcst.matchers.matches",
    "libcst.metadata.QualifiedNameProvider",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersMetadataTest.test_lambda_metadata_matcher_operators": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "any",
    "libcst.FunctionDef",
    "libcst.MetadataWrapper",
    "libcst.ensure_type",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.MatchMetadataIfTrue",
    "libcst.matchers.matches",
    "libcst.metadata.QualifiedNameProvider",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersMetadataTest.test_lambda_metadata_matcher_with_no_metadata": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "any",
    "libcst.FunctionDef",
    "libcst.ensure_type",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.MatchMetadataIfTrue",
    "libcst.matchers.matches",
    "libcst.metadata.QualifiedNameProvider",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersMetadataTest.test_predicate_logic": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "libcst.matchers.AllOf",
    "libcst.matchers.BinaryOperation",
    "libcst.matchers.DoesNotMatch",
    "libcst.matchers.MatchMetadata",
    "libcst.matchers.OneOf",
    "libcst.matchers.matches",
    "libcst.metadata.ExpressionContext.LOAD",
    "libcst.metadata.ExpressionContext.STORE",
    "libcst.metadata.ExpressionContextProvider",
    "libcst.metadata.PositionProvider"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersMetadataTest.test_predicate_logic_on_attributes": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "libcst.matchers.AllOf",
    "libcst.matchers.BinaryOperation",
    "libcst.matchers.DoesNotMatch",
    "libcst.matchers.Integer",
    "libcst.matchers.MatchMetadata",
    "libcst.matchers.Name",
    "libcst.matchers.OneOf",
    "libcst.matchers.matches",
    "libcst.metadata.ExpressionContext.LOAD",
    "libcst.metadata.ExpressionContext.STORE",
    "libcst.metadata.ExpressionContextProvider",
    "libcst.metadata.PositionProvider"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersMetadataTest.test_predicate_logic_operators": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "libcst.matchers.BinaryOperation",
    "libcst.matchers.MatchMetadata",
    "libcst.matchers.matches",
    "libcst.metadata.ExpressionContext.LOAD",
    "libcst.metadata.ExpressionContext.STORE",
    "libcst.metadata.ExpressionContextProvider",
    "libcst.metadata.PositionProvider"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersMetadataTest.test_predicate_logic_operators_on_attributes": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "libcst.matchers.BinaryOperation",
    "libcst.matchers.Integer",
    "libcst.matchers.MatchMetadata",
    "libcst.matchers.Name",
    "libcst.matchers.matches",
    "libcst.metadata.ExpressionContext.LOAD",
    "libcst.metadata.ExpressionContext.STORE",
    "libcst.metadata.ExpressionContextProvider",
    "libcst.metadata.PositionProvider"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersMetadataTest.test_simple_matcher_false": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "libcst.matchers.BinaryOperation",
    "libcst.matchers.MatchMetadata",
    "libcst.matchers.Name",
    "libcst.matchers.matches",
    "libcst.metadata.PositionProvider"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersMetadataTest.test_simple_matcher_true": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "libcst.matchers.BinaryOperation",
    "libcst.matchers.MatchMetadata",
    "libcst.matchers.Name",
    "libcst.matchers.matches",
    "libcst.metadata.PositionProvider"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest._make_fixture": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "libcst.MetadataWrapper",
    "libcst.parse_module",
    "str",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_decorator_on_transformers": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "TestTransformer"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_decorator_on_transformers.TestTransformer": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer",
    "libcst.metadata.ExpressionContextProvider",
    "libcst.metadata.ProviderT",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_decorator_on_transformers.TestTransformer.__init__": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "set",
    "str",
    "super",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_decorator_on_transformers.TestTransformer._visit_assignments": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "libcst.Name",
    "libcst.matchers.MatchMetadata",
    "libcst.matchers.Name",
    "libcst.matchers.visit",
    "libcst.metadata.ExpressionContext.STORE",
    "libcst.metadata.ExpressionContextProvider"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_decorator_on_visitors": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "TestVisitor"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_decorator_on_visitors.TestVisitor": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableVisitor",
    "libcst.metadata.ExpressionContextProvider",
    "libcst.metadata.ProviderT",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_decorator_on_visitors.TestVisitor.__init__": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "set",
    "str",
    "super",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_decorator_on_visitors.TestVisitor._visit_assignments": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "libcst.Name",
    "libcst.matchers.MatchMetadata",
    "libcst.matchers.Name",
    "libcst.matchers.visit",
    "libcst.metadata.ExpressionContext.STORE",
    "libcst.metadata.ExpressionContextProvider"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_on_transformers": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "TestTransformer"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_on_transformers.TestTransformer": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer",
    "libcst.metadata.ExpressionContextProvider",
    "libcst.metadata.ProviderT",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_on_transformers.TestTransformer.__init__": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "set",
    "str",
    "super",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_on_transformers.TestTransformer.visit_Name": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "libcst.Name",
    "libcst.matchers.MatchMetadata",
    "libcst.matchers.Name",
    "libcst.metadata.ExpressionContext.STORE",
    "libcst.metadata.ExpressionContextProvider"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_on_visitors": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "TestVisitor"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_on_visitors.TestVisitor": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableVisitor",
    "libcst.metadata.ExpressionContextProvider",
    "libcst.metadata.ProviderT",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_on_visitors.TestVisitor.__init__": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "set",
    "str",
    "super",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_on_visitors.TestVisitor.visit_Name": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "libcst.Name",
    "libcst.matchers.MatchMetadata",
    "libcst.matchers.Name",
    "libcst.metadata.ExpressionContext.STORE",
    "libcst.metadata.ExpressionContextProvider"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.m": {
  "data": {
   "shadows": "libcst.matchers"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.matches": {
  "data": {
   "shadows": "libcst.matchers.matches"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.meta": {
  "data": {
   "shadows": "libcst.metadata"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_replace": {
  "data": {},
  "type": "module"
 },
 "libcst.matchers.tests.test_replace.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_actual": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "libcst.Module",
    "libcst.ensure_type",
    "libcst.matchers.Name",
    "libcst.matchers.replace",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_actual._swap_bools": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Name",
    "libcst.ensure_type",
    "str",
    "typing.Dict",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_add_one": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "libcst.Module",
    "libcst.ensure_type",
    "libcst.matchers.Integer",
    "libcst.matchers.replace",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_add_one._add_one": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "int",
    "libcst.CSTNode",
    "libcst.Integer",
    "libcst.ensure_type",
    "str",
    "typing.Dict",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_add_one_to_foo_args": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "libcst.Module",
    "libcst.ensure_type",
    "libcst.matchers.Arg",
    "libcst.matchers.Call",
    "libcst.matchers.Integer",
    "libcst.matchers.Name",
    "libcst.matchers.SaveMatchedNode",
    "libcst.matchers.replace",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_add_one_to_foo_args._add_one_to_arg": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "int",
    "libcst.CSTNode",
    "libcst.Integer",
    "libcst.ensure_type",
    "str",
    "typing.Dict",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_metadata": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "any",
    "libcst.MetadataWrapper",
    "libcst.Module",
    "libcst.ensure_type",
    "libcst.matchers.MatchMetadataIfTrue",
    "libcst.matchers.Name",
    "libcst.matchers.replace",
    "libcst.metadata.QualifiedNameProvider",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_metadata._rename_foo": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Name",
    "libcst.ensure_type",
    "str",
    "typing.Dict",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_metadata_on_transform": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "TestTransformer",
    "libcst.MetadataWrapper",
    "libcst.Module",
    "libcst.ensure_type",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_metadata_on_transform.TestTransformer": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer",
    "libcst.metadata.ProviderT",
    "libcst.metadata.QualifiedNameProvider",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_metadata_on_transform.TestTransformer.leave_Module": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "any",
    "libcst.Module",
    "libcst.ensure_type",
    "libcst.matchers.MatchMetadataIfTrue",
    "libcst.matchers.Name",
    "libcst.metadata.QualifiedNameProvider"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_metadata_on_transform._rename_foo": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Name",
    "libcst.ensure_type",
    "str",
    "typing.Dict",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_noop": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "id",
    "libcst.Module",
    "libcst.ensure_type",
    "libcst.matchers.Name",
    "libcst.matchers.replace",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_noop._swap_bools": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Name",
    "libcst.ensure_type",
    "str",
    "typing.Dict",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_sentinel": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst.MaybeSentinel.DEFAULT",
    "libcst.RemovalSentinel.REMOVE",
    "libcst.matchers.Name",
    "libcst.matchers.replace"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_sentinel._swap_bools": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Name",
    "libcst.ensure_type",
    "str",
    "typing.Dict",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_sequence_extract": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "libcst.Module",
    "libcst.ensure_type",
    "libcst.matchers.FunctionDef",
    "libcst.matchers.Param",
    "libcst.matchers.Parameters",
    "libcst.matchers.SaveMatchedNode",
    "libcst.matchers.ZeroOrMore",
    "libcst.matchers.replace",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_sequence_extract._reverse_params": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.FunctionDef",
    "libcst.Parameters",
    "libcst.ensure_type",
    "list",
    "reversed",
    "str",
    "typing.Dict",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_simple": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "libcst.Module",
    "libcst.Name",
    "libcst.ensure_type",
    "libcst.matchers.Name",
    "libcst.matchers.replace",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_simple_sentinel": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "libcst.Module",
    "libcst.RemoveFromParent",
    "libcst.ensure_type",
    "libcst.matchers.Param",
    "libcst.matchers.replace",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_updated_node_changes": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "libcst.Module",
    "libcst.ensure_type",
    "libcst.matchers.Arg",
    "libcst.matchers.Call",
    "libcst.matchers.SaveMatchedNode",
    "libcst.matchers.replace",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_updated_node_changes._replace_nested": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "libcst.Arg",
    "libcst.CSTNode",
    "libcst.Call",
    "libcst.Name",
    "libcst.ensure_type",
    "str",
    "typing.Dict",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_replace.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_replace.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_replace.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_replace.m": {
  "data": {
   "shadows": "libcst.matchers"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_replace.meta": {
  "data": {
   "shadows": "libcst.metadata"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_visitors": {
  "data": {},
  "type": "module"
 },
 "libcst.matchers.tests.test_visitors.MatchDecoratorMismatch": {
  "data": {
   "shadows": "libcst.matchers.MatchDecoratorMismatch"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_visitors.MatcherDecoratableTransformer": {
  "data": {
   "shadows": "libcst.matchers.MatcherDecoratableTransformer"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_visitors.MatcherDecoratableVisitor": {
  "data": {
   "shadows": "libcst.matchers.MatcherDecoratableVisitor"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_bad_leave_collecter_decorator": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.MatchDecoratorMismatch"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_bad_leave_collecter_decorator.TestVisitor": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_bad_leave_collecter_decorator.TestVisitor.leave_SimpleString": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.SimpleString",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_bad_leave_transform_decorator": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.MatchDecoratorMismatch"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_bad_leave_transform_decorator.TestVisitor": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_bad_leave_transform_decorator.TestVisitor.leave_SimpleString": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.SimpleString",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_bad_visit_collecter_decorator": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.MatchDecoratorMismatch"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_bad_visit_collecter_decorator.TestVisitor": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_bad_visit_collecter_decorator.TestVisitor.visit_SimpleString": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.SimpleString",
    "libcst.matchers.visit"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_bad_visit_transform_decorator": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.MatchDecoratorMismatch"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_bad_visit_transform_decorator.TestVisitor": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_bad_visit_transform_decorator.TestVisitor.visit_SimpleString": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.SimpleString",
    "libcst.matchers.visit"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_leave_num_params": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.MatchDecoratorMismatch"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_leave_num_params.TestVisitor": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_leave_num_params.TestVisitor._string_leave": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.SimpleString",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_leave_return": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.MatchDecoratorMismatch"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_leave_return.TestVisitor": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_leave_return.TestVisitor._string_leave": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "bool",
    "libcst.SimpleString",
    "libcst.matchers.SimpleString",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_leave_superclass": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.MatchDecoratorMismatch"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_leave_superclass.TestVisitor": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_leave_superclass.TestVisitor._string_leave": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "libcst.BaseExpression",
    "libcst.matchers.Pass",
    "libcst.matchers.SimpleString",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_leave_union": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.MatchDecoratorMismatch"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_leave_union.TestVisitor": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_leave_union.TestVisitor._string_leave": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.Name",
    "libcst.matchers.SimpleString",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_visit_num_params": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.MatchDecoratorMismatch"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_visit_num_params.TestVisitor": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_visit_num_params.TestVisitor._string_visit": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.SimpleString",
    "libcst.matchers.visit"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_visit_return": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.MatchDecoratorMismatch"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_visit_return.TestVisitor": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_visit_return.TestVisitor._string_visit": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "bool",
    "libcst.SimpleString",
    "libcst.matchers.SimpleString",
    "libcst.matchers.visit"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_visit_superclass": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.MatchDecoratorMismatch"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_visit_superclass.TestVisitor": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_visit_superclass.TestVisitor._string_visit": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "libcst.BaseExpression",
    "libcst.matchers.Pass",
    "libcst.matchers.SimpleString",
    "libcst.matchers.visit"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_visit_union": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.MatchDecoratorMismatch"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_visit_union.TestVisitor": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_visit_union.TestVisitor._string_visit": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.Name",
    "libcst.matchers.SimpleString",
    "libcst.matchers.visit"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_num_params": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.MatchDecoratorMismatch"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_num_params.TestVisitor": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_num_params.TestVisitor._string_leave": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.SimpleString",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_return_invalid_maybe": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.MatchDecoratorMismatch"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_return_invalid_maybe.TestVisitor": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_return_invalid_maybe.TestVisitor._string_visit": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "libcst.MaybeSentinel",
    "libcst.SimpleString",
    "libcst.matchers.SimpleString",
    "libcst.matchers.leave",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_return_invalid_remove": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.MatchDecoratorMismatch"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_return_invalid_remove.TestVisitor": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_return_invalid_remove.TestVisitor._string_visit": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "libcst.RemovalSentinel",
    "libcst.SimpleString",
    "libcst.matchers.SimpleString",
    "libcst.matchers.leave",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_return_invalid_superclass": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.MatchDecoratorMismatch"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_return_invalid_superclass.TestVisitor": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_return_invalid_superclass.TestVisitor._string_visit": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "libcst.BaseParenthesizableWhitespace",
    "libcst.SimpleString",
    "libcst.SimpleWhitespace",
    "libcst.matchers.SimpleString",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_return_invalid_union": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.MatchDecoratorMismatch"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_return_invalid_union.TestVisitor": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_return_invalid_union.TestVisitor._string_leave": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "libcst.Name",
    "libcst.Pass",
    "libcst.SimpleString",
    "libcst.matchers.Name",
    "libcst.matchers.SimpleString",
    "libcst.matchers.leave",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_return_wrong_type": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.MatchDecoratorMismatch"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_return_wrong_type.TestVisitor": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_return_wrong_type.TestVisitor._string_visit": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "libcst.Pass",
    "libcst.SimpleString",
    "libcst.matchers.SimpleString",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_superclass": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.MatchDecoratorMismatch"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_superclass.TestVisitor": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_superclass.TestVisitor._string_leave": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "libcst.BaseExpression",
    "libcst.matchers.Pass",
    "libcst.matchers.SimpleString",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_union": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.MatchDecoratorMismatch"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_union.TestVisitor": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_union.TestVisitor._string_leave": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "libcst.BaseExpression",
    "libcst.SimpleString",
    "libcst.matchers.Name",
    "libcst.matchers.SimpleString",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_visit_num_params": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.MatchDecoratorMismatch"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_visit_num_params.TestVisitor": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_visit_num_params.TestVisitor._string_visit": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.SimpleString",
    "libcst.matchers.visit"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_visit_return": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.MatchDecoratorMismatch"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_visit_return.TestVisitor": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_visit_return.TestVisitor._string_visit": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "bool",
    "libcst.SimpleString",
    "libcst.matchers.SimpleString",
    "libcst.matchers.visit"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_visit_superclass": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.MatchDecoratorMismatch"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_visit_superclass.TestVisitor": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_visit_superclass.TestVisitor._string_visit": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "libcst.BaseExpression",
    "libcst.matchers.Pass",
    "libcst.matchers.SimpleString",
    "libcst.matchers.visit"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_visit_union": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.matchers.MatchDecoratorMismatch"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_visit_union.TestVisitor": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_visit_union.TestVisitor._string_visit": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.Name",
    "libcst.matchers.SimpleString",
    "libcst.matchers.visit"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_pickleable_exception": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "libcst.matchers.MatchDecoratorMismatch",
    "libcst.matchers.tests.test_visitors.pickle"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_leave_superclass": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "TestVisitor"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_leave_superclass.TestVisitor": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_leave_superclass.TestVisitor._string_leave": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "libcst.BaseExpression",
    "libcst.matchers.Name",
    "libcst.matchers.SimpleString",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_leave_union": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "TestVisitor"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_leave_union.TestVisitor": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_leave_union.TestVisitor._string_leave": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "libcst.Name",
    "libcst.SimpleString",
    "libcst.matchers.Name",
    "libcst.matchers.SimpleString",
    "libcst.matchers.leave",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_simple": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "TestVisitor"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_simple.TestVisitor": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_simple.TestVisitor._string_leave": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.SimpleString",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_simple.TestVisitor._string_visit": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.SimpleString",
    "libcst.matchers.visit"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_visit_superclass": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "TestVisitor"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_visit_superclass.TestVisitor": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_visit_superclass.TestVisitor._string_visit": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "libcst.BaseExpression",
    "libcst.matchers.Name",
    "libcst.matchers.SimpleString",
    "libcst.matchers.visit"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_visit_union": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "TestVisitor"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_visit_union.TestVisitor": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_visit_union.TestVisitor._string_visit": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "libcst.Name",
    "libcst.SimpleString",
    "libcst.matchers.Name",
    "libcst.matchers.SimpleString",
    "libcst.matchers.visit",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_base_class": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "TestVisitor"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_base_class.TestVisitor": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_base_class.TestVisitor._string_leave": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "libcst.BaseExpression",
    "libcst.SimpleString",
    "libcst.matchers.SimpleString",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_leave_return_maybe": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "TestVisitor"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_leave_return_maybe.TestVisitor": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_leave_return_maybe.TestVisitor._assign_equal_leave": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "libcst.AssignEqual",
    "libcst.MaybeSentinel",
    "libcst.matchers.AssignEqual",
    "libcst.matchers.leave",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_leave_return_remove": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "TestVisitor"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_leave_return_remove.TestVisitor": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_leave_return_remove.TestVisitor._string_visit": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "libcst.AssignTarget",
    "libcst.RemovalSentinel",
    "libcst.matchers.AssignTarget",
    "libcst.matchers.leave",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_leave_superclass": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "TestVisitor"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_leave_superclass.TestVisitor": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_leave_superclass.TestVisitor._string_leave": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "libcst.BaseExpression",
    "libcst.matchers.Name",
    "libcst.matchers.SimpleString",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_leave_union": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "TestVisitor"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_leave_union.TestVisitor": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_leave_union.TestVisitor._string_leave": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "libcst.Name",
    "libcst.SimpleString",
    "libcst.matchers.Name",
    "libcst.matchers.SimpleString",
    "libcst.matchers.leave",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_simple": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "TestVisitor"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_simple.TestVisitor": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_simple.TestVisitor._string_leave": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.SimpleString",
    "libcst.matchers.leave"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_simple.TestVisitor._string_visit": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "libcst.SimpleString",
    "libcst.matchers.SimpleString",
    "libcst.matchers.visit"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_visit_superclass": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "TestVisitor"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_visit_superclass.TestVisitor": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_visit_superclass.TestVisitor._string_visit": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "libcst.BaseExpression",
    "libcst.matchers.Name",
    "libcst.matchers.SimpleString",
    "libcst.matchers.visit"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_visit_union": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "TestVisitor"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_visit_union.TestVisitor": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "libcst.matchers.MatcherDecoratableTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_visit_union.TestVisitor._string_visit": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "libcst.Name",
    "libcst.SimpleString",
    "libcst.matchers.Name",
    "libcst.matchers.SimpleString",
    "libcst.matchers.visit",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_visitors.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_visitors.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_visitors.leave": {
  "data": {
   "shadows": "libcst.matchers.leave"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_visitors.m": {
  "data": {
   "shadows": "libcst.matchers"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_visitors.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "libcst.matchers.tests.test_visitors.visit": {
  "data": {
   "shadows": "libcst.matchers.visit"
  },
  "type": "import"
 },
 "libcst.matchers.visit": {
  "data": {
   "shadows": "libcst.matchers._decorators.visit"
  },
  "type": "import"
 },
 "libcst.metadata": {
  "data": {},
  "type": "module"
 },
 "libcst.metadata.Access": {
  "data": {
   "shadows": "libcst.metadata.scope_provider.Access"
  },
  "type": "import"
 },
 "libcst.metadata.Accesses": {
  "data": {
   "shadows": "libcst.metadata.scope_provider.Accesses"
  },
  "type": "import"
 },
 "libcst.metadata.Assignment": {
  "data": {
   "shadows": "libcst.metadata.scope_provider.Assignment"
  },
  "type": "import"
 },
 "libcst.metadata.Assignments": {
  "data": {
   "shadows": "libcst.metadata.scope_provider.Assignments"
  },
  "type": "import"
 },
 "libcst.metadata.BaseAssignment": {
  "data": {
   "shadows": "libcst.metadata.scope_provider.BaseAssignment"
  },
  "type": "import"
 },
 "libcst.metadata.BaseMetadataProvider": {
  "data": {
   "shadows": "libcst.metadata.base_provider.BaseMetadataProvider"
  },
  "type": "import"
 },
 "libcst.metadata.BatchableMetadataProvider": {
  "data": {
   "shadows": "libcst.metadata.base_provider.BatchableMetadataProvider"
  },
  "type": "import"
 },
 "libcst.metadata.BuiltinAssignment": {
  "data": {
   "shadows": "libcst.metadata.scope_provider.BuiltinAssignment"
  },
  "type": "import"
 },
 "libcst.metadata.ByteSpanPositionProvider": {
  "data": {
   "shadows": "libcst.metadata.span_provider.ByteSpanPositionProvider"
  },
  "type": "import"
 },
 "libcst.metadata.ClassScope": {
  "data": {
   "shadows": "libcst.metadata.scope_provider.ClassScope"
  },
  "type": "import"
 },
 "libcst.metadata.CodePosition": {
  "data": {
   "shadows": "libcst._position.CodePosition"
  },
  "type": "import"
 },
 "libcst.metadata.CodeRange": {
  "data": {
   "shadows": "libcst._position.CodeRange"
  },
  "type": "import"
 },
 "libcst.metadata.CodeSpan": {
  "data": {
   "shadows": "libcst.metadata.span_provider.CodeSpan"
  },
  "type": "import"
 },
 "libcst.metadata.CodegenPartial": {
  "data": {
   "shadows": "libcst.metadata.reentrant_codegen.CodegenPartial"
  },
  "type": "import"
 },
 "libcst.metadata.ComprehensionScope": {
  "data": {
   "shadows": "libcst.metadata.scope_provider.ComprehensionScope"
  },
  "type": "import"
 },
 "libcst.metadata.ExperimentalReentrantCodegenProvider": {
  "data": {
   "shadows": "libcst.metadata.reentrant_codegen.ExperimentalReentrantCodegenProvider"
  },
  "type": "import"
 },
 "libcst.metadata.ExpressionContext": {
  "data": {
   "shadows": "libcst.metadata.expression_context_provider.ExpressionContext"
  },
  "type": "import"
 },
 "libcst.metadata.ExpressionContextProvider": {
  "data": {
   "shadows": "libcst.metadata.expression_context_provider.ExpressionContextProvider"
  },
  "type": "import"
 },
 "libcst.metadata.FullRepoManager": {
  "data": {
   "shadows": "libcst.metadata.full_repo_manager.FullRepoManager"
  },
  "type": "import"
 },
 "libcst.metadata.FunctionScope": {
  "data": {
   "shadows": "libcst.metadata.scope_provider.FunctionScope"
  },
  "type": "import"
 },
 "libcst.metadata.GlobalScope": {
  "data": {
   "shadows": "libcst.metadata.scope_provider.GlobalScope"
  },
  "type": "import"
 },
 "libcst.metadata.MetadataWrapper": {
  "data": {
   "shadows": "libcst.metadata.wrapper.MetadataWrapper"
  },
  "type": "import"
 },
 "libcst.metadata.ParentNodeProvider": {
  "data": {
   "shadows": "libcst.metadata.parent_node_provider.ParentNodeProvider"
  },
  "type": "import"
 },
 "libcst.metadata.PositionProvider": {
  "data": {
   "shadows": "libcst.metadata.position_provider.PositionProvider"
  },
  "type": "import"
 },
 "libcst.metadata.ProviderT": {
  "data": {
   "shadows": "libcst.metadata.base_provider.ProviderT"
  },
  "type": "import"
 },
 "libcst.metadata.QualifiedName": {
  "data": {
   "shadows": "libcst.metadata.scope_provider.QualifiedName"
  },
  "type": "import"
 },
 "libcst.metadata.QualifiedNameProvider": {
  "data": {
   "shadows": "libcst.metadata.scope_provider.QualifiedNameProvider"
  },
  "type": "import"
 },
 "libcst.metadata.QualifiedNameSource": {
  "data": {
   "shadows": "libcst.metadata.scope_provider.QualifiedNameSource"
  },
  "type": "import"
 },
 "libcst.metadata.Scope": {
  "data": {
   "shadows": "libcst.metadata.scope_provider.Scope"
  },
  "type": "import"
 },
 "libcst.metadata.ScopeProvider": {
  "data": {
   "shadows": "libcst.metadata.scope_provider.ScopeProvider"
  },
  "type": "import"
 },
 "libcst.metadata.TypeInferenceProvider": {
  "data": {
   "shadows": "libcst.metadata.type_inference_provider.TypeInferenceProvider"
  },
  "type": "import"
 },
 "libcst.metadata.VisitorMetadataProvider": {
  "data": {
   "shadows": "libcst.metadata.base_provider.VisitorMetadataProvider"
  },
  "type": "import"
 },
 "libcst.metadata.WhitespaceInclusivePositionProvider": {
  "data": {
   "shadows": "libcst.metadata.position_provider.WhitespaceInclusivePositionProvider"
  },
  "type": "import"
 },
 "libcst.metadata.__all__": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "libcst.metadata.base_provider": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING",
    "typing.Type",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "libcst.metadata.base_provider.BaseMetadataProvider": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "int",
    "libcst._metadata_dependent.MetadataDependent",
    "libcst.metadata.base_provider._ProvidedMetadataT",
    "object",
    "pathlib.Path",
    "str",
    "typing.Callable",
    "typing.Generic",
    "typing.List",
    "typing.Mapping",
    "typing.MutableMapping",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.base_provider.BaseMetadataProvider.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "Exception",
    "object",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.base_provider.BaseMetadataProvider._gen": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "dict",
    "libcst.metadata.base_provider._ProvidedMetadataT",
    "types.MappingProxyType",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.base_provider.BaseMetadataProvider._gen_impl": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "libcst.metadata.base_provider.BaseMetadataProvider.get_metadata": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "libcst._metadata_dependent._T",
    "libcst._metadata_dependent._UNDEFINED_DEFAULT",
    "super",
    "type",
    "typing.Type",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.base_provider.BaseMetadataProvider.set_metadata": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "libcst.metadata.base_provider._ProvidedMetadataT"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.base_provider.BatchableCSTVisitor": {
  "data": {
   "shadows": "libcst._batched_visitor.BatchableCSTVisitor"
  },
  "type": "import"
 },
 "libcst.metadata.base_provider.BatchableMetadataProvider": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "libcst._batched_visitor.BatchableCSTVisitor",
    "libcst.metadata.base_provider.BaseMetadataProvider",
    "libcst.metadata.base_provider._ProvidedMetadataT"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.base_provider.BatchableMetadataProvider._gen_impl": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "libcst.metadata.base_provider.CSTNode": {
  "data": {
   "shadows": "libcst._nodes.base.CSTNode"
  },
  "type": "import"
 },
 "libcst.metadata.base_provider.CSTVisitor": {
  "data": {
   "shadows": "libcst._visitors.CSTVisitor"
  },
  "type": "import"
 },
 "libcst.metadata.base_provider.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst.metadata.base_provider.Generic": {
  "data": {
   "shadows": "typing.Generic"
  },
  "type": "import"
 },
 "libcst.metadata.base_provider.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst.metadata.base_provider.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "libcst.metadata.base_provider.MappingProxyType": {
  "data": {
   "shadows": "types.MappingProxyType"
  },
  "type": "import"
 },
 "libcst.metadata.base_provider.MetadataDependent": {
  "data": {
   "shadows": "libcst._metadata_dependent.MetadataDependent"
  },
  "type": "import"
 },
 "libcst.metadata.base_provider.MetadataWrapper": {
  "data": {
   "shadows": "libcst.metadata.wrapper.MetadataWrapper"
  },
  "type": "import"
 },
 "libcst.metadata.base_provider.Module": {
  "data": {
   "shadows": "libcst._nodes.module.Module"
  },
  "type": "import"
 },
 "libcst.metadata.base_provider.MutableMapping": {
  "data": {
   "shadows": "typing.MutableMapping"
  },
  "type": "import"
 },
 "libcst.metadata.base_provider.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.metadata.base_provider.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "libcst.metadata.base_provider.ProviderT": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "libcst.metadata.base_provider.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "libcst.metadata.base_provider.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "libcst.metadata.base_provider.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "libcst.metadata.base_provider.VisitorMetadataProvider": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "libcst._visitors.CSTVisitor",
    "libcst.metadata.base_provider.BaseMetadataProvider",
    "libcst.metadata.base_provider._ProvidedMetadataT"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.base_provider.VisitorMetadataProvider._gen_impl": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "libcst.metadata.base_provider._MetadataT": {
  "data": {
   "shadows": "libcst._metadata_dependent._T"
  },
  "type": "import"
 },
 "libcst.metadata.base_provider._ModuleT": {
  "data": {
   "shadows": "libcst._nodes.module._ModuleSelfT"
  },
  "type": "import"
 },
 "libcst.metadata.base_provider._ProvidedMetadataT": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "libcst.metadata.base_provider._UNDEFINED_DEFAULT": {
  "data": {
   "shadows": "libcst._metadata_dependent._UNDEFINED_DEFAULT"
  },
  "type": "import"
 },
 "libcst.metadata.base_provider.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "libcst.metadata.expression_context_provider": {
  "data": {},
  "type": "module"
 },
 "libcst.metadata.expression_context_provider.BatchableMetadataProvider": {
  "data": {
   "shadows": "libcst.metadata.base_provider.BatchableMetadataProvider"
  },
  "type": "import"
 },
 "libcst.metadata.expression_context_provider.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "libcst.metadata.expression_context_provider.ExpressionContext": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "enum.Enum",
    "enum.auto"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextProvider": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "libcst.metadata.base_provider.BatchableMetadataProvider",
    "libcst.metadata.expression_context_provider.ExpressionContext",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextProvider.visit_Module": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "bool",
    "libcst.Module",
    "libcst.metadata.expression_context_provider.ExpressionContext",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "libcst.CSTVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "libcst.metadata.expression_context_provider.ExpressionContext"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor.visit_AnnAssign": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "bool",
    "libcst.AnnAssign",
    "libcst.metadata.expression_context_provider.ExpressionContext",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor.visit_AsName": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "bool",
    "libcst.AsName",
    "libcst.metadata.expression_context_provider.ExpressionContext",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor.visit_Assign": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "bool",
    "libcst.Assign",
    "libcst.metadata.expression_context_provider.ExpressionContext",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor.visit_Attribute": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "bool",
    "libcst.Attribute",
    "libcst.metadata.expression_context_provider.ExpressionContext",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor.visit_AugAssign": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "bool",
    "libcst.AugAssign",
    "libcst.metadata.expression_context_provider.ExpressionContext",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor.visit_ClassDef": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "bool",
    "libcst.ClassDef",
    "libcst.metadata.expression_context_provider.ExpressionContext",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor.visit_CompFor": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "bool",
    "libcst.CompFor",
    "libcst.metadata.expression_context_provider.ExpressionContext",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor.visit_Del": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "bool",
    "libcst.Del",
    "libcst.metadata.expression_context_provider.ExpressionContext",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor.visit_For": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "bool",
    "libcst.For",
    "libcst.metadata.expression_context_provider.ExpressionContext",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor.visit_FunctionDef": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "bool",
    "libcst.FunctionDef",
    "libcst.metadata.expression_context_provider.ExpressionContext",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor.visit_List": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "bool",
    "libcst.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor.visit_Name": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "bool",
    "libcst.Name"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor.visit_Param": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "bool",
    "libcst.Param",
    "libcst.metadata.expression_context_provider.ExpressionContext",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor.visit_StarredElement": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "bool",
    "libcst.StarredElement",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor.visit_Subscript": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "libcst.Subscript",
    "libcst.metadata.expression_context_provider.ExpressionContext",
    "libcst.metadata.expression_context_provider.ExpressionContextVisitor",
    "slice",
    "slice.visit",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor.visit_Tuple": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "bool",
    "libcst.Tuple",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.metadata.expression_context_provider.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst.metadata.expression_context_provider.auto": {
  "data": {
   "shadows": "enum.auto"
  },
  "type": "import"
 },
 "libcst.metadata.expression_context_provider.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.metadata.full_repo_manager": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "libcst.metadata.full_repo_manager.Collection": {
  "data": {
   "shadows": "typing.Collection"
  },
  "type": "import"
 },
 "libcst.metadata.full_repo_manager.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "libcst.metadata.full_repo_manager.FullRepoManager": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "libcst.metadata.full_repo_manager.FullRepoManager.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "int",
    "list",
    "object",
    "pathlib.Path",
    "str",
    "typing.Collection",
    "typing.Dict",
    "typing.List",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.full_repo_manager.FullRepoManager.cache": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "object",
    "property",
    "str",
    "typing.Dict",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.full_repo_manager.FullRepoManager.get_cache_for_path": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "Exception",
    "object",
    "str",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.full_repo_manager.FullRepoManager.get_metadata_wrapper_for_path": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "libcst.metadata.wrapper.MetadataWrapper",
    "libcst.parse_module",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.full_repo_manager.FullRepoManager.resolve_cache": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "handler",
    "object",
    "str",
    "typing.Dict",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.full_repo_manager.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst.metadata.full_repo_manager.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "libcst.metadata.full_repo_manager.MetadataWrapper": {
  "data": {
   "shadows": "libcst.metadata.wrapper.MetadataWrapper"
  },
  "type": "import"
 },
 "libcst.metadata.full_repo_manager.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "libcst.metadata.full_repo_manager.ProviderT": {
  "data": {
   "shadows": "libcst.metadata.base_provider.ProviderT"
  },
  "type": "import"
 },
 "libcst.metadata.full_repo_manager.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "libcst.metadata.full_repo_manager.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.metadata.parent_node_provider": {
  "data": {},
  "type": "module"
 },
 "libcst.metadata.parent_node_provider.BatchableMetadataProvider": {
  "data": {
   "shadows": "libcst.metadata.base_provider.BatchableMetadataProvider"
  },
  "type": "import"
 },
 "libcst.metadata.parent_node_provider.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.metadata.parent_node_provider.ParentNodeProvider": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.metadata.base_provider.BatchableMetadataProvider"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.parent_node_provider.ParentNodeProvider.visit_Module": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "bool",
    "libcst.Module",
    "libcst.metadata.parent_node_provider.ParentNodeVisitor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.parent_node_provider.ParentNodeVisitor": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "libcst.CSTVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.parent_node_provider.ParentNodeVisitor.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.parent_node_provider.ParentNodeVisitor.on_leave": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.parent_node_provider.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.metadata.position_provider": {
  "data": {
   "symbols_in_volume": [
    "libcst.metadata.position_provider.re",
    "str",
    "typing.Pattern"
   ]
  },
  "type": "module"
 },
 "libcst.metadata.position_provider.BaseMetadataProvider": {
  "data": {
   "shadows": "libcst.metadata.base_provider.BaseMetadataProvider"
  },
  "type": "import"
 },
 "libcst.metadata.position_provider.CSTNode": {
  "data": {
   "shadows": "libcst._nodes.base.CSTNode"
  },
  "type": "import"
 },
 "libcst.metadata.position_provider.CodePosition": {
  "data": {
   "shadows": "libcst._position.CodePosition"
  },
  "type": "import"
 },
 "libcst.metadata.position_provider.CodeRange": {
  "data": {
   "shadows": "libcst._position.CodeRange"
  },
  "type": "import"
 },
 "libcst.metadata.position_provider.CodegenState": {
  "data": {
   "shadows": "libcst._nodes.internal.CodegenState"
  },
  "type": "import"
 },
 "libcst.metadata.position_provider.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "libcst.metadata.position_provider.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst.metadata.position_provider.Module": {
  "data": {
   "shadows": "libcst._nodes.module.Module"
  },
  "type": "import"
 },
 "libcst.metadata.position_provider.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.metadata.position_provider.Pattern": {
  "data": {
   "shadows": "typing.Pattern"
  },
  "type": "import"
 },
 "libcst.metadata.position_provider.PositionProvider": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "libcst._position.CodeRange",
    "libcst.metadata.base_provider.BaseMetadataProvider"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.position_provider.PositionProvider._gen_impl": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "libcst._nodes.module.Module",
    "libcst.metadata.position_provider.PositionProvidingCodegenState"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.position_provider.PositionProvidingCodegenState": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.position_provider.PositionProvidingCodegenState.record_syntactic_position": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "libcst._nodes.base.CSTNode",
    "libcst._position.CodePosition",
    "libcst._position.CodeRange",
    "typing.Iterator",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.position_provider.WhitespaceInclusivePositionProvider": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "libcst._position.CodeRange",
    "libcst.metadata.base_provider.BaseMetadataProvider"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.position_provider.WhitespaceInclusivePositionProvider._gen_impl": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "libcst._nodes.module.Module",
    "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "dataclasses.field",
    "int",
    "libcst._add_slots.add_slots",
    "libcst._nodes.internal.CodegenState",
    "libcst._position.CodePosition",
    "libcst._position.CodeRange",
    "libcst.metadata.base_provider.BaseMetadataProvider",
    "list",
    "str",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState._update_position": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState.add_indent_tokens": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState.add_token": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState.after_codegen": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "libcst._position.CodePosition",
    "libcst._position.CodeRange"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState.before_codegen": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "libcst._position.CodePosition"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.position_provider.add_slots": {
  "data": {
   "shadows": "libcst._add_slots.add_slots"
  },
  "type": "import"
 },
 "libcst.metadata.position_provider.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "libcst.metadata.position_provider.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "libcst.metadata.position_provider.field": {
  "data": {
   "shadows": "dataclasses.field"
  },
  "type": "import"
 },
 "libcst.metadata.position_provider.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "libcst.metadata.reentrant_codegen": {
  "data": {},
  "type": "module"
 },
 "libcst.metadata.reentrant_codegen.BaseMetadataProvider": {
  "data": {
   "shadows": "libcst.metadata.BaseMetadataProvider"
  },
  "type": "import"
 },
 "libcst.metadata.reentrant_codegen.BaseStatement": {
  "data": {
   "shadows": "libcst.BaseStatement"
  },
  "type": "import"
 },
 "libcst.metadata.reentrant_codegen.CSTNode": {
  "data": {
   "shadows": "libcst.CSTNode"
  },
  "type": "import"
 },
 "libcst.metadata.reentrant_codegen.CodegenPartial": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "libcst.metadata.reentrant_codegen.CodegenPartial.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "tuple",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen.CodegenPartial.get_modified_module_bytes": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "bytes",
    "libcst.BaseStatement"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen.CodegenPartial.get_modified_module_code": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "libcst.BaseStatement",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen.CodegenPartial.get_modified_statement_code": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "libcst.BaseStatement",
    "libcst._nodes.internal.CodegenState",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen.CodegenPartial.get_original_module_bytes": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "bytes"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen.CodegenPartial.get_original_module_code": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen.CodegenPartial.get_original_statement_code": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen.CodegenState": {
  "data": {
   "shadows": "libcst._nodes.internal.CodegenState"
  },
  "type": "import"
 },
 "libcst.metadata.reentrant_codegen.ExperimentalReentrantCodegenProvider": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "libcst.metadata.BaseMetadataProvider",
    "libcst.metadata.reentrant_codegen.CodegenPartial"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.reentrant_codegen.ExperimentalReentrantCodegenProvider._gen_impl": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "libcst.Module",
    "libcst.metadata.reentrant_codegen._ReentrantCodegenState"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst.metadata.reentrant_codegen.Module": {
  "data": {
   "shadows": "libcst.Module"
  },
  "type": "import"
 },
 "libcst.metadata.reentrant_codegen.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.metadata.reentrant_codegen.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst.metadata.reentrant_codegen._ReentrantCodegenState": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "dataclasses.field",
    "int",
    "libcst._add_slots.add_slots",
    "libcst._nodes.internal.CodegenState",
    "libcst.metadata.BaseMetadataProvider",
    "libcst.metadata.reentrant_codegen.CodegenPartial",
    "list",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.reentrant_codegen._ReentrantCodegenState.add_indent_tokens": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "libcst.metadata.reentrant_codegen._ReentrantCodegenState",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen._ReentrantCodegenState.add_token": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "len",
    "libcst.metadata.reentrant_codegen._ReentrantCodegenState",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen._ReentrantCodegenState.after_codegen": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "isinstance",
    "libcst.BaseStatement",
    "libcst.CSTNode",
    "libcst.metadata.reentrant_codegen.CodegenPartial"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen._ReentrantCodegenState.before_codegen": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "isinstance",
    "libcst.BaseStatement",
    "libcst.CSTNode"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen._ReentrantCodegenState.decrease_indent": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "len",
    "libcst.metadata.reentrant_codegen._ReentrantCodegenState",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen._ReentrantCodegenState.get_code": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen._ReentrantCodegenState.increase_indent": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "len",
    "libcst.metadata.reentrant_codegen._ReentrantCodegenState",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen._ReentrantCodegenState.pop_trailing_newline": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "len",
    "libcst.metadata.reentrant_codegen._ReentrantCodegenState",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen.add_slots": {
  "data": {
   "shadows": "libcst._add_slots.add_slots"
  },
  "type": "import"
 },
 "libcst.metadata.reentrant_codegen.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "libcst.metadata.reentrant_codegen.field": {
  "data": {
   "shadows": "dataclasses.field"
  },
  "type": "import"
 },
 "libcst.metadata.scope_provider": {
  "data": {
   "symbols_in_volume": [
    "libcst.AnnAssign",
    "libcst.AsName",
    "libcst.Assign",
    "libcst.AugAssign",
    "libcst.ClassDef",
    "libcst.CompFor",
    "libcst.For",
    "libcst.FunctionDef",
    "libcst.Global",
    "libcst.Import",
    "libcst.ImportFrom",
    "libcst.NamedExpr",
    "libcst.Nonlocal",
    "libcst.Parameters",
    "libcst.WithItem"
   ]
  },
  "type": "module"
 },
 "libcst.metadata.scope_provider.Access": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "int",
    "libcst.Attribute",
    "libcst.Name",
    "libcst._add_slots.add_slots",
    "typing.Set",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.scope_provider.Access.__hash__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "id",
    "int"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Access.__init__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "bool",
    "libcst.Name",
    "set"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Access._index": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Access.record_assignment": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Access.record_assignments": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Access.referents": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "property",
    "typing.Collection"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Accesses": {
  "data": {
   "lineno": 233
  },
  "type": "class"
 },
 "libcst.metadata.scope_provider.Accesses.__contains__": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "bool",
    "len",
    "libcst.CSTNode",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Accesses.__getitem__": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.metadata.scope_provider.Access",
    "set",
    "str",
    "typing.Collection",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Accesses.__init__": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "libcst.metadata.scope_provider.Access",
    "str",
    "typing.Collection",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Accesses.__iter__": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "libcst.metadata.scope_provider.Access",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Assignment": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "int",
    "libcst.CSTNode",
    "libcst.metadata.scope_provider.BaseAssignment"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.scope_provider.Assignment.__init__": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "int",
    "libcst.CSTNode",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Assignment._index": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Assignments": {
  "data": {
   "lineno": 211
  },
  "type": "class"
 },
 "libcst.metadata.scope_provider.Assignments.__contains__": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "bool",
    "len",
    "libcst.CSTNode",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Assignments.__getitem__": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.metadata.scope_provider.BaseAssignment",
    "set",
    "str",
    "typing.Collection",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Assignments.__init__": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "libcst.metadata.scope_provider.BaseAssignment",
    "str",
    "typing.Collection",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Assignments.__iter__": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "libcst.metadata.scope_provider.BaseAssignment",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.BaseAssignment": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "libcst.metadata.scope_provider.Access",
    "libcst.metadata.scope_provider.abc",
    "str",
    "typing.Set"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.scope_provider.BaseAssignment.__hash__": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "id",
    "int"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.BaseAssignment.__init__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.BaseAssignment._index": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.BaseAssignment.record_access": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "libcst.metadata.scope_provider.Access"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.BaseAssignment.record_accesses": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "libcst.metadata.scope_provider.Access",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.BaseAssignment.references": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "libcst.metadata.scope_provider.Access",
    "property",
    "typing.Collection"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.BatchableMetadataProvider": {
  "data": {
   "shadows": "libcst.metadata.base_provider.BatchableMetadataProvider"
  },
  "type": "import"
 },
 "libcst.metadata.scope_provider.BuiltinAssignment": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "libcst.metadata.scope_provider.BaseAssignment"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.scope_provider.ClassScope": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "libcst.metadata.scope_provider.LocalScope"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.scope_provider.ClassScope._contains_in_self_or_parent": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ClassScope._getitem_from_self_or_parent": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "libcst.metadata.scope_provider.BaseAssignment",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ClassScope._record_assignment_as_parent": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Collection": {
  "data": {
   "shadows": "typing.Collection"
  },
  "type": "import"
 },
 "libcst.metadata.scope_provider.ComprehensionScope": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "libcst.metadata.scope_provider.LocalScope"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.scope_provider.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "libcst.metadata.scope_provider.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "libcst.metadata.scope_provider.ExpressionContext": {
  "data": {
   "shadows": "libcst.metadata.expression_context_provider.ExpressionContext"
  },
  "type": "import"
 },
 "libcst.metadata.scope_provider.ExpressionContextProvider": {
  "data": {
   "shadows": "libcst.metadata.expression_context_provider.ExpressionContextProvider"
  },
  "type": "import"
 },
 "libcst.metadata.scope_provider.FunctionScope": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "libcst.metadata.scope_provider.LocalScope"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.scope_provider.GlobalScope": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "libcst.metadata.scope_provider.Scope"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.scope_provider.GlobalScope.__contains__": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "bool",
    "hasattr",
    "len",
    "libcst.metadata.scope_provider.builtins",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.GlobalScope.__getitem__": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "any",
    "hasattr",
    "isinstance",
    "libcst.metadata.scope_provider.BaseAssignment",
    "libcst.metadata.scope_provider.BuiltinAssignment",
    "libcst.metadata.scope_provider.builtins",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.GlobalScope.__init__": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "libcst.metadata.scope_provider.Scope",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.GlobalScope.record_global_overwrite": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.GlobalScope.record_nonlocal_overwrite": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "NotImplementedError",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "libcst.metadata.scope_provider.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst.metadata.scope_provider.LocalScope": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.metadata.scope_provider.Scope",
    "libcst.metadata.scope_provider.abc",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.scope_provider.LocalScope.__contains__": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "bool",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.LocalScope.__getitem__": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "libcst.metadata.scope_provider.BaseAssignment",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.LocalScope.__init__": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.metadata.scope_provider.Scope",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.LocalScope.record_assignment": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.LocalScope.record_global_overwrite": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.LocalScope.record_nonlocal_overwrite": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "libcst.metadata.scope_provider.MetadataDependent": {
  "data": {
   "shadows": "libcst._metadata_dependent.MetadataDependent"
  },
  "type": "import"
 },
 "libcst.metadata.scope_provider.MutableMapping": {
  "data": {
   "shadows": "typing.MutableMapping"
  },
  "type": "import"
 },
 "libcst.metadata.scope_provider.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.metadata.scope_provider.QualifiedName": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "libcst._add_slots.add_slots",
    "libcst.metadata.scope_provider.QualifiedNameSource",
    "str"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.scope_provider.QualifiedNameProvider": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": [
    "libcst.metadata.base_provider.BatchableMetadataProvider",
    "libcst.metadata.scope_provider.QualifiedName",
    "libcst.metadata.scope_provider.ScopeProvider",
    "typing.Collection"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.scope_provider.QualifiedNameProvider.has_name": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": [
    "any",
    "bool",
    "isinstance",
    "libcst.CSTNode",
    "libcst._metadata_dependent.MetadataDependent",
    "libcst.metadata.scope_provider.QualifiedName",
    "libcst.metadata.scope_provider.QualifiedNameProvider",
    "set",
    "staticmethod",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.QualifiedNameProvider.visit_Module": {
  "data": {
   "lineno": 1092,
   "symbols_in_volume": [
    "bool",
    "libcst.Module",
    "libcst.metadata.scope_provider.QualifiedNameVisitor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.QualifiedNameSource": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "enum.Enum",
    "enum.auto"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.scope_provider.QualifiedNameVisitor": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "libcst.CSTVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.scope_provider.QualifiedNameVisitor.__init__": {
  "data": {
   "lineno": 1042
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.QualifiedNameVisitor.on_visit": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "bool",
    "libcst.CSTNode",
    "libcst.metadata.scope_provider.ScopeProvider",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Scope": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "globals",
    "int",
    "libcst.metadata.scope_provider.Access",
    "libcst.metadata.scope_provider.BaseAssignment",
    "libcst.metadata.scope_provider.abc",
    "str",
    "typing.MutableMapping",
    "typing.Set"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.scope_provider.Scope.__contains__": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "bool",
    "libcst.metadata.scope_provider.abc",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Scope.__getitem__": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "libcst.metadata.scope_provider.BaseAssignment",
    "libcst.metadata.scope_provider.abc",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Scope.__hash__": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "id",
    "int"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Scope.__init__": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "collections.defaultdict",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Scope._contains_in_self_or_parent": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Scope._getitem_from_self_or_parent": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "libcst.metadata.scope_provider.BaseAssignment",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Scope._record_assignment_as_parent": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Scope.accesses": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "libcst.metadata.scope_provider.Accesses",
    "property"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Scope.assignments": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "libcst.metadata.scope_provider.Assignments",
    "property"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Scope.get_qualified_names_for": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "libcst.CSTNode",
    "libcst.Import",
    "libcst.ImportFrom",
    "libcst.helpers.get_full_name_for_node",
    "libcst.metadata.scope_provider.Assignment",
    "libcst.metadata.scope_provider.BuiltinAssignment",
    "libcst.metadata.scope_provider.QualifiedName",
    "libcst.metadata.scope_provider.QualifiedNameSource",
    "libcst.metadata.scope_provider._NameUtil",
    "range",
    "set",
    "str",
    "typing.Collection",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Scope.record_access": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "libcst.metadata.scope_provider.Access",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Scope.record_assignment": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.metadata.scope_provider.Assignment",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Scope.record_global_overwrite": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "libcst.metadata.scope_provider.abc",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Scope.record_nonlocal_overwrite": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "libcst.metadata.scope_provider.abc",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeProvider": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "libcst.metadata.base_provider.BatchableMetadataProvider",
    "libcst.metadata.expression_context_provider.ExpressionContextProvider",
    "libcst.metadata.scope_provider.Scope",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.scope_provider.ScopeProvider.visit_Module": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "bool",
    "libcst.Module",
    "libcst.metadata.scope_provider.ScopeVisitor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "libcst.CSTVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.__init__": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "int",
    "libcst.Annotation",
    "libcst.Attribute",
    "libcst.Call",
    "libcst.Subscript",
    "libcst.metadata.scope_provider.Access",
    "libcst.metadata.scope_provider.GlobalScope",
    "libcst.metadata.scope_provider.Scope",
    "set",
    "typing.List",
    "typing.Optional",
    "typing.Set",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor._handle_string_annotation": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "bool",
    "libcst.ConcatenatedString",
    "libcst.SimpleString",
    "libcst.parse_module",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor._new_scope": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "kind",
    "libcst.CSTNode",
    "libcst.metadata.scope_provider.LocalScope",
    "str",
    "typing.Iterator",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor._switch_scope": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "libcst.metadata.scope_provider.Scope",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor._visit_comp_alike": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "libcst.DictComp",
    "libcst.GeneratorExp",
    "libcst.ListComp",
    "libcst.SetComp",
    "libcst.metadata.scope_provider.ComprehensionScope",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor._visit_import_alike": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "libcst.Import",
    "libcst.ImportFrom",
    "libcst.ImportStar",
    "libcst.Name",
    "libcst.ensure_type",
    "libcst.metadata.scope_provider._gen_dotted_names",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.infer_accesses": {
  "data": {
   "lineno": 988,
   "symbols_in_volume": [
    "collections.defaultdict",
    "libcst.Name",
    "libcst.ensure_type",
    "libcst.metadata.scope_provider._gen_dotted_names",
    "set"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.leave_Annotation": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "libcst.Annotation"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.leave_Call": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "libcst.Call"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.leave_ClassDef_bases": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "libcst.ClassDef"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.leave_Subscript": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "libcst.Subscript"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.on_leave": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "isinstance",
    "libcst.CSTNode",
    "libcst.metadata.scope_provider._ASSIGNMENT_LIKE_NODES",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_Annotation": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "bool",
    "libcst.Annotation",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_Arg": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "bool",
    "libcst.Arg"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_Attribute": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "bool",
    "libcst.Attribute",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_Call": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "bool",
    "len",
    "libcst.Call",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_ClassDef": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "bool",
    "libcst.ClassDef",
    "libcst.helpers.get_full_name_for_node",
    "libcst.metadata.scope_provider.ClassScope",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_ClassDef_bases": {
  "data": {
   "lineno": 906,
   "symbols_in_volume": [
    "libcst.ClassDef"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_ConcatenatedString": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "bool",
    "libcst.ConcatenatedString",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_DictComp": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "bool",
    "libcst.DictComp",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_FunctionDef": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "bool",
    "libcst.FunctionDef",
    "libcst.helpers.get_full_name_for_node",
    "libcst.metadata.scope_provider.FunctionScope",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_GeneratorExp": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "bool",
    "libcst.GeneratorExp",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_Global": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "bool",
    "libcst.Global",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_Import": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "bool",
    "libcst.Import",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_ImportFrom": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "bool",
    "libcst.ImportFrom",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_Lambda": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "bool",
    "libcst.Lambda",
    "libcst.metadata.scope_provider.FunctionScope",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_ListComp": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "bool",
    "libcst.ListComp",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_Name": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "bool",
    "libcst.Name",
    "libcst.metadata.expression_context_provider.ExpressionContext.DEL",
    "libcst.metadata.expression_context_provider.ExpressionContext.LOAD",
    "libcst.metadata.expression_context_provider.ExpressionContext.STORE",
    "libcst.metadata.expression_context_provider.ExpressionContextProvider",
    "libcst.metadata.scope_provider.Access",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_Nonlocal": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "bool",
    "libcst.Nonlocal",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_Param": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "bool",
    "libcst.Param",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_SetComp": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "bool",
    "libcst.SetComp",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_SimpleString": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "bool",
    "libcst.SimpleString",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_Subscript": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "any",
    "bool",
    "libcst.Subscript",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "libcst.metadata.scope_provider.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "libcst.metadata.scope_provider.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "libcst.metadata.scope_provider.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst.metadata.scope_provider._ASSIGNMENT_LIKE_NODES": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "libcst.metadata.scope_provider._NameUtil": {
  "data": {
   "lineno": 272
  },
  "type": "class"
 },
 "libcst.metadata.scope_provider._NameUtil.find_qualified_name_for_import_alike": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "libcst.Import",
    "libcst.ImportFrom",
    "libcst.ImportStar",
    "libcst.helpers.get_full_name_for_node",
    "libcst.metadata.scope_provider.QualifiedName",
    "libcst.metadata.scope_provider.QualifiedNameSource",
    "range",
    "set",
    "staticmethod",
    "str",
    "typing.Set",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider._NameUtil.find_qualified_name_for_non_import": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "libcst.metadata.scope_provider.Assignment",
    "libcst.metadata.scope_provider.QualifiedName",
    "libcst.metadata.scope_provider.QualifiedNameSource",
    "reversed",
    "staticmethod",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider._NameUtil.get_name_for": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "isinstance",
    "libcst.CSTNode",
    "libcst.Call",
    "libcst.ClassDef",
    "libcst.FunctionDef",
    "libcst.Name",
    "libcst.Subscript",
    "libcst.metadata.scope_provider._NameUtil",
    "staticmethod",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider._gen_dotted_names": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "StopIteration",
    "isinstance",
    "libcst.Attribute",
    "libcst.Call",
    "libcst.Name",
    "next",
    "str",
    "typing.Iterator",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.scope_provider.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "libcst.metadata.scope_provider.add_slots": {
  "data": {
   "shadows": "libcst._add_slots.add_slots"
  },
  "type": "import"
 },
 "libcst.metadata.scope_provider.auto": {
  "data": {
   "shadows": "enum.auto"
  },
  "type": "import"
 },
 "libcst.metadata.scope_provider.builtins": {
  "data": {
   "shadows": "builtins"
  },
  "type": "import"
 },
 "libcst.metadata.scope_provider.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "libcst.metadata.scope_provider.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.metadata.scope_provider.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "libcst.metadata.scope_provider.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "libcst.metadata.scope_provider.ensure_type": {
  "data": {
   "shadows": "libcst.ensure_type"
  },
  "type": "import"
 },
 "libcst.metadata.scope_provider.get_full_name_for_node": {
  "data": {
   "shadows": "libcst.helpers.get_full_name_for_node"
  },
  "type": "import"
 },
 "libcst.metadata.span_provider": {
  "data": {},
  "type": "module"
 },
 "libcst.metadata.span_provider.BaseMetadataProvider": {
  "data": {
   "shadows": "libcst.metadata.base_provider.BaseMetadataProvider"
  },
  "type": "import"
 },
 "libcst.metadata.span_provider.ByteSpanPositionProvider": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "libcst.metadata.base_provider.BaseMetadataProvider",
    "libcst.metadata.span_provider.CodeSpan"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.span_provider.ByteSpanPositionProvider._gen_impl": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "libcst.Module",
    "libcst.metadata.span_provider.SpanProvidingCodegenState",
    "libcst.metadata.span_provider.byte_length_in_utf8"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.span_provider.CSTNode": {
  "data": {
   "shadows": "libcst.CSTNode"
  },
  "type": "import"
 },
 "libcst.metadata.span_provider.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst.metadata.span_provider.CodeSpan": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "int"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.span_provider.CodegenState": {
  "data": {
   "shadows": "libcst._nodes.internal.CodegenState"
  },
  "type": "import"
 },
 "libcst.metadata.span_provider.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "libcst.metadata.span_provider.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst.metadata.span_provider.Module": {
  "data": {
   "shadows": "libcst.Module"
  },
  "type": "import"
 },
 "libcst.metadata.span_provider.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.metadata.span_provider.SpanProvidingCodegenState": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "dataclasses.field",
    "int",
    "libcst._nodes.internal.CodegenState",
    "libcst.metadata.base_provider.BaseMetadataProvider",
    "libcst.metadata.span_provider.CodeSpan",
    "list",
    "str",
    "typing.Callable",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.span_provider.SpanProvidingCodegenState._update_position": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "get_length",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.span_provider.SpanProvidingCodegenState.add_indent_tokens": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.span_provider.SpanProvidingCodegenState.add_token": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.span_provider.SpanProvidingCodegenState.after_codegen": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.metadata.span_provider.CodeSpan"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.span_provider.SpanProvidingCodegenState.before_codegen": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "libcst.CSTNode"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.span_provider.SpanProvidingCodegenState.record_syntactic_position": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "libcst.CSTNode",
    "libcst.metadata.span_provider.CodeSpan",
    "typing.Iterator",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.span_provider.byte_length_in_utf8": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "int",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.span_provider.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "libcst.metadata.span_provider.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "libcst.metadata.span_provider.field": {
  "data": {
   "shadows": "dataclasses.field"
  },
  "type": "import"
 },
 "libcst.metadata.tests": {
  "data": {},
  "type": "module"
 },
 "libcst.metadata.tests.test_base_provider": {
  "data": {},
  "type": "module"
 },
 "libcst.metadata.tests.test_base_provider.BaseMetadataProviderTest": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_base_provider.BaseMetadataProviderTest.test_batchable_provider": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "SimpleProvider",
    "libcst.SimpleStatementLine",
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.wrapper._gen_batchable",
    "libcst.parse_module",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_base_provider.BaseMetadataProviderTest.test_batchable_provider.SimpleProvider": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "int",
    "libcst.metadata.BatchableMetadataProvider"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_base_provider.BaseMetadataProviderTest.test_batchable_provider.SimpleProvider.visit_Pass": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "libcst.Pass"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_base_provider.BaseMetadataProviderTest.test_batchable_provider.SimpleProvider.visit_Return": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "libcst.Return"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_base_provider.BaseMetadataProviderTest.test_visitor_provider": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "SimpleProvider",
    "libcst.SimpleStatementLine",
    "libcst.metadata.MetadataWrapper",
    "libcst.parse_module",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_base_provider.BaseMetadataProviderTest.test_visitor_provider.SimpleProvider": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "int",
    "libcst.metadata.VisitorMetadataProvider"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_base_provider.BaseMetadataProviderTest.test_visitor_provider.SimpleProvider.on_visit": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "bool",
    "libcst.CSTNode"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_base_provider.BatchableMetadataProvider": {
  "data": {
   "shadows": "libcst.metadata.BatchableMetadataProvider"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_base_provider.MetadataWrapper": {
  "data": {
   "shadows": "libcst.metadata.MetadataWrapper"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_base_provider.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_base_provider.VisitorMetadataProvider": {
  "data": {
   "shadows": "libcst.metadata.VisitorMetadataProvider"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_base_provider._gen_batchable": {
  "data": {
   "shadows": "libcst.metadata.wrapper._gen_batchable"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_base_provider.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_base_provider.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_base_provider.parse_module": {
  "data": {
   "shadows": "libcst.parse_module"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_expression_context_provider": {
  "data": {},
  "type": "module"
 },
 "libcst.metadata.tests.test_expression_context_provider.CSTVisitor": {
  "data": {
   "shadows": "libcst._visitors.CSTVisitor"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_expression_context_provider.DependentVisitor": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "libcst._visitors.CSTVisitor",
    "libcst.metadata.ExpressionContextProvider"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_expression_context_provider.DependentVisitor.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "libcst.metadata.ExpressionContext",
    "libcst.testing.utils.UnitTest",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.DependentVisitor.visit_Attribute": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "libcst.Attribute",
    "libcst.Module",
    "libcst.metadata.ExpressionContextProvider"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.DependentVisitor.visit_Call": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "KeyError",
    "libcst.Call",
    "libcst.metadata.ExpressionContextProvider"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.DependentVisitor.visit_List": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "libcst.List",
    "libcst.Module",
    "libcst.metadata.ExpressionContextProvider"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.DependentVisitor.visit_Name": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "libcst.Name",
    "libcst.metadata.ExpressionContextProvider"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.DependentVisitor.visit_StarredElement": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "libcst.Name",
    "libcst.StarredElement",
    "libcst.metadata.ExpressionContextProvider",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.DependentVisitor.visit_Subscript": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "libcst.Module",
    "libcst.Subscript",
    "libcst.metadata.ExpressionContextProvider"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.DependentVisitor.visit_Tuple": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "libcst.Module",
    "libcst.Tuple",
    "libcst.metadata.ExpressionContextProvider"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContext": {
  "data": {
   "shadows": "libcst.metadata.ExpressionContext"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProvider": {
  "data": {
   "shadows": "libcst.metadata.ExpressionContextProvider"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_annassign": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "libcst.metadata.ExpressionContext.LOAD",
    "libcst.metadata.ExpressionContext.STORE",
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.tests.test_expression_context_provider.DependentVisitor",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_assign_to_attribute": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "libcst.metadata.ExpressionContext.LOAD",
    "libcst.metadata.ExpressionContext.STORE",
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.tests.test_expression_context_provider.DependentVisitor",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_assign_with_subscript": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "libcst.metadata.ExpressionContext.LOAD",
    "libcst.metadata.ExpressionContext.STORE",
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.tests.test_expression_context_provider.DependentVisitor",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_augassign": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "libcst.metadata.ExpressionContext.LOAD",
    "libcst.metadata.ExpressionContext.STORE",
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.tests.test_expression_context_provider.DependentVisitor",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_class": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "libcst.metadata.ExpressionContext.LOAD",
    "libcst.metadata.ExpressionContext.STORE",
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.tests.test_expression_context_provider.DependentVisitor",
    "libcst.parse_module",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_del_simple": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "libcst.metadata.ExpressionContext.DEL",
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.tests.test_expression_context_provider.DependentVisitor",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_del_with_subscript": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "libcst.metadata.ExpressionContext.DEL",
    "libcst.metadata.ExpressionContext.LOAD",
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.tests.test_expression_context_provider.DependentVisitor",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_del_with_tuple": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "libcst.metadata.ExpressionContext.DEL",
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.tests.test_expression_context_provider.DependentVisitor",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_except_as": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "libcst.metadata.ExpressionContext.LOAD",
    "libcst.metadata.ExpressionContext.STORE",
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.tests.test_expression_context_provider.DependentVisitor",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_expressions_with_assign": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "libcst.metadata.ExpressionContext.LOAD",
    "libcst.metadata.ExpressionContext.STORE",
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.tests.test_expression_context_provider.DependentVisitor",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_for": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "libcst.metadata.ExpressionContext.LOAD",
    "libcst.metadata.ExpressionContext.STORE",
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.tests.test_expression_context_provider.DependentVisitor",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_function": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "libcst.metadata.ExpressionContext.LOAD",
    "libcst.metadata.ExpressionContext.STORE",
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.tests.test_expression_context_provider.DependentVisitor",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_invalid_type_for_context": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "libcst.metadata.ExpressionContext.LOAD",
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.tests.test_expression_context_provider.DependentVisitor",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_list_with_assign": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "libcst.metadata.ExpressionContext.LOAD",
    "libcst.metadata.ExpressionContext.STORE",
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.tests.test_expression_context_provider.DependentVisitor",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_nested_list_with_assign": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "libcst.metadata.ExpressionContext.LOAD",
    "libcst.metadata.ExpressionContext.STORE",
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.tests.test_expression_context_provider.DependentVisitor",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_nested_tuple_with_assign": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "libcst.metadata.ExpressionContext.LOAD",
    "libcst.metadata.ExpressionContext.STORE",
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.tests.test_expression_context_provider.DependentVisitor",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_simple_assign": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "libcst.metadata.ExpressionContext.LOAD",
    "libcst.metadata.ExpressionContext.STORE",
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.tests.test_expression_context_provider.DependentVisitor",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_simple_load": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "libcst.metadata.ExpressionContext.LOAD",
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.tests.test_expression_context_provider.DependentVisitor",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_starred_element_with_assign": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "libcst.metadata.ExpressionContext.LOAD",
    "libcst.metadata.ExpressionContext.STORE",
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.tests.test_expression_context_provider.DependentVisitor",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_tuple_with_assign": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "libcst.metadata.ExpressionContext.LOAD",
    "libcst.metadata.ExpressionContext.STORE",
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.tests.test_expression_context_provider.DependentVisitor",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_with_as": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "libcst.metadata.ExpressionContext.LOAD",
    "libcst.metadata.ExpressionContext.STORE",
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.tests.test_expression_context_provider.DependentVisitor",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.MetadataWrapper": {
  "data": {
   "shadows": "libcst.metadata.MetadataWrapper"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_expression_context_provider.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_expression_context_provider.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_expression_context_provider.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_expression_context_provider.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_expression_context_provider.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_expression_context_provider.parse_module": {
  "data": {
   "shadows": "libcst.parse_module"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_full_repo_manager": {
  "data": {
   "symbols_in_volume": [
    "pathlib.Path",
    "str"
   ]
  },
  "type": "module"
 },
 "libcst.metadata.tests.test_full_repo_manager.FullRepoManager": {
  "data": {
   "shadows": "libcst.metadata.full_repo_manager.FullRepoManager"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_full_repo_manager.FullRepoManagerTest": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_full_repo_manager.FullRepoManagerTest.test_get_full_repo_cache": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "libcst.metadata.full_repo_manager.FullRepoManager",
    "libcst.metadata.tests.test_full_repo_manager.json",
    "libcst.metadata.type_inference_provider.TypeInferenceProvider",
    "pathlib.Path",
    "unittest.mock.Mock",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_full_repo_manager.FullRepoManagerTest.test_get_metadata_wrapper_with_empty_cache": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "libcst.metadata.full_repo_manager.FullRepoManager",
    "libcst.metadata.type_inference_provider.TypeInferenceProvider",
    "unittest.mock.Mock",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_full_repo_manager.FullRepoManagerTest.test_get_metadata_wrapper_with_invalid_path": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "Exception",
    "libcst.metadata.full_repo_manager.FullRepoManager",
    "libcst.metadata.type_inference_provider.TypeInferenceProvider",
    "unittest.mock.Mock",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_full_repo_manager.FullRepoManagerTest.test_get_metadata_wrapper_with_patched_cache": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "libcst.metadata.full_repo_manager.FullRepoManager",
    "libcst.metadata.tests.test_full_repo_manager.json",
    "libcst.metadata.tests.test_type_inference_provider._test_simple_class_helper",
    "libcst.metadata.type_inference_provider.TypeInferenceProvider",
    "pathlib.Path",
    "unittest.mock.Mock",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_full_repo_manager.Mock": {
  "data": {
   "shadows": "unittest.mock.Mock"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_full_repo_manager.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_full_repo_manager.TypeInferenceProvider": {
  "data": {
   "shadows": "libcst.metadata.type_inference_provider.TypeInferenceProvider"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_full_repo_manager.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_full_repo_manager._test_simple_class_helper": {
  "data": {
   "shadows": "libcst.metadata.tests.test_type_inference_provider._test_simple_class_helper"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_full_repo_manager.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_full_repo_manager.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_metadata_provider": {
  "data": {},
  "type": "module"
 },
 "libcst.metadata.tests.test_metadata_provider.BatchableMetadataProvider": {
  "data": {
   "shadows": "libcst.metadata.BatchableMetadataProvider"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_metadata_provider.CSTTransformer": {
  "data": {
   "shadows": "libcst._visitors.CSTTransformer"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataException": {
  "data": {
   "shadows": "libcst._exceptions.MetadataException"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_batchable_provider_inherited_metadata": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "VisitorA",
    "libcst.metadata.MetadataWrapper",
    "libcst.parse_module",
    "unittest.mock.Mock"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_batchable_provider_inherited_metadata.ProviderA": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "int",
    "libcst.metadata.VisitorMetadataProvider"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_batchable_provider_inherited_metadata.ProviderA.visit_Pass": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "libcst.Pass"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_batchable_provider_inherited_metadata.ProviderB": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "int",
    "libcst.metadata.BatchableMetadataProvider"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_batchable_provider_inherited_metadata.ProviderC": {
  "data": {
   "lineno": 250
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_batchable_provider_inherited_metadata.ProviderC.visit_Pass": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "libcst.Pass"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_batchable_provider_inherited_metadata.VisitorA": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "libcst._visitors.CSTTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_batched_provider": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "DependentVisitor",
    "libcst.metadata.MetadataWrapper",
    "libcst.parse_module",
    "unittest.mock.Mock"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_batched_provider.BatchedProviderA": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "int",
    "libcst.metadata.BatchableMetadataProvider"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_batched_provider.BatchedProviderA.visit_Pass": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "libcst.Pass"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_batched_provider.BatchedProviderB": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "libcst.metadata.BatchableMetadataProvider",
    "str"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_batched_provider.BatchedProviderB.visit_Pass": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "libcst.Pass"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_batched_provider.DependentVisitor": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "libcst._visitors.CSTTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_batched_provider.DependentVisitor.visit_Pass": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "libcst.Pass"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_circular_dependency": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "BadVisitor",
    "libcst.Module",
    "libcst._exceptions.MetadataException",
    "libcst.metadata.MetadataWrapper"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_circular_dependency.BadVisitor": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "libcst._visitors.CSTTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_circular_dependency.ProviderA": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "libcst.metadata.VisitorMetadataProvider",
    "str"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_inherited_metadata": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "VisitorB",
    "libcst.metadata.MetadataWrapper",
    "libcst.parse_module",
    "unittest.mock.Mock"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_inherited_metadata.SimpleProvider": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "int",
    "libcst.metadata.VisitorMetadataProvider"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_inherited_metadata.SimpleProvider.visit_Pass": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "libcst.Pass"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_inherited_metadata.VisitorA": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "libcst._visitors.CSTTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_inherited_metadata.VisitorB": {
  "data": {
   "lineno": 193
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_inherited_metadata.VisitorB.visit_Pass": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "libcst.Pass"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_mixed_providers": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "DependentVisitor",
    "libcst.metadata.MetadataWrapper",
    "libcst.parse_module",
    "unittest.mock.Mock"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_mixed_providers.BatchedProviderA": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "int",
    "libcst.metadata.BatchableMetadataProvider"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_mixed_providers.BatchedProviderA.visit_Pass": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "libcst.Pass"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_mixed_providers.BatchedProviderB": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "int",
    "libcst.metadata.BatchableMetadataProvider"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_mixed_providers.BatchedProviderB.visit_Pass": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "libcst.Pass"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_mixed_providers.BatchedProviderC": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "int",
    "libcst.metadata.BatchableMetadataProvider"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_mixed_providers.BatchedProviderC.visit_Pass": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "libcst.Pass"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_mixed_providers.DependentProvider": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "int",
    "libcst.metadata.VisitorMetadataProvider"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_mixed_providers.DependentProvider.on_visit": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "bool",
    "libcst.CSTNode",
    "sum"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_mixed_providers.DependentVisitor": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "libcst._visitors.CSTTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_mixed_providers.DependentVisitor.visit_Module": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "libcst.Module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_mixed_providers.DependentVisitor.visit_Pass": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "libcst.Pass"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_mixed_providers.SimpleProvider": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "int",
    "libcst.metadata.VisitorMetadataProvider"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_mixed_providers.SimpleProvider.visit_Pass": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "libcst.CSTNode"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_provider_inherited_metadata": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "Visitor",
    "libcst.metadata.MetadataWrapper",
    "libcst.parse_module",
    "unittest.mock.Mock"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_provider_inherited_metadata.ProviderA": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "int",
    "libcst.metadata.VisitorMetadataProvider"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_provider_inherited_metadata.ProviderA.visit_Pass": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "libcst.Pass"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_provider_inherited_metadata.ProviderB": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "int",
    "libcst.metadata.VisitorMetadataProvider"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_provider_inherited_metadata.ProviderC": {
  "data": {
   "lineno": 219
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_provider_inherited_metadata.ProviderC.visit_Pass": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "libcst.Pass"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_provider_inherited_metadata.Visitor": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "libcst._visitors.CSTTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_self_metadata": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "AVisitor",
    "libcst.Module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_self_metadata.AVisitor": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "libcst._visitors.CSTTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_self_metadata.ProviderA": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "bool",
    "libcst.metadata.VisitorMetadataProvider"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_self_metadata.ProviderA.on_leave": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "type"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_self_metadata.ProviderA.on_visit": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "bool",
    "libcst.CSTNode"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_undeclared_metadata": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "AVisitor",
    "KeyError",
    "libcst.Module",
    "libcst.metadata.MetadataWrapper"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_undeclared_metadata.AVisitor": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "libcst._visitors.CSTTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_undeclared_metadata.AVisitor.on_visit": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "bool",
    "libcst.CSTNode"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_undeclared_metadata.ProviderA": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "bool",
    "libcst.metadata.VisitorMetadataProvider"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_undeclared_metadata.ProviderB": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "bool",
    "libcst.metadata.VisitorMetadataProvider"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_unset_metadata": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "AVisitor",
    "KeyError",
    "libcst.Module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_unset_metadata.AVisitor": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "libcst._visitors.CSTTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_unset_metadata.AVisitor.on_visit": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "bool",
    "libcst.CSTNode"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_unset_metadata.ProviderA": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "bool",
    "libcst.metadata.VisitorMetadataProvider"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_visitor_provider": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "DependentVisitor",
    "libcst.metadata.MetadataWrapper",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_visitor_provider.DependentProvider": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "int",
    "libcst.metadata.VisitorMetadataProvider"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_visitor_provider.DependentProvider.on_visit": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "bool",
    "libcst.CSTNode"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_visitor_provider.DependentVisitor": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "libcst._visitors.CSTTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_visitor_provider.DependentVisitor.visit_Module": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "libcst.Module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_visitor_provider.DependentVisitor.visit_Pass": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "libcst.Pass"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_visitor_provider.SimpleProvider": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "int",
    "libcst.metadata.VisitorMetadataProvider"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_visitor_provider.SimpleProvider.on_visit": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "bool",
    "libcst.CSTNode"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataWrapper": {
  "data": {
   "shadows": "libcst.metadata.MetadataWrapper"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_metadata_provider.Mock": {
  "data": {
   "shadows": "unittest.mock.Mock"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_metadata_provider.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_metadata_provider.VisitorMetadataProvider": {
  "data": {
   "shadows": "libcst.metadata.VisitorMetadataProvider"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_metadata_provider.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_metadata_provider.parse_module": {
  "data": {
   "shadows": "libcst.parse_module"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_metadata_wrapper": {
  "data": {},
  "type": "module"
 },
 "libcst.metadata.tests.test_metadata_wrapper.BatchableMetadataProvider": {
  "data": {
   "shadows": "libcst.metadata.BatchableMetadataProvider"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_metadata_wrapper.MetadataWrapper": {
  "data": {
   "shadows": "libcst.metadata.MetadataWrapper"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_metadata_wrapper.MetadataWrapperTest": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_wrapper.MetadataWrapperTest.test_copies_tree": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst.metadata.MetadataWrapper",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_wrapper.MetadataWrapperTest.test_equality_by_identity": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "libcst.metadata.MetadataWrapper",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_wrapper.MetadataWrapperTest.test_hash_by_identity": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "hash",
    "libcst.metadata.MetadataWrapper",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_wrapper.MetadataWrapperTest.test_metadata_cache": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "Exception",
    "libcst.SimpleStatementLine",
    "libcst.ensure_type",
    "libcst.metadata.MetadataWrapper",
    "libcst.parse_module",
    "object"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_wrapper.MetadataWrapperTest.test_metadata_cache.DummyMetadataProvider": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "libcst.metadata.BatchableMetadataProvider",
    "tuple"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_wrapper.MetadataWrapperTest.test_metadata_cache.SimpleCacheMetadataProvider": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "libcst.metadata.BatchableMetadataProvider",
    "object",
    "tuple"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_wrapper.MetadataWrapperTest.test_metadata_cache.SimpleCacheMetadataProvider.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "object",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_wrapper.MetadataWrapperTest.test_metadata_cache.SimpleCacheMetadataProvider.visit_Pass": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "bool",
    "libcst.Pass",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_wrapper.MetadataWrapperTest.test_unsafe_skip_copy": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "libcst.metadata.MetadataWrapper",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_wrapper.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_metadata_wrapper.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_metadata_wrapper.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_parent_node_provider": {
  "data": {},
  "type": "module"
 },
 "libcst.metadata.tests.test_parent_node_provider.DependentVisitor": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "libcst.CSTVisitor",
    "libcst.metadata.ParentNodeProvider"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_parent_node_provider.DependentVisitor.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_parent_node_provider.DependentVisitor.on_visit": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "bool",
    "libcst.CSTNode",
    "libcst.metadata.ParentNodeProvider"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_parent_node_provider.MetadataWrapper": {
  "data": {
   "shadows": "libcst.metadata.MetadataWrapper"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_parent_node_provider.ParentNodeProvider": {
  "data": {
   "shadows": "libcst.metadata.ParentNodeProvider"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_parent_node_provider.ParentNodeProviderTest": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_parent_node_provider.ParentNodeProviderTest.test_parent_node_provier": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.tests.test_parent_node_provider.DependentVisitor",
    "libcst.parse_module",
    "libcst.testing.utils.data_provider",
    "str",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_parent_node_provider.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_parent_node_provider.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_parent_node_provider.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_parent_node_provider.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_position_provider": {
  "data": {},
  "type": "module"
 },
 "libcst.metadata.tests.test_position_provider.BatchableCSTVisitor": {
  "data": {
   "shadows": "libcst._batched_visitor.BatchableCSTVisitor"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_position_provider.CSTVisitor": {
  "data": {
   "shadows": "libcst._visitors.CSTVisitor"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_position_provider.CodeRange": {
  "data": {
   "shadows": "libcst.metadata.CodeRange"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_position_provider.MetadataWrapper": {
  "data": {
   "shadows": "libcst.metadata.MetadataWrapper"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_position_provider.PositionProvider": {
  "data": {
   "shadows": "libcst.metadata.PositionProvider"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_position_provider.PositionProviderTest": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_position_provider.PositionProviderTest.test_batchable_provider": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "ABatchable",
    "libcst.metadata.MetadataWrapper",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_position_provider.PositionProviderTest.test_batchable_provider.ABatchable": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "libcst._batched_visitor.BatchableCSTVisitor",
    "libcst.metadata.PositionProvider"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_position_provider.PositionProviderTest.test_batchable_provider.ABatchable.visit_Pass": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "libcst.Pass",
    "libcst.metadata.CodeRange",
    "libcst.metadata.PositionProvider"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_position_provider.PositionProviderTest.test_equal_range": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "EqualPositionVisitor",
    "libcst.metadata.CodeRange",
    "libcst.metadata.MetadataWrapper",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_position_provider.PositionProviderTest.test_equal_range.EqualPositionVisitor": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "libcst._visitors.CSTVisitor",
    "libcst.metadata.PositionProvider"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_position_provider.PositionProviderTest.test_equal_range.EqualPositionVisitor.visit_Equal": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "libcst.Equal",
    "libcst.metadata.PositionProvider"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_position_provider.PositionProviderTest.test_equal_range.EqualPositionVisitor.visit_NotEqual": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "libcst.NotEqual",
    "libcst.metadata.PositionProvider"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_position_provider.PositionProviderTest.test_visitor_provider": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "DependentVisitor",
    "libcst.metadata.MetadataWrapper",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_position_provider.PositionProviderTest.test_visitor_provider.DependentVisitor": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "libcst._visitors.CSTVisitor",
    "libcst.metadata.PositionProvider"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_position_provider.PositionProviderTest.test_visitor_provider.DependentVisitor.visit_Pass": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "libcst.Pass",
    "libcst.metadata.CodeRange",
    "libcst.metadata.PositionProvider"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_position_provider.PositionProvidingCodegenState": {
  "data": {
   "shadows": "libcst.metadata.position_provider.PositionProvidingCodegenState"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_position_provider.PositionProvidingCodegenStateTest": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_position_provider.PositionProvidingCodegenStateTest.test_codegen_add_indent_tokens": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "libcst.metadata.WhitespaceInclusivePositionProvider",
    "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState",
    "libcst.metadata.tests.test_position_provider.position"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_position_provider.PositionProvidingCodegenStateTest.test_codegen_add_newline": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "libcst.metadata.WhitespaceInclusivePositionProvider",
    "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState",
    "libcst.metadata.tests.test_position_provider.position"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_position_provider.PositionProvidingCodegenStateTest.test_codegen_add_token": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "libcst.metadata.WhitespaceInclusivePositionProvider",
    "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState",
    "libcst.metadata.tests.test_position_provider.position"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_position_provider.PositionProvidingCodegenStateTest.test_codegen_add_tokens": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "libcst.metadata.WhitespaceInclusivePositionProvider",
    "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState",
    "libcst.metadata.tests.test_position_provider.position"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_position_provider.PositionProvidingCodegenStateTest.test_codegen_decrease_indent": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "libcst.metadata.WhitespaceInclusivePositionProvider",
    "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState",
    "libcst.metadata.tests.test_position_provider.position"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_position_provider.PositionProvidingCodegenStateTest.test_codegen_initial_position": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "libcst.metadata.WhitespaceInclusivePositionProvider",
    "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState",
    "libcst.metadata.tests.test_position_provider.position"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_position_provider.PositionProvidingCodegenStateTest.test_position": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "libcst.Pass",
    "libcst.metadata.CodeRange",
    "libcst.metadata.PositionProvider",
    "libcst.metadata.position_provider.PositionProvidingCodegenState"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_position_provider.PositionProvidingCodegenStateTest.test_whitespace_inclusive_position": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "libcst.Pass",
    "libcst.metadata.CodeRange",
    "libcst.metadata.WhitespaceInclusivePositionProvider",
    "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_position_provider.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_position_provider.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_position_provider.WhitespaceInclusivePositionProvider": {
  "data": {
   "shadows": "libcst.metadata.WhitespaceInclusivePositionProvider"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_position_provider.WhitespaceInclusivePositionProvidingCodegenState": {
  "data": {
   "shadows": "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_position_provider.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_position_provider.parse_module": {
  "data": {
   "shadows": "libcst.parse_module"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_position_provider.position": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "int",
    "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_qualified_name_provider": {
  "data": {},
  "type": "module"
 },
 "libcst.metadata.tests.test_qualified_name_provider.Collection": {
  "data": {
   "shadows": "typing.Collection"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_qualified_name_provider.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_qualified_name_provider.MetadataWrapper": {
  "data": {
   "shadows": "libcst.metadata.MetadataWrapper"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_qualified_name_provider.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_qualified_name_provider.QualifiedName": {
  "data": {
   "shadows": "libcst.metadata.QualifiedName"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_qualified_name_provider.QualifiedNameProvider": {
  "data": {
   "shadows": "libcst.metadata.QualifiedNameProvider"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_qualified_name_provider.QualifiedNameSource": {
  "data": {
   "shadows": "libcst.metadata.QualifiedNameSource"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_qualified_name_provider.ScopeProviderTest": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_qualified_name_provider.ScopeProviderTest.test_comprehension": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "libcst.ClassDef",
    "libcst.Expr",
    "libcst.FunctionDef",
    "libcst.ListComp",
    "libcst.SimpleStatementLine",
    "libcst.ensure_type",
    "libcst.metadata.QualifiedName",
    "libcst.metadata.QualifiedNameSource.LOCAL",
    "libcst.metadata.tests.test_qualified_name_provider.get_qualified_name_metadata_provider"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_qualified_name_provider.ScopeProviderTest.test_has_name_helper": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "TestVisitor",
    "libcst.metadata.MetadataWrapper",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_qualified_name_provider.ScopeProviderTest.test_has_name_helper.TestVisitor": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "libcst.CSTVisitor",
    "libcst.metadata.QualifiedNameProvider"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_qualified_name_provider.ScopeProviderTest.test_has_name_helper.TestVisitor.__init__": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_qualified_name_provider.ScopeProviderTest.test_has_name_helper.TestVisitor.visit_Call": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "bool",
    "libcst.Call",
    "libcst.metadata.QualifiedName",
    "libcst.metadata.QualifiedNameProvider.has_name",
    "libcst.metadata.QualifiedNameSource.IMPORT",
    "libcst.metadata.QualifiedNameSource.LOCAL",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_qualified_name_provider.ScopeProviderTest.test_multiple_assignments": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "libcst.Expr",
    "libcst.SimpleStatementLine",
    "libcst.ensure_type",
    "libcst.metadata.QualifiedName",
    "libcst.metadata.QualifiedNameSource.IMPORT",
    "libcst.metadata.tests.test_qualified_name_provider.get_qualified_name_metadata_provider"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_qualified_name_provider.ScopeProviderTest.test_name_in_attribute": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "eval",
    "libcst.Attribute",
    "libcst.Expr",
    "libcst.SimpleStatementLine",
    "libcst.ensure_type",
    "libcst.metadata.QualifiedName",
    "libcst.metadata.QualifiedNameSource.LOCAL",
    "libcst.metadata.tests.test_qualified_name_provider.get_qualified_name_metadata_provider",
    "set"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_qualified_name_provider.ScopeProviderTest.test_nested_qualified_names": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "libcst.ClassDef",
    "libcst.Expr",
    "libcst.FunctionDef",
    "libcst.SimpleStatementLine",
    "libcst.ensure_type",
    "libcst.metadata.QualifiedName",
    "libcst.metadata.QualifiedNameSource.LOCAL",
    "libcst.metadata.tests.test_qualified_name_provider.get_qualified_name_metadata_provider"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_qualified_name_provider.ScopeProviderTest.test_repeated_values_in_qualified_name": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "libcst.AnnAssign",
    "libcst.Annotation",
    "libcst.Attribute",
    "libcst.ClassDef",
    "libcst.IndentedBlock",
    "libcst.SimpleStatementLine",
    "libcst.ensure_type",
    "libcst.metadata.QualifiedName",
    "libcst.metadata.QualifiedNameSource.IMPORT",
    "libcst.metadata.tests.test_qualified_name_provider.get_qualified_name_metadata_provider"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_qualified_name_provider.ScopeProviderTest.test_simple_qualified_names": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "libcst.Annotation",
    "libcst.Assign",
    "libcst.ClassDef",
    "libcst.Expr",
    "libcst.FunctionDef",
    "libcst.SimpleStatementLine",
    "libcst.ensure_type",
    "libcst.metadata.QualifiedName",
    "libcst.metadata.QualifiedNameSource.IMPORT",
    "libcst.metadata.QualifiedNameSource.LOCAL",
    "libcst.metadata.tests.test_qualified_name_provider.get_qualified_name_metadata_provider",
    "set"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_qualified_name_provider.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_qualified_name_provider.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_qualified_name_provider.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_qualified_name_provider.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_qualified_name_provider.ensure_type": {
  "data": {
   "shadows": "libcst.ensure_type"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_qualified_name_provider.get_qualified_name_metadata_provider": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Module",
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.QualifiedName",
    "libcst.metadata.QualifiedNameProvider",
    "libcst.parse_module",
    "str",
    "textwrap.dedent",
    "typing.Collection",
    "typing.Mapping",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_reentrant_codegen": {
  "data": {},
  "type": "module"
 },
 "libcst.metadata.tests.test_reentrant_codegen.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_reentrant_codegen.ExperimentalReentrantCodegenProvider": {
  "data": {
   "shadows": "libcst.metadata.ExperimentalReentrantCodegenProvider"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_reentrant_codegen.ExperimentalReentrantCodegenProviderTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_reentrant_codegen.ExperimentalReentrantCodegenProviderTest.test_byte_conversion": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "libcst.PartialParserConfig",
    "libcst.metadata.ExperimentalReentrantCodegenProvider",
    "libcst.metadata.MetadataWrapper",
    "libcst.parse_module",
    "libcst.parse_statement"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_reentrant_codegen.ExperimentalReentrantCodegenProviderTest.test_provider": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "libcst.BaseStatement",
    "libcst.CSTNode",
    "libcst.Module",
    "libcst.metadata.ExperimentalReentrantCodegenProvider",
    "libcst.metadata.MetadataWrapper",
    "libcst.parse_module",
    "libcst.parse_statement",
    "libcst.testing.utils.data_provider",
    "old_node",
    "str",
    "textwrap.dedent",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_reentrant_codegen.MetadataWrapper": {
  "data": {
   "shadows": "libcst.metadata.MetadataWrapper"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_reentrant_codegen.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_reentrant_codegen.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_reentrant_codegen.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_reentrant_codegen.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_scope_provider": {
  "data": {},
  "type": "module"
 },
 "libcst.metadata.tests.test_scope_provider.Assignment": {
  "data": {
   "shadows": "libcst.metadata.scope_provider.Assignment"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_scope_provider.ClassScope": {
  "data": {
   "shadows": "libcst.metadata.scope_provider.ClassScope"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_scope_provider.ComprehensionScope": {
  "data": {
   "shadows": "libcst.metadata.scope_provider.ComprehensionScope"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_scope_provider.DependentVisitor": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "libcst.CSTVisitor",
    "libcst.metadata.scope_provider.ScopeProvider"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_scope_provider.FunctionScope": {
  "data": {
   "shadows": "libcst.metadata.scope_provider.FunctionScope"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_scope_provider.GlobalScope": {
  "data": {
   "shadows": "libcst.metadata.scope_provider.GlobalScope"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_scope_provider.LocalScope": {
  "data": {
   "shadows": "libcst.metadata.scope_provider.LocalScope"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_scope_provider.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_scope_provider.MetadataWrapper": {
  "data": {
   "shadows": "libcst.metadata.MetadataWrapper"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_scope_provider.QualifiedName": {
  "data": {
   "shadows": "libcst.metadata.scope_provider.QualifiedName"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_scope_provider.QualifiedNameSource": {
  "data": {
   "shadows": "libcst.metadata.scope_provider.QualifiedNameSource"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_scope_provider.Scope": {
  "data": {
   "shadows": "libcst.metadata.scope_provider.Scope"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProvider": {
  "data": {
   "shadows": "libcst.metadata.scope_provider.ScopeProvider"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_accesses": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "len",
    "libcst.Call",
    "libcst.Expr",
    "libcst.FunctionDef",
    "libcst.SimpleStatementLine",
    "libcst.ensure_type",
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.scope_provider.FunctionScope",
    "libcst.metadata.scope_provider.GlobalScope",
    "libcst.metadata.tests.test_scope_provider.DependentVisitor",
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider",
    "libcst.parse_module",
    "list"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_annotation_access": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "len",
    "libcst.ImportFrom",
    "libcst.SimpleStatementLine",
    "libcst.ensure_type",
    "libcst.metadata.scope_provider.Assignment",
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider",
    "list"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_assignments_and_accesses": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "len",
    "libcst.Assign",
    "libcst.Expr",
    "libcst.FunctionDef",
    "libcst.IndentedBlock",
    "libcst.SimpleStatementLine",
    "libcst.Tuple",
    "libcst.ensure_type",
    "libcst.metadata.scope_provider.Assignment",
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider",
    "list",
    "set",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_attribute_of_function_call": {
  "data": {
   "lineno": 1298,
   "symbols_in_volume": [
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_attribute_of_subscript_called": {
  "data": {
   "lineno": 1301,
   "symbols_in_volume": [
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_builtins": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "len",
    "libcst.FunctionDef",
    "libcst.ensure_type",
    "libcst.metadata.scope_provider.FunctionScope",
    "libcst.metadata.scope_provider.GlobalScope",
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider",
    "libcst.testing.utils.data_provider",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_class_scope": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "len",
    "libcst.ClassDef",
    "libcst.FunctionDef",
    "libcst.ensure_type",
    "libcst.metadata.scope_provider.Assignment",
    "libcst.metadata.scope_provider.ClassScope",
    "libcst.metadata.scope_provider.FunctionScope",
    "libcst.metadata.scope_provider.GlobalScope",
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider",
    "list",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_comprehension_scope": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "libcst.DictComp",
    "libcst.Expr",
    "libcst.GeneratorExp",
    "libcst.ListComp",
    "libcst.SetComp",
    "libcst.SimpleStatementLine",
    "libcst.ensure_type",
    "libcst.metadata.scope_provider.ComprehensionScope",
    "libcst.metadata.scope_provider.GlobalScope",
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_contains_is_read_only": {
  "data": {
   "lineno": 1274,
   "symbols_in_volume": [
    "libcst.Name",
    "libcst.metadata.scope_provider.ClassScope",
    "libcst.metadata.scope_provider.ComprehensionScope",
    "libcst.metadata.scope_provider.FunctionScope",
    "libcst.metadata.scope_provider.GlobalScope",
    "libcst.metadata.scope_provider.LocalScope",
    "list",
    "s"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_del_context_names": {
  "data": {
   "lineno": 1205,
   "symbols_in_volume": [
    "len",
    "libcst.Assign",
    "libcst.AssignTarget",
    "libcst.Attribute",
    "libcst.Del",
    "libcst.SimpleStatementLine",
    "libcst.Subscript",
    "libcst.ensure_type",
    "libcst.metadata.scope_provider.Assignment",
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider",
    "list",
    "set",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_dotted_import_access": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "libcst.Attribute",
    "libcst.Call",
    "libcst.Expr",
    "libcst.SimpleStatementLine",
    "libcst.ensure_type",
    "libcst.metadata.scope_provider.Assignment",
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider",
    "list",
    "set",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_dotted_import_with_call_access": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "len",
    "libcst.Attribute",
    "libcst.Call",
    "libcst.Expr",
    "libcst.SimpleStatementLine",
    "libcst.ensure_type",
    "libcst.metadata.scope_provider.Assignment",
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider",
    "list",
    "set",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_except_handler": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "libcst.AsName",
    "libcst.Try",
    "libcst.ensure_type",
    "libcst.metadata.scope_provider.Assignment",
    "libcst.metadata.scope_provider.GlobalScope",
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider",
    "list",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_fstring_accesses": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "libcst.ImportFrom",
    "libcst.SimpleStatementLine",
    "libcst.ensure_type",
    "libcst.metadata.scope_provider.Assignment",
    "libcst.metadata.scope_provider.GlobalScope",
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider",
    "list"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_func_param_scope": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "libcst.Annotation",
    "libcst.BaseExpression",
    "libcst.FunctionDef",
    "libcst.Param",
    "libcst.ensure_type",
    "libcst.metadata.scope_provider.Assignment",
    "libcst.metadata.scope_provider.FunctionScope",
    "libcst.metadata.scope_provider.GlobalScope",
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider",
    "list",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_function_scope": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "libcst.FunctionDef",
    "libcst.ensure_type",
    "libcst.metadata.scope_provider.FunctionScope",
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_gen_dotted_names": {
  "data": {
   "lineno": 1325,
   "symbols_in_volume": [
    "libcst.Attribute",
    "libcst.Call",
    "libcst.Name",
    "libcst.metadata.scope_provider._gen_dotted_names"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_get_qualified_names_for": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "libcst.Annotation",
    "libcst.Assign",
    "libcst.ClassDef",
    "libcst.Expr",
    "libcst.FunctionDef",
    "libcst.Name",
    "libcst.SimpleStatementLine",
    "libcst.ensure_type",
    "libcst.metadata.scope_provider.FunctionScope",
    "libcst.metadata.scope_provider.GlobalScope",
    "libcst.metadata.scope_provider.QualifiedName",
    "libcst.metadata.scope_provider.QualifiedNameSource.BUILTIN",
    "libcst.metadata.scope_provider.QualifiedNameSource.IMPORT",
    "libcst.metadata.scope_provider.QualifiedNameSource.LOCAL",
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider",
    "set"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_get_qualified_names_for_dotted_imports": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "libcst.Attribute",
    "libcst.Call",
    "libcst.Expr",
    "libcst.Import",
    "libcst.SimpleStatementLine",
    "libcst.ensure_type",
    "libcst.metadata.scope_provider.QualifiedName",
    "libcst.metadata.scope_provider.QualifiedNameSource.IMPORT",
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_get_qualified_names_for_is_read_only": {
  "data": {
   "lineno": 1310,
   "symbols_in_volume": [
    "len",
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_get_qualified_names_for_nested_cases": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "libcst.ClassDef",
    "libcst.Expr",
    "libcst.FunctionDef",
    "libcst.SimpleStatementLine",
    "libcst.ensure_type",
    "libcst.metadata.scope_provider.ClassScope",
    "libcst.metadata.scope_provider.FunctionScope",
    "libcst.metadata.scope_provider.QualifiedName",
    "libcst.metadata.scope_provider.QualifiedNameSource.LOCAL",
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_global_contains_is_read_only": {
  "data": {
   "lineno": 1266,
   "symbols_in_volume": [
    "libcst.metadata.scope_provider.GlobalScope",
    "list"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_global_scope_overwrites": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "libcst.ClassDef",
    "libcst.FunctionDef",
    "libcst.ensure_type",
    "libcst.metadata.scope_provider.ClassScope",
    "libcst.metadata.scope_provider.FunctionScope",
    "libcst.metadata.scope_provider.GlobalScope",
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_import": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "libcst.Import",
    "libcst.ImportStar",
    "libcst.SimpleStatementLine",
    "libcst.ensure_type",
    "libcst.metadata.scope_provider.Assignment",
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider",
    "list",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_import_from": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "libcst.ImportFrom",
    "libcst.ImportStar",
    "libcst.SimpleStatementLine",
    "libcst.ensure_type",
    "libcst.metadata.scope_provider.Assignment",
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider",
    "list",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_keyword_arg_in_call": {
  "data": {
   "lineno": 1257,
   "symbols_in_volume": [
    "len",
    "libcst.Expr",
    "libcst.SimpleStatementLine",
    "libcst.ensure_type",
    "libcst.metadata.scope_provider.GlobalScope",
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_lambda_param_scope": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "libcst.BaseExpression",
    "libcst.Expr",
    "libcst.Lambda",
    "libcst.Param",
    "libcst.SimpleStatementLine",
    "libcst.ensure_type",
    "libcst.metadata.scope_provider.Assignment",
    "libcst.metadata.scope_provider.FunctionScope",
    "libcst.metadata.scope_provider.GlobalScope",
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider",
    "list",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_local_scope_shadowing_with_functions": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "libcst.FunctionDef",
    "libcst.ensure_type",
    "libcst.metadata.scope_provider.Assignment",
    "libcst.metadata.scope_provider.FunctionScope",
    "libcst.metadata.scope_provider.GlobalScope",
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider",
    "list",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_multiple_assignments": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "libcst.Expr",
    "libcst.SimpleStatementLine",
    "libcst.ensure_type",
    "libcst.metadata.scope_provider.GlobalScope",
    "libcst.metadata.scope_provider.QualifiedName",
    "libcst.metadata.scope_provider.QualifiedNameSource.IMPORT",
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_nested_comprehension_scope": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "libcst.CompFor",
    "libcst.Expr",
    "libcst.ListComp",
    "libcst.SimpleStatementLine",
    "libcst.ensure_type",
    "libcst.metadata.scope_provider.ComprehensionScope",
    "libcst.metadata.scope_provider.GlobalScope",
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_node_of_scopes": {
  "data": {
   "lineno": 1147,
   "symbols_in_volume": [
    "libcst.Assign",
    "libcst.ClassDef",
    "libcst.Expr",
    "libcst.FunctionDef",
    "libcst.SimpleStatementLine",
    "libcst.ensure_type",
    "libcst.metadata.scope_provider.ClassScope",
    "libcst.metadata.scope_provider.FunctionScope",
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_nonlocal_scope_overwrites": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "len",
    "libcst.Assign",
    "libcst.ClassDef",
    "libcst.FunctionDef",
    "libcst.SimpleStatementLine",
    "libcst.ensure_type",
    "libcst.metadata.scope_provider.Assignment",
    "libcst.metadata.scope_provider.ClassScope",
    "libcst.metadata.scope_provider.FunctionScope",
    "libcst.metadata.scope_provider.GlobalScope",
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_not_in_scope": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider",
    "set"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_ordering": {
  "data": {
   "lineno": 1356,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "libcst.Assign",
    "libcst.ClassDef",
    "libcst.ImportFrom",
    "libcst.SimpleStatementLine",
    "libcst.ensure_type",
    "libcst.metadata.Assignment",
    "libcst.metadata.scope_provider.Assignment",
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider",
    "list"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_ordering_between_scopes": {
  "data": {
   "lineno": 1404,
   "symbols_in_volume": [
    "len",
    "libcst.Assign",
    "libcst.Call",
    "libcst.Expr",
    "libcst.FunctionDef",
    "libcst.SimpleStatementLine",
    "libcst.ensure_type",
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider",
    "list"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_self": {
  "data": {
   "lineno": 1306,
   "symbols_in_volume": [
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider",
    "open"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_with_asname": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "libcst.AsName",
    "libcst.With",
    "libcst.ensure_type",
    "libcst.metadata.scope_provider.Assignment",
    "libcst.metadata.scope_provider.GlobalScope",
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider",
    "list",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_with_statement": {
  "data": {
   "lineno": 1172,
   "symbols_in_volume": [
    "len",
    "libcst.Expr",
    "libcst.SimpleStatementLine",
    "libcst.With",
    "libcst.ensure_type",
    "libcst.metadata.scope_provider.Assignment",
    "libcst.metadata.scope_provider.QualifiedName",
    "libcst.metadata.scope_provider.QualifiedNameSource.IMPORT",
    "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider",
    "list",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_scope_provider.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_scope_provider._gen_dotted_names": {
  "data": {
   "shadows": "libcst.metadata.scope_provider._gen_dotted_names"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_scope_provider.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_scope_provider.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_scope_provider.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_scope_provider.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_scope_provider.ensure_type": {
  "data": {
   "shadows": "libcst.ensure_type"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.Module",
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.scope_provider.Scope",
    "libcst.metadata.scope_provider.ScopeProvider",
    "libcst.parse_module",
    "str",
    "textwrap.dedent",
    "typing.Mapping",
    "typing.Tuple",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_span_provider": {
  "data": {},
  "type": "module"
 },
 "libcst.metadata.tests.test_span_provider.ByteSpanPositionProvider": {
  "data": {
   "shadows": "libcst.metadata.span_provider.ByteSpanPositionProvider"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_span_provider.ByteSpanPositionProviderTest": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_span_provider.ByteSpanPositionProviderTest.test_batchable_provider": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "SomeVisitor",
    "libcst.MetadataWrapper",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_span_provider.ByteSpanPositionProviderTest.test_batchable_provider.SomeVisitor": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "libcst.BatchableCSTVisitor",
    "libcst.metadata.span_provider.ByteSpanPositionProvider"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_span_provider.ByteSpanPositionProviderTest.test_batchable_provider.SomeVisitor.visit_Pass": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "libcst.Pass",
    "libcst.metadata.span_provider.ByteSpanPositionProvider",
    "libcst.metadata.span_provider.CodeSpan"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_span_provider.ByteSpanPositionProviderTest.test_visitor_provider": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "SomeVisitor",
    "libcst.MetadataWrapper",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_span_provider.ByteSpanPositionProviderTest.test_visitor_provider.SomeVisitor": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "libcst.CSTVisitor",
    "libcst.metadata.span_provider.ByteSpanPositionProvider"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_span_provider.ByteSpanPositionProviderTest.test_visitor_provider.SomeVisitor.visit_Pass": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "libcst.Pass",
    "libcst.metadata.span_provider.ByteSpanPositionProvider",
    "libcst.metadata.span_provider.CodeSpan"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_span_provider.CodeSpan": {
  "data": {
   "shadows": "libcst.metadata.span_provider.CodeSpan"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_span_provider.SpanProvidingCodegenState": {
  "data": {
   "shadows": "libcst.metadata.span_provider.SpanProvidingCodegenState"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_span_provider.SpanProvidingCodegenStateTest": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_span_provider.SpanProvidingCodegenStateTest.test_add_indent_tokens": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "libcst.metadata.span_provider.ByteSpanPositionProvider",
    "libcst.metadata.span_provider.SpanProvidingCodegenState",
    "libcst.metadata.span_provider.byte_length_in_utf8"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_span_provider.SpanProvidingCodegenStateTest.test_add_non_ascii_token": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "libcst.metadata.span_provider.ByteSpanPositionProvider",
    "libcst.metadata.span_provider.SpanProvidingCodegenState",
    "libcst.metadata.span_provider.byte_length_in_utf8"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_span_provider.SpanProvidingCodegenStateTest.test_add_token": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "libcst.metadata.span_provider.ByteSpanPositionProvider",
    "libcst.metadata.span_provider.SpanProvidingCodegenState",
    "libcst.metadata.span_provider.byte_length_in_utf8"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_span_provider.SpanProvidingCodegenStateTest.test_initial_position": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "libcst.metadata.span_provider.ByteSpanPositionProvider",
    "libcst.metadata.span_provider.SpanProvidingCodegenState",
    "libcst.metadata.span_provider.byte_length_in_utf8"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_span_provider.SpanProvidingCodegenStateTest.test_span": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "libcst.Pass",
    "libcst.metadata.span_provider.ByteSpanPositionProvider",
    "libcst.metadata.span_provider.SpanProvidingCodegenState",
    "libcst.metadata.span_provider.byte_length_in_utf8"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_span_provider.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_span_provider.byte_length_in_utf8": {
  "data": {
   "shadows": "libcst.metadata.span_provider.byte_length_in_utf8"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_span_provider.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_type_inference_provider": {
  "data": {},
  "type": "module"
 },
 "libcst.metadata.tests.test_type_inference_provider.MetadataWrapper": {
  "data": {
   "shadows": "libcst.MetadataWrapper"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_type_inference_provider.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_type_inference_provider.PyreData": {
  "data": {
   "shadows": "libcst.metadata.type_inference_provider.PyreData"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_type_inference_provider.TEST_SUITE_PATH": {
  "data": {
   "shadows": "libcst.tests.test_pyre_integration.TEST_SUITE_PATH"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_type_inference_provider.TypeInferenceProvider": {
  "data": {
   "shadows": "libcst.metadata.type_inference_provider.TypeInferenceProvider"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_type_inference_provider.TypeInferenceProviderTest": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.tests.test_type_inference_provider.TypeInferenceProviderTest.test_simple_class_types": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "libcst.MetadataWrapper",
    "libcst.metadata.tests.test_type_inference_provider._test_simple_class_helper",
    "libcst.metadata.tests.test_type_inference_provider.json",
    "libcst.metadata.type_inference_provider.PyreData",
    "libcst.metadata.type_inference_provider.TypeInferenceProvider",
    "libcst.parse_module",
    "libcst.testing.utils.data_provider",
    "libcst.tests.test_pyre_integration.TEST_SUITE_PATH",
    "pathlib.Path"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_type_inference_provider.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_type_inference_provider._test_simple_class_helper": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "libcst.AnnAssign",
    "libcst.Assign",
    "libcst.Attribute",
    "libcst.FunctionDef",
    "libcst.IndentedBlock",
    "libcst.MetadataWrapper",
    "libcst.SimpleStatementLine",
    "libcst.ensure_type",
    "libcst.metadata.type_inference_provider.TypeInferenceProvider",
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.tests.test_type_inference_provider.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_type_inference_provider.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst.metadata.tests.test_type_inference_provider.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "libcst.metadata.type_inference_provider": {
  "data": {},
  "type": "module"
 },
 "libcst.metadata.type_inference_provider.BatchableMetadataProvider": {
  "data": {
   "shadows": "libcst.metadata.base_provider.BatchableMetadataProvider"
  },
  "type": "import"
 },
 "libcst.metadata.type_inference_provider.CodePosition": {
  "data": {
   "shadows": "libcst._position.CodePosition"
  },
  "type": "import"
 },
 "libcst.metadata.type_inference_provider.CodeRange": {
  "data": {
   "shadows": "libcst._position.CodeRange"
  },
  "type": "import"
 },
 "libcst.metadata.type_inference_provider.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "libcst.metadata.type_inference_provider.InferredType": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "libcst.metadata.type_inference_provider.Location",
    "mypy_extensions.TypedDict",
    "str"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.type_inference_provider.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst.metadata.type_inference_provider.Location": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "libcst.metadata.type_inference_provider.Position",
    "mypy_extensions.TypedDict",
    "str"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.type_inference_provider.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "libcst.metadata.type_inference_provider.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.metadata.type_inference_provider.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "libcst.metadata.type_inference_provider.Position": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "int",
    "mypy_extensions.TypedDict"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.type_inference_provider.PositionProvider": {
  "data": {
   "shadows": "libcst.metadata.position_provider.PositionProvider"
  },
  "type": "import"
 },
 "libcst.metadata.type_inference_provider.PyreData": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "libcst.metadata.type_inference_provider.InferredType",
    "mypy_extensions.TypedDict",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.type_inference_provider.RawPyreData": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "libcst.metadata.type_inference_provider.InferredType",
    "mypy_extensions.TypedDict",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.type_inference_provider.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst.metadata.type_inference_provider.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "libcst.metadata.type_inference_provider.TypeInferenceProvider": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "libcst.metadata.base_provider.BatchableMetadataProvider",
    "libcst.metadata.position_provider.PositionProvider",
    "str"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.type_inference_provider.TypeInferenceProvider.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "libcst._position.CodePosition",
    "libcst._position.CodeRange",
    "libcst.metadata.type_inference_provider.PyreData",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.type_inference_provider.TypeInferenceProvider._parse_metadata": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "libcst.metadata.position_provider.PositionProvider",
    "range"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.type_inference_provider.TypeInferenceProvider.gen_cache": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "Exception",
    "int",
    "libcst.metadata.type_inference_provider._process_pyre_data",
    "libcst.metadata.type_inference_provider.json",
    "libcst.metadata.type_inference_provider.run_command",
    "libcst.metadata.type_inference_provider.subprocess",
    "object",
    "pathlib.Path",
    "staticmethod",
    "str",
    "typing.List",
    "typing.Mapping",
    "typing.Optional",
    "zip"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.type_inference_provider.TypeInferenceProvider.visit_Attribute": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "bool",
    "libcst.Attribute",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.type_inference_provider.TypeInferenceProvider.visit_Call": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "bool",
    "libcst.Call",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.type_inference_provider.TypeInferenceProvider.visit_Name": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "bool",
    "libcst.Name",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.type_inference_provider.TypedDict": {
  "data": {
   "shadows": "mypy_extensions.TypedDict"
  },
  "type": "import"
 },
 "libcst.metadata.type_inference_provider._process_pyre_data": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "libcst.metadata.type_inference_provider.PyreData",
    "libcst.metadata.type_inference_provider.RawPyreData",
    "sorted"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.type_inference_provider._sort_by_position": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "int",
    "libcst.metadata.type_inference_provider.InferredType",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.type_inference_provider.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.metadata.type_inference_provider.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "libcst.metadata.type_inference_provider.run_command": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "int",
    "libcst.metadata.type_inference_provider.subprocess",
    "str",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.type_inference_provider.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "libcst.metadata.wrapper": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING",
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "libcst.metadata.wrapper.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst.metadata.wrapper.BaseMetadataProvider": {
  "data": {
   "shadows": "libcst.metadata.base_provider.BaseMetadataProvider"
  },
  "type": "import"
 },
 "libcst.metadata.wrapper.BatchableCSTVisitor": {
  "data": {
   "shadows": "libcst._batched_visitor.BatchableCSTVisitor"
  },
  "type": "import"
 },
 "libcst.metadata.wrapper.BatchableMetadataProvider": {
  "data": {
   "shadows": "libcst.metadata.base_provider.BatchableMetadataProvider"
  },
  "type": "import"
 },
 "libcst.metadata.wrapper.CSTNode": {
  "data": {
   "shadows": "libcst._nodes.base.CSTNode"
  },
  "type": "import"
 },
 "libcst.metadata.wrapper.CSTVisitorT": {
  "data": {
   "shadows": "libcst._visitors.CSTVisitorT"
  },
  "type": "import"
 },
 "libcst.metadata.wrapper.Collection": {
  "data": {
   "shadows": "typing.Collection"
  },
  "type": "import"
 },
 "libcst.metadata.wrapper.ExitStack": {
  "data": {
   "shadows": "contextlib.ExitStack"
  },
  "type": "import"
 },
 "libcst.metadata.wrapper.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "libcst.metadata.wrapper.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "libcst.metadata.wrapper.MappingProxyType": {
  "data": {
   "shadows": "types.MappingProxyType"
  },
  "type": "import"
 },
 "libcst.metadata.wrapper.MetadataException": {
  "data": {
   "shadows": "libcst._exceptions.MetadataException"
  },
  "type": "import"
 },
 "libcst.metadata.wrapper.MetadataWrapper": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "object",
    "typing.Mapping",
    "typing.MutableMapping"
   ]
  },
  "type": "class"
 },
 "libcst.metadata.wrapper.MetadataWrapper.__init__": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "bool",
    "object",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.wrapper.MetadataWrapper.__repr__": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "libcst.metadata.wrapper.textwrap",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.wrapper.MetadataWrapper.module": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.wrapper.MetadataWrapper.resolve": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "libcst.metadata.wrapper._T",
    "typing.Mapping",
    "typing.Type",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.wrapper.MetadataWrapper.resolve_many": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "libcst.metadata.wrapper._resolve_impl",
    "object",
    "typing.Collection",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.wrapper.MetadataWrapper.visit": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "libcst.metadata.wrapper.MetadataWrapper.visit_batched": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "contextlib.ExitStack",
    "libcst._batched_visitor.BatchableCSTVisitor",
    "libcst._batched_visitor.VisitorMethod",
    "libcst._batched_visitor.visit_batched",
    "typing.Iterable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.wrapper.Module": {
  "data": {
   "shadows": "libcst._nodes.module.Module"
  },
  "type": "import"
 },
 "libcst.metadata.wrapper.MutableMapping": {
  "data": {
   "shadows": "typing.MutableMapping"
  },
  "type": "import"
 },
 "libcst.metadata.wrapper.MutableSet": {
  "data": {
   "shadows": "typing.MutableSet"
  },
  "type": "import"
 },
 "libcst.metadata.wrapper.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.metadata.wrapper.ProviderT": {
  "data": {
   "shadows": "libcst.metadata.base_provider.ProviderT"
  },
  "type": "import"
 },
 "libcst.metadata.wrapper.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "libcst.metadata.wrapper.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "libcst.metadata.wrapper.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "libcst.metadata.wrapper.VisitorMethod": {
  "data": {
   "shadows": "libcst._batched_visitor.VisitorMethod"
  },
  "type": "import"
 },
 "libcst.metadata.wrapper._T": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "libcst.metadata.wrapper._gather_providers": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "typing.Collection",
    "typing.MutableSet"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.wrapper._gen_batchable": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "dict",
    "libcst.metadata.base_provider.BatchableMetadataProvider",
    "object",
    "type",
    "types.MappingProxyType",
    "typing.Any",
    "typing.Iterable",
    "typing.Mapping"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.wrapper._resolve_impl": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "P",
    "P.__name__",
    "issubclass",
    "len",
    "libcst._exceptions.MetadataException",
    "libcst.metadata.base_provider.BatchableMetadataProvider",
    "libcst.metadata.wrapper._gather_providers",
    "libcst.metadata.wrapper._gen_batchable",
    "p",
    "set",
    "typing.Collection"
   ]
  },
  "type": "function"
 },
 "libcst.metadata.wrapper.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "libcst.metadata.wrapper.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "libcst.metadata.wrapper.visit_batched": {
  "data": {
   "shadows": "libcst._batched_visitor.visit_batched"
  },
  "type": "import"
 },
 "libcst.parse_expression": {
  "data": {
   "shadows": "libcst._parser.entrypoints.parse_expression"
  },
  "type": "import"
 },
 "libcst.parse_module": {
  "data": {
   "shadows": "libcst._parser.entrypoints.parse_module"
  },
  "type": "import"
 },
 "libcst.parse_statement": {
  "data": {
   "shadows": "libcst._parser.entrypoints.parse_statement"
  },
  "type": "import"
 },
 "libcst.testing": {
  "data": {},
  "type": "module"
 },
 "libcst.testing.utils": {
  "data": {
   "symbols_in_volume": [
    "libcst.testing.utils.TestCaseType",
    "object",
    "str",
    "typing.Iterable",
    "typing.Mapping",
    "typing.Sequence",
    "typing.TypeVar",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "libcst.testing.utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst.testing.utils.BaseTestMeta": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "libcst.testing.utils.BaseTestMeta.__new__": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "dict",
    "libcst.testing.utils.populate_data_provider_tests",
    "libcst.testing.utils.validate_provider_tests",
    "object",
    "str",
    "super",
    "type",
    "typing.Any",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "libcst.testing.utils.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst.testing.utils.DATA_PROVIDER_DATA_ATTR_NAME": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "libcst.testing.utils.DATA_PROVIDER_DESCRIPTION_PREFIX": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "libcst.testing.utils.DEFAULT_TEST_LIMIT": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "libcst.testing.utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "libcst.testing.utils.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "libcst.testing.utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst.testing.utils.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "libcst.testing.utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.testing.utils.PROVIDER_TEST_LIMIT_ATTR_NAME": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "libcst.testing.utils.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst.testing.utils.StaticDataType": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "libcst.testing.utils.T": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "libcst.testing.utils.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "libcst.testing.utils.TestCaseType": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "libcst.testing.utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "libcst.testing.utils.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "libcst.testing.utils.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst.testing.utils.UnitTest": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "libcst.testing.utils.BaseTestMeta",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "libcst.testing.utils.data_provider": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "dict",
    "int",
    "isinstance",
    "libcst.testing.utils.DEFAULT_TEST_LIMIT",
    "libcst.testing.utils.StaticDataType",
    "list",
    "tuple",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst.testing.utils.data_provider.test_decorator": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "libcst.testing.utils.DATA_PROVIDER_DATA_ATTR_NAME",
    "libcst.testing.utils.update_test_limit",
    "setattr",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "libcst.testing.utils.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "libcst.testing.utils.none_throws": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "libcst.testing.utils.T",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.testing.utils.populate_data_provider_tests": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "enumerate",
    "isinstance",
    "libcst.testing.utils.DATA_PROVIDER_DATA_ATTR_NAME",
    "libcst.testing.utils.DATA_PROVIDER_DESCRIPTION_PREFIX",
    "libcst.testing.utils.re",
    "libcst.testing.utils.try_get_provider_attr",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.testing.utils.populate_data_provider_tests.new_test": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "dict",
    "functools.wraps",
    "isinstance",
    "member",
    "object",
    "typing.Callable",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "libcst.testing.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "libcst.testing.utils.try_get_provider_attr": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "getattr",
    "libcst.testing.utils.inspect",
    "str",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.testing.utils.update_test_limit": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "getattr",
    "int",
    "libcst.testing.utils.PROVIDER_TEST_LIMIT_ATTR_NAME",
    "max",
    "setattr",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst.testing.utils.validate_provider_tests": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "len",
    "libcst.testing.utils.DATA_PROVIDER_DATA_ATTR_NAME",
    "libcst.testing.utils.PROVIDER_TEST_LIMIT_ATTR_NAME",
    "libcst.testing.utils.try_get_provider_attr",
    "member",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "libcst.testing.utils.validate_provider_tests.test_replacement": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "AssertionError",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "libcst.testing.utils.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "libcst.tests": {
  "data": {},
  "type": "module"
 },
 "libcst.tests.test_batched_visitor": {
  "data": {},
  "type": "module"
 },
 "libcst.tests.test_batched_visitor.BatchableCSTVisitor": {
  "data": {
   "shadows": "libcst.BatchableCSTVisitor"
  },
  "type": "import"
 },
 "libcst.tests.test_batched_visitor.BatchedVisitorTest": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.tests.test_batched_visitor.BatchedVisitorTest.test_all_visits": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "Batchable",
    "libcst.SimpleStatementLine",
    "libcst.parse_module",
    "libcst.visit_batched",
    "object.__getattribute__",
    "typing.cast",
    "unittest.mock.Mock"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_batched_visitor.BatchedVisitorTest.test_all_visits.Batchable": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "libcst.BatchableCSTVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.tests.test_batched_visitor.BatchedVisitorTest.test_all_visits.Batchable.leave_Pass": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "libcst.Pass",
    "object.__setattr__"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_batched_visitor.BatchedVisitorTest.test_all_visits.Batchable.leave_Pass_semicolon": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "libcst.Pass",
    "object.__setattr__"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_batched_visitor.BatchedVisitorTest.test_all_visits.Batchable.visit_Pass": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "libcst.Pass",
    "object.__setattr__"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_batched_visitor.BatchedVisitorTest.test_all_visits.Batchable.visit_Pass_semicolon": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "libcst.Pass",
    "object.__setattr__"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_batched_visitor.BatchedVisitorTest.test_simple": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ABatchable",
    "BBatchable",
    "libcst.SimpleStatementLine",
    "libcst.parse_module",
    "libcst.visit_batched",
    "object.__getattribute__",
    "typing.cast",
    "unittest.mock.Mock"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_batched_visitor.BatchedVisitorTest.test_simple.ABatchable": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "libcst.BatchableCSTVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.tests.test_batched_visitor.BatchedVisitorTest.test_simple.ABatchable.visit_Pass": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "libcst.Pass",
    "object.__setattr__"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_batched_visitor.BatchedVisitorTest.test_simple.BBatchable": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "libcst.BatchableCSTVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.tests.test_batched_visitor.BatchedVisitorTest.test_simple.BBatchable.visit_Pass": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "libcst.Pass",
    "object.__setattr__"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_batched_visitor.Mock": {
  "data": {
   "shadows": "unittest.mock.Mock"
  },
  "type": "import"
 },
 "libcst.tests.test_batched_visitor.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.tests.test_batched_visitor.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "libcst.tests.test_batched_visitor.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.tests.test_batched_visitor.parse_module": {
  "data": {
   "shadows": "libcst.parse_module"
  },
  "type": "import"
 },
 "libcst.tests.test_batched_visitor.visit_batched": {
  "data": {
   "shadows": "libcst.visit_batched"
  },
  "type": "import"
 },
 "libcst.tests.test_deep_clone": {
  "data": {},
  "type": "module"
 },
 "libcst.tests.test_deep_clone.DeepCloneTest": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.tests.test_deep_clone.DeepCloneTest.test_deep_clone": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "NodeGatherVisitor",
    "NodeVerifyVisitor",
    "libcst.parse_module",
    "libcst.testing.utils.data_provider",
    "str",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_deep_clone.DeepCloneTest.test_deep_clone.NodeGatherVisitor": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "libcst.CSTVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.tests.test_deep_clone.DeepCloneTest.test_deep_clone.NodeGatherVisitor.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "int",
    "set",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_deep_clone.DeepCloneTest.test_deep_clone.NodeGatherVisitor.on_visit": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "bool",
    "id",
    "libcst.CSTNode"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_deep_clone.DeepCloneTest.test_deep_clone.NodeVerifyVisitor": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "libcst.CSTVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.tests.test_deep_clone.DeepCloneTest.test_deep_clone.NodeVerifyVisitor.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "int",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_deep_clone.DeepCloneTest.test_deep_clone.NodeVerifyVisitor.on_visit": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "bool",
    "id",
    "libcst.CSTNode"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_deep_clone.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "libcst.tests.test_deep_clone.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.tests.test_deep_clone.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.tests.test_deep_clone.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst.tests.test_deep_clone.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "libcst.tests.test_deep_replace": {
  "data": {},
  "type": "module"
 },
 "libcst.tests.test_deep_replace.DeepReplaceTest": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.tests.test_deep_replace.DeepReplaceTest.test_deep_remove_complex": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "libcst.FunctionDef",
    "libcst.IndentedBlock",
    "libcst.Module",
    "libcst.ensure_type",
    "libcst.parse_module",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_deep_replace.DeepReplaceTest.test_deep_replace_complex": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "libcst.Break",
    "libcst.FunctionDef",
    "libcst.IndentedBlock",
    "libcst.Module",
    "libcst.Name",
    "libcst.Parameters",
    "libcst.SimpleStatementSuite",
    "libcst.ensure_type",
    "libcst.parse_module",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_deep_replace.DeepReplaceTest.test_deep_replace_identity": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "libcst.Break",
    "libcst.EmptyLine",
    "libcst.Module",
    "libcst.SimpleStatementLine",
    "libcst.parse_module",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_deep_replace.DeepReplaceTest.test_deep_replace_simple": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "libcst.Break",
    "libcst.Module",
    "libcst.SimpleStatementLine",
    "libcst.ensure_type",
    "libcst.parse_module",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_deep_replace.DeepReplaceTest.test_with_deep_changes_complex": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "NodeFinder",
    "libcst.Module",
    "libcst.ensure_type",
    "libcst.parse_module",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_deep_replace.DeepReplaceTest.test_with_deep_changes_complex.NodeFinder": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "libcst.CSTVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.tests.test_deep_replace.DeepReplaceTest.test_with_deep_changes_complex.NodeFinder.__init__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "libcst.CSTNode",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_deep_replace.DeepReplaceTest.test_with_deep_changes_complex.NodeFinder.visit_SimpleString": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "libcst.SimpleString"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_deep_replace.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.tests.test_deep_replace.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.tests.test_deep_replace.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.tests.test_deep_replace.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "libcst.tests.test_exceptions": {
  "data": {},
  "type": "module"
 },
 "libcst.tests.test_exceptions.ExceptionsTest": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.tests.test_exceptions.ExceptionsTest.test_parser_syntax_error_str": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst.ParserSyntaxError",
    "libcst.testing.utils.data_provider",
    "str",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_exceptions.ExceptionsTest.test_pickle": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "libcst.ParserSyntaxError",
    "libcst.tests.test_exceptions.pickle",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_exceptions.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.tests.test_exceptions.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.tests.test_exceptions.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst.tests.test_exceptions.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "libcst.tests.test_exceptions.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "libcst.tests.test_fuzz": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "datetime.timedelta",
    "libcst.tests.test_fuzz.hypothesis",
    "libcst.tests.test_fuzz.unittest"
   ]
  },
  "type": "module"
 },
 "libcst.tests.test_fuzz.FuzzTest": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "libcst.tests.test_fuzz.unittest"
   ]
  },
  "type": "class"
 },
 "libcst.tests.test_fuzz.FuzzTest.reject_invalid_code": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "Exception",
    "compile",
    "dict",
    "libcst.tests.test_fuzz.hypothesis",
    "libcst.tests.test_fuzz.libcst",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_fuzz.FuzzTest.reject_unsupported_code": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "libcst.tests.test_fuzz.hypothesis",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_fuzz.FuzzTest.test_parsing_compilable_expression_strings": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "bool",
    "hypothesmith.from_grammar",
    "libcst.tests.test_fuzz.hypothesis",
    "libcst.tests.test_fuzz.libcst",
    "libcst.tests.test_fuzz.os",
    "libcst.tests.test_fuzz.unittest",
    "str",
    "str.strip"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_fuzz.FuzzTest.test_parsing_compilable_module_strings": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "bool",
    "hypothesmith.from_grammar",
    "libcst.tests.test_fuzz.hypothesis",
    "libcst.tests.test_fuzz.libcst",
    "libcst.tests.test_fuzz.os",
    "libcst.tests.test_fuzz.unittest",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_fuzz.FuzzTest.test_parsing_compilable_statement_strings": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "bool",
    "hypothesmith.from_grammar",
    "libcst.tests.test_fuzz.hypothesis",
    "libcst.tests.test_fuzz.libcst",
    "libcst.tests.test_fuzz.os",
    "libcst.tests.test_fuzz.unittest",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_fuzz.FuzzTest.verify_identical_asts": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "libcst.tests.test_fuzz.ast",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_fuzz.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "libcst.tests.test_fuzz.from_grammar": {
  "data": {
   "shadows": "hypothesmith.from_grammar"
  },
  "type": "import"
 },
 "libcst.tests.test_fuzz.hypothesis": {
  "data": {
   "shadows": "hypothesis"
  },
  "type": "import"
 },
 "libcst.tests.test_fuzz.libcst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.tests.test_fuzz.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libcst.tests.test_fuzz.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "libcst.tests.test_fuzz.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "libcst.tests.test_pyre_integration": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "int",
    "libcst.metadata.type_inference_provider._process_pyre_data",
    "libcst.metadata.type_inference_provider.run_command",
    "libcst.tests.test_pyre_integration.cmd",
    "libcst.tests.test_pyre_integration.data",
    "libcst.tests.test_pyre_integration.json",
    "libcst.tests.test_pyre_integration.output_path",
    "pathlib.Path",
    "print",
    "str"
   ]
  },
  "type": "module"
 },
 "libcst.tests.test_pyre_integration.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "libcst.tests.test_pyre_integration.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst.tests.test_pyre_integration.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "libcst.tests.test_pyre_integration.MetadataWrapper": {
  "data": {
   "shadows": "libcst.metadata.MetadataWrapper"
  },
  "type": "import"
 },
 "libcst.tests.test_pyre_integration.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.tests.test_pyre_integration.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "libcst.tests.test_pyre_integration.PositionProvider": {
  "data": {
   "shadows": "libcst.metadata.PositionProvider"
  },
  "type": "import"
 },
 "libcst.tests.test_pyre_integration.PyreData": {
  "data": {
   "shadows": "libcst.metadata.type_inference_provider.PyreData"
  },
  "type": "import"
 },
 "libcst.tests.test_pyre_integration.PyreIntegrationTest": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.tests.test_pyre_integration.PyreIntegrationTest.test_type_availability": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "int",
    "libcst.metadata.MetadataWrapper",
    "libcst.metadata.type_inference_provider.PyreData",
    "libcst.parse_module",
    "libcst.testing.utils.data_provider",
    "libcst.tests.test_pyre_integration.TypeVerificationVisitor",
    "libcst.tests.test_pyre_integration.json",
    "pathlib.Path",
    "str",
    "typing.Dict",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_pyre_integration.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "libcst.tests.test_pyre_integration.TypeVerificationVisitor": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "libcst.CSTVisitor",
    "libcst.metadata.PositionProvider"
   ]
  },
  "type": "class"
 },
 "libcst.tests.test_pyre_integration.TypeVerificationVisitor.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "int",
    "libcst.Annotation",
    "libcst.Attribute",
    "libcst.Import",
    "libcst.ImportFrom",
    "libcst.testing.utils.UnitTest",
    "str",
    "super",
    "typing.List",
    "typing.Mapping",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_pyre_integration.TypeVerificationVisitor.leave_Annotation": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "libcst.Annotation"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_pyre_integration.TypeVerificationVisitor.leave_Attribute": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "libcst.Attribute"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_pyre_integration.TypeVerificationVisitor.leave_Import": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "libcst.Import"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_pyre_integration.TypeVerificationVisitor.leave_ImportFrom": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "libcst.ImportFrom"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_pyre_integration.TypeVerificationVisitor.visit_Annotation": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "bool",
    "libcst.Annotation",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_pyre_integration.TypeVerificationVisitor.visit_Attribute": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "bool",
    "libcst.Attribute",
    "libcst.metadata.PositionProvider",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_pyre_integration.TypeVerificationVisitor.visit_Import": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "bool",
    "libcst.Import",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_pyre_integration.TypeVerificationVisitor.visit_ImportFrom": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "bool",
    "libcst.ImportFrom",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_pyre_integration.TypeVerificationVisitor.visit_Name": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "any",
    "bool",
    "len",
    "libcst.Name",
    "libcst.metadata.PositionProvider",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_pyre_integration.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst.tests.test_pyre_integration.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.tests.test_pyre_integration._process_pyre_data": {
  "data": {
   "shadows": "libcst.metadata.type_inference_provider._process_pyre_data"
  },
  "type": "import"
 },
 "libcst.tests.test_pyre_integration.cmd": {
  "data": {
   "lineno": 132
  },
  "type": "constant"
 },
 "libcst.tests.test_pyre_integration.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.tests.test_pyre_integration.data": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "libcst.tests.test_pyre_integration.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst.tests.test_pyre_integration.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "libcst.tests.test_pyre_integration.output_path": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "libcst.tests.test_pyre_integration.run_command": {
  "data": {
   "shadows": "libcst.metadata.type_inference_provider.run_command"
  },
  "type": "import"
 },
 "libcst.tests.test_tabs": {
  "data": {},
  "type": "module"
 },
 "libcst.tests.test_tabs.ExpandTabsTest": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.tests.test_tabs.ExpandTabsTest.test_expand_tabs": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "input",
    "libcst._tabs.expand_tabs",
    "libcst.testing.utils.data_provider",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_tabs.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.tests.test_tabs.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst.tests.test_tabs.expand_tabs": {
  "data": {
   "shadows": "libcst._tabs.expand_tabs"
  },
  "type": "import"
 },
 "libcst.tests.test_tool": {
  "data": {},
  "type": "module"
 },
 "libcst.tests.test_tool.PrettyPrintNodesTest": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.tests.test_tool.PrettyPrintNodesTest.test_full_tree": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "libcst.parse_module",
    "libcst.tool.dump",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_tool.PrettyPrintNodesTest.test_hidden_defaults": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "libcst.parse_module",
    "libcst.tool.dump",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_tool.PrettyPrintNodesTest.test_hidden_defaults_and_syntax": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "libcst.parse_module",
    "libcst.tool.dump",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_tool.PrettyPrintNodesTest.test_hidden_syntax": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "libcst.parse_module",
    "libcst.tool.dump",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_tool.PrettyPrintNodesTest.test_hidden_whitespace": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "libcst.parse_module",
    "libcst.tool.dump",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_tool.PrettyPrintNodesTest.test_hidden_whitespace_and_defaults": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "libcst.parse_module",
    "libcst.tool.dump",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_tool.PrettyPrintNodesTest.test_hidden_whitespace_and_defaults_and_syntax": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "libcst.parse_module",
    "libcst.tool.dump",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_tool.PrettyPrintNodesTest.test_hidden_whitespace_and_syntax": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "libcst.parse_module",
    "libcst.tool.dump",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_tool.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.tests.test_tool.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "libcst.tests.test_tool.dump": {
  "data": {
   "shadows": "libcst.tool.dump"
  },
  "type": "import"
 },
 "libcst.tests.test_tool.parse_module": {
  "data": {
   "shadows": "libcst.parse_module"
  },
  "type": "import"
 },
 "libcst.tests.test_type_enforce": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "libcst.tests.test_type_enforce.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst.tests.test_type_enforce.AsyncGenerator": {
  "data": {
   "shadows": "typing.AsyncGenerator"
  },
  "type": "import"
 },
 "libcst.tests.test_type_enforce.ClassVar": {
  "data": {
   "shadows": "typing.ClassVar"
  },
  "type": "import"
 },
 "libcst.tests.test_type_enforce.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "libcst.tests.test_type_enforce.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "libcst.tests.test_type_enforce.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "libcst.tests.test_type_enforce.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst.tests.test_type_enforce.Literal": {
  "data": {
   "shadows": "typing_extensions.Literal"
  },
  "type": "import"
 },
 "libcst.tests.test_type_enforce.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "libcst.tests.test_type_enforce.MappingProxyType": {
  "data": {
   "shadows": "types.MappingProxyType"
  },
  "type": "import"
 },
 "libcst.tests.test_type_enforce.MutableMapping": {
  "data": {
   "shadows": "typing.MutableMapping"
  },
  "type": "import"
 },
 "libcst.tests.test_type_enforce.MyExampleChildClass": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "libcst.tests.test_type_enforce.MyExampleClass"
   ]
  },
  "type": "class"
 },
 "libcst.tests.test_type_enforce.MyExampleClass": {
  "data": {
   "lineno": 36
  },
  "type": "class"
 },
 "libcst.tests.test_type_enforce.MyExampleClassWithMetaclass": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "libcst.tests.test_type_enforce.MyExampleMetaclass"
   ]
  },
  "type": "class"
 },
 "libcst.tests.test_type_enforce.MyExampleMetaclass": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "libcst.tests.test_type_enforce.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "libcst.tests.test_type_enforce.NamedTupleSubclass": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "libcst.tests.test_type_enforce.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "libcst.tests.test_type_enforce.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst.tests.test_type_enforce.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "libcst.tests.test_type_enforce.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "libcst.tests.test_type_enforce.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "libcst.tests.test_type_enforce.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "libcst.tests.test_type_enforce.TypeEnforcementTest": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.tests.test_type_enforce.TypeEnforcementTest.test_basic_fail": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "int",
    "libcst._type_enforce.is_value_of_type",
    "libcst.testing.utils.data_provider",
    "libcst.tests.test_type_enforce.MyExampleChildClass",
    "libcst.tests.test_type_enforce.MyExampleClass",
    "libcst.tests.test_type_enforce.MyExampleClassWithMetaclass",
    "libcst.tests.test_type_enforce.NamedTupleSubclass",
    "libcst.tests.test_type_enforce.WeirdSubclassOfList",
    "object",
    "str",
    "types.MappingProxyType",
    "typing.ClassVar",
    "typing.Dict",
    "typing.Iterable",
    "typing.List",
    "typing.MutableMapping",
    "typing.Optional",
    "typing.Set",
    "typing.Tuple",
    "typing.Type",
    "typing.Union",
    "typing_extensions.Literal"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_type_enforce.TypeEnforcementTest.test_basic_pass": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "float",
    "int",
    "libcst._type_enforce.is_value_of_type",
    "libcst.testing.utils.data_provider",
    "libcst.tests.test_type_enforce.MyExampleChildClass",
    "libcst.tests.test_type_enforce.MyExampleClass",
    "libcst.tests.test_type_enforce.MyExampleClassWithMetaclass",
    "libcst.tests.test_type_enforce.NamedTupleSubclass",
    "libcst.tests.test_type_enforce.WeirdSubclassOfList",
    "object",
    "str",
    "types.MappingProxyType",
    "typing.Any",
    "typing.ClassVar",
    "typing.Dict",
    "typing.Iterable",
    "typing.List",
    "typing.Mapping",
    "typing.Optional",
    "typing.Sequence",
    "typing.Set",
    "typing.Tuple",
    "typing.Union",
    "typing_extensions.Literal"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_type_enforce.TypeEnforcementTest.test_not_implemented": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "NotImplementedError",
    "libcst._type_enforce.is_value_of_type",
    "typing.AsyncGenerator"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_type_enforce.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "libcst.tests.test_type_enforce.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.tests.test_type_enforce.WeirdSubclassOfList": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "int",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "libcst.tests.test_type_enforce.data_provider": {
  "data": {
   "shadows": "libcst.testing.utils.data_provider"
  },
  "type": "import"
 },
 "libcst.tests.test_type_enforce.is_value_of_type": {
  "data": {
   "shadows": "libcst._type_enforce.is_value_of_type"
  },
  "type": "import"
 },
 "libcst.tests.test_visitor": {
  "data": {},
  "type": "module"
 },
 "libcst.tests.test_visitor.CSTTransformer": {
  "data": {
   "shadows": "libcst.CSTTransformer"
  },
  "type": "import"
 },
 "libcst.tests.test_visitor.CSTVisitor": {
  "data": {
   "shadows": "libcst.CSTVisitor"
  },
  "type": "import"
 },
 "libcst.tests.test_visitor.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst.tests.test_visitor.UnitTest": {
  "data": {
   "shadows": "libcst.testing.utils.UnitTest"
  },
  "type": "import"
 },
 "libcst.tests.test_visitor.VisitorTest": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "libcst.testing.utils.UnitTest"
   ]
  },
  "type": "class"
 },
 "libcst.tests.test_visitor.VisitorTest.test_transformer": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "SomeTransformer",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_visitor.VisitorTest.test_transformer.SomeTransformer": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "libcst.CSTTransformer"
   ]
  },
  "type": "class"
 },
 "libcst.tests.test_visitor.VisitorTest.test_transformer.SomeTransformer.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_visitor.VisitorTest.test_transformer.SomeTransformer.leave_If": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "libcst.If"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_visitor.VisitorTest.test_transformer.SomeTransformer.leave_If_test": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "libcst.If"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_visitor.VisitorTest.test_transformer.SomeTransformer.leave_Name": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "libcst.Name"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_visitor.VisitorTest.test_transformer.SomeTransformer.visit_If": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "libcst.If"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_visitor.VisitorTest.test_transformer.SomeTransformer.visit_If_test": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "libcst.If"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_visitor.VisitorTest.test_transformer.SomeTransformer.visit_Name": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "libcst.Name"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_visitor.VisitorTest.test_visitor": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "SomeVisitor",
    "libcst.parse_module"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_visitor.VisitorTest.test_visitor.SomeVisitor": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "libcst.CSTVisitor"
   ]
  },
  "type": "class"
 },
 "libcst.tests.test_visitor.VisitorTest.test_visitor.SomeVisitor.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_visitor.VisitorTest.test_visitor.SomeVisitor.leave_If": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "libcst.If"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_visitor.VisitorTest.test_visitor.SomeVisitor.leave_If_test": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "libcst.If"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_visitor.VisitorTest.test_visitor.SomeVisitor.leave_Name": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "libcst.Name"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_visitor.VisitorTest.test_visitor.SomeVisitor.visit_If": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "libcst.If"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_visitor.VisitorTest.test_visitor.SomeVisitor.visit_If_test": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "libcst.If"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_visitor.VisitorTest.test_visitor.SomeVisitor.visit_Name": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "libcst.Name"
   ]
  },
  "type": "function"
 },
 "libcst.tests.test_visitor.cst": {
  "data": {
   "shadows": "libcst"
  },
  "type": "import"
 },
 "libcst.tests.test_visitor.parse_module": {
  "data": {
   "shadows": "libcst.parse_module"
  },
  "type": "import"
 },
 "libcst.tool": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "libcst.tool.main",
    "libcst.tool.os",
    "libcst.tool.sys",
    "str"
   ]
  },
  "type": "module"
 },
 "libcst.tool.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "libcst.tool.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "libcst.tool.CONFIG_FILE_NAME": {
  "data": {
   "lineno": 301
  },
  "type": "constant"
 },
 "libcst.tool.CSTNode": {
  "data": {
   "shadows": "libcst.CSTNode"
  },
  "type": "import"
 },
 "libcst.tool.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "libcst.tool.CodemodCommand": {
  "data": {
   "shadows": "libcst.codemod.CodemodCommand"
  },
  "type": "import"
 },
 "libcst.tool.CodemodContext": {
  "data": {
   "shadows": "libcst.codemod.CodemodContext"
  },
  "type": "import"
 },
 "libcst.tool.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "libcst.tool.IndentedBlock": {
  "data": {
   "shadows": "libcst.IndentedBlock"
  },
  "type": "import"
 },
 "libcst.tool.LIBCST_VERSION": {
  "data": {
   "shadows": "libcst.LIBCST_VERSION"
  },
  "type": "import"
 },
 "libcst.tool.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "libcst.tool.Module": {
  "data": {
   "shadows": "libcst.Module"
  },
  "type": "import"
 },
 "libcst.tool.PartialParserConfig": {
  "data": {
   "shadows": "libcst.PartialParserConfig"
  },
  "type": "import"
 },
 "libcst.tool.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "libcst.tool.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "libcst.tool.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "libcst.tool._ListSerializer": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "libcst.tool._SerializerBase"
   ]
  },
  "type": "class"
 },
 "libcst.tool._ListSerializer.__init__": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "bool",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "libcst.tool._ListSerializer._serialize_impl": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "libcst.tool.os",
    "list",
    "object",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.tool._SerializerBase": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "libcst.tool._SerializerBase.__init__": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.tool._SerializerBase._serialize_impl": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "object",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.tool._SerializerBase.serialize": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "libcst.tool.os",
    "libcst.tool.textwrap",
    "object",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.tool._StrSerializer": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "libcst.tool._SerializerBase"
   ]
  },
  "type": "class"
 },
 "libcst.tool._StrSerializer._serialize_impl": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "object",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.tool._codemod_impl": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "KeyboardInterrupt",
    "ModuleNotFoundError",
    "any",
    "command_class",
    "getattr",
    "int",
    "len",
    "libcst.codemod.CodemodCommand",
    "libcst.codemod.CodemodContext",
    "libcst.codemod.diff_code",
    "libcst.codemod.exec_transform_with_prettyprint",
    "libcst.codemod.gather_files",
    "libcst.codemod.parallel_exec_transform_with_prettyprint",
    "libcst.tool._find_and_load_config",
    "libcst.tool.argparse",
    "libcst.tool.importlib",
    "libcst.tool.sys",
    "print",
    "str",
    "typing.List",
    "vars"
   ]
  },
  "type": "function"
 },
 "libcst.tool._default_config": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "libcst.tool._find_and_load_config": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "Exception",
    "all",
    "bool",
    "dict",
    "isinstance",
    "libcst.tool.CONFIG_FILE_NAME",
    "libcst.tool._default_config",
    "libcst.tool.os",
    "libcst.tool.yaml",
    "list",
    "open",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "libcst.tool._initialize_impl": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "Exception",
    "int",
    "libcst.tool.CONFIG_FILE_NAME",
    "libcst.tool._ListSerializer",
    "libcst.tool._SerializerBase",
    "libcst.tool._StrSerializer",
    "libcst.tool._default_config",
    "libcst.tool.argparse",
    "libcst.tool.os",
    "libcst.tool.yaml",
    "open",
    "print",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.tool._list_impl": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "abc.ABC",
    "any",
    "dir",
    "getattr",
    "int",
    "issubclass",
    "len",
    "libcst.codemod.CodemodCommand",
    "libcst.tool._find_and_load_config",
    "libcst.tool._recursive_find",
    "libcst.tool.argparse",
    "libcst.tool.importlib",
    "libcst.tool.inspect",
    "libcst.tool.os",
    "libcst.tool.sys",
    "print",
    "sorted",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "libcst.tool._node_repr_recursive": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "Exception",
    "_get_default",
    "_is_syntax",
    "_is_whitespace",
    "bool",
    "bytes",
    "enumerate",
    "getattr",
    "isinstance",
    "len",
    "libcst.CSTNode",
    "libcst._nodes.deep_equals.deep_equals",
    "libcst.tool.dataclasses",
    "object",
    "repr",
    "str",
    "typing.List",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "libcst.tool._node_repr_recursive._get_default": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "libcst.tool.dataclasses",
    "object"
   ]
  },
  "type": "function"
 },
 "libcst.tool._node_repr_recursive._is_syntax": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "libcst.Module",
    "repr"
   ]
  },
  "type": "function"
 },
 "libcst.tool._node_repr_recursive._is_whitespace": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "libcst.IndentedBlock",
    "libcst.Module"
   ]
  },
  "type": "function"
 },
 "libcst.tool._print_tree_impl": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "int",
    "libcst.PartialParserConfig",
    "libcst.parse_module",
    "libcst.tool.argparse",
    "libcst.tool.dump",
    "libcst.tool.sys",
    "open",
    "print",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.tool._recursive_find": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "Exception",
    "libcst.tool.importlib",
    "libcst.tool.os",
    "object",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "libcst.tool.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "libcst.tool.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "libcst.tool.dataclasses": {
  "data": {
   "shadows": "dataclasses"
  },
  "type": "import"
 },
 "libcst.tool.deep_equals": {
  "data": {
   "shadows": "libcst._nodes.deep_equals.deep_equals"
  },
  "type": "import"
 },
 "libcst.tool.diff_code": {
  "data": {
   "shadows": "libcst.codemod.diff_code"
  },
  "type": "import"
 },
 "libcst.tool.distutils.spawn": {
  "data": {
   "shadows": "distutils.spawn"
  },
  "type": "import"
 },
 "libcst.tool.dump": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "bool",
    "libcst.CSTNode",
    "libcst.tool._node_repr_recursive",
    "str"
   ]
  },
  "type": "function"
 },
 "libcst.tool.exec_transform_with_prettyprint": {
  "data": {
   "shadows": "libcst.codemod.exec_transform_with_prettyprint"
  },
  "type": "import"
 },
 "libcst.tool.gather_files": {
  "data": {
   "shadows": "libcst.codemod.gather_files"
  },
  "type": "import"
 },
 "libcst.tool.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "libcst.tool.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "libcst.tool.main": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "int",
    "libcst.LIBCST_VERSION",
    "libcst.tool._codemod_impl",
    "libcst.tool._initialize_impl",
    "libcst.tool._list_impl",
    "libcst.tool._print_tree_impl",
    "libcst.tool.argparse",
    "str",
    "typing.Callable",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.tool.main._invalid_command": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "int",
    "libcst.tool.sys",
    "print",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "libcst.tool.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "libcst.tool.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "libcst.tool.parallel_exec_transform_with_prettyprint": {
  "data": {
   "shadows": "libcst.codemod.parallel_exec_transform_with_prettyprint"
  },
  "type": "import"
 },
 "libcst.tool.parse_module": {
  "data": {
   "shadows": "libcst.parse_module"
  },
  "type": "import"
 },
 "libcst.tool.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "libcst.tool.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "libcst.tool.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "libcst.visit_batched": {
  "data": {
   "shadows": "libcst._batched_visitor.visit_batched"
  },
  "type": "import"
 }
}