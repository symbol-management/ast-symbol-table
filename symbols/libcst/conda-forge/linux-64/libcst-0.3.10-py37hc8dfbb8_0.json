{
 "libcst": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._add_slots": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "libcst._add_slots.add_slots": {
  "lineno": 12,
  "symbols_in_volume": [
   "dataclasses.fields",
   "typing.Type"
  ],
  "type": "function"
 },
 "libcst._add_slots.add_slots.__getstate__": {
  "lineno": 48,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Mapping"
  ],
  "type": "function"
 },
 "libcst._add_slots.add_slots.__setstate__": {
  "lineno": 53,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Mapping"
  ],
  "type": "function"
 },
 "libcst._batched_visitor": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.Callable",
   "typing.List",
   "typing.Mapping",
   "typing.TYPE_CHECKING"
  ],
  "type": "module"
 },
 "libcst._batched_visitor.BatchableCSTVisitor": {
  "lineno": 30,
  "symbols_in_volume": [
   "libcst._metadata_dependent.MetadataDependent",
   "libcst._typed_visitor.CSTTypedVisitorFunctions"
  ],
  "type": "class"
 },
 "libcst._batched_visitor.BatchableCSTVisitor.get_visitors": {
  "lineno": 40,
  "symbols_in_volume": [
   "inspect.getmembers",
   "inspect.ismethod",
   "typing.Mapping"
  ],
  "type": "function"
 },
 "libcst._batched_visitor._BatchedCSTVisitor": {
  "lineno": 105,
  "symbols_in_volume": [
   "libcst._visitors.CSTVisitor",
   "typing.Optional"
  ],
  "type": "class"
 },
 "libcst._batched_visitor._BatchedCSTVisitor.__init__": {
  "lineno": 114,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._batched_visitor._BatchedCSTVisitor.on_leave": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._batched_visitor._BatchedCSTVisitor.on_leave_attribute": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._batched_visitor._BatchedCSTVisitor.on_visit": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._batched_visitor._BatchedCSTVisitor.on_visit_attribute": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._batched_visitor._get_visitor_methods": {
  "lineno": 90,
  "symbols_in_volume": [
   "typing.Iterable",
   "typing.List",
   "typing.MutableMapping"
  ],
  "type": "function"
 },
 "libcst._batched_visitor.visit_batched": {
  "lineno": 64,
  "symbols_in_volume": [
   "libcst._visitors.CSTNodeT",
   "typing.Iterable",
   "typing.Optional",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst._exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._exceptions.EOFSentinel": {
  "lineno": 23,
  "symbols_in_volume": [
   "enum.Enum",
   "enum.auto"
  ],
  "type": "class"
 },
 "libcst._exceptions.MetadataException": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst._exceptions.ParserSyntaxError": {
  "lineno": 89,
  "symbols_in_volume": [
   "typing.Sequence",
   "typing_extensions.final"
  ],
  "type": "class"
 },
 "libcst._exceptions.ParserSyntaxError.__init__": {
  "lineno": 120,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._exceptions.ParserSyntaxError.__reduce__": {
  "lineno": 129,
  "symbols_in_volume": [
   "typing.Callable",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "libcst._exceptions.ParserSyntaxError.__repr__": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._exceptions.ParserSyntaxError.__str__": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._exceptions.ParserSyntaxError.context": {
  "lineno": 169,
  "symbols_in_volume": [
   "libcst._tabs.expand_tabs",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._exceptions.ParserSyntaxError.editor_column": {
  "lineno": 209,
  "symbols_in_volume": [
   "libcst._tabs.expand_tabs"
  ],
  "type": "function"
 },
 "libcst._exceptions.ParserSyntaxError.editor_line": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._exceptions.PartialParserSyntaxError": {
  "lineno": 70,
  "symbols_in_volume": [
   "typing_extensions.final"
  ],
  "type": "class"
 },
 "libcst._exceptions.PartialParserSyntaxError.__init__": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._exceptions._parser_syntax_error_unpickle": {
  "lineno": 66,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._exceptions.get_expected_str": {
  "lineno": 27,
  "symbols_in_volume": [
   "libcst._parser.parso.pgen2.generator.ReservedString",
   "libcst._parser.parso.python.token.PythonTokenTypes.DEDENT",
   "libcst._parser.parso.python.token.PythonTokenTypes.ENDMARKER",
   "libcst._parser.parso.python.token.PythonTokenTypes.INDENT",
   "libcst._parser.parso.python.token.TokenType",
   "libcst._parser.types.token.Token",
   "typing.Iterable",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._maybe_sentinel": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._maybe_sentinel.MaybeSentinel": {
  "lineno": 9,
  "symbols_in_volume": [
   "enum.Enum",
   "enum.auto"
  ],
  "type": "class"
 },
 "libcst._maybe_sentinel.MaybeSentinel.__repr__": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._metadata_dependent": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.TYPE_CHECKING",
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "libcst._metadata_dependent.MetadataDependent": {
  "lineno": 36,
  "symbols_in_volume": [
   "abc.ABC",
   "typing.ClassVar",
   "typing.Collection",
   "typing.Mapping"
  ],
  "type": "class"
 },
 "libcst._metadata_dependent.MetadataDependent.__init__": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._metadata_dependent.MetadataDependent.get_inherited_dependencies": {
  "lineno": 54,
  "symbols_in_volume": [
   "inspect.getmro",
   "typing.Collection"
  ],
  "type": "function"
 },
 "libcst._metadata_dependent.MetadataDependent.get_metadata": {
  "lineno": 89,
  "symbols_in_volume": [
   "typing.Type",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst._metadata_dependent.MetadataDependent.resolve": {
  "lineno": 74,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "libcst._nodes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.base": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.Sequence",
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "libcst._nodes.base.BaseLeaf": {
  "lineno": 464,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst._nodes.base.BaseLeaf._visit_and_replace_children": {
  "lineno": 470,
  "symbols_in_volume": [
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.base.BaseLeaf.children": {
  "lineno": 465,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._nodes.base.BaseValueToken": {
  "lineno": 476,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst._nodes.base.BaseValueToken._codegen_impl": {
  "lineno": 486,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.base.CSTCodegenError": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst._nodes.base.CSTNode": {
  "lineno": 110,
  "symbols_in_volume": [
   "abc.ABC",
   "dataclasses.dataclass"
  ],
  "type": "class"
 },
 "libcst._nodes.base.CSTNode.__eq__": {
  "lineno": 420,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.base.CSTNode.__hash__": {
  "lineno": 434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.base.CSTNode.__init_subclass__": {
  "lineno": 117,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.base.CSTNode.__post_init__": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.base.CSTNode.__repr__": {
  "lineno": 438,
  "symbols_in_volume": [
   "dataclasses.fields"
  ],
  "type": "function"
 },
 "libcst._nodes.base.CSTNode._codegen": {
  "lineno": 296,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.base.CSTNode._codegen_impl": {
  "lineno": 292,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.base.CSTNode._is_removable": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.base.CSTNode._validate": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.base.CSTNode._visit_and_replace_children": {
  "lineno": 269,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.base.CSTNode.children": {
  "lineno": 182,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._nodes.base.CSTNode.deep_clone": {
  "lineno": 325,
  "symbols_in_volume": [
   "dataclasses.field",
   "dataclasses.field.name",
   "dataclasses.fields",
   "typing.Dict"
  ],
  "type": "function"
 },
 "libcst._nodes.base.CSTNode.deep_equals": {
  "lineno": 362,
  "symbols_in_volume": [
   "libcst._nodes.deep_equals.deep_equals"
  ],
  "type": "function"
 },
 "libcst._nodes.base.CSTNode.deep_remove": {
  "lineno": 387,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._removal_sentinel.RemovalSentinel.REMOVE",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._nodes.base.CSTNode.deep_replace": {
  "lineno": 371,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._types.CSTNodeT",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._nodes.base.CSTNode.field": {
  "lineno": 451,
  "symbols_in_volume": [
   "dataclasses.field",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.base.CSTNode.validate_types_deep": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.base.CSTNode.validate_types_shallow": {
  "lineno": 148,
  "symbols_in_volume": [
   "dataclasses.fields",
   "libcst._type_enforce.is_value_of_type"
  ],
  "type": "function"
 },
 "libcst._nodes.base.CSTNode.visit": {
  "lineno": 208,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._visitors.CSTVisitor",
   "libcst._visitors.CSTVisitorT",
   "typing.Union",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst._nodes.base.CSTNode.with_changes": {
  "lineno": 301,
  "symbols_in_volume": [
   "dataclasses.replace",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.base.CSTNode.with_deep_changes": {
  "lineno": 399,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.base.CSTValidationError": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst._nodes.base._ChildReplacementTransformer": {
  "lineno": 39,
  "symbols_in_volume": [
   "libcst._visitors.CSTTransformer"
  ],
  "type": "class"
 },
 "libcst._nodes.base._ChildReplacementTransformer.__init__": {
  "lineno": 40,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._nodes.base._ChildReplacementTransformer.on_leave": {
  "lineno": 51,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._nodes.base._ChildReplacementTransformer.on_visit": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.base._ChildWithChangesTransformer": {
  "lineno": 59,
  "symbols_in_volume": [
   "libcst._visitors.CSTTransformer"
  ],
  "type": "class"
 },
 "libcst._nodes.base._ChildWithChangesTransformer.__init__": {
  "lineno": 60,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Mapping"
  ],
  "type": "function"
 },
 "libcst._nodes.base._ChildWithChangesTransformer.on_leave": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.base._ChildWithChangesTransformer.on_visit": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.base._ChildrenCollectionVisitor": {
  "lineno": 30,
  "symbols_in_volume": [
   "libcst._visitors.CSTVisitor"
  ],
  "type": "class"
 },
 "libcst._nodes.base._ChildrenCollectionVisitor.__init__": {
  "lineno": 31,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "libcst._nodes.base._ChildrenCollectionVisitor.on_visit": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.base._NOOPVisitor": {
  "lineno": 75,
  "symbols_in_volume": [
   "libcst._visitors.CSTTransformer"
  ],
  "type": "class"
 },
 "libcst._nodes.base._clone": {
  "lineno": 97,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "libcst._nodes.base._indent": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.base._pretty_repr": {
  "lineno": 79,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._nodes.base._pretty_repr_sequence": {
  "lineno": 86,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._nodes.deep_equals": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.deep_equals._deep_equals_cst_node": {
  "lineno": 45,
  "symbols_in_volume": [
   "dataclasses.fields"
  ],
  "type": "function"
 },
 "libcst._nodes.deep_equals._deep_equals_sequence": {
  "lineno": 30,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._nodes.deep_equals.deep_equals": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTNode",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._nodes.expression": {
  "lineno": null,
  "symbols_in_volume": [
   "typing_extensions.Literal"
  ],
  "type": "module"
 },
 "libcst._nodes.expression.Annotation": {
  "lineno": 1590,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.Annotation._codegen_impl": {
  "lineno": 1637,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._nodes.base.CSTCodegenError",
   "libcst._nodes.internal.CodegenState",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Annotation._visit_and_replace_children": {
  "lineno": 1620,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sentinel",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Arg": {
  "lineno": 2107,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.op.AssignEqual",
   "libcst._nodes.op.Comma",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Optional",
   "typing.Union",
   "typing_extensions.Literal"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.Arg._codegen_impl": {
  "lineno": 2166,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.internal.CodegenState",
   "libcst._nodes.op.AssignEqual",
   "libcst._nodes.op.Comma"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Arg._validate": {
  "lineno": 2141,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError",
   "libcst._nodes.op.AssignEqual"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Arg._visit_and_replace_children": {
  "lineno": 2151,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_optional",
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sentinel",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Asynchronous": {
  "lineno": 189,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.Asynchronous._codegen_impl": {
  "lineno": 211,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Asynchronous._validate": {
  "lineno": 200,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Asynchronous._visit_and_replace_children": {
  "lineno": 204,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Attribute": {
  "lineno": 1355,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.op.Dot",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.Attribute._codegen_impl": {
  "lineno": 1405,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Attribute._safe_to_use_with_word_operator": {
  "lineno": 1398,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.expression.Attribute._visit_and_replace_children": {
  "lineno": 1389,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Await": {
  "lineno": 2359,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.Await._codegen_impl": {
  "lineno": 2396,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Await._validate": {
  "lineno": 2379,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Await._visit_and_replace_children": {
  "lineno": 2386,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.BaseAssignTargetExpression": {
  "lineno": 282,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.BaseComp": {
  "lineno": 3403,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.BaseDelTargetExpression": {
  "lineno": 302,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.BaseDict": {
  "lineno": 3127,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.BaseDictElement": {
  "lineno": 2671,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.BaseElement": {
  "lineno": 2664,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.BaseExpression": {
  "lineno": 252,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.BaseExpression._check_left_right_word_concatenation_safety": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.expression.BaseExpression._safe_to_use_with_word_operator": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.expression.BaseFormattedStringContent": {
  "lineno": 695,
  "symbols_in_volume": [
   "abc.ABC",
   "libcst._nodes.base.CSTNode"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.BaseList": {
  "lineno": 2953,
  "symbols_in_volume": [
   "abc.ABC",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.BaseList._bracketize": {
  "lineno": 2970,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "libcst._nodes.internal.CodegenState",
   "typing.Generator"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.BaseList._safe_to_use_with_word_operator": {
  "lineno": 2967,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.expression.BaseNumber": {
  "lineno": 390,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.BaseNumber._safe_to_use_with_word_operator": {
  "lineno": 396,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.expression.BaseSet": {
  "lineno": 3058,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.BaseSimpleComp": {
  "lineno": 3412,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.BaseSimpleComp._validate": {
  "lineno": 3429,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.BaseSlice": {
  "lineno": 1412,
  "symbols_in_volume": [
   "abc.ABC",
   "libcst._nodes.base.CSTNode"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.BaseString": {
  "lineno": 519,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.BinaryOperation": {
  "lineno": 1230,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.op.BaseBinaryOp",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.BinaryOperation._codegen_impl": {
  "lineno": 1276,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.BinaryOperation._safe_to_use_with_word_operator": {
  "lineno": 1269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.expression.BinaryOperation._visit_and_replace_children": {
  "lineno": 1260,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.BooleanOperation": {
  "lineno": 1283,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.op.BaseBooleanOp",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.BooleanOperation._codegen_impl": {
  "lineno": 1348,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.BooleanOperation._safe_to_use_with_word_operator": {
  "lineno": 1341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.expression.BooleanOperation._validate": {
  "lineno": 1313,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.BooleanOperation._visit_and_replace_children": {
  "lineno": 1332,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Call": {
  "lineno": 2287,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.Call._codegen_impl": {
  "lineno": 2347,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Call._safe_to_use_with_word_operator": {
  "lineno": 2319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.expression.Call._visit_and_replace_children": {
  "lineno": 2333,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.CompFor": {
  "lineno": 3183,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.CompFor._codegen_impl": {
  "lineno": 3339,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.CompFor._validate": {
  "lineno": 3265,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.CompFor._visit_and_replace_children": {
  "lineno": 3314,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_optional",
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.CompIf": {
  "lineno": 3359,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.CompIf._codegen_impl": {
  "lineno": 3396,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.CompIf._validate": {
  "lineno": 3378,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.CompIf._visit_and_replace_children": {
  "lineno": 3385,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Comparison": {
  "lineno": 1079,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.Comparison._codegen_impl": {
  "lineno": 1161,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Comparison._safe_to_use_with_word_operator": {
  "lineno": 1122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.expression.Comparison._validate": {
  "lineno": 1130,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError",
   "libcst._nodes.op.In",
   "libcst._nodes.op.Is",
   "libcst._nodes.op.IsNot",
   "libcst._nodes.op.NotIn"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Comparison._visit_and_replace_children": {
  "lineno": 1153,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.ComparisonTarget": {
  "lineno": 1040,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.op.BaseCompOp"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.ComparisonTarget._codegen_impl": {
  "lineno": 1074,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.ComparisonTarget._validate": {
  "lineno": 1054,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError",
   "libcst._nodes.op.In",
   "libcst._nodes.op.Is",
   "libcst._nodes.op.IsNot",
   "libcst._nodes.op.NotIn"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.ComparisonTarget._visit_and_replace_children": {
  "lineno": 1068,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.ConcatenatedString": {
  "lineno": 947,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.ConcatenatedString._codegen_impl": {
  "lineno": 1016,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.ConcatenatedString._safe_to_use_with_word_operator": {
  "lineno": 974,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.expression.ConcatenatedString._validate": {
  "lineno": 982,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.ConcatenatedString._visit_and_replace_children": {
  "lineno": 1005,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.ConcatenatedString.evaluated_value": {
  "lineno": 1022,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Dict": {
  "lineno": 3134,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.Dict._codegen_impl": {
  "lineno": 3172,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Dict._visit_and_replace_children": {
  "lineno": 3163,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.DictComp": {
  "lineno": 3578,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.DictComp._codegen_impl": {
  "lineno": 3643,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.DictComp._validate": {
  "lineno": 3613,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.DictComp._visit_and_replace_children": {
  "lineno": 3626,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.DictElement": {
  "lineno": 2710,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.op.Comma",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.DictElement._codegen_impl": {
  "lineno": 2746,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.DictElement._visit_and_replace_children": {
  "lineno": 2733,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sentinel",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Element": {
  "lineno": 2678,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.op.Comma",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.Element._codegen_impl": {
  "lineno": 2699,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Element._visit_and_replace_children": {
  "lineno": 2693,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sentinel",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Ellipsis": {
  "lineno": 360,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.Ellipsis._codegen_impl": {
  "lineno": 385,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Ellipsis._safe_to_use_with_word_operator": {
  "lineno": 382,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.expression.Ellipsis._visit_and_replace_children": {
  "lineno": 376,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.ExpressionPosition": {
  "lineno": 247,
  "symbols_in_volume": [
   "enum.Enum",
   "enum.auto"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.Float": {
  "lineno": 444,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.Float._codegen_impl": {
  "lineno": 470,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Float._validate": {
  "lineno": 465,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError",
   "re.fullmatch",
   "tokenize.Floatnumber"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Float._visit_and_replace_children": {
  "lineno": 458,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Float.evaluated_value": {
  "lineno": 474,
  "symbols_in_volume": [
   "ast.literal_eval"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.FormattedString": {
  "lineno": 828,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "typing.Sequence",
   "typing_extensions.Literal"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.FormattedString._codegen_impl": {
  "lineno": 939,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.FormattedString._validate": {
  "lineno": 890,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.FormattedString._visit_and_replace_children": {
  "lineno": 930,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.FormattedString.prefix": {
  "lineno": 907,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.expression.FormattedString.quote": {
  "lineno": 921,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.expression.FormattedStringExpression": {
  "lineno": 731,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.op.AssignEqual",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.FormattedStringExpression._codegen_impl": {
  "lineno": 808,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.FormattedStringExpression._validate": {
  "lineno": 777,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.FormattedStringExpression._visit_and_replace_children": {
  "lineno": 781,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_optional",
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.FormattedStringText": {
  "lineno": 705,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.FormattedStringText._codegen_impl": {
  "lineno": 727,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.FormattedStringText._visit_and_replace_children": {
  "lineno": 722,
  "symbols_in_volume": [
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.From": {
  "lineno": 2504,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.From._codegen_impl": {
  "lineno": 2543,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.From._validate": {
  "lineno": 2522,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.From._visit_and_replace_children": {
  "lineno": 2532,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sentinel",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.GeneratorExp": {
  "lineno": 3443,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "dataclasses.field",
   "libcst._add_slots.add_slots",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.GeneratorExp._codegen_impl": {
  "lineno": 3488,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.GeneratorExp._safe_to_use_with_word_operator": {
  "lineno": 3468,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.expression.GeneratorExp._visit_and_replace_children": {
  "lineno": 3480,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.IfExp": {
  "lineno": 2403,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.IfExp._codegen_impl": {
  "lineno": 2491,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.IfExp._validate": {
  "lineno": 2437,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.IfExp._visit_and_replace_children": {
  "lineno": 2470,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Imaginary": {
  "lineno": 482,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.Imaginary._codegen_impl": {
  "lineno": 507,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Imaginary._validate": {
  "lineno": 502,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError",
   "re.fullmatch",
   "tokenize.Imagnumber"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Imaginary._visit_and_replace_children": {
  "lineno": 495,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Imaginary.evaluated_value": {
  "lineno": 511,
  "symbols_in_volume": [
   "ast.literal_eval"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Index": {
  "lineno": 1419,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.Index._codegen_impl": {
  "lineno": 1433,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Index._visit_and_replace_children": {
  "lineno": 1430,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Integer": {
  "lineno": 407,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.Integer._codegen_impl": {
  "lineno": 432,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Integer._validate": {
  "lineno": 427,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError",
   "re.fullmatch",
   "tokenize.Intnumber"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Integer._visit_and_replace_children": {
  "lineno": 420,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Integer.evaluated_value": {
  "lineno": 436,
  "symbols_in_volume": [
   "ast.literal_eval"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Lambda": {
  "lineno": 2002,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.op.Colon",
   "libcst._nodes.op.Colon.field",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.Lambda._codegen_impl": {
  "lineno": 2086,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._nodes.internal.CodegenState",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Lambda._validate": {
  "lineno": 2042,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Lambda._visit_and_replace_children": {
  "lineno": 2074,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sentinel",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.LeftCurlyBrace": {
  "lineno": 97,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.LeftCurlyBrace._codegen_impl": {
  "lineno": 115,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.LeftCurlyBrace._visit_and_replace_children": {
  "lineno": 108,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.LeftParen": {
  "lineno": 143,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.LeftParen._codegen_impl": {
  "lineno": 161,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.LeftParen._visit_and_replace_children": {
  "lineno": 154,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.LeftSquareBracket": {
  "lineno": 51,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.LeftSquareBracket._codegen_impl": {
  "lineno": 69,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.LeftSquareBracket._visit_and_replace_children": {
  "lineno": 62,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.List": {
  "lineno": 2977,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.List._codegen_impl": {
  "lineno": 3019,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.List._visit_and_replace_children": {
  "lineno": 3010,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.ListComp": {
  "lineno": 3494,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.ListComp._codegen_impl": {
  "lineno": 3530,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.ListComp._visit_and_replace_children": {
  "lineno": 3520,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Name": {
  "lineno": 322,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.Name._codegen_impl": {
  "lineno": 355,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Name._validate": {
  "lineno": 348,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Name._visit_and_replace_children": {
  "lineno": 341,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.NamedExpr": {
  "lineno": 3653,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.NamedExpr._codegen_impl": {
  "lineno": 3697,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.NamedExpr._visit_and_replace_children": {
  "lineno": 3683,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Param": {
  "lineno": 1715,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.op.AssignEqual",
   "libcst._nodes.op.Comma",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.Param._codegen_impl": {
  "lineno": 1775,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.base.CSTCodegenError",
   "libcst._nodes.internal.CodegenState",
   "libcst._nodes.op.AssignEqual",
   "libcst._nodes.op.Comma",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Param._validate": {
  "lineno": 1751,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError",
   "libcst._nodes.op.AssignEqual"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Param._visit_and_replace_children": {
  "lineno": 1759,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_optional",
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sentinel",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.ParamSlash": {
  "lineno": 1687,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.op.Comma",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.ParamSlash._codegen_impl": {
  "lineno": 1705,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.internal.CodegenState",
   "libcst._nodes.op.Comma"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.ParamSlash._visit_and_replace_children": {
  "lineno": 1702,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_sentinel",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.ParamStar": {
  "lineno": 1664,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.op.Comma",
   "libcst._nodes.op.Comma.field",
   "libcst._nodes.whitespace.SimpleWhitespace"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.ParamStar._codegen_impl": {
  "lineno": 1682,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.ParamStar._visit_and_replace_children": {
  "lineno": 1679,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Parameters": {
  "lineno": 1814,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.base.CSTNode",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.Parameters._codegen_impl": {
  "lineno": 1937,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Parameters._validate": {
  "lineno": 1913,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.expression.Parameters._validate_defaults": {
  "lineno": 1865,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Parameters._validate_kwonly_star": {
  "lineno": 1859,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Parameters._validate_posonly_ind": {
  "lineno": 1853,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Parameters._validate_stars": {
  "lineno": 1885,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Parameters._validate_stars_sequence": {
  "lineno": 1843,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Parameters._visit_and_replace_children": {
  "lineno": 1923,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_optional",
   "libcst._nodes.internal.visit_sentinel",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.RightCurlyBrace": {
  "lineno": 120,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.RightCurlyBrace._codegen_impl": {
  "lineno": 138,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.RightCurlyBrace._visit_and_replace_children": {
  "lineno": 131,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.RightParen": {
  "lineno": 166,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.RightParen._codegen_impl": {
  "lineno": 184,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.RightParen._visit_and_replace_children": {
  "lineno": 177,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.RightSquareBracket": {
  "lineno": 74,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.RightSquareBracket._codegen_impl": {
  "lineno": 92,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.RightSquareBracket._visit_and_replace_children": {
  "lineno": 85,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Set": {
  "lineno": 3065,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.Set._codegen_impl": {
  "lineno": 3116,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Set._validate": {
  "lineno": 3098,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Set._visit_and_replace_children": {
  "lineno": 3107,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.SetComp": {
  "lineno": 3536,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.SetComp._codegen_impl": {
  "lineno": 3572,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.SetComp._visit_and_replace_children": {
  "lineno": 3562,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.SimpleString": {
  "lineno": 567,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.SimpleString._codegen_impl": {
  "lineno": 683,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.SimpleString._validate": {
  "lineno": 585,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.SimpleString._visit_and_replace_children": {
  "lineno": 676,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.SimpleString.evaluated_value": {
  "lineno": 687,
  "symbols_in_volume": [
   "ast.literal_eval"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.SimpleString.prefix": {
  "lineno": 617,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.expression.SimpleString.quote": {
  "lineno": 631,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.expression.SimpleString.raw_value": {
  "lineno": 663,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.expression.Slice": {
  "lineno": 1437,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.op.Colon",
   "libcst._nodes.op.Colon.field",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.Slice._codegen_impl": {
  "lineno": 1473,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.internal.CodegenState",
   "libcst._nodes.op.Colon"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Slice._visit_and_replace_children": {
  "lineno": 1462,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_optional",
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sentinel",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.StarredDictElement": {
  "lineno": 2822,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.op.Comma",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.StarredDictElement._codegen_impl": {
  "lineno": 2854,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.StarredDictElement._visit_and_replace_children": {
  "lineno": 2845,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sentinel",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.StarredElement": {
  "lineno": 2761,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.op.Comma",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.StarredElement._codegen_impl": {
  "lineno": 2809,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.StarredElement._visit_and_replace_children": {
  "lineno": 2798,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sentinel",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Subscript": {
  "lineno": 1525,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.Subscript._codegen_impl": {
  "lineno": 1579,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Subscript._safe_to_use_with_word_operator": {
  "lineno": 1570,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.expression.Subscript._validate": {
  "lineno": 1551,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Subscript._visit_and_replace_children": {
  "lineno": 1557,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.SubscriptElement": {
  "lineno": 1491,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.op.Comma",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.SubscriptElement._codegen_impl": {
  "lineno": 1514,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.internal.CodegenState",
   "libcst._nodes.op.Comma"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.SubscriptElement._visit_and_replace_children": {
  "lineno": 1508,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sentinel",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Tuple": {
  "lineno": 2867,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "dataclasses.field",
   "libcst._add_slots.add_slots",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.Tuple._codegen_impl": {
  "lineno": 2937,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Tuple._safe_to_use_with_word_operator": {
  "lineno": 2894,
  "symbols_in_volume": [
   "libcst._nodes.op.Comma"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Tuple._validate": {
  "lineno": 2918,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Tuple._visit_and_replace_children": {
  "lineno": 2930,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.UnaryOperation": {
  "lineno": 1168,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.op.BaseUnaryOp",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.UnaryOperation._codegen_impl": {
  "lineno": 1224,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.UnaryOperation._safe_to_use_with_word_operator": {
  "lineno": 1209,
  "symbols_in_volume": [
   "libcst._nodes.op.Not"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.UnaryOperation._validate": {
  "lineno": 1188,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError",
   "libcst._nodes.op.Not"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.UnaryOperation._visit_and_replace_children": {
  "lineno": 1201,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Yield": {
  "lineno": 2556,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.expression.Yield._codegen_impl": {
  "lineno": 2611,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Yield._validate": {
  "lineno": 2580,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace"
  ],
  "type": "function"
 },
 "libcst._nodes.expression.Yield._visit_and_replace_children": {
  "lineno": 2601,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_optional",
   "libcst._nodes.internal.visit_sentinel",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.expression._BaseElementImpl": {
  "lineno": 2628,
  "symbols_in_volume": [
   "abc.ABC",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.op.Comma",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.expression._BaseElementImpl._codegen_comma": {
  "lineno": 2636,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.internal.CodegenState",
   "libcst._nodes.op.Comma"
  ],
  "type": "function"
 },
 "libcst._nodes.expression._BaseElementImpl._codegen_impl": {
  "lineno": 2654,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.expression._BaseExpressionWithArgs": {
  "lineno": 2188,
  "symbols_in_volume": [
   "abc.ABC",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.expression._BaseExpressionWithArgs._check_kwargs_or_keywords": {
  "lineno": 2197,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError",
   "typing.Callable",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._nodes.expression._BaseExpressionWithArgs._check_positional": {
  "lineno": 2246,
  "symbols_in_volume": [
   "typing.Callable",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._nodes.expression._BaseExpressionWithArgs._check_starred_or_keywords": {
  "lineno": 2221,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError",
   "typing.Callable",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._nodes.expression._BaseExpressionWithArgs._validate": {
  "lineno": 2270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.expression._BaseParenthesizedNode": {
  "lineno": 217,
  "symbols_in_volume": [
   "abc.ABC",
   "libcst._nodes.base.CSTNode",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.expression._BaseParenthesizedNode._parenthesize": {
  "lineno": 237,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "libcst._nodes.internal.CodegenState",
   "typing.Generator"
  ],
  "type": "function"
 },
 "libcst._nodes.expression._BaseParenthesizedNode._validate": {
  "lineno": 229,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.expression._BasePrefixedString": {
  "lineno": 531,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst._nodes.expression._BasePrefixedString._safe_to_use_with_word_operator": {
  "lineno": 551,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.expression._BasePrefixedString.prefix": {
  "lineno": 532,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.expression._BasePrefixedString.quote": {
  "lineno": 543,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.expression._BaseSetOrDict": {
  "lineno": 3030,
  "symbols_in_volume": [
   "abc.ABC",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.expression._BaseSetOrDict._braceize": {
  "lineno": 3051,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "libcst._nodes.internal.CodegenState",
   "typing.Generator"
  ],
  "type": "function"
 },
 "libcst._nodes.expression._BaseSetOrDict._safe_to_use_with_word_operator": {
  "lineno": 3047,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.internal": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.TYPE_CHECKING"
  ],
  "type": "module"
 },
 "libcst._nodes.internal.CodegenState": {
  "lineno": 23,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "dataclasses.field",
   "libcst._add_slots.add_slots",
   "typing.List"
  ],
  "type": "class"
 },
 "libcst._nodes.internal.CodegenState.add_indent_tokens": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.internal.CodegenState.add_token": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.internal.CodegenState.after_codegen": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.internal.CodegenState.before_codegen": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.internal.CodegenState.decrease_indent": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.internal.CodegenState.increase_indent": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.internal.CodegenState.pop_trailing_newline": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.internal.CodegenState.record_syntactic_position": {
  "lineno": 62,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "typing.Iterator",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._nodes.internal.visit_body_iterable": {
  "lineno": 159,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._types.CSTNodeT",
   "typing.Iterable",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._nodes.internal.visit_body_sequence": {
  "lineno": 190,
  "symbols_in_volume": [
   "libcst._types.CSTNodeT",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._nodes.internal.visit_iterable": {
  "lineno": 128,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._types.CSTNodeT",
   "typing.Iterable"
  ],
  "type": "function"
 },
 "libcst._nodes.internal.visit_optional": {
  "lineno": 91,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._types.CSTNodeT",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._nodes.internal.visit_required": {
  "lineno": 73,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._types.CSTNodeT"
  ],
  "type": "function"
 },
 "libcst._nodes.internal.visit_sentinel": {
  "lineno": 108,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._types.CSTNodeT",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._nodes.internal.visit_sequence": {
  "lineno": 146,
  "symbols_in_volume": [
   "libcst._types.CSTNodeT",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._nodes.module": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.TYPE_CHECKING",
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "libcst._nodes.module.Module": {
  "lineno": 33,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.statement.BaseCompoundStatement",
   "libcst._nodes.statement.SimpleStatementLine",
   "libcst._nodes.whitespace.EmptyLine",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.module.Module._codegen_impl": {
  "lineno": 97,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.module.Module._visit_and_replace_children": {
  "lineno": 72,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_body_sequence",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.module.Module.bytes": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.module.Module.code": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.module.Module.code_for_node": {
  "lineno": 128,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.module.Module.config_for_parsing": {
  "lineno": 141,
  "symbols_in_volume": [
   "libcst._parser.types.config.PartialParserConfig"
  ],
  "type": "function"
 },
 "libcst._nodes.module.Module.get_docstring": {
  "lineno": 163,
  "symbols_in_volume": [
   "libcst._nodes.statement.get_docstring_impl",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._nodes.module.Module.visit": {
  "lineno": 84,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._visitors.CSTVisitorT",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst._nodes.op": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.op.Add": {
  "lineno": 351,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.Add._get_token": {
  "lineno": 365,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.AddAssign": {
  "lineno": 789,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.AddAssign._get_token": {
  "lineno": 803,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.And": {
  "lineno": 315,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.And._get_token": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.AssignEqual": {
  "lineno": 234,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.AssignEqual._get_token": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.BaseAugOp": {
  "lineno": 137,
  "symbols_in_volume": [
   "abc.ABC",
   "libcst._nodes.base.CSTNode"
  ],
  "type": "class"
 },
 "libcst._nodes.op.BaseBinaryOp": {
  "lineno": 123,
  "symbols_in_volume": [
   "abc.ABC",
   "libcst._nodes.base.CSTNode"
  ],
  "type": "class"
 },
 "libcst._nodes.op.BaseBooleanOp": {
  "lineno": 116,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst._nodes.op.BaseCompOp": {
  "lineno": 130,
  "symbols_in_volume": [
   "abc.ABC",
   "libcst._nodes.base.CSTNode"
  ],
  "type": "class"
 },
 "libcst._nodes.op.BaseUnaryOp": {
  "lineno": 91,
  "symbols_in_volume": [
   "abc.ABC",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace"
  ],
  "type": "class"
 },
 "libcst._nodes.op.BaseUnaryOp._codegen_impl": {
  "lineno": 107,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.op.BaseUnaryOp._get_token": {
  "lineno": 111,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "libcst._nodes.op.BaseUnaryOp._visit_and_replace_children": {
  "lineno": 99,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.op.BitAnd": {
  "lineno": 531,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.BitAnd._get_token": {
  "lineno": 545,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.BitAndAssign": {
  "lineno": 897,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.BitAndAssign._get_token": {
  "lineno": 911,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.BitInvert": {
  "lineno": 285,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.BitInvert._get_token": {
  "lineno": 296,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.BitOr": {
  "lineno": 513,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.BitOr._get_token": {
  "lineno": 527,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.BitOrAssign": {
  "lineno": 915,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.BitOrAssign._get_token": {
  "lineno": 929,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.BitXor": {
  "lineno": 549,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.BitXor._get_token": {
  "lineno": 563,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.BitXorAssign": {
  "lineno": 933,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.BitXorAssign._get_token": {
  "lineno": 947,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.Colon": {
  "lineno": 163,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.Colon._get_token": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.Comma": {
  "lineno": 181,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.Comma._get_token": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.Divide": {
  "lineno": 405,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.Divide._get_token": {
  "lineno": 419,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.DivideAssign": {
  "lineno": 861,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.DivideAssign._get_token": {
  "lineno": 875,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.Dot": {
  "lineno": 205,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.Dot._get_token": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.Equal": {
  "lineno": 619,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.Equal._get_token": {
  "lineno": 632,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.FloorDivide": {
  "lineno": 423,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.FloorDivide._get_token": {
  "lineno": 437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.FloorDivideAssign": {
  "lineno": 1005,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.FloorDivideAssign._get_token": {
  "lineno": 1019,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.GreaterThan": {
  "lineno": 602,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.GreaterThan._get_token": {
  "lineno": 615,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.GreaterThanEqual": {
  "lineno": 653,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.GreaterThanEqual._get_token": {
  "lineno": 666,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.ImportStar": {
  "lineno": 222,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.base.BaseLeaf"
  ],
  "type": "class"
 },
 "libcst._nodes.op.ImportStar._codegen_impl": {
  "lineno": 230,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.op.In": {
  "lineno": 709,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.In._get_token": {
  "lineno": 722,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.Is": {
  "lineno": 749,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.Is._get_token": {
  "lineno": 762,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.IsNot": {
  "lineno": 766,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.IsNot._get_tokens": {
  "lineno": 785,
  "symbols_in_volume": [
   "typing.Tuple"
  ],
  "type": "function"
 },
 "libcst._nodes.op.LeftShift": {
  "lineno": 477,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.LeftShift._get_token": {
  "lineno": 491,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.LeftShiftAssign": {
  "lineno": 951,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.LeftShiftAssign._get_token": {
  "lineno": 965,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.LessThan": {
  "lineno": 585,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.LessThan._get_token": {
  "lineno": 598,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.LessThanEqual": {
  "lineno": 636,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.LessThanEqual._get_token": {
  "lineno": 649,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.MatrixMultiply": {
  "lineno": 567,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.MatrixMultiply._get_token": {
  "lineno": 581,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.MatrixMultiplyAssign": {
  "lineno": 843,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.MatrixMultiplyAssign._get_token": {
  "lineno": 857,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.Minus": {
  "lineno": 270,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.Minus._get_token": {
  "lineno": 281,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.Modulo": {
  "lineno": 441,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.Modulo._get_token": {
  "lineno": 455,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.ModuloAssign": {
  "lineno": 879,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.ModuloAssign._get_token": {
  "lineno": 893,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.Multiply": {
  "lineno": 387,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.Multiply._get_token": {
  "lineno": 401,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.MultiplyAssign": {
  "lineno": 825,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.MultiplyAssign._get_token": {
  "lineno": 839,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.Not": {
  "lineno": 300,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.Not._get_token": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.NotEqual": {
  "lineno": 670,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.NotEqual._get_token": {
  "lineno": 705,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.NotEqual._validate": {
  "lineno": 690,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.op.NotEqual._visit_and_replace_children": {
  "lineno": 694,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.op.NotIn": {
  "lineno": 726,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.NotIn._get_tokens": {
  "lineno": 745,
  "symbols_in_volume": [
   "typing.Tuple"
  ],
  "type": "function"
 },
 "libcst._nodes.op.Or": {
  "lineno": 333,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.Or._get_token": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.Plus": {
  "lineno": 255,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.Plus._get_token": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.Power": {
  "lineno": 459,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.Power._get_token": {
  "lineno": 473,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.PowerAssign": {
  "lineno": 987,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.PowerAssign._get_token": {
  "lineno": 1001,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.RightShift": {
  "lineno": 495,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.RightShift._get_token": {
  "lineno": 509,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.RightShiftAssign": {
  "lineno": 969,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.RightShiftAssign._get_token": {
  "lineno": 983,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.Semicolon": {
  "lineno": 144,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.Semicolon._get_token": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.Subtract": {
  "lineno": 369,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.Subtract._get_token": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op.SubtractAssign": {
  "lineno": 807,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.op.SubtractAssign._get_token": {
  "lineno": 821,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.op._BaseOneTokenOp": {
  "lineno": 17,
  "symbols_in_volume": [
   "abc.ABC",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace"
  ],
  "type": "class"
 },
 "libcst._nodes.op._BaseOneTokenOp._codegen_impl": {
  "lineno": 37,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.op._BaseOneTokenOp._get_token": {
  "lineno": 43,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "libcst._nodes.op._BaseOneTokenOp._visit_and_replace_children": {
  "lineno": 26,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.op._BaseTwoTokenOp": {
  "lineno": 48,
  "symbols_in_volume": [
   "abc.ABC",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace"
  ],
  "type": "class"
 },
 "libcst._nodes.op._BaseTwoTokenOp._codegen_impl": {
  "lineno": 78,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.op._BaseTwoTokenOp._get_tokens": {
  "lineno": 86,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "libcst._nodes.op._BaseTwoTokenOp._validate": {
  "lineno": 60,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.op._BaseTwoTokenOp._visit_and_replace_children": {
  "lineno": 64,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement": {
  "lineno": null,
  "symbols_in_volume": [
   "re.UNICODE",
   "re.compile",
   "typing.Pattern"
  ],
  "type": "module"
 },
 "libcst._nodes.statement.AnnAssign": {
  "lineno": 1323,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.expression.Annotation",
   "libcst._nodes.expression.BaseExpression",
   "libcst._nodes.op.AssignEqual",
   "libcst._nodes.op.Semicolon",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.AnnAssign._codegen_impl": {
  "lineno": 1365,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.internal.CodegenState",
   "libcst._nodes.op.AssignEqual",
   "libcst._nodes.op.Semicolon"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.AnnAssign._validate": {
  "lineno": 1350,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError",
   "libcst._nodes.op.AssignEqual"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.AnnAssign._visit_and_replace_children": {
  "lineno": 1356,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_optional",
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sentinel",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.AsName": {
  "lineno": 710,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.expression.List",
   "libcst._nodes.expression.Name",
   "libcst._nodes.expression.Tuple",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.AsName._codegen_impl": {
  "lineno": 746,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.AsName._validate": {
  "lineno": 727,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.AsName._visit_and_replace_children": {
  "lineno": 735,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Assert": {
  "lineno": 2194,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.expression.BaseExpression",
   "libcst._nodes.op.Comma",
   "libcst._nodes.op.Semicolon",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.Assert._codegen_impl": {
  "lineno": 2240,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._nodes.internal.CodegenState",
   "libcst._nodes.op.Semicolon"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Assert._validate": {
  "lineno": 2217,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError",
   "libcst._nodes.expression.ExpressionPosition.RIGHT",
   "libcst._nodes.op.Comma"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Assert._visit_and_replace_children": {
  "lineno": 2229,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_optional",
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sentinel",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Assign": {
  "lineno": 1275,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.expression.BaseExpression",
   "libcst._nodes.op.Semicolon",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.Assign._codegen_impl": {
  "lineno": 1307,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._nodes.internal.CodegenState",
   "libcst._nodes.op.Semicolon"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Assign._validate": {
  "lineno": 1294,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Assign._visit_and_replace_children": {
  "lineno": 1300,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sentinel",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.AssignTarget": {
  "lineno": 1239,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.expression.BaseAssignTargetExpression",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.AssignTarget._codegen_impl": {
  "lineno": 1266,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.AssignTarget._visit_and_replace_children": {
  "lineno": 1255,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.AugAssign": {
  "lineno": 1388,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.expression.BaseExpression",
   "libcst._nodes.op.BaseAugOp",
   "libcst._nodes.op.Semicolon",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.AugAssign._codegen_impl": {
  "lineno": 1416,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._nodes.internal.CodegenState",
   "libcst._nodes.op.Semicolon"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.AugAssign._visit_and_replace_children": {
  "lineno": 1408,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sentinel",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.BaseCompoundStatement": {
  "lineno": 531,
  "symbols_in_volume": [
   "abc.ABC",
   "libcst._nodes.whitespace.EmptyLine",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.BaseSmallStatement": {
  "lineno": 81,
  "symbols_in_volume": [
   "abc.ABC",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.op.Semicolon",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.BaseSmallStatement._codegen_impl": {
  "lineno": 96,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.BaseStatement": {
  "lineno": 72,
  "symbols_in_volume": [
   "abc.ABC",
   "libcst._nodes.base.CSTNode"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.BaseSuite": {
  "lineno": 56,
  "symbols_in_volume": [
   "abc.ABC",
   "libcst._nodes.base.CSTNode",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.Break": {
  "lineno": 185,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.op.Semicolon",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.Break._codegen_impl": {
  "lineno": 202,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._nodes.internal.CodegenState",
   "libcst._nodes.op.Semicolon"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Break._visit_and_replace_children": {
  "lineno": 197,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_sentinel",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.ClassDef": {
  "lineno": 1655,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.expression.Arg",
   "libcst._nodes.expression.LeftParen",
   "libcst._nodes.expression.Name",
   "libcst._nodes.expression.RightParen",
   "libcst._nodes.whitespace.EmptyLine",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.ClassDef._codegen_impl": {
  "lineno": 1762,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._nodes.expression.LeftParen",
   "libcst._nodes.expression.RightParen",
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.ClassDef._validate": {
  "lineno": 1731,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.statement.ClassDef._validate_args": {
  "lineno": 1723,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.ClassDef._validate_parens": {
  "lineno": 1711,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._nodes.base.CSTValidationError",
   "libcst._nodes.expression.LeftParen",
   "libcst._nodes.expression.RightParen"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.ClassDef._validate_whitespace": {
  "lineno": 1705,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.ClassDef._visit_and_replace_children": {
  "lineno": 1736,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sentinel",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.ClassDef.get_docstring": {
  "lineno": 1796,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Continue": {
  "lineno": 216,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.op.Semicolon",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.Continue._codegen_impl": {
  "lineno": 233,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._nodes.internal.CodegenState",
   "libcst._nodes.op.Semicolon"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Continue._visit_and_replace_children": {
  "lineno": 228,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_sentinel",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Decorator": {
  "lineno": 1432,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.expression.Attribute",
   "libcst._nodes.expression.Call",
   "libcst._nodes.expression.Name",
   "libcst._nodes.whitespace.EmptyLine",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "libcst._nodes.whitespace.TrailingWhitespace",
   "libcst._nodes.whitespace.TrailingWhitespace.field",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.Decorator._codegen_impl": {
  "lineno": 1481,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Decorator._validate": {
  "lineno": 1454,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError",
   "libcst._nodes.expression.Attribute",
   "libcst._nodes.expression.Call",
   "libcst._nodes.expression.Name"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Decorator._visit_and_replace_children": {
  "lineno": 1467,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Del": {
  "lineno": 103,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.expression.BaseDelTargetExpression",
   "libcst._nodes.op.Semicolon",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.Del._codegen_impl": {
  "lineno": 139,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._nodes.internal.CodegenState",
   "libcst._nodes.op.Semicolon"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Del._validate": {
  "lineno": 121,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError",
   "libcst._nodes.expression.ExpressionPosition.RIGHT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Del._visit_and_replace_children": {
  "lineno": 130,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sentinel",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Else": {
  "lineno": 487,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.whitespace.EmptyLine",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.Else._codegen_impl": {
  "lineno": 519,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Else._visit_and_replace_children": {
  "lineno": 508,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.ExceptHandler": {
  "lineno": 753,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.expression.BaseExpression",
   "libcst._nodes.whitespace.EmptyLine",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.ExceptHandler._codegen_impl": {
  "lineno": 814,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.ExceptHandler._validate": {
  "lineno": 780,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError",
   "libcst._nodes.expression.Name"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.ExceptHandler._visit_and_replace_children": {
  "lineno": 798,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_optional",
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Expr": {
  "lineno": 312,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.expression.BaseExpression",
   "libcst._nodes.op.Semicolon",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.Expr._codegen_impl": {
  "lineno": 335,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._nodes.internal.CodegenState",
   "libcst._nodes.op.Semicolon"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Expr._visit_and_replace_children": {
  "lineno": 329,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sentinel",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Finally": {
  "lineno": 833,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.whitespace.EmptyLine",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.Finally._codegen_impl": {
  "lineno": 861,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Finally._visit_and_replace_children": {
  "lineno": 850,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.For": {
  "lineno": 1918,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.expression.Asynchronous",
   "libcst._nodes.expression.BaseAssignTargetExpression",
   "libcst._nodes.expression.BaseExpression",
   "libcst._nodes.whitespace.EmptyLine",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.For._codegen_impl": {
  "lineno": 2007,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.For._validate": {
  "lineno": 1956,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError",
   "libcst._nodes.expression.ExpressionPosition.LEFT",
   "libcst._nodes.expression.ExpressionPosition.RIGHT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.For._visit_and_replace_children": {
  "lineno": 1981,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_optional",
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.FunctionDef": {
  "lineno": 1528,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.expression.Annotation",
   "libcst._nodes.expression.Asynchronous",
   "libcst._nodes.expression.Name",
   "libcst._nodes.expression.Parameters",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.EmptyLine",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.FunctionDef._codegen_impl": {
  "lineno": 1619,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.FunctionDef._validate": {
  "lineno": 1581,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.FunctionDef._visit_and_replace_children": {
  "lineno": 1589,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_optional",
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.FunctionDef.get_docstring": {
  "lineno": 1647,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Global": {
  "lineno": 2306,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.op.Semicolon",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.Global._codegen_impl": {
  "lineno": 2346,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._nodes.internal.CodegenState",
   "libcst._nodes.op.Semicolon"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Global._validate": {
  "lineno": 2323,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Global._visit_and_replace_children": {
  "lineno": 2337,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sentinel",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.If": {
  "lineno": 551,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.expression.BaseExpression",
   "libcst._nodes.whitespace.EmptyLine",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.If._codegen_impl": {
  "lineno": 599,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.If._visit_and_replace_children": {
  "lineno": 583,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_optional",
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Import": {
  "lineno": 1035,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.op.Semicolon",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.Import._codegen_impl": {
  "lineno": 1074,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._nodes.internal.CodegenState",
   "libcst._nodes.op.Semicolon"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Import._validate": {
  "lineno": 1053,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError",
   "libcst._nodes.op.Comma"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Import._visit_and_replace_children": {
  "lineno": 1065,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sentinel",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.ImportAlias": {
  "lineno": 952,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.expression.Attribute",
   "libcst._nodes.expression.Name",
   "libcst._nodes.op.Comma",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.ImportAlias._codegen_impl": {
  "lineno": 994,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.internal.CodegenState",
   "libcst._nodes.op.Comma"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.ImportAlias._name": {
  "lineno": 1007,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.expression.Attribute",
   "libcst._nodes.expression.Name"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.ImportAlias._validate": {
  "lineno": 972,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError",
   "libcst._nodes.expression.Name"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.ImportAlias._visit_and_replace_children": {
  "lineno": 987,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_optional",
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sentinel",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.ImportAlias.evaluated_alias": {
  "lineno": 1023,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.ImportAlias.evaluated_name": {
  "lineno": 1016,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.statement.ImportFrom": {
  "lineno": 1092,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.expression.Attribute",
   "libcst._nodes.expression.LeftParen",
   "libcst._nodes.expression.Name",
   "libcst._nodes.expression.RightParen",
   "libcst._nodes.op.Dot",
   "libcst._nodes.op.ImportStar",
   "libcst._nodes.op.Semicolon",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.ImportFrom._codegen_impl": {
  "lineno": 1201,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._nodes.internal.CodegenState",
   "libcst._nodes.op.ImportStar",
   "libcst._nodes.op.Semicolon",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.ImportFrom._validate": {
  "lineno": 1172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.statement.ImportFrom._validate_module": {
  "lineno": 1132,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.ImportFrom._validate_names": {
  "lineno": 1138,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError",
   "libcst._nodes.op.ImportStar",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.ImportFrom._validate_whitespace": {
  "lineno": 1158,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError",
   "libcst._nodes.op.ImportStar"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.ImportFrom._visit_and_replace_children": {
  "lineno": 1177,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_optional",
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sentinel",
   "libcst._nodes.internal.visit_sequence",
   "libcst._nodes.op.ImportStar",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.IndentedBlock": {
  "lineno": 620,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.EmptyLine",
   "libcst._nodes.whitespace.TrailingWhitespace",
   "libcst._nodes.whitespace.TrailingWhitespace.field",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.IndentedBlock._codegen_impl": {
  "lineno": 681,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.IndentedBlock._validate": {
  "lineno": 661,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.IndentedBlock._visit_and_replace_children": {
  "lineno": 673,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_body_sequence",
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.NameItem": {
  "lineno": 2266,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.expression.Name",
   "libcst._nodes.op.Comma",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.NameItem._codegen_impl": {
  "lineno": 2295,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.internal.CodegenState",
   "libcst._nodes.op.Comma"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.NameItem._validate": {
  "lineno": 2284,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.NameItem._visit_and_replace_children": {
  "lineno": 2289,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sentinel",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Nonlocal": {
  "lineno": 2364,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.op.Semicolon",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.Nonlocal._codegen_impl": {
  "lineno": 2407,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._nodes.internal.CodegenState",
   "libcst._nodes.op.Semicolon"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Nonlocal._validate": {
  "lineno": 2381,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Nonlocal._visit_and_replace_children": {
  "lineno": 2395,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sentinel",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Pass": {
  "lineno": 155,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.op.Semicolon",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.Pass._codegen_impl": {
  "lineno": 171,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._nodes.internal.CodegenState",
   "libcst._nodes.op.Semicolon"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Pass._visit_and_replace_children": {
  "lineno": 166,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_sentinel",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Raise": {
  "lineno": 2101,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.expression.BaseExpression",
   "libcst._nodes.expression.From",
   "libcst._nodes.op.Semicolon",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.Raise._codegen_impl": {
  "lineno": 2168,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._nodes.internal.CodegenState",
   "libcst._nodes.op.Semicolon"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Raise._validate": {
  "lineno": 2124,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._nodes.base.CSTValidationError",
   "libcst._nodes.expression.ExpressionPosition.LEFT",
   "libcst._nodes.expression.ExpressionPosition.RIGHT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Raise._visit_and_replace_children": {
  "lineno": 2158,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_optional",
   "libcst._nodes.internal.visit_sentinel",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Return": {
  "lineno": 247,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.expression.BaseExpression",
   "libcst._nodes.op.Semicolon",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.Return._codegen_impl": {
  "lineno": 289,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._nodes.internal.CodegenState",
   "libcst._nodes.op.Semicolon"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Return._validate": {
  "lineno": 267,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._nodes.base.CSTValidationError",
   "libcst._nodes.expression.ExpressionPosition.RIGHT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Return._visit_and_replace_children": {
  "lineno": 280,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_optional",
   "libcst._nodes.internal.visit_sentinel",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.SimpleStatementLine": {
  "lineno": 395,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.EmptyLine",
   "libcst._nodes.whitespace.TrailingWhitespace",
   "libcst._nodes.whitespace.TrailingWhitespace.field",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.SimpleStatementLine._codegen_impl": {
  "lineno": 435,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.SimpleStatementLine._is_removable": {
  "lineno": 430,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.statement.SimpleStatementLine._visit_and_replace_children": {
  "lineno": 417,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.SimpleStatementSuite": {
  "lineno": 442,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "libcst._nodes.whitespace.TrailingWhitespace",
   "libcst._nodes.whitespace.TrailingWhitespace.field",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.SimpleStatementSuite._codegen_impl": {
  "lineno": 482,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.SimpleStatementSuite._visit_and_replace_children": {
  "lineno": 469,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Try": {
  "lineno": 873,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.whitespace.EmptyLine",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.Try._codegen_impl": {
  "lineno": 927,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Try._validate": {
  "lineno": 899,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.Try._visit_and_replace_children": {
  "lineno": 913,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_optional",
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.While": {
  "lineno": 2032,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.expression.BaseExpression",
   "libcst._nodes.whitespace.EmptyLine",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.While._codegen_impl": {
  "lineno": 2083,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.While._validate": {
  "lineno": 2058,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError",
   "libcst._nodes.expression.ExpressionPosition.RIGHT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.While._visit_and_replace_children": {
  "lineno": 2067,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_optional",
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.With": {
  "lineno": 1842,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.expression.Asynchronous",
   "libcst._nodes.whitespace.EmptyLine",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace.field",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.With._codegen_impl": {
  "lineno": 1899,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.With._validate": {
  "lineno": 1867,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.base.CSTValidationError",
   "libcst._nodes.expression.ExpressionPosition.RIGHT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.With._visit_and_replace_children": {
  "lineno": 1881,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_optional",
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.WithItem": {
  "lineno": 1803,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.expression.BaseExpression",
   "libcst._nodes.op.Comma",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._nodes.statement.WithItem._codegen_impl": {
  "lineno": 1828,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.internal.CodegenState",
   "libcst._nodes.op.Comma"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.WithItem._visit_and_replace_children": {
  "lineno": 1821,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_optional",
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sentinel",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.statement._BaseSimpleStatement": {
  "lineno": 349,
  "symbols_in_volume": [
   "abc.ABC",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.whitespace.TrailingWhitespace",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.statement._BaseSimpleStatement._codegen_impl": {
  "lineno": 379,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.statement._BaseSimpleStatement._validate": {
  "lineno": 368,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.statement.get_docstring_impl": {
  "lineno": 1494,
  "symbols_in_volume": [
   "inspect.cleandoc",
   "libcst._nodes.expression.ConcatenatedString",
   "libcst._nodes.expression.SimpleString",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._nodes.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.base.CSTNodeTest": {
  "lineno": 58,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.base.CSTNodeTest.__assert_children_match_codegen": {
  "lineno": 126,
  "symbols_in_volume": [
   "libcst.CSTNode"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.base.CSTNodeTest.__assert_children_match_fields": {
  "lineno": 195,
  "symbols_in_volume": [
   "dataclasses.fields",
   "libcst.CSTNode",
   "typing.Iterable"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.base.CSTNodeTest.__assert_codegen": {
  "lineno": 98,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Module",
   "libcst.metadata.CodeRange",
   "libcst.metadata.PositionProvider",
   "libcst.metadata.position_provider.PositionProvidingCodegenState",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.base.CSTNodeTest.__assert_visit_returns_identity": {
  "lineno": 221,
  "symbols_in_volume": [
   "libcst.CSTNode"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.base.CSTNodeTest.__derive_children_from_codegen": {
  "lineno": 138,
  "symbols_in_volume": [
   "contextlib.ExitStack",
   "libcst.CSTNode",
   "libcst.Module",
   "libcst.__dict__.items",
   "typing.Iterable",
   "typing.List",
   "typing.Sequence",
   "unittest.mock.patch"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.base.CSTNodeTest.__derive_children_from_codegen._get_codegen_override": {
  "lineno": 164,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.base.CSTNodeTest.__derive_children_from_codegen._get_codegen_override._codegen_impl": {
  "lineno": 167,
  "symbols_in_volume": [
   "libcst._types.CSTNodeT",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.base.CSTNodeTest.assert_invalid": {
  "lineno": 92,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.CSTValidationError",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.base.CSTNodeTest.assert_parses": {
  "lineno": 231,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.ParserSyntaxError",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.base.CSTNodeTest.setUp": {
  "lineno": 59,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.__dict__.values"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.base.CSTNodeTest.validate_node": {
  "lineno": 69,
  "symbols_in_volume": [
   "libcst._types.CSTNodeT",
   "libcst.metadata.CodeRange",
   "typing.Callable",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.base.DummyIndentedBlock": {
  "lineno": 244,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.CSTNode"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.base.DummyIndentedBlock._codegen_impl": {
  "lineno": 254,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.base.DummyIndentedBlock._visit_and_replace_children": {
  "lineno": 262,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.base._CSTCodegenPatchTarget": {
  "lineno": 21,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.CSTNode",
   "typing.Callable",
   "typing.Type"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.base._NOOPVisitor": {
  "lineno": 28,
  "symbols_in_volume": [
   "libcst._visitors.CSTTransformer"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.base._cst_node_equality_func": {
  "lineno": 32,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.base.parse_expression_as": {
  "lineno": 43,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "typing.Any",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.base.parse_expression_as.inner": {
  "lineno": 44,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.PartialParserConfig",
   "libcst.parse_expression"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.base.parse_statement_as": {
  "lineno": 50,
  "symbols_in_volume": [
   "libcst.BaseStatement",
   "typing.Any",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.base.parse_statement_as.inner": {
  "lineno": 51,
  "symbols_in_volume": [
   "libcst.BaseStatement",
   "libcst.PartialParserConfig",
   "libcst.parse_statement"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_assert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_assert.AssertConstructionTest": {
  "lineno": 17,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_assert.AssertConstructionTest.test_invalid": {
  "lineno": 66,
  "symbols_in_volume": [
   "libcst.Assert",
   "libcst.Comma",
   "libcst.Name",
   "libcst.SimpleWhitespace",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_assert.AssertConstructionTest.test_valid": {
  "lineno": 18,
  "symbols_in_volume": [
   "libcst.Assert",
   "libcst.Comma",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.RightParen",
   "libcst.SimpleString",
   "libcst.SimpleWhitespace",
   "libcst.metadata.CodeRange",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_assert.AssertParsingTest": {
  "lineno": 97,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_assert.AssertParsingTest.test_valid": {
  "lineno": 98,
  "symbols_in_volume": [
   "libcst.Assert",
   "libcst.Comma",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.RightParen",
   "libcst.SimpleString",
   "libcst.SimpleWhitespace",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_assert._assert_parser": {
  "lineno": 91,
  "symbols_in_volume": [
   "libcst.Assert",
   "libcst.SimpleStatementLine",
   "libcst.helpers.ensure_type",
   "libcst.parse_statement"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_assign": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_assign.AnnAssignTest": {
  "lineno": 123,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_assign.AnnAssignTest.test_invalid": {
  "lineno": 269,
  "symbols_in_volume": [
   "libcst.AnnAssign",
   "libcst.Annotation",
   "libcst.AssignEqual",
   "libcst.Name",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_assign.AnnAssignTest.test_valid": {
  "lineno": 124,
  "symbols_in_volume": [
   "libcst.AnnAssign",
   "libcst.Annotation",
   "libcst.AssignEqual",
   "libcst.Index",
   "libcst.Integer",
   "libcst.Name",
   "libcst.SimpleStatementLine",
   "libcst.SimpleWhitespace",
   "libcst.Subscript",
   "libcst.SubscriptElement",
   "libcst.metadata.CodeRange",
   "libcst.parse_statement",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_assign.AssignTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_assign.AssignTest.test_invalid": {
  "lineno": 111,
  "symbols_in_volume": [
   "libcst.Assign",
   "libcst.Integer",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_assign.AssignTest.test_valid": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.Assign",
   "libcst.AssignTarget",
   "libcst.Integer",
   "libcst.Name",
   "libcst.SimpleStatementLine",
   "libcst.SimpleWhitespace",
   "libcst.metadata.CodeRange",
   "libcst.parse_statement",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_assign.AugAssignTest": {
  "lineno": 288,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_assign.AugAssignTest.test_valid": {
  "lineno": 289,
  "symbols_in_volume": [
   "libcst.AddAssign",
   "libcst.AugAssign",
   "libcst.Integer",
   "libcst.LeftShiftAssign",
   "libcst.MultiplyAssign",
   "libcst.Name",
   "libcst.SimpleStatementLine",
   "libcst.SimpleWhitespace",
   "libcst.metadata.CodeRange",
   "libcst.parse_statement",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_atom": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_atom.AtomTest": {
  "lineno": 22,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_atom.AtomTest.test_invalid": {
  "lineno": 747,
  "symbols_in_volume": [
   "libcst.Comparison",
   "libcst.ComparisonTarget",
   "libcst.ConcatenatedString",
   "libcst.Ellipsis",
   "libcst.Float",
   "libcst.FormattedString",
   "libcst.Imaginary",
   "libcst.In",
   "libcst.Integer",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.RightParen",
   "libcst.SimpleString",
   "libcst.SimpleWhitespace",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_atom.AtomTest.test_valid": {
  "lineno": 23,
  "symbols_in_volume": [
   "libcst.AssignEqual",
   "libcst.Call",
   "libcst.Comparison",
   "libcst.ComparisonTarget",
   "libcst.ConcatenatedString",
   "libcst.Ellipsis",
   "libcst.Equal",
   "libcst.Float",
   "libcst.FormattedString",
   "libcst.FormattedStringExpression",
   "libcst.FormattedStringText",
   "libcst.Imaginary",
   "libcst.In",
   "libcst.Integer",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.NamedExpr",
   "libcst.NotEqual",
   "libcst.RightParen",
   "libcst.SimpleString",
   "libcst.SimpleWhitespace",
   "libcst.metadata.CodeRange",
   "libcst.parse_expression",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_atom.AtomTest.test_valid_no_parse": {
  "lineno": 730,
  "symbols_in_volume": [
   "libcst.FormattedStringExpression",
   "libcst.FormattedStringText",
   "libcst.Name",
   "libcst.metadata.CodeRange",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_atom.AtomTest.test_versions": {
  "lineno": 1025,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.parse_expression_as",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_atom.StringHelperTest": {
  "lineno": 1043,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_atom.StringHelperTest.test_string_prefix_and_quotes": {
  "lineno": 1044,
  "symbols_in_volume": [
   "libcst.FormattedString",
   "libcst.SimpleString",
   "libcst.ensure_type",
   "libcst.parse_expression"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_atom._parse_expression_force_38": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.PartialParserConfig",
   "libcst.parse_expression"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_attribute": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_attribute.AttributeTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_attribute.AttributeTest.test_invalid": {
  "lineno": 58,
  "symbols_in_volume": [
   "libcst.Attribute",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.RightParen",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_attribute.AttributeTest.test_valid": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.Attribute",
   "libcst.Dot",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.RightParen",
   "libcst.SimpleWhitespace",
   "libcst.metadata.CodeRange",
   "libcst.parse_expression",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_await": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_await.AwaitTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_await.AwaitTest.test_invalid": {
  "lineno": 147,
  "symbols_in_volume": [
   "libcst.Await",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.RightParen",
   "libcst.SimpleWhitespace",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_await.AwaitTest.test_valid_py36": {
  "lineno": 56,
  "symbols_in_volume": [
   "libcst.Asynchronous",
   "libcst.Await",
   "libcst.Call",
   "libcst.Expr",
   "libcst.FunctionDef",
   "libcst.IndentedBlock",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.Parameters",
   "libcst.PartialParserConfig",
   "libcst.RightParen",
   "libcst.SimpleStatementLine",
   "libcst.SimpleWhitespace",
   "libcst.parse_statement",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_await.AwaitTest.test_valid_py37": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.Await",
   "libcst.Call",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.PartialParserConfig",
   "libcst.RightParen",
   "libcst.SimpleWhitespace",
   "libcst.metadata.CodeRange",
   "libcst.parse_expression",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_binary_op": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_binary_op.BinaryOperationTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_binary_op.BinaryOperationTest.test_invalid": {
  "lineno": 149,
  "symbols_in_volume": [
   "libcst.Add",
   "libcst.BinaryOperation",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.RightParen",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_binary_op.BinaryOperationTest.test_valid": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.Add",
   "libcst.BinaryOperation",
   "libcst.BitAnd",
   "libcst.BitOr",
   "libcst.BitXor",
   "libcst.Divide",
   "libcst.Float",
   "libcst.FloorDivide",
   "libcst.Integer",
   "libcst.LeftParen",
   "libcst.LeftShift",
   "libcst.MatrixMultiply",
   "libcst.Modulo",
   "libcst.Multiply",
   "libcst.Name",
   "libcst.RightParen",
   "libcst.RightShift",
   "libcst.SimpleWhitespace",
   "libcst.Subtract",
   "libcst.metadata.CodeRange",
   "libcst.parse_expression",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_boolean_op": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_boolean_op.BooleanOperationTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_boolean_op.BooleanOperationTest.test_invalid": {
  "lineno": 86,
  "symbols_in_volume": [
   "libcst.And",
   "libcst.BooleanOperation",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.Or",
   "libcst.RightParen",
   "libcst.SimpleWhitespace",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_boolean_op.BooleanOperationTest.test_valid": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.And",
   "libcst.BooleanOperation",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.Or",
   "libcst.RightParen",
   "libcst.SimpleWhitespace",
   "libcst.metadata.CodeRange",
   "libcst.parse_expression",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_call": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_call.CallTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_call.CallTest.test_invalid": {
  "lineno": 460,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.AssignEqual",
   "libcst.Call",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.RightParen",
   "libcst.SimpleString",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_call.CallTest.test_valid": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.AssignEqual",
   "libcst.Attribute",
   "libcst.Call",
   "libcst.Comma",
   "libcst.Integer",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.RightParen",
   "libcst.SimpleWhitespace",
   "libcst.metadata.CodeRange",
   "libcst.parse_expression",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_classdef": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_classdef.ClassDefCreationTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_classdef.ClassDefCreationTest.test_invalid": {
  "lineno": 115,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.ClassDef",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.Pass",
   "libcst.RightParen",
   "libcst.SimpleStatementSuite",
   "libcst.SimpleWhitespace",
   "libcst.testing.utils.data_provider",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_classdef.ClassDefCreationTest.test_valid": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.ClassDef",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.Pass",
   "libcst.RightParen",
   "libcst.SimpleStatementSuite",
   "libcst.metadata.CodeRange",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_classdef.ClassDefParserTest": {
  "lineno": 151,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_classdef.ClassDefParserTest.test_valid": {
  "lineno": 152,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.AssignEqual",
   "libcst.ClassDef",
   "libcst.Comma",
   "libcst.Comment",
   "libcst.Decorator",
   "libcst.EmptyLine",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.Pass",
   "libcst.RightParen",
   "libcst.SimpleStatementSuite",
   "libcst.SimpleWhitespace",
   "libcst.metadata.CodeRange",
   "libcst.parse_statement",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_comment": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_comment.CommentTest": {
  "lineno": 13,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_comment.CommentTest.test_invalid": {
  "lineno": 24,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Comment",
   "libcst.testing.utils.data_provider",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_comment.CommentTest.test_valid": {
  "lineno": 14,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Comment",
   "libcst.testing.utils.data_provider"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_comparison": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_comparison.ComparisonTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_comparison.ComparisonTest.test_invalid": {
  "lineno": 232,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Comparison",
   "libcst.ComparisonTarget",
   "libcst.GreaterThan",
   "libcst.IfExp",
   "libcst.Integer",
   "libcst.Is",
   "libcst.LeftParen",
   "libcst.LessThan",
   "libcst.Name",
   "libcst.NotIn",
   "libcst.RightParen",
   "libcst.SimpleWhitespace",
   "libcst.testing.utils.data_provider",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_comparison.ComparisonTest.test_valid": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Comparison",
   "libcst.ComparisonTarget",
   "libcst.Equal",
   "libcst.GreaterThan",
   "libcst.IfExp",
   "libcst.In",
   "libcst.Integer",
   "libcst.Is",
   "libcst.IsNot",
   "libcst.LeftParen",
   "libcst.LessThan",
   "libcst.Name",
   "libcst.NotEqual",
   "libcst.NotIn",
   "libcst.RightParen",
   "libcst.SimpleWhitespace",
   "libcst.metadata.CodeRange",
   "libcst.parse_expression",
   "libcst.testing.utils.data_provider",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_cst_node": {
  "lineno": null,
  "symbols_in_volume": [
   "libcst.SimpleWhitespace"
  ],
  "type": "module"
 },
 "libcst._nodes.tests.test_cst_node.CSTNodeTest": {
  "lineno": 56,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_cst_node.CSTNodeTest.test_deep_equals_fails": {
  "lineno": 107,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.EmptyLine",
   "libcst.Pass",
   "libcst.Semicolon",
   "libcst.SimpleStatementLine",
   "libcst.SimpleWhitespace",
   "libcst.testing.utils.data_provider"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_cst_node.CSTNodeTest.test_deep_equals_success": {
  "lineno": 90,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.EmptyLine",
   "libcst.Pass",
   "libcst.SimpleStatementLine",
   "libcst.SimpleWhitespace",
   "libcst.testing.utils.data_provider"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_cst_node.CSTNodeTest.test_default_eq": {
  "lineno": 74,
  "symbols_in_volume": [
   "libcst.SimpleWhitespace"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_cst_node.CSTNodeTest.test_hash": {
  "lineno": 83,
  "symbols_in_volume": [
   "libcst.SimpleWhitespace"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_cst_node.CSTNodeTest.test_repr": {
  "lineno": 123,
  "symbols_in_volume": [
   "libcst.Comment",
   "libcst.EmptyLine",
   "libcst.Newline",
   "libcst.Pass",
   "libcst.SimpleStatementLine",
   "libcst.SimpleWhitespace",
   "libcst.TrailingWhitespace",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_cst_node.CSTNodeTest.test_visit": {
  "lineno": 196,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.Pass",
   "libcst.SimpleStatementLine"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_cst_node.CSTNodeTest.test_with_changes": {
  "lineno": 57,
  "symbols_in_volume": [
   "libcst.Comment",
   "libcst.Newline",
   "libcst.SimpleWhitespace",
   "libcst.TrailingWhitespace",
   "libcst.testing.utils.none_throws"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_cst_node._TestVisitor": {
  "lineno": 19,
  "symbols_in_volume": [
   "libcst._visitors.CSTTransformer"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_cst_node._TestVisitor.__init__": {
  "lineno": 20,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_cst_node._TestVisitor.assert_counter": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.tests.test_cst_node._TestVisitor.on_leave": {
  "lineno": 39,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.Newline",
   "libcst.Pass",
   "libcst.SimpleStatementLine",
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._types.CSTNodeT",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_cst_node._TestVisitor.on_visit": {
  "lineno": 28,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Module",
   "libcst.Newline",
   "libcst.Pass",
   "libcst.SimpleStatementLine"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_del": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_del.DelTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_del.DelTest.test_invalid": {
  "lineno": 65,
  "symbols_in_volume": [
   "libcst.Del",
   "libcst.Name",
   "libcst.SimpleWhitespace",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_del.DelTest.test_valid": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.Del",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.RightParen",
   "libcst.Semicolon",
   "libcst.SimpleStatementLine",
   "libcst.SimpleWhitespace",
   "libcst.metadata.CodeRange",
   "libcst.parse_statement",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_dict": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_dict.DictTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_dict.DictTest.test_invalid": {
  "lineno": 163,
  "symbols_in_volume": [
   "libcst.Dict",
   "libcst.LeftParen",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_dict.DictTest.test_valid": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.Comma",
   "libcst.CompFor",
   "libcst.CompIf",
   "libcst.Dict",
   "libcst.DictElement",
   "libcst.GeneratorExp",
   "libcst.LeftCurlyBrace",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.RightCurlyBrace",
   "libcst.RightParen",
   "libcst.SimpleWhitespace",
   "libcst.StarredDictElement",
   "libcst.metadata.CodeRange",
   "libcst.parse_expression",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_dict.DictTest.test_versions": {
  "lineno": 175,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.parse_expression_as",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_dict_comp": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_dict_comp.DictCompTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_dict_comp.DictCompTest.test_invalid": {
  "lineno": 117,
  "symbols_in_volume": [
   "libcst.Asynchronous",
   "libcst.CompFor",
   "libcst.DictComp",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.SimpleWhitespace",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_dict_comp.DictCompTest.test_valid": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.CompFor",
   "libcst.CompIf",
   "libcst.DictComp",
   "libcst.LeftCurlyBrace",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.RightCurlyBrace",
   "libcst.RightParen",
   "libcst.SimpleWhitespace",
   "libcst.metadata.CodeRange",
   "libcst.parse_expression",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_docstring": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_docstring.DocstringTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_docstring.DocstringTest.test_class_docstring": {
  "lineno": 89,
  "symbols_in_volume": [
   "libcst.ClassDef",
   "libcst.helpers.ensure_type",
   "libcst.parse_statement",
   "libcst.testing.utils.data_provider",
   "textwrap.dedent",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_docstring.DocstringTest.test_clean_docstring": {
  "lineno": 129,
  "symbols_in_volume": [
   "libcst.parse_module",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_docstring.DocstringTest.test_function_docstring": {
  "lineno": 41,
  "symbols_in_volume": [
   "libcst.FunctionDef",
   "libcst.helpers.ensure_type",
   "libcst.parse_statement",
   "libcst.testing.utils.data_provider",
   "textwrap.dedent",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_docstring.DocstringTest.test_module_docstring": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.parse_module",
   "libcst.testing.utils.data_provider",
   "textwrap.dedent",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_else": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_else.ElseTest": {
  "lineno": 14,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_else.ElseTest.test_valid": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst.Else",
   "libcst.Pass",
   "libcst.SimpleStatementSuite",
   "libcst.SimpleWhitespace",
   "libcst.metadata.CodeRange",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_empty_line": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_empty_line.EmptyLineTest": {
  "lineno": 11,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_empty_line.EmptyLineTest.test_valid": {
  "lineno": 12,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Comment",
   "libcst.EmptyLine",
   "libcst.Newline",
   "libcst.SimpleWhitespace",
   "libcst._nodes.tests.base.DummyIndentedBlock",
   "libcst.testing.utils.data_provider"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_for": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_for.ForTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_for.ForTest.test_invalid": {
  "lineno": 161,
  "symbols_in_volume": [
   "libcst.Call",
   "libcst.For",
   "libcst.Name",
   "libcst.Pass",
   "libcst.SimpleStatementSuite",
   "libcst.SimpleWhitespace",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_for.ForTest.test_valid": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.Asynchronous",
   "libcst.Call",
   "libcst.Comment",
   "libcst.Else",
   "libcst.EmptyLine",
   "libcst.For",
   "libcst.FunctionDef",
   "libcst.IndentedBlock",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.Parameters",
   "libcst.PartialParserConfig",
   "libcst.Pass",
   "libcst.RightParen",
   "libcst.SimpleStatementLine",
   "libcst.SimpleStatementSuite",
   "libcst.SimpleWhitespace",
   "libcst._nodes.tests.base.DummyIndentedBlock",
   "libcst.metadata.CodeRange",
   "libcst.parse_statement",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_funcdef": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_funcdef.FunctionDefCreationTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_funcdef.FunctionDefCreationTest.test_invalid": {
  "lineno": 689,
  "symbols_in_volume": [
   "libcst.AssignEqual",
   "libcst.Asynchronous",
   "libcst.CSTNode",
   "libcst.Decorator",
   "libcst.FunctionDef",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.Param",
   "libcst.ParamSlash",
   "libcst.ParamStar",
   "libcst.Parameters",
   "libcst.Pass",
   "libcst.RightParen",
   "libcst.SimpleStatementSuite",
   "libcst.SimpleString",
   "libcst.SimpleWhitespace",
   "libcst.testing.utils.data_provider",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_funcdef.FunctionDefCreationTest.test_valid": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.Annotation",
   "libcst.Arg",
   "libcst.Asynchronous",
   "libcst.Call",
   "libcst.Comment",
   "libcst.Decorator",
   "libcst.EmptyLine",
   "libcst.Float",
   "libcst.FunctionDef",
   "libcst.IndentedBlock",
   "libcst.Integer",
   "libcst.Name",
   "libcst.Param",
   "libcst.Parameters",
   "libcst.ParenthesizedWhitespace",
   "libcst.Pass",
   "libcst.SimpleStatementLine",
   "libcst.SimpleStatementSuite",
   "libcst.SimpleString",
   "libcst.SimpleWhitespace",
   "libcst._nodes.tests.base.DummyIndentedBlock",
   "libcst.metadata.CodeRange",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_funcdef.FunctionDefParserTest": {
  "lineno": 866,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_funcdef.FunctionDefParserTest.test_valid": {
  "lineno": 867,
  "symbols_in_volume": [
   "libcst.Annotation",
   "libcst.Arg",
   "libcst.AssignEqual",
   "libcst.Asynchronous",
   "libcst.CSTNode",
   "libcst.Call",
   "libcst.Comma",
   "libcst.Comment",
   "libcst.Decorator",
   "libcst.EmptyLine",
   "libcst.Float",
   "libcst.FunctionDef",
   "libcst.Integer",
   "libcst.Name",
   "libcst.Param",
   "libcst.ParamStar",
   "libcst.Parameters",
   "libcst.Pass",
   "libcst.SimpleStatementSuite",
   "libcst.SimpleString",
   "libcst.SimpleWhitespace",
   "libcst.parse_statement",
   "libcst.testing.utils.data_provider"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_funcdef.FunctionDefParserTest.test_valid_38": {
  "lineno": 1756,
  "symbols_in_volume": [
   "libcst.Annotation",
   "libcst.AssignEqual",
   "libcst.CSTNode",
   "libcst.Comma",
   "libcst.FunctionDef",
   "libcst.Integer",
   "libcst.Name",
   "libcst.Param",
   "libcst.ParamSlash",
   "libcst.ParamStar",
   "libcst.Parameters",
   "libcst.Pass",
   "libcst.SimpleStatementSuite",
   "libcst.SimpleString",
   "libcst.SimpleWhitespace",
   "libcst.testing.utils.data_provider"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_funcdef.FunctionDefParserTest.test_versions": {
  "lineno": 1998,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.parse_statement_as",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_funcdef._parse_statement_force_38": {
  "lineno": 857,
  "symbols_in_volume": [
   "libcst.BaseCompoundStatement",
   "libcst.PartialParserConfig",
   "libcst.parse_statement"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_global": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_global.GlobalConstructionTest": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_global.GlobalConstructionTest.test_invalid": {
  "lineno": 51,
  "symbols_in_volume": [
   "libcst.Comma",
   "libcst.Global",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.NameItem",
   "libcst.RightParen",
   "libcst.SimpleWhitespace",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_global.GlobalConstructionTest.test_valid": {
  "lineno": 17,
  "symbols_in_volume": [
   "libcst.Comma",
   "libcst.Global",
   "libcst.Name",
   "libcst.NameItem",
   "libcst.SimpleWhitespace",
   "libcst.metadata.CodeRange",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_global.GlobalParsingTest": {
  "lineno": 92,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_global.GlobalParsingTest.test_valid": {
  "lineno": 93,
  "symbols_in_volume": [
   "libcst.Comma",
   "libcst.Global",
   "libcst.Name",
   "libcst.NameItem",
   "libcst.SimpleStatementLine",
   "libcst.SimpleWhitespace",
   "libcst.helpers.ensure_type",
   "libcst.parse_statement",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_if": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_if.IfTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_if.IfTest.test_valid": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.Comment",
   "libcst.Else",
   "libcst.EmptyLine",
   "libcst.If",
   "libcst.IndentedBlock",
   "libcst.Name",
   "libcst.Pass",
   "libcst.SimpleStatementLine",
   "libcst.SimpleStatementSuite",
   "libcst.SimpleWhitespace",
   "libcst._nodes.tests.base.DummyIndentedBlock",
   "libcst.metadata.CodeRange",
   "libcst.parse_statement",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_ifexp": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_ifexp.IfExpTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_ifexp.IfExpTest.test_invalid": {
  "lineno": 78,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.IfExp",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.RightParen",
   "libcst.testing.utils.data_provider",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_ifexp.IfExpTest.test_valid": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.IfExp",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.RightParen",
   "libcst.SimpleWhitespace",
   "libcst.metadata.CodeRange",
   "libcst.parse_expression",
   "libcst.testing.utils.data_provider",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_import": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_import.ImportCreateTest": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_import.ImportCreateTest.test_invalid": {
  "lineno": 150,
  "symbols_in_volume": [
   "libcst.Attribute",
   "libcst.Comma",
   "libcst.Float",
   "libcst.Import",
   "libcst.ImportAlias",
   "libcst.Name",
   "libcst.SimpleWhitespace",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_import.ImportCreateTest.test_valid": {
  "lineno": 17,
  "symbols_in_volume": [
   "libcst.AsName",
   "libcst.Attribute",
   "libcst.Comma",
   "libcst.Dot",
   "libcst.Import",
   "libcst.ImportAlias",
   "libcst.Name",
   "libcst.SimpleWhitespace",
   "libcst.metadata.CodeRange",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_import.ImportFromCreateTest": {
  "lineno": 359,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_import.ImportFromCreateTest.test_invalid": {
  "lineno": 501,
  "symbols_in_volume": [
   "libcst.ImportAlias",
   "libcst.ImportFrom",
   "libcst.ImportStar",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.RightParen",
   "libcst.SimpleWhitespace",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_import.ImportFromCreateTest.test_valid": {
  "lineno": 360,
  "symbols_in_volume": [
   "libcst.AsName",
   "libcst.Comma",
   "libcst.Dot",
   "libcst.ImportAlias",
   "libcst.ImportFrom",
   "libcst.ImportStar",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.RightParen",
   "libcst.SimpleWhitespace",
   "libcst.metadata.CodeRange",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_import.ImportFromParseTest": {
  "lineno": 573,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_import.ImportFromParseTest.test_valid": {
  "lineno": 574,
  "symbols_in_volume": [
   "libcst.AsName",
   "libcst.Comma",
   "libcst.Dot",
   "libcst.ImportAlias",
   "libcst.ImportFrom",
   "libcst.ImportStar",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.RightParen",
   "libcst.SimpleStatementLine",
   "libcst.SimpleWhitespace",
   "libcst.helpers.ensure_type",
   "libcst.parse_statement",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_import.ImportParseTest": {
  "lineno": 216,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_import.ImportParseTest.test_valid": {
  "lineno": 217,
  "symbols_in_volume": [
   "libcst.AsName",
   "libcst.Attribute",
   "libcst.Comma",
   "libcst.Dot",
   "libcst.Import",
   "libcst.ImportAlias",
   "libcst.Name",
   "libcst.SimpleStatementLine",
   "libcst.SimpleWhitespace",
   "libcst.helpers.ensure_type",
   "libcst.parse_statement",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_indented_block": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_indented_block.IndentedBlockTest": {
  "lineno": 14,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_indented_block.IndentedBlockTest.test_invalid": {
  "lineno": 136,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.IndentedBlock",
   "libcst.Pass",
   "libcst.SimpleStatementLine",
   "libcst.testing.utils.data_provider",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_indented_block.IndentedBlockTest.test_valid": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Comment",
   "libcst.Continue",
   "libcst.EmptyLine",
   "libcst.If",
   "libcst.IndentedBlock",
   "libcst.Name",
   "libcst.Pass",
   "libcst.SimpleStatementLine",
   "libcst.SimpleWhitespace",
   "libcst.TrailingWhitespace",
   "libcst.parse_statement",
   "libcst.testing.utils.data_provider",
   "typing.Callable",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_lambda": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_lambda.LambdaCreationTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_lambda.LambdaCreationTest.test_invalid": {
  "lineno": 246,
  "symbols_in_volume": [
   "libcst.Annotation",
   "libcst.AssignEqual",
   "libcst.CSTNode",
   "libcst.Integer",
   "libcst.Lambda",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.Param",
   "libcst.ParamStar",
   "libcst.Parameters",
   "libcst.RightParen",
   "libcst.SimpleString",
   "libcst.SimpleWhitespace",
   "libcst.testing.utils.data_provider",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_lambda.LambdaCreationTest.test_valid": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Colon",
   "libcst.Float",
   "libcst.Integer",
   "libcst.Lambda",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.Param",
   "libcst.Parameters",
   "libcst.RightParen",
   "libcst.SimpleString",
   "libcst.SimpleWhitespace",
   "libcst.metadata.CodeRange",
   "libcst.testing.utils.data_provider",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_lambda.LambdaParserTest": {
  "lineno": 494,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_lambda.LambdaParserTest.test_valid": {
  "lineno": 495,
  "symbols_in_volume": [
   "libcst.AssignEqual",
   "libcst.CSTNode",
   "libcst.Colon",
   "libcst.Comma",
   "libcst.Float",
   "libcst.Integer",
   "libcst.Lambda",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.Param",
   "libcst.ParamStar",
   "libcst.Parameters",
   "libcst.RightParen",
   "libcst.SimpleString",
   "libcst.SimpleWhitespace",
   "libcst.metadata.CodeRange",
   "libcst.parse_expression",
   "libcst.testing.utils.data_provider",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_lambda.LambdaParserTest.test_valid_38": {
  "lineno": 938,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Comma",
   "libcst.Integer",
   "libcst.Lambda",
   "libcst.Name",
   "libcst.Param",
   "libcst.ParamSlash",
   "libcst.Parameters",
   "libcst.SimpleWhitespace",
   "libcst.metadata.CodeRange",
   "libcst.testing.utils.data_provider",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_lambda._parse_expression_force_38": {
  "lineno": 488,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.PartialParserConfig",
   "libcst.parse_expression"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_leaf_small_statements": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_leaf_small_statements.LeafSmallStatementsTest": {
  "lineno": 11,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_leaf_small_statements.LeafSmallStatementsTest.test_valid": {
  "lineno": 12,
  "symbols_in_volume": [
   "libcst.Break",
   "libcst.CSTNode",
   "libcst.Continue",
   "libcst.Pass",
   "libcst.testing.utils.data_provider"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_list": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_list.ListTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_list.ListTest.test_invalid": {
  "lineno": 97,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Element",
   "libcst.LeftParen",
   "libcst.List",
   "libcst.Name",
   "libcst.RightParen",
   "libcst.testing.utils.data_provider",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_list.ListTest.test_valid": {
  "lineno": 19,
  "symbols_in_volume": [
   "libcst.Comma",
   "libcst.Element",
   "libcst.For",
   "libcst.LeftParen",
   "libcst.LeftSquareBracket",
   "libcst.List",
   "libcst.Name",
   "libcst.Pass",
   "libcst.RightParen",
   "libcst.RightSquareBracket",
   "libcst.SimpleStatementSuite",
   "libcst.SimpleWhitespace",
   "libcst.StarredElement",
   "libcst.metadata.CodeRange",
   "libcst.parse_expression",
   "libcst.parse_statement",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_list.ListTest.test_versions": {
  "lineno": 114,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.parse_expression_as",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_matrix_multiply": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_matrix_multiply.NamedExprTest": {
  "lineno": 17,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_matrix_multiply.NamedExprTest.test_valid": {
  "lineno": 18,
  "symbols_in_volume": [
   "libcst.AugAssign",
   "libcst.BinaryOperation",
   "libcst.MatrixMultiply",
   "libcst.MatrixMultiplyAssign",
   "libcst.Name",
   "libcst.SimpleStatementLine",
   "libcst._nodes.tests.base.parse_expression_as",
   "libcst._nodes.tests.base.parse_statement_as",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_matrix_multiply.NamedExprTest.test_versions": {
  "lineno": 47,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.parse_expression_as",
   "libcst._nodes.tests.base.parse_statement_as",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_module": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_module.ModuleTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_module.ModuleTest.cmp_position": {
  "lineno": 139,
  "symbols_in_volume": [
   "libcst.metadata.CodeRange",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_module.ModuleTest.test_code_and_bytes_properties": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.Comment",
   "libcst.EmptyLine",
   "libcst.Module",
   "libcst.Pass",
   "libcst.SimpleStatementLine",
   "libcst.testing.utils.data_provider"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_module.ModuleTest.test_code_for_node": {
  "lineno": 63,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Module",
   "libcst.Newline",
   "libcst.testing.utils.data_provider"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_module.ModuleTest.test_function_position": {
  "lineno": 144,
  "symbols_in_volume": [
   "libcst.FunctionDef",
   "libcst.Pass",
   "libcst.SimpleStatementLine",
   "libcst.metadata.MetadataWrapper",
   "libcst.metadata.PositionProvider",
   "libcst.parse_module",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_module.ModuleTest.test_module_config_for_parsing": {
  "lineno": 188,
  "symbols_in_volume": [
   "libcst.If",
   "libcst.IndentedBlock",
   "libcst.Name",
   "libcst.Newline",
   "libcst.Pass",
   "libcst.SimpleStatementLine",
   "libcst.TrailingWhitespace",
   "libcst.parse_module",
   "libcst.parse_statement"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_module.ModuleTest.test_module_position": {
  "lineno": 118,
  "symbols_in_volume": [
   "libcst.metadata.CodeRange",
   "libcst.metadata.MetadataWrapper",
   "libcst.metadata.PositionProvider",
   "libcst.parse_module",
   "libcst.testing.utils.data_provider"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_module.ModuleTest.test_multiline_string_position": {
  "lineno": 175,
  "symbols_in_volume": [
   "libcst.Expr",
   "libcst.SimpleStatementLine",
   "libcst.metadata.MetadataWrapper",
   "libcst.metadata.PositionProvider",
   "libcst.parse_module",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_module.ModuleTest.test_nested_indent_position": {
  "lineno": 155,
  "symbols_in_volume": [
   "libcst.Else",
   "libcst.If",
   "libcst.SimpleStatementLine",
   "libcst.metadata.MetadataWrapper",
   "libcst.metadata.PositionProvider",
   "libcst.parse_module",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_module.ModuleTest.test_parser": {
  "lineno": 77,
  "symbols_in_volume": [
   "libcst.Comment",
   "libcst.EmptyLine",
   "libcst.Module",
   "libcst.Pass",
   "libcst.SimpleStatementLine",
   "libcst.SimpleWhitespace",
   "libcst.TrailingWhitespace",
   "libcst.parse_module",
   "libcst.testing.utils.data_provider"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_namedexpr": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_namedexpr.NamedExprTest": {
  "lineno": 29,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_namedexpr.NamedExprTest.test_invalid": {
  "lineno": 109,
  "symbols_in_volume": [
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.NamedExpr",
   "libcst.RightParen",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_namedexpr.NamedExprTest.test_valid": {
  "lineno": 30,
  "symbols_in_volume": [
   "libcst.Call",
   "libcst.Float",
   "libcst.If",
   "libcst.Integer",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.NamedExpr",
   "libcst.Pass",
   "libcst.RightParen",
   "libcst.SimpleStatementSuite",
   "libcst.SimpleWhitespace",
   "libcst.While",
   "libcst.metadata.CodeRange",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_namedexpr._parse_expression_force_38": {
  "lineno": 14,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.PartialParserConfig",
   "libcst.parse_expression"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_namedexpr._parse_statement_force_38": {
  "lineno": 20,
  "symbols_in_volume": [
   "libcst.BaseCompoundStatement",
   "libcst.PartialParserConfig",
   "libcst.parse_statement"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_newline": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_newline.NewlineTest": {
  "lineno": 13,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_newline.NewlineTest.test_invalid": {
  "lineno": 24,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Newline",
   "libcst.testing.utils.data_provider",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_newline.NewlineTest.test_valid": {
  "lineno": 14,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Newline",
   "libcst.testing.utils.data_provider"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_nonlocal": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_nonlocal.NonlocalConstructionTest": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_nonlocal.NonlocalConstructionTest.test_invalid": {
  "lineno": 55,
  "symbols_in_volume": [
   "libcst.Comma",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.NameItem",
   "libcst.Nonlocal",
   "libcst.RightParen",
   "libcst.SimpleWhitespace",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_nonlocal.NonlocalConstructionTest.test_valid": {
  "lineno": 17,
  "symbols_in_volume": [
   "libcst.Comma",
   "libcst.Name",
   "libcst.NameItem",
   "libcst.Nonlocal",
   "libcst.SimpleWhitespace",
   "libcst.metadata.CodeRange",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_nonlocal.NonlocalParsingTest": {
  "lineno": 96,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_nonlocal.NonlocalParsingTest.test_valid": {
  "lineno": 97,
  "symbols_in_volume": [
   "libcst.Comma",
   "libcst.Name",
   "libcst.NameItem",
   "libcst.Nonlocal",
   "libcst.SimpleStatementLine",
   "libcst.SimpleWhitespace",
   "libcst.helpers.ensure_type",
   "libcst.parse_statement",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_number": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_number.NumberTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_number.NumberTest.test_invalid": {
  "lineno": 100,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Float",
   "libcst.Imaginary",
   "libcst.Integer",
   "libcst.LeftParen",
   "libcst.RightParen",
   "libcst.testing.utils.data_provider",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_number.NumberTest.test_valid": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Integer",
   "libcst.LeftParen",
   "libcst.Minus",
   "libcst.Plus",
   "libcst.RightParen",
   "libcst.UnaryOperation",
   "libcst.metadata.CodeRange",
   "libcst.parse_expression",
   "libcst.testing.utils.data_provider",
   "typing.Callable",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_raise": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_raise.RaiseConstructionTest": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_raise.RaiseConstructionTest.test_invalid": {
  "lineno": 84,
  "symbols_in_volume": [
   "libcst.Call",
   "libcst.From",
   "libcst.Name",
   "libcst.Raise",
   "libcst.SimpleWhitespace",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_raise.RaiseConstructionTest.test_valid": {
  "lineno": 17,
  "symbols_in_volume": [
   "libcst.Call",
   "libcst.From",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.Raise",
   "libcst.RightParen",
   "libcst.SimpleWhitespace",
   "libcst.metadata.CodeRange",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_raise.RaiseParsingTest": {
  "lineno": 125,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_raise.RaiseParsingTest.test_valid": {
  "lineno": 126,
  "symbols_in_volume": [
   "libcst.Call",
   "libcst.From",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.Raise",
   "libcst.RightParen",
   "libcst.SimpleStatementLine",
   "libcst.SimpleWhitespace",
   "libcst.helpers.ensure_type",
   "libcst.parse_statement",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_removal_behavior": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_removal_behavior.ContinueStatementRemovalVisitor": {
  "lineno": 26,
  "symbols_in_volume": [
   "libcst._visitors.CSTTransformer"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_removal_behavior.ContinueStatementRemovalVisitor.on_leave": {
  "lineno": 27,
  "symbols_in_volume": [
   "libcst.Continue",
   "libcst.RemovalSentinel",
   "libcst.RemoveFromParent",
   "libcst._types.CSTNodeT",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_removal_behavior.IfStatementRemovalVisitor": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst._visitors.CSTTransformer"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_removal_behavior.IfStatementRemovalVisitor.on_leave": {
  "lineno": 17,
  "symbols_in_volume": [
   "libcst.If",
   "libcst.RemovalSentinel",
   "libcst.RemoveFromParent",
   "libcst._types.CSTNodeT",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_removal_behavior.RemovalBehavior": {
  "lineno": 52,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_removal_behavior.RemovalBehavior.test_removal_pass_behavior": {
  "lineno": 53,
  "symbols_in_volume": [
   "libcst._visitors.CSTTransformer",
   "libcst.parse_module",
   "libcst.testing.utils.data_provider",
   "typing.Type"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_removal_behavior.SpecificImportRemovalVisitor": {
  "lineno": 36,
  "symbols_in_volume": [
   "libcst._visitors.CSTTransformer"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_removal_behavior.SpecificImportRemovalVisitor.on_leave": {
  "lineno": 37,
  "symbols_in_volume": [
   "libcst.Import",
   "libcst.ImportFrom",
   "libcst.Name",
   "libcst.RemovalSentinel",
   "libcst.RemoveFromParent",
   "libcst._types.CSTNodeT",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_return": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_return.ReturnCreateTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_return.ReturnCreateTest.test_invalid": {
  "lineno": 33,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.Return",
   "libcst.SimpleWhitespace",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_return.ReturnCreateTest.test_valid": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.Return",
   "libcst.SimpleStatementLine",
   "libcst.metadata.CodeRange",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_return.ReturnParseTest": {
  "lineno": 47,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_return.ReturnParseTest.test_valid": {
  "lineno": 48,
  "symbols_in_volume": [
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.Return",
   "libcst.RightParen",
   "libcst.Semicolon",
   "libcst.SimpleStatementLine",
   "libcst.SimpleWhitespace",
   "libcst.parse_statement",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_set": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_set.ListTest": {
  "lineno": 14,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_set.ListTest.test_invalid": {
  "lineno": 103,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Element",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.RightParen",
   "libcst.Set",
   "libcst.testing.utils.data_provider",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_set.ListTest.test_valid": {
  "lineno": 18,
  "symbols_in_volume": [
   "libcst.Comma",
   "libcst.CompFor",
   "libcst.CompIf",
   "libcst.Element",
   "libcst.GeneratorExp",
   "libcst.LeftCurlyBrace",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.RightCurlyBrace",
   "libcst.RightParen",
   "libcst.Set",
   "libcst.SimpleWhitespace",
   "libcst.StarredElement",
   "libcst.parse_expression",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_set.ListTest.test_versions": {
  "lineno": 121,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.parse_expression_as",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_simple_comp": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_simple_comp.SimpleCompTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_simple_comp.SimpleCompTest.test_invalid": {
  "lineno": 341,
  "symbols_in_volume": [
   "libcst.Asynchronous",
   "libcst.CSTNode",
   "libcst.CompFor",
   "libcst.CompIf",
   "libcst.GeneratorExp",
   "libcst.LeftParen",
   "libcst.ListComp",
   "libcst.Name",
   "libcst.RightParen",
   "libcst.SetComp",
   "libcst.SimpleWhitespace",
   "libcst.testing.utils.data_provider",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_simple_comp.SimpleCompTest.test_valid": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.Asynchronous",
   "libcst.Call",
   "libcst.CompFor",
   "libcst.CompIf",
   "libcst.Comparison",
   "libcst.ComparisonTarget",
   "libcst.Expr",
   "libcst.FunctionDef",
   "libcst.GeneratorExp",
   "libcst.IndentedBlock",
   "libcst.Is",
   "libcst.LeftCurlyBrace",
   "libcst.LeftParen",
   "libcst.LeftSquareBracket",
   "libcst.ListComp",
   "libcst.Name",
   "libcst.Parameters",
   "libcst.PartialParserConfig",
   "libcst.RightCurlyBrace",
   "libcst.RightParen",
   "libcst.RightSquareBracket",
   "libcst.SetComp",
   "libcst.SimpleStatementLine",
   "libcst.SimpleWhitespace",
   "libcst.metadata.CodeRange",
   "libcst.parse_expression",
   "libcst.parse_statement",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_simple_statement": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_simple_statement.SimpleStatementTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_simple_statement.SimpleStatementTest.test_valid": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.Break",
   "libcst.Comment",
   "libcst.ConcatenatedString",
   "libcst.Continue",
   "libcst.Ellipsis",
   "libcst.EmptyLine",
   "libcst.Expr",
   "libcst.Float",
   "libcst.Imaginary",
   "libcst.Integer",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.ParenthesizedWhitespace",
   "libcst.Pass",
   "libcst.RightParen",
   "libcst.Semicolon",
   "libcst.SimpleStatementLine",
   "libcst.SimpleStatementSuite",
   "libcst.SimpleString",
   "libcst.SimpleWhitespace",
   "libcst.TrailingWhitespace",
   "libcst._nodes.tests.base.DummyIndentedBlock",
   "libcst.metadata.CodeRange",
   "libcst.parse_statement",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_simple_whitespace": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_simple_whitespace.ParenthesizedWhitespaceTest": {
  "lineno": 39,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_simple_whitespace.ParenthesizedWhitespaceTest.test_valid": {
  "lineno": 40,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Comment",
   "libcst.EmptyLine",
   "libcst.ParenthesizedWhitespace",
   "libcst.SimpleWhitespace",
   "libcst.TrailingWhitespace",
   "libcst._nodes.tests.base.DummyIndentedBlock",
   "libcst.testing.utils.data_provider"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_simple_whitespace.SimpleWhitespaceTest": {
  "lineno": 13,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_simple_whitespace.SimpleWhitespaceTest.test_invalid": {
  "lineno": 26,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.SimpleWhitespace",
   "libcst.testing.utils.data_provider",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_simple_whitespace.SimpleWhitespaceTest.test_valid": {
  "lineno": 14,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.SimpleWhitespace",
   "libcst.testing.utils.data_provider"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_small_statement": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_small_statement.SmallStatementTest": {
  "lineno": 14,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_small_statement.SmallStatementTest.test_valid": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst.Add",
   "libcst.BinaryOperation",
   "libcst.Break",
   "libcst.Continue",
   "libcst.Expr",
   "libcst.Name",
   "libcst.Pass",
   "libcst.Semicolon",
   "libcst.SimpleWhitespace",
   "libcst.metadata.CodeRange",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_subscript": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_subscript.SubscriptTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_subscript.SubscriptTest.test_invalid": {
  "lineno": 437,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Index",
   "libcst.Integer",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.RightParen",
   "libcst.Subscript",
   "libcst.SubscriptElement",
   "libcst.testing.utils.data_provider",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_subscript.SubscriptTest.test_valid": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Colon",
   "libcst.Comma",
   "libcst.Index",
   "libcst.Integer",
   "libcst.LeftParen",
   "libcst.LeftSquareBracket",
   "libcst.Name",
   "libcst.RightParen",
   "libcst.RightSquareBracket",
   "libcst.SimpleWhitespace",
   "libcst.Slice",
   "libcst.Subscript",
   "libcst.SubscriptElement",
   "libcst.metadata.CodeRange",
   "libcst.parse_expression",
   "libcst.testing.utils.data_provider",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_trailing_whitespace": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_trailing_whitespace.TrailingWhitespaceTest": {
  "lineno": 11,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_trailing_whitespace.TrailingWhitespaceTest.test_valid": {
  "lineno": 12,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Comment",
   "libcst.Newline",
   "libcst.SimpleWhitespace",
   "libcst.TrailingWhitespace",
   "libcst.testing.utils.data_provider"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_try": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_try.TryTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_try.TryTest.test_invalid": {
  "lineno": 332,
  "symbols_in_volume": [
   "libcst.AsName",
   "libcst.Else",
   "libcst.ExceptHandler",
   "libcst.Finally",
   "libcst.Name",
   "libcst.Pass",
   "libcst.SimpleStatementSuite",
   "libcst.SimpleWhitespace",
   "libcst.Try",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_try.TryTest.test_valid": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.AsName",
   "libcst.Comma",
   "libcst.Comment",
   "libcst.Element",
   "libcst.Else",
   "libcst.EmptyLine",
   "libcst.ExceptHandler",
   "libcst.Finally",
   "libcst.IndentedBlock",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.Pass",
   "libcst.RightParen",
   "libcst.SimpleStatementLine",
   "libcst.SimpleStatementSuite",
   "libcst.SimpleWhitespace",
   "libcst.Try",
   "libcst.Tuple",
   "libcst._nodes.tests.base.DummyIndentedBlock",
   "libcst.metadata.CodeRange",
   "libcst.parse_statement",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_tuple": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_tuple.TupleTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_tuple.TupleTest.test_invalid": {
  "lineno": 216,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Element",
   "libcst.For",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.Pass",
   "libcst.RightParen",
   "libcst.SimpleStatementSuite",
   "libcst.SimpleWhitespace",
   "libcst.StarredElement",
   "libcst.Tuple",
   "libcst.testing.utils.data_provider",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_tuple.TupleTest.test_valid": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.Comma",
   "libcst.Comment",
   "libcst.Element",
   "libcst.Expr",
   "libcst.For",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.Pass",
   "libcst.RightParen",
   "libcst.SimpleStatementLine",
   "libcst.SimpleStatementSuite",
   "libcst.SimpleWhitespace",
   "libcst.StarredElement",
   "libcst.TrailingWhitespace",
   "libcst.Tuple",
   "libcst.metadata.CodeRange",
   "libcst.parse_expression",
   "libcst.parse_statement",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_tuple.TupleTest.test_versions": {
  "lineno": 267,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.parse_expression_as",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_unary_op": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_unary_op.UnaryOperationTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_unary_op.UnaryOperationTest.test_invalid": {
  "lineno": 62,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.Not",
   "libcst.Plus",
   "libcst.RightParen",
   "libcst.SimpleWhitespace",
   "libcst.UnaryOperation",
   "libcst.testing.utils.data_provider",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_unary_op.UnaryOperationTest.test_valid": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.BitInvert",
   "libcst.CSTNode",
   "libcst.LeftParen",
   "libcst.Minus",
   "libcst.Name",
   "libcst.Not",
   "libcst.Plus",
   "libcst.RightParen",
   "libcst.SimpleWhitespace",
   "libcst.UnaryOperation",
   "libcst.metadata.CodeRange",
   "libcst.parse_expression",
   "libcst.testing.utils.data_provider",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_while": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_while.WhileTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_while.WhileTest.test_invalid": {
  "lineno": 125,
  "symbols_in_volume": [
   "libcst.Call",
   "libcst.Name",
   "libcst.Pass",
   "libcst.SimpleStatementSuite",
   "libcst.SimpleWhitespace",
   "libcst.While",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_while.WhileTest.test_valid": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.Call",
   "libcst.Comment",
   "libcst.Else",
   "libcst.EmptyLine",
   "libcst.IndentedBlock",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.Pass",
   "libcst.RightParen",
   "libcst.SimpleStatementLine",
   "libcst.SimpleStatementSuite",
   "libcst.SimpleWhitespace",
   "libcst.While",
   "libcst._nodes.tests.base.DummyIndentedBlock",
   "libcst.metadata.CodeRange",
   "libcst.parse_statement",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_with": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_with.WithTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_with.WithTest.test_invalid": {
  "lineno": 185,
  "symbols_in_volume": [
   "libcst.Call",
   "libcst.Comma",
   "libcst.IndentedBlock",
   "libcst.Name",
   "libcst.Pass",
   "libcst.SimpleStatementLine",
   "libcst.SimpleStatementSuite",
   "libcst.SimpleWhitespace",
   "libcst.With",
   "libcst.WithItem",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_with.WithTest.test_valid": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.AsName",
   "libcst.Asynchronous",
   "libcst.Call",
   "libcst.Comma",
   "libcst.Comment",
   "libcst.EmptyLine",
   "libcst.FunctionDef",
   "libcst.IndentedBlock",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.Parameters",
   "libcst.PartialParserConfig",
   "libcst.Pass",
   "libcst.RightParen",
   "libcst.SimpleStatementLine",
   "libcst.SimpleStatementSuite",
   "libcst.SimpleWhitespace",
   "libcst.With",
   "libcst.WithItem",
   "libcst._nodes.tests.base.DummyIndentedBlock",
   "libcst.metadata.CodeRange",
   "libcst.parse_statement",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_with.WithTest.test_versions": {
  "lineno": 218,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.parse_statement_as",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_yield": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._nodes.tests.test_yield.YieldConstructionTest": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_yield.YieldConstructionTest.test_invalid": {
  "lineno": 94,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Call",
   "libcst.From",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.RightParen",
   "libcst.SimpleWhitespace",
   "libcst.Yield",
   "libcst.testing.utils.data_provider",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_yield.YieldConstructionTest.test_valid": {
  "lineno": 17,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Call",
   "libcst.From",
   "libcst.Integer",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.RightParen",
   "libcst.SimpleWhitespace",
   "libcst.Yield",
   "libcst.metadata.CodeRange",
   "libcst.testing.utils.data_provider",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_yield.YieldParsingTest": {
  "lineno": 137,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.CSTNodeTest"
  ],
  "type": "class"
 },
 "libcst._nodes.tests.test_yield.YieldParsingTest.test_valid": {
  "lineno": 138,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Call",
   "libcst.Expr",
   "libcst.From",
   "libcst.Integer",
   "libcst.LeftParen",
   "libcst.Name",
   "libcst.RightParen",
   "libcst.SimpleStatementLine",
   "libcst.SimpleWhitespace",
   "libcst.Yield",
   "libcst.helpers.ensure_type",
   "libcst.metadata.CodeRange",
   "libcst.parse_statement",
   "libcst.testing.utils.data_provider",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._nodes.tests.test_yield.YieldParsingTest.test_versions": {
  "lineno": 228,
  "symbols_in_volume": [
   "libcst._nodes.tests.base.parse_statement_as",
   "libcst.testing.utils.data_provider",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._nodes.whitespace": {
  "lineno": null,
  "symbols_in_volume": [
   "re.UNICODE",
   "re.compile",
   "typing.Pattern"
  ],
  "type": "module"
 },
 "libcst._nodes.whitespace.BaseParenthesizableWhitespace": {
  "lineno": 31,
  "symbols_in_volume": [
   "abc.ABC",
   "libcst._nodes.base.CSTNode"
  ],
  "type": "class"
 },
 "libcst._nodes.whitespace.BaseParenthesizableWhitespace.empty": {
  "lineno": 55,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "libcst._nodes.whitespace.Comment": {
  "lineno": 140,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.base.BaseValueToken"
  ],
  "type": "class"
 },
 "libcst._nodes.whitespace.Comment._validate": {
  "lineno": 160,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.whitespace.EmptyLine": {
  "lineno": 199,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.base.CSTNode",
   "typing.Optional"
  ],
  "type": "class"
 },
 "libcst._nodes.whitespace.EmptyLine._codegen_impl": {
  "lineno": 230,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.whitespace.EmptyLine._visit_and_replace_children": {
  "lineno": 222,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_optional",
   "libcst._nodes.internal.visit_required",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.whitespace.Newline": {
  "lineno": 106,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.base.BaseLeaf",
   "typing.Optional"
  ],
  "type": "class"
 },
 "libcst._nodes.whitespace.Newline._codegen_impl": {
  "lineno": 135,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.whitespace.Newline._validate": {
  "lineno": 128,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.whitespace.ParenthesizedWhitespace": {
  "lineno": 240,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._nodes.whitespace.ParenthesizedWhitespace._codegen_impl": {
  "lineno": 278,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.whitespace.ParenthesizedWhitespace._visit_and_replace_children": {
  "lineno": 268,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_required",
   "libcst._nodes.internal.visit_sequence",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._nodes.whitespace.ParenthesizedWhitespace.empty": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.whitespace.SimpleWhitespace": {
  "lineno": 64,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.base.BaseValueToken"
  ],
  "type": "class"
 },
 "libcst._nodes.whitespace.SimpleWhitespace._validate": {
  "lineno": 91,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTValidationError"
  ],
  "type": "function"
 },
 "libcst._nodes.whitespace.SimpleWhitespace.empty": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._nodes.whitespace.TrailingWhitespace": {
  "lineno": 167,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.base.CSTNode",
   "typing.Optional"
  ],
  "type": "class"
 },
 "libcst._nodes.whitespace.TrailingWhitespace._codegen_impl": {
  "lineno": 191,
  "symbols_in_volume": [
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst._nodes.whitespace.TrailingWhitespace._visit_and_replace_children": {
  "lineno": 184,
  "symbols_in_volume": [
   "libcst._nodes.internal.visit_optional",
   "libcst._nodes.internal.visit_required",
   "libcst._visitors.CSTVisitorT"
  ],
  "type": "function"
 },
 "libcst._parser": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._parser.base_parser": {
  "lineno": null,
  "symbols_in_volume": [
   "libcst._parser.parso.python.token.TokenType",
   "libcst._parser.types.token.Token",
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "libcst._parser.base_parser.BaseParser": {
  "lineno": 71,
  "symbols_in_volume": [
   "typing.Generic",
   "typing.Iterable",
   "typing.List",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._parser.base_parser.BaseParser.__init__": {
  "lineno": 89,
  "symbols_in_volume": [
   "typing.Iterable",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.base_parser.BaseParser._add_token": {
  "lineno": 139,
  "symbols_in_volume": [
   "libcst._exceptions.EOFSentinel.EOF",
   "libcst._exceptions.ParserSyntaxError",
   "libcst._exceptions.PartialParserSyntaxError",
   "libcst._exceptions.get_expected_str"
  ],
  "type": "function"
 },
 "libcst._parser.base_parser.BaseParser._pop": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.base_parser.BaseParser.convert_nonterminal": {
  "lineno": 131,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.base_parser.BaseParser.convert_terminal": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.base_parser.BaseParser.parse": {
  "lineno": 104,
  "symbols_in_volume": [
   "libcst._exceptions.EOFSentinel.EOF",
   "libcst._exceptions.ParserSyntaxError",
   "libcst._exceptions.get_expected_str"
  ],
  "type": "function"
 },
 "libcst._parser.base_parser.StackNode": {
  "lineno": 45,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "dataclasses.field",
   "typing.Generic",
   "typing.List"
  ],
  "type": "class"
 },
 "libcst._parser.base_parser.StackNode.nonterminal": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.base_parser._token_to_transition": {
  "lineno": 55,
  "symbols_in_volume": [
   "libcst._parser.parso.pgen2.generator.ReservedString",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._parser.conversions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._parser.conversions.expression": {
  "lineno": null,
  "symbols_in_volume": [
   "libcst._nodes.op.Add",
   "libcst._nodes.op.And",
   "libcst._nodes.op.BaseBinaryOp",
   "libcst._nodes.op.BaseBooleanOp",
   "libcst._nodes.op.BaseCompOp",
   "libcst._nodes.op.BitAnd",
   "libcst._nodes.op.BitOr",
   "libcst._nodes.op.BitXor",
   "libcst._nodes.op.Divide",
   "libcst._nodes.op.Equal",
   "libcst._nodes.op.FloorDivide",
   "libcst._nodes.op.GreaterThan",
   "libcst._nodes.op.GreaterThanEqual",
   "libcst._nodes.op.In",
   "libcst._nodes.op.Is",
   "libcst._nodes.op.LeftShift",
   "libcst._nodes.op.LessThan",
   "libcst._nodes.op.LessThanEqual",
   "libcst._nodes.op.MatrixMultiply",
   "libcst._nodes.op.Modulo",
   "libcst._nodes.op.Multiply",
   "libcst._nodes.op.Or",
   "libcst._nodes.op.RightShift",
   "libcst._nodes.op.Subtract",
   "typing.Dict",
   "typing.Type"
  ],
  "type": "module"
 },
 "libcst._parser.conversions.expression._convert_dict": {
  "lineno": 1331,
  "symbols_in_volume": [
   "libcst._exceptions.PartialParserSyntaxError",
   "libcst._nodes.expression.CompFor",
   "libcst._nodes.expression.Dict",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.types.token.Token",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression._convert_dict_comp": {
  "lineno": 1358,
  "symbols_in_volume": [
   "libcst._nodes.expression.DictComp",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression._convert_dict_element": {
  "lineno": 1278,
  "symbols_in_volume": [
   "libcst._nodes.expression.DictElement",
   "libcst._nodes.expression.StarredDictElement",
   "libcst._nodes.op.Comma",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.token.Token",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Iterator",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression._convert_sequencelike": {
  "lineno": 1195,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.expression.Element",
   "libcst._nodes.expression.List",
   "libcst._nodes.expression.Set",
   "libcst._nodes.expression.StarredElement",
   "libcst._nodes.expression.Tuple",
   "libcst._nodes.op.Comma",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "libcst._parser.custom_itertools.grouper",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence",
   "typing.Type",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression._convert_set": {
  "lineno": 1377,
  "symbols_in_volume": [
   "libcst._nodes.expression.Set",
   "libcst._nodes.expression.SetComp",
   "libcst._parser.types.config.ParserConfig",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression._convert_testlist_comp": {
  "lineno": 1155,
  "symbols_in_volume": [
   "libcst._nodes.expression.GeneratorExp",
   "libcst._nodes.expression.List",
   "libcst._nodes.expression.ListComp",
   "libcst._nodes.expression.Set",
   "libcst._nodes.expression.SetComp",
   "libcst._nodes.expression.Tuple",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.types.token.Token",
   "typing.Any",
   "typing.Sequence",
   "typing.Type",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_arg_assign_comp_for": {
  "lineno": 1421,
  "symbols_in_volume": [
   "libcst._nodes.expression.Arg",
   "libcst._nodes.expression.GeneratorExp",
   "libcst._nodes.op.AssignEqual",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_arglist": {
  "lineno": 1389,
  "symbols_in_volume": [
   "libcst._nodes.op.Comma",
   "libcst._parser.custom_itertools.grouper",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.ArglistPartial",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_argument": {
  "lineno": 1413,
  "symbols_in_volume": [
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_atom": {
  "lineno": 842,
  "symbols_in_volume": [
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_atom_basic": {
  "lineno": 853,
  "symbols_in_volume": [
   "libcst._nodes.expression.Float",
   "libcst._nodes.expression.Imaginary",
   "libcst._nodes.expression.Integer",
   "libcst._nodes.expression.Name",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "re.fullmatch",
   "tokenize.Floatnumber",
   "tokenize.Imagnumber",
   "tokenize.Intnumber",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_atom_curlybraces": {
  "lineno": 905,
  "symbols_in_volume": [
   "libcst._nodes.expression.Dict",
   "libcst._nodes.expression.LeftCurlyBrace",
   "libcst._nodes.expression.RightCurlyBrace",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_atom_ellipses": {
  "lineno": 963,
  "symbols_in_volume": [
   "libcst._nodes.expression.Ellipsis",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_atom_expr": {
  "lineno": 577,
  "symbols_in_volume": [
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_atom_expr_await": {
  "lineno": 585,
  "symbols_in_volume": [
   "libcst._nodes.expression.Await",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_atom_expr_trailer": {
  "lineno": 602,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.expression.Attribute",
   "libcst._nodes.expression.Call",
   "libcst._nodes.expression.Subscript",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.AttributePartial",
   "libcst._parser.types.partials.CallPartial",
   "libcst._parser.types.partials.SubscriptPartial",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_atom_parens": {
  "lineno": 930,
  "symbols_in_volume": [
   "libcst._nodes.expression.LeftParen",
   "libcst._nodes.expression.RightParen",
   "libcst._nodes.expression.Tuple",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_atom_squarebrackets": {
  "lineno": 879,
  "symbols_in_volume": [
   "libcst._nodes.expression.LeftSquareBracket",
   "libcst._nodes.expression.List",
   "libcst._nodes.expression.RightSquareBracket",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_atom_string": {
  "lineno": 971,
  "symbols_in_volume": [
   "libcst._nodes.expression.ConcatenatedString",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_binop": {
  "lineno": 477,
  "symbols_in_volume": [
   "libcst._nodes.expression.BinaryOperation",
   "libcst._parser.custom_itertools.grouper",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_boolop": {
  "lineno": 316,
  "symbols_in_volume": [
   "libcst._nodes.expression.BooleanOperation",
   "libcst._parser.custom_itertools.grouper",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_comp_for": {
  "lineno": 1501,
  "symbols_in_volume": [
   "libcst._nodes.expression.Asynchronous",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_comp_if": {
  "lineno": 1523,
  "symbols_in_volume": [
   "libcst._nodes.expression.CompIf",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_comp_op": {
  "lineno": 392,
  "symbols_in_volume": [
   "libcst._nodes.op.IsNot",
   "libcst._nodes.op.NotEqual",
   "libcst._nodes.op.NotIn",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_comparison": {
  "lineno": 370,
  "symbols_in_volume": [
   "libcst._nodes.expression.Comparison",
   "libcst._nodes.expression.ComparisonTarget",
   "libcst._parser.custom_itertools.grouper",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "typing.Any",
   "typing.List",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_dictorsetmaker": {
  "lineno": 1244,
  "symbols_in_volume": [
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.token.Token",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_expression_input": {
  "lineno": 158,
  "symbols_in_volume": [
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_factor": {
  "lineno": 514,
  "symbols_in_volume": [
   "libcst._nodes.expression.UnaryOperation",
   "libcst._nodes.op.BitInvert",
   "libcst._nodes.op.Minus",
   "libcst._nodes.op.Plus",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_fstring": {
  "lineno": 991,
  "symbols_in_volume": [
   "libcst._nodes.expression.FormattedString",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_fstring_content": {
  "lineno": 1002,
  "symbols_in_volume": [
   "libcst._nodes.expression.FormattedStringText",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.token.Token",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_fstring_conversion": {
  "lineno": 1015,
  "symbols_in_volume": [
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.FormattedStringConversionPartial",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_fstring_equality": {
  "lineno": 1024,
  "symbols_in_volume": [
   "libcst._nodes.op.AssignEqual",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_fstring_expr": {
  "lineno": 1039,
  "symbols_in_volume": [
   "libcst._nodes.expression.FormattedStringExpression",
   "libcst._nodes.op.AssignEqual",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.FormattedStringConversionPartial",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_fstring_format_spec": {
  "lineno": 1097,
  "symbols_in_volume": [
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.FormattedStringFormatSpecPartial",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_lambda": {
  "lineno": 235,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.expression.Lambda",
   "libcst._nodes.expression.Param",
   "libcst._nodes.expression.Parameters",
   "libcst._nodes.op.Colon",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_namedexpr_test": {
  "lineno": 171,
  "symbols_in_volume": [
   "libcst._nodes.expression.NamedExpr",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_not_test": {
  "lineno": 348,
  "symbols_in_volume": [
   "libcst._nodes.expression.UnaryOperation",
   "libcst._nodes.op.Not",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_power": {
  "lineno": 551,
  "symbols_in_volume": [
   "libcst._nodes.expression.BinaryOperation",
   "libcst._nodes.op.Power",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_sliceop": {
  "lineno": 801,
  "symbols_in_volume": [
   "libcst._nodes.op.Colon",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.SlicePartial",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_star_arg": {
  "lineno": 1456,
  "symbols_in_volume": [
   "libcst._nodes.expression.Arg",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_star_expr": {
  "lineno": 458,
  "symbols_in_volume": [
   "libcst._nodes.expression.StarredElement",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_subscript": {
  "lineno": 737,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.expression.Index",
   "libcst._nodes.expression.Slice",
   "libcst._nodes.op.Colon",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.SlicePartial",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.types.token.Token",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_subscriptlist": {
  "lineno": 710,
  "symbols_in_volume": [
   "libcst._nodes.expression.SubscriptElement",
   "libcst._nodes.op.Comma",
   "libcst._parser.custom_itertools.grouper",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_sync_comp_for": {
  "lineno": 1470,
  "symbols_in_volume": [
   "libcst._nodes.expression.CompFor",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_test": {
  "lineno": 196,
  "symbols_in_volume": [
   "libcst._nodes.expression.IfExp",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_test_nocond": {
  "lineno": 227,
  "symbols_in_volume": [
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_test_or_expr_list": {
  "lineno": 1182,
  "symbols_in_volume": [
   "libcst._nodes.expression.Tuple",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_testlist_comp_list": {
  "lineno": 1130,
  "symbols_in_volume": [
   "libcst._nodes.expression.List",
   "libcst._nodes.expression.ListComp",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_testlist_comp_tuple": {
  "lineno": 1105,
  "symbols_in_volume": [
   "libcst._nodes.expression.GeneratorExp",
   "libcst._nodes.expression.Tuple",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_trailer": {
  "lineno": 656,
  "symbols_in_volume": [
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_trailer_arglist": {
  "lineno": 666,
  "symbols_in_volume": [
   "libcst._nodes.expression.LeftParen",
   "libcst._nodes.expression.RightParen",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.CallPartial",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_trailer_attribute": {
  "lineno": 824,
  "symbols_in_volume": [
   "libcst._nodes.expression.Name",
   "libcst._nodes.op.Dot",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.AttributePartial",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_trailer_subscriptlist": {
  "lineno": 689,
  "symbols_in_volume": [
   "libcst._nodes.expression.LeftSquareBracket",
   "libcst._nodes.expression.RightSquareBracket",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.SubscriptPartial",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_yield_arg": {
  "lineno": 1560,
  "symbols_in_volume": [
   "libcst._nodes.expression.From",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.expression.convert_yield_expr": {
  "lineno": 1539,
  "symbols_in_volume": [
   "libcst._nodes.expression.Yield",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.module": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._parser.conversions.module.convert_file_input": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst._nodes.module.Module",
   "libcst._nodes.whitespace.NEWLINE_RE.fullmatch",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.params": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._parser.conversions.params.convert_argslist": {
  "lineno": 27,
  "symbols_in_volume": [
   "libcst._exceptions.PartialParserSyntaxError",
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.expression.Param",
   "libcst._nodes.expression.ParamSlash",
   "libcst._nodes.expression.ParamStar",
   "libcst._nodes.expression.Parameters",
   "libcst._nodes.op.Comma",
   "libcst._parser.custom_itertools.grouper",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.ParamStarPartial",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.List",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.params.convert_argslist.add_param": {
  "lineno": 105,
  "symbols_in_volume": [
   "libcst._exceptions.PartialParserSyntaxError",
   "libcst._nodes.expression.Param",
   "libcst._nodes.expression.ParamSlash",
   "libcst._nodes.expression.ParamStar",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.params.convert_fpdef": {
  "lineno": 325,
  "symbols_in_volume": [
   "libcst._nodes.expression.Annotation",
   "libcst._nodes.expression.Name",
   "libcst._nodes.expression.Param",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.params.convert_fpdef_assign": {
  "lineno": 304,
  "symbols_in_volume": [
   "libcst._nodes.op.AssignEqual",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.params.convert_fpdef_slash": {
  "lineno": 350,
  "symbols_in_volume": [
   "libcst._nodes.expression.ParamSlash",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.params.convert_fpdef_star": {
  "lineno": 276,
  "symbols_in_volume": [
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.ParamStarPartial",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.params.convert_fpdef_starstar": {
  "lineno": 292,
  "symbols_in_volume": [
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement": {
  "lineno": null,
  "symbols_in_volume": [
   "libcst._nodes.op.AddAssign",
   "libcst._nodes.op.BaseAugOp",
   "libcst._nodes.op.BitAndAssign",
   "libcst._nodes.op.BitOrAssign",
   "libcst._nodes.op.BitXorAssign",
   "libcst._nodes.op.DivideAssign",
   "libcst._nodes.op.FloorDivideAssign",
   "libcst._nodes.op.LeftShiftAssign",
   "libcst._nodes.op.MatrixMultiplyAssign",
   "libcst._nodes.op.ModuloAssign",
   "libcst._nodes.op.MultiplyAssign",
   "libcst._nodes.op.PowerAssign",
   "libcst._nodes.op.RightShiftAssign",
   "libcst._nodes.op.SubtractAssign",
   "typing.Dict",
   "typing.Type"
  ],
  "type": "module"
 },
 "libcst._parser.conversions.statement._construct_nameitems": {
  "lineno": 656,
  "symbols_in_volume": [
   "libcst._nodes.expression.Name",
   "libcst._nodes.op.Comma",
   "libcst._nodes.statement.NameItem",
   "libcst._parser.custom_itertools.grouper",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.whitespace_parser.parse_simple_whitespace",
   "typing.Any",
   "typing.List",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement._extract_async": {
  "lineno": 1045,
  "symbols_in_volume": [
   "libcst._nodes.expression.Asynchronous",
   "libcst._nodes.whitespace.EmptyLine",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.whitespace_parser.parse_empty_lines",
   "libcst._parser.whitespace_parser.parse_simple_whitespace",
   "typing.Any",
   "typing.List",
   "typing.Optional",
   "typing.Sequence",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement._gather_import_names": {
  "lineno": 576,
  "symbols_in_volume": [
   "libcst._nodes.op.Comma",
   "libcst._parser.custom_itertools.grouper",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.ImportPartial",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_annassign": {
  "lineno": 266,
  "symbols_in_volume": [
   "libcst._nodes.expression.Annotation",
   "libcst._nodes.op.AssignEqual",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.AnnAssignPartial",
   "libcst._parser.whitespace_parser.parse_simple_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_assert_stmt": {
  "lineno": 706,
  "symbols_in_volume": [
   "libcst._nodes.op.Comma",
   "libcst._nodes.statement.Assert",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.whitespace_parser.parse_simple_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_assign": {
  "lineno": 334,
  "symbols_in_volume": [
   "libcst._nodes.op.AssignEqual",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.AssignPartial",
   "libcst._parser.whitespace_parser.parse_simple_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_asyncable_funcdef": {
  "lineno": 1066,
  "symbols_in_volume": [
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_asyncable_stmt": {
  "lineno": 1313,
  "symbols_in_volume": [
   "libcst._nodes.statement.For",
   "libcst._nodes.statement.FunctionDef",
   "libcst._nodes.statement.With",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_augassign": {
  "lineno": 304,
  "symbols_in_volume": [
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.AugAssignPartial",
   "libcst._parser.whitespace_parser.parse_simple_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_break_stmt": {
  "lineno": 372,
  "symbols_in_volume": [
   "libcst._nodes.statement.Break",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_classdef": {
  "lineno": 1174,
  "symbols_in_volume": [
   "libcst._exceptions.PartialParserSyntaxError",
   "libcst._nodes.expression.Arg",
   "libcst._nodes.expression.LeftParen",
   "libcst._nodes.expression.Name",
   "libcst._nodes.expression.RightParen",
   "libcst._nodes.statement.ClassDef",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.whitespace_parser.parse_empty_lines",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "libcst._parser.whitespace_parser.parse_simple_whitespace",
   "typing.Any",
   "typing.List",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_compound_stmt": {
  "lineno": 736,
  "symbols_in_volume": [
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_continue_stmt": {
  "lineno": 366,
  "symbols_in_volume": [
   "libcst._nodes.statement.Continue",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_decorated": {
  "lineno": 1289,
  "symbols_in_volume": [
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_decorator": {
  "lineno": 1243,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.expression.Call",
   "libcst._nodes.statement.Decorator",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.whitespace_parser.parse_empty_lines",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "libcst._parser.whitespace_parser.parse_simple_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_decorators": {
  "lineno": 1284,
  "symbols_in_volume": [
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.DecoratorPartial",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_del_stmt": {
  "lineno": 352,
  "symbols_in_volume": [
   "libcst._nodes.statement.Del",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.whitespace_parser.parse_simple_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_dotted_as_name": {
  "lineno": 545,
  "symbols_in_volume": [
   "libcst._nodes.expression.Name",
   "libcst._nodes.statement.AsName",
   "libcst._nodes.statement.ImportAlias",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_dotted_as_names": {
  "lineno": 571,
  "symbols_in_volume": [
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_dotted_name": {
  "lineno": 600,
  "symbols_in_volume": [
   "libcst._nodes.expression.Attribute",
   "libcst._nodes.expression.Name",
   "libcst._nodes.op.Dot",
   "libcst._parser.custom_itertools.grouper",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_except_clause": {
  "lineno": 945,
  "symbols_in_volume": [
   "libcst._nodes.expression.Name",
   "libcst._nodes.statement.AsName",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.ExceptClausePartial",
   "libcst._parser.whitespace_parser.parse_empty_lines",
   "libcst._parser.whitespace_parser.parse_simple_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_expr_stmt": {
  "lineno": 211,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.statement.AnnAssign",
   "libcst._nodes.statement.Assign",
   "libcst._nodes.statement.AssignTarget",
   "libcst._nodes.statement.AugAssign",
   "libcst._nodes.statement.Expr",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.AnnAssignPartial",
   "libcst._parser.types.partials.AugAssignPartial",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_for_stmt": {
  "lineno": 834,
  "symbols_in_volume": [
   "libcst._nodes.statement.Else",
   "libcst._nodes.statement.For",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.whitespace_parser.parse_empty_lines",
   "libcst._parser.whitespace_parser.parse_simple_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_funcdef": {
  "lineno": 1077,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.expression.Name",
   "libcst._nodes.expression.Param",
   "libcst._nodes.statement.FunctionDef",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.whitespace_parser.parse_simple_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_funcdef_annotation": {
  "lineno": 1160,
  "symbols_in_volume": [
   "libcst._nodes.expression.Annotation",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_global_stmt": {
  "lineno": 678,
  "symbols_in_volume": [
   "libcst._nodes.statement.Global",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.whitespace_parser.parse_simple_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_if_stmt": {
  "lineno": 745,
  "symbols_in_volume": [
   "libcst._nodes.statement.If",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.whitespace_parser.parse_empty_lines",
   "libcst._parser.whitespace_parser.parse_simple_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_if_stmt_elif": {
  "lineno": 773,
  "symbols_in_volume": [
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_if_stmt_else": {
  "lineno": 787,
  "symbols_in_volume": [
   "libcst._nodes.statement.Else",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.whitespace_parser.parse_empty_lines",
   "libcst._parser.whitespace_parser.parse_simple_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_import_as_name": {
  "lineno": 524,
  "symbols_in_volume": [
   "libcst._nodes.expression.Name",
   "libcst._nodes.statement.AsName",
   "libcst._nodes.statement.ImportAlias",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.whitespace_parser.parse_simple_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_import_as_names": {
  "lineno": 566,
  "symbols_in_volume": [
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_import_from": {
  "lineno": 457,
  "symbols_in_volume": [
   "libcst._nodes.expression.LeftParen",
   "libcst._nodes.expression.RightParen",
   "libcst._nodes.op.ImportStar",
   "libcst._nodes.statement.ImportFrom",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.types.token.Token",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "libcst._parser.whitespace_parser.parse_simple_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_import_name": {
  "lineno": 406,
  "symbols_in_volume": [
   "libcst._nodes.statement.Import",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.whitespace_parser.parse_simple_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_import_relative": {
  "lineno": 420,
  "symbols_in_volume": [
   "libcst._nodes.op.Dot",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.ImportRelativePartial",
   "libcst._parser.types.token.Token",
   "libcst._parser.whitespace_parser.parse_simple_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_import_stmt": {
  "lineno": 400,
  "symbols_in_volume": [
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_indented_suite": {
  "lineno": 1346,
  "symbols_in_volume": [
   "libcst._nodes.statement.IndentedBlock",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.whitespace_parser.parse_empty_lines",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_nonlocal_stmt": {
  "lineno": 692,
  "symbols_in_volume": [
   "libcst._nodes.statement.Nonlocal",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.whitespace_parser.parse_simple_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_parameters": {
  "lineno": 1142,
  "symbols_in_volume": [
   "libcst._nodes.expression.LeftParen",
   "libcst._nodes.expression.Parameters",
   "libcst._nodes.expression.RightParen",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.FuncdefPartial",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_pass_stmt": {
  "lineno": 346,
  "symbols_in_volume": [
   "libcst._nodes.statement.Pass",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_raise_stmt": {
  "lineno": 622,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.expression.From",
   "libcst._nodes.statement.Raise",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.whitespace_parser.parse_simple_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_return_stmt": {
  "lineno": 378,
  "symbols_in_volume": [
   "libcst._nodes.statement.Return",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.whitespace_parser.parse_simple_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_simple_stmt_line": {
  "lineno": 170,
  "symbols_in_volume": [
   "libcst._nodes.statement.SimpleStatementLine",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.whitespace_parser.parse_empty_lines",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_simple_stmt_partial": {
  "lineno": 134,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel.DEFAULT",
   "libcst._nodes.op.Semicolon",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "libcst._parser.custom_itertools.grouper",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.SimpleStatementPartial",
   "libcst._parser.whitespace_parser.parse_simple_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_simple_stmt_suite": {
  "lineno": 183,
  "symbols_in_volume": [
   "libcst._nodes.statement.SimpleStatementSuite",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.whitespace_parser.parse_simple_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_small_stmt": {
  "lineno": 196,
  "symbols_in_volume": [
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_stmt": {
  "lineno": 128,
  "symbols_in_volume": [
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_stmt_input": {
  "lineno": 122,
  "symbols_in_volume": [
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_suite": {
  "lineno": 1340,
  "symbols_in_volume": [
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_try_stmt": {
  "lineno": 883,
  "symbols_in_volume": [
   "libcst._nodes.statement.Else",
   "libcst._nodes.statement.ExceptHandler",
   "libcst._nodes.statement.Finally",
   "libcst._nodes.statement.Try",
   "libcst._parser.custom_itertools.grouper",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.ExceptClausePartial",
   "libcst._parser.types.token.Token",
   "libcst._parser.whitespace_parser.parse_empty_lines",
   "libcst._parser.whitespace_parser.parse_simple_whitespace",
   "typing.Any",
   "typing.List",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_while_stmt": {
  "lineno": 799,
  "symbols_in_volume": [
   "libcst._nodes.statement.Else",
   "libcst._nodes.statement.While",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.whitespace_parser.parse_empty_lines",
   "libcst._parser.whitespace_parser.parse_simple_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_with_item": {
  "lineno": 1023,
  "symbols_in_volume": [
   "libcst._nodes.statement.AsName",
   "libcst._nodes.statement.WithItem",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.whitespace_parser.parse_simple_whitespace",
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.statement.convert_with_stmt": {
  "lineno": 983,
  "symbols_in_volume": [
   "libcst._nodes.op.Comma",
   "libcst._nodes.statement.With",
   "libcst._nodes.statement.WithItem",
   "libcst._parser.custom_itertools.grouper",
   "libcst._parser.production_decorator.with_production",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace",
   "libcst._parser.whitespace_parser.parse_simple_whitespace",
   "typing.Any",
   "typing.List",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.terminals": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._parser.conversions.terminals.convert_ASYNC": {
  "lineno": 78,
  "symbols_in_volume": [
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.token.Token",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.terminals.convert_AWAIT": {
  "lineno": 82,
  "symbols_in_volume": [
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.token.Token",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.terminals.convert_DEDENT": {
  "lineno": 51,
  "symbols_in_volume": [
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.token.Token",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.terminals.convert_ENDMARKER": {
  "lineno": 55,
  "symbols_in_volume": [
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.token.Token",
   "libcst._parser.whitespace_parser.parse_empty_lines",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.terminals.convert_FSTRING_END": {
  "lineno": 70,
  "symbols_in_volume": [
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.token.Token",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.terminals.convert_FSTRING_START": {
  "lineno": 66,
  "symbols_in_volume": [
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.token.Token",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.terminals.convert_FSTRING_STRING": {
  "lineno": 74,
  "symbols_in_volume": [
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.token.Token",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.terminals.convert_INDENT": {
  "lineno": 47,
  "symbols_in_volume": [
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.token.Token",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.terminals.convert_NAME": {
  "lineno": 19,
  "symbols_in_volume": [
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.token.Token",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.terminals.convert_NEWLINE": {
  "lineno": 35,
  "symbols_in_volume": [
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.token.Token",
   "libcst._parser.whitespace_parser.parse_trailing_whitespace",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.terminals.convert_NUMBER": {
  "lineno": 23,
  "symbols_in_volume": [
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.token.Token",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.terminals.convert_OP": {
  "lineno": 31,
  "symbols_in_volume": [
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.token.Token",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._parser.conversions.terminals.convert_STRING": {
  "lineno": 27,
  "symbols_in_volume": [
   "libcst._nodes.expression.SimpleString",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.partials.WithLeadingWhitespace",
   "libcst._parser.types.token.Token",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._parser.custom_itertools": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "libcst._parser.custom_itertools.grouper": {
  "lineno": 14,
  "symbols_in_volume": [
   "itertools.zip_longest",
   "typing.Iterable",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "libcst._parser.detect_config": {
  "lineno": null,
  "symbols_in_volume": [
   "libcst._parser.parso.python.token.PythonTokenTypes.INDENT",
   "libcst._parser.parso.python.token.PythonTokenTypes.NAME",
   "libcst._parser.parso.python.token.PythonTokenTypes.NEWLINE",
   "libcst._parser.parso.python.token.PythonTokenTypes.STRING",
   "libcst._parser.parso.python.token.TokenType",
   "re.UNICODE",
   "re.compile",
   "typing.Pattern"
  ],
  "type": "module"
 },
 "libcst._parser.detect_config.ConfigDetectionResult": {
  "lineno": 32,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.token.Token",
   "typing.Iterator"
  ],
  "type": "class"
 },
 "libcst._parser.detect_config._detect_default_newline": {
  "lineno": 53,
  "symbols_in_volume": [
   "libcst._nodes.whitespace.NEWLINE_RE.search"
  ],
  "type": "function"
 },
 "libcst._parser.detect_config._detect_encoding": {
  "lineno": 40,
  "symbols_in_volume": [
   "io.BytesIO",
   "tokenize.detect_encoding",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._parser.detect_config._detect_future_imports": {
  "lineno": 86,
  "symbols_in_volume": [
   "libcst._parser.types.token.Token",
   "typing.FrozenSet",
   "typing.Iterable",
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst._parser.detect_config._detect_indent": {
  "lineno": 63,
  "symbols_in_volume": [
   "libcst._parser.types.token.Token",
   "typing.Iterable"
  ],
  "type": "function"
 },
 "libcst._parser.detect_config._detect_trailing_newline": {
  "lineno": 76,
  "symbols_in_volume": [
   "libcst._nodes.whitespace.NEWLINE_RE.fullmatch"
  ],
  "type": "function"
 },
 "libcst._parser.detect_config.detect_config": {
  "lineno": 118,
  "symbols_in_volume": [
   "itertools.tee",
   "libcst._parser.parso.utils.split_lines",
   "libcst._parser.types.config.AutoConfig",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.config.PartialParserConfig",
   "libcst._parser.wrapped_tokenize.tokenize_lines",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._parser.entrypoints": {
  "lineno": null,
  "symbols_in_volume": [
   "libcst._parser.types.config.PartialParserConfig"
  ],
  "type": "module"
 },
 "libcst._parser.entrypoints._parse": {
  "lineno": 27,
  "symbols_in_volume": [
   "libcst._nodes.base.CSTNode",
   "libcst._parser.detect_config.detect_config",
   "libcst._parser.grammar.get_grammar",
   "libcst._parser.grammar.validate_grammar",
   "libcst._parser.python_parser.PythonCSTParser",
   "libcst._parser.types.config.PartialParserConfig",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._parser.entrypoints.parse_expression": {
  "lineno": 111,
  "symbols_in_volume": [
   "libcst._nodes.expression.BaseExpression",
   "libcst._parser.types.config.PartialParserConfig"
  ],
  "type": "function"
 },
 "libcst._parser.entrypoints.parse_module": {
  "lineno": 56,
  "symbols_in_volume": [
   "libcst._nodes.module.Module",
   "libcst._parser.types.config.PartialParserConfig",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._parser.entrypoints.parse_statement": {
  "lineno": 82,
  "symbols_in_volume": [
   "libcst._nodes.statement.BaseCompoundStatement",
   "libcst._nodes.statement.SimpleStatementLine",
   "libcst._parser.types.config.PartialParserConfig",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._parser.grammar": {
  "lineno": null,
  "symbols_in_volume": [
   "libcst._parser.conversions.expression.convert_arg_assign_comp_for",
   "libcst._parser.conversions.expression.convert_arglist",
   "libcst._parser.conversions.expression.convert_argument",
   "libcst._parser.conversions.expression.convert_atom",
   "libcst._parser.conversions.expression.convert_atom_basic",
   "libcst._parser.conversions.expression.convert_atom_curlybraces",
   "libcst._parser.conversions.expression.convert_atom_ellipses",
   "libcst._parser.conversions.expression.convert_atom_expr",
   "libcst._parser.conversions.expression.convert_atom_expr_await",
   "libcst._parser.conversions.expression.convert_atom_expr_trailer",
   "libcst._parser.conversions.expression.convert_atom_parens",
   "libcst._parser.conversions.expression.convert_atom_squarebrackets",
   "libcst._parser.conversions.expression.convert_atom_string",
   "libcst._parser.conversions.expression.convert_binop",
   "libcst._parser.conversions.expression.convert_boolop",
   "libcst._parser.conversions.expression.convert_comp_for",
   "libcst._parser.conversions.expression.convert_comp_if",
   "libcst._parser.conversions.expression.convert_comp_op",
   "libcst._parser.conversions.expression.convert_comparison",
   "libcst._parser.conversions.expression.convert_dictorsetmaker",
   "libcst._parser.conversions.expression.convert_expression_input",
   "libcst._parser.conversions.expression.convert_factor",
   "libcst._parser.conversions.expression.convert_fstring",
   "libcst._parser.conversions.expression.convert_fstring_content",
   "libcst._parser.conversions.expression.convert_fstring_conversion",
   "libcst._parser.conversions.expression.convert_fstring_equality",
   "libcst._parser.conversions.expression.convert_fstring_expr",
   "libcst._parser.conversions.expression.convert_fstring_format_spec",
   "libcst._parser.conversions.expression.convert_lambda",
   "libcst._parser.conversions.expression.convert_namedexpr_test",
   "libcst._parser.conversions.expression.convert_not_test",
   "libcst._parser.conversions.expression.convert_power",
   "libcst._parser.conversions.expression.convert_sliceop",
   "libcst._parser.conversions.expression.convert_star_arg",
   "libcst._parser.conversions.expression.convert_star_expr",
   "libcst._parser.conversions.expression.convert_subscript",
   "libcst._parser.conversions.expression.convert_subscriptlist",
   "libcst._parser.conversions.expression.convert_sync_comp_for",
   "libcst._parser.conversions.expression.convert_test",
   "libcst._parser.conversions.expression.convert_test_nocond",
   "libcst._parser.conversions.expression.convert_test_or_expr_list",
   "libcst._parser.conversions.expression.convert_testlist_comp_list",
   "libcst._parser.conversions.expression.convert_testlist_comp_tuple",
   "libcst._parser.conversions.expression.convert_trailer",
   "libcst._parser.conversions.expression.convert_trailer_arglist",
   "libcst._parser.conversions.expression.convert_trailer_attribute",
   "libcst._parser.conversions.expression.convert_trailer_subscriptlist",
   "libcst._parser.conversions.expression.convert_yield_arg",
   "libcst._parser.conversions.expression.convert_yield_expr",
   "libcst._parser.conversions.module.convert_file_input",
   "libcst._parser.conversions.params.convert_argslist",
   "libcst._parser.conversions.params.convert_fpdef",
   "libcst._parser.conversions.params.convert_fpdef_assign",
   "libcst._parser.conversions.params.convert_fpdef_slash",
   "libcst._parser.conversions.params.convert_fpdef_star",
   "libcst._parser.conversions.params.convert_fpdef_starstar",
   "libcst._parser.conversions.statement.convert_annassign",
   "libcst._parser.conversions.statement.convert_assert_stmt",
   "libcst._parser.conversions.statement.convert_assign",
   "libcst._parser.conversions.statement.convert_asyncable_funcdef",
   "libcst._parser.conversions.statement.convert_asyncable_stmt",
   "libcst._parser.conversions.statement.convert_augassign",
   "libcst._parser.conversions.statement.convert_break_stmt",
   "libcst._parser.conversions.statement.convert_classdef",
   "libcst._parser.conversions.statement.convert_compound_stmt",
   "libcst._parser.conversions.statement.convert_continue_stmt",
   "libcst._parser.conversions.statement.convert_decorated",
   "libcst._parser.conversions.statement.convert_decorator",
   "libcst._parser.conversions.statement.convert_decorators",
   "libcst._parser.conversions.statement.convert_del_stmt",
   "libcst._parser.conversions.statement.convert_dotted_as_name",
   "libcst._parser.conversions.statement.convert_dotted_as_names",
   "libcst._parser.conversions.statement.convert_dotted_name",
   "libcst._parser.conversions.statement.convert_except_clause",
   "libcst._parser.conversions.statement.convert_expr_stmt",
   "libcst._parser.conversions.statement.convert_for_stmt",
   "libcst._parser.conversions.statement.convert_funcdef",
   "libcst._parser.conversions.statement.convert_funcdef_annotation",
   "libcst._parser.conversions.statement.convert_global_stmt",
   "libcst._parser.conversions.statement.convert_if_stmt",
   "libcst._parser.conversions.statement.convert_if_stmt_elif",
   "libcst._parser.conversions.statement.convert_if_stmt_else",
   "libcst._parser.conversions.statement.convert_import_as_name",
   "libcst._parser.conversions.statement.convert_import_as_names",
   "libcst._parser.conversions.statement.convert_import_from",
   "libcst._parser.conversions.statement.convert_import_name",
   "libcst._parser.conversions.statement.convert_import_relative",
   "libcst._parser.conversions.statement.convert_import_stmt",
   "libcst._parser.conversions.statement.convert_indented_suite",
   "libcst._parser.conversions.statement.convert_nonlocal_stmt",
   "libcst._parser.conversions.statement.convert_parameters",
   "libcst._parser.conversions.statement.convert_pass_stmt",
   "libcst._parser.conversions.statement.convert_raise_stmt",
   "libcst._parser.conversions.statement.convert_return_stmt",
   "libcst._parser.conversions.statement.convert_simple_stmt_line",
   "libcst._parser.conversions.statement.convert_simple_stmt_partial",
   "libcst._parser.conversions.statement.convert_simple_stmt_suite",
   "libcst._parser.conversions.statement.convert_small_stmt",
   "libcst._parser.conversions.statement.convert_stmt",
   "libcst._parser.conversions.statement.convert_stmt_input",
   "libcst._parser.conversions.statement.convert_suite",
   "libcst._parser.conversions.statement.convert_try_stmt",
   "libcst._parser.conversions.statement.convert_while_stmt",
   "libcst._parser.conversions.statement.convert_with_item",
   "libcst._parser.conversions.statement.convert_with_stmt",
   "libcst._parser.conversions.terminals.convert_ASYNC",
   "libcst._parser.conversions.terminals.convert_AWAIT",
   "libcst._parser.conversions.terminals.convert_DEDENT",
   "libcst._parser.conversions.terminals.convert_ENDMARKER",
   "libcst._parser.conversions.terminals.convert_FSTRING_END",
   "libcst._parser.conversions.terminals.convert_FSTRING_START",
   "libcst._parser.conversions.terminals.convert_FSTRING_STRING",
   "libcst._parser.conversions.terminals.convert_INDENT",
   "libcst._parser.conversions.terminals.convert_NAME",
   "libcst._parser.conversions.terminals.convert_NEWLINE",
   "libcst._parser.conversions.terminals.convert_NUMBER",
   "libcst._parser.conversions.terminals.convert_OP",
   "libcst._parser.conversions.terminals.convert_STRING",
   "libcst._parser.types.conversions.NonterminalConversion",
   "libcst._parser.types.conversions.TerminalConversion",
   "typing.Tuple"
  ],
  "type": "module"
 },
 "libcst._parser.grammar._compare_versions": {
  "lineno": 336,
  "symbols_in_volume": [
   "libcst._parser.parso.utils.PythonVersionInfo"
  ],
  "type": "function"
 },
 "libcst._parser.grammar._get_version_comparison": {
  "lineno": 328,
  "symbols_in_volume": [
   "libcst._parser.parso.utils.PythonVersionInfo",
   "libcst._parser.parso.utils.parse_version_string",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "libcst._parser.grammar._should_include": {
  "lineno": 356,
  "symbols_in_volume": [
   "libcst._parser.parso.utils.PythonVersionInfo",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._parser.grammar._should_include_future": {
  "lineno": 368,
  "symbols_in_volume": [
   "typing.FrozenSet",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._parser.grammar.get_grammar": {
  "lineno": 289,
  "symbols_in_volume": [
   "functools.lru_cache",
   "libcst._parser.parso.pgen2.generator.generate_grammar",
   "libcst._parser.parso.python.token.PythonTokenTypes",
   "libcst._parser.parso.utils.PythonVersionInfo",
   "libcst._parser.types.config.AutoConfig",
   "typing.FrozenSet",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._parser.grammar.get_grammar_str": {
  "lineno": 272,
  "symbols_in_volume": [
   "libcst._parser.parso.utils.PythonVersionInfo",
   "typing.FrozenSet"
  ],
  "type": "function"
 },
 "libcst._parser.grammar.get_nonterminal_conversions": {
  "lineno": 390,
  "symbols_in_volume": [
   "functools.lru_cache",
   "libcst._parser.parso.utils.PythonVersionInfo",
   "libcst._parser.production_decorator.get_productions",
   "libcst._parser.types.conversions.NonterminalConversion",
   "typing.FrozenSet",
   "typing.Mapping"
  ],
  "type": "function"
 },
 "libcst._parser.grammar.get_nonterminal_productions": {
  "lineno": 378,
  "symbols_in_volume": [
   "libcst._parser.parso.utils.PythonVersionInfo",
   "libcst._parser.production_decorator.get_productions",
   "libcst._parser.types.production.Production",
   "typing.FrozenSet",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "libcst._parser.grammar.get_terminal_conversions": {
  "lineno": 299,
  "symbols_in_volume": [
   "functools.lru_cache",
   "libcst._parser.types.conversions.TerminalConversion",
   "re.match",
   "typing.Mapping"
  ],
  "type": "function"
 },
 "libcst._parser.grammar.validate_grammar": {
  "lineno": 312,
  "symbols_in_volume": [
   "functools.lru_cache",
   "libcst._parser.production_decorator.get_productions"
  ],
  "type": "function"
 },
 "libcst._parser.parso": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._parser.parso.pgen2": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._parser.parso.pgen2.generator": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "libcst._parser.parso.pgen2.generator.DFAPlan": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst._parser.parso.pgen2.generator.DFAPlan.__init__": {
  "lineno": 52,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator.DFAPlan.__repr__": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator.DFAState": {
  "lineno": 62,
  "symbols_in_volume": [
   "typing.Generic"
  ],
  "type": "class"
 },
 "libcst._parser.parso.pgen2.generator.DFAState.__eq__": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator.DFAState.__init__": {
  "lineno": 73,
  "symbols_in_volume": [
   "libcst._parser.parso.pgen2.grammar_parser.NFAState",
   "typing.Mapping",
   "typing.Set",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator.DFAState.__repr__": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator.DFAState.add_arc": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator.DFAState.unifystate": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator.Grammar": {
  "lineno": 135,
  "symbols_in_volume": [
   "typing.Generic"
  ],
  "type": "class"
 },
 "libcst._parser.parso.pgen2.generator.Grammar.__init__": {
  "lineno": 145,
  "symbols_in_volume": [
   "typing.Mapping",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator.ReservedString": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst._parser.parso.pgen2.generator.ReservedString.__init__": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator.ReservedString.__repr__": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator._calculate_first_plans": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator._calculate_tree_traversal": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator._make_dfas": {
  "lineno": 180,
  "symbols_in_volume": [
   "libcst._parser.parso.pgen2.grammar_parser.NFAState"
  ],
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator._make_dfas.addclosure": {
  "lineno": 193,
  "symbols_in_volume": [
   "libcst._parser.parso.pgen2.grammar_parser.NFAState"
  ],
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator._make_transition": {
  "lineno": 267,
  "symbols_in_volume": [
   "ast.literal_eval"
  ],
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator._simplify_dfas": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.pgen2.generator.generate_grammar": {
  "lineno": 230,
  "symbols_in_volume": [
   "libcst._parser.parso.pgen2.grammar_parser.GrammarParser",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._parser.parso.pgen2.grammar_parser": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._parser.parso.pgen2.grammar_parser.GrammarParser": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst._parser.parso.pgen2.grammar_parser.GrammarParser.__init__": {
  "lineno": 51,
  "symbols_in_volume": [
   "libcst._parser.parso.python.tokenize.tokenize",
   "libcst._parser.parso.utils.parse_version_string"
  ],
  "type": "function"
 },
 "libcst._parser.parso.pgen2.grammar_parser.GrammarParser._expect": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.pgen2.grammar_parser.GrammarParser._gettoken": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.pgen2.grammar_parser.GrammarParser._parse_atom": {
  "lineno": 131,
  "symbols_in_volume": [
   "libcst._parser.parso.python.token.PythonTokenTypes.NAME",
   "libcst._parser.parso.python.token.PythonTokenTypes.OP",
   "libcst._parser.parso.python.token.PythonTokenTypes.STRING"
  ],
  "type": "function"
 },
 "libcst._parser.parso.pgen2.grammar_parser.GrammarParser._parse_item": {
  "lineno": 106,
  "symbols_in_volume": [
   "libcst._parser.parso.python.token.PythonTokenTypes.OP"
  ],
  "type": "function"
 },
 "libcst._parser.parso.pgen2.grammar_parser.GrammarParser._parse_items": {
  "lineno": 93,
  "symbols_in_volume": [
   "libcst._parser.parso.python.token.PythonTokenTypes.NAME",
   "libcst._parser.parso.python.token.PythonTokenTypes.STRING"
  ],
  "type": "function"
 },
 "libcst._parser.parso.pgen2.grammar_parser.GrammarParser._parse_rhs": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.pgen2.grammar_parser.GrammarParser._raise_error": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.pgen2.grammar_parser.GrammarParser.parse": {
  "lineno": 56,
  "symbols_in_volume": [
   "libcst._parser.parso.python.token.PythonTokenTypes.ENDMARKER",
   "libcst._parser.parso.python.token.PythonTokenTypes.NAME",
   "libcst._parser.parso.python.token.PythonTokenTypes.NEWLINE",
   "libcst._parser.parso.python.token.PythonTokenTypes.OP",
   "typing.Generator",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "libcst._parser.parso.pgen2.grammar_parser.NFAArc": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst._parser.parso.pgen2.grammar_parser.NFAArc.__init__": {
  "lineno": 24,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._parser.parso.pgen2.grammar_parser.NFAArc.__repr__": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.pgen2.grammar_parser.NFAState": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst._parser.parso.pgen2.grammar_parser.NFAState.__init__": {
  "lineno": 33,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "libcst._parser.parso.pgen2.grammar_parser.NFAState.__repr__": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.pgen2.grammar_parser.NFAState.add_arc": {
  "lineno": 37,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._parser.parso.python": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._parser.parso.python.token": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._parser.parso.python.token.PythonTokenTypes": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst._parser.parso.python.token.TokenType": {
  "lineno": 20,
  "symbols_in_volume": [
   "dataclasses.dataclass"
  ],
  "type": "class"
 },
 "libcst._parser.parso.python.token.TokenType.__repr__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.python.tokenize": {
  "lineno": null,
  "symbols_in_volume": [
   "codecs.BOM_UTF8.decode",
   "libcst._parser.parso.python.token.PythonTokenTypes.ASYNC",
   "libcst._parser.parso.python.token.PythonTokenTypes.AWAIT",
   "libcst._parser.parso.python.token.PythonTokenTypes.DEDENT",
   "libcst._parser.parso.python.token.PythonTokenTypes.ENDMARKER",
   "libcst._parser.parso.python.token.PythonTokenTypes.ERRORTOKEN",
   "libcst._parser.parso.python.token.PythonTokenTypes.ERROR_DEDENT",
   "libcst._parser.parso.python.token.PythonTokenTypes.FSTRING_END",
   "libcst._parser.parso.python.token.PythonTokenTypes.FSTRING_START",
   "libcst._parser.parso.python.token.PythonTokenTypes.FSTRING_STRING",
   "libcst._parser.parso.python.token.PythonTokenTypes.INDENT",
   "libcst._parser.parso.python.token.PythonTokenTypes.NAME",
   "libcst._parser.parso.python.token.PythonTokenTypes.NEWLINE",
   "libcst._parser.parso.python.token.PythonTokenTypes.NUMBER",
   "libcst._parser.parso.python.token.PythonTokenTypes.OP",
   "libcst._parser.parso.python.token.PythonTokenTypes.STRING",
   "libcst._parser.parso.utils.PythonVersionInfo",
   "typing.Dict"
  ],
  "type": "module"
 },
 "libcst._parser.parso.python.tokenize.FStringNode": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst._parser.parso.python.tokenize.FStringNode.__init__": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.python.tokenize.FStringNode.allow_multiline": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.python.tokenize.FStringNode.close_parentheses": {
  "lineno": 342,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.python.tokenize.FStringNode.is_in_expr": {
  "lineno": 351,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.python.tokenize.FStringNode.is_in_format_spec": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.python.tokenize.FStringNode.open_parentheses": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.python.tokenize.PythonToken": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst._parser.parso.python.tokenize.PythonToken.__repr__": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.python.tokenize.Token": {
  "lineno": 312,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "class"
 },
 "libcst._parser.parso.python.tokenize.Token.end_pos": {
  "lineno": 313,
  "symbols_in_volume": [
   "libcst._parser.parso.utils.split_lines"
  ],
  "type": "function"
 },
 "libcst._parser.parso.python.tokenize.TokenCollection": {
  "lineno": 64,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "typing.Dict",
   "typing.Pattern",
   "typing.Set"
  ],
  "type": "class"
 },
 "libcst._parser.parso.python.tokenize._all_string_prefixes": {
  "lineno": 93,
  "symbols_in_volume": [
   "itertools.permutations",
   "libcst._parser.parso.utils.PythonVersionInfo",
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst._parser.parso.python.tokenize._all_string_prefixes.different_case_versions": {
  "lineno": 98,
  "symbols_in_volume": [
   "itertools.product"
  ],
  "type": "function"
 },
 "libcst._parser.parso.python.tokenize._close_fstring_if_necessary": {
  "lineno": 358,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.python.tokenize._compile": {
  "lineno": 135,
  "symbols_in_volume": [
   "re.UNICODE",
   "re.compile",
   "typing.Pattern"
  ],
  "type": "function"
 },
 "libcst._parser.parso.python.tokenize._create_token_collection": {
  "lineno": 155,
  "symbols_in_volume": [
   "libcst._parser.parso.utils.PythonVersionInfo",
   "sys.version_info"
  ],
  "type": "function"
 },
 "libcst._parser.parso.python.tokenize._find_fstring_string": {
  "lineno": 371,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.python.tokenize._get_token_collection": {
  "lineno": 139,
  "symbols_in_volume": [
   "libcst._parser.parso.utils.PythonVersionInfo"
  ],
  "type": "function"
 },
 "libcst._parser.parso.python.tokenize._split_illegal_unicode_name": {
  "lineno": 1093,
  "symbols_in_volume": [
   "typing.Generator",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "libcst._parser.parso.python.tokenize._split_illegal_unicode_name.create_token": {
  "lineno": 1096,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.python.tokenize._tokenize_lines_py36_or_below": {
  "lineno": 435,
  "symbols_in_volume": [
   "libcst._parser.parso.utils.PythonVersionInfo",
   "re.match",
   "typing.Generator",
   "typing.Iterable",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "libcst._parser.parso.python.tokenize._tokenize_lines_py36_or_below.dedent_if_necessary": {
  "lineno": 473,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.python.tokenize._tokenize_lines_py37_or_above": {
  "lineno": 812,
  "symbols_in_volume": [
   "libcst._parser.parso.utils.PythonVersionInfo",
   "re.match",
   "typing.Generator",
   "typing.Iterable",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "libcst._parser.parso.python.tokenize._tokenize_lines_py37_or_above.dedent_if_necessary": {
  "lineno": 826,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.python.tokenize.group": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.python.tokenize.maybe": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.python.tokenize.tokenize": {
  "lineno": 411,
  "symbols_in_volume": [
   "libcst._parser.parso.utils.PythonVersionInfo",
   "libcst._parser.parso.utils.split_lines",
   "typing.Generator",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "libcst._parser.parso.python.tokenize.tokenize_lines": {
  "lineno": 419,
  "symbols_in_volume": [
   "libcst._parser.parso.utils.PythonVersionInfo",
   "typing.Generator",
   "typing.Iterable",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "libcst._parser.parso.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._parser.parso.tests.test_fstring": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._parser.parso.tests.test_fstring.ParsoTokenizeTest": {
  "lineno": 21,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst._parser.parso.tests.test_fstring.ParsoTokenizeTest.test_tokenize_start_pos": {
  "lineno": 22,
  "symbols_in_volume": [
   "libcst._parser.parso.python.tokenize.tokenize",
   "libcst._parser.parso.utils.parse_version_string",
   "libcst.testing.utils.data_provider"
  ],
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize": {
  "lineno": null,
  "symbols_in_volume": [
   "libcst._parser.parso.python.token.PythonTokenTypes.DEDENT",
   "libcst._parser.parso.python.token.PythonTokenTypes.ENDMARKER",
   "libcst._parser.parso.python.token.PythonTokenTypes.ERRORTOKEN",
   "libcst._parser.parso.python.token.PythonTokenTypes.ERROR_DEDENT",
   "libcst._parser.parso.python.token.PythonTokenTypes.FSTRING_END",
   "libcst._parser.parso.python.token.PythonTokenTypes.FSTRING_START",
   "libcst._parser.parso.python.token.PythonTokenTypes.FSTRING_STRING",
   "libcst._parser.parso.python.token.PythonTokenTypes.INDENT",
   "libcst._parser.parso.python.token.PythonTokenTypes.NAME",
   "libcst._parser.parso.python.token.PythonTokenTypes.NEWLINE",
   "libcst._parser.parso.python.token.PythonTokenTypes.NUMBER",
   "libcst._parser.parso.python.token.PythonTokenTypes.OP",
   "libcst._parser.parso.python.token.PythonTokenTypes.STRING"
  ],
  "type": "module"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest": {
  "lineno": 48,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_backslash": {
  "lineno": 327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_brackets_no_indentation": {
  "lineno": 297,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_carriage_return": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_endmarker_end_pos": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_endmarker_end_pos.check": {
  "lineno": 187,
  "symbols_in_volume": [
   "libcst._parser.parso.utils.split_lines"
  ],
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_error_literal": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_error_string": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_error_token_after_dedent": {
  "lineno": 271,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_form_feed": {
  "lineno": 312,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_fstring": {
  "lineno": 332,
  "symbols_in_volume": [
   "libcst.testing.utils.data_provider"
  ],
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_function_whitespace": {
  "lineno": 70,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_identifier_contains_unicode": {
  "lineno": 125,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_indent_error_recovery": {
  "lineno": 240,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_simple_no_whitespace": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_simple_with_whitespace": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_token_types": {
  "lineno": 199,
  "symbols_in_volume": [
   "libcst.testing.utils.data_provider"
  ],
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_tokenize_multiline_I": {
  "lineno": 95,
  "symbols_in_volume": [
   "libcst._parser.parso.python.tokenize.PythonToken"
  ],
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_tokenize_multiline_II": {
  "lineno": 105,
  "symbols_in_volume": [
   "libcst._parser.parso.python.tokenize.PythonToken"
  ],
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_tokenize_multiline_III": {
  "lineno": 115,
  "symbols_in_volume": [
   "libcst._parser.parso.python.tokenize.PythonToken"
  ],
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_ur_literals": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize.ParsoTokenizerTest.test_ur_literals.check": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.tests.test_tokenize._get_token_list": {
  "lineno": 42,
  "symbols_in_volume": [
   "libcst._parser.parso.python.tokenize.tokenize",
   "libcst._parser.parso.utils.parse_version_string"
  ],
  "type": "function"
 },
 "libcst._parser.parso.tests.test_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._parser.parso.tests.test_utils.ParsoUtilsTest": {
  "lineno": 20,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst._parser.parso.tests.test_utils.ParsoUtilsTest.test_python_bytes_to_unicode_unicode_text": {
  "lineno": 49,
  "symbols_in_volume": [
   "libcst._parser.parso.utils.python_bytes_to_unicode"
  ],
  "type": "function"
 },
 "libcst._parser.parso.tests.test_utils.ParsoUtilsTest.test_split_lines": {
  "lineno": 21,
  "symbols_in_volume": [
   "libcst._parser.parso.utils.split_lines",
   "libcst.testing.utils.data_provider"
  ],
  "type": "function"
 },
 "libcst._parser.parso.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._parser.parso.utils.PythonVersionInfo": {
  "lineno": 141,
  "symbols_in_volume": [
   "dataclasses.dataclass"
  ],
  "type": "class"
 },
 "libcst._parser.parso.utils.PythonVersionInfo.__eq__": {
  "lineno": 168,
  "symbols_in_volume": [
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._parser.parso.utils.PythonVersionInfo.__ge__": {
  "lineno": 154,
  "symbols_in_volume": [
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._parser.parso.utils.PythonVersionInfo.__gt__": {
  "lineno": 146,
  "symbols_in_volume": [
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._parser.parso.utils.PythonVersionInfo.__hash__": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.parso.utils.PythonVersionInfo.__le__": {
  "lineno": 165,
  "symbols_in_volume": [
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._parser.parso.utils.PythonVersionInfo.__lt__": {
  "lineno": 157,
  "symbols_in_volume": [
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._parser.parso.utils.PythonVersionInfo.__ne__": {
  "lineno": 176,
  "symbols_in_volume": [
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._parser.parso.utils.Version": {
  "lineno": 43,
  "symbols_in_volume": [
   "dataclasses.dataclass"
  ],
  "type": "class"
 },
 "libcst._parser.parso.utils._parse_version": {
  "lineno": 183,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "libcst._parser.parso.utils.parse_version_string": {
  "lineno": 208,
  "symbols_in_volume": [
   "sys.version_info",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._parser.parso.utils.python_bytes_to_unicode": {
  "lineno": 94,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._parser.parso.utils.python_bytes_to_unicode.detect_encoding": {
  "lineno": 106,
  "symbols_in_volume": [
   "ast.literal_eval",
   "re.match",
   "re.search",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._parser.parso.utils.split_lines": {
  "lineno": 50,
  "symbols_in_volume": [
   "re.split",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.production_decorator": {
  "lineno": null,
  "symbols_in_volume": [
   "libcst._parser.types.conversions.NonterminalConversion",
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "libcst._parser.production_decorator.get_productions": {
  "lineno": 50,
  "symbols_in_volume": [
   "libcst._parser.types.conversions.NonterminalConversion",
   "libcst._parser.types.production.Production",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.production_decorator.with_production": {
  "lineno": 19,
  "symbols_in_volume": [
   "typing.Callable",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._parser.production_decorator.with_production.inner": {
  "lineno": 33,
  "symbols_in_volume": [
   "libcst._parser.types.production.Production"
  ],
  "type": "function"
 },
 "libcst._parser.python_parser": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._parser.python_parser.PythonCSTParser": {
  "lineno": 18,
  "symbols_in_volume": [
   "libcst._parser.base_parser.BaseParser",
   "libcst._parser.parso.python.token.TokenType",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.conversions.NonterminalConversion",
   "libcst._parser.types.conversions.TerminalConversion",
   "libcst._parser.types.token.Token",
   "typing.Any",
   "typing.Mapping"
  ],
  "type": "class"
 },
 "libcst._parser.python_parser.PythonCSTParser.__init__": {
  "lineno": 23,
  "symbols_in_volume": [
   "libcst._parser.grammar.get_nonterminal_conversions",
   "libcst._parser.grammar.get_terminal_conversions",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.token.Token",
   "typing.Iterable"
  ],
  "type": "function"
 },
 "libcst._parser.python_parser.PythonCSTParser.convert_nonterminal": {
  "lineno": 43,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.python_parser.PythonCSTParser.convert_terminal": {
  "lineno": 46,
  "symbols_in_volume": [
   "libcst._parser.types.token.Token",
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst._parser.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._parser.tests.test_config": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._parser.tests.test_config.ConfigTest": {
  "lineno": 12,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst._parser.tests.test_config.ConfigTest.test_pick_compatible": {
  "lineno": 13,
  "symbols_in_volume": [
   "libcst._parser.parso.utils.PythonVersionInfo",
   "libcst._parser.types.config._pick_compatible_python_version"
  ],
  "type": "function"
 },
 "libcst._parser.tests.test_detect_config": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._parser.tests.test_detect_config.TestDetectConfig": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst._parser.tests.test_detect_config.TestDetectConfig.test_detect_module_config": {
  "lineno": 16,
  "symbols_in_volume": [
   "dataclasses.asdict",
   "libcst._parser.detect_config.detect_config",
   "libcst._parser.parso.utils.PythonVersionInfo",
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.config.PartialParserConfig",
   "libcst.testing.utils.data_provider",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._parser.tests.test_footer_behavior": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._parser.tests.test_footer_behavior.FooterBehaviorTest": {
  "lineno": 14,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst._parser.tests.test_footer_behavior.FooterBehaviorTest.test_parsers": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst.Assign",
   "libcst.AssignTarget",
   "libcst.CSTNode",
   "libcst.Comment",
   "libcst.Else",
   "libcst.EmptyLine",
   "libcst.FunctionDef",
   "libcst.If",
   "libcst.IndentedBlock",
   "libcst.Integer",
   "libcst.Module",
   "libcst.Name",
   "libcst.Parameters",
   "libcst.Pass",
   "libcst.Return",
   "libcst.SimpleStatementLine",
   "libcst.SimpleWhitespace",
   "libcst.TrailingWhitespace",
   "libcst._nodes.deep_equals.deep_equals",
   "libcst.parse_module",
   "libcst.testing.utils.data_provider",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst._parser.tests.test_node_identity": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._parser.tests.test_node_identity.DuplicateLeafNodeTest": {
  "lineno": 12,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst._parser.tests.test_node_identity.DuplicateLeafNodeTest.test_tokenize": {
  "lineno": 13,
  "symbols_in_volume": [
   "libcst.parse_module",
   "libcst.testing.utils.data_provider",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst._parser.tests.test_node_identity.DuplicateLeafNodeTest.test_tokenize.CountVisitor": {
  "lineno": 31,
  "symbols_in_volume": [
   "libcst.CSTVisitor"
  ],
  "type": "class"
 },
 "libcst._parser.tests.test_node_identity.DuplicateLeafNodeTest.test_tokenize.CountVisitor.__init__": {
  "lineno": 32,
  "symbols_in_volume": [
   "collections.Counter"
  ],
  "type": "function"
 },
 "libcst._parser.tests.test_node_identity.DuplicateLeafNodeTest.test_tokenize.CountVisitor.on_visit": {
  "lineno": 36,
  "symbols_in_volume": [
   "libcst.CSTNode"
  ],
  "type": "function"
 },
 "libcst._parser.tests.test_parse_errors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._parser.tests.test_parse_errors.ParseErrorsTest": {
  "lineno": 14,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst._parser.tests.test_parse_errors.ParseErrorsTest.test_parser_syntax_error_str": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst.ParserSyntaxError",
   "libcst.parse_expression",
   "libcst.parse_module",
   "libcst.parse_statement",
   "libcst.testing.utils.data_provider",
   "textwrap.dedent",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst._parser.tests.test_version_compare": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._parser.tests.test_version_compare.VersionCompareTest": {
  "lineno": 11,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst._parser.tests.test_version_compare.VersionCompareTest.test_tokenize": {
  "lineno": 12,
  "symbols_in_volume": [
   "libcst._parser.grammar._should_include",
   "libcst._parser.parso.utils.PythonVersionInfo",
   "libcst.testing.utils.data_provider"
  ],
  "type": "function"
 },
 "libcst._parser.tests.test_whitespace_parser": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "libcst._parser.tests.test_whitespace_parser.Config": {
  "lineno": 24,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._parser.types.config.BaseWhitespaceParserConfig",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._parser.tests.test_whitespace_parser.WhitespaceParserTest": {
  "lineno": 30,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst._parser.tests.test_whitespace_parser.WhitespaceParserTest.test_parsers": {
  "lineno": 31,
  "symbols_in_volume": [
   "libcst.Comment",
   "libcst.EmptyLine",
   "libcst.Newline",
   "libcst.SimpleWhitespace",
   "libcst.TrailingWhitespace",
   "libcst._nodes.deep_equals.deep_equals",
   "libcst._parser.types.whitespace_state.WhitespaceState",
   "libcst._parser.whitespace_parser.parse_empty_lines",
   "libcst._parser.whitespace_parser.parse_simple_whitespace",
   "libcst._parser.whitespace_parser.parse_trailing_whitespace",
   "libcst.testing.utils.data_provider",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst._parser.tests.test_wrapped_tokenize": {
  "lineno": null,
  "symbols_in_volume": [
   "libcst._parser.parso.utils.parse_version_string"
  ],
  "type": "module"
 },
 "libcst._parser.tests.test_wrapped_tokenize.WrappedTokenizeTest": {
  "lineno": 23,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst._parser.tests.test_wrapped_tokenize.WrappedTokenizeTest.test_error_dedent": {
  "lineno": 1903,
  "symbols_in_volume": [
   "libcst._exceptions.ParserSyntaxError",
   "libcst._parser.wrapped_tokenize.tokenize"
  ],
  "type": "function"
 },
 "libcst._parser.tests.test_wrapped_tokenize.WrappedTokenizeTest.test_errortoken": {
  "lineno": 1896,
  "symbols_in_volume": [
   "libcst._exceptions.ParserSyntaxError",
   "libcst._parser.wrapped_tokenize.tokenize"
  ],
  "type": "function"
 },
 "libcst._parser.tests.test_wrapped_tokenize.WrappedTokenizeTest.test_tokenize": {
  "lineno": 26,
  "symbols_in_volume": [
   "libcst._parser.parso.python.token.PythonTokenTypes.ASYNC",
   "libcst._parser.parso.python.token.PythonTokenTypes.AWAIT",
   "libcst._parser.parso.python.token.PythonTokenTypes.DEDENT",
   "libcst._parser.parso.python.token.PythonTokenTypes.ENDMARKER",
   "libcst._parser.parso.python.token.PythonTokenTypes.INDENT",
   "libcst._parser.parso.python.token.PythonTokenTypes.NAME",
   "libcst._parser.parso.python.token.PythonTokenTypes.NEWLINE",
   "libcst._parser.parso.python.token.PythonTokenTypes.OP",
   "libcst._parser.parso.utils.PythonVersionInfo",
   "libcst._parser.types.whitespace_state.WhitespaceState",
   "libcst._parser.wrapped_tokenize.Token",
   "libcst._parser.wrapped_tokenize.tokenize",
   "libcst.testing.utils.data_provider",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._parser.types": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._parser.types.config": {
  "lineno": null,
  "symbols_in_volume": [
   "re.compile",
   "typing.Pattern"
  ],
  "type": "module"
 },
 "libcst._parser.types.config.AutoConfig": {
  "lineno": 51,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "libcst._parser.types.config.AutoConfig.__repr__": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.types.config.BaseWhitespaceParserConfig": {
  "lineno": 23,
  "symbols_in_volume": [
   "abc.ABC",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._parser.types.config.ParserConfig": {
  "lineno": 33,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._parser.parso.utils.PythonVersionInfo",
   "typing.FrozenSet",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._parser.types.config.PartialParserConfig": {
  "lineno": 66,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "dataclasses.field",
   "libcst._add_slots.add_slots",
   "libcst._parser.parso.utils.PythonVersionInfo",
   "typing.FrozenSet",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._parser.types.config.PartialParserConfig.__post_init__": {
  "lineno": 119,
  "symbols_in_volume": [
   "codecs.lookup",
   "libcst._nodes.whitespace.NEWLINE_RE.fullmatch",
   "libcst._parser.parso.utils.parse_version_string"
  ],
  "type": "function"
 },
 "libcst._parser.types.config.PartialParserConfig.__repr__": {
  "lineno": 171,
  "symbols_in_volume": [
   "dataclasses.fields",
   "typing.List"
  ],
  "type": "function"
 },
 "libcst._parser.types.config._pick_compatible_python_version": {
  "lineno": 186,
  "symbols_in_volume": [
   "libcst._parser.parso.utils.PythonVersionInfo",
   "libcst._parser.parso.utils.parse_version_string",
   "sys.version_info",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._parser.types.conversions": {
  "lineno": null,
  "symbols_in_volume": [
   "libcst._parser.types.config.ParserConfig",
   "libcst._parser.types.token.Token",
   "typing.Any",
   "typing.Callable",
   "typing.Sequence"
  ],
  "type": "module"
 },
 "libcst._parser.types.partials": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "libcst._parser.types.partials.AnnAssignPartial": {
  "lineno": 88,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.expression.Annotation",
   "libcst._nodes.expression.BaseExpression",
   "libcst._nodes.op.AssignEqual",
   "typing.Optional"
  ],
  "type": "class"
 },
 "libcst._parser.types.partials.ArglistPartial": {
  "lineno": 65,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.expression.Arg",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._parser.types.partials.AssignPartial": {
  "lineno": 103,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.expression.BaseExpression",
   "libcst._nodes.op.AssignEqual"
  ],
  "type": "class"
 },
 "libcst._parser.types.partials.AttributePartial": {
  "lineno": 58,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.expression.Name",
   "libcst._nodes.op.Dot"
  ],
  "type": "class"
 },
 "libcst._parser.types.partials.AugAssignPartial": {
  "lineno": 96,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.expression.BaseExpression",
   "libcst._nodes.op.BaseAugOp"
  ],
  "type": "class"
 },
 "libcst._parser.types.partials.CallPartial": {
  "lineno": 71,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.expression.Arg",
   "libcst._nodes.expression.LeftParen",
   "libcst._nodes.expression.RightParen",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._parser.types.partials.DecoratorPartial": {
  "lineno": 122,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.statement.Decorator",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._parser.types.partials.ExceptClausePartial": {
  "lineno": 155,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.expression.BaseExpression",
   "libcst._nodes.statement.AsName",
   "libcst._nodes.whitespace.EmptyLine",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._parser.types.partials.FormattedStringConversionPartial": {
  "lineno": 141,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._parser.types.whitespace_state.WhitespaceState"
  ],
  "type": "class"
 },
 "libcst._parser.types.partials.FormattedStringFormatSpecPartial": {
  "lineno": 148,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.expression.BaseFormattedStringContent",
   "libcst._parser.types.whitespace_state.WhitespaceState",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._parser.types.partials.FuncdefPartial": {
  "lineno": 114,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.expression.LeftParen",
   "libcst._nodes.expression.Parameters",
   "libcst._nodes.expression.RightParen"
  ],
  "type": "class"
 },
 "libcst._parser.types.partials.ImportPartial": {
  "lineno": 128,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.statement.ImportAlias",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._parser.types.partials.ImportRelativePartial": {
  "lineno": 134,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.expression.Attribute",
   "libcst._nodes.expression.Name",
   "libcst._nodes.op.Dot",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._parser.types.partials.ParamStarPartial": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst._parser.types.partials.SimpleStatementPartial": {
  "lineno": 43,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.statement.BaseSmallStatement",
   "libcst._nodes.whitespace.TrailingWhitespace",
   "libcst._parser.types.whitespace_state.WhitespaceState",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._parser.types.partials.SlicePartial": {
  "lineno": 51,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.expression.BaseExpression",
   "libcst._nodes.op.Colon",
   "typing.Optional"
  ],
  "type": "class"
 },
 "libcst._parser.types.partials.SubscriptPartial": {
  "lineno": 79,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._nodes.expression.Index",
   "libcst._nodes.expression.LeftSquareBracket",
   "libcst._nodes.expression.RightSquareBracket",
   "libcst._nodes.expression.Slice",
   "libcst._nodes.expression.SubscriptElement",
   "libcst._parser.types.whitespace_state.WhitespaceState",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst._parser.types.partials.WithLeadingWhitespace": {
  "lineno": 36,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._parser.types.whitespace_state.WhitespaceState",
   "typing.Generic"
  ],
  "type": "class"
 },
 "libcst._parser.types.production": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._parser.types.production.Production": {
  "lineno": 11,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "typing.Optional"
  ],
  "type": "class"
 },
 "libcst._parser.types.production.Production.__str__": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._parser.types.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._parser.types.tests.test_config": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._parser.types.tests.test_config.TestConfig": {
  "lineno": 12,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst._parser.types.tests.test_config.TestConfig.test_invalid_partial_parser_config": {
  "lineno": 28,
  "symbols_in_volume": [
   "libcst._parser.types.config.PartialParserConfig",
   "libcst.testing.utils.data_provider",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst._parser.types.tests.test_config.TestConfig.test_valid_partial_parser_config": {
  "lineno": 13,
  "symbols_in_volume": [
   "libcst._parser.types.config.PartialParserConfig",
   "libcst.testing.utils.data_provider",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst._parser.types.token": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._parser.types.token.Token": {
  "lineno": 15,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots",
   "libcst._parser.parso.python.token.TokenType",
   "libcst._parser.types.whitespace_state.WhitespaceState",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "libcst._parser.types.whitespace_state": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._parser.types.whitespace_state.WhitespaceState": {
  "lineno": 15,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots"
  ],
  "type": "class"
 },
 "libcst._parser.whitespace_parser": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._parser.whitespace_parser._parse_comment": {
  "lineno": 200,
  "symbols_in_volume": [
   "libcst._nodes.whitespace.COMMENT_RE.match",
   "libcst._nodes.whitespace.Comment",
   "libcst._parser.types.config.BaseWhitespaceParserConfig",
   "libcst._parser.types.whitespace_state.WhitespaceState",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._parser.whitespace_parser._parse_empty_line": {
  "lineno": 144,
  "symbols_in_volume": [
   "libcst._nodes.whitespace.EmptyLine",
   "libcst._parser.types.config.BaseWhitespaceParserConfig",
   "libcst._parser.types.whitespace_state.WhitespaceState",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._parser.whitespace_parser._parse_indent": {
  "lineno": 174,
  "symbols_in_volume": [
   "libcst._parser.types.config.BaseWhitespaceParserConfig",
   "libcst._parser.types.whitespace_state.WhitespaceState",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._parser.whitespace_parser._parse_newline": {
  "lineno": 211,
  "symbols_in_volume": [
   "libcst._nodes.whitespace.NEWLINE_RE.match",
   "libcst._nodes.whitespace.Newline",
   "libcst._parser.types.config.BaseWhitespaceParserConfig",
   "libcst._parser.types.whitespace_state.WhitespaceState",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._parser.whitespace_parser._parse_parenthesized_whitespace": {
  "lineno": 257,
  "symbols_in_volume": [
   "libcst._nodes.whitespace.ParenthesizedWhitespace",
   "libcst._parser.types.config.BaseWhitespaceParserConfig",
   "libcst._parser.types.whitespace_state.WhitespaceState",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._parser.whitespace_parser._parse_trailing_whitespace": {
  "lineno": 237,
  "symbols_in_volume": [
   "libcst._nodes.whitespace.TrailingWhitespace",
   "libcst._parser.types.config.BaseWhitespaceParserConfig",
   "libcst._parser.types.whitespace_state.WhitespaceState",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._parser.whitespace_parser.parse_empty_lines": {
  "lineno": 63,
  "symbols_in_volume": [
   "libcst._nodes.whitespace.EmptyLine",
   "libcst._parser.types.config.BaseWhitespaceParserConfig",
   "libcst._parser.types.whitespace_state.WhitespaceState",
   "typing.List",
   "typing.Optional",
   "typing.Sequence",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "libcst._parser.whitespace_parser.parse_parenthesizable_whitespace": {
  "lineno": 127,
  "symbols_in_volume": [
   "libcst._nodes.whitespace.ParenthesizedWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "libcst._parser.types.config.BaseWhitespaceParserConfig",
   "libcst._parser.types.whitespace_state.WhitespaceState",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._parser.whitespace_parser.parse_simple_whitespace": {
  "lineno": 38,
  "symbols_in_volume": [
   "libcst._nodes.whitespace.SIMPLE_WHITESPACE_RE.match",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "libcst._parser.types.config.BaseWhitespaceParserConfig",
   "libcst._parser.types.whitespace_state.WhitespaceState"
  ],
  "type": "function"
 },
 "libcst._parser.whitespace_parser.parse_trailing_whitespace": {
  "lineno": 114,
  "symbols_in_volume": [
   "libcst._nodes.whitespace.TrailingWhitespace",
   "libcst._parser.types.config.BaseWhitespaceParserConfig",
   "libcst._parser.types.whitespace_state.WhitespaceState"
  ],
  "type": "function"
 },
 "libcst._parser.wrapped_tokenize": {
  "lineno": null,
  "symbols_in_volume": [
   "libcst._parser.parso.python.token.PythonTokenTypes.DEDENT",
   "libcst._parser.parso.python.token.PythonTokenTypes.ENDMARKER",
   "libcst._parser.parso.python.token.PythonTokenTypes.ERRORTOKEN",
   "libcst._parser.parso.python.token.PythonTokenTypes.ERROR_DEDENT",
   "libcst._parser.parso.python.token.PythonTokenTypes.FSTRING_END",
   "libcst._parser.parso.python.token.PythonTokenTypes.FSTRING_START",
   "libcst._parser.parso.python.token.PythonTokenTypes.INDENT",
   "libcst._parser.parso.python.token.PythonTokenTypes.OP",
   "libcst._parser.parso.python.token.TokenType"
  ],
  "type": "module"
 },
 "libcst._parser.wrapped_tokenize._ParenthesisOrFStringStackEntry": {
  "lineno": 52,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "libcst._parser.wrapped_tokenize._TokenizeState": {
  "lineno": 65,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "dataclasses.field",
   "libcst._add_slots.add_slots",
   "libcst._parser.types.whitespace_state.WhitespaceState",
   "typing.List",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst._parser.wrapped_tokenize._convert_token": {
  "lineno": 106,
  "symbols_in_volume": [
   "libcst._exceptions.ParserSyntaxError",
   "libcst._parser.parso.python.tokenize.Token",
   "libcst._parser.parso.utils.split_lines",
   "libcst._parser.types.token.Token",
   "libcst._parser.types.whitespace_state.WhitespaceState",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._parser.wrapped_tokenize.tokenize": {
  "lineno": 80,
  "symbols_in_volume": [
   "libcst._parser.parso.python.tokenize.tokenize_lines",
   "libcst._parser.parso.utils.PythonVersionInfo",
   "libcst._parser.parso.utils.split_lines",
   "libcst._parser.types.token.Token",
   "typing.Generator"
  ],
  "type": "function"
 },
 "libcst._parser.wrapped_tokenize.tokenize_lines": {
  "lineno": 87,
  "symbols_in_volume": [
   "libcst._parser.parso.python.tokenize.tokenize_lines",
   "libcst._parser.parso.utils.PythonVersionInfo",
   "libcst._parser.types.token.Token",
   "typing.Generator",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst._position": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "module"
 },
 "libcst._position.CodePosition": {
  "lineno": 24,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots"
  ],
  "type": "class"
 },
 "libcst._position.CodeRange": {
  "lineno": 33,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots"
  ],
  "type": "class"
 },
 "libcst._position.CodeRange.__init__": {
  "lineno": 51,
  "symbols_in_volume": [
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst._removal_sentinel": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._removal_sentinel.RemovalSentinel": {
  "lineno": 14,
  "symbols_in_volume": [
   "enum.Enum",
   "enum.auto"
  ],
  "type": "class"
 },
 "libcst._removal_sentinel.RemoveFromParent": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._tabs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._tabs.expand_tabs": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._type_enforce": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._type_enforce.is_value_of_type": {
  "lineno": 18,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Iterable",
   "typing.Mapping",
   "typing.MutableMapping",
   "typing.MutableSequence",
   "typing.Tuple",
   "typing._ForwardRef",
   "typing_extensions.Literal",
   "typing_inspect.get_args",
   "typing_inspect.get_origin",
   "typing_inspect.is_classvar",
   "typing_inspect.is_typevar",
   "typing_inspect.is_union_type"
  ],
  "type": "function"
 },
 "libcst._typed_visitor": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.TYPE_CHECKING"
  ],
  "type": "module"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AddAssign_whitespace_after": {
  "lineno": 220,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AddAssign_whitespace_before": {
  "lineno": 212,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Add_whitespace_after": {
  "lineno": 200,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Add_whitespace_before": {
  "lineno": 192,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_And_whitespace_after": {
  "lineno": 240,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_And_whitespace_before": {
  "lineno": 232,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AnnAssign_annotation": {
  "lineno": 260,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AnnAssign_equal": {
  "lineno": 276,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AnnAssign_semicolon": {
  "lineno": 284,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AnnAssign_target": {
  "lineno": 252,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AnnAssign_value": {
  "lineno": 268,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Annotation_annotation": {
  "lineno": 296,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Annotation_whitespace_after_indicator": {
  "lineno": 312,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Annotation_whitespace_before_indicator": {
  "lineno": 304,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Arg_comma": {
  "lineno": 348,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Arg_equal": {
  "lineno": 340,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Arg_keyword": {
  "lineno": 332,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Arg_star": {
  "lineno": 356,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Arg_value": {
  "lineno": 324,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Arg_whitespace_after_arg": {
  "lineno": 372,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Arg_whitespace_after_star": {
  "lineno": 364,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AsName_name": {
  "lineno": 384,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AsName_whitespace_after_as": {
  "lineno": 400,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AsName_whitespace_before_as": {
  "lineno": 392,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Assert_comma": {
  "lineno": 428,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Assert_msg": {
  "lineno": 420,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Assert_semicolon": {
  "lineno": 444,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Assert_test": {
  "lineno": 412,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Assert_whitespace_after_assert": {
  "lineno": 436,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AssignEqual_whitespace_after": {
  "lineno": 492,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AssignEqual_whitespace_before": {
  "lineno": 484,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AssignTarget_target": {
  "lineno": 504,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AssignTarget_whitespace_after_equal": {
  "lineno": 520,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AssignTarget_whitespace_before_equal": {
  "lineno": 512,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Assign_semicolon": {
  "lineno": 472,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Assign_targets": {
  "lineno": 456,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Assign_value": {
  "lineno": 464,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Asynchronous_whitespace_after": {
  "lineno": 532,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Attribute_attr": {
  "lineno": 552,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Attribute_dot": {
  "lineno": 560,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Attribute_lpar": {
  "lineno": 568,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Attribute_rpar": {
  "lineno": 576,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Attribute_value": {
  "lineno": 544,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AugAssign_operator": {
  "lineno": 596,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AugAssign_semicolon": {
  "lineno": 612,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AugAssign_target": {
  "lineno": 588,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_AugAssign_value": {
  "lineno": 604,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Await_expression": {
  "lineno": 624,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Await_lpar": {
  "lineno": 632,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Await_rpar": {
  "lineno": 640,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Await_whitespace_after_await": {
  "lineno": 648,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BinaryOperation_left": {
  "lineno": 660,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BinaryOperation_lpar": {
  "lineno": 684,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BinaryOperation_operator": {
  "lineno": 668,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BinaryOperation_right": {
  "lineno": 676,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BinaryOperation_rpar": {
  "lineno": 692,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BitAndAssign_whitespace_after": {
  "lineno": 732,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BitAndAssign_whitespace_before": {
  "lineno": 724,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BitAnd_whitespace_after": {
  "lineno": 712,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BitAnd_whitespace_before": {
  "lineno": 704,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BitInvert_whitespace_after": {
  "lineno": 744,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BitOrAssign_whitespace_after": {
  "lineno": 784,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BitOrAssign_whitespace_before": {
  "lineno": 776,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BitOr_whitespace_after": {
  "lineno": 764,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BitOr_whitespace_before": {
  "lineno": 756,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BitXorAssign_whitespace_after": {
  "lineno": 824,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BitXorAssign_whitespace_before": {
  "lineno": 816,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BitXor_whitespace_after": {
  "lineno": 804,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BitXor_whitespace_before": {
  "lineno": 796,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BooleanOperation_left": {
  "lineno": 836,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BooleanOperation_lpar": {
  "lineno": 860,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BooleanOperation_operator": {
  "lineno": 844,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BooleanOperation_right": {
  "lineno": 852,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_BooleanOperation_rpar": {
  "lineno": 868,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Break_semicolon": {
  "lineno": 880,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Call_args": {
  "lineno": 900,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Call_func": {
  "lineno": 892,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Call_lpar": {
  "lineno": 908,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Call_rpar": {
  "lineno": 916,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Call_whitespace_after_func": {
  "lineno": 924,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Call_whitespace_before_args": {
  "lineno": 932,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ClassDef_bases": {
  "lineno": 960,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ClassDef_body": {
  "lineno": 952,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ClassDef_decorators": {
  "lineno": 976,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ClassDef_keywords": {
  "lineno": 968,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ClassDef_leading_lines": {
  "lineno": 1000,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ClassDef_lines_after_decorators": {
  "lineno": 1008,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ClassDef_lpar": {
  "lineno": 984,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ClassDef_name": {
  "lineno": 944,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ClassDef_rpar": {
  "lineno": 992,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ClassDef_whitespace_after_class": {
  "lineno": 1016,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ClassDef_whitespace_after_name": {
  "lineno": 1024,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ClassDef_whitespace_before_colon": {
  "lineno": 1032,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Colon_whitespace_after": {
  "lineno": 1052,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Colon_whitespace_before": {
  "lineno": 1044,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Comma_whitespace_after": {
  "lineno": 1072,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Comma_whitespace_before": {
  "lineno": 1064,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Comment_value": {
  "lineno": 1084,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_CompFor_asynchronous": {
  "lineno": 1128,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_CompFor_ifs": {
  "lineno": 1112,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_CompFor_inner_for_in": {
  "lineno": 1120,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_CompFor_iter": {
  "lineno": 1104,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_CompFor_target": {
  "lineno": 1096,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_CompFor_whitespace_after_for": {
  "lineno": 1144,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_CompFor_whitespace_after_in": {
  "lineno": 1160,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_CompFor_whitespace_before": {
  "lineno": 1136,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_CompFor_whitespace_before_in": {
  "lineno": 1152,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_CompIf_test": {
  "lineno": 1172,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_CompIf_whitespace_before": {
  "lineno": 1180,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_CompIf_whitespace_before_test": {
  "lineno": 1188,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ComparisonTarget_comparator": {
  "lineno": 1244,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ComparisonTarget_operator": {
  "lineno": 1236,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Comparison_comparisons": {
  "lineno": 1208,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Comparison_left": {
  "lineno": 1200,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Comparison_lpar": {
  "lineno": 1216,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Comparison_rpar": {
  "lineno": 1224,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ConcatenatedString_left": {
  "lineno": 1256,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ConcatenatedString_lpar": {
  "lineno": 1272,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ConcatenatedString_right": {
  "lineno": 1264,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ConcatenatedString_rpar": {
  "lineno": 1280,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ConcatenatedString_whitespace_between": {
  "lineno": 1290,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Continue_semicolon": {
  "lineno": 1304,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Decorator_decorator": {
  "lineno": 1316,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Decorator_leading_lines": {
  "lineno": 1324,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Decorator_trailing_whitespace": {
  "lineno": 1340,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Decorator_whitespace_after_at": {
  "lineno": 1332,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Del_semicolon": {
  "lineno": 1368,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Del_target": {
  "lineno": 1352,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Del_whitespace_after_del": {
  "lineno": 1360,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DictComp_for_in": {
  "lineno": 1440,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DictComp_key": {
  "lineno": 1424,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DictComp_lbrace": {
  "lineno": 1448,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DictComp_lpar": {
  "lineno": 1464,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DictComp_rbrace": {
  "lineno": 1456,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DictComp_rpar": {
  "lineno": 1472,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DictComp_value": {
  "lineno": 1432,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DictComp_whitespace_after_colon": {
  "lineno": 1488,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DictComp_whitespace_before_colon": {
  "lineno": 1480,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DictElement_comma": {
  "lineno": 1516,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DictElement_key": {
  "lineno": 1500,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DictElement_value": {
  "lineno": 1508,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DictElement_whitespace_after_colon": {
  "lineno": 1532,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DictElement_whitespace_before_colon": {
  "lineno": 1524,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Dict_elements": {
  "lineno": 1380,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Dict_lbrace": {
  "lineno": 1388,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Dict_lpar": {
  "lineno": 1404,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Dict_rbrace": {
  "lineno": 1396,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Dict_rpar": {
  "lineno": 1412,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DivideAssign_whitespace_after": {
  "lineno": 1572,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_DivideAssign_whitespace_before": {
  "lineno": 1564,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Divide_whitespace_after": {
  "lineno": 1552,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Divide_whitespace_before": {
  "lineno": 1544,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Dot_whitespace_after": {
  "lineno": 1592,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Dot_whitespace_before": {
  "lineno": 1584,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Element_comma": {
  "lineno": 1612,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Element_value": {
  "lineno": 1604,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Ellipsis_lpar": {
  "lineno": 1624,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Ellipsis_rpar": {
  "lineno": 1632,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Else_body": {
  "lineno": 1644,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Else_leading_lines": {
  "lineno": 1652,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Else_whitespace_before_colon": {
  "lineno": 1660,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_EmptyLine_comment": {
  "lineno": 1688,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_EmptyLine_indent": {
  "lineno": 1672,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_EmptyLine_newline": {
  "lineno": 1696,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_EmptyLine_whitespace": {
  "lineno": 1680,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Equal_whitespace_after": {
  "lineno": 1716,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Equal_whitespace_before": {
  "lineno": 1708,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ExceptHandler_body": {
  "lineno": 1728,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ExceptHandler_leading_lines": {
  "lineno": 1752,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ExceptHandler_name": {
  "lineno": 1744,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ExceptHandler_type": {
  "lineno": 1736,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ExceptHandler_whitespace_after_except": {
  "lineno": 1762,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ExceptHandler_whitespace_before_colon": {
  "lineno": 1774,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Expr_semicolon": {
  "lineno": 1796,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Expr_value": {
  "lineno": 1788,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Finally_body": {
  "lineno": 1808,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Finally_leading_lines": {
  "lineno": 1816,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Finally_whitespace_before_colon": {
  "lineno": 1824,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Float_lpar": {
  "lineno": 1844,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Float_rpar": {
  "lineno": 1852,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Float_value": {
  "lineno": 1836,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FloorDivideAssign_whitespace_after": {
  "lineno": 1898,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FloorDivideAssign_whitespace_before": {
  "lineno": 1886,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FloorDivide_whitespace_after": {
  "lineno": 1872,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FloorDivide_whitespace_before": {
  "lineno": 1864,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_For_asynchronous": {
  "lineno": 1944,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_For_body": {
  "lineno": 1928,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_For_iter": {
  "lineno": 1920,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_For_leading_lines": {
  "lineno": 1952,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_For_orelse": {
  "lineno": 1936,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_For_target": {
  "lineno": 1912,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_For_whitespace_after_for": {
  "lineno": 1960,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_For_whitespace_after_in": {
  "lineno": 1976,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_For_whitespace_before_colon": {
  "lineno": 1984,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_For_whitespace_before_in": {
  "lineno": 1968,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FormattedStringExpression_conversion": {
  "lineno": 2056,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FormattedStringExpression_equal": {
  "lineno": 2104,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FormattedStringExpression_expression": {
  "lineno": 2044,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FormattedStringExpression_format_spec": {
  "lineno": 2068,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FormattedStringExpression_whitespace_after_expression": {
  "lineno": 2092,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FormattedStringExpression_whitespace_before_expression": {
  "lineno": 2080,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FormattedStringText_value": {
  "lineno": 2118,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FormattedString_end": {
  "lineno": 2012,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FormattedString_lpar": {
  "lineno": 2020,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FormattedString_parts": {
  "lineno": 1996,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FormattedString_rpar": {
  "lineno": 2028,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FormattedString_start": {
  "lineno": 2004,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_From_item": {
  "lineno": 2130,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_From_whitespace_after_from": {
  "lineno": 2146,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_From_whitespace_before_from": {
  "lineno": 2138,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FunctionDef_asynchronous": {
  "lineno": 2198,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FunctionDef_body": {
  "lineno": 2174,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FunctionDef_decorators": {
  "lineno": 2182,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FunctionDef_leading_lines": {
  "lineno": 2206,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FunctionDef_lines_after_decorators": {
  "lineno": 2214,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FunctionDef_name": {
  "lineno": 2158,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FunctionDef_params": {
  "lineno": 2166,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FunctionDef_returns": {
  "lineno": 2190,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FunctionDef_whitespace_after_def": {
  "lineno": 2222,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FunctionDef_whitespace_after_name": {
  "lineno": 2230,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FunctionDef_whitespace_before_colon": {
  "lineno": 2246,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_FunctionDef_whitespace_before_params": {
  "lineno": 2238,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_GeneratorExp_elt": {
  "lineno": 2258,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_GeneratorExp_for_in": {
  "lineno": 2266,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_GeneratorExp_lpar": {
  "lineno": 2274,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_GeneratorExp_rpar": {
  "lineno": 2282,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Global_names": {
  "lineno": 2294,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Global_semicolon": {
  "lineno": 2310,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Global_whitespace_after_global": {
  "lineno": 2302,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_GreaterThanEqual_whitespace_after": {
  "lineno": 2354,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_GreaterThanEqual_whitespace_before": {
  "lineno": 2344,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_GreaterThan_whitespace_after": {
  "lineno": 2330,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_GreaterThan_whitespace_before": {
  "lineno": 2322,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IfExp_body": {
  "lineno": 2426,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IfExp_lpar": {
  "lineno": 2442,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IfExp_orelse": {
  "lineno": 2434,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IfExp_rpar": {
  "lineno": 2450,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IfExp_test": {
  "lineno": 2418,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IfExp_whitespace_after_else": {
  "lineno": 2482,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IfExp_whitespace_after_if": {
  "lineno": 2466,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IfExp_whitespace_before_else": {
  "lineno": 2474,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IfExp_whitespace_before_if": {
  "lineno": 2458,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_If_body": {
  "lineno": 2374,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_If_leading_lines": {
  "lineno": 2390,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_If_orelse": {
  "lineno": 2382,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_If_test": {
  "lineno": 2366,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_If_whitespace_after_test": {
  "lineno": 2406,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_If_whitespace_before_test": {
  "lineno": 2398,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Imaginary_lpar": {
  "lineno": 2502,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Imaginary_rpar": {
  "lineno": 2510,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Imaginary_value": {
  "lineno": 2494,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ImportAlias_asname": {
  "lineno": 2558,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ImportAlias_comma": {
  "lineno": 2566,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ImportAlias_name": {
  "lineno": 2550,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ImportFrom_lpar": {
  "lineno": 2602,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ImportFrom_module": {
  "lineno": 2578,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ImportFrom_names": {
  "lineno": 2586,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ImportFrom_relative": {
  "lineno": 2594,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ImportFrom_rpar": {
  "lineno": 2610,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ImportFrom_semicolon": {
  "lineno": 2618,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ImportFrom_whitespace_after_from": {
  "lineno": 2626,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ImportFrom_whitespace_after_import": {
  "lineno": 2642,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ImportFrom_whitespace_before_import": {
  "lineno": 2634,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Import_names": {
  "lineno": 2522,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Import_semicolon": {
  "lineno": 2530,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Import_whitespace_after_import": {
  "lineno": 2538,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_In_whitespace_after": {
  "lineno": 2666,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_In_whitespace_before": {
  "lineno": 2658,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IndentedBlock_body": {
  "lineno": 2678,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IndentedBlock_footer": {
  "lineno": 2702,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IndentedBlock_header": {
  "lineno": 2686,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IndentedBlock_indent": {
  "lineno": 2694,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Index_value": {
  "lineno": 2714,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Integer_lpar": {
  "lineno": 2734,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Integer_rpar": {
  "lineno": 2742,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Integer_value": {
  "lineno": 2726,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IsNot_whitespace_after": {
  "lineno": 2790,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IsNot_whitespace_before": {
  "lineno": 2774,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_IsNot_whitespace_between": {
  "lineno": 2782,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Is_whitespace_after": {
  "lineno": 2762,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Is_whitespace_before": {
  "lineno": 2754,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Lambda_body": {
  "lineno": 2810,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Lambda_colon": {
  "lineno": 2818,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Lambda_lpar": {
  "lineno": 2826,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Lambda_params": {
  "lineno": 2802,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Lambda_rpar": {
  "lineno": 2834,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Lambda_whitespace_after_lambda": {
  "lineno": 2842,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_LeftCurlyBrace_whitespace_after": {
  "lineno": 2854,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_LeftParen_whitespace_after": {
  "lineno": 2866,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_LeftShiftAssign_whitespace_after": {
  "lineno": 2906,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_LeftShiftAssign_whitespace_before": {
  "lineno": 2898,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_LeftShift_whitespace_after": {
  "lineno": 2886,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_LeftShift_whitespace_before": {
  "lineno": 2878,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_LeftSquareBracket_whitespace_after": {
  "lineno": 2920,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_LessThanEqual_whitespace_after": {
  "lineno": 2962,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_LessThanEqual_whitespace_before": {
  "lineno": 2954,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_LessThan_whitespace_after": {
  "lineno": 2942,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_LessThan_whitespace_before": {
  "lineno": 2934,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ListComp_elt": {
  "lineno": 3018,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ListComp_for_in": {
  "lineno": 3026,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ListComp_lbracket": {
  "lineno": 3034,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ListComp_lpar": {
  "lineno": 3050,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ListComp_rbracket": {
  "lineno": 3042,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ListComp_rpar": {
  "lineno": 3058,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_List_elements": {
  "lineno": 2974,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_List_lbracket": {
  "lineno": 2982,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_List_lpar": {
  "lineno": 2998,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_List_rbracket": {
  "lineno": 2990,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_List_rpar": {
  "lineno": 3006,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_MatrixMultiplyAssign_whitespace_after": {
  "lineno": 3106,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_MatrixMultiplyAssign_whitespace_before": {
  "lineno": 3094,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_MatrixMultiply_whitespace_after": {
  "lineno": 3078,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_MatrixMultiply_whitespace_before": {
  "lineno": 3070,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Minus_whitespace_after": {
  "lineno": 3120,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Module_body": {
  "lineno": 3132,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Module_default_indent": {
  "lineno": 3164,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Module_default_newline": {
  "lineno": 3172,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Module_encoding": {
  "lineno": 3156,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Module_footer": {
  "lineno": 3148,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Module_has_trailing_newline": {
  "lineno": 3180,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Module_header": {
  "lineno": 3140,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ModuloAssign_whitespace_after": {
  "lineno": 3220,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ModuloAssign_whitespace_before": {
  "lineno": 3212,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Modulo_whitespace_after": {
  "lineno": 3200,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Modulo_whitespace_before": {
  "lineno": 3192,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_MultiplyAssign_whitespace_after": {
  "lineno": 3260,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_MultiplyAssign_whitespace_before": {
  "lineno": 3252,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Multiply_whitespace_after": {
  "lineno": 3240,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Multiply_whitespace_before": {
  "lineno": 3232,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_NameItem_comma": {
  "lineno": 3308,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_NameItem_name": {
  "lineno": 3300,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Name_lpar": {
  "lineno": 3280,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Name_rpar": {
  "lineno": 3288,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Name_value": {
  "lineno": 3272,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_NamedExpr_lpar": {
  "lineno": 3336,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_NamedExpr_rpar": {
  "lineno": 3344,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_NamedExpr_target": {
  "lineno": 3320,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_NamedExpr_value": {
  "lineno": 3328,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_NamedExpr_whitespace_after_walrus": {
  "lineno": 3360,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_NamedExpr_whitespace_before_walrus": {
  "lineno": 3352,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Newline_value": {
  "lineno": 3372,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Nonlocal_names": {
  "lineno": 3384,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Nonlocal_semicolon": {
  "lineno": 3400,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Nonlocal_whitespace_after_nonlocal": {
  "lineno": 3392,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_NotEqual_value": {
  "lineno": 3424,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_NotEqual_whitespace_after": {
  "lineno": 3440,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_NotEqual_whitespace_before": {
  "lineno": 3432,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_NotIn_whitespace_after": {
  "lineno": 3468,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_NotIn_whitespace_before": {
  "lineno": 3452,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_NotIn_whitespace_between": {
  "lineno": 3460,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Not_whitespace_after": {
  "lineno": 3412,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Or_whitespace_after": {
  "lineno": 3488,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Or_whitespace_before": {
  "lineno": 3480,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ParamSlash_comma": {
  "lineno": 3568,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ParamStar_comma": {
  "lineno": 3580,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Param_annotation": {
  "lineno": 3508,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Param_comma": {
  "lineno": 3532,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Param_default": {
  "lineno": 3524,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Param_equal": {
  "lineno": 3516,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Param_name": {
  "lineno": 3500,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Param_star": {
  "lineno": 3540,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Param_whitespace_after_param": {
  "lineno": 3556,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Param_whitespace_after_star": {
  "lineno": 3548,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Parameters_kwonly_params": {
  "lineno": 3608,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Parameters_params": {
  "lineno": 3592,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Parameters_posonly_ind": {
  "lineno": 3632,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Parameters_posonly_params": {
  "lineno": 3624,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Parameters_star_arg": {
  "lineno": 3600,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Parameters_star_kwarg": {
  "lineno": 3616,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ParenthesizedWhitespace_empty_lines": {
  "lineno": 3660,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ParenthesizedWhitespace_first_line": {
  "lineno": 3648,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ParenthesizedWhitespace_indent": {
  "lineno": 3672,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_ParenthesizedWhitespace_last_line": {
  "lineno": 3684,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Pass_semicolon": {
  "lineno": 3698,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Plus_whitespace_after": {
  "lineno": 3710,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_PowerAssign_whitespace_after": {
  "lineno": 3750,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_PowerAssign_whitespace_before": {
  "lineno": 3742,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Power_whitespace_after": {
  "lineno": 3730,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Power_whitespace_before": {
  "lineno": 3722,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Raise_cause": {
  "lineno": 3770,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Raise_exc": {
  "lineno": 3762,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Raise_semicolon": {
  "lineno": 3786,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Raise_whitespace_after_raise": {
  "lineno": 3778,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Return_semicolon": {
  "lineno": 3814,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Return_value": {
  "lineno": 3798,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Return_whitespace_after_return": {
  "lineno": 3806,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_RightCurlyBrace_whitespace_before": {
  "lineno": 3826,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_RightParen_whitespace_before": {
  "lineno": 3838,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_RightShiftAssign_whitespace_after": {
  "lineno": 3882,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_RightShiftAssign_whitespace_before": {
  "lineno": 3872,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_RightShift_whitespace_after": {
  "lineno": 3858,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_RightShift_whitespace_before": {
  "lineno": 3850,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_RightSquareBracket_whitespace_before": {
  "lineno": 3896,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Semicolon_whitespace_after": {
  "lineno": 3918,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Semicolon_whitespace_before": {
  "lineno": 3910,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SetComp_elt": {
  "lineno": 3974,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SetComp_for_in": {
  "lineno": 3982,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SetComp_lbrace": {
  "lineno": 3990,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SetComp_lpar": {
  "lineno": 4006,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SetComp_rbrace": {
  "lineno": 3998,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SetComp_rpar": {
  "lineno": 4014,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Set_elements": {
  "lineno": 3930,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Set_lbrace": {
  "lineno": 3938,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Set_lpar": {
  "lineno": 3954,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Set_rbrace": {
  "lineno": 3946,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Set_rpar": {
  "lineno": 3962,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SimpleStatementLine_body": {
  "lineno": 4026,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SimpleStatementLine_leading_lines": {
  "lineno": 4036,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SimpleStatementLine_trailing_whitespace": {
  "lineno": 4048,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SimpleStatementSuite_body": {
  "lineno": 4064,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SimpleStatementSuite_leading_whitespace": {
  "lineno": 4074,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SimpleStatementSuite_trailing_whitespace": {
  "lineno": 4086,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SimpleString_lpar": {
  "lineno": 4108,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SimpleString_rpar": {
  "lineno": 4116,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SimpleString_value": {
  "lineno": 4100,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SimpleWhitespace_value": {
  "lineno": 4128,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Slice_first_colon": {
  "lineno": 4164,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Slice_lower": {
  "lineno": 4140,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Slice_second_colon": {
  "lineno": 4172,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Slice_step": {
  "lineno": 4156,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Slice_upper": {
  "lineno": 4148,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_StarredDictElement_comma": {
  "lineno": 4192,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_StarredDictElement_value": {
  "lineno": 4184,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_StarredDictElement_whitespace_before_value": {
  "lineno": 4202,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_StarredElement_comma": {
  "lineno": 4224,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_StarredElement_lpar": {
  "lineno": 4232,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_StarredElement_rpar": {
  "lineno": 4240,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_StarredElement_value": {
  "lineno": 4216,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_StarredElement_whitespace_before_value": {
  "lineno": 4250,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SubscriptElement_comma": {
  "lineno": 4332,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SubscriptElement_slice": {
  "lineno": 4324,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Subscript_lbracket": {
  "lineno": 4280,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Subscript_lpar": {
  "lineno": 4296,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Subscript_rbracket": {
  "lineno": 4288,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Subscript_rpar": {
  "lineno": 4304,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Subscript_slice": {
  "lineno": 4272,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Subscript_value": {
  "lineno": 4264,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Subscript_whitespace_after_value": {
  "lineno": 4312,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SubtractAssign_whitespace_after": {
  "lineno": 4372,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_SubtractAssign_whitespace_before": {
  "lineno": 4364,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Subtract_whitespace_after": {
  "lineno": 4352,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Subtract_whitespace_before": {
  "lineno": 4344,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_TrailingWhitespace_comment": {
  "lineno": 4392,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_TrailingWhitespace_newline": {
  "lineno": 4400,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_TrailingWhitespace_whitespace": {
  "lineno": 4384,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Try_body": {
  "lineno": 4412,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Try_finalbody": {
  "lineno": 4436,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Try_handlers": {
  "lineno": 4420,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Try_leading_lines": {
  "lineno": 4444,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Try_orelse": {
  "lineno": 4428,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Try_whitespace_before_colon": {
  "lineno": 4452,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Tuple_elements": {
  "lineno": 4464,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Tuple_lpar": {
  "lineno": 4472,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Tuple_rpar": {
  "lineno": 4480,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_UnaryOperation_expression": {
  "lineno": 4500,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_UnaryOperation_lpar": {
  "lineno": 4508,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_UnaryOperation_operator": {
  "lineno": 4492,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_UnaryOperation_rpar": {
  "lineno": 4516,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_While_body": {
  "lineno": 4536,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_While_leading_lines": {
  "lineno": 4552,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_While_orelse": {
  "lineno": 4544,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_While_test": {
  "lineno": 4528,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_While_whitespace_after_while": {
  "lineno": 4560,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_While_whitespace_before_colon": {
  "lineno": 4568,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_WithItem_asname": {
  "lineno": 4640,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_WithItem_comma": {
  "lineno": 4648,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_WithItem_item": {
  "lineno": 4632,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_With_asynchronous": {
  "lineno": 4596,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_With_body": {
  "lineno": 4588,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_With_items": {
  "lineno": 4580,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_With_leading_lines": {
  "lineno": 4604,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_With_whitespace_after_with": {
  "lineno": 4612,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_With_whitespace_before_colon": {
  "lineno": 4620,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Yield_lpar": {
  "lineno": 4668,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Yield_rpar": {
  "lineno": 4676,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Yield_value": {
  "lineno": 4660,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.leave_Yield_whitespace_after_yield": {
  "lineno": 4684,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Add": {
  "lineno": 184,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AddAssign": {
  "lineno": 204,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AddAssign_whitespace_after": {
  "lineno": 216,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AddAssign_whitespace_before": {
  "lineno": 208,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Add_whitespace_after": {
  "lineno": 196,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Add_whitespace_before": {
  "lineno": 188,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_And": {
  "lineno": 224,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_And_whitespace_after": {
  "lineno": 236,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_And_whitespace_before": {
  "lineno": 228,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AnnAssign": {
  "lineno": 244,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AnnAssign_annotation": {
  "lineno": 256,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AnnAssign_equal": {
  "lineno": 272,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AnnAssign_semicolon": {
  "lineno": 280,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AnnAssign_target": {
  "lineno": 248,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AnnAssign_value": {
  "lineno": 264,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Annotation": {
  "lineno": 288,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Annotation_annotation": {
  "lineno": 292,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Annotation_whitespace_after_indicator": {
  "lineno": 308,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Annotation_whitespace_before_indicator": {
  "lineno": 300,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Arg": {
  "lineno": 316,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Arg_comma": {
  "lineno": 344,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Arg_equal": {
  "lineno": 336,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Arg_keyword": {
  "lineno": 328,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Arg_star": {
  "lineno": 352,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Arg_value": {
  "lineno": 320,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Arg_whitespace_after_arg": {
  "lineno": 368,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Arg_whitespace_after_star": {
  "lineno": 360,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AsName": {
  "lineno": 376,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AsName_name": {
  "lineno": 380,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AsName_whitespace_after_as": {
  "lineno": 396,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AsName_whitespace_before_as": {
  "lineno": 388,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Assert": {
  "lineno": 404,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Assert_comma": {
  "lineno": 424,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Assert_msg": {
  "lineno": 416,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Assert_semicolon": {
  "lineno": 440,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Assert_test": {
  "lineno": 408,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Assert_whitespace_after_assert": {
  "lineno": 432,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Assign": {
  "lineno": 448,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AssignEqual": {
  "lineno": 476,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AssignEqual_whitespace_after": {
  "lineno": 488,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AssignEqual_whitespace_before": {
  "lineno": 480,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AssignTarget": {
  "lineno": 496,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AssignTarget_target": {
  "lineno": 500,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AssignTarget_whitespace_after_equal": {
  "lineno": 516,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AssignTarget_whitespace_before_equal": {
  "lineno": 508,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Assign_semicolon": {
  "lineno": 468,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Assign_targets": {
  "lineno": 452,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Assign_value": {
  "lineno": 460,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Asynchronous": {
  "lineno": 524,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Asynchronous_whitespace_after": {
  "lineno": 528,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Attribute": {
  "lineno": 536,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Attribute_attr": {
  "lineno": 548,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Attribute_dot": {
  "lineno": 556,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Attribute_lpar": {
  "lineno": 564,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Attribute_rpar": {
  "lineno": 572,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Attribute_value": {
  "lineno": 540,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AugAssign": {
  "lineno": 580,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AugAssign_operator": {
  "lineno": 592,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AugAssign_semicolon": {
  "lineno": 608,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AugAssign_target": {
  "lineno": 584,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_AugAssign_value": {
  "lineno": 600,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Await": {
  "lineno": 616,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Await_expression": {
  "lineno": 620,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Await_lpar": {
  "lineno": 628,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Await_rpar": {
  "lineno": 636,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Await_whitespace_after_await": {
  "lineno": 644,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BinaryOperation": {
  "lineno": 652,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BinaryOperation_left": {
  "lineno": 656,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BinaryOperation_lpar": {
  "lineno": 680,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BinaryOperation_operator": {
  "lineno": 664,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BinaryOperation_right": {
  "lineno": 672,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BinaryOperation_rpar": {
  "lineno": 688,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitAnd": {
  "lineno": 696,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitAndAssign": {
  "lineno": 716,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitAndAssign_whitespace_after": {
  "lineno": 728,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitAndAssign_whitespace_before": {
  "lineno": 720,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitAnd_whitespace_after": {
  "lineno": 708,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitAnd_whitespace_before": {
  "lineno": 700,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitInvert": {
  "lineno": 736,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitInvert_whitespace_after": {
  "lineno": 740,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitOr": {
  "lineno": 748,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitOrAssign": {
  "lineno": 768,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitOrAssign_whitespace_after": {
  "lineno": 780,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitOrAssign_whitespace_before": {
  "lineno": 772,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitOr_whitespace_after": {
  "lineno": 760,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitOr_whitespace_before": {
  "lineno": 752,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitXor": {
  "lineno": 788,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitXorAssign": {
  "lineno": 808,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitXorAssign_whitespace_after": {
  "lineno": 820,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitXorAssign_whitespace_before": {
  "lineno": 812,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitXor_whitespace_after": {
  "lineno": 800,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BitXor_whitespace_before": {
  "lineno": 792,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BooleanOperation": {
  "lineno": 828,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BooleanOperation_left": {
  "lineno": 832,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BooleanOperation_lpar": {
  "lineno": 856,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BooleanOperation_operator": {
  "lineno": 840,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BooleanOperation_right": {
  "lineno": 848,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_BooleanOperation_rpar": {
  "lineno": 864,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Break": {
  "lineno": 872,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Break_semicolon": {
  "lineno": 876,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Call": {
  "lineno": 884,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Call_args": {
  "lineno": 896,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Call_func": {
  "lineno": 888,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Call_lpar": {
  "lineno": 904,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Call_rpar": {
  "lineno": 912,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Call_whitespace_after_func": {
  "lineno": 920,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Call_whitespace_before_args": {
  "lineno": 928,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ClassDef": {
  "lineno": 936,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ClassDef_bases": {
  "lineno": 956,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ClassDef_body": {
  "lineno": 948,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ClassDef_decorators": {
  "lineno": 972,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ClassDef_keywords": {
  "lineno": 964,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ClassDef_leading_lines": {
  "lineno": 996,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ClassDef_lines_after_decorators": {
  "lineno": 1004,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ClassDef_lpar": {
  "lineno": 980,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ClassDef_name": {
  "lineno": 940,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ClassDef_rpar": {
  "lineno": 988,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ClassDef_whitespace_after_class": {
  "lineno": 1012,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ClassDef_whitespace_after_name": {
  "lineno": 1020,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ClassDef_whitespace_before_colon": {
  "lineno": 1028,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Colon": {
  "lineno": 1036,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Colon_whitespace_after": {
  "lineno": 1048,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Colon_whitespace_before": {
  "lineno": 1040,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Comma": {
  "lineno": 1056,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Comma_whitespace_after": {
  "lineno": 1068,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Comma_whitespace_before": {
  "lineno": 1060,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Comment": {
  "lineno": 1076,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Comment_value": {
  "lineno": 1080,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_CompFor": {
  "lineno": 1088,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_CompFor_asynchronous": {
  "lineno": 1124,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_CompFor_ifs": {
  "lineno": 1108,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_CompFor_inner_for_in": {
  "lineno": 1116,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_CompFor_iter": {
  "lineno": 1100,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_CompFor_target": {
  "lineno": 1092,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_CompFor_whitespace_after_for": {
  "lineno": 1140,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_CompFor_whitespace_after_in": {
  "lineno": 1156,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_CompFor_whitespace_before": {
  "lineno": 1132,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_CompFor_whitespace_before_in": {
  "lineno": 1148,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_CompIf": {
  "lineno": 1164,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_CompIf_test": {
  "lineno": 1168,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_CompIf_whitespace_before": {
  "lineno": 1176,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_CompIf_whitespace_before_test": {
  "lineno": 1184,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Comparison": {
  "lineno": 1192,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ComparisonTarget": {
  "lineno": 1228,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ComparisonTarget_comparator": {
  "lineno": 1240,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ComparisonTarget_operator": {
  "lineno": 1232,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Comparison_comparisons": {
  "lineno": 1204,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Comparison_left": {
  "lineno": 1196,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Comparison_lpar": {
  "lineno": 1212,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Comparison_rpar": {
  "lineno": 1220,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ConcatenatedString": {
  "lineno": 1248,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ConcatenatedString_left": {
  "lineno": 1252,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ConcatenatedString_lpar": {
  "lineno": 1268,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ConcatenatedString_right": {
  "lineno": 1260,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ConcatenatedString_rpar": {
  "lineno": 1276,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ConcatenatedString_whitespace_between": {
  "lineno": 1284,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Continue": {
  "lineno": 1296,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Continue_semicolon": {
  "lineno": 1300,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Decorator": {
  "lineno": 1308,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Decorator_decorator": {
  "lineno": 1312,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Decorator_leading_lines": {
  "lineno": 1320,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Decorator_trailing_whitespace": {
  "lineno": 1336,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Decorator_whitespace_after_at": {
  "lineno": 1328,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Del": {
  "lineno": 1344,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Del_semicolon": {
  "lineno": 1364,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Del_target": {
  "lineno": 1348,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Del_whitespace_after_del": {
  "lineno": 1356,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Dict": {
  "lineno": 1372,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictComp": {
  "lineno": 1416,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictComp_for_in": {
  "lineno": 1436,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictComp_key": {
  "lineno": 1420,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictComp_lbrace": {
  "lineno": 1444,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictComp_lpar": {
  "lineno": 1460,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictComp_rbrace": {
  "lineno": 1452,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictComp_rpar": {
  "lineno": 1468,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictComp_value": {
  "lineno": 1428,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictComp_whitespace_after_colon": {
  "lineno": 1484,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictComp_whitespace_before_colon": {
  "lineno": 1476,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictElement": {
  "lineno": 1492,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictElement_comma": {
  "lineno": 1512,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictElement_key": {
  "lineno": 1496,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictElement_value": {
  "lineno": 1504,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictElement_whitespace_after_colon": {
  "lineno": 1528,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DictElement_whitespace_before_colon": {
  "lineno": 1520,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Dict_elements": {
  "lineno": 1376,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Dict_lbrace": {
  "lineno": 1384,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Dict_lpar": {
  "lineno": 1400,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Dict_rbrace": {
  "lineno": 1392,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Dict_rpar": {
  "lineno": 1408,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Divide": {
  "lineno": 1536,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DivideAssign": {
  "lineno": 1556,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DivideAssign_whitespace_after": {
  "lineno": 1568,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_DivideAssign_whitespace_before": {
  "lineno": 1560,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Divide_whitespace_after": {
  "lineno": 1548,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Divide_whitespace_before": {
  "lineno": 1540,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Dot": {
  "lineno": 1576,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Dot_whitespace_after": {
  "lineno": 1588,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Dot_whitespace_before": {
  "lineno": 1580,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Element": {
  "lineno": 1596,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Element_comma": {
  "lineno": 1608,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Element_value": {
  "lineno": 1600,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Ellipsis": {
  "lineno": 1616,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Ellipsis_lpar": {
  "lineno": 1620,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Ellipsis_rpar": {
  "lineno": 1628,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Else": {
  "lineno": 1636,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Else_body": {
  "lineno": 1640,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Else_leading_lines": {
  "lineno": 1648,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Else_whitespace_before_colon": {
  "lineno": 1656,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_EmptyLine": {
  "lineno": 1664,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_EmptyLine_comment": {
  "lineno": 1684,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_EmptyLine_indent": {
  "lineno": 1668,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_EmptyLine_newline": {
  "lineno": 1692,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_EmptyLine_whitespace": {
  "lineno": 1676,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Equal": {
  "lineno": 1700,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Equal_whitespace_after": {
  "lineno": 1712,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Equal_whitespace_before": {
  "lineno": 1704,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ExceptHandler": {
  "lineno": 1720,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ExceptHandler_body": {
  "lineno": 1724,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ExceptHandler_leading_lines": {
  "lineno": 1748,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ExceptHandler_name": {
  "lineno": 1740,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ExceptHandler_type": {
  "lineno": 1732,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ExceptHandler_whitespace_after_except": {
  "lineno": 1756,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ExceptHandler_whitespace_before_colon": {
  "lineno": 1768,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Expr": {
  "lineno": 1780,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Expr_semicolon": {
  "lineno": 1792,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Expr_value": {
  "lineno": 1784,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Finally": {
  "lineno": 1800,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Finally_body": {
  "lineno": 1804,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Finally_leading_lines": {
  "lineno": 1812,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Finally_whitespace_before_colon": {
  "lineno": 1820,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Float": {
  "lineno": 1828,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Float_lpar": {
  "lineno": 1840,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Float_rpar": {
  "lineno": 1848,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Float_value": {
  "lineno": 1832,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FloorDivide": {
  "lineno": 1856,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FloorDivideAssign": {
  "lineno": 1876,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FloorDivideAssign_whitespace_after": {
  "lineno": 1892,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FloorDivideAssign_whitespace_before": {
  "lineno": 1880,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FloorDivide_whitespace_after": {
  "lineno": 1868,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FloorDivide_whitespace_before": {
  "lineno": 1860,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_For": {
  "lineno": 1904,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_For_asynchronous": {
  "lineno": 1940,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_For_body": {
  "lineno": 1924,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_For_iter": {
  "lineno": 1916,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_For_leading_lines": {
  "lineno": 1948,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_For_orelse": {
  "lineno": 1932,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_For_target": {
  "lineno": 1908,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_For_whitespace_after_for": {
  "lineno": 1956,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_For_whitespace_after_in": {
  "lineno": 1972,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_For_whitespace_before_colon": {
  "lineno": 1980,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_For_whitespace_before_in": {
  "lineno": 1964,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FormattedString": {
  "lineno": 1988,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FormattedStringExpression": {
  "lineno": 2032,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FormattedStringExpression_conversion": {
  "lineno": 2050,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FormattedStringExpression_equal": {
  "lineno": 2098,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FormattedStringExpression_expression": {
  "lineno": 2038,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FormattedStringExpression_format_spec": {
  "lineno": 2062,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FormattedStringExpression_whitespace_after_expression": {
  "lineno": 2086,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FormattedStringExpression_whitespace_before_expression": {
  "lineno": 2074,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FormattedStringText": {
  "lineno": 2110,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FormattedStringText_value": {
  "lineno": 2114,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FormattedString_end": {
  "lineno": 2008,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FormattedString_lpar": {
  "lineno": 2016,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FormattedString_parts": {
  "lineno": 1992,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FormattedString_rpar": {
  "lineno": 2024,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FormattedString_start": {
  "lineno": 2000,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_From": {
  "lineno": 2122,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_From_item": {
  "lineno": 2126,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_From_whitespace_after_from": {
  "lineno": 2142,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_From_whitespace_before_from": {
  "lineno": 2134,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FunctionDef": {
  "lineno": 2150,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FunctionDef_asynchronous": {
  "lineno": 2194,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FunctionDef_body": {
  "lineno": 2170,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FunctionDef_decorators": {
  "lineno": 2178,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FunctionDef_leading_lines": {
  "lineno": 2202,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FunctionDef_lines_after_decorators": {
  "lineno": 2210,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FunctionDef_name": {
  "lineno": 2154,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FunctionDef_params": {
  "lineno": 2162,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FunctionDef_returns": {
  "lineno": 2186,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FunctionDef_whitespace_after_def": {
  "lineno": 2218,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FunctionDef_whitespace_after_name": {
  "lineno": 2226,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FunctionDef_whitespace_before_colon": {
  "lineno": 2242,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_FunctionDef_whitespace_before_params": {
  "lineno": 2234,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_GeneratorExp": {
  "lineno": 2250,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_GeneratorExp_elt": {
  "lineno": 2254,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_GeneratorExp_for_in": {
  "lineno": 2262,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_GeneratorExp_lpar": {
  "lineno": 2270,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_GeneratorExp_rpar": {
  "lineno": 2278,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Global": {
  "lineno": 2286,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Global_names": {
  "lineno": 2290,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Global_semicolon": {
  "lineno": 2306,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Global_whitespace_after_global": {
  "lineno": 2298,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_GreaterThan": {
  "lineno": 2314,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_GreaterThanEqual": {
  "lineno": 2334,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_GreaterThanEqual_whitespace_after": {
  "lineno": 2350,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_GreaterThanEqual_whitespace_before": {
  "lineno": 2338,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_GreaterThan_whitespace_after": {
  "lineno": 2326,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_GreaterThan_whitespace_before": {
  "lineno": 2318,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_If": {
  "lineno": 2358,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IfExp": {
  "lineno": 2410,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IfExp_body": {
  "lineno": 2422,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IfExp_lpar": {
  "lineno": 2438,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IfExp_orelse": {
  "lineno": 2430,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IfExp_rpar": {
  "lineno": 2446,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IfExp_test": {
  "lineno": 2414,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IfExp_whitespace_after_else": {
  "lineno": 2478,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IfExp_whitespace_after_if": {
  "lineno": 2462,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IfExp_whitespace_before_else": {
  "lineno": 2470,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IfExp_whitespace_before_if": {
  "lineno": 2454,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_If_body": {
  "lineno": 2370,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_If_leading_lines": {
  "lineno": 2386,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_If_orelse": {
  "lineno": 2378,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_If_test": {
  "lineno": 2362,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_If_whitespace_after_test": {
  "lineno": 2402,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_If_whitespace_before_test": {
  "lineno": 2394,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Imaginary": {
  "lineno": 2486,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Imaginary_lpar": {
  "lineno": 2498,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Imaginary_rpar": {
  "lineno": 2506,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Imaginary_value": {
  "lineno": 2490,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Import": {
  "lineno": 2514,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportAlias": {
  "lineno": 2542,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportAlias_asname": {
  "lineno": 2554,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportAlias_comma": {
  "lineno": 2562,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportAlias_name": {
  "lineno": 2546,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportFrom": {
  "lineno": 2570,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportFrom_lpar": {
  "lineno": 2598,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportFrom_module": {
  "lineno": 2574,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportFrom_names": {
  "lineno": 2582,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportFrom_relative": {
  "lineno": 2590,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportFrom_rpar": {
  "lineno": 2606,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportFrom_semicolon": {
  "lineno": 2614,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportFrom_whitespace_after_from": {
  "lineno": 2622,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportFrom_whitespace_after_import": {
  "lineno": 2638,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportFrom_whitespace_before_import": {
  "lineno": 2630,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ImportStar": {
  "lineno": 2646,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Import_names": {
  "lineno": 2518,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Import_semicolon": {
  "lineno": 2526,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Import_whitespace_after_import": {
  "lineno": 2534,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_In": {
  "lineno": 2650,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_In_whitespace_after": {
  "lineno": 2662,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_In_whitespace_before": {
  "lineno": 2654,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IndentedBlock": {
  "lineno": 2670,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IndentedBlock_body": {
  "lineno": 2674,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IndentedBlock_footer": {
  "lineno": 2698,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IndentedBlock_header": {
  "lineno": 2682,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IndentedBlock_indent": {
  "lineno": 2690,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Index": {
  "lineno": 2706,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Index_value": {
  "lineno": 2710,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Integer": {
  "lineno": 2718,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Integer_lpar": {
  "lineno": 2730,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Integer_rpar": {
  "lineno": 2738,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Integer_value": {
  "lineno": 2722,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Is": {
  "lineno": 2746,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IsNot": {
  "lineno": 2766,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IsNot_whitespace_after": {
  "lineno": 2786,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IsNot_whitespace_before": {
  "lineno": 2770,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_IsNot_whitespace_between": {
  "lineno": 2778,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Is_whitespace_after": {
  "lineno": 2758,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Is_whitespace_before": {
  "lineno": 2750,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Lambda": {
  "lineno": 2794,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Lambda_body": {
  "lineno": 2806,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Lambda_colon": {
  "lineno": 2814,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Lambda_lpar": {
  "lineno": 2822,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Lambda_params": {
  "lineno": 2798,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Lambda_rpar": {
  "lineno": 2830,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Lambda_whitespace_after_lambda": {
  "lineno": 2838,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LeftCurlyBrace": {
  "lineno": 2846,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LeftCurlyBrace_whitespace_after": {
  "lineno": 2850,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LeftParen": {
  "lineno": 2858,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LeftParen_whitespace_after": {
  "lineno": 2862,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LeftShift": {
  "lineno": 2870,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LeftShiftAssign": {
  "lineno": 2890,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LeftShiftAssign_whitespace_after": {
  "lineno": 2902,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LeftShiftAssign_whitespace_before": {
  "lineno": 2894,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LeftShift_whitespace_after": {
  "lineno": 2882,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LeftShift_whitespace_before": {
  "lineno": 2874,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LeftSquareBracket": {
  "lineno": 2910,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LeftSquareBracket_whitespace_after": {
  "lineno": 2914,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LessThan": {
  "lineno": 2926,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LessThanEqual": {
  "lineno": 2946,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LessThanEqual_whitespace_after": {
  "lineno": 2958,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LessThanEqual_whitespace_before": {
  "lineno": 2950,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LessThan_whitespace_after": {
  "lineno": 2938,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_LessThan_whitespace_before": {
  "lineno": 2930,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_List": {
  "lineno": 2966,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ListComp": {
  "lineno": 3010,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ListComp_elt": {
  "lineno": 3014,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ListComp_for_in": {
  "lineno": 3022,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ListComp_lbracket": {
  "lineno": 3030,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ListComp_lpar": {
  "lineno": 3046,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ListComp_rbracket": {
  "lineno": 3038,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ListComp_rpar": {
  "lineno": 3054,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_List_elements": {
  "lineno": 2970,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_List_lbracket": {
  "lineno": 2978,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_List_lpar": {
  "lineno": 2994,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_List_rbracket": {
  "lineno": 2986,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_List_rpar": {
  "lineno": 3002,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_MatrixMultiply": {
  "lineno": 3062,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_MatrixMultiplyAssign": {
  "lineno": 3082,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_MatrixMultiplyAssign_whitespace_after": {
  "lineno": 3100,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_MatrixMultiplyAssign_whitespace_before": {
  "lineno": 3088,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_MatrixMultiply_whitespace_after": {
  "lineno": 3074,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_MatrixMultiply_whitespace_before": {
  "lineno": 3066,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Minus": {
  "lineno": 3112,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Minus_whitespace_after": {
  "lineno": 3116,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Module": {
  "lineno": 3124,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Module_body": {
  "lineno": 3128,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Module_default_indent": {
  "lineno": 3160,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Module_default_newline": {
  "lineno": 3168,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Module_encoding": {
  "lineno": 3152,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Module_footer": {
  "lineno": 3144,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Module_has_trailing_newline": {
  "lineno": 3176,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Module_header": {
  "lineno": 3136,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Modulo": {
  "lineno": 3184,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ModuloAssign": {
  "lineno": 3204,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ModuloAssign_whitespace_after": {
  "lineno": 3216,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ModuloAssign_whitespace_before": {
  "lineno": 3208,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Modulo_whitespace_after": {
  "lineno": 3196,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Modulo_whitespace_before": {
  "lineno": 3188,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Multiply": {
  "lineno": 3224,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_MultiplyAssign": {
  "lineno": 3244,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_MultiplyAssign_whitespace_after": {
  "lineno": 3256,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_MultiplyAssign_whitespace_before": {
  "lineno": 3248,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Multiply_whitespace_after": {
  "lineno": 3236,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Multiply_whitespace_before": {
  "lineno": 3228,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Name": {
  "lineno": 3264,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NameItem": {
  "lineno": 3292,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NameItem_comma": {
  "lineno": 3304,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NameItem_name": {
  "lineno": 3296,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Name_lpar": {
  "lineno": 3276,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Name_rpar": {
  "lineno": 3284,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Name_value": {
  "lineno": 3268,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NamedExpr": {
  "lineno": 3312,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NamedExpr_lpar": {
  "lineno": 3332,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NamedExpr_rpar": {
  "lineno": 3340,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NamedExpr_target": {
  "lineno": 3316,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NamedExpr_value": {
  "lineno": 3324,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NamedExpr_whitespace_after_walrus": {
  "lineno": 3356,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NamedExpr_whitespace_before_walrus": {
  "lineno": 3348,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Newline": {
  "lineno": 3364,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Newline_value": {
  "lineno": 3368,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Nonlocal": {
  "lineno": 3376,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Nonlocal_names": {
  "lineno": 3380,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Nonlocal_semicolon": {
  "lineno": 3396,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Nonlocal_whitespace_after_nonlocal": {
  "lineno": 3388,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Not": {
  "lineno": 3404,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NotEqual": {
  "lineno": 3416,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NotEqual_value": {
  "lineno": 3420,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NotEqual_whitespace_after": {
  "lineno": 3436,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NotEqual_whitespace_before": {
  "lineno": 3428,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NotIn": {
  "lineno": 3444,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NotIn_whitespace_after": {
  "lineno": 3464,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NotIn_whitespace_before": {
  "lineno": 3448,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_NotIn_whitespace_between": {
  "lineno": 3456,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Not_whitespace_after": {
  "lineno": 3408,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Or": {
  "lineno": 3472,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Or_whitespace_after": {
  "lineno": 3484,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Or_whitespace_before": {
  "lineno": 3476,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Param": {
  "lineno": 3492,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ParamSlash": {
  "lineno": 3560,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ParamSlash_comma": {
  "lineno": 3564,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ParamStar": {
  "lineno": 3572,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ParamStar_comma": {
  "lineno": 3576,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Param_annotation": {
  "lineno": 3504,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Param_comma": {
  "lineno": 3528,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Param_default": {
  "lineno": 3520,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Param_equal": {
  "lineno": 3512,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Param_name": {
  "lineno": 3496,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Param_star": {
  "lineno": 3536,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Param_whitespace_after_param": {
  "lineno": 3552,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Param_whitespace_after_star": {
  "lineno": 3544,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Parameters": {
  "lineno": 3584,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Parameters_kwonly_params": {
  "lineno": 3604,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Parameters_params": {
  "lineno": 3588,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Parameters_posonly_ind": {
  "lineno": 3628,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Parameters_posonly_params": {
  "lineno": 3620,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Parameters_star_arg": {
  "lineno": 3596,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Parameters_star_kwarg": {
  "lineno": 3612,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ParenthesizedWhitespace": {
  "lineno": 3636,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ParenthesizedWhitespace_empty_lines": {
  "lineno": 3654,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ParenthesizedWhitespace_first_line": {
  "lineno": 3642,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ParenthesizedWhitespace_indent": {
  "lineno": 3666,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_ParenthesizedWhitespace_last_line": {
  "lineno": 3678,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Pass": {
  "lineno": 3690,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Pass_semicolon": {
  "lineno": 3694,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Plus": {
  "lineno": 3702,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Plus_whitespace_after": {
  "lineno": 3706,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Power": {
  "lineno": 3714,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_PowerAssign": {
  "lineno": 3734,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_PowerAssign_whitespace_after": {
  "lineno": 3746,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_PowerAssign_whitespace_before": {
  "lineno": 3738,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Power_whitespace_after": {
  "lineno": 3726,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Power_whitespace_before": {
  "lineno": 3718,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Raise": {
  "lineno": 3754,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Raise_cause": {
  "lineno": 3766,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Raise_exc": {
  "lineno": 3758,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Raise_semicolon": {
  "lineno": 3782,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Raise_whitespace_after_raise": {
  "lineno": 3774,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Return": {
  "lineno": 3790,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Return_semicolon": {
  "lineno": 3810,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Return_value": {
  "lineno": 3794,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Return_whitespace_after_return": {
  "lineno": 3802,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_RightCurlyBrace": {
  "lineno": 3818,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_RightCurlyBrace_whitespace_before": {
  "lineno": 3822,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_RightParen": {
  "lineno": 3830,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_RightParen_whitespace_before": {
  "lineno": 3834,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_RightShift": {
  "lineno": 3842,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_RightShiftAssign": {
  "lineno": 3862,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_RightShiftAssign_whitespace_after": {
  "lineno": 3878,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_RightShiftAssign_whitespace_before": {
  "lineno": 3866,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_RightShift_whitespace_after": {
  "lineno": 3854,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_RightShift_whitespace_before": {
  "lineno": 3846,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_RightSquareBracket": {
  "lineno": 3886,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_RightSquareBracket_whitespace_before": {
  "lineno": 3890,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Semicolon": {
  "lineno": 3902,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Semicolon_whitespace_after": {
  "lineno": 3914,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Semicolon_whitespace_before": {
  "lineno": 3906,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Set": {
  "lineno": 3922,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SetComp": {
  "lineno": 3966,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SetComp_elt": {
  "lineno": 3970,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SetComp_for_in": {
  "lineno": 3978,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SetComp_lbrace": {
  "lineno": 3986,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SetComp_lpar": {
  "lineno": 4002,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SetComp_rbrace": {
  "lineno": 3994,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SetComp_rpar": {
  "lineno": 4010,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Set_elements": {
  "lineno": 3926,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Set_lbrace": {
  "lineno": 3934,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Set_lpar": {
  "lineno": 3950,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Set_rbrace": {
  "lineno": 3942,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Set_rpar": {
  "lineno": 3958,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SimpleStatementLine": {
  "lineno": 4018,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SimpleStatementLine_body": {
  "lineno": 4022,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SimpleStatementLine_leading_lines": {
  "lineno": 4030,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SimpleStatementLine_trailing_whitespace": {
  "lineno": 4042,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SimpleStatementSuite": {
  "lineno": 4054,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SimpleStatementSuite_body": {
  "lineno": 4060,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SimpleStatementSuite_leading_whitespace": {
  "lineno": 4068,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SimpleStatementSuite_trailing_whitespace": {
  "lineno": 4080,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SimpleString": {
  "lineno": 4092,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SimpleString_lpar": {
  "lineno": 4104,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SimpleString_rpar": {
  "lineno": 4112,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SimpleString_value": {
  "lineno": 4096,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SimpleWhitespace": {
  "lineno": 4120,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SimpleWhitespace_value": {
  "lineno": 4124,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Slice": {
  "lineno": 4132,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Slice_first_colon": {
  "lineno": 4160,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Slice_lower": {
  "lineno": 4136,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Slice_second_colon": {
  "lineno": 4168,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Slice_step": {
  "lineno": 4152,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Slice_upper": {
  "lineno": 4144,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_StarredDictElement": {
  "lineno": 4176,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_StarredDictElement_comma": {
  "lineno": 4188,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_StarredDictElement_value": {
  "lineno": 4180,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_StarredDictElement_whitespace_before_value": {
  "lineno": 4196,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_StarredElement": {
  "lineno": 4208,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_StarredElement_comma": {
  "lineno": 4220,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_StarredElement_lpar": {
  "lineno": 4228,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_StarredElement_rpar": {
  "lineno": 4236,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_StarredElement_value": {
  "lineno": 4212,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_StarredElement_whitespace_before_value": {
  "lineno": 4244,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Subscript": {
  "lineno": 4256,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SubscriptElement": {
  "lineno": 4316,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SubscriptElement_comma": {
  "lineno": 4328,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SubscriptElement_slice": {
  "lineno": 4320,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Subscript_lbracket": {
  "lineno": 4276,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Subscript_lpar": {
  "lineno": 4292,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Subscript_rbracket": {
  "lineno": 4284,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Subscript_rpar": {
  "lineno": 4300,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Subscript_slice": {
  "lineno": 4268,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Subscript_value": {
  "lineno": 4260,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Subscript_whitespace_after_value": {
  "lineno": 4308,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Subtract": {
  "lineno": 4336,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SubtractAssign": {
  "lineno": 4356,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SubtractAssign_whitespace_after": {
  "lineno": 4368,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_SubtractAssign_whitespace_before": {
  "lineno": 4360,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Subtract_whitespace_after": {
  "lineno": 4348,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Subtract_whitespace_before": {
  "lineno": 4340,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_TrailingWhitespace": {
  "lineno": 4376,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_TrailingWhitespace_comment": {
  "lineno": 4388,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_TrailingWhitespace_newline": {
  "lineno": 4396,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_TrailingWhitespace_whitespace": {
  "lineno": 4380,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Try": {
  "lineno": 4404,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Try_body": {
  "lineno": 4408,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Try_finalbody": {
  "lineno": 4432,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Try_handlers": {
  "lineno": 4416,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Try_leading_lines": {
  "lineno": 4440,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Try_orelse": {
  "lineno": 4424,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Try_whitespace_before_colon": {
  "lineno": 4448,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Tuple": {
  "lineno": 4456,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Tuple_elements": {
  "lineno": 4460,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Tuple_lpar": {
  "lineno": 4468,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Tuple_rpar": {
  "lineno": 4476,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_UnaryOperation": {
  "lineno": 4484,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_UnaryOperation_expression": {
  "lineno": 4496,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_UnaryOperation_lpar": {
  "lineno": 4504,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_UnaryOperation_operator": {
  "lineno": 4488,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_UnaryOperation_rpar": {
  "lineno": 4512,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_While": {
  "lineno": 4520,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_While_body": {
  "lineno": 4532,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_While_leading_lines": {
  "lineno": 4548,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_While_orelse": {
  "lineno": 4540,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_While_test": {
  "lineno": 4524,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_While_whitespace_after_while": {
  "lineno": 4556,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_While_whitespace_before_colon": {
  "lineno": 4564,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_With": {
  "lineno": 4572,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_WithItem": {
  "lineno": 4624,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_WithItem_asname": {
  "lineno": 4636,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_WithItem_comma": {
  "lineno": 4644,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_WithItem_item": {
  "lineno": 4628,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_With_asynchronous": {
  "lineno": 4592,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_With_body": {
  "lineno": 4584,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_With_items": {
  "lineno": 4576,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_With_leading_lines": {
  "lineno": 4600,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_With_whitespace_after_with": {
  "lineno": 4608,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_With_whitespace_before_colon": {
  "lineno": 4616,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Yield": {
  "lineno": 4652,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Yield_lpar": {
  "lineno": 4664,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Yield_rpar": {
  "lineno": 4672,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Yield_value": {
  "lineno": 4656,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedBaseFunctions.visit_Yield_whitespace_after_yield": {
  "lineno": 4680,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions": {
  "lineno": 5267,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Add": {
  "lineno": 5270,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_AddAssign": {
  "lineno": 5274,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_And": {
  "lineno": 5280,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_AnnAssign": {
  "lineno": 5284,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Annotation": {
  "lineno": 5290,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Arg": {
  "lineno": 5296,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_AsName": {
  "lineno": 5302,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Assert": {
  "lineno": 5306,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Assign": {
  "lineno": 5312,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_AssignEqual": {
  "lineno": 5318,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_AssignTarget": {
  "lineno": 5324,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Asynchronous": {
  "lineno": 5330,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Attribute": {
  "lineno": 5336,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_AugAssign": {
  "lineno": 5342,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Await": {
  "lineno": 5348,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_BinaryOperation": {
  "lineno": 5354,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_BitAnd": {
  "lineno": 5360,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_BitAndAssign": {
  "lineno": 5366,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_BitInvert": {
  "lineno": 5372,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_BitOr": {
  "lineno": 5378,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_BitOrAssign": {
  "lineno": 5384,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_BitXor": {
  "lineno": 5390,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_BitXorAssign": {
  "lineno": 5396,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_BooleanOperation": {
  "lineno": 5402,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Break": {
  "lineno": 5408,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Call": {
  "lineno": 5414,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_ClassDef": {
  "lineno": 5420,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Colon": {
  "lineno": 5426,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Comma": {
  "lineno": 5432,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Comment": {
  "lineno": 5438,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_CompFor": {
  "lineno": 5444,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_CompIf": {
  "lineno": 5450,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Comparison": {
  "lineno": 5454,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_ComparisonTarget": {
  "lineno": 5460,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_ConcatenatedString": {
  "lineno": 5466,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Continue": {
  "lineno": 5472,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Decorator": {
  "lineno": 5478,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Del": {
  "lineno": 5484,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Dict": {
  "lineno": 5490,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_DictComp": {
  "lineno": 5496,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_DictElement": {
  "lineno": 5502,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Divide": {
  "lineno": 5508,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_DivideAssign": {
  "lineno": 5514,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Dot": {
  "lineno": 5520,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Element": {
  "lineno": 5526,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Ellipsis": {
  "lineno": 5532,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Else": {
  "lineno": 5538,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_EmptyLine": {
  "lineno": 5542,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Equal": {
  "lineno": 5548,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_ExceptHandler": {
  "lineno": 5554,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Expr": {
  "lineno": 5560,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Finally": {
  "lineno": 5566,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Float": {
  "lineno": 5572,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_FloorDivide": {
  "lineno": 5578,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_FloorDivideAssign": {
  "lineno": 5584,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_For": {
  "lineno": 5590,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_FormattedString": {
  "lineno": 5596,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_FormattedStringExpression": {
  "lineno": 5602,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_FormattedStringText": {
  "lineno": 5610,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_From": {
  "lineno": 5616,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_FunctionDef": {
  "lineno": 5620,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_GeneratorExp": {
  "lineno": 5626,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Global": {
  "lineno": 5632,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_GreaterThan": {
  "lineno": 5638,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_GreaterThanEqual": {
  "lineno": 5644,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_If": {
  "lineno": 5650,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_IfExp": {
  "lineno": 5656,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Imaginary": {
  "lineno": 5662,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Import": {
  "lineno": 5668,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_ImportAlias": {
  "lineno": 5674,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_ImportFrom": {
  "lineno": 5680,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_ImportStar": {
  "lineno": 5686,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_In": {
  "lineno": 5692,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_IndentedBlock": {
  "lineno": 5696,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Index": {
  "lineno": 5702,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Integer": {
  "lineno": 5706,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Is": {
  "lineno": 5712,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_IsNot": {
  "lineno": 5716,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Lambda": {
  "lineno": 5722,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_LeftCurlyBrace": {
  "lineno": 5728,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_LeftParen": {
  "lineno": 5734,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_LeftShift": {
  "lineno": 5740,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_LeftShiftAssign": {
  "lineno": 5746,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_LeftSquareBracket": {
  "lineno": 5752,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_LessThan": {
  "lineno": 5758,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_LessThanEqual": {
  "lineno": 5764,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_List": {
  "lineno": 5770,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_ListComp": {
  "lineno": 5776,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_MatrixMultiply": {
  "lineno": 5782,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_MatrixMultiplyAssign": {
  "lineno": 5788,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Minus": {
  "lineno": 5796,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Module": {
  "lineno": 5802,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Modulo": {
  "lineno": 5806,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_ModuloAssign": {
  "lineno": 5812,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Multiply": {
  "lineno": 5818,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_MultiplyAssign": {
  "lineno": 5824,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Name": {
  "lineno": 5830,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_NameItem": {
  "lineno": 5836,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_NamedExpr": {
  "lineno": 5842,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Newline": {
  "lineno": 5848,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Nonlocal": {
  "lineno": 5854,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Not": {
  "lineno": 5860,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_NotEqual": {
  "lineno": 5864,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_NotIn": {
  "lineno": 5870,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Or": {
  "lineno": 5876,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Param": {
  "lineno": 5880,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_ParamSlash": {
  "lineno": 5886,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_ParamStar": {
  "lineno": 5892,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Parameters": {
  "lineno": 5898,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_ParenthesizedWhitespace": {
  "lineno": 5904,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Pass": {
  "lineno": 5912,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Plus": {
  "lineno": 5918,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Power": {
  "lineno": 5922,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_PowerAssign": {
  "lineno": 5928,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Raise": {
  "lineno": 5934,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Return": {
  "lineno": 5940,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_RightCurlyBrace": {
  "lineno": 5946,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_RightParen": {
  "lineno": 5952,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_RightShift": {
  "lineno": 5958,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_RightShiftAssign": {
  "lineno": 5964,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_RightSquareBracket": {
  "lineno": 5970,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Semicolon": {
  "lineno": 5976,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Set": {
  "lineno": 5982,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_SetComp": {
  "lineno": 5986,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_SimpleStatementLine": {
  "lineno": 5992,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_SimpleStatementSuite": {
  "lineno": 5998,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_SimpleString": {
  "lineno": 6006,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_SimpleWhitespace": {
  "lineno": 6012,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Slice": {
  "lineno": 6018,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_StarredDictElement": {
  "lineno": 6022,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_StarredElement": {
  "lineno": 6028,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Subscript": {
  "lineno": 6034,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_SubscriptElement": {
  "lineno": 6040,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Subtract": {
  "lineno": 6046,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_SubtractAssign": {
  "lineno": 6052,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_TrailingWhitespace": {
  "lineno": 6058,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Try": {
  "lineno": 6064,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Tuple": {
  "lineno": 6070,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_UnaryOperation": {
  "lineno": 6076,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_While": {
  "lineno": 6082,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_With": {
  "lineno": 6088,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_WithItem": {
  "lineno": 6094,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._typed_visitor_base.mark_no_op",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedTransformerFunctions.leave_Yield": {
  "lineno": 6100,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions": {
  "lineno": 4689,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Add": {
  "lineno": 4690,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_AddAssign": {
  "lineno": 4694,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_And": {
  "lineno": 4698,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_AnnAssign": {
  "lineno": 4702,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Annotation": {
  "lineno": 4706,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Arg": {
  "lineno": 4710,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_AsName": {
  "lineno": 4714,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Assert": {
  "lineno": 4718,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Assign": {
  "lineno": 4722,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_AssignEqual": {
  "lineno": 4726,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_AssignTarget": {
  "lineno": 4730,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Asynchronous": {
  "lineno": 4734,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Attribute": {
  "lineno": 4738,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_AugAssign": {
  "lineno": 4742,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Await": {
  "lineno": 4746,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_BinaryOperation": {
  "lineno": 4750,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_BitAnd": {
  "lineno": 4754,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_BitAndAssign": {
  "lineno": 4758,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_BitInvert": {
  "lineno": 4762,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_BitOr": {
  "lineno": 4766,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_BitOrAssign": {
  "lineno": 4770,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_BitXor": {
  "lineno": 4774,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_BitXorAssign": {
  "lineno": 4778,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_BooleanOperation": {
  "lineno": 4782,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Break": {
  "lineno": 4786,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Call": {
  "lineno": 4790,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_ClassDef": {
  "lineno": 4794,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Colon": {
  "lineno": 4798,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Comma": {
  "lineno": 4802,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Comment": {
  "lineno": 4806,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_CompFor": {
  "lineno": 4810,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_CompIf": {
  "lineno": 4814,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Comparison": {
  "lineno": 4818,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_ComparisonTarget": {
  "lineno": 4822,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_ConcatenatedString": {
  "lineno": 4826,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Continue": {
  "lineno": 4830,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Decorator": {
  "lineno": 4834,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Del": {
  "lineno": 4838,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Dict": {
  "lineno": 4842,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_DictComp": {
  "lineno": 4846,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_DictElement": {
  "lineno": 4850,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Divide": {
  "lineno": 4854,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_DivideAssign": {
  "lineno": 4858,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Dot": {
  "lineno": 4862,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Element": {
  "lineno": 4866,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Ellipsis": {
  "lineno": 4870,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Else": {
  "lineno": 4874,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_EmptyLine": {
  "lineno": 4878,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Equal": {
  "lineno": 4882,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_ExceptHandler": {
  "lineno": 4886,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Expr": {
  "lineno": 4890,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Finally": {
  "lineno": 4894,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Float": {
  "lineno": 4898,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_FloorDivide": {
  "lineno": 4902,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_FloorDivideAssign": {
  "lineno": 4906,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_For": {
  "lineno": 4910,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_FormattedString": {
  "lineno": 4914,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_FormattedStringExpression": {
  "lineno": 4918,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_FormattedStringText": {
  "lineno": 4924,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_From": {
  "lineno": 4928,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_FunctionDef": {
  "lineno": 4932,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_GeneratorExp": {
  "lineno": 4936,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Global": {
  "lineno": 4940,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_GreaterThan": {
  "lineno": 4944,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_GreaterThanEqual": {
  "lineno": 4948,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_If": {
  "lineno": 4952,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_IfExp": {
  "lineno": 4956,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Imaginary": {
  "lineno": 4960,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Import": {
  "lineno": 4964,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_ImportAlias": {
  "lineno": 4968,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_ImportFrom": {
  "lineno": 4972,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_ImportStar": {
  "lineno": 4976,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_In": {
  "lineno": 4980,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_IndentedBlock": {
  "lineno": 4984,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Index": {
  "lineno": 4988,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Integer": {
  "lineno": 4992,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Is": {
  "lineno": 4996,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_IsNot": {
  "lineno": 5000,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Lambda": {
  "lineno": 5004,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_LeftCurlyBrace": {
  "lineno": 5008,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_LeftParen": {
  "lineno": 5012,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_LeftShift": {
  "lineno": 5016,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_LeftShiftAssign": {
  "lineno": 5020,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_LeftSquareBracket": {
  "lineno": 5024,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_LessThan": {
  "lineno": 5028,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_LessThanEqual": {
  "lineno": 5032,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_List": {
  "lineno": 5036,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_ListComp": {
  "lineno": 5040,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_MatrixMultiply": {
  "lineno": 5044,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_MatrixMultiplyAssign": {
  "lineno": 5048,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Minus": {
  "lineno": 5052,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Module": {
  "lineno": 5056,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Modulo": {
  "lineno": 5060,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_ModuloAssign": {
  "lineno": 5064,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Multiply": {
  "lineno": 5068,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_MultiplyAssign": {
  "lineno": 5072,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Name": {
  "lineno": 5076,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_NameItem": {
  "lineno": 5080,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_NamedExpr": {
  "lineno": 5084,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Newline": {
  "lineno": 5088,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Nonlocal": {
  "lineno": 5092,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Not": {
  "lineno": 5096,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_NotEqual": {
  "lineno": 5100,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_NotIn": {
  "lineno": 5104,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Or": {
  "lineno": 5108,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Param": {
  "lineno": 5112,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_ParamSlash": {
  "lineno": 5116,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_ParamStar": {
  "lineno": 5120,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Parameters": {
  "lineno": 5124,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_ParenthesizedWhitespace": {
  "lineno": 5128,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Pass": {
  "lineno": 5134,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Plus": {
  "lineno": 5138,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Power": {
  "lineno": 5142,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_PowerAssign": {
  "lineno": 5146,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Raise": {
  "lineno": 5150,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Return": {
  "lineno": 5154,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_RightCurlyBrace": {
  "lineno": 5158,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_RightParen": {
  "lineno": 5162,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_RightShift": {
  "lineno": 5166,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_RightShiftAssign": {
  "lineno": 5170,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_RightSquareBracket": {
  "lineno": 5174,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Semicolon": {
  "lineno": 5178,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Set": {
  "lineno": 5182,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_SetComp": {
  "lineno": 5186,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_SimpleStatementLine": {
  "lineno": 5190,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_SimpleStatementSuite": {
  "lineno": 5194,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_SimpleString": {
  "lineno": 5198,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_SimpleWhitespace": {
  "lineno": 5202,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Slice": {
  "lineno": 5206,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_StarredDictElement": {
  "lineno": 5210,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_StarredElement": {
  "lineno": 5214,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Subscript": {
  "lineno": 5218,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_SubscriptElement": {
  "lineno": 5222,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Subtract": {
  "lineno": 5226,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_SubtractAssign": {
  "lineno": 5230,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_TrailingWhitespace": {
  "lineno": 5234,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Try": {
  "lineno": 5238,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Tuple": {
  "lineno": 5242,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_UnaryOperation": {
  "lineno": 5246,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_While": {
  "lineno": 5250,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_With": {
  "lineno": 5254,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_WithItem": {
  "lineno": 5258,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor.CSTTypedVisitorFunctions.leave_Yield": {
  "lineno": 5262,
  "symbols_in_volume": [
   "libcst._typed_visitor_base.mark_no_op"
  ],
  "type": "function"
 },
 "libcst._typed_visitor_base": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.Callable",
   "typing.TYPE_CHECKING",
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "libcst._typed_visitor_base.mark_no_op": {
  "lineno": 15,
  "symbols_in_volume": [
   "typing.Any",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst._types": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.TYPE_CHECKING",
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "libcst._version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst._visitors": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.TYPE_CHECKING",
   "typing.Union"
  ],
  "type": "module"
 },
 "libcst._visitors.CSTTransformer": {
  "lineno": 22,
  "symbols_in_volume": [
   "libcst._metadata_dependent.MetadataDependent",
   "libcst._typed_visitor.CSTTypedTransformerFunctions"
  ],
  "type": "class"
 },
 "libcst._visitors.CSTTransformer.on_leave": {
  "lineno": 50,
  "symbols_in_volume": [
   "libcst._removal_sentinel.RemovalSentinel",
   "libcst._types.CSTNodeT",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst._visitors.CSTTransformer.on_leave_attribute": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._visitors.CSTTransformer.on_visit": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._visitors.CSTTransformer.on_visit_attribute": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._visitors.CSTVisitor": {
  "lineno": 102,
  "symbols_in_volume": [
   "libcst._metadata_dependent.MetadataDependent",
   "libcst._typed_visitor.CSTTypedVisitorFunctions"
  ],
  "type": "class"
 },
 "libcst._visitors.CSTVisitor.on_leave": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._visitors.CSTVisitor.on_leave_attribute": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._visitors.CSTVisitor.on_visit": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst._visitors.CSTVisitor.on_visit_attribute": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codegen": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codegen.gather": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.defaultdict",
   "dataclasses.fields",
   "inspect.getmro",
   "libcst.CSTNode",
   "typing.Dict",
   "typing.List",
   "typing.Mapping",
   "typing.Sequence",
   "typing.Set",
   "typing.Type"
  ],
  "type": "module"
 },
 "libcst.codegen.gather.Usage": {
  "lineno": 79,
  "symbols_in_volume": [
   "dataclasses.dataclass"
  ],
  "type": "class"
 },
 "libcst.codegen.gather._calc_node_usage": {
  "lineno": 124,
  "symbols_in_volume": [
   "dataclasses.replace"
  ],
  "type": "function"
 },
 "libcst.codegen.gather._get_args": {
  "lineno": 106,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.codegen.gather._get_bases": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst",
   "libcst.CSTNode",
   "typing.Generator",
   "typing.Type"
  ],
  "type": "function"
 },
 "libcst.codegen.gather._get_most_generic_base_for_node": {
  "lineno": 66,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "typing.Type"
  ],
  "type": "function"
 },
 "libcst.codegen.gather._get_nodes": {
  "lineno": 34,
  "symbols_in_volume": [
   "libcst",
   "libcst.CSTNode",
   "typing.Generator",
   "typing.Type"
  ],
  "type": "function"
 },
 "libcst.codegen.gather._get_origin": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codegen.gather._is_maybe": {
  "lineno": 89,
  "symbols_in_volume": [
   "libcst.MaybeSentinel"
  ],
  "type": "function"
 },
 "libcst.codegen.gather._is_sequence": {
  "lineno": 115,
  "symbols_in_volume": [
   "collections.abc.Sequence",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst.codegen.gather._is_union": {
  "lineno": 120,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes": {
  "lineno": null,
  "symbols_in_volume": [
   "libcst",
   "libcst.codegen.gather.all_libcst_nodes",
   "libcst.codegen.gather.typeclasses",
   "typing.List",
   "typing.Set"
  ],
  "type": "module"
 },
 "libcst.codegen.gen_matcher_classes.AddLogicMatchersToUnions": {
  "lineno": 159,
  "symbols_in_volume": [
   "libcst.CSTTransformer"
  ],
  "type": "class"
 },
 "libcst.codegen.gen_matcher_classes.AddLogicMatchersToUnions.leave_Subscript": {
  "lineno": 160,
  "symbols_in_volume": [
   "libcst.Index",
   "libcst.Name",
   "libcst.Subscript",
   "libcst.SubscriptElement"
  ],
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes.AddWildcardsToSequenceUnions": {
  "lineno": 182,
  "symbols_in_volume": [
   "libcst.CSTTransformer"
  ],
  "type": "class"
 },
 "libcst.codegen.gen_matcher_classes.AddWildcardsToSequenceUnions.__init__": {
  "lineno": 183,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Subscript",
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes.AddWildcardsToSequenceUnions.leave_Subscript": {
  "lineno": 210,
  "symbols_in_volume": [
   "libcst.Index",
   "libcst.Subscript",
   "libcst.SubscriptElement"
  ],
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes.AddWildcardsToSequenceUnions.visit_Subscript": {
  "lineno": 188,
  "symbols_in_volume": [
   "libcst.Index",
   "libcst.Name",
   "libcst.Subscript"
  ],
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes.Alias": {
  "lineno": 267,
  "symbols_in_volume": [
   "dataclasses.dataclass"
  ],
  "type": "class"
 },
 "libcst.codegen.gen_matcher_classes.CleanseFullTypeNames": {
  "lineno": 17,
  "symbols_in_volume": [
   "libcst.CSTTransformer"
  ],
  "type": "class"
 },
 "libcst.codegen.gen_matcher_classes.CleanseFullTypeNames.leave_Attribute": {
  "lineno": 29,
  "symbols_in_volume": [
   "libcst.Attribute",
   "libcst.Name",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes.CleanseFullTypeNames.leave_Call": {
  "lineno": 18,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.Call",
   "libcst.Name"
  ],
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes.CleanseFullTypeNames.leave_Name": {
  "lineno": 35,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.SimpleString",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes.CleanseFullTypeNames.leave_SubscriptElement": {
  "lineno": 48,
  "symbols_in_volume": [
   "libcst.Index",
   "libcst.MaybeSentinel.DEFAULT",
   "libcst.Name",
   "libcst.RemovalSentinel",
   "libcst.RemoveFromParent",
   "libcst.SubscriptElement",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes.Field": {
  "lineno": 273,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "typing.List"
  ],
  "type": "class"
 },
 "libcst.codegen.gen_matcher_classes.MatcherClassToLibCSTClass": {
  "lineno": 91,
  "symbols_in_volume": [
   "libcst.CSTTransformer"
  ],
  "type": "class"
 },
 "libcst.codegen.gen_matcher_classes.MatcherClassToLibCSTClass.leave_SimpleString": {
  "lineno": 92,
  "symbols_in_volume": [
   "libcst.Attribute",
   "libcst.Name",
   "libcst.SimpleString",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes.RemoveTypesFromGeneric": {
  "lineno": 62,
  "symbols_in_volume": [
   "libcst.CSTTransformer"
  ],
  "type": "class"
 },
 "libcst.codegen.gen_matcher_classes.RemoveTypesFromGeneric.__init__": {
  "lineno": 63,
  "symbols_in_volume": [
   "typing.Sequence",
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes.RemoveTypesFromGeneric.leave_SubscriptElement": {
  "lineno": 66,
  "symbols_in_volume": [
   "libcst.Index",
   "libcst.Name",
   "libcst.RemovalSentinel",
   "libcst.RemoveFromParent",
   "libcst.SubscriptElement",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes._add_generic": {
  "lineno": 155,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.Index",
   "libcst.Name",
   "libcst.Subscript",
   "libcst.SubscriptElement"
  ],
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes._convert_match_nodes_to_cst_nodes": {
  "lineno": 101,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.ensure_type"
  ],
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes._get_alias_name": {
  "lineno": 293,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Name",
   "libcst.SimpleString",
   "libcst.Subscript",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes._get_clean_type_and_aliases": {
  "lineno": 389,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Module",
   "libcst.Name",
   "libcst.SimpleString",
   "libcst.Subscript",
   "libcst.ensure_type",
   "libcst.parse_expression",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes._get_clean_type_from_expression": {
  "lineno": 319,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes._get_clean_type_from_subscript": {
  "lineno": 357,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.Index",
   "libcst.Name",
   "libcst.SimpleString",
   "libcst.Subscript",
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes._get_clean_type_from_union": {
  "lineno": 343,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.Subscript",
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes._get_do_not_care": {
  "lineno": 231,
  "symbols_in_volume": [
   "libcst.Index",
   "libcst.Name",
   "libcst.SubscriptElement"
  ],
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes._get_fields": {
  "lineno": 430,
  "symbols_in_volume": [
   "dataclasses.fields",
   "libcst.CSTNode",
   "typing.Generator",
   "typing.Type"
  ],
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes._get_match_if_true": {
  "lineno": 111,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.Element",
   "libcst.Index",
   "libcst.List",
   "libcst.Name",
   "libcst.Subscript",
   "libcst.SubscriptElement"
  ],
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes._get_match_metadata": {
  "lineno": 239,
  "symbols_in_volume": [
   "libcst.Index",
   "libcst.Name",
   "libcst.SubscriptElement"
  ],
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes._get_raw_name": {
  "lineno": 280,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Index",
   "libcst.Name",
   "libcst.SimpleString",
   "libcst.SubscriptElement",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes._get_wrapped_union_type": {
  "lineno": 247,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.Index",
   "libcst.Name",
   "libcst.Subscript",
   "libcst.SubscriptElement"
  ],
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes._maybe_fix_sequence_in_union": {
  "lineno": 329,
  "symbols_in_volume": [
   "libcst.Index",
   "libcst.Subscript",
   "libcst.SubscriptElement",
   "libcst.ensure_type",
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes._remove_types": {
  "lineno": 79,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.ensure_type",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst.codegen.gen_matcher_classes._wrap_clean_type": {
  "lineno": 306,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.Module",
   "libcst.Name",
   "libcst.Subscript",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.codegen.gen_type_mapping": {
  "lineno": null,
  "symbols_in_volume": [
   "libcst.codegen.gather.imports.items",
   "libcst.codegen.gather.nodebases",
   "libcst.codegen.gather.nodebases.__name__",
   "libcst.codegen.gather.nodebases.keys",
   "libcst.codegen.gather.nodeuses",
   "typing.List"
  ],
  "type": "module"
 },
 "libcst.codegen.gen_visitor_functions": {
  "lineno": null,
  "symbols_in_volume": [
   "dataclasses.fields",
   "libcst.codegen.gather.imports.items",
   "libcst.codegen.gather.nodebases",
   "libcst.codegen.gather.nodebases.__name__",
   "libcst.codegen.gather.nodebases.keys",
   "libcst.codegen.gather.nodeuses",
   "typing.List"
  ],
  "type": "module"
 },
 "libcst.codegen.generate": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.argv",
   "sys.exit"
  ],
  "type": "module"
 },
 "libcst.codegen.generate.clean_generated_code": {
  "lineno": 35,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.codegen.transforms.DoubleQuoteForwardRefsTransformer",
   "libcst.codegen.transforms.SimplifyUnionsTransformer",
   "libcst.ensure_type",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.codegen.generate.codegen_matchers": {
  "lineno": 101,
  "symbols_in_volume": [
   "libcst.codegen.gen_matcher_classes.generated_code",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "libcst.codegen.generate.codegen_return_types": {
  "lineno": 123,
  "symbols_in_volume": [
   "libcst.codegen.gen_type_mapping.generated_code",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "libcst.codegen.generate.codegen_visitors": {
  "lineno": 47,
  "symbols_in_volume": [
   "libcst.codegen.gen_visitor_functions.generated_code",
   "os.devnull",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join",
   "os.remove",
   "os.rename",
   "shutil.copyfile",
   "subprocess.check_call",
   "sys.stderr"
  ],
  "type": "function"
 },
 "libcst.codegen.generate.format_file": {
  "lineno": 27,
  "symbols_in_volume": [
   "os.devnull",
   "subprocess.check_call"
  ],
  "type": "function"
 },
 "libcst.codegen.generate.main": {
  "lineno": 145,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.codegen.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codegen.tests.test_codegen_clean": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codegen.tests.test_codegen_clean.TestCodegenClean": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.codegen.tests.test_codegen_clean.TestCodegenClean.test_codegen_clean_matcher_classes": {
  "lineno": 51,
  "symbols_in_volume": [
   "libcst.codegen.gen_matcher_classes.generated_code",
   "libcst.codegen.generate.clean_generated_code",
   "libcst.codegen.generate.format_file",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join",
   "os.remove"
  ],
  "type": "function"
 },
 "libcst.codegen.tests.test_codegen_clean.TestCodegenClean.test_codegen_clean_return_types": {
  "lineno": 85,
  "symbols_in_volume": [
   "libcst.codegen.gen_type_mapping.generated_code",
   "libcst.codegen.generate.clean_generated_code",
   "libcst.codegen.generate.format_file",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join",
   "os.remove"
  ],
  "type": "function"
 },
 "libcst.codegen.tests.test_codegen_clean.TestCodegenClean.test_codegen_clean_visitor_functions": {
  "lineno": 17,
  "symbols_in_volume": [
   "libcst.codegen.gen_visitor_functions.generated_code",
   "libcst.codegen.generate.clean_generated_code",
   "libcst.codegen.generate.format_file",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join",
   "os.remove"
  ],
  "type": "function"
 },
 "libcst.codegen.transforms": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codegen.transforms.DoubleQuoteForwardRefsTransformer": {
  "lineno": 32,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.codegen.transforms.DoubleQuoteForwardRefsTransformer.leave_SimpleString": {
  "lineno": 33,
  "symbols_in_volume": [
   "ast.literal_eval",
   "libcst.SimpleString",
   "libcst.matchers.Annotation",
   "libcst.matchers.call_if_inside"
  ],
  "type": "function"
 },
 "libcst.codegen.transforms.SimplifyUnionsTransformer": {
  "lineno": 21,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.codegen.transforms.SimplifyUnionsTransformer._leave_union": {
  "lineno": 22,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.Index",
   "libcst.Subscript",
   "libcst.ensure_type",
   "libcst.matchers.Name",
   "libcst.matchers.Subscript",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.codemod": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod._cli": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod._cli.ParallelExecResult": {
  "lineno": 216,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.codemod._runner.TransformResult"
  ],
  "type": "class"
 },
 "libcst.codemod._cli.ParallelTransformResult": {
  "lineno": 513,
  "symbols_in_volume": [
   "dataclasses.dataclass"
  ],
  "type": "class"
 },
 "libcst.codemod._cli.Progress": {
  "lineno": 403,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.codemod._cli.Progress.__init__": {
  "lineno": 406,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "libcst.codemod._cli.Progress._human_seconds": {
  "lineno": 428,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod._cli.Progress.clear": {
  "lineno": 459,
  "symbols_in_volume": [
   "sys.stderr"
  ],
  "type": "function"
 },
 "libcst.codemod._cli.Progress.estimate_completion": {
  "lineno": 443,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod._cli.Progress.print": {
  "lineno": 415,
  "symbols_in_volume": [
   "sys.stderr",
   "time.time"
  ],
  "type": "function"
 },
 "libcst.codemod._cli._calculate_module": {
  "lineno": 187,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.codemod._cli._parallel_exec_process_stub": {
  "lineno": 226,
  "symbols_in_volume": [
   "dataclasses.replace",
   "libcst.PartialParserConfig",
   "libcst.codemod._codemod.Codemod",
   "libcst.codemod._runner.SkipFile",
   "libcst.codemod._runner.SkipReason.BLACKLISTED",
   "libcst.codemod._runner.SkipReason.GENERATED",
   "libcst.codemod._runner.SkipReason.OTHER",
   "libcst.codemod._runner.TransformExit",
   "libcst.codemod._runner.TransformFailure",
   "libcst.codemod._runner.TransformSkip",
   "libcst.codemod._runner.TransformSuccess",
   "libcst.parse_module",
   "re.fullmatch",
   "traceback.format_exc",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst.codemod._cli._print_parallel_result": {
  "lineno": 465,
  "symbols_in_volume": [
   "libcst.codemod._runner.SkipReason.BLACKLISTED",
   "libcst.codemod._runner.SkipReason.GENERATED",
   "libcst.codemod._runner.TransformFailure",
   "libcst.codemod._runner.TransformSkip",
   "libcst.codemod._runner.TransformSuccess",
   "sys.stderr"
  ],
  "type": "function"
 },
 "libcst.codemod._cli.diff_code": {
  "lineno": 99,
  "symbols_in_volume": [
   "difflib.unified_diff",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.codemod._cli.exec_transform_with_prettyprint": {
  "lineno": 131,
  "symbols_in_volume": [
   "libcst.codemod._codemod.Codemod",
   "libcst.codemod._runner.TransformExit",
   "libcst.codemod._runner.TransformFailure",
   "libcst.codemod._runner.TransformSkip",
   "libcst.codemod._runner.transform_module",
   "sys.stderr",
   "traceback.format_exc",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst.codemod._cli.gather_files": {
  "lineno": 77,
  "symbols_in_volume": [
   "pathlib.Path",
   "typing.List",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst.codemod._cli.invoke_formatter": {
  "lineno": 41,
  "symbols_in_volume": [
   "subprocess.check_output",
   "typing.AnyStr",
   "typing.Sequence",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.codemod._cli.parallel_exec_transform_with_prettyprint": {
  "lineno": 535,
  "symbols_in_volume": [
   "dataclasses.replace",
   "libcst.PartialParserConfig",
   "libcst.codemod._codemod.Codemod",
   "libcst.codemod._runner.TransformExit",
   "libcst.codemod._runner.TransformFailure",
   "libcst.codemod._runner.TransformSkip",
   "libcst.codemod._runner.TransformSuccess",
   "libcst.metadata.FullRepoManager",
   "libcst.parse_module",
   "multiprocessing.Process",
   "multiprocessing.Queue",
   "multiprocessing.cpu_count",
   "queue.Empty",
   "sys.stderr",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Sequence",
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst.codemod._cli.print_execution_result": {
  "lineno": 66,
  "symbols_in_volume": [
   "libcst.codemod._runner.TransformFailure",
   "libcst.codemod._runner.TransformResult",
   "subprocess.CalledProcessError",
   "sys.stderr"
  ],
  "type": "function"
 },
 "libcst.codemod._codemod": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod._codemod.Codemod": {
  "lineno": 15,
  "symbols_in_volume": [
   "abc.ABC",
   "libcst.MetadataDependent"
  ],
  "type": "class"
 },
 "libcst.codemod._codemod.Codemod.__init__": {
  "lineno": 30,
  "symbols_in_volume": [
   "libcst.MetadataDependent.__init__",
   "libcst.codemod._context.CodemodContext"
  ],
  "type": "function"
 },
 "libcst.codemod._codemod.Codemod._handle_metadata_reference": {
  "lineno": 74,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "dataclasses.replace",
   "libcst.MetadataWrapper",
   "libcst.Module",
   "typing.Generator"
  ],
  "type": "function"
 },
 "libcst.codemod._codemod.Codemod.module": {
  "lineno": 48,
  "symbols_in_volume": [
   "libcst.Module"
  ],
  "type": "function"
 },
 "libcst.codemod._codemod.Codemod.should_allow_multiple_passes": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod._codemod.Codemod.transform_module": {
  "lineno": 98,
  "symbols_in_volume": [
   "libcst.Module"
  ],
  "type": "function"
 },
 "libcst.codemod._codemod.Codemod.transform_module_impl": {
  "lineno": 65,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "libcst.Module"
  ],
  "type": "function"
 },
 "libcst.codemod._codemod.Codemod.warn": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod._command": {
  "lineno": null,
  "symbols_in_volume": [
   "libcst.codemod._codemod.Codemod",
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "libcst.codemod._command.CodemodCommand": {
  "lineno": 22,
  "symbols_in_volume": [
   "abc.ABC",
   "libcst.codemod._codemod.Codemod"
  ],
  "type": "class"
 },
 "libcst.codemod._command.CodemodCommand._instantiate_and_run": {
  "lineno": 56,
  "symbols_in_volume": [
   "libcst.Module",
   "typing.Type"
  ],
  "type": "function"
 },
 "libcst.codemod._command.CodemodCommand.add_args": {
  "lineno": 43,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "function"
 },
 "libcst.codemod._command.CodemodCommand.transform_module": {
  "lineno": 69,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.codemod._codemod.Codemod",
   "libcst.codemod.visitors._add_imports.AddImportsVisitor",
   "libcst.codemod.visitors._add_imports.AddImportsVisitor.CONTEXT_KEY",
   "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor",
   "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor.CONTEXT_KEY",
   "typing.Dict",
   "typing.Type"
  ],
  "type": "function"
 },
 "libcst.codemod._command.CodemodCommand.transform_module_impl": {
  "lineno": 60,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "libcst.Module"
  ],
  "type": "function"
 },
 "libcst.codemod._command.MagicArgsCodemodCommand": {
  "lineno": 106,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst.codemod._command.MagicArgsCodemodCommand.__init__": {
  "lineno": 121,
  "symbols_in_volume": [
   "libcst.codemod._context.CodemodContext",
   "typing.Dict"
  ],
  "type": "function"
 },
 "libcst.codemod._command.MagicArgsCodemodCommand._instantiate": {
  "lineno": 141,
  "symbols_in_volume": [
   "inspect.getfullargspec",
   "libcst.codemod._codemod.Codemod",
   "typing.Dict",
   "typing.List",
   "typing.Type"
  ],
  "type": "function"
 },
 "libcst.codemod._command.MagicArgsCodemodCommand.get_transforms": {
  "lineno": 125,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "libcst.codemod._codemod.Codemod",
   "typing.Generator",
   "typing.Type"
  ],
  "type": "function"
 },
 "libcst.codemod._command.MagicArgsCodemodCommand.transform_module_impl": {
  "lineno": 179,
  "symbols_in_volume": [
   "libcst.Module"
  ],
  "type": "function"
 },
 "libcst.codemod._command.VisitorBasedCodemodCommand": {
  "lineno": 94,
  "symbols_in_volume": [
   "abc.ABC",
   "libcst.codemod._visitor.ContextAwareTransformer"
  ],
  "type": "class"
 },
 "libcst.codemod._context": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod._context.CodemodContext": {
  "lineno": 13,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "dataclasses.field",
   "libcst.MetadataWrapper",
   "libcst.metadata.FullRepoManager",
   "typing.Any",
   "typing.Dict",
   "typing.List",
   "typing.Optional"
  ],
  "type": "class"
 },
 "libcst.codemod._context.CodemodContext.module": {
  "lineno": 56,
  "symbols_in_volume": [
   "libcst.Module",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.codemod._runner": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "module"
 },
 "libcst.codemod._runner.SkipFile": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.codemod._runner.SkipReason": {
  "lineno": 68,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "libcst.codemod._runner.TransformExit": {
  "lineno": 56,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst.codemod._runner.TransformFailure": {
  "lineno": 39,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst.codemod._runner.TransformSkip": {
  "lineno": 86,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst.codemod._runner.TransformSuccess": {
  "lineno": 24,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst.codemod._runner.transform_module": {
  "lineno": 117,
  "symbols_in_volume": [
   "libcst.PartialParserConfig",
   "libcst.codemod._codemod.Codemod",
   "libcst.parse_module",
   "traceback.format_exc",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.codemod._testing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod._testing.CodemodTest": {
  "lineno": 130,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.codemod._testing._CodemodTest": {
  "lineno": 19,
  "symbols_in_volume": [
   "libcst.codemod._codemod.Codemod",
   "typing.Type"
  ],
  "type": "class"
 },
 "libcst.codemod._testing._CodemodTest.assertCodeEqual": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod._testing._CodemodTest.assertCodemod": {
  "lineno": 73,
  "symbols_in_volume": [
   "libcst.PartialParserConfig",
   "libcst.codemod._context.CodemodContext",
   "libcst.codemod._runner.SkipFile",
   "libcst.parse_module",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst.codemod._testing._CodemodTest.make_fixture_data": {
  "lineno": 29,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst.codemod._testing._CodemodTest.make_fixture_data.filter_line": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod._visitor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod._visitor.ContextAwareTransformer": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.codemod._codemod.Codemod",
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.codemod._visitor.ContextAwareTransformer.__init__": {
  "lineno": 27,
  "symbols_in_volume": [
   "libcst.codemod._codemod.Codemod.__init__",
   "libcst.codemod._context.CodemodContext",
   "libcst.matchers.MatcherDecoratableTransformer.__init__"
  ],
  "type": "function"
 },
 "libcst.codemod._visitor.ContextAwareTransformer.transform_module_impl": {
  "lineno": 31,
  "symbols_in_volume": [
   "libcst.Module"
  ],
  "type": "function"
 },
 "libcst.codemod._visitor.ContextAwareVisitor": {
  "lineno": 35,
  "symbols_in_volume": [
   "libcst.MetadataDependent",
   "libcst.matchers.MatcherDecoratableVisitor"
  ],
  "type": "class"
 },
 "libcst.codemod._visitor.ContextAwareVisitor.__init__": {
  "lineno": 63,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.MetadataDependent.__init__",
   "libcst.codemod._context.CodemodContext",
   "libcst.matchers.MatcherDecoratableVisitor.__init__",
   "libcst.metadata.ProviderT",
   "typing.Mapping"
  ],
  "type": "function"
 },
 "libcst.codemod._visitor.ContextAwareVisitor.module": {
  "lineno": 96,
  "symbols_in_volume": [
   "libcst.Module"
  ],
  "type": "function"
 },
 "libcst.codemod._visitor.ContextAwareVisitor.warn": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.commands.add_pyre_directive": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.commands.add_pyre_directive.AddPyreDirectiveCommand": {
  "lineno": 15,
  "symbols_in_volume": [
   "abc.ABC",
   "libcst.codemod.VisitorBasedCodemodCommand"
  ],
  "type": "class"
 },
 "libcst.codemod.commands.add_pyre_directive.AddPyreDirectiveCommand.__init__": {
  "lineno": 18,
  "symbols_in_volume": [
   "libcst.codemod.CodemodContext",
   "re.compile",
   "typing.Pattern"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.add_pyre_directive.AddPyreDirectiveCommand.leave_Module": {
  "lineno": 29,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.helpers.insert_header_comments"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.add_pyre_directive.AddPyreDirectiveCommand.visit_Comment": {
  "lineno": 25,
  "symbols_in_volume": [
   "libcst.Comment"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.add_pyre_directive.AddPyreStrictCommand": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.codemod.commands.add_pyre_directive.AddPyreUnsafeCommand": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.codemod.commands.convert_format_to_fstring": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.commands.convert_format_to_fstring.ConvertFormatStringCommand": {
  "lineno": 221,
  "symbols_in_volume": [
   "libcst.codemod.VisitorBasedCodemodCommand"
  ],
  "type": "class"
 },
 "libcst.codemod.commands.convert_format_to_fstring.ConvertFormatStringCommand.__init__": {
  "lineno": 246,
  "symbols_in_volume": [
   "libcst.codemod.CodemodContext"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.convert_format_to_fstring.ConvertFormatStringCommand._convert_token_to_fstring_expression": {
  "lineno": 347,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.BaseExpression",
   "libcst.FormattedStringExpression",
   "libcst.LeftParen",
   "libcst.RightParen",
   "libcst.SimpleString",
   "libcst.ensure_type",
   "libcst.matchers.Await",
   "libcst.matchers.Comment",
   "libcst.matchers.FormattedString",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.convert_format_to_fstring.ConvertFormatStringCommand.add_args": {
  "lineno": 225,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.convert_format_to_fstring.ConvertFormatStringCommand.leave_Call": {
  "lineno": 256,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.BaseFormattedStringContent",
   "libcst.Call",
   "libcst.FormattedString",
   "libcst.FormattedStringText",
   "libcst.SimpleString",
   "libcst.ensure_type",
   "libcst.matchers.Attribute",
   "libcst.matchers.Call",
   "libcst.matchers.Name",
   "libcst.matchers.SaveMatchedNode",
   "libcst.matchers.SimpleString",
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.convert_format_to_fstring.StringQuoteGatherer": {
  "lineno": 169,
  "symbols_in_volume": [
   "libcst.codemod.ContextAwareVisitor"
  ],
  "type": "class"
 },
 "libcst.codemod.commands.convert_format_to_fstring.StringQuoteGatherer.__init__": {
  "lineno": 170,
  "symbols_in_volume": [
   "libcst.codemod.CodemodContext",
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.convert_format_to_fstring.StringQuoteGatherer.visit_SimpleString": {
  "lineno": 174,
  "symbols_in_volume": [
   "libcst.SimpleString"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.convert_format_to_fstring.StripNewlinesTransformer": {
  "lineno": 178,
  "symbols_in_volume": [
   "libcst.codemod.ContextAwareTransformer"
  ],
  "type": "class"
 },
 "libcst.codemod.commands.convert_format_to_fstring.StripNewlinesTransformer.leave_ParenthesizedWhitespace": {
  "lineno": 179,
  "symbols_in_volume": [
   "libcst.ParenthesizedWhitespace",
   "libcst.SimpleWhitespace"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.convert_format_to_fstring.SwitchStringQuotesTransformer": {
  "lineno": 187,
  "symbols_in_volume": [
   "libcst.codemod.ContextAwareTransformer"
  ],
  "type": "class"
 },
 "libcst.codemod.commands.convert_format_to_fstring.SwitchStringQuotesTransformer.__init__": {
  "lineno": 188,
  "symbols_in_volume": [
   "libcst.codemod.CodemodContext"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.convert_format_to_fstring.SwitchStringQuotesTransformer.leave_SimpleString": {
  "lineno": 195,
  "symbols_in_volume": [
   "ast.literal_eval",
   "libcst.SimpleString"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.convert_format_to_fstring._find_expr_from_field_name": {
  "lineno": 29,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.BaseExpression",
   "libcst.Integer",
   "libcst.Name",
   "libcst.parse_expression",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.convert_format_to_fstring._get_field": {
  "lineno": 70,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.convert_format_to_fstring._get_lhs": {
  "lineno": 20,
  "symbols_in_volume": [
   "libcst.Attribute",
   "libcst.BaseExpression",
   "libcst.Integer",
   "libcst.Name",
   "libcst.Subscript"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.convert_format_to_fstring._get_tokens": {
  "lineno": 94,
  "symbols_in_volume": [
   "typing.Generator",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.convert_namedtuple_to_dataclass": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.commands.convert_namedtuple_to_dataclass.ConvertNamedTupleToDataclassCommand": {
  "lineno": 19,
  "symbols_in_volume": [
   "libcst.codemod.VisitorBasedCodemodCommand",
   "libcst.metadata.ProviderT",
   "libcst.metadata.QualifiedName",
   "libcst.metadata.QualifiedNameProvider",
   "libcst.metadata.QualifiedNameSource.IMPORT",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst.codemod.commands.convert_namedtuple_to_dataclass.ConvertNamedTupleToDataclassCommand.leave_ClassDef": {
  "lineno": 36,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.Call",
   "libcst.ClassDef",
   "libcst.Decorator",
   "libcst.MaybeSentinel.DEFAULT",
   "libcst.codemod.visitors.AddImportsVisitor.add_needed_import",
   "libcst.codemod.visitors.RemoveImportsVisitor.remove_unused_import_by_node",
   "libcst.ensure_type",
   "libcst.metadata.QualifiedNameProvider.has_name",
   "libcst.parse_expression",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.convert_percent_format_to_fstring": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.commands.convert_percent_format_to_fstring.ConvertPercentFormatStringCommand": {
  "lineno": 67,
  "symbols_in_volume": [
   "libcst.codemod.VisitorBasedCodemodCommand"
  ],
  "type": "class"
 },
 "libcst.codemod.commands.convert_percent_format_to_fstring.ConvertPercentFormatStringCommand.leave_BinaryOperation": {
  "lineno": 70,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.BinaryOperation",
   "libcst.FormattedString",
   "libcst.FormattedStringExpression",
   "libcst.FormattedStringText",
   "libcst.SimpleString",
   "libcst.Tuple",
   "libcst.ensure_type",
   "libcst.matchers.BinaryOperation",
   "libcst.matchers.MatchIfTrue",
   "libcst.matchers.Modulo",
   "libcst.matchers.SaveMatchedNode",
   "libcst.matchers.extract",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.convert_percent_format_to_fstring.EscapeStringQuote": {
  "lineno": 41,
  "symbols_in_volume": [
   "libcst.CSTTransformer"
  ],
  "type": "class"
 },
 "libcst.codemod.commands.convert_percent_format_to_fstring.EscapeStringQuote.__init__": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.convert_percent_format_to_fstring.EscapeStringQuote.leave_SimpleString": {
  "lineno": 46,
  "symbols_in_volume": [
   "libcst.SimpleString"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.convert_percent_format_to_fstring._gen_match_simple_expression": {
  "lineno": 24,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Module",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.convert_percent_format_to_fstring._gen_match_simple_expression._match_simple_expression": {
  "lineno": 25,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Tuple"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.convert_percent_format_to_fstring._match_simple_string": {
  "lineno": 17,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.SimpleString",
   "re.fullmatch"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.ensure_import_present": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.commands.ensure_import_present.EnsureImportPresentCommand": {
  "lineno": 13,
  "symbols_in_volume": [
   "libcst.codemod.MagicArgsCodemodCommand"
  ],
  "type": "class"
 },
 "libcst.codemod.commands.ensure_import_present.EnsureImportPresentCommand.add_args": {
  "lineno": 20,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.ensure_import_present.EnsureImportPresentCommand.get_transforms": {
  "lineno": 53,
  "symbols_in_volume": [
   "libcst.codemod.Codemod",
   "libcst.codemod.visitors.AddImportsVisitor",
   "libcst.codemod.visitors.AddImportsVisitor.add_needed_import",
   "typing.Generator",
   "typing.Type"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.fix_pyre_directives": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.commands.fix_pyre_directives.FixPyreDirectivesCommand": {
  "lineno": 14,
  "symbols_in_volume": [
   "libcst.codemod.VisitorBasedCodemodCommand",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst.codemod.commands.fix_pyre_directives.FixPyreDirectivesCommand.__init__": {
  "lineno": 24,
  "symbols_in_volume": [
   "libcst.codemod.CodemodContext",
   "typing.Dict"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.fix_pyre_directives.FixPyreDirectivesCommand.leave_EmptyLine": {
  "lineno": 40,
  "symbols_in_volume": [
   "libcst.Comment",
   "libcst.EmptyLine",
   "libcst.RemovalSentinel",
   "libcst.RemoveFromParent",
   "libcst.matchers.Comment",
   "libcst.matchers.EmptyLine",
   "libcst.matchers.matches",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.fix_pyre_directives.FixPyreDirectivesCommand.leave_Module": {
  "lineno": 84,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.helpers.insert_header_comments"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.fix_pyre_directives.FixPyreDirectivesCommand.leave_Module_header": {
  "lineno": 35,
  "symbols_in_volume": [
   "libcst.Module"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.fix_pyre_directives.FixPyreDirectivesCommand.visit_Module_header": {
  "lineno": 30,
  "symbols_in_volume": [
   "libcst.Module"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.noop": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.commands.noop.NOOPCommand": {
  "lineno": 10,
  "symbols_in_volume": [
   "libcst.codemod.CodemodCommand"
  ],
  "type": "class"
 },
 "libcst.codemod.commands.noop.NOOPCommand.transform_module_impl": {
  "lineno": 13,
  "symbols_in_volume": [
   "libcst.Module"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.remove_pyre_directive": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.commands.remove_pyre_directive.RemovePyreDirectiveCommand": {
  "lineno": 14,
  "symbols_in_volume": [
   "abc.ABC",
   "libcst.codemod.VisitorBasedCodemodCommand"
  ],
  "type": "class"
 },
 "libcst.codemod.commands.remove_pyre_directive.RemovePyreDirectiveCommand.__init__": {
  "lineno": 17,
  "symbols_in_volume": [
   "libcst.codemod.CodemodContext",
   "re.compile",
   "typing.Pattern"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.remove_pyre_directive.RemovePyreDirectiveCommand.leave_EmptyLine": {
  "lineno": 23,
  "symbols_in_volume": [
   "libcst.Comment",
   "libcst.EmptyLine",
   "libcst.RemovalSentinel",
   "libcst.RemoveFromParent",
   "libcst.ensure_type",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.remove_pyre_directive.RemovePyreStrictCommand": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.codemod.commands.remove_pyre_directive.RemovePyreUnsafeCommand": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.codemod.commands.remove_unused_imports": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.commands.remove_unused_imports.RemoveUnusedImportsCommand": {
  "lineno": 21,
  "symbols_in_volume": [
   "libcst.codemod.VisitorBasedCodemodCommand",
   "libcst.metadata.PositionProvider",
   "libcst.metadata.ProviderT",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "libcst.codemod.commands.remove_unused_imports.RemoveUnusedImportsCommand.__init__": {
  "lineno": 38,
  "symbols_in_volume": [
   "libcst.codemod.CodemodContext",
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.remove_unused_imports.RemoveUnusedImportsCommand._handle_import": {
  "lineno": 58,
  "symbols_in_volume": [
   "libcst.Import",
   "libcst.ImportFrom",
   "libcst.ImportStar",
   "libcst.codemod.visitors.RemoveImportsVisitor.remove_unused_import",
   "libcst.helpers.get_absolute_module_for_import",
   "libcst.metadata.PositionProvider",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.remove_unused_imports.RemoveUnusedImportsCommand.visit_Import": {
  "lineno": 50,
  "symbols_in_volume": [
   "libcst.Import"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.remove_unused_imports.RemoveUnusedImportsCommand.visit_ImportFrom": {
  "lineno": 54,
  "symbols_in_volume": [
   "libcst.ImportFrom"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.remove_unused_imports.RemoveUnusedImportsCommand.visit_Module": {
  "lineno": 42,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.codemod.visitors.GatherCommentsVisitor"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.rename": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.commands.rename.RenameCommand": {
  "lineno": 35,
  "symbols_in_volume": [
   "libcst.codemod.VisitorBasedCodemodCommand",
   "libcst.metadata.QualifiedNameProvider"
  ],
  "type": "class"
 },
 "libcst.codemod.commands.rename.RenameCommand.__init__": {
  "lineno": 65,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.codemod.CodemodContext",
   "typing.Optional",
   "typing.Set",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.rename.RenameCommand.add_args": {
  "lineno": 44,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.rename.RenameCommand.gen_name_or_attr_node": {
  "lineno": 319,
  "symbols_in_volume": [
   "libcst.Attribute",
   "libcst.BaseExpression",
   "libcst.Name",
   "libcst.parse_expression",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.rename.RenameCommand.gen_replacement": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.rename.RenameCommand.gen_replacement_module": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.rename.RenameCommand.leave_Attribute": {
  "lineno": 250,
  "symbols_in_volume": [
   "libcst.Attribute",
   "libcst.Name",
   "libcst.helpers.get_full_name_for_node",
   "libcst.metadata.QualifiedNameProvider",
   "libcst.metadata.QualifiedNameProvider.has_name",
   "libcst.parse_expression",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.rename.RenameCommand.leave_Import": {
  "lineno": 115,
  "symbols_in_volume": [
   "libcst.Attribute",
   "libcst.Import",
   "libcst.ImportAlias",
   "libcst.Name",
   "libcst.helpers.get_full_name_for_node",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.rename.RenameCommand.leave_ImportFrom": {
  "lineno": 172,
  "symbols_in_volume": [
   "libcst.Attribute",
   "libcst.ImportAlias",
   "libcst.ImportFrom",
   "libcst.Name",
   "libcst.helpers.get_full_name_for_node",
   "libcst.parse_expression",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.rename.RenameCommand.leave_Module": {
  "lineno": 278,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.codemod.visitors.AddImportsVisitor.add_needed_import",
   "libcst.codemod.visitors.RemoveImportsVisitor.remove_unused_import_by_node",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.rename.RenameCommand.leave_Name": {
  "lineno": 229,
  "symbols_in_volume": [
   "libcst.Attribute",
   "libcst.Name",
   "libcst.metadata.QualifiedNameProvider",
   "libcst.metadata.QualifiedNameProvider.has_name",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.rename.RenameCommand.record_asname": {
  "lineno": 329,
  "symbols_in_volume": [
   "libcst.Attribute",
   "libcst.Import",
   "libcst.ImportFrom",
   "libcst.Name",
   "libcst.helpers.get_full_name_for_node",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.rename.RenameCommand.visit_Import": {
  "lineno": 104,
  "symbols_in_volume": [
   "libcst.Import",
   "libcst.helpers.get_full_name_for_node"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.rename.RenameCommand.visit_ImportFrom": {
  "lineno": 158,
  "symbols_in_volume": [
   "libcst.ImportFrom",
   "libcst.helpers.get_full_name_for_node"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.rename.leave_import_decorator": {
  "lineno": 17,
  "symbols_in_volume": [
   "libcst.Import",
   "libcst.ImportFrom",
   "typing.Callable",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.rename.leave_import_decorator.wrapper": {
  "lineno": 22,
  "symbols_in_volume": [
   "libcst.Import",
   "libcst.ImportFrom",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.strip_strings_from_types": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.commands.strip_strings_from_types.StripStringsCommand": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.codemod.VisitorBasedCodemodCommand",
   "libcst.metadata.QualifiedNameProvider"
  ],
  "type": "class"
 },
 "libcst.codemod.commands.strip_strings_from_types.StripStringsCommand.leave_SimpleString": {
  "lineno": 24,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.SimpleString",
   "libcst.codemod.visitors.AddImportsVisitor.add_needed_import",
   "libcst.matchers.Annotation",
   "libcst.matchers.MatchMetadataIfTrue",
   "libcst.matchers.Subscript",
   "libcst.matchers.call_if_inside",
   "libcst.matchers.call_if_not_inside",
   "libcst.metadata.QualifiedNameProvider",
   "libcst.parse_expression",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.commands.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.commands.tests.test_add_pyre_directive": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.commands.tests.test_add_pyre_directive.TestAddPyreUnsafeCommand": {
  "lineno": 10,
  "symbols_in_volume": [
   "libcst.codemod.CodemodTest",
   "libcst.codemod.commands.add_pyre_directive.AddPyreUnsafeCommand"
  ],
  "type": "class"
 },
 "libcst.codemod.commands.tests.test_add_pyre_directive.TestAddPyreUnsafeCommand.test_add_to_file": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_add_pyre_directive.TestAddPyreUnsafeCommand.test_add_to_file_with_comment": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_add_pyre_directive.TestAddPyreUnsafeCommand.test_add_to_file_with_import": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_add_pyre_directive.TestAddPyreUnsafeCommand.test_add_to_file_with_pyre_unsafe": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_add_pyre_directive.TestAddPyreUnsafeCommand.test_add_to_file_with_pyre_unsafe_after": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_add_pyre_directive.TestAddPyreUnsafeCommand.test_add_to_file_with_pyre_unsafe_before": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_add_pyre_directive.TestAddPyreUnsafeCommand.test_empty_file": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.ConvertFormatStringCommandTest": {
  "lineno": 10,
  "symbols_in_volume": [
   "libcst.codemod.CodemodTest",
   "libcst.codemod.commands.convert_format_to_fstring.ConvertFormatStringCommand"
  ],
  "type": "class"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.ConvertFormatStringCommandTest.test_enable_unsupported_await": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.ConvertFormatStringCommandTest.test_enable_unsupported_comments": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.ConvertFormatStringCommandTest.test_formatspec_conversion": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.ConvertFormatStringCommandTest.test_name_replacement": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.ConvertFormatStringCommandTest.test_noop": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.ConvertFormatStringCommandTest.test_position_replacement": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.ConvertFormatStringCommandTest.test_replacement_with_conversion": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.ConvertFormatStringCommandTest.test_replacement_with_dict": {
  "lineno": 402,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.ConvertFormatStringCommandTest.test_replacement_with_escapes": {
  "lineno": 265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.ConvertFormatStringCommandTest.test_replacement_with_expression": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.ConvertFormatStringCommandTest.test_replacement_with_newline": {
  "lineno": 355,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.ConvertFormatStringCommandTest.test_replacement_with_string": {
  "lineno": 374,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.ConvertFormatStringCommandTest.test_unsupported_expansion": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_format_to_fstring.ConvertFormatStringCommandTest.test_unsupported_expression": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_namedtuple_to_dataclass": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.commands.tests.test_convert_namedtuple_to_dataclass.ConvertNamedTupleToDataclassCommandTest": {
  "lineno": 12,
  "symbols_in_volume": [
   "libcst.codemod.CodemodTest",
   "libcst.codemod.commands.convert_namedtuple_to_dataclass.ConvertNamedTupleToDataclassCommand"
  ],
  "type": "class"
 },
 "libcst.codemod.commands.tests.test_convert_namedtuple_to_dataclass.ConvertNamedTupleToDataclassCommandTest.test_aliased_module_import": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_namedtuple_to_dataclass.ConvertNamedTupleToDataclassCommandTest.test_aliased_object_import": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_namedtuple_to_dataclass.ConvertNamedTupleToDataclassCommandTest.test_change": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_namedtuple_to_dataclass.ConvertNamedTupleToDataclassCommandTest.test_multiple_bases": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_namedtuple_to_dataclass.ConvertNamedTupleToDataclassCommandTest.test_nested_classes": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_namedtuple_to_dataclass.ConvertNamedTupleToDataclassCommandTest.test_no_change": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_namedtuple_to_dataclass.ConvertNamedTupleToDataclassCommandTest.test_other_unused_imports_not_removed": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_namedtuple_to_dataclass.ConvertNamedTupleToDataclassCommandTest.test_with_decorator_already": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_percent_format_to_fstring": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.commands.tests.test_convert_percent_format_to_fstring.ConvertPercentFormatStringCommandTest": {
  "lineno": 12,
  "symbols_in_volume": [
   "libcst.codemod.CodemodTest",
   "libcst.codemod.commands.convert_percent_format_to_fstring.ConvertPercentFormatStringCommand"
  ],
  "type": "class"
 },
 "libcst.codemod.commands.tests.test_convert_percent_format_to_fstring.ConvertPercentFormatStringCommandTest.test_escaping": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_percent_format_to_fstring.ConvertPercentFormatStringCommandTest.test_not_supported_case": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_convert_percent_format_to_fstring.ConvertPercentFormatStringCommandTest.test_simple_cases": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_ensure_import_present": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.commands.tests.test_ensure_import_present.EnsureImportPresentCommandTest": {
  "lineno": 10,
  "symbols_in_volume": [
   "libcst.codemod.CodemodTest",
   "libcst.codemod.commands.ensure_import_present.EnsureImportPresentCommand"
  ],
  "type": "class"
 },
 "libcst.codemod.commands.tests.test_ensure_import_present.EnsureImportPresentCommandTest.test_import_entity": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_ensure_import_present.EnsureImportPresentCommandTest.test_import_entity_aliased": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_ensure_import_present.EnsureImportPresentCommandTest.test_import_module": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_ensure_import_present.EnsureImportPresentCommandTest.test_import_module_aliased": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_ensure_import_present.EnsureImportPresentCommandTest.test_import_wildcard": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_fix_pyre_directives": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.commands.tests.test_fix_pyre_directives.TestFixPyreDirectivesCommand": {
  "lineno": 10,
  "symbols_in_volume": [
   "libcst.codemod.CodemodTest",
   "libcst.codemod.commands.fix_pyre_directives.FixPyreDirectivesCommand"
  ],
  "type": "class"
 },
 "libcst.codemod.commands.tests.test_fix_pyre_directives.TestFixPyreDirectivesCommand.test_fix_body_duplicate": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_fix_pyre_directives.TestFixPyreDirectivesCommand.test_fix_header_duplicate": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_fix_pyre_directives.TestFixPyreDirectivesCommand.test_fix_misspelled_body": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_fix_pyre_directives.TestFixPyreDirectivesCommand.test_fix_misspelled_header": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_fix_pyre_directives.TestFixPyreDirectivesCommand.test_fix_misspelled_header_duplicate": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_fix_pyre_directives.TestFixPyreDirectivesCommand.test_fix_misspelled_header_duplicate_body": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_fix_pyre_directives.TestFixPyreDirectivesCommand.test_fix_wrong_location": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_fix_pyre_directives.TestFixPyreDirectivesCommand.test_no_need_to_fix_complex_bottom": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_fix_pyre_directives.TestFixPyreDirectivesCommand.test_no_need_to_fix_complex_top": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_fix_pyre_directives.TestFixPyreDirectivesCommand.test_no_need_to_fix_simple": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_noop": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.commands.tests.test_noop.TestNOOPCodemod": {
  "lineno": 10,
  "symbols_in_volume": [
   "libcst.codemod.CodemodTest",
   "libcst.codemod.commands.noop.NOOPCommand"
  ],
  "type": "class"
 },
 "libcst.codemod.commands.tests.test_noop.TestNOOPCodemod.test_noop": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_pyre_directive": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.commands.tests.test_remove_pyre_directive.TestRemovePyreStrictCommand": {
  "lineno": 13,
  "symbols_in_volume": [
   "libcst.codemod.CodemodTest",
   "libcst.codemod.commands.remove_pyre_directive.RemovePyreStrictCommand"
  ],
  "type": "class"
 },
 "libcst.codemod.commands.tests.test_remove_pyre_directive.TestRemovePyreStrictCommand.test_remove_from_file": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_pyre_directive.TestRemovePyreStrictCommand.test_remove_from_file_with_comment": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_pyre_directive.TestRemovePyreStrictCommand.test_remove_from_file_with_pyre_strict_after": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_pyre_directive.TestRemovePyreStrictCommand.test_remove_from_file_with_pyre_strict_before": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_pyre_directive.TestRemovePyreStrictCommand.test_remove_from_file_without_pyre_strict": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_pyre_directive.TestRemovePyreUnsafeCommand": {
  "lineno": 99,
  "symbols_in_volume": [
   "libcst.codemod.CodemodTest",
   "libcst.codemod.commands.remove_pyre_directive.RemovePyreUnsafeCommand"
  ],
  "type": "class"
 },
 "libcst.codemod.commands.tests.test_remove_pyre_directive.TestRemovePyreUnsafeCommand.test_remove_from_file": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_pyre_directive.TestRemovePyreUnsafeCommand.test_remove_from_file_with_comment": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_pyre_directive.TestRemovePyreUnsafeCommand.test_remove_from_file_with_pyre_unsafe_after": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_pyre_directive.TestRemovePyreUnsafeCommand.test_remove_from_file_with_pyre_unsafe_before": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_pyre_directive.TestRemovePyreUnsafeCommand.test_remove_from_file_without_pyre_unsafe": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_unused_imports": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.commands.tests.test_remove_unused_imports.RemoveUnusedImportsCommandTest": {
  "lineno": 11,
  "symbols_in_volume": [
   "libcst.codemod.CodemodTest",
   "libcst.codemod.commands.remove_unused_imports.RemoveUnusedImportsCommand"
  ],
  "type": "class"
 },
 "libcst.codemod.commands.tests.test_remove_unused_imports.RemoveUnusedImportsCommandTest.test_access_in_assignment": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_unused_imports.RemoveUnusedImportsCommandTest.test_conditional_import": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_unused_imports.RemoveUnusedImportsCommandTest.test_dotted_imports": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_unused_imports.RemoveUnusedImportsCommandTest.test_double_import": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_unused_imports.RemoveUnusedImportsCommandTest.test_enclosed_attributes": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_unused_imports.RemoveUnusedImportsCommandTest.test_no_formatting_if_no_unused_imports": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_unused_imports.RemoveUnusedImportsCommandTest.test_simple_case": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_unused_imports.RemoveUnusedImportsCommandTest.test_suppression": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_unused_imports.RemoveUnusedImportsCommandTest.test_suppression_on_first_line_of_multiline_import_refers_to_whole_block": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_unused_imports.RemoveUnusedImportsCommandTest.test_type_annotations": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_remove_unused_imports.RemoveUnusedImportsCommandTest.test_unused_in_conditional": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand": {
  "lineno": 12,
  "symbols_in_volume": [
   "libcst.codemod.CodemodTest",
   "libcst.codemod.commands.rename.RenameCommand"
  ],
  "type": "class"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_complex_module_rename": {
  "lineno": 397,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_complex_module_rename_with_asname": {
  "lineno": 412,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_input_with_colon_sep": {
  "lineno": 542,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_input_with_colon_sep_at_the_end": {
  "lineno": 557,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_input_with_colon_sep_at_the_front": {
  "lineno": 572,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_module_does_not_change": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_names_with_repeated_substrings": {
  "lineno": 427,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_no_change_because_no_match_was_found": {
  "lineno": 588,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_no_codemod": {
  "lineno": 461,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_no_removal_of_dotted_import_in_use": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_no_removal_of_import_from_in_use": {
  "lineno": 360,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_no_removal_of_import_in_use": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_other_import_froms_untouched": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_other_imports_untouched": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_other_unused_imports_untouched": {
  "lineno": 378,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_attr": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_attr_asname": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_class": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_import_from_prefix": {
  "lineno": 483,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_import_prefix": {
  "lineno": 472,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_importfrom_same_module": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_importfrom_same_module_2": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_local_variable": {
  "lineno": 250,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_module_import": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_module_import_2": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_module_import_from": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_module_import_from_2": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_module_import_no_change": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_multiple_imports": {
  "lineno": 515,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_multiple_occurrences": {
  "lineno": 494,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_name": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_name_asname": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_rename_repeated_name_with_asname": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_rename.TestRenameCommand.test_repeated_name": {
  "lineno": 444,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_strip_strings_from_types": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.commands.tests.test_strip_strings_from_types.TestStripStringsCodemod": {
  "lineno": 10,
  "symbols_in_volume": [
   "libcst.codemod.CodemodTest",
   "libcst.codemod.commands.strip_strings_from_types.StripStringsCommand"
  ],
  "type": "class"
 },
 "libcst.codemod.commands.tests.test_strip_strings_from_types.TestStripStringsCodemod.test_async": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_strip_strings_from_types.TestStripStringsCodemod.test_literal": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_strip_strings_from_types.TestStripStringsCodemod.test_literal_alias": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_strip_strings_from_types.TestStripStringsCodemod.test_literal_object": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_strip_strings_from_types.TestStripStringsCodemod.test_literal_object_alias": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_strip_strings_from_types.TestStripStringsCodemod.test_non_async": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_strip_strings_from_types.TestStripStringsCodemod.test_noop": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_strip_strings_from_types.TestStripStringsCodemod.test_recursive": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.tests.test_unnecessary_format_string": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.commands.tests.test_unnecessary_format_string.TestUnnecessaryFormatString": {
  "lineno": 12,
  "symbols_in_volume": [
   "libcst.codemod.Codemod",
   "libcst.codemod.CodemodTest",
   "libcst.codemod.commands.unnecessary_format_string.UnnecessaryFormatString",
   "typing.Type"
  ],
  "type": "class"
 },
 "libcst.codemod.commands.tests.test_unnecessary_format_string.TestUnnecessaryFormatString.test_replace": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.commands.unnecessary_format_string": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.commands.unnecessary_format_string.UnnecessaryFormatString": {
  "lineno": 11,
  "symbols_in_volume": [
   "libcst.codemod.VisitorBasedCodemodCommand"
  ],
  "type": "class"
 },
 "libcst.codemod.commands.unnecessary_format_string.UnnecessaryFormatString._check_formatted_string": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.FormattedString",
   "libcst.FormattedStringText",
   "libcst.SimpleString",
   "libcst.ensure_type",
   "libcst.matchers.FormattedString",
   "libcst.matchers.FormattedStringText",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.codemod.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.tests.test_cli": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.tests.test_cli.TestPackageCalculation": {
  "lineno": 12,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.codemod.tests.test_cli.TestPackageCalculation.test_calculate_module": {
  "lineno": 13,
  "symbols_in_volume": [
   "libcst.codemod._cli._calculate_module",
   "libcst.testing.utils.data_provider",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.codemod.tests.test_codemod": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.tests.test_codemod.IncrementCodemod": {
  "lineno": 66,
  "symbols_in_volume": [
   "libcst.codemod.Codemod"
  ],
  "type": "class"
 },
 "libcst.codemod.tests.test_codemod.IncrementCodemod.__init__": {
  "lineno": 67,
  "symbols_in_volume": [
   "libcst.codemod.CodemodContext"
  ],
  "type": "function"
 },
 "libcst.codemod.tests.test_codemod.IncrementCodemod.should_allow_multiple_passes": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.tests.test_codemod.IncrementCodemod.transform_module_impl": {
  "lineno": 74,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.ensure_type",
   "libcst.matchers.Integer",
   "libcst.matchers.replace"
  ],
  "type": "function"
 },
 "libcst.codemod.tests.test_codemod.SimpleCodemod": {
  "lineno": 13,
  "symbols_in_volume": [
   "libcst.codemod.Codemod"
  ],
  "type": "class"
 },
 "libcst.codemod.tests.test_codemod.SimpleCodemod.__init__": {
  "lineno": 14,
  "symbols_in_volume": [
   "libcst.codemod.CodemodContext"
  ],
  "type": "function"
 },
 "libcst.codemod.tests.test_codemod.SimpleCodemod.transform_module_impl": {
  "lineno": 18,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.codemod.SkipFile"
  ],
  "type": "function"
 },
 "libcst.codemod.tests.test_codemod.TestMultipass": {
  "lineno": 89,
  "symbols_in_volume": [
   "libcst.codemod.CodemodTest"
  ],
  "type": "class"
 },
 "libcst.codemod.tests.test_codemod.TestMultipass.test_multi_iterations": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.tests.test_codemod.TestSkipDetection": {
  "lineno": 25,
  "symbols_in_volume": [
   "libcst.codemod.CodemodTest"
  ],
  "type": "class"
 },
 "libcst.codemod.tests.test_codemod.TestSkipDetection.test_detect_skip": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.tests.test_codemod.TestSkipDetection.test_did_not_skip_but_should": {
  "lineno": 41,
  "symbols_in_volume": [
   "unittest.expectedFailure"
  ],
  "type": "function"
 },
 "libcst.codemod.tests.test_codemod.TestSkipDetection.test_skipped_but_should_not": {
  "lineno": 53,
  "symbols_in_volume": [
   "unittest.expectedFailure"
  ],
  "type": "function"
 },
 "libcst.codemod.tests.test_codemod_cli": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.tests.test_codemod_cli.TestCodemodCLI": {
  "lineno": 14,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.codemod.tests.test_codemod_cli.TestCodemodCLI.test_codemod_formatter_error_input": {
  "lineno": 15,
  "symbols_in_volume": [
   "subprocess.PIPE",
   "subprocess.run",
   "sys.version_info"
  ],
  "type": "function"
 },
 "libcst.codemod.tests.test_metadata": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.tests.test_metadata.TestMetadata": {
  "lineno": 37,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.codemod.tests.test_metadata.TestMetadata.test_metadata_works": {
  "lineno": 38,
  "symbols_in_volume": [
   "libcst.codemod.CodemodContext",
   "libcst.parse_module",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst.codemod.tests.test_metadata.TestingCollector": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst.codemod.ContextAwareVisitor",
   "libcst.metadata.PositionProvider"
  ],
  "type": "class"
 },
 "libcst.codemod.tests.test_metadata.TestingCollector.visit_Pass": {
  "lineno": 19,
  "symbols_in_volume": [
   "libcst.Pass",
   "libcst.metadata.PositionProvider"
  ],
  "type": "function"
 },
 "libcst.codemod.tests.test_metadata.TestingTransform": {
  "lineno": 24,
  "symbols_in_volume": [
   "libcst.codemod.ContextAwareTransformer",
   "libcst.metadata.PositionProvider"
  ],
  "type": "class"
 },
 "libcst.codemod.tests.test_metadata.TestingTransform.visit_FunctionDef": {
  "lineno": 28,
  "symbols_in_volume": [
   "libcst.FunctionDef",
   "libcst.metadata.PositionProvider"
  ],
  "type": "function"
 },
 "libcst.codemod.tests.test_runner": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.tests.test_runner.TestRunner": {
  "lineno": 23,
  "symbols_in_volume": [
   "libcst.codemod.CodemodTest"
  ],
  "type": "class"
 },
 "libcst.codemod.tests.test_runner.TestRunner.test_runner_default": {
  "lineno": 24,
  "symbols_in_volume": [
   "libcst.codemod.CodemodContext",
   "libcst.codemod.TransformSuccess",
   "libcst.codemod.transform_module",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst.codemod.tests.test_runner.TestRunner.test_runner_default.SimpleCodemod": {
  "lineno": 41,
  "symbols_in_volume": [
   "libcst.codemod.Codemod"
  ],
  "type": "class"
 },
 "libcst.codemod.tests.test_runner.TestRunner.test_runner_default.SimpleCodemod.transform_module_impl": {
  "lineno": 42,
  "symbols_in_volume": [
   "libcst.Comment",
   "libcst.EmptyLine",
   "libcst.Module"
  ],
  "type": "function"
 },
 "libcst.codemod.tests.test_runner.TestRunner.test_runner_failure": {
  "lineno": 91,
  "symbols_in_volume": [
   "libcst.codemod.CodemodContext",
   "libcst.codemod.TransformFailure",
   "libcst.codemod.transform_module",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst.codemod.tests.test_runner.TestRunner.test_runner_failure.SimpleCodemod": {
  "lineno": 100,
  "symbols_in_volume": [
   "libcst.codemod.Codemod"
  ],
  "type": "class"
 },
 "libcst.codemod.tests.test_runner.TestRunner.test_runner_failure.SimpleCodemod.transform_module_impl": {
  "lineno": 101,
  "symbols_in_volume": [
   "libcst.Module",
   "typing.Dict"
  ],
  "type": "function"
 },
 "libcst.codemod.tests.test_runner.TestRunner.test_runner_interrupted": {
  "lineno": 55,
  "symbols_in_volume": [
   "libcst.codemod.CodemodContext",
   "libcst.codemod.TransformExit",
   "libcst.codemod.transform_module",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst.codemod.tests.test_runner.TestRunner.test_runner_interrupted.SimpleCodemod": {
  "lineno": 64,
  "symbols_in_volume": [
   "libcst.codemod.Codemod"
  ],
  "type": "class"
 },
 "libcst.codemod.tests.test_runner.TestRunner.test_runner_interrupted.SimpleCodemod.transform_module_impl": {
  "lineno": 65,
  "symbols_in_volume": [
   "libcst.Module"
  ],
  "type": "function"
 },
 "libcst.codemod.tests.test_runner.TestRunner.test_runner_skip": {
  "lineno": 72,
  "symbols_in_volume": [
   "libcst.codemod.CodemodContext",
   "libcst.codemod.TransformSkip",
   "libcst.codemod.transform_module",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst.codemod.tests.test_runner.TestRunner.test_runner_skip.SimpleCodemod": {
  "lineno": 81,
  "symbols_in_volume": [
   "libcst.codemod.Codemod"
  ],
  "type": "class"
 },
 "libcst.codemod.tests.test_runner.TestRunner.test_runner_skip.SimpleCodemod.transform_module_impl": {
  "lineno": 82,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.codemod.SkipFile"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.visitors._add_imports": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.visitors._add_imports.AddImportsVisitor": {
  "lineno": 17,
  "symbols_in_volume": [
   "libcst.codemod._visitor.ContextAwareTransformer"
  ],
  "type": "class"
 },
 "libcst.codemod.visitors._add_imports.AddImportsVisitor.__init__": {
  "lineno": 102,
  "symbols_in_volume": [
   "libcst.Import",
   "libcst.ImportFrom",
   "libcst.codemod._context.CodemodContext",
   "libcst.matchers",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Sequence",
   "typing.Set",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._add_imports.AddImportsVisitor._get_imports_from_context": {
  "lineno": 63,
  "symbols_in_volume": [
   "libcst.codemod._context.CodemodContext",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._add_imports.AddImportsVisitor._insert_empty_line": {
  "lineno": 300,
  "symbols_in_volume": [
   "libcst.BaseCompoundStatement",
   "libcst.EmptyLine",
   "libcst.SimpleStatementLine",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._add_imports.AddImportsVisitor._split_module": {
  "lineno": 246,
  "symbols_in_volume": [
   "libcst.BaseCompoundStatement",
   "libcst.Module",
   "libcst.SimpleStatementLine",
   "libcst.matchers.Assign",
   "libcst.matchers.AssignTarget",
   "libcst.matchers.Expr",
   "libcst.matchers.Module",
   "libcst.matchers.Name",
   "libcst.matchers.SimpleStatementLine",
   "libcst.matchers.SimpleString",
   "libcst.matchers.ZeroOrMore",
   "libcst.matchers.matches",
   "typing.List",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._add_imports.AddImportsVisitor.add_needed_import": {
  "lineno": 72,
  "symbols_in_volume": [
   "libcst.codemod._context.CodemodContext",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._add_imports.AddImportsVisitor.leave_ImportFrom": {
  "lineno": 202,
  "symbols_in_volume": [
   "libcst.AsName",
   "libcst.ImportAlias",
   "libcst.ImportFrom",
   "libcst.ImportStar",
   "libcst.Name",
   "libcst.helpers.get_absolute_module_for_import"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._add_imports.AddImportsVisitor.leave_Module": {
  "lineno": 326,
  "symbols_in_volume": [
   "collections.defaultdict",
   "libcst.Module",
   "libcst.parse_statement"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._add_imports.AddImportsVisitor.visit_Module": {
  "lineno": 168,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.codemod.visitors._gather_imports.GatherImportsVisitor"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.visitors._apply_type_annotations.Annotations": {
  "lineno": 192,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "dataclasses.field",
   "libcst.Annotation",
   "libcst.ClassDef",
   "typing.Dict"
  ],
  "type": "class"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor": {
  "lineno": 199,
  "symbols_in_volume": [
   "libcst.codemod._visitor.ContextAwareTransformer"
  ],
  "type": "class"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor.__init__": {
  "lineno": 236,
  "symbols_in_volume": [
   "libcst.Annotation",
   "libcst.ImportFrom",
   "libcst.codemod._context.CodemodContext",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor._add_to_toplevel_annotations": {
  "lineno": 369,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor._annotate_single_target": {
  "lineno": 317,
  "symbols_in_volume": [
   "libcst.AnnAssign",
   "libcst.Assign",
   "libcst.List",
   "libcst.Name",
   "libcst.Subscript",
   "libcst.Tuple",
   "libcst.helpers.get_full_name_for_node",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor._insert_empty_line": {
  "lineno": 414,
  "symbols_in_volume": [
   "libcst.BaseCompoundStatement",
   "libcst.EmptyLine",
   "libcst.SimpleStatementLine",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor._qualifier_name": {
  "lineno": 314,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor._split_module": {
  "lineno": 345,
  "symbols_in_volume": [
   "libcst.BaseCompoundStatement",
   "libcst.Module",
   "libcst.SimpleStatementLine",
   "typing.List",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor._update_parameters": {
  "lineno": 376,
  "symbols_in_volume": [
   "libcst.FunctionDef",
   "libcst.Parameters"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor._update_parameters.update_annotation": {
  "lineno": 382,
  "symbols_in_volume": [
   "libcst.Param",
   "typing.List",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor.leave_Assign": {
  "lineno": 471,
  "symbols_in_volume": [
   "libcst.AnnAssign",
   "libcst.Assign",
   "libcst.Attribute",
   "libcst.Name",
   "libcst.helpers.get_full_name_for_node",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor.leave_ClassDef": {
  "lineno": 442,
  "symbols_in_volume": [
   "libcst.ClassDef"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor.leave_FunctionDef": {
  "lineno": 453,
  "symbols_in_volume": [
   "libcst.FunctionDef"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor.leave_ImportFrom": {
  "lineno": 488,
  "symbols_in_volume": [
   "libcst.ImportFrom"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor.leave_Module": {
  "lineno": 494,
  "symbols_in_volume": [
   "libcst.AnnAssign",
   "libcst.Module",
   "libcst.Name",
   "libcst.SimpleStatementLine"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor.store_stub_in_context": {
  "lineno": 265,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.codemod._context.CodemodContext"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor.transform_module_impl": {
  "lineno": 287,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.codemod._context.CodemodContext",
   "libcst.codemod.visitors._add_imports.AddImportsVisitor",
   "libcst.codemod.visitors._gather_imports.GatherImportsVisitor"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor.visit_ClassDef": {
  "lineno": 438,
  "symbols_in_volume": [
   "libcst.ClassDef"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor.visit_FunctionDef": {
  "lineno": 448,
  "symbols_in_volume": [
   "libcst.FunctionDef"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.FunctionAnnotation": {
  "lineno": 42,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.Annotation",
   "libcst.Parameters",
   "typing.Optional"
  ],
  "type": "class"
 },
 "libcst.codemod.visitors._apply_type_annotations.TypeCollector": {
  "lineno": 48,
  "symbols_in_volume": [
   "libcst.CSTVisitor"
  ],
  "type": "class"
 },
 "libcst.codemod.visitors._apply_type_annotations.TypeCollector.__init__": {
  "lineno": 53,
  "symbols_in_volume": [
   "libcst.Annotation",
   "libcst.ClassDef",
   "libcst.codemod._context.CodemodContext",
   "typing.Dict",
   "typing.List",
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.TypeCollector._add_annotation_to_imports": {
  "lineno": 111,
  "symbols_in_volume": [
   "libcst.Attribute",
   "libcst.Name",
   "libcst.codemod.visitors._add_imports.AddImportsVisitor.add_needed_import",
   "libcst.helpers.get_full_name_for_node",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.TypeCollector._create_import_from_annotation": {
  "lineno": 162,
  "symbols_in_volume": [
   "libcst.Annotation",
   "libcst.Attribute",
   "libcst.Subscript",
   "libcst.matchers.Name",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.TypeCollector._handle_Index": {
  "lineno": 124,
  "symbols_in_volume": [
   "libcst.Attribute",
   "libcst.Index",
   "libcst.Subscript"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.TypeCollector._handle_Subscript": {
  "lineno": 135,
  "symbols_in_volume": [
   "libcst.Attribute",
   "libcst.Index",
   "libcst.Name",
   "libcst.Subscript",
   "libcst.matchers.Name",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.TypeCollector._import_parameter_annotations": {
  "lineno": 175,
  "symbols_in_volume": [
   "libcst.Parameters"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.TypeCollector._import_parameter_annotations.update_annotations": {
  "lineno": 178,
  "symbols_in_volume": [
   "libcst.Param",
   "typing.List",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.TypeCollector.leave_AnnAssign": {
  "lineno": 93,
  "symbols_in_volume": [
   "libcst.AnnAssign"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.TypeCollector.leave_ClassDef": {
  "lineno": 67,
  "symbols_in_volume": [
   "libcst.ClassDef"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.TypeCollector.leave_FunctionDef": {
  "lineno": 82,
  "symbols_in_volume": [
   "libcst.FunctionDef"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.TypeCollector.visit_AnnAssign": {
  "lineno": 85,
  "symbols_in_volume": [
   "libcst.AnnAssign",
   "libcst.helpers.get_full_name_for_node"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.TypeCollector.visit_ClassDef": {
  "lineno": 63,
  "symbols_in_volume": [
   "libcst.ClassDef"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.TypeCollector.visit_FunctionDef": {
  "lineno": 70,
  "symbols_in_volume": [
   "libcst.FunctionDef"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations.TypeCollector.visit_ImportFrom": {
  "lineno": 96,
  "symbols_in_volume": [
   "libcst.ImportFrom",
   "libcst.ImportStar",
   "libcst.codemod.visitors._add_imports.AddImportsVisitor.add_needed_import",
   "libcst.helpers.get_full_name_for_node"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations._get_import_alias_names": {
  "lineno": 19,
  "symbols_in_volume": [
   "libcst.ImportAlias",
   "libcst.helpers.get_full_name_for_node",
   "typing.Sequence",
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._apply_type_annotations._get_import_names": {
  "lineno": 30,
  "symbols_in_volume": [
   "libcst.Import",
   "libcst.ImportFrom",
   "libcst.ImportStar",
   "typing.Sequence",
   "typing.Set",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_comments": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.visitors._gather_comments.GatherCommentsVisitor": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst.codemod._visitor.ContextAwareVisitor",
   "libcst.metadata.PositionProvider"
  ],
  "type": "class"
 },
 "libcst.codemod.visitors._gather_comments.GatherCommentsVisitor.__init__": {
  "lineno": 30,
  "symbols_in_volume": [
   "libcst.Comment",
   "libcst.codemod._context.CodemodContext",
   "re.compile",
   "typing.Dict",
   "typing.Pattern"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_comments.GatherCommentsVisitor.handle_comment": {
  "lineno": 49,
  "symbols_in_volume": [
   "libcst.EmptyLine",
   "libcst.TrailingWhitespace",
   "libcst.metadata.PositionProvider",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_comments.GatherCommentsVisitor.visit_EmptyLine": {
  "lineno": 39,
  "symbols_in_volume": [
   "libcst.EmptyLine"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_comments.GatherCommentsVisitor.visit_TrailingWhitespace": {
  "lineno": 44,
  "symbols_in_volume": [
   "libcst.TrailingWhitespace"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_exports": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.visitors._gather_exports.GatherExportsVisitor": {
  "lineno": 14,
  "symbols_in_volume": [
   "libcst.codemod._visitor.ContextAwareVisitor"
  ],
  "type": "class"
 },
 "libcst.codemod.visitors._gather_exports.GatherExportsVisitor.__init__": {
  "lineno": 32,
  "symbols_in_volume": [
   "libcst.List",
   "libcst.Set",
   "libcst.Tuple",
   "libcst.codemod._context.CodemodContext",
   "typing.Set",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_exports.GatherExportsVisitor._handle_assign_target": {
  "lineno": 62,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.List",
   "libcst.Set",
   "libcst.Tuple",
   "libcst.helpers.get_full_name_for_node"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_exports.GatherExportsVisitor._handle_string_export": {
  "lineno": 122,
  "symbols_in_volume": [
   "libcst.ConcatenatedString",
   "libcst.SimpleString",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_exports.GatherExportsVisitor.leave_List": {
  "lineno": 90,
  "symbols_in_volume": [
   "libcst.List"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_exports.GatherExportsVisitor.leave_Set": {
  "lineno": 110,
  "symbols_in_volume": [
   "libcst.Set"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_exports.GatherExportsVisitor.leave_Tuple": {
  "lineno": 100,
  "symbols_in_volume": [
   "libcst.Tuple"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_exports.GatherExportsVisitor.visit_AnnAssign": {
  "lineno": 49,
  "symbols_in_volume": [
   "libcst.AnnAssign"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_exports.GatherExportsVisitor.visit_Assign": {
  "lineno": 56,
  "symbols_in_volume": [
   "libcst.Assign"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_exports.GatherExportsVisitor.visit_ConcatenatedString": {
  "lineno": 118,
  "symbols_in_volume": [
   "libcst.ConcatenatedString"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_exports.GatherExportsVisitor.visit_List": {
  "lineno": 84,
  "symbols_in_volume": [
   "libcst.List"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_exports.GatherExportsVisitor.visit_Set": {
  "lineno": 104,
  "symbols_in_volume": [
   "libcst.Set"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_exports.GatherExportsVisitor.visit_SimpleString": {
  "lineno": 114,
  "symbols_in_volume": [
   "libcst.SimpleString"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_exports.GatherExportsVisitor.visit_Tuple": {
  "lineno": 94,
  "symbols_in_volume": [
   "libcst.Tuple"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_imports": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.visitors._gather_imports.GatherImportsVisitor": {
  "lineno": 14,
  "symbols_in_volume": [
   "libcst.codemod._visitor.ContextAwareVisitor"
  ],
  "type": "class"
 },
 "libcst.codemod.visitors._gather_imports.GatherImportsVisitor.__init__": {
  "lineno": 53,
  "symbols_in_volume": [
   "libcst.Import",
   "libcst.ImportFrom",
   "libcst.codemod._context.CodemodContext",
   "typing.Dict",
   "typing.List",
   "typing.Set",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_imports.GatherImportsVisitor.visit_Import": {
  "lineno": 64,
  "symbols_in_volume": [
   "libcst.Import"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_imports.GatherImportsVisitor.visit_ImportFrom": {
  "lineno": 77,
  "symbols_in_volume": [
   "libcst.ImportFrom",
   "libcst.ImportStar",
   "libcst.helpers.get_absolute_module_for_import",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_string_annotation_names": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor": {
  "lineno": 18,
  "symbols_in_volume": [
   "libcst.codemod._visitor.ContextAwareVisitor",
   "libcst.metadata.QualifiedNameProvider"
  ],
  "type": "class"
 },
 "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor.__init__": {
  "lineno": 30,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.codemod._context.CodemodContext",
   "typing.Collection",
   "typing.List",
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor.handle_any_string": {
  "lineno": 69,
  "symbols_in_volume": [
   "libcst.Attribute",
   "libcst.ConcatenatedString",
   "libcst.SimpleString",
   "libcst.matchers.Attribute",
   "libcst.matchers.DoNotCare",
   "libcst.matchers.MatchMetadataIfTrue",
   "libcst.matchers.Name",
   "libcst.matchers.SaveMatchedNode",
   "libcst.matchers.extractall",
   "libcst.metadata.MetadataWrapper",
   "libcst.metadata.ParentNodeProvider",
   "libcst.metadata.scope_provider._gen_dotted_names",
   "libcst.parse_module",
   "typing.Union",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor.leave_Annotation": {
  "lineno": 45,
  "symbols_in_volume": [
   "libcst.Annotation"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor.leave_Call": {
  "lineno": 55,
  "symbols_in_volume": [
   "libcst.Call"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor.visit_Annotation": {
  "lineno": 41,
  "symbols_in_volume": [
   "libcst.Annotation"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor.visit_Call": {
  "lineno": 48,
  "symbols_in_volume": [
   "libcst.Call",
   "libcst.metadata.QualifiedNameProvider"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor.visit_ConcatenatedString": {
  "lineno": 59,
  "symbols_in_volume": [
   "libcst.ConcatenatedString"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor.visit_SimpleString": {
  "lineno": 64,
  "symbols_in_volume": [
   "libcst.SimpleString"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_unused_imports": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor": {
  "lineno": 24,
  "symbols_in_volume": [
   "libcst.codemod._visitor.ContextAwareVisitor",
   "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor.METADATA_DEPENDENCIES",
   "libcst.metadata.ProviderT",
   "libcst.metadata.ScopeProvider",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor.__init__": {
  "lineno": 43,
  "symbols_in_volume": [
   "libcst.Import",
   "libcst.ImportAlias",
   "libcst.ImportFrom",
   "libcst.codemod._context.CodemodContext",
   "libcst.codemod.visitors._gather_string_annotation_names.FUNCS_CONSIDERED_AS_STRING_ANNOTATIONS",
   "typing.Collection",
   "typing.Set",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor.filter_unused_imports": {
  "lineno": 96,
  "symbols_in_volume": [
   "libcst.Import",
   "libcst.ImportAlias",
   "libcst.ImportFrom",
   "libcst.metadata.ScopeProvider",
   "typing.Iterable",
   "typing.Set",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor.handle_import": {
  "lineno": 86,
  "symbols_in_volume": [
   "libcst.Import",
   "libcst.ImportFrom",
   "libcst.ImportStar",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor.is_in_use": {
  "lineno": 116,
  "symbols_in_volume": [
   "libcst.Import",
   "libcst.ImportAlias",
   "libcst.ImportFrom",
   "libcst.Name",
   "libcst.ensure_type",
   "libcst.metadata.Assignment",
   "libcst.metadata.Scope",
   "libcst.metadata.scope_provider._gen_dotted_names"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor.leave_Module": {
  "lineno": 93,
  "symbols_in_volume": [
   "libcst.Module"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor.visit_Import": {
  "lineno": 72,
  "symbols_in_volume": [
   "libcst.Import"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor.visit_ImportFrom": {
  "lineno": 76,
  "symbols_in_volume": [
   "libcst.ImportFrom",
   "libcst.ImportStar"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor.visit_Module": {
  "lineno": 61,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.codemod.visitors._gather_exports.GatherExportsVisitor",
   "libcst.codemod.visitors._gather_string_annotation_names.GatherNamesFromStringAnnotationsVisitor"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._remove_imports": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor": {
  "lineno": 106,
  "symbols_in_volume": [
   "libcst.codemod._visitor.ContextAwareTransformer",
   "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor.METADATA_DEPENDENCIES",
   "libcst.metadata.ProviderT",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor.__init__": {
  "lineno": 266,
  "symbols_in_volume": [
   "libcst.Import",
   "libcst.ImportAlias",
   "libcst.ImportFrom",
   "libcst.codemod._context.CodemodContext",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Sequence",
   "typing.Set",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor._get_imports_from_context": {
  "lineno": 179,
  "symbols_in_volume": [
   "libcst.codemod._context.CodemodContext",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor.leave_Import": {
  "lineno": 298,
  "symbols_in_volume": [
   "libcst.Import",
   "libcst.MaybeSentinel.DEFAULT",
   "libcst.RemovalSentinel",
   "libcst.RemoveFromParent",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor.leave_ImportFrom": {
  "lineno": 340,
  "symbols_in_volume": [
   "libcst.ImportFrom",
   "libcst.ImportStar",
   "libcst.MaybeSentinel.DEFAULT",
   "libcst.RemovalSentinel",
   "libcst.RemoveFromParent",
   "libcst.helpers.get_absolute_module_for_import",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor.remove_unused_import": {
  "lineno": 188,
  "symbols_in_volume": [
   "libcst.codemod._context.CodemodContext",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor.remove_unused_import_by_node": {
  "lineno": 216,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Import",
   "libcst.ImportFrom",
   "libcst.ImportStar",
   "libcst.codemod._context.CodemodContext",
   "libcst.helpers.get_absolute_module_for_import"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._remove_imports.RemoveImportsVisitor.visit_Module": {
  "lineno": 293,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.codemod.visitors._gather_unused_imports.GatherUnusedImportsVisitor"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._remove_imports.RemovedNodeVisitor": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.codemod._visitor.ContextAwareVisitor"
  ],
  "type": "class"
 },
 "libcst.codemod.visitors._remove_imports.RemovedNodeVisitor._remove_imports_from_import_stmt": {
  "lineno": 17,
  "symbols_in_volume": [
   "libcst.Import"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._remove_imports.RemovedNodeVisitor._remove_imports_from_importfrom_stmt": {
  "lineno": 33,
  "symbols_in_volume": [
   "libcst.ImportFrom",
   "libcst.ImportStar",
   "libcst.helpers.get_absolute_module_for_import"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._remove_imports.RemovedNodeVisitor._visit_name_attr_alike": {
  "lineno": 63,
  "symbols_in_volume": [
   "libcst.Attribute",
   "libcst.Import",
   "libcst.ImportFrom",
   "libcst.Name",
   "libcst.helpers.get_full_name_for_node",
   "libcst.metadata.Assignment",
   "libcst.metadata.ScopeProvider",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._remove_imports.RemovedNodeVisitor.visit_Attribute": {
  "lineno": 102,
  "symbols_in_volume": [
   "libcst.Attribute"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors._remove_imports.RemovedNodeVisitor.visit_Name": {
  "lineno": 99,
  "symbols_in_volume": [
   "libcst.Name"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.visitors.tests.test_add_imports": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod": {
  "lineno": 10,
  "symbols_in_volume": [
   "libcst.codemod.CodemodTest",
   "libcst.codemod.visitors.AddImportsVisitor"
  ],
  "type": "class"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_add_and_modify_complex": {
  "lineno": 404,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_add_future": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_add_import_preserve_doctring_multiples": {
  "lineno": 486,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_add_import_preserve_doctring_simple": {
  "lineno": 458,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_add_module_alias_simple": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_add_module_complex": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_add_module_simple": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_add_object_alias_modify_simple": {
  "lineno": 333,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_add_object_alias_simple": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_add_object_modify_complex": {
  "lineno": 359,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_add_object_modify_simple": {
  "lineno": 307,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_add_object_relative_modify_simple": {
  "lineno": 592,
  "symbols_in_volume": [
   "libcst.codemod.CodemodContext"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_add_object_simple": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_dont_add_module_alias_simple": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_dont_add_module_simple": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_dont_add_object_alias_simple": {
  "lineno": 281,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_dont_add_object_simple": {
  "lineno": 255,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_dont_add_relative_object_simple": {
  "lineno": 561,
  "symbols_in_volume": [
   "libcst.codemod.CodemodContext"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_import_in_docstring_module": {
  "lineno": 641,
  "symbols_in_volume": [
   "libcst.codemod.CodemodContext"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_import_order": {
  "lineno": 623,
  "symbols_in_volume": [
   "libcst.codemod.CodemodContext"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_noop": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_strict_module_no_imports": {
  "lineno": 517,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_add_imports.TestAddImportsCodemod.test_strict_module_with_imports": {
  "lineno": 537,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_apply_type_annotations": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.visitors.tests.test_apply_type_annotations.TestApplyAnnotationsVisitor": {
  "lineno": 18,
  "symbols_in_volume": [
   "libcst.codemod.Codemod",
   "libcst.codemod.CodemodTest",
   "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor",
   "typing.Type"
  ],
  "type": "class"
 },
 "libcst.codemod.visitors.tests.test_apply_type_annotations.TestApplyAnnotationsVisitor.test_annotate_functions": {
  "lineno": 21,
  "symbols_in_volume": [
   "libcst.codemod.CodemodContext",
   "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor.store_stub_in_context",
   "libcst.parse_module",
   "libcst.testing.utils.data_provider",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_apply_type_annotations.TestApplyAnnotationsVisitor.test_annotate_functions_py38": {
  "lineno": 663,
  "symbols_in_volume": [
   "libcst.codemod.CodemodContext",
   "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor.store_stub_in_context",
   "libcst.parse_module",
   "libcst.testing.utils.data_provider",
   "sys.version_info",
   "textwrap.dedent",
   "unittest.skipIf"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_apply_type_annotations.TestApplyAnnotationsVisitor.test_annotate_functions_with_existing_annotations": {
  "lineno": 713,
  "symbols_in_volume": [
   "libcst.codemod.CodemodContext",
   "libcst.codemod.visitors._apply_type_annotations.ApplyTypeAnnotationsVisitor.store_stub_in_context",
   "libcst.parse_module",
   "libcst.testing.utils.data_provider",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_comments": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.visitors.tests.test_gather_comments.TestGatherCommentsVisitor": {
  "lineno": 12,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.codemod.visitors.tests.test_gather_comments.TestGatherCommentsVisitor.gather_comments": {
  "lineno": 13,
  "symbols_in_volume": [
   "libcst.MetadataWrapper",
   "libcst.codemod.CodemodContext",
   "libcst.codemod.CodemodTest.make_fixture_data",
   "libcst.codemod.visitors.GatherCommentsVisitor",
   "libcst.codemod.visitors.GatherCommentsVisitor.METADATA_DEPENDENCIES",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_comments.TestGatherCommentsVisitor.test_no_comments": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_comments.TestGatherCommentsVisitor.test_noqa_comments": {
  "lineno": 31,
  "symbols_in_volume": [
   "libcst.Comment"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_exports": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.visitors.tests.test_gather_exports.TestGatherExportsVisitor": {
  "lineno": 12,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.codemod.visitors.tests.test_gather_exports.TestGatherExportsVisitor.gather_exports": {
  "lineno": 13,
  "symbols_in_volume": [
   "libcst.codemod.CodemodContext",
   "libcst.codemod.CodemodTest.make_fixture_data",
   "libcst.codemod.visitors.GatherExportsVisitor",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_exports.TestGatherExportsVisitor.test_gather_exports_ignore_invalid_1": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_exports.TestGatherExportsVisitor.test_gather_exports_ignore_invalid_2": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_exports.TestGatherExportsVisitor.test_gather_exports_ignore_valid_1": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_exports.TestGatherExportsVisitor.test_gather_exports_ignore_valid_2": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_exports.TestGatherExportsVisitor.test_gather_exports_ignore_valid_3": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_exports.TestGatherExportsVisitor.test_gather_exports_simple": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_exports.TestGatherExportsVisitor.test_gather_exports_simple_annotated": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_exports.TestGatherExportsVisitor.test_gather_exports_simple_set": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_exports.TestGatherExportsVisitor.test_gather_exports_simple_tuple": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_exports.TestGatherExportsVisitor.test_gather_noop": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_imports": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.visitors.tests.test_gather_imports.TestGatherImportsVisitor": {
  "lineno": 12,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.codemod.visitors.tests.test_gather_imports.TestGatherImportsVisitor.gather_imports": {
  "lineno": 13,
  "symbols_in_volume": [
   "libcst.codemod.CodemodContext",
   "libcst.codemod.CodemodTest.make_fixture_data",
   "libcst.codemod.visitors.GatherImportsVisitor",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_imports.TestGatherImportsVisitor.test_gather_aliased_module": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_imports.TestGatherImportsVisitor.test_gather_aliased_object": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_imports.TestGatherImportsVisitor.test_gather_aliased_object_disjoint": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_imports.TestGatherImportsVisitor.test_gather_aliased_object_mixed": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_imports.TestGatherImportsVisitor.test_gather_module": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_imports.TestGatherImportsVisitor.test_gather_nothing": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_imports.TestGatherImportsVisitor.test_gather_object": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_imports.TestGatherImportsVisitor.test_gather_object_disjoint": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_imports.TestGatherImportsVisitor.test_gather_relative_object": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_string_annotation_names": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.visitors.tests.test_gather_string_annotation_names.TestGatherNamesFromStringAnnotationsVisitor": {
  "lineno": 12,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.codemod.visitors.tests.test_gather_string_annotation_names.TestGatherNamesFromStringAnnotationsVisitor.gather_names": {
  "lineno": 13,
  "symbols_in_volume": [
   "libcst.MetadataWrapper",
   "libcst.codemod.CodemodContext",
   "libcst.codemod.CodemodTest.make_fixture_data",
   "libcst.codemod.visitors.GatherNamesFromStringAnnotationsVisitor",
   "libcst.codemod.visitors.GatherNamesFromStringAnnotationsVisitor.METADATA_DEPENDENCIES",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_string_annotation_names.TestGatherNamesFromStringAnnotationsVisitor.test_complex": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_string_annotation_names.TestGatherNamesFromStringAnnotationsVisitor.test_concatenated_string_annotations": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_string_annotation_names.TestGatherNamesFromStringAnnotationsVisitor.test_dotted_names": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_string_annotation_names.TestGatherNamesFromStringAnnotationsVisitor.test_no_annotations": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_string_annotation_names.TestGatherNamesFromStringAnnotationsVisitor.test_simple_string_annotations": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_string_annotation_names.TestGatherNamesFromStringAnnotationsVisitor.test_typevars": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_unused_imports": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.visitors.tests.test_gather_unused_imports.TestGatherUnusedImportsVisitor": {
  "lineno": 14,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.codemod.visitors.tests.test_gather_unused_imports.TestGatherUnusedImportsVisitor.gather_imports": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst.MetadataWrapper",
   "libcst.codemod.CodemodContext",
   "libcst.codemod.CodemodTest.make_fixture_data",
   "libcst.codemod.visitors.GatherUnusedImportsVisitor",
   "libcst.codemod.visitors.GatherUnusedImportsVisitor.METADATA_DEPENDENCIES",
   "libcst.parse_module",
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_unused_imports.TestGatherUnusedImportsVisitor.test_alias": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_unused_imports.TestGatherUnusedImportsVisitor.test_dotted_imports": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_unused_imports.TestGatherUnusedImportsVisitor.test_exports": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_unused_imports.TestGatherUnusedImportsVisitor.test_future": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_unused_imports.TestGatherUnusedImportsVisitor.test_import_complex": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_unused_imports.TestGatherUnusedImportsVisitor.test_import_from_complex": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_unused_imports.TestGatherUnusedImportsVisitor.test_no_imports": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_unused_imports.TestGatherUnusedImportsVisitor.test_string_annotation": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_gather_unused_imports.TestGatherUnusedImportsVisitor.test_typevars": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod": {
  "lineno": 19,
  "symbols_in_volume": [
   "libcst.codemod.CodemodTest",
   "libcst.codemod.visitors.RemoveImportsVisitor"
  ],
  "type": "class"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_dont_remove_import_alias_simple": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_dont_remove_import_simple": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_dont_remove_import_simple_wrong_alias": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_dont_remove_import_wrong_alias_simple": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_dont_remove_importfrom_alias_simple": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_dont_remove_importfrom_alias_simple_wrong_alias": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_dont_remove_importfrom_simple": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_dont_remove_importfrom_simple_wrong_alias": {
  "lineno": 255,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_dont_remove_inuse_importfrom_relative": {
  "lineno": 325,
  "symbols_in_volume": [
   "libcst.codemod.CodemodContext"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_dont_remove_wrong_importfrom_relative": {
  "lineno": 352,
  "symbols_in_volume": [
   "libcst.codemod.CodemodContext"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_noop": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_comma": {
  "lineno": 801,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_fromimport_complex": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_alias_simple": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_by_node_simple": {
  "lineno": 522,
  "symbols_in_volume": [
   "libcst.codemod.CodemodContext",
   "libcst.parse_module",
   "libcst.testing.utils.data_provider"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_by_node_simple.RemoveBarTransformer": {
  "lineno": 653,
  "symbols_in_volume": [
   "libcst.codemod.VisitorBasedCodemodCommand",
   "libcst.metadata.QualifiedNameProvider",
   "libcst.metadata.ScopeProvider"
  ],
  "type": "class"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_by_node_simple.RemoveBarTransformer._leave_foo_bar": {
  "lineno": 657,
  "symbols_in_volume": [
   "libcst.RemovalSentinel",
   "libcst.RemoveFromParent",
   "libcst.SimpleStatementLine",
   "libcst.codemod.visitors.RemoveImportsVisitor.remove_unused_import_by_node",
   "libcst.matchers.Call",
   "libcst.matchers.Expr",
   "libcst.matchers.MatchMetadata",
   "libcst.matchers.SimpleStatementLine",
   "libcst.matchers.leave",
   "libcst.metadata.QualifiedName",
   "libcst.metadata.QualifiedNameProvider",
   "libcst.metadata.QualifiedNameSource.IMPORT"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_complex": {
  "lineno": 379,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_from_node": {
  "lineno": 691,
  "symbols_in_volume": [
   "libcst.codemod.CodemodContext",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_from_node.RemoveImportTransformer": {
  "lineno": 717,
  "symbols_in_volume": [
   "libcst.codemod.VisitorBasedCodemodCommand",
   "libcst.metadata.QualifiedNameProvider",
   "libcst.metadata.ScopeProvider"
  ],
  "type": "class"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_from_node.RemoveImportTransformer.visit_ImportFrom": {
  "lineno": 721,
  "symbols_in_volume": [
   "libcst.ImportFrom",
   "libcst.codemod.visitors.RemoveImportsVisitor.remove_unused_import_by_node"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_multiple_assignments": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_node": {
  "lineno": 730,
  "symbols_in_volume": [
   "libcst.codemod.CodemodContext",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_node.RemoveImportTransformer": {
  "lineno": 756,
  "symbols_in_volume": [
   "libcst.codemod.VisitorBasedCodemodCommand",
   "libcst.metadata.QualifiedNameProvider",
   "libcst.metadata.ScopeProvider"
  ],
  "type": "class"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_node.RemoveImportTransformer.visit_Import": {
  "lineno": 760,
  "symbols_in_volume": [
   "libcst.Import",
   "libcst.codemod.visitors.RemoveImportsVisitor.remove_unused_import_by_node"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_simple": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_with_all": {
  "lineno": 769,
  "symbols_in_volume": [
   "libcst.codemod.CodemodContext",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_with_all.RemoveImportTransformer": {
  "lineno": 788,
  "symbols_in_volume": [
   "libcst.codemod.VisitorBasedCodemodCommand",
   "libcst.metadata.QualifiedNameProvider",
   "libcst.metadata.ScopeProvider"
  ],
  "type": "class"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_import_with_all.RemoveImportTransformer.visit_ImportFrom": {
  "lineno": 792,
  "symbols_in_volume": [
   "libcst.ImportFrom",
   "libcst.codemod.visitors.RemoveImportsVisitor.remove_unused_import_by_node"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_importfrom_alias_simple": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_importfrom_relative": {
  "lineno": 299,
  "symbols_in_volume": [
   "libcst.codemod.CodemodContext"
  ],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_importfrom_simple": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.codemod.visitors.tests.test_remove_imports.TestRemoveImportsCodemod.test_remove_multiple_imports": {
  "lineno": 486,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.helpers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.helpers._statement": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.helpers._statement.get_absolute_module_for_import": {
  "lineno": 12,
  "symbols_in_volume": [
   "libcst.ImportFrom",
   "libcst.helpers.expression.get_full_name_for_node",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.helpers._statement.get_absolute_module_for_import_or_raise": {
  "lineno": 46,
  "symbols_in_volume": [
   "libcst.ImportFrom",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.helpers._template": {
  "lineno": null,
  "symbols_in_volume": [
   "libcst.Annotation",
   "libcst.Arg",
   "libcst.AssignTarget",
   "libcst.BaseExpression",
   "libcst.BaseSlice",
   "libcst.BaseSmallStatement",
   "libcst.BaseStatement",
   "libcst.BaseSuite",
   "libcst.Decorator",
   "libcst.Param",
   "libcst.Parameters",
   "libcst.PartialParserConfig",
   "libcst.SubscriptElement",
   "typing.Union"
  ],
  "type": "module"
 },
 "libcst.helpers._template.TemplateChecker": {
  "lineno": 331,
  "symbols_in_volume": [
   "libcst.CSTVisitor"
  ],
  "type": "class"
 },
 "libcst.helpers._template.TemplateChecker.__init__": {
  "lineno": 332,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst.helpers._template.TemplateChecker.visit_Name": {
  "lineno": 335,
  "symbols_in_volume": [
   "libcst.Name"
  ],
  "type": "function"
 },
 "libcst.helpers._template.TemplateTransformer": {
  "lineno": 61,
  "symbols_in_volume": [
   "libcst.CSTTransformer"
  ],
  "type": "class"
 },
 "libcst.helpers._template.TemplateTransformer.__init__": {
  "lineno": 62,
  "symbols_in_volume": [
   "libcst.Annotation",
   "libcst.Arg",
   "libcst.AssignTarget",
   "libcst.BaseExpression",
   "libcst.BaseSlice",
   "libcst.BaseSmallStatement",
   "libcst.BaseStatement",
   "libcst.BaseSuite",
   "libcst.Decorator",
   "libcst.Param",
   "libcst.Parameters",
   "libcst.SubscriptElement",
   "typing.Dict",
   "typing.Mapping"
  ],
  "type": "function"
 },
 "libcst.helpers._template.TemplateTransformer.leave_Annotation": {
  "lineno": 159,
  "symbols_in_volume": [
   "libcst.Annotation",
   "libcst.Name"
  ],
  "type": "function"
 },
 "libcst.helpers._template.TemplateTransformer.leave_Arg": {
  "lineno": 209,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.Name"
  ],
  "type": "function"
 },
 "libcst.helpers._template.TemplateTransformer.leave_AssignTarget": {
  "lineno": 170,
  "symbols_in_volume": [
   "libcst.AssignTarget",
   "libcst.Name"
  ],
  "type": "function"
 },
 "libcst.helpers._template.TemplateTransformer.leave_Decorator": {
  "lineno": 319,
  "symbols_in_volume": [
   "libcst.Decorator",
   "libcst.Name"
  ],
  "type": "function"
 },
 "libcst.helpers._template.TemplateTransformer.leave_Expr": {
  "lineno": 237,
  "symbols_in_volume": [
   "libcst.BaseSmallStatement",
   "libcst.Expr",
   "libcst.Name"
  ],
  "type": "function"
 },
 "libcst.helpers._template.TemplateTransformer.leave_IndentedBlock": {
  "lineno": 269,
  "symbols_in_volume": [
   "libcst.BaseSuite",
   "libcst.Expr",
   "libcst.IndentedBlock",
   "libcst.Name",
   "libcst.SimpleStatementLine"
  ],
  "type": "function"
 },
 "libcst.helpers._template.TemplateTransformer.leave_Index": {
  "lineno": 291,
  "symbols_in_volume": [
   "libcst.BaseSlice",
   "libcst.Index",
   "libcst.Name"
  ],
  "type": "function"
 },
 "libcst.helpers._template.TemplateTransformer.leave_Name": {
  "lineno": 150,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.Name"
  ],
  "type": "function"
 },
 "libcst.helpers._template.TemplateTransformer.leave_Param": {
  "lineno": 181,
  "symbols_in_volume": [
   "libcst.Param"
  ],
  "type": "function"
 },
 "libcst.helpers._template.TemplateTransformer.leave_Parameters": {
  "lineno": 189,
  "symbols_in_volume": [
   "libcst.MaybeSentinel.DEFAULT",
   "libcst.Parameters"
  ],
  "type": "function"
 },
 "libcst.helpers._template.TemplateTransformer.leave_SimpleStatementLine": {
  "lineno": 218,
  "symbols_in_volume": [
   "libcst.BaseStatement",
   "libcst.Expr",
   "libcst.Name",
   "libcst.SimpleStatementLine"
  ],
  "type": "function"
 },
 "libcst.helpers._template.TemplateTransformer.leave_SimpleStatementSuite": {
  "lineno": 250,
  "symbols_in_volume": [
   "libcst.BaseSuite",
   "libcst.Expr",
   "libcst.Name",
   "libcst.SimpleStatementSuite"
  ],
  "type": "function"
 },
 "libcst.helpers._template.TemplateTransformer.leave_SubscriptElement": {
  "lineno": 302,
  "symbols_in_volume": [
   "libcst.Index",
   "libcst.Name",
   "libcst.SubscriptElement"
  ],
  "type": "function"
 },
 "libcst.helpers._template.mangle_template": {
  "lineno": 47,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst.helpers._template.mangled_name": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.helpers._template.parse_template_expression": {
  "lineno": 418,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.PartialParserConfig",
   "libcst.helpers.common.ensure_type",
   "libcst.parse_expression"
  ],
  "type": "function"
 },
 "libcst.helpers._template.parse_template_module": {
  "lineno": 351,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.PartialParserConfig",
   "libcst.helpers.common.ensure_type",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.helpers._template.parse_template_statement": {
  "lineno": 383,
  "symbols_in_volume": [
   "libcst.BaseCompoundStatement",
   "libcst.PartialParserConfig",
   "libcst.SimpleStatementLine",
   "libcst.parse_statement",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.helpers._template.unmangle_nodes": {
  "lineno": 341,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.helpers.common.ensure_type",
   "typing.Mapping"
  ],
  "type": "function"
 },
 "libcst.helpers._template.unmangled_name": {
  "lineno": 37,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.helpers.common": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.helpers.common.ensure_type": {
  "lineno": 11,
  "symbols_in_volume": [
   "libcst._types.CSTNodeT",
   "typing.Type"
  ],
  "type": "function"
 },
 "libcst.helpers.expression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.helpers.expression.get_full_name_for_node": {
  "lineno": 11,
  "symbols_in_volume": [
   "libcst.Attribute",
   "libcst.CSTNode",
   "libcst.Call",
   "libcst.ClassDef",
   "libcst.Decorator",
   "libcst.FunctionDef",
   "libcst.Name",
   "libcst.Subscript",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.helpers.expression.get_full_name_for_node_or_raise": {
  "lineno": 34,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.helpers.module": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.helpers.module.insert_header_comments": {
  "lineno": 12,
  "symbols_in_volume": [
   "itertools.islice",
   "libcst.Comment",
   "libcst.EmptyLine",
   "libcst.Module",
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.helpers.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.helpers.tests.test_expression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.helpers.tests.test_expression.ExpressionTest": {
  "lineno": 18,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.helpers.tests.test_expression.ExpressionTest.test_complex_evaluated_value": {
  "lineno": 65,
  "symbols_in_volume": [
   "ast.literal_eval",
   "libcst.Imaginary",
   "libcst.helpers.ensure_type",
   "libcst.parse_expression"
  ],
  "type": "function"
 },
 "libcst.helpers.tests.test_expression.ExpressionTest.test_concatenated_string_evaluated_value": {
  "lineno": 71,
  "symbols_in_volume": [
   "libcst.ConcatenatedString",
   "libcst.helpers.ensure_type",
   "libcst.parse_expression"
  ],
  "type": "function"
 },
 "libcst.helpers.tests.test_expression.ExpressionTest.test_float_evaluated_value": {
  "lineno": 59,
  "symbols_in_volume": [
   "ast.literal_eval",
   "libcst.Float",
   "libcst.helpers.ensure_type",
   "libcst.parse_expression"
  ],
  "type": "function"
 },
 "libcst.helpers.tests.test_expression.ExpressionTest.test_get_full_name_for_expression": {
  "lineno": 19,
  "symbols_in_volume": [
   "libcst.Attribute",
   "libcst.CSTNode",
   "libcst.Decorator",
   "libcst.Name",
   "libcst.helpers.ensure_type",
   "libcst.helpers.get_full_name_for_node",
   "libcst.helpers.get_full_name_for_node_or_raise",
   "libcst.parse_expression",
   "libcst.parse_statement",
   "libcst.testing.utils.data_provider",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.helpers.tests.test_expression.ExpressionTest.test_integer_evaluated_value": {
  "lineno": 53,
  "symbols_in_volume": [
   "ast.literal_eval",
   "libcst.Integer",
   "libcst.helpers.ensure_type",
   "libcst.parse_expression"
  ],
  "type": "function"
 },
 "libcst.helpers.tests.test_expression.ExpressionTest.test_simplestring_evaluated_value": {
  "lineno": 47,
  "symbols_in_volume": [
   "ast.literal_eval",
   "libcst.SimpleString",
   "libcst.helpers.ensure_type",
   "libcst.parse_expression"
  ],
  "type": "function"
 },
 "libcst.helpers.tests.test_module": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.helpers.tests.test_module.ModuleTest": {
  "lineno": 11,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.helpers.tests.test_module.ModuleTest.test_insert_header_comments": {
  "lineno": 12,
  "symbols_in_volume": [
   "libcst.helpers.insert_header_comments",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.helpers.tests.test_statement": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.helpers.tests.test_statement.StatementTest": {
  "lineno": 17,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.helpers.tests.test_statement.StatementTest.test_get_absolute_module": {
  "lineno": 18,
  "symbols_in_volume": [
   "libcst.ImportFrom",
   "libcst.SimpleStatementLine",
   "libcst.helpers.ensure_type",
   "libcst.helpers.get_absolute_module_for_import",
   "libcst.helpers.get_absolute_module_for_import_or_raise",
   "libcst.parse_statement",
   "libcst.testing.utils.data_provider",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.helpers.tests.test_statement.StatementTest.test_importalias_helpers": {
  "lineno": 53,
  "symbols_in_volume": [
   "libcst.AsName",
   "libcst.Attribute",
   "libcst.ImportAlias",
   "libcst.Name",
   "libcst.testing.utils.data_provider",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.helpers.tests.test_template": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.helpers.tests.test_template.TemplateTest": {
  "lineno": 19,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.helpers.tests.test_template.TemplateTest.code": {
  "lineno": 31,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Module"
  ],
  "type": "function"
 },
 "libcst.helpers.tests.test_template.TemplateTest.dedent": {
  "lineno": 20,
  "symbols_in_volume": [
   "os.linesep",
   "os.linesep.join",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst.helpers.tests.test_template.TemplateTest.test_annotation": {
  "lineno": 86,
  "symbols_in_volume": [
   "libcst.Annotation",
   "libcst.Integer",
   "libcst.Name",
   "libcst.helpers.parse_template_statement"
  ],
  "type": "function"
 },
 "libcst.helpers.tests.test_template.TemplateTest.test_args": {
  "lineno": 166,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.Name",
   "libcst.helpers.parse_template_expression"
  ],
  "type": "function"
 },
 "libcst.helpers.tests.test_template.TemplateTest.test_assign_target": {
  "lineno": 105,
  "symbols_in_volume": [
   "libcst.AssignTarget",
   "libcst.Integer",
   "libcst.Name",
   "libcst.helpers.parse_template_statement"
  ],
  "type": "function"
 },
 "libcst.helpers.tests.test_template.TemplateTest.test_decorators": {
  "lineno": 309,
  "symbols_in_volume": [
   "libcst.Decorator",
   "libcst.Name",
   "libcst.helpers.parse_template_statement"
  ],
  "type": "function"
 },
 "libcst.helpers.tests.test_template.TemplateTest.test_parameters": {
  "lineno": 128,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.Param",
   "libcst.Parameters",
   "libcst.helpers.parse_template_statement"
  ],
  "type": "function"
 },
 "libcst.helpers.tests.test_template.TemplateTest.test_simple_expression": {
  "lineno": 69,
  "symbols_in_volume": [
   "libcst.BinaryOperation",
   "libcst.LeftParen",
   "libcst.Multiply",
   "libcst.Name",
   "libcst.RightParen",
   "libcst.helpers.parse_template_expression"
  ],
  "type": "function"
 },
 "libcst.helpers.tests.test_template.TemplateTest.test_simple_module": {
  "lineno": 34,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.helpers.parse_template_module"
  ],
  "type": "function"
 },
 "libcst.helpers.tests.test_template.TemplateTest.test_simple_statement": {
  "lineno": 59,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.SimpleString",
   "libcst.helpers.parse_template_statement"
  ],
  "type": "function"
 },
 "libcst.helpers.tests.test_template.TemplateTest.test_statement": {
  "lineno": 185,
  "symbols_in_volume": [
   "libcst.Call",
   "libcst.Expr",
   "libcst.If",
   "libcst.Name",
   "libcst.Pass",
   "libcst.SimpleStatementLine",
   "libcst.SimpleStatementSuite",
   "libcst.helpers.parse_template_module"
  ],
  "type": "function"
 },
 "libcst.helpers.tests.test_template.TemplateTest.test_subscript": {
  "lineno": 235,
  "symbols_in_volume": [
   "libcst.Index",
   "libcst.Integer",
   "libcst.Name",
   "libcst.Slice",
   "libcst.SubscriptElement",
   "libcst.helpers.parse_template_expression"
  ],
  "type": "function"
 },
 "libcst.helpers.tests.test_template.TemplateTest.test_suite": {
  "lineno": 200,
  "symbols_in_volume": [
   "libcst.IndentedBlock",
   "libcst.Pass",
   "libcst.SimpleStatementLine",
   "libcst.SimpleStatementSuite",
   "libcst.helpers.parse_template_module"
  ],
  "type": "function"
 },
 "libcst.matchers": {
  "lineno": null,
  "symbols_in_volume": [
   "libcst.Annotation",
   "libcst.Arg",
   "libcst.AsName",
   "libcst.AssignEqual",
   "libcst.AssignTarget",
   "libcst.Asynchronous",
   "libcst.Attribute",
   "libcst.BaseAssignTargetExpression",
   "libcst.BaseAugOp",
   "libcst.BaseBinaryOp",
   "libcst.BaseBooleanOp",
   "libcst.BaseCompOp",
   "libcst.BaseCompoundStatement",
   "libcst.BaseDelTargetExpression",
   "libcst.BaseDictElement",
   "libcst.BaseElement",
   "libcst.BaseExpression",
   "libcst.BaseFormattedStringContent",
   "libcst.BaseParenthesizableWhitespace",
   "libcst.BaseSlice",
   "libcst.BaseSmallStatement",
   "libcst.BaseStatement",
   "libcst.BaseSuite",
   "libcst.BaseUnaryOp",
   "libcst.Call",
   "libcst.Colon",
   "libcst.Comma",
   "libcst.Comment",
   "libcst.CompFor",
   "libcst.CompIf",
   "libcst.ComparisonTarget",
   "libcst.ConcatenatedString",
   "libcst.Decorator",
   "libcst.Dot",
   "libcst.Else",
   "libcst.EmptyLine",
   "libcst.ExceptHandler",
   "libcst.Finally",
   "libcst.FormattedString",
   "libcst.From",
   "libcst.If",
   "libcst.ImportAlias",
   "libcst.LeftCurlyBrace",
   "libcst.LeftParen",
   "libcst.LeftSquareBracket",
   "libcst.List",
   "libcst.Name",
   "libcst.NameItem",
   "libcst.Newline",
   "libcst.Param",
   "libcst.ParamSlash",
   "libcst.ParamStar",
   "libcst.Parameters",
   "libcst.RightCurlyBrace",
   "libcst.RightParen",
   "libcst.RightSquareBracket",
   "libcst.Semicolon",
   "libcst.SimpleStatementLine",
   "libcst.SimpleString",
   "libcst.SimpleWhitespace",
   "libcst.SubscriptElement",
   "libcst.TrailingWhitespace",
   "libcst.Tuple",
   "libcst.WithItem",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.MatchMetadata",
   "libcst.matchers._matcher_base.MatchMetadataIfTrue",
   "typing.Callable",
   "typing.Union"
  ],
  "type": "module"
 },
 "libcst.matchers.Add": {
  "lineno": 155,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.AddAssign": {
  "lineno": 177,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.And": {
  "lineno": 199,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.AnnAssign": {
  "lineno": 243,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Annotation": {
  "lineno": 283,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Arg": {
  "lineno": 322,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Union",
   "typing_extensions.Literal"
  ],
  "type": "class"
 },
 "libcst.matchers.AsName": {
  "lineno": 394,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Assert": {
  "lineno": 429,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Assign": {
  "lineno": 471,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.AssignTarget",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.AssignEqual": {
  "lineno": 573,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.AssignTarget": {
  "lineno": 602,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Asynchronous": {
  "lineno": 630,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Attribute": {
  "lineno": 658,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.LeftParen",
   "libcst.RightParen",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.AugAssign": {
  "lineno": 847,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Await": {
  "lineno": 881,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.LeftParen",
   "libcst.RightParen",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.BaseAssignTargetExpression": {
  "lineno": 45,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst.matchers.BaseAugOp": {
  "lineno": 49,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst.matchers.BaseBinaryOp": {
  "lineno": 53,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst.matchers.BaseBooleanOp": {
  "lineno": 57,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst.matchers.BaseComp": {
  "lineno": 61,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst.matchers.BaseCompOp": {
  "lineno": 65,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst.matchers.BaseCompoundStatement": {
  "lineno": 69,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst.matchers.BaseDelTargetExpression": {
  "lineno": 73,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst.matchers.BaseDict": {
  "lineno": 77,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst.matchers.BaseDictElement": {
  "lineno": 81,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst.matchers.BaseElement": {
  "lineno": 85,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst.matchers.BaseExpression": {
  "lineno": 89,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst.matchers.BaseFormattedStringContent": {
  "lineno": 93,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst.matchers.BaseList": {
  "lineno": 97,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst.matchers.BaseMetadataProvider": {
  "lineno": 101,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst.matchers.BaseNumber": {
  "lineno": 105,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst.matchers.BaseParenthesizableWhitespace": {
  "lineno": 109,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst.matchers.BaseSet": {
  "lineno": 113,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst.matchers.BaseSimpleComp": {
  "lineno": 117,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst.matchers.BaseSlice": {
  "lineno": 121,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst.matchers.BaseSmallStatement": {
  "lineno": 125,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst.matchers.BaseStatement": {
  "lineno": 129,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst.matchers.BaseString": {
  "lineno": 133,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst.matchers.BaseSuite": {
  "lineno": 137,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst.matchers.BaseUnaryOp": {
  "lineno": 141,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst.matchers.BinaryOperation": {
  "lineno": 1068,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.LeftParen",
   "libcst.RightParen",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.BitAnd": {
  "lineno": 1256,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.BitAndAssign": {
  "lineno": 1278,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.BitInvert": {
  "lineno": 1300,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.BitOr": {
  "lineno": 1316,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.BitOrAssign": {
  "lineno": 1338,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.BitXor": {
  "lineno": 1360,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.BitXorAssign": {
  "lineno": 1382,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.BooleanOperation": {
  "lineno": 1409,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.LeftParen",
   "libcst.RightParen",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Break": {
  "lineno": 1597,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Call": {
  "lineno": 1616,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.Arg",
   "libcst.LeftParen",
   "libcst.RightParen",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.ClassDef": {
  "lineno": 1887,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.Arg",
   "libcst.Decorator",
   "libcst.EmptyLine",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Colon": {
  "lineno": 2320,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Comma": {
  "lineno": 2342,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Comment": {
  "lineno": 2367,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.CompFor": {
  "lineno": 2397,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.CompIf",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.CompIf": {
  "lineno": 2535,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Comparison": {
  "lineno": 2570,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.ComparisonTarget",
   "libcst.LeftParen",
   "libcst.RightParen",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.ComparisonTarget": {
  "lineno": 2831,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.ConcatenatedString": {
  "lineno": 2872,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.LeftParen",
   "libcst.RightParen",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Continue": {
  "lineno": 3060,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Decorator": {
  "lineno": 3090,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.EmptyLine",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Del": {
  "lineno": 3205,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Dict": {
  "lineno": 3250,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.BaseDictElement",
   "libcst.LeftParen",
   "libcst.RightParen",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.DictComp": {
  "lineno": 3517,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.LeftParen",
   "libcst.RightParen",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.DictElement": {
  "lineno": 3729,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Divide": {
  "lineno": 3766,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.DivideAssign": {
  "lineno": 3788,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Dot": {
  "lineno": 3810,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Element": {
  "lineno": 3832,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Ellipsis": {
  "lineno": 3851,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.LeftParen",
   "libcst.RightParen",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Else": {
  "lineno": 4021,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.EmptyLine",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.EmptyLine": {
  "lineno": 4135,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Equal": {
  "lineno": 4166,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.ExceptHandler": {
  "lineno": 4196,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.EmptyLine",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Expr": {
  "lineno": 4316,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Finally": {
  "lineno": 4338,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.EmptyLine",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Float": {
  "lineno": 4440,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.LeftParen",
   "libcst.RightParen",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.FloorDivide": {
  "lineno": 4613,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.FloorDivideAssign": {
  "lineno": 4635,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.For": {
  "lineno": 4665,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.EmptyLine",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.FormattedString": {
  "lineno": 4816,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.BaseFormattedStringContent",
   "libcst.LeftParen",
   "libcst.RightParen",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union",
   "typing_extensions.Literal"
  ],
  "type": "class"
 },
 "libcst.matchers.FormattedStringExpression": {
  "lineno": 5100,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.BaseFormattedStringContent",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.FormattedStringText": {
  "lineno": 5468,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.From": {
  "lineno": 5481,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.FunctionDef": {
  "lineno": 5520,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.Decorator",
   "libcst.EmptyLine",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.GeneratorExp": {
  "lineno": 5821,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.LeftParen",
   "libcst.RightParen",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Global": {
  "lineno": 6008,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.NameItem",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.GreaterThan": {
  "lineno": 6110,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.GreaterThanEqual": {
  "lineno": 6132,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.If": {
  "lineno": 6163,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.EmptyLine",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.IfExp": {
  "lineno": 6283,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.LeftParen",
   "libcst.RightParen",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Imaginary": {
  "lineno": 6495,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.LeftParen",
   "libcst.RightParen",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Import": {
  "lineno": 6673,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.ImportAlias",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.ImportAlias": {
  "lineno": 6783,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.ImportFrom": {
  "lineno": 6829,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.Dot",
   "libcst.ImportAlias",
   "libcst.ImportStar",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.ImportStar": {
  "lineno": 7241,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.In": {
  "lineno": 7251,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.IndentedBlock": {
  "lineno": 7278,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.BaseStatement",
   "libcst.EmptyLine",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Index": {
  "lineno": 7460,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Integer": {
  "lineno": 7476,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.LeftParen",
   "libcst.RightParen",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Is": {
  "lineno": 7649,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.IsNot": {
  "lineno": 7671,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Lambda": {
  "lineno": 7704,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.LeftParen",
   "libcst.RightParen",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.LeftCurlyBrace": {
  "lineno": 7895,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.LeftParen": {
  "lineno": 7911,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.LeftShift": {
  "lineno": 7927,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.LeftShiftAssign": {
  "lineno": 7949,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.LeftSquareBracket": {
  "lineno": 7971,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.LessThan": {
  "lineno": 7987,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.LessThanEqual": {
  "lineno": 8009,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.List": {
  "lineno": 8046,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.BaseElement",
   "libcst.LeftParen",
   "libcst.RightParen",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.ListComp": {
  "lineno": 8314,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.LeftParen",
   "libcst.RightParen",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.MatrixMultiply": {
  "lineno": 8508,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.MatrixMultiplyAssign": {
  "lineno": 8530,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Minus": {
  "lineno": 8552,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Module": {
  "lineno": 8578,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.BaseCompoundStatement",
   "libcst.EmptyLine",
   "libcst.SimpleStatementLine",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Modulo": {
  "lineno": 8926,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.ModuloAssign": {
  "lineno": 8948,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Multiply": {
  "lineno": 8970,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.MultiplyAssign": {
  "lineno": 8992,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Name": {
  "lineno": 9014,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.LeftParen",
   "libcst.RightParen",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.NameItem": {
  "lineno": 9189,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.NamedExpr": {
  "lineno": 9205,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.LeftParen",
   "libcst.RightParen",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Newline": {
  "lineno": 9399,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Nonlocal": {
  "lineno": 9415,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.NameItem",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Not": {
  "lineno": 9517,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.NotEqual": {
  "lineno": 9533,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.NotIn": {
  "lineno": 9558,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Or": {
  "lineno": 9586,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Param": {
  "lineno": 9608,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.ParamSlash": {
  "lineno": 9657,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.ParamStar": {
  "lineno": 9670,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Parameters": {
  "lineno": 9703,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.Param",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.ParenthesizedWhitespace": {
  "lineno": 9971,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.EmptyLine",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Pass": {
  "lineno": 10076,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Plus": {
  "lineno": 10092,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Power": {
  "lineno": 10108,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.PowerAssign": {
  "lineno": 10130,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Raise": {
  "lineno": 10160,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Return": {
  "lineno": 10194,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.RightCurlyBrace": {
  "lineno": 10222,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.RightParen": {
  "lineno": 10238,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.RightShift": {
  "lineno": 10254,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.RightShiftAssign": {
  "lineno": 10276,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.RightSquareBracket": {
  "lineno": 10298,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Semicolon": {
  "lineno": 10314,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Set": {
  "lineno": 10336,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.BaseElement",
   "libcst.LeftParen",
   "libcst.RightParen",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.SetComp": {
  "lineno": 10598,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.LeftParen",
   "libcst.RightParen",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.SimpleStatementLine": {
  "lineno": 10799,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.BaseSmallStatement",
   "libcst.EmptyLine",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.SimpleStatementSuite": {
  "lineno": 10975,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.BaseSmallStatement",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.SimpleString": {
  "lineno": 11077,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.LeftParen",
   "libcst.RightParen",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.SimpleWhitespace": {
  "lineno": 11250,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Slice": {
  "lineno": 11263,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.StarredDictElement": {
  "lineno": 11297,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.StarredElement": {
  "lineno": 11322,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.LeftParen",
   "libcst.RightParen",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Subscript": {
  "lineno": 11514,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.LeftParen",
   "libcst.RightParen",
   "libcst.SubscriptElement",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.SubscriptElement": {
  "lineno": 11795,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Subtract": {
  "lineno": 11814,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.SubtractAssign": {
  "lineno": 11836,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.TrailingWhitespace": {
  "lineno": 11858,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Try": {
  "lineno": 11897,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.EmptyLine",
   "libcst.ExceptHandler",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Tuple": {
  "lineno": 12091,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.BaseElement",
   "libcst.LeftParen",
   "libcst.RightParen",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.UnaryOperation": {
  "lineno": 12348,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.LeftParen",
   "libcst.RightParen",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.While": {
  "lineno": 12530,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.EmptyLine",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.With": {
  "lineno": 12655,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.EmptyLine",
   "libcst.WithItem",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.WithItem": {
  "lineno": 12849,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers.Yield": {
  "lineno": 12883,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.LeftParen",
   "libcst.RightParen",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.DoNotCare",
   "libcst.matchers._matcher_base.DoNotCareSentinel",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.OneOf",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers._decorators": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "libcst.matchers._decorators.call_if_inside": {
  "lineno": 20,
  "symbols_in_volume": [
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst.matchers._decorators.call_if_inside.inner": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers._decorators.call_if_not_inside": {
  "lineno": 45,
  "symbols_in_volume": [
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst.matchers._decorators.call_if_not_inside.inner": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers._decorators.leave": {
  "lineno": 101,
  "symbols_in_volume": [
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst.matchers._decorators.leave.inner": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers._decorators.visit": {
  "lineno": 71,
  "symbols_in_volume": [
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst.matchers._decorators.visit.inner": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers._matcher_base": {
  "lineno": null,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.MaybeSentinel",
   "typing.Optional",
   "typing.TypeVar",
   "typing.Union"
  ],
  "type": "module"
 },
 "libcst.matchers._matcher_base.AllOf": {
  "lineno": 170,
  "symbols_in_volume": [
   "typing.Generic"
  ],
  "type": "class"
 },
 "libcst.matchers._matcher_base.AllOf.__and__": {
  "lineno": 231,
  "symbols_in_volume": [
   "typing.Union",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.AllOf.__init__": {
  "lineno": 208,
  "symbols_in_volume": [
   "typing.List",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.AllOf.__invert__": {
  "lineno": 236,
  "symbols_in_volume": [
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.AllOf.__or__": {
  "lineno": 228,
  "symbols_in_volume": [
   "typing.NoReturn"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.AllOf.__repr__": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers._matcher_base.AllOf.options": {
  "lineno": 219,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.AtLeastN": {
  "lineno": 650,
  "symbols_in_volume": [
   "typing.Generic"
  ],
  "type": "class"
 },
 "libcst.matchers._matcher_base.AtLeastN.__and__": {
  "lineno": 711,
  "symbols_in_volume": [
   "typing.NoReturn"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.AtLeastN.__init__": {
  "lineno": 680,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.AtLeastN.__invert__": {
  "lineno": 714,
  "symbols_in_volume": [
   "typing.NoReturn"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.AtLeastN.__or__": {
  "lineno": 708,
  "symbols_in_volume": [
   "typing.NoReturn"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.AtLeastN.__repr__": {
  "lineno": 717,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers._matcher_base.AtLeastN.matcher": {
  "lineno": 701,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.AtLeastN.n": {
  "lineno": 691,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers._matcher_base.AtMostN": {
  "lineno": 751,
  "symbols_in_volume": [
   "typing.Generic"
  ],
  "type": "class"
 },
 "libcst.matchers._matcher_base.AtMostN.__and__": {
  "lineno": 813,
  "symbols_in_volume": [
   "typing.NoReturn"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.AtMostN.__init__": {
  "lineno": 781,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.AtMostN.__invert__": {
  "lineno": 816,
  "symbols_in_volume": [
   "typing.NoReturn"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.AtMostN.__or__": {
  "lineno": 810,
  "symbols_in_volume": [
   "typing.NoReturn"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.AtMostN.__repr__": {
  "lineno": 819,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers._matcher_base.AtMostN.matcher": {
  "lineno": 803,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.AtMostN.n": {
  "lineno": 792,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers._matcher_base.BaseMatcherNode": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.matchers._matcher_base.BaseMatcherNode.__and__": {
  "lineno": 77,
  "symbols_in_volume": [
   "typing.Union",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.BaseMatcherNode.__invert__": {
  "lineno": 86,
  "symbols_in_volume": [
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.BaseMatcherNode.__or__": {
  "lineno": 68,
  "symbols_in_volume": [
   "typing.Union",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.DoNotCare": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers._matcher_base.DoNotCareSentinel": {
  "lineno": 34,
  "symbols_in_volume": [
   "enum.Enum",
   "enum.auto"
  ],
  "type": "class"
 },
 "libcst.matchers._matcher_base.DoNotCareSentinel.__repr__": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers._matcher_base.DoesNotMatch": {
  "lineno": 847,
  "symbols_in_volume": [
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.MatchIfTrue": {
  "lineno": 379,
  "symbols_in_volume": [
   "typing.Generic"
  ],
  "type": "class"
 },
 "libcst.matchers._matcher_base.MatchIfTrue.__and__": {
  "lineno": 421,
  "symbols_in_volume": [
   "typing.Union",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.MatchIfTrue.__init__": {
  "lineno": 398,
  "symbols_in_volume": [
   "typing.Callable",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.MatchIfTrue.__invert__": {
  "lineno": 430,
  "symbols_in_volume": [
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.MatchIfTrue.__or__": {
  "lineno": 412,
  "symbols_in_volume": [
   "typing.Union",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.MatchIfTrue.__repr__": {
  "lineno": 435,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers._matcher_base.MatchIfTrue.func": {
  "lineno": 403,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.MatchMetadata": {
  "lineno": 475,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.matchers._matcher_base.MatchMetadata.__and__": {
  "lineno": 542,
  "symbols_in_volume": [
   "typing.Union",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.MatchMetadata.__init__": {
  "lineno": 513,
  "symbols_in_volume": [
   "libcst.metadata.BaseMetadataProvider",
   "typing.Type"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.MatchMetadata.__invert__": {
  "lineno": 546,
  "symbols_in_volume": [
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.MatchMetadata.__or__": {
  "lineno": 538,
  "symbols_in_volume": [
   "typing.Union",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.MatchMetadata.__repr__": {
  "lineno": 551,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers._matcher_base.MatchMetadata.key": {
  "lineno": 521,
  "symbols_in_volume": [
   "libcst.metadata.ProviderT"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.MatchMetadata.value": {
  "lineno": 530,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers._matcher_base.MatchMetadataIfTrue": {
  "lineno": 555,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.matchers._matcher_base.MatchMetadataIfTrue.__and__": {
  "lineno": 626,
  "symbols_in_volume": [
   "typing.Union",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.MatchMetadataIfTrue.__init__": {
  "lineno": 594,
  "symbols_in_volume": [
   "libcst.metadata.BaseMetadataProvider",
   "typing.Callable",
   "typing.Type"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.MatchMetadataIfTrue.__invert__": {
  "lineno": 632,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers._matcher_base.MatchMetadataIfTrue.__or__": {
  "lineno": 620,
  "symbols_in_volume": [
   "typing.Union",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.MatchMetadataIfTrue.__repr__": {
  "lineno": 636,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers._matcher_base.MatchMetadataIfTrue.func": {
  "lineno": 611,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.MatchMetadataIfTrue.key": {
  "lineno": 602,
  "symbols_in_volume": [
   "libcst.metadata.ProviderT"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.MatchRegex": {
  "lineno": 440,
  "symbols_in_volume": [
   "typing.Callable",
   "typing.Pattern",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.MatchRegex._match_func": {
  "lineno": 457,
  "symbols_in_volume": [
   "re.fullmatch"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.OneOf": {
  "lineno": 106,
  "symbols_in_volume": [
   "typing.Generic"
  ],
  "type": "class"
 },
 "libcst.matchers._matcher_base.OneOf.__and__": {
  "lineno": 159,
  "symbols_in_volume": [
   "typing.NoReturn"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.OneOf.__init__": {
  "lineno": 134,
  "symbols_in_volume": [
   "typing.List",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.OneOf.__invert__": {
  "lineno": 162,
  "symbols_in_volume": [
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.OneOf.__or__": {
  "lineno": 154,
  "symbols_in_volume": [
   "typing.Union",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.OneOf.__repr__": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers._matcher_base.OneOf.options": {
  "lineno": 145,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.SaveMatchedNode": {
  "lineno": 906,
  "symbols_in_volume": [
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.ZeroOrMore": {
  "lineno": 724,
  "symbols_in_volume": [
   "typing.Union",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.ZeroOrOne": {
  "lineno": 826,
  "symbols_in_volume": [
   "typing.Union",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base._BaseMetadataMatcher": {
  "lineno": 467,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.matchers._matcher_base._BaseWildcardNode": {
  "lineno": 641,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.matchers._matcher_base._ExtractMatchingNode": {
  "lineno": 298,
  "symbols_in_volume": [
   "typing.Generic"
  ],
  "type": "class"
 },
 "libcst.matchers._matcher_base._ExtractMatchingNode.__and__": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers._matcher_base._ExtractMatchingNode.__getattr__": {
  "lineno": 359,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers._matcher_base._ExtractMatchingNode.__init__": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers._matcher_base._ExtractMatchingNode.__invert__": {
  "lineno": 365,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers._matcher_base._ExtractMatchingNode.__or__": {
  "lineno": 344,
  "symbols_in_volume": [
   "typing.Union",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base._ExtractMatchingNode.__repr__": {
  "lineno": 373,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers._matcher_base._ExtractMatchingNode.matcher": {
  "lineno": 327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers._matcher_base._ExtractMatchingNode.name": {
  "lineno": 336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers._matcher_base._FindAllVisitor": {
  "lineno": 1507,
  "symbols_in_volume": [
   "libcst.CSTVisitor"
  ],
  "type": "class"
 },
 "libcst.matchers._matcher_base._FindAllVisitor.__init__": {
  "lineno": 1508,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.metadata.ProviderT",
   "typing.Callable",
   "typing.Dict",
   "typing.List",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base._FindAllVisitor.on_visit": {
  "lineno": 1531,
  "symbols_in_volume": [
   "libcst.CSTNode"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base._InverseOf": {
  "lineno": 244,
  "symbols_in_volume": [
   "typing.Generic"
  ],
  "type": "class"
 },
 "libcst.matchers._matcher_base._InverseOf.__and__": {
  "lineno": 280,
  "symbols_in_volume": [
   "typing.Union",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base._InverseOf.__getattr__": {
  "lineno": 285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers._matcher_base._InverseOf.__init__": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers._matcher_base._InverseOf.__invert__": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers._matcher_base._InverseOf.__or__": {
  "lineno": 275,
  "symbols_in_volume": [
   "typing.Union",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base._InverseOf.__repr__": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers._matcher_base._InverseOf.matcher": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers._matcher_base._ReplaceTransformer": {
  "lineno": 1666,
  "symbols_in_volume": [
   "libcst.CSTTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers._matcher_base._ReplaceTransformer.__init__": {
  "lineno": 1667,
  "symbols_in_volume": [
   "copy.deepcopy",
   "inspect.isfunction",
   "libcst.CSTNode",
   "libcst.MaybeSentinel",
   "libcst.RemovalSentinel",
   "libcst.metadata.ProviderT",
   "typing.Callable",
   "typing.Dict",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base._ReplaceTransformer._extraction_translate": {
  "lineno": 1737,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "typing.Dict",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base._ReplaceTransformer._node_translate": {
  "lineno": 1729,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base._ReplaceTransformer.on_leave": {
  "lineno": 1742,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.MaybeSentinel",
   "libcst.RemovalSentinel",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base._SequenceMatchesResult": {
  "lineno": 953,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.CSTNode",
   "libcst.MaybeSentinel",
   "typing.Dict",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.matchers._matcher_base._attribute_matches": {
  "lineno": 1108,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.MaybeSentinel",
   "libcst.RemovalSentinel",
   "libcst.metadata.ProviderT",
   "typing.Callable",
   "typing.Dict",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base._construct_metadata_fetcher_dependent": {
  "lineno": 1413,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.MetadataDependent",
   "libcst.metadata.ProviderT",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base._construct_metadata_fetcher_dependent._fetch": {
  "lineno": 1416,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.metadata.ProviderT"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base._construct_metadata_fetcher_null": {
  "lineno": 1404,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.metadata.ProviderT",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base._construct_metadata_fetcher_null._fetch": {
  "lineno": 1407,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers._matcher_base._construct_metadata_fetcher_wrapper": {
  "lineno": 1422,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.MetadataWrapper",
   "libcst.metadata.ProviderT",
   "typing.Callable",
   "typing.Dict",
   "typing.Mapping"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base._construct_metadata_fetcher_wrapper._fetch": {
  "lineno": 1427,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.metadata.ProviderT"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base._find_or_extract_all": {
  "lineno": 1539,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.MaybeSentinel",
   "libcst.MetadataDependent",
   "libcst.MetadataWrapper",
   "libcst.RemovalSentinel",
   "libcst.metadata.MetadataWrapper",
   "typing.Callable",
   "typing.Dict",
   "typing.Optional",
   "typing.Sequence",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base._matches": {
  "lineno": 1357,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.MaybeSentinel",
   "libcst.metadata.ProviderT",
   "typing.Callable",
   "typing.Dict",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base._matches_zero_nodes": {
  "lineno": 935,
  "symbols_in_volume": [
   "typing.Callable",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base._metadata_matches": {
  "lineno": 1218,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.metadata.ProviderT",
   "typing.Callable",
   "typing.Dict",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base._node_matches": {
  "lineno": 1274,
  "symbols_in_volume": [
   "dataclasses.fields",
   "libcst.CSTNode",
   "libcst.metadata.ProviderT",
   "typing.Callable",
   "typing.Dict",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base._sequence_matches": {
  "lineno": 963,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.MaybeSentinel",
   "libcst.metadata.ProviderT",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.extract": {
  "lineno": 1436,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.MaybeSentinel",
   "libcst.MetadataDependent",
   "libcst.MetadataWrapper",
   "libcst.RemovalSentinel",
   "typing.Dict",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.extractall": {
  "lineno": 1627,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.MaybeSentinel",
   "libcst.MetadataDependent",
   "libcst.MetadataWrapper",
   "libcst.RemovalSentinel",
   "libcst.metadata.MetadataWrapper",
   "typing.Callable",
   "typing.Dict",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.findall": {
  "lineno": 1592,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.MaybeSentinel",
   "libcst.MetadataDependent",
   "libcst.MetadataWrapper",
   "libcst.RemovalSentinel",
   "libcst.metadata.MetadataWrapper",
   "typing.Callable",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.matches": {
  "lineno": 1483,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.MaybeSentinel",
   "libcst.MetadataDependent",
   "libcst.MetadataWrapper",
   "libcst.RemovalSentinel",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._matcher_base.replace": {
  "lineno": 1771,
  "symbols_in_volume": [
   "copy.deepcopy",
   "libcst.CSTNode",
   "libcst.MaybeSentinel",
   "libcst.MetadataDependent",
   "libcst.MetadataWrapper",
   "libcst.RemovalSentinel",
   "libcst.metadata.MetadataWrapper",
   "typing.Callable",
   "typing.Dict",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._return_types": {
  "lineno": null,
  "symbols_in_volume": [
   "libcst._maybe_sentinel.MaybeSentinel",
   "libcst._nodes.base.CSTNode",
   "libcst._nodes.expression.Annotation",
   "libcst._nodes.expression.Arg",
   "libcst._nodes.expression.Asynchronous",
   "libcst._nodes.expression.Attribute",
   "libcst._nodes.expression.Await",
   "libcst._nodes.expression.BaseDictElement",
   "libcst._nodes.expression.BaseElement",
   "libcst._nodes.expression.BaseExpression",
   "libcst._nodes.expression.BaseFormattedStringContent",
   "libcst._nodes.expression.BaseSlice",
   "libcst._nodes.expression.BinaryOperation",
   "libcst._nodes.expression.BooleanOperation",
   "libcst._nodes.expression.Call",
   "libcst._nodes.expression.CompFor",
   "libcst._nodes.expression.CompIf",
   "libcst._nodes.expression.Comparison",
   "libcst._nodes.expression.ComparisonTarget",
   "libcst._nodes.expression.ConcatenatedString",
   "libcst._nodes.expression.Dict",
   "libcst._nodes.expression.DictComp",
   "libcst._nodes.expression.DictElement",
   "libcst._nodes.expression.Element",
   "libcst._nodes.expression.Ellipsis",
   "libcst._nodes.expression.Float",
   "libcst._nodes.expression.FormattedString",
   "libcst._nodes.expression.FormattedStringExpression",
   "libcst._nodes.expression.FormattedStringText",
   "libcst._nodes.expression.From",
   "libcst._nodes.expression.GeneratorExp",
   "libcst._nodes.expression.IfExp",
   "libcst._nodes.expression.Imaginary",
   "libcst._nodes.expression.Index",
   "libcst._nodes.expression.Integer",
   "libcst._nodes.expression.Lambda",
   "libcst._nodes.expression.LeftCurlyBrace",
   "libcst._nodes.expression.LeftParen",
   "libcst._nodes.expression.LeftSquareBracket",
   "libcst._nodes.expression.List",
   "libcst._nodes.expression.ListComp",
   "libcst._nodes.expression.Name",
   "libcst._nodes.expression.NamedExpr",
   "libcst._nodes.expression.Param",
   "libcst._nodes.expression.ParamSlash",
   "libcst._nodes.expression.ParamStar",
   "libcst._nodes.expression.Parameters",
   "libcst._nodes.expression.RightCurlyBrace",
   "libcst._nodes.expression.RightParen",
   "libcst._nodes.expression.RightSquareBracket",
   "libcst._nodes.expression.Set",
   "libcst._nodes.expression.SetComp",
   "libcst._nodes.expression.SimpleString",
   "libcst._nodes.expression.Slice",
   "libcst._nodes.expression.StarredDictElement",
   "libcst._nodes.expression.StarredElement",
   "libcst._nodes.expression.Subscript",
   "libcst._nodes.expression.SubscriptElement",
   "libcst._nodes.expression.Tuple",
   "libcst._nodes.expression.UnaryOperation",
   "libcst._nodes.expression.Yield",
   "libcst._nodes.module.Module",
   "libcst._nodes.op.Add",
   "libcst._nodes.op.AddAssign",
   "libcst._nodes.op.And",
   "libcst._nodes.op.AssignEqual",
   "libcst._nodes.op.BaseAugOp",
   "libcst._nodes.op.BaseBinaryOp",
   "libcst._nodes.op.BaseBooleanOp",
   "libcst._nodes.op.BaseCompOp",
   "libcst._nodes.op.BaseUnaryOp",
   "libcst._nodes.op.BitAnd",
   "libcst._nodes.op.BitAndAssign",
   "libcst._nodes.op.BitInvert",
   "libcst._nodes.op.BitOr",
   "libcst._nodes.op.BitOrAssign",
   "libcst._nodes.op.BitXor",
   "libcst._nodes.op.BitXorAssign",
   "libcst._nodes.op.Colon",
   "libcst._nodes.op.Comma",
   "libcst._nodes.op.Divide",
   "libcst._nodes.op.DivideAssign",
   "libcst._nodes.op.Dot",
   "libcst._nodes.op.Equal",
   "libcst._nodes.op.FloorDivide",
   "libcst._nodes.op.FloorDivideAssign",
   "libcst._nodes.op.GreaterThan",
   "libcst._nodes.op.GreaterThanEqual",
   "libcst._nodes.op.ImportStar",
   "libcst._nodes.op.In",
   "libcst._nodes.op.Is",
   "libcst._nodes.op.IsNot",
   "libcst._nodes.op.LeftShift",
   "libcst._nodes.op.LeftShiftAssign",
   "libcst._nodes.op.LessThan",
   "libcst._nodes.op.LessThanEqual",
   "libcst._nodes.op.MatrixMultiply",
   "libcst._nodes.op.MatrixMultiplyAssign",
   "libcst._nodes.op.Minus",
   "libcst._nodes.op.Modulo",
   "libcst._nodes.op.ModuloAssign",
   "libcst._nodes.op.Multiply",
   "libcst._nodes.op.MultiplyAssign",
   "libcst._nodes.op.Not",
   "libcst._nodes.op.NotEqual",
   "libcst._nodes.op.NotIn",
   "libcst._nodes.op.Or",
   "libcst._nodes.op.Plus",
   "libcst._nodes.op.Power",
   "libcst._nodes.op.PowerAssign",
   "libcst._nodes.op.RightShift",
   "libcst._nodes.op.RightShiftAssign",
   "libcst._nodes.op.Semicolon",
   "libcst._nodes.op.Subtract",
   "libcst._nodes.op.SubtractAssign",
   "libcst._nodes.statement.AnnAssign",
   "libcst._nodes.statement.AsName",
   "libcst._nodes.statement.Assert",
   "libcst._nodes.statement.Assign",
   "libcst._nodes.statement.AssignTarget",
   "libcst._nodes.statement.AugAssign",
   "libcst._nodes.statement.BaseSmallStatement",
   "libcst._nodes.statement.BaseStatement",
   "libcst._nodes.statement.BaseSuite",
   "libcst._nodes.statement.Break",
   "libcst._nodes.statement.ClassDef",
   "libcst._nodes.statement.Continue",
   "libcst._nodes.statement.Decorator",
   "libcst._nodes.statement.Del",
   "libcst._nodes.statement.Else",
   "libcst._nodes.statement.ExceptHandler",
   "libcst._nodes.statement.Expr",
   "libcst._nodes.statement.Finally",
   "libcst._nodes.statement.For",
   "libcst._nodes.statement.FunctionDef",
   "libcst._nodes.statement.Global",
   "libcst._nodes.statement.If",
   "libcst._nodes.statement.Import",
   "libcst._nodes.statement.ImportAlias",
   "libcst._nodes.statement.ImportFrom",
   "libcst._nodes.statement.IndentedBlock",
   "libcst._nodes.statement.NameItem",
   "libcst._nodes.statement.Nonlocal",
   "libcst._nodes.statement.Pass",
   "libcst._nodes.statement.Raise",
   "libcst._nodes.statement.Return",
   "libcst._nodes.statement.SimpleStatementLine",
   "libcst._nodes.statement.SimpleStatementSuite",
   "libcst._nodes.statement.Try",
   "libcst._nodes.statement.While",
   "libcst._nodes.statement.With",
   "libcst._nodes.statement.WithItem",
   "libcst._nodes.whitespace.BaseParenthesizableWhitespace",
   "libcst._nodes.whitespace.Comment",
   "libcst._nodes.whitespace.EmptyLine",
   "libcst._nodes.whitespace.Newline",
   "libcst._nodes.whitespace.ParenthesizedWhitespace",
   "libcst._nodes.whitespace.SimpleWhitespace",
   "libcst._nodes.whitespace.TrailingWhitespace",
   "libcst._removal_sentinel.RemovalSentinel",
   "typing.Dict",
   "typing.Type",
   "typing.Union"
  ],
  "type": "module"
 },
 "libcst.matchers._visitors": {
  "lineno": null,
  "symbols_in_volume": [
   "libcst.matchers._return_types.TYPED_FUNCTION_RETURN_MAPPING",
   "typing.Set"
  ],
  "type": "module"
 },
 "libcst.matchers._visitors.MatchDecoratorMismatch": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.matchers._visitors.MatchDecoratorMismatch.__init__": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers._visitors.MatchDecoratorMismatch.__reduce__": {
  "lineno": 66,
  "symbols_in_volume": [
   "typing.Callable",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableTransformer": {
  "lineno": 428,
  "symbols_in_volume": [
   "libcst.CSTTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers._visitors.MatcherDecoratableTransformer.__init__": {
  "lineno": 436,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.CSTTransformer.__init__",
   "libcst.RemovalSentinel",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "typing.Callable",
   "typing.Dict",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableTransformer.extract": {
  "lineno": 578,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.MaybeSentinel",
   "libcst.RemovalSentinel",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.extract",
   "typing.Dict",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableTransformer.extractall": {
  "lineno": 592,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.MaybeSentinel",
   "libcst.RemovalSentinel",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.MatchMetadata",
   "libcst.matchers._matcher_base.MatchMetadataIfTrue",
   "libcst.matchers._matcher_base.extractall",
   "typing.Callable",
   "typing.Dict",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableTransformer.findall": {
  "lineno": 559,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.MaybeSentinel",
   "libcst.RemovalSentinel",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.MatchMetadata",
   "libcst.matchers._matcher_base.MatchMetadataIfTrue",
   "libcst.matchers._matcher_base.findall",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableTransformer.matches": {
  "lineno": 545,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.MaybeSentinel",
   "libcst.RemovalSentinel",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.matches",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableTransformer.on_leave": {
  "lineno": 495,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.CSTTransformer.on_leave",
   "libcst.RemovalSentinel",
   "libcst._types.CSTNodeT",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableTransformer.on_leave_attribute": {
  "lineno": 535,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.CSTTransformer.on_leave_attribute"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableTransformer.on_visit": {
  "lineno": 476,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.CSTTransformer.on_visit"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableTransformer.on_visit_attribute": {
  "lineno": 525,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.CSTTransformer.on_visit_attribute"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableTransformer.replace": {
  "lineno": 611,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.MaybeSentinel",
   "libcst.RemovalSentinel",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.MatchMetadata",
   "libcst.matchers._matcher_base.MatchMetadataIfTrue",
   "libcst.matchers._matcher_base.replace",
   "typing.Callable",
   "typing.Dict",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableVisitor": {
  "lineno": 640,
  "symbols_in_volume": [
   "libcst.CSTVisitor"
  ],
  "type": "class"
 },
 "libcst.matchers._visitors.MatcherDecoratableVisitor.__init__": {
  "lineno": 648,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.CSTVisitor.__init__",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "typing.Callable",
   "typing.Dict",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableVisitor.extract": {
  "lineno": 773,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.MaybeSentinel",
   "libcst.RemovalSentinel",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.extract",
   "typing.Dict",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableVisitor.extractall": {
  "lineno": 787,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.MaybeSentinel",
   "libcst.RemovalSentinel",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.MatchMetadata",
   "libcst.matchers._matcher_base.MatchMetadataIfTrue",
   "libcst.matchers._matcher_base.extractall",
   "typing.Callable",
   "typing.Dict",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableVisitor.findall": {
  "lineno": 754,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.MaybeSentinel",
   "libcst.RemovalSentinel",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.MatchMetadata",
   "libcst.matchers._matcher_base.MatchMetadataIfTrue",
   "libcst.matchers._matcher_base.findall",
   "typing.Callable",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableVisitor.matches": {
  "lineno": 740,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.MaybeSentinel",
   "libcst.RemovalSentinel",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.matches",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableVisitor.on_leave": {
  "lineno": 702,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.CSTVisitor.on_leave"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableVisitor.on_leave_attribute": {
  "lineno": 730,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.CSTVisitor.on_leave_attribute"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableVisitor.on_visit": {
  "lineno": 683,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.CSTVisitor.on_visit"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableVisitor.on_visit_attribute": {
  "lineno": 720,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.CSTVisitor.on_visit_attribute"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors.MatcherDecoratableVisitor.replace": {
  "lineno": 806,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.MaybeSentinel",
   "libcst.RemovalSentinel",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "libcst.matchers._matcher_base.MatchMetadata",
   "libcst.matchers._matcher_base.MatchMetadataIfTrue",
   "libcst.matchers._matcher_base.replace",
   "typing.Callable",
   "typing.Dict",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors._all_negative_matchers_false": {
  "lineno": 396,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.matchers._decorators.VISIT_NEGATIVE_MATCHER_ATTR",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors._all_positive_matchers_true": {
  "lineno": 384,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.matchers._decorators.VISIT_POSITIVE_MATCHER_ATTR",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors._assert_not_concrete": {
  "lineno": 272,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors._check_types": {
  "lineno": 201,
  "symbols_in_volume": [
   "inspect.ismethod",
   "libcst.matchers._matcher_base.AtLeastN",
   "libcst.matchers._matcher_base.AtMostN",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.MatchIfTrue",
   "typing.Any",
   "typing.Callable",
   "typing.Dict",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors._gather_constructed_leave_funcs": {
  "lineno": 319,
  "symbols_in_volume": [
   "inspect.ismethod",
   "libcst.CSTNode",
   "libcst.matchers._decorators.CONSTRUCTED_LEAVE_MATCHER_ATTR",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "typing.Any",
   "typing.Callable",
   "typing.Dict",
   "typing.Sequence",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors._gather_constructed_visit_funcs": {
  "lineno": 284,
  "symbols_in_volume": [
   "inspect.ismethod",
   "libcst.CSTNode",
   "libcst.matchers._decorators.CONSTRUCTED_VISIT_MATCHER_ATTR",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "typing.Callable",
   "typing.Dict",
   "typing.Sequence",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors._gather_matchers": {
  "lineno": 254,
  "symbols_in_volume": [
   "libcst.matchers._decorators.VISIT_NEGATIVE_MATCHER_ATTR",
   "libcst.matchers._decorators.VISIT_POSITIVE_MATCHER_ATTR",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "typing.Set",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors._get_possible_annotated_classes": {
  "lineno": 82,
  "symbols_in_volume": [
   "typing.List",
   "typing.Type",
   "typing.Union",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors._get_possible_match_classes": {
  "lineno": 75,
  "symbols_in_volume": [
   "libcst",
   "libcst.CSTNode",
   "libcst.matchers._matcher_base.AllOf",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.OneOf",
   "typing.List",
   "typing.Type"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors._get_valid_leave_annotations_for_classes": {
  "lineno": 89,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.matchers._return_types.TYPED_FUNCTION_RETURN_MAPPING",
   "typing.Sequence",
   "typing.Set",
   "typing.Type"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors._leave_matchers": {
  "lineno": 370,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors._match_decorator_unpickler": {
  "lineno": 56,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors._should_allow_visit": {
  "lineno": 407,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors._verify_parameter_annotations": {
  "lineno": 156,
  "symbols_in_volume": [
   "inspect.signature",
   "libcst.CSTNode",
   "typing.Any",
   "typing.Callable",
   "typing.Sequence",
   "typing.Type",
   "typing.get_type_hints"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors._verify_return_annotation": {
  "lineno": 106,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "typing.Any",
   "typing.Callable",
   "typing.Sequence",
   "typing.Type",
   "typing.get_type_hints"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors._visit_constructed_funcs": {
  "lineno": 415,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.MetadataDependent",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.matches",
   "typing.Callable",
   "typing.Dict",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst.matchers._visitors._visit_matchers": {
  "lineno": 351,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.MetadataDependent",
   "libcst.matchers._matcher_base.BaseMatcherNode",
   "libcst.matchers._matcher_base.matches",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.matchers.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.matchers.tests.test_decorators": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest": {
  "lineno": 27,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_collect_simple": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_collect_simple.TestVisitor": {
  "lineno": 104,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableVisitor"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_collect_simple.TestVisitor.__init__": {
  "lineno": 105,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_collect_simple.TestVisitor.leave_SimpleString": {
  "lineno": 114,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.call_if_inside"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_collect_simple.TestVisitor.visit_SimpleString": {
  "lineno": 110,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.call_if_inside"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_transform_simple": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_transform_simple.TestVisitor": {
  "lineno": 30,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_transform_simple.TestVisitor.__init__": {
  "lineno": 31,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_transform_simple.TestVisitor.leave_SimpleString": {
  "lineno": 40,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.call_if_inside"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_transform_simple.TestVisitor.visit_SimpleString": {
  "lineno": 36,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.call_if_inside"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_verify_original_collect": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_verify_original_collect.TestVisitor": {
  "lineno": 140,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableVisitor"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_verify_original_collect.TestVisitor.__init__": {
  "lineno": 141,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_verify_original_collect.TestVisitor.visit_FunctionDef": {
  "lineno": 150,
  "symbols_in_volume": [
   "libcst.FunctionDef"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_verify_original_collect.TestVisitor.visit_SimpleString": {
  "lineno": 146,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.call_if_inside"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_verify_original_transform": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_verify_original_transform.TestVisitor": {
  "lineno": 69,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_verify_original_transform.TestVisitor.__init__": {
  "lineno": 70,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_verify_original_transform.TestVisitor.visit_FunctionDef": {
  "lineno": 79,
  "symbols_in_volume": [
   "libcst.FunctionDef"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_inside_verify_original_transform.TestVisitor.visit_SimpleString": {
  "lineno": 75,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.call_if_inside"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_not_inside_collect_simple": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_not_inside_collect_simple.TestVisitor": {
  "lineno": 307,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableVisitor"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_not_inside_collect_simple.TestVisitor.__init__": {
  "lineno": 308,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_not_inside_collect_simple.TestVisitor.leave_SimpleString": {
  "lineno": 317,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.call_if_not_inside"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_not_inside_collect_simple.TestVisitor.visit_SimpleString": {
  "lineno": 313,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.call_if_not_inside"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_not_inside_transform_simple": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_not_inside_transform_simple.TestVisitor": {
  "lineno": 233,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_not_inside_transform_simple.TestVisitor.__init__": {
  "lineno": 234,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_not_inside_transform_simple.TestVisitor.leave_SimpleString": {
  "lineno": 243,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.call_if_not_inside"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_call_if_not_inside_transform_simple.TestVisitor.visit_SimpleString": {
  "lineno": 239,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.call_if_not_inside"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_multiple_visitors_collect": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_multiple_visitors_collect.TestVisitor": {
  "lineno": 175,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableVisitor"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_multiple_visitors_collect.TestVisitor.__init__": {
  "lineno": 176,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_multiple_visitors_collect.TestVisitor.visit_SimpleString": {
  "lineno": 180,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.ClassDef",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.call_if_inside"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_multiple_visitors_transform": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_multiple_visitors_transform.TestVisitor": {
  "lineno": 204,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_multiple_visitors_transform.TestVisitor.__init__": {
  "lineno": 205,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_multiple_visitors_transform.TestVisitor.visit_SimpleString": {
  "lineno": 209,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.ClassDef",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.call_if_inside"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_visit_if_inot_inside_verify_original_collect": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_visit_if_inot_inside_verify_original_collect.TestVisitor": {
  "lineno": 343,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableVisitor"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_visit_if_inot_inside_verify_original_collect.TestVisitor.__init__": {
  "lineno": 344,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_visit_if_inot_inside_verify_original_collect.TestVisitor.visit_FunctionDef": {
  "lineno": 353,
  "symbols_in_volume": [
   "libcst.FunctionDef"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_visit_if_inot_inside_verify_original_collect.TestVisitor.visit_SimpleString": {
  "lineno": 349,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.call_if_not_inside"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_visit_if_inot_inside_verify_original_transform": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_visit_if_inot_inside_verify_original_transform.TestVisitor": {
  "lineno": 272,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_visit_if_inot_inside_verify_original_transform.TestVisitor.__init__": {
  "lineno": 273,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_visit_if_inot_inside_verify_original_transform.TestVisitor.visit_FunctionDef": {
  "lineno": 282,
  "symbols_in_volume": [
   "libcst.FunctionDef"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersGatingDecoratorsTest.test_visit_if_inot_inside_verify_original_transform.TestVisitor.visit_SimpleString": {
  "lineno": 278,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.call_if_not_inside"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest": {
  "lineno": 377,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_inside_transform_attribute": {
  "lineno": 857,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_inside_transform_attribute.TestVisitor": {
  "lineno": 859,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_inside_transform_attribute.TestVisitor.__init__": {
  "lineno": 860,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_inside_transform_attribute.TestVisitor.leave_SimpleString_lpar": {
  "lineno": 869,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.call_if_inside"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_inside_transform_attribute.TestVisitor.visit_SimpleString_lpar": {
  "lineno": 865,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.call_if_inside"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_inside_visitor_attribute": {
  "lineno": 821,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_inside_visitor_attribute.TestVisitor": {
  "lineno": 823,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableVisitor"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_inside_visitor_attribute.TestVisitor.__init__": {
  "lineno": 824,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_inside_visitor_attribute.TestVisitor.leave_SimpleString_lpar": {
  "lineno": 833,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.call_if_inside"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_inside_visitor_attribute.TestVisitor.visit_SimpleString_lpar": {
  "lineno": 829,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.call_if_inside"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_not_inside_transform_attribute": {
  "lineno": 929,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_not_inside_transform_attribute.TestVisitor": {
  "lineno": 931,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_not_inside_transform_attribute.TestVisitor.__init__": {
  "lineno": 932,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_not_inside_transform_attribute.TestVisitor.leave_SimpleString_lpar": {
  "lineno": 941,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.call_if_not_inside"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_not_inside_transform_attribute.TestVisitor.visit_SimpleString_lpar": {
  "lineno": 937,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.call_if_not_inside"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_not_inside_visitor_attribute": {
  "lineno": 893,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_not_inside_visitor_attribute.TestVisitor": {
  "lineno": 895,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableVisitor"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_not_inside_visitor_attribute.TestVisitor.__init__": {
  "lineno": 896,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_not_inside_visitor_attribute.TestVisitor.leave_SimpleString_lpar": {
  "lineno": 905,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.call_if_not_inside"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_call_if_not_inside_visitor_attribute.TestVisitor.visit_SimpleString_lpar": {
  "lineno": 901,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.call_if_not_inside"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_duplicate_visit_collector": {
  "lineno": 598,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_duplicate_visit_collector.TestVisitor": {
  "lineno": 600,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableVisitor"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_duplicate_visit_collector.TestVisitor.__init__": {
  "lineno": 601,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_duplicate_visit_collector.TestVisitor.leave_function1": {
  "lineno": 614,
  "symbols_in_volume": [
   "libcst.FunctionDef",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_duplicate_visit_collector.TestVisitor.leave_function2": {
  "lineno": 618,
  "symbols_in_volume": [
   "libcst.FunctionDef",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_duplicate_visit_collector.TestVisitor.visit_function1": {
  "lineno": 606,
  "symbols_in_volume": [
   "libcst.FunctionDef",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.visit"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_duplicate_visit_collector.TestVisitor.visit_function2": {
  "lineno": 610,
  "symbols_in_volume": [
   "libcst.FunctionDef",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.visit"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_duplicate_visit_transform": {
  "lineno": 545,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_duplicate_visit_transform.TestVisitor": {
  "lineno": 547,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_duplicate_visit_transform.TestVisitor.__init__": {
  "lineno": 548,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_duplicate_visit_transform.TestVisitor.leave_function1": {
  "lineno": 561,
  "symbols_in_volume": [
   "libcst.FunctionDef",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_duplicate_visit_transform.TestVisitor.leave_function2": {
  "lineno": 568,
  "symbols_in_volume": [
   "libcst.FunctionDef",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_duplicate_visit_transform.TestVisitor.visit_function1": {
  "lineno": 553,
  "symbols_in_volume": [
   "libcst.FunctionDef",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.visit"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_duplicate_visit_transform.TestVisitor.visit_function2": {
  "lineno": 557,
  "symbols_in_volume": [
   "libcst.FunctionDef",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.visit"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_gated_visit_collect": {
  "lineno": 704,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_gated_visit_collect.TestVisitor": {
  "lineno": 706,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableVisitor"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_gated_visit_collect.TestVisitor.__init__": {
  "lineno": 707,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_gated_visit_collect.TestVisitor.leave_string1": {
  "lineno": 722,
  "symbols_in_volume": [
   "ast.literal_eval",
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.SimpleString",
   "libcst.matchers.call_if_inside",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_gated_visit_collect.TestVisitor.leave_string2": {
  "lineno": 727,
  "symbols_in_volume": [
   "ast.literal_eval",
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.SimpleString",
   "libcst.matchers.call_if_not_inside",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_gated_visit_collect.TestVisitor.visit_string1": {
  "lineno": 712,
  "symbols_in_volume": [
   "ast.literal_eval",
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.SimpleString",
   "libcst.matchers.call_if_inside",
   "libcst.matchers.visit"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_gated_visit_collect.TestVisitor.visit_string2": {
  "lineno": 717,
  "symbols_in_volume": [
   "ast.literal_eval",
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.SimpleString",
   "libcst.matchers.call_if_not_inside",
   "libcst.matchers.visit"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_gated_visit_transform": {
  "lineno": 645,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_gated_visit_transform.TestVisitor": {
  "lineno": 647,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_gated_visit_transform.TestVisitor.__init__": {
  "lineno": 648,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_gated_visit_transform.TestVisitor.leave_string1": {
  "lineno": 663,
  "symbols_in_volume": [
   "ast.literal_eval",
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.SimpleString",
   "libcst.matchers.call_if_inside",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_gated_visit_transform.TestVisitor.leave_string2": {
  "lineno": 671,
  "symbols_in_volume": [
   "ast.literal_eval",
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.SimpleString",
   "libcst.matchers.call_if_not_inside",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_gated_visit_transform.TestVisitor.visit_string1": {
  "lineno": 653,
  "symbols_in_volume": [
   "ast.literal_eval",
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.SimpleString",
   "libcst.matchers.call_if_inside",
   "libcst.matchers.visit"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_gated_visit_transform.TestVisitor.visit_string2": {
  "lineno": 658,
  "symbols_in_volume": [
   "ast.literal_eval",
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.SimpleString",
   "libcst.matchers.call_if_not_inside",
   "libcst.matchers.visit"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_init_with_unhashable_types": {
  "lineno": 965,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_init_with_unhashable_types.TestVisitor": {
  "lineno": 967,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_init_with_unhashable_types.TestVisitor.__init__": {
  "lineno": 968,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_init_with_unhashable_types.TestVisitor.visit_SimpleString": {
  "lineno": 972,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.Parameters",
   "libcst.matchers.ZeroOrMore",
   "libcst.matchers.call_if_inside"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_stacked_visit_collector": {
  "lineno": 503,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_stacked_visit_collector.TestVisitor": {
  "lineno": 505,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableVisitor"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_stacked_visit_collector.TestVisitor.__init__": {
  "lineno": 506,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_stacked_visit_collector.TestVisitor.leave_function": {
  "lineno": 516,
  "symbols_in_volume": [
   "libcst.FunctionDef",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_stacked_visit_collector.TestVisitor.visit_function": {
  "lineno": 511,
  "symbols_in_volume": [
   "libcst.FunctionDef",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.visit"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_stacked_visit_transform": {
  "lineno": 459,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_stacked_visit_transform.TestVisitor": {
  "lineno": 461,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_stacked_visit_transform.TestVisitor.__init__": {
  "lineno": 462,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_stacked_visit_transform.TestVisitor.leave_function": {
  "lineno": 472,
  "symbols_in_volume": [
   "libcst.FunctionDef",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_stacked_visit_transform.TestVisitor.visit_function": {
  "lineno": 467,
  "symbols_in_volume": [
   "libcst.FunctionDef",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.visit"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_transform_order": {
  "lineno": 757,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_transform_order.TestVisitor": {
  "lineno": 759,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_transform_order.TestVisitor.leave_SimpleString": {
  "lineno": 778,
  "symbols_in_volume": [
   "ast.literal_eval",
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.call_if_inside"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_transform_order.TestVisitor.leave_string1": {
  "lineno": 760,
  "symbols_in_volume": [
   "ast.literal_eval",
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.SimpleString",
   "libcst.matchers.call_if_inside",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_transform_order.TestVisitor.leave_string2": {
  "lineno": 769,
  "symbols_in_volume": [
   "ast.literal_eval",
   "libcst.SimpleString",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.SimpleString",
   "libcst.matchers.call_if_inside",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_visit_collector": {
  "lineno": 420,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_visit_collector.TestVisitor": {
  "lineno": 422,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableVisitor"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_visit_collector.TestVisitor.__init__": {
  "lineno": 423,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_visit_collector.TestVisitor.leave_function": {
  "lineno": 432,
  "symbols_in_volume": [
   "libcst.FunctionDef",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_visit_collector.TestVisitor.visit_function": {
  "lineno": 428,
  "symbols_in_volume": [
   "libcst.FunctionDef",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.visit"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_visit_transform": {
  "lineno": 378,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_visit_transform.TestVisitor": {
  "lineno": 380,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_visit_transform.TestVisitor.__init__": {
  "lineno": 381,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_visit_transform.TestVisitor.leave_function": {
  "lineno": 390,
  "symbols_in_volume": [
   "libcst.FunctionDef",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.MatchersVisitLeaveDecoratorsTest.test_visit_transform.TestVisitor.visit_function": {
  "lineno": 386,
  "symbols_in_volume": [
   "libcst.FunctionDef",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Name",
   "libcst.matchers.visit"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_decorators.fixture": {
  "lineno": 23,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.parse_module",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_extract": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest": {
  "lineno": 14,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest._make_coderange": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst.metadata.CodePosition",
   "libcst.metadata.CodeRange",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_metadata": {
  "lineno": 162,
  "symbols_in_volume": [
   "libcst.BinaryOperation",
   "libcst.Expr",
   "libcst.MetadataWrapper",
   "libcst.SimpleStatementLine",
   "libcst.Tuple",
   "libcst.ensure_type",
   "libcst.matchers.BinaryOperation",
   "libcst.matchers.Call",
   "libcst.matchers.Element",
   "libcst.matchers.MatchMetadata",
   "libcst.matchers.Name",
   "libcst.matchers.SaveMatchedNode",
   "libcst.matchers.Tuple",
   "libcst.matchers.extract",
   "libcst.metadata.PositionProvider",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_multiple": {
  "lineno": 81,
  "symbols_in_volume": [
   "libcst.BinaryOperation",
   "libcst.Call",
   "libcst.Tuple",
   "libcst.ensure_type",
   "libcst.matchers.BinaryOperation",
   "libcst.matchers.Call",
   "libcst.matchers.Element",
   "libcst.matchers.Name",
   "libcst.matchers.SaveMatchedNode",
   "libcst.matchers.Tuple",
   "libcst.matchers.extract",
   "libcst.parse_expression"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_optional_wildcard": {
  "lineno": 303,
  "symbols_in_volume": [
   "libcst.matchers.Arg",
   "libcst.matchers.Attribute",
   "libcst.matchers.Call",
   "libcst.matchers.DoNotCare",
   "libcst.matchers.Element",
   "libcst.matchers.SaveMatchedNode",
   "libcst.matchers.Tuple",
   "libcst.matchers.ZeroOrMore",
   "libcst.matchers.ZeroOrOne",
   "libcst.matchers.extract",
   "libcst.parse_expression"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_optional_wildcard_head": {
  "lineno": 325,
  "symbols_in_volume": [
   "libcst.matchers.Element",
   "libcst.matchers.Integer",
   "libcst.matchers.List",
   "libcst.matchers.SaveMatchedNode",
   "libcst.matchers.ZeroOrMore",
   "libcst.matchers.extract",
   "libcst.parse_expression"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_optional_wildcard_present": {
  "lineno": 353,
  "symbols_in_volume": [
   "libcst.Call",
   "libcst.Tuple",
   "libcst.ensure_type",
   "libcst.matchers.Arg",
   "libcst.matchers.Attribute",
   "libcst.matchers.Call",
   "libcst.matchers.DoNotCare",
   "libcst.matchers.Element",
   "libcst.matchers.SaveMatchedNode",
   "libcst.matchers.Tuple",
   "libcst.matchers.ZeroOrOne",
   "libcst.matchers.extract",
   "libcst.parse_expression"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_optional_wildcard_tail": {
  "lineno": 339,
  "symbols_in_volume": [
   "libcst.matchers.Element",
   "libcst.matchers.Integer",
   "libcst.matchers.List",
   "libcst.matchers.SaveMatchedNode",
   "libcst.matchers.ZeroOrMore",
   "libcst.matchers.extract",
   "libcst.parse_expression"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_precedence_parent": {
  "lineno": 224,
  "symbols_in_volume": [
   "libcst.Tuple",
   "libcst.ensure_type",
   "libcst.matchers.Arg",
   "libcst.matchers.Call",
   "libcst.matchers.DoNotCare",
   "libcst.matchers.Element",
   "libcst.matchers.Name",
   "libcst.matchers.SaveMatchedNode",
   "libcst.matchers.Tuple",
   "libcst.matchers.extract",
   "libcst.parse_expression"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_precedence_sequence": {
  "lineno": 248,
  "symbols_in_volume": [
   "libcst.Call",
   "libcst.Tuple",
   "libcst.ensure_type",
   "libcst.matchers.Arg",
   "libcst.matchers.Call",
   "libcst.matchers.DoNotCare",
   "libcst.matchers.Element",
   "libcst.matchers.SaveMatchedNode",
   "libcst.matchers.Tuple",
   "libcst.matchers.extract",
   "libcst.parse_expression"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_precedence_sequence_wildcard": {
  "lineno": 275,
  "symbols_in_volume": [
   "libcst.Call",
   "libcst.Tuple",
   "libcst.ensure_type",
   "libcst.matchers.Arg",
   "libcst.matchers.Call",
   "libcst.matchers.DoNotCare",
   "libcst.matchers.Element",
   "libcst.matchers.SaveMatchedNode",
   "libcst.matchers.Tuple",
   "libcst.matchers.ZeroOrMore",
   "libcst.matchers.extract",
   "libcst.parse_expression"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_predicates": {
  "lineno": 105,
  "symbols_in_volume": [
   "libcst.BinaryOperation",
   "libcst.Call",
   "libcst.Tuple",
   "libcst.ensure_type",
   "libcst.matchers.Attribute",
   "libcst.matchers.BinaryOperation",
   "libcst.matchers.Call",
   "libcst.matchers.Element",
   "libcst.matchers.Name",
   "libcst.matchers.SaveMatchedNode",
   "libcst.matchers.Tuple",
   "libcst.matchers.extract",
   "libcst.parse_expression"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_sentinel": {
  "lineno": 23,
  "symbols_in_volume": [
   "libcst.MaybeSentinel.DEFAULT",
   "libcst.RemovalSentinel.REMOVE",
   "libcst.matchers.Call",
   "libcst.matchers.Name",
   "libcst.matchers.SaveMatchedNode",
   "libcst.matchers.extract"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_sequence": {
  "lineno": 383,
  "symbols_in_volume": [
   "libcst.Call",
   "libcst.Tuple",
   "libcst.ensure_type",
   "libcst.matchers.Call",
   "libcst.matchers.DoNotCare",
   "libcst.matchers.Element",
   "libcst.matchers.SaveMatchedNode",
   "libcst.matchers.Tuple",
   "libcst.matchers.ZeroOrMore",
   "libcst.matchers.extract",
   "libcst.parse_expression"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_sequence_element": {
  "lineno": 399,
  "symbols_in_volume": [
   "libcst.Call",
   "libcst.Tuple",
   "libcst.ensure_type",
   "libcst.matchers.Arg",
   "libcst.matchers.Call",
   "libcst.matchers.DoNotCare",
   "libcst.matchers.Element",
   "libcst.matchers.SaveMatchedNode",
   "libcst.matchers.Subscript",
   "libcst.matchers.Tuple",
   "libcst.matchers.ZeroOrMore",
   "libcst.matchers.extract",
   "libcst.parse_expression"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_sequence_multiple_wildcards": {
  "lineno": 436,
  "symbols_in_volume": [
   "libcst.Tuple",
   "libcst.ensure_type",
   "libcst.matchers.Element",
   "libcst.matchers.Integer",
   "libcst.matchers.SaveMatchedNode",
   "libcst.matchers.Tuple",
   "libcst.matchers.ZeroOrMore",
   "libcst.matchers.extract",
   "libcst.parse_expression"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_simple": {
  "lineno": 47,
  "symbols_in_volume": [
   "libcst.BinaryOperation",
   "libcst.Tuple",
   "libcst.ensure_type",
   "libcst.matchers.BinaryOperation",
   "libcst.matchers.Call",
   "libcst.matchers.Element",
   "libcst.matchers.Name",
   "libcst.matchers.SaveMatchedNode",
   "libcst.matchers.Subscript",
   "libcst.matchers.Tuple",
   "libcst.matchers.extract",
   "libcst.parse_expression"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_extract.MatchersExtractTest.test_extract_tautology": {
  "lineno": 36,
  "symbols_in_volume": [
   "libcst.matchers.BinaryOperation",
   "libcst.matchers.Call",
   "libcst.matchers.Element",
   "libcst.matchers.SaveMatchedNode",
   "libcst.matchers.Tuple",
   "libcst.matchers.extract",
   "libcst.parse_expression"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_findall": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.matchers.tests.test_findall.MatchersExtractAllTest": {
  "lineno": 166,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_findall.MatchersExtractAllTest.test_extractall_simple": {
  "lineno": 167,
  "symbols_in_volume": [
   "libcst.Call",
   "libcst.Tuple",
   "libcst.ensure_type",
   "libcst.matchers.Arg",
   "libcst.matchers.Name",
   "libcst.matchers.SaveMatchedNode",
   "libcst.matchers.extractall",
   "libcst.parse_expression"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_findall.MatchersFindAllTest": {
  "lineno": 17,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_findall.MatchersFindAllTest.assertNodeSequenceEqual": {
  "lineno": 18,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_findall.MatchersFindAllTest.test_findall_with_metadata_wrapper": {
  "lineno": 57,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.matchers.MatchMetadata",
   "libcst.matchers.findall",
   "libcst.metadata.ExpressionContext.STORE",
   "libcst.metadata.ExpressionContextProvider",
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_findall.MatchersFindAllTest.test_findall_with_sentinels": {
  "lineno": 36,
  "symbols_in_volume": [
   "libcst.MaybeSentinel.DEFAULT",
   "libcst.RemovalSentinel.REMOVE",
   "libcst.matchers.Name",
   "libcst.matchers.findall"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_findall.MatchersFindAllTest.test_findall_with_transformers": {
  "lineno": 132,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_findall.MatchersFindAllTest.test_findall_with_transformers.TestTransformer": {
  "lineno": 134,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer",
   "libcst.metadata.ExpressionContextProvider",
   "libcst.metadata.ProviderT",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_findall.MatchersFindAllTest.test_findall_with_transformers.TestTransformer.__init__": {
  "lineno": 139,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_findall.MatchersFindAllTest.test_findall_with_transformers.TestTransformer.visit_Module": {
  "lineno": 143,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.matchers.MatchMetadata",
   "libcst.metadata.ExpressionContext.STORE",
   "libcst.metadata.ExpressionContextProvider"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_findall.MatchersFindAllTest.test_findall_with_visitors": {
  "lineno": 99,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_findall.MatchersFindAllTest.test_findall_with_visitors.TestVisitor": {
  "lineno": 101,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableVisitor",
   "libcst.metadata.ExpressionContextProvider",
   "libcst.metadata.ProviderT",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_findall.MatchersFindAllTest.test_findall_with_visitors.TestVisitor.__init__": {
  "lineno": 106,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_findall.MatchersFindAllTest.test_findall_with_visitors.TestVisitor.visit_Module": {
  "lineno": 110,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.matchers.MatchMetadata",
   "libcst.metadata.ExpressionContext.STORE",
   "libcst.metadata.ExpressionContextProvider"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_findall.MatchersFindAllTest.test_simple_findall": {
  "lineno": 43,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.matchers.Name",
   "libcst.matchers.findall",
   "libcst.parse_module",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest": {
  "lineno": 12,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_and_matcher_false": {
  "lineno": 1134,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.Call",
   "libcst.Integer",
   "libcst.Name",
   "libcst.matchers.AllOf",
   "libcst.matchers.Arg",
   "libcst.matchers.Call",
   "libcst.matchers.Integer",
   "libcst.matchers.Name",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_and_matcher_true": {
  "lineno": 1103,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.Call",
   "libcst.Integer",
   "libcst.Name",
   "libcst.matchers.AllOf",
   "libcst.matchers.Arg",
   "libcst.matchers.Call",
   "libcst.matchers.Integer",
   "libcst.matchers.MatchRegex",
   "libcst.matchers.Name",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_and_operator_matcher_false": {
  "lineno": 1192,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.matchers.Name",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_and_operator_matcher_true": {
  "lineno": 1163,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.matchers.MatchIfTrue",
   "libcst.matchers.MatchRegex",
   "libcst.matchers.Name",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_at_least_n_matcher_args_false": {
  "lineno": 824,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.Call",
   "libcst.Integer",
   "libcst.Name",
   "libcst.matchers.Arg",
   "libcst.matchers.AtLeastN",
   "libcst.matchers.Call",
   "libcst.matchers.Integer",
   "libcst.matchers.Name",
   "libcst.matchers.SimpleString",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_at_least_n_matcher_args_true": {
  "lineno": 763,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.Call",
   "libcst.Integer",
   "libcst.Name",
   "libcst.matchers.Arg",
   "libcst.matchers.AtLeastN",
   "libcst.matchers.Call",
   "libcst.matchers.Integer",
   "libcst.matchers.Name",
   "libcst.matchers.OneOf",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_at_least_n_matcher_no_args_false": {
  "lineno": 590,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.Call",
   "libcst.Integer",
   "libcst.Name",
   "libcst.matchers.Arg",
   "libcst.matchers.AtLeastN",
   "libcst.matchers.Call",
   "libcst.matchers.Integer",
   "libcst.matchers.Name",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_at_least_n_matcher_no_args_true": {
  "lineno": 459,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.Call",
   "libcst.Integer",
   "libcst.Name",
   "libcst.matchers.Arg",
   "libcst.matchers.AtLeastN",
   "libcst.matchers.Call",
   "libcst.matchers.Integer",
   "libcst.matchers.Name",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_at_most_n_matcher_args_false": {
  "lineno": 1060,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.Call",
   "libcst.Integer",
   "libcst.Name",
   "libcst.matchers.Arg",
   "libcst.matchers.AtMostN",
   "libcst.matchers.Call",
   "libcst.matchers.Integer",
   "libcst.matchers.Name",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_at_most_n_matcher_args_true": {
  "lineno": 1002,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.Call",
   "libcst.Integer",
   "libcst.Name",
   "libcst.matchers.Arg",
   "libcst.matchers.AtMostN",
   "libcst.matchers.Call",
   "libcst.matchers.Integer",
   "libcst.matchers.Name",
   "libcst.matchers.OneOf",
   "libcst.matchers.ZeroOrOne",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_at_most_n_matcher_no_args_false": {
  "lineno": 954,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.Call",
   "libcst.Integer",
   "libcst.Name",
   "libcst.matchers.Arg",
   "libcst.matchers.AtMostN",
   "libcst.matchers.Call",
   "libcst.matchers.Integer",
   "libcst.matchers.Name",
   "libcst.matchers.ZeroOrOne",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_at_most_n_matcher_no_args_true": {
  "lineno": 888,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.Call",
   "libcst.Integer",
   "libcst.Name",
   "libcst.matchers.Arg",
   "libcst.matchers.AtMostN",
   "libcst.matchers.Call",
   "libcst.matchers.Integer",
   "libcst.matchers.Name",
   "libcst.matchers.ZeroOrOne",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_complex_matcher_false": {
  "lineno": 121,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.Call",
   "libcst.Integer",
   "libcst.Name",
   "libcst.matchers.Arg",
   "libcst.matchers.Call",
   "libcst.matchers.DoNotCare",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Integer",
   "libcst.matchers.Name",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_complex_matcher_true": {
  "lineno": 21,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.Call",
   "libcst.Integer",
   "libcst.Name",
   "libcst.matchers.Arg",
   "libcst.matchers.Call",
   "libcst.matchers.DoNotCare",
   "libcst.matchers.Integer",
   "libcst.matchers.Name",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_does_not_match_false": {
  "lineno": 1284,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.Call",
   "libcst.Integer",
   "libcst.Name",
   "libcst.matchers.Arg",
   "libcst.matchers.Call",
   "libcst.matchers.DoesNotMatch",
   "libcst.matchers.Integer",
   "libcst.matchers.MatchRegex",
   "libcst.matchers.Name",
   "libcst.matchers.OneOf",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_does_not_match_operator_false": {
  "lineno": 1332,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.Call",
   "libcst.Integer",
   "libcst.Name",
   "libcst.matchers.Arg",
   "libcst.matchers.Call",
   "libcst.matchers.Integer",
   "libcst.matchers.MatchRegex",
   "libcst.matchers.Name",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_does_not_match_operator_true": {
  "lineno": 1238,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.Call",
   "libcst.Integer",
   "libcst.Name",
   "libcst.matchers.Arg",
   "libcst.matchers.Call",
   "libcst.matchers.MatchRegex",
   "libcst.matchers.Name",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_does_not_match_true": {
  "lineno": 1196,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.Call",
   "libcst.Integer",
   "libcst.Name",
   "libcst.matchers.Arg",
   "libcst.matchers.Call",
   "libcst.matchers.DoesNotMatch",
   "libcst.matchers.Integer",
   "libcst.matchers.MatchRegex",
   "libcst.matchers.Name",
   "libcst.matchers.OneOf",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_inverse_inverse_is_identity": {
  "lineno": 1372,
  "symbols_in_volume": [
   "libcst.matchers.DoesNotMatch",
   "libcst.matchers.Name"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_lambda_matcher_false": {
  "lineno": 1087,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.matchers.MatchIfTrue",
   "libcst.matchers.Name",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_lambda_matcher_true": {
  "lineno": 1079,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.matchers.MatchIfTrue",
   "libcst.matchers.Name",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_or_matcher_false": {
  "lineno": 246,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.Assign",
   "libcst.AssignTarget",
   "libcst.Call",
   "libcst.Integer",
   "libcst.Name",
   "libcst.matchers.Arg",
   "libcst.matchers.Assign",
   "libcst.matchers.Call",
   "libcst.matchers.Integer",
   "libcst.matchers.Name",
   "libcst.matchers.OneOf",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_or_matcher_true": {
  "lineno": 205,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.Assign",
   "libcst.AssignTarget",
   "libcst.Call",
   "libcst.Integer",
   "libcst.Name",
   "libcst.matchers.Arg",
   "libcst.matchers.Assign",
   "libcst.matchers.Call",
   "libcst.matchers.Integer",
   "libcst.matchers.Name",
   "libcst.matchers.OneOf",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_or_operator_matcher_false": {
  "lineno": 305,
  "symbols_in_volume": [
   "libcst.Assign",
   "libcst.AssignTarget",
   "libcst.Name",
   "libcst.matchers.Assign",
   "libcst.matchers.Name",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_or_operator_matcher_true": {
  "lineno": 287,
  "symbols_in_volume": [
   "libcst.Assign",
   "libcst.AssignTarget",
   "libcst.Name",
   "libcst.matchers.Assign",
   "libcst.matchers.Name",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_regex_matcher_false": {
  "lineno": 1099,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.matchers.MatchRegex",
   "libcst.matchers.Name",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_regex_matcher_true": {
  "lineno": 1095,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.matchers.MatchRegex",
   "libcst.matchers.Name",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_simple_matcher_false": {
  "lineno": 17,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.matchers.Name",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_simple_matcher_true": {
  "lineno": 13,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.matchers.Name",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_zero_or_more_matcher_args_false": {
  "lineno": 724,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.Call",
   "libcst.Integer",
   "libcst.Name",
   "libcst.matchers.Arg",
   "libcst.matchers.Call",
   "libcst.matchers.Integer",
   "libcst.matchers.Name",
   "libcst.matchers.SimpleString",
   "libcst.matchers.ZeroOrMore",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_zero_or_more_matcher_args_true": {
  "lineno": 640,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.Call",
   "libcst.Integer",
   "libcst.Name",
   "libcst.matchers.Arg",
   "libcst.matchers.Call",
   "libcst.matchers.Integer",
   "libcst.matchers.Name",
   "libcst.matchers.OneOf",
   "libcst.matchers.ZeroOrMore",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers.MatchersMatcherTest.test_zero_or_more_matcher_no_args_true": {
  "lineno": 317,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.Call",
   "libcst.Integer",
   "libcst.Name",
   "libcst.matchers.Arg",
   "libcst.matchers.Call",
   "libcst.matchers.Integer",
   "libcst.matchers.Name",
   "libcst.matchers.ZeroOrMore",
   "libcst.matchers.matches"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersMetadataTest": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersMetadataTest._make_coderange": {
  "lineno": 32,
  "symbols_in_volume": [
   "libcst.metadata.CodePosition",
   "libcst.metadata.CodeRange",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersMetadataTest._make_fixture": {
  "lineno": 17,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.Expr",
   "libcst.MetadataWrapper",
   "libcst.SimpleStatementLine",
   "libcst.ensure_type",
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module",
   "textwrap.dedent",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersMetadataTest.test_lambda_metadata_matcher": {
  "lineno": 320,
  "symbols_in_volume": [
   "libcst.FunctionDef",
   "libcst.MetadataWrapper",
   "libcst.ensure_type",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.MatchMetadataIfTrue",
   "libcst.matchers.matches",
   "libcst.metadata.QualifiedNameProvider",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersMetadataTest.test_lambda_metadata_matcher_operators": {
  "lineno": 379,
  "symbols_in_volume": [
   "libcst.FunctionDef",
   "libcst.MetadataWrapper",
   "libcst.ensure_type",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.MatchMetadataIfTrue",
   "libcst.matchers.matches",
   "libcst.metadata.QualifiedNameProvider",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersMetadataTest.test_lambda_metadata_matcher_with_no_metadata": {
  "lineno": 358,
  "symbols_in_volume": [
   "libcst.FunctionDef",
   "libcst.ensure_type",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.MatchMetadataIfTrue",
   "libcst.matchers.matches",
   "libcst.metadata.QualifiedNameProvider",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersMetadataTest.test_predicate_logic": {
  "lineno": 104,
  "symbols_in_volume": [
   "libcst.matchers.AllOf",
   "libcst.matchers.BinaryOperation",
   "libcst.matchers.DoesNotMatch",
   "libcst.matchers.MatchMetadata",
   "libcst.matchers.OneOf",
   "libcst.matchers.matches",
   "libcst.metadata.ExpressionContext.LOAD",
   "libcst.metadata.ExpressionContext.STORE",
   "libcst.metadata.ExpressionContextProvider",
   "libcst.metadata.PositionProvider"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersMetadataTest.test_predicate_logic_on_attributes": {
  "lineno": 198,
  "symbols_in_volume": [
   "libcst.matchers.AllOf",
   "libcst.matchers.BinaryOperation",
   "libcst.matchers.DoesNotMatch",
   "libcst.matchers.Integer",
   "libcst.matchers.MatchMetadata",
   "libcst.matchers.Name",
   "libcst.matchers.OneOf",
   "libcst.matchers.matches",
   "libcst.metadata.ExpressionContext.LOAD",
   "libcst.metadata.ExpressionContext.STORE",
   "libcst.metadata.ExpressionContextProvider",
   "libcst.metadata.PositionProvider"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersMetadataTest.test_predicate_logic_operators": {
  "lineno": 150,
  "symbols_in_volume": [
   "libcst.matchers.BinaryOperation",
   "libcst.matchers.MatchMetadata",
   "libcst.matchers.matches",
   "libcst.metadata.ExpressionContext.LOAD",
   "libcst.metadata.ExpressionContext.STORE",
   "libcst.metadata.ExpressionContextProvider",
   "libcst.metadata.PositionProvider"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersMetadataTest.test_predicate_logic_operators_on_attributes": {
  "lineno": 262,
  "symbols_in_volume": [
   "libcst.matchers.BinaryOperation",
   "libcst.matchers.Integer",
   "libcst.matchers.MatchMetadata",
   "libcst.matchers.Name",
   "libcst.matchers.matches",
   "libcst.metadata.ExpressionContext.LOAD",
   "libcst.metadata.ExpressionContext.STORE",
   "libcst.metadata.ExpressionContextProvider",
   "libcst.metadata.PositionProvider"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersMetadataTest.test_simple_matcher_false": {
  "lineno": 72,
  "symbols_in_volume": [
   "libcst.matchers.BinaryOperation",
   "libcst.matchers.MatchMetadata",
   "libcst.matchers.Name",
   "libcst.matchers.matches",
   "libcst.metadata.PositionProvider"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersMetadataTest.test_simple_matcher_true": {
  "lineno": 40,
  "symbols_in_volume": [
   "libcst.matchers.BinaryOperation",
   "libcst.matchers.MatchMetadata",
   "libcst.matchers.Name",
   "libcst.matchers.matches",
   "libcst.metadata.PositionProvider"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest": {
  "lineno": 441,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest._make_fixture": {
  "lineno": 442,
  "symbols_in_volume": [
   "libcst.MetadataWrapper",
   "libcst.parse_module",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_decorator_on_transformers": {
  "lineno": 567,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_decorator_on_transformers.TestTransformer": {
  "lineno": 569,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer",
   "libcst.metadata.ExpressionContextProvider",
   "libcst.metadata.ProviderT",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_decorator_on_transformers.TestTransformer.__init__": {
  "lineno": 574,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_decorator_on_transformers.TestTransformer._visit_assignments": {
  "lineno": 578,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.matchers.MatchMetadata",
   "libcst.matchers.Name",
   "libcst.matchers.visit",
   "libcst.metadata.ExpressionContext.STORE",
   "libcst.metadata.ExpressionContextProvider"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_decorator_on_visitors": {
  "lineno": 527,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_decorator_on_visitors.TestVisitor": {
  "lineno": 529,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableVisitor",
   "libcst.metadata.ExpressionContextProvider",
   "libcst.metadata.ProviderT",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_decorator_on_visitors.TestVisitor.__init__": {
  "lineno": 534,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_decorator_on_visitors.TestVisitor._visit_assignments": {
  "lineno": 538,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.matchers.MatchMetadata",
   "libcst.matchers.Name",
   "libcst.matchers.visit",
   "libcst.metadata.ExpressionContext.STORE",
   "libcst.metadata.ExpressionContextProvider"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_on_transformers": {
  "lineno": 486,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_on_transformers.TestTransformer": {
  "lineno": 488,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer",
   "libcst.metadata.ExpressionContextProvider",
   "libcst.metadata.ProviderT",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_on_transformers.TestTransformer.__init__": {
  "lineno": 493,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_on_transformers.TestTransformer.visit_Name": {
  "lineno": 497,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.matchers.MatchMetadata",
   "libcst.matchers.Name",
   "libcst.metadata.ExpressionContext.STORE",
   "libcst.metadata.ExpressionContextProvider"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_on_visitors": {
  "lineno": 445,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_on_visitors.TestVisitor": {
  "lineno": 447,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableVisitor",
   "libcst.metadata.ExpressionContextProvider",
   "libcst.metadata.ProviderT",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_on_visitors.TestVisitor.__init__": {
  "lineno": 452,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_matchers_with_metadata.MatchersVisitorMetadataTest.test_matches_on_visitors.TestVisitor.visit_Name": {
  "lineno": 456,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.matchers.MatchMetadata",
   "libcst.matchers.Name",
   "libcst.metadata.ExpressionContext.STORE",
   "libcst.metadata.ExpressionContextProvider"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_replace": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest": {
  "lineno": 14,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_actual": {
  "lineno": 77,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.ensure_type",
   "libcst.matchers.Name",
   "libcst.matchers.replace",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_actual._swap_bools": {
  "lineno": 78,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Name",
   "libcst.ensure_type",
   "typing.Dict",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_add_one": {
  "lineno": 98,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.ensure_type",
   "libcst.matchers.Integer",
   "libcst.matchers.replace",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_add_one._add_one": {
  "lineno": 99,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Integer",
   "libcst.ensure_type",
   "typing.Dict",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_add_one_to_foo_args": {
  "lineno": 112,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.ensure_type",
   "libcst.matchers.Arg",
   "libcst.matchers.Call",
   "libcst.matchers.Integer",
   "libcst.matchers.Name",
   "libcst.matchers.SaveMatchedNode",
   "libcst.matchers.replace",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_add_one_to_foo_args._add_one_to_arg": {
  "lineno": 113,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Integer",
   "libcst.ensure_type",
   "typing.Dict",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_metadata": {
  "lineno": 177,
  "symbols_in_volume": [
   "libcst.MetadataWrapper",
   "libcst.Module",
   "libcst.ensure_type",
   "libcst.matchers.MatchMetadataIfTrue",
   "libcst.matchers.Name",
   "libcst.matchers.replace",
   "libcst.metadata.QualifiedNameProvider",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_metadata._rename_foo": {
  "lineno": 178,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Name",
   "libcst.ensure_type",
   "typing.Dict",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_metadata_on_transform": {
  "lineno": 206,
  "symbols_in_volume": [
   "libcst.MetadataWrapper",
   "libcst.Module",
   "libcst.ensure_type",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_metadata_on_transform.TestTransformer": {
  "lineno": 218,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer",
   "libcst.metadata.ProviderT",
   "libcst.metadata.QualifiedNameProvider",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_metadata_on_transform.TestTransformer.leave_Module": {
  "lineno": 223,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.ensure_type",
   "libcst.matchers.MatchMetadataIfTrue",
   "libcst.matchers.Name",
   "libcst.metadata.QualifiedNameProvider"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_metadata_on_transform._rename_foo": {
  "lineno": 207,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Name",
   "libcst.ensure_type",
   "typing.Dict",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_noop": {
  "lineno": 34,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.ensure_type",
   "libcst.matchers.Name",
   "libcst.matchers.replace",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_noop._swap_bools": {
  "lineno": 35,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Name",
   "libcst.ensure_type",
   "typing.Dict",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_sentinel": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst.MaybeSentinel.DEFAULT",
   "libcst.RemovalSentinel.REMOVE",
   "libcst.matchers.Name",
   "libcst.matchers.replace"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_sentinel._swap_bools": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Name",
   "libcst.ensure_type",
   "typing.Dict",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_sequence_extract": {
  "lineno": 146,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.ensure_type",
   "libcst.matchers.FunctionDef",
   "libcst.matchers.Param",
   "libcst.matchers.Parameters",
   "libcst.matchers.SaveMatchedNode",
   "libcst.matchers.ZeroOrMore",
   "libcst.matchers.replace",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_sequence_extract._reverse_params": {
  "lineno": 147,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.FunctionDef",
   "libcst.Parameters",
   "libcst.ensure_type",
   "typing.Dict",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_simple": {
  "lineno": 54,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.Name",
   "libcst.ensure_type",
   "libcst.matchers.Name",
   "libcst.matchers.replace",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_simple_sentinel": {
  "lineno": 67,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.RemoveFromParent",
   "libcst.ensure_type",
   "libcst.matchers.Param",
   "libcst.matchers.replace",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_updated_node_changes": {
  "lineno": 249,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.ensure_type",
   "libcst.matchers.Arg",
   "libcst.matchers.Call",
   "libcst.matchers.SaveMatchedNode",
   "libcst.matchers.replace",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_replace.MatchersReplaceTest.test_replace_updated_node_changes._replace_nested": {
  "lineno": 250,
  "symbols_in_volume": [
   "libcst.Arg",
   "libcst.CSTNode",
   "libcst.Call",
   "libcst.Name",
   "libcst.ensure_type",
   "typing.Dict",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest": {
  "lineno": 21,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_bad_leave_collecter_decorator": {
  "lineno": 462,
  "symbols_in_volume": [
   "libcst.matchers.MatchDecoratorMismatch"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_bad_leave_collecter_decorator.TestVisitor": {
  "lineno": 463,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableVisitor"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_bad_leave_collecter_decorator.TestVisitor.leave_SimpleString": {
  "lineno": 464,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.SimpleString",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_bad_leave_transform_decorator": {
  "lineno": 490,
  "symbols_in_volume": [
   "libcst.matchers.MatchDecoratorMismatch"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_bad_leave_transform_decorator.TestVisitor": {
  "lineno": 491,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_bad_leave_transform_decorator.TestVisitor.leave_SimpleString": {
  "lineno": 492,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.SimpleString",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_bad_visit_collecter_decorator": {
  "lineno": 449,
  "symbols_in_volume": [
   "libcst.matchers.MatchDecoratorMismatch"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_bad_visit_collecter_decorator.TestVisitor": {
  "lineno": 450,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableVisitor"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_bad_visit_collecter_decorator.TestVisitor.visit_SimpleString": {
  "lineno": 451,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.SimpleString",
   "libcst.matchers.visit"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_bad_visit_transform_decorator": {
  "lineno": 477,
  "symbols_in_volume": [
   "libcst.matchers.MatchDecoratorMismatch"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_bad_visit_transform_decorator.TestVisitor": {
  "lineno": 478,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_bad_visit_transform_decorator.TestVisitor.visit_SimpleString": {
  "lineno": 479,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.SimpleString",
   "libcst.matchers.visit"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_leave_num_params": {
  "lineno": 234,
  "symbols_in_volume": [
   "libcst.matchers.MatchDecoratorMismatch"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_leave_num_params.TestVisitor": {
  "lineno": 235,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableVisitor"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_leave_num_params.TestVisitor._string_leave": {
  "lineno": 236,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.SimpleString",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_leave_return": {
  "lineno": 249,
  "symbols_in_volume": [
   "libcst.matchers.MatchDecoratorMismatch"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_leave_return.TestVisitor": {
  "lineno": 250,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableVisitor"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_leave_return.TestVisitor._string_leave": {
  "lineno": 251,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.SimpleString",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_leave_superclass": {
  "lineno": 419,
  "symbols_in_volume": [
   "libcst.matchers.MatchDecoratorMismatch"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_leave_superclass.TestVisitor": {
  "lineno": 420,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableVisitor"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_leave_superclass.TestVisitor._string_leave": {
  "lineno": 421,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.matchers.Pass",
   "libcst.matchers.SimpleString",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_leave_union": {
  "lineno": 391,
  "symbols_in_volume": [
   "libcst.matchers.MatchDecoratorMismatch"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_leave_union.TestVisitor": {
  "lineno": 392,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableVisitor"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_leave_union.TestVisitor._string_leave": {
  "lineno": 393,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.Name",
   "libcst.matchers.SimpleString",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_visit_num_params": {
  "lineno": 204,
  "symbols_in_volume": [
   "libcst.matchers.MatchDecoratorMismatch"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_visit_num_params.TestVisitor": {
  "lineno": 205,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableVisitor"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_visit_num_params.TestVisitor._string_visit": {
  "lineno": 206,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.SimpleString",
   "libcst.matchers.visit"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_visit_return": {
  "lineno": 163,
  "symbols_in_volume": [
   "libcst.matchers.MatchDecoratorMismatch"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_visit_return.TestVisitor": {
  "lineno": 164,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableVisitor"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_visit_return.TestVisitor._string_visit": {
  "lineno": 165,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.SimpleString",
   "libcst.matchers.visit"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_visit_superclass": {
  "lineno": 365,
  "symbols_in_volume": [
   "libcst.matchers.MatchDecoratorMismatch"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_visit_superclass.TestVisitor": {
  "lineno": 366,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableVisitor"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_visit_superclass.TestVisitor._string_visit": {
  "lineno": 367,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.matchers.Pass",
   "libcst.matchers.SimpleString",
   "libcst.matchers.visit"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_visit_union": {
  "lineno": 339,
  "symbols_in_volume": [
   "libcst.matchers.MatchDecoratorMismatch"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_visit_union.TestVisitor": {
  "lineno": 340,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableVisitor"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_collector_visit_union.TestVisitor._string_visit": {
  "lineno": 341,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.Name",
   "libcst.matchers.SimpleString",
   "libcst.matchers.visit"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_num_params": {
  "lineno": 219,
  "symbols_in_volume": [
   "libcst.matchers.MatchDecoratorMismatch"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_num_params.TestVisitor": {
  "lineno": 220,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_num_params.TestVisitor._string_leave": {
  "lineno": 221,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.SimpleString",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_return_invalid_maybe": {
  "lineno": 292,
  "symbols_in_volume": [
   "libcst.matchers.MatchDecoratorMismatch"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_return_invalid_maybe.TestVisitor": {
  "lineno": 293,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_return_invalid_maybe.TestVisitor._string_visit": {
  "lineno": 294,
  "symbols_in_volume": [
   "libcst.MaybeSentinel",
   "libcst.SimpleString",
   "libcst.matchers.SimpleString",
   "libcst.matchers.leave",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_return_invalid_remove": {
  "lineno": 307,
  "symbols_in_volume": [
   "libcst.matchers.MatchDecoratorMismatch"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_return_invalid_remove.TestVisitor": {
  "lineno": 308,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_return_invalid_remove.TestVisitor._string_visit": {
  "lineno": 309,
  "symbols_in_volume": [
   "libcst.RemovalSentinel",
   "libcst.SimpleString",
   "libcst.matchers.SimpleString",
   "libcst.matchers.leave",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_return_invalid_superclass": {
  "lineno": 262,
  "symbols_in_volume": [
   "libcst.matchers.MatchDecoratorMismatch"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_return_invalid_superclass.TestVisitor": {
  "lineno": 263,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_return_invalid_superclass.TestVisitor._string_visit": {
  "lineno": 264,
  "symbols_in_volume": [
   "libcst.BaseParenthesizableWhitespace",
   "libcst.SimpleString",
   "libcst.SimpleWhitespace",
   "libcst.matchers.SimpleString",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_return_invalid_union": {
  "lineno": 322,
  "symbols_in_volume": [
   "libcst.matchers.MatchDecoratorMismatch"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_return_invalid_union.TestVisitor": {
  "lineno": 323,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_return_invalid_union.TestVisitor._string_leave": {
  "lineno": 324,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.Pass",
   "libcst.SimpleString",
   "libcst.matchers.Name",
   "libcst.matchers.SimpleString",
   "libcst.matchers.leave",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_return_wrong_type": {
  "lineno": 277,
  "symbols_in_volume": [
   "libcst.matchers.MatchDecoratorMismatch"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_return_wrong_type.TestVisitor": {
  "lineno": 278,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_return_wrong_type.TestVisitor._string_visit": {
  "lineno": 279,
  "symbols_in_volume": [
   "libcst.Pass",
   "libcst.SimpleString",
   "libcst.matchers.SimpleString",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_superclass": {
  "lineno": 432,
  "symbols_in_volume": [
   "libcst.matchers.MatchDecoratorMismatch"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_superclass.TestVisitor": {
  "lineno": 433,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_superclass.TestVisitor._string_leave": {
  "lineno": 434,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.matchers.Pass",
   "libcst.matchers.SimpleString",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_union": {
  "lineno": 404,
  "symbols_in_volume": [
   "libcst.matchers.MatchDecoratorMismatch"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_union.TestVisitor": {
  "lineno": 405,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_leave_union.TestVisitor._string_leave": {
  "lineno": 406,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.SimpleString",
   "libcst.matchers.Name",
   "libcst.matchers.SimpleString",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_visit_num_params": {
  "lineno": 189,
  "symbols_in_volume": [
   "libcst.matchers.MatchDecoratorMismatch"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_visit_num_params.TestVisitor": {
  "lineno": 190,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_visit_num_params.TestVisitor._string_visit": {
  "lineno": 191,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.SimpleString",
   "libcst.matchers.visit"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_visit_return": {
  "lineno": 176,
  "symbols_in_volume": [
   "libcst.matchers.MatchDecoratorMismatch"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_visit_return.TestVisitor": {
  "lineno": 177,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_visit_return.TestVisitor._string_visit": {
  "lineno": 178,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.SimpleString",
   "libcst.matchers.visit"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_visit_superclass": {
  "lineno": 378,
  "symbols_in_volume": [
   "libcst.matchers.MatchDecoratorMismatch"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_visit_superclass.TestVisitor": {
  "lineno": 379,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_visit_superclass.TestVisitor._string_visit": {
  "lineno": 380,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.matchers.Pass",
   "libcst.matchers.SimpleString",
   "libcst.matchers.visit"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_visit_union": {
  "lineno": 352,
  "symbols_in_volume": [
   "libcst.matchers.MatchDecoratorMismatch"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_visit_union.TestVisitor": {
  "lineno": 353,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_invalid_transformer_visit_union.TestVisitor._string_visit": {
  "lineno": 354,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.Name",
   "libcst.matchers.SimpleString",
   "libcst.matchers.visit"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_pickleable_exception": {
  "lineno": 505,
  "symbols_in_volume": [
   "libcst.matchers.MatchDecoratorMismatch",
   "pickle.dumps",
   "pickle.loads"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_leave_superclass": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_leave_superclass.TestVisitor": {
  "lineno": 120,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableVisitor"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_leave_superclass.TestVisitor._string_leave": {
  "lineno": 121,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.matchers.Name",
   "libcst.matchers.SimpleString",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_leave_union": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_leave_union.TestVisitor": {
  "lineno": 98,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableVisitor"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_leave_union.TestVisitor._string_leave": {
  "lineno": 99,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.SimpleString",
   "libcst.matchers.Name",
   "libcst.matchers.SimpleString",
   "libcst.matchers.leave",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_simple": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_simple.TestVisitor": {
  "lineno": 23,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableVisitor"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_simple.TestVisitor._string_leave": {
  "lineno": 28,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.SimpleString",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_simple.TestVisitor._string_visit": {
  "lineno": 24,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.SimpleString",
   "libcst.matchers.visit"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_visit_superclass": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_visit_superclass.TestVisitor": {
  "lineno": 80,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableVisitor"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_visit_superclass.TestVisitor._string_visit": {
  "lineno": 81,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.matchers.Name",
   "libcst.matchers.SimpleString",
   "libcst.matchers.visit"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_visit_union": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_visit_union.TestVisitor": {
  "lineno": 62,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableVisitor"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_collector_visit_union.TestVisitor._string_visit": {
  "lineno": 63,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.SimpleString",
   "libcst.matchers.Name",
   "libcst.matchers.SimpleString",
   "libcst.matchers.visit",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_base_class": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_base_class.TestVisitor": {
  "lineno": 51,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_base_class.TestVisitor._string_leave": {
  "lineno": 52,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.SimpleString",
   "libcst.matchers.SimpleString",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_leave_return_maybe": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_leave_return_maybe.TestVisitor": {
  "lineno": 142,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_leave_return_maybe.TestVisitor._assign_equal_leave": {
  "lineno": 143,
  "symbols_in_volume": [
   "libcst.AssignEqual",
   "libcst.MaybeSentinel",
   "libcst.matchers.AssignEqual",
   "libcst.matchers.leave",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_leave_return_remove": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_leave_return_remove.TestVisitor": {
  "lineno": 153,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_leave_return_remove.TestVisitor._string_visit": {
  "lineno": 154,
  "symbols_in_volume": [
   "libcst.AssignTarget",
   "libcst.RemovalSentinel",
   "libcst.matchers.AssignTarget",
   "libcst.matchers.leave",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_leave_superclass": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_leave_superclass.TestVisitor": {
  "lineno": 129,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_leave_superclass.TestVisitor._string_leave": {
  "lineno": 130,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.matchers.Name",
   "libcst.matchers.SimpleString",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_leave_union": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_leave_union.TestVisitor": {
  "lineno": 107,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_leave_union.TestVisitor._string_leave": {
  "lineno": 108,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.SimpleString",
   "libcst.matchers.Name",
   "libcst.matchers.SimpleString",
   "libcst.matchers.leave",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_simple": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_simple.TestVisitor": {
  "lineno": 36,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_simple.TestVisitor._string_leave": {
  "lineno": 41,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.SimpleString",
   "libcst.matchers.leave"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_simple.TestVisitor._string_visit": {
  "lineno": 37,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "libcst.matchers.SimpleString",
   "libcst.matchers.visit"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_visit_superclass": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_visit_superclass.TestVisitor": {
  "lineno": 89,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_visit_superclass.TestVisitor._string_visit": {
  "lineno": 90,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.matchers.Name",
   "libcst.matchers.SimpleString",
   "libcst.matchers.visit"
  ],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_visit_union": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_visit_union.TestVisitor": {
  "lineno": 71,
  "symbols_in_volume": [
   "libcst.matchers.MatcherDecoratableTransformer"
  ],
  "type": "class"
 },
 "libcst.matchers.tests.test_visitors.MatchersVisitLeaveDecoratorTypingTest.test_valid_transformer_visit_union.TestVisitor._string_visit": {
  "lineno": 72,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.SimpleString",
   "libcst.matchers.Name",
   "libcst.matchers.SimpleString",
   "libcst.matchers.visit",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.metadata": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.metadata.base_provider": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.TYPE_CHECKING",
   "typing.Type",
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "libcst.metadata.base_provider.BaseMetadataProvider": {
  "lineno": 43,
  "symbols_in_volume": [
   "libcst._metadata_dependent.MetadataDependent",
   "pathlib.Path",
   "typing.Callable",
   "typing.Generic",
   "typing.List",
   "typing.Mapping",
   "typing.MutableMapping",
   "typing.Optional"
  ],
  "type": "class"
 },
 "libcst.metadata.base_provider.BaseMetadataProvider.__init__": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.base_provider.BaseMetadataProvider._gen": {
  "lineno": 73,
  "symbols_in_volume": [
   "types.MappingProxyType",
   "typing.Mapping"
  ],
  "type": "function"
 },
 "libcst.metadata.base_provider.BaseMetadataProvider._gen_impl": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.base_provider.BaseMetadataProvider.get_metadata": {
  "lineno": 107,
  "symbols_in_volume": [
   "libcst._metadata_dependent._T",
   "libcst._metadata_dependent._UNDEFINED_DEFAULT",
   "typing.Type",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.metadata.base_provider.BaseMetadataProvider.set_metadata": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.base_provider.BatchableMetadataProvider": {
  "lineno": 140,
  "symbols_in_volume": [
   "libcst._batched_visitor.BatchableCSTVisitor"
  ],
  "type": "class"
 },
 "libcst.metadata.base_provider.BatchableMetadataProvider._gen_impl": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.base_provider.VisitorMetadataProvider": {
  "lineno": 127,
  "symbols_in_volume": [
   "libcst._visitors.CSTVisitor"
  ],
  "type": "class"
 },
 "libcst.metadata.base_provider.VisitorMetadataProvider._gen_impl": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.expression_context_provider": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.metadata.expression_context_provider.ExpressionContext": {
  "lineno": 14,
  "symbols_in_volume": [
   "enum.Enum",
   "enum.auto"
  ],
  "type": "class"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextProvider": {
  "lineno": 159,
  "symbols_in_volume": [
   "libcst.metadata.base_provider.BatchableMetadataProvider",
   "typing.Optional"
  ],
  "type": "class"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextProvider.visit_Module": {
  "lineno": 177,
  "symbols_in_volume": [
   "libcst.Module",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor": {
  "lineno": 55,
  "symbols_in_volume": [
   "libcst.CSTVisitor"
  ],
  "type": "class"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor.__init__": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor.visit_AnnAssign": {
  "lineno": 70,
  "symbols_in_volume": [
   "libcst.AnnAssign"
  ],
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor.visit_AsName": {
  "lineno": 91,
  "symbols_in_volume": [
   "libcst.AsName",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor.visit_Assign": {
  "lineno": 62,
  "symbols_in_volume": [
   "libcst.Assign"
  ],
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor.visit_Attribute": {
  "lineno": 126,
  "symbols_in_volume": [
   "libcst.Attribute"
  ],
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor.visit_AugAssign": {
  "lineno": 80,
  "symbols_in_volume": [
   "libcst.AugAssign"
  ],
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor.visit_CompFor": {
  "lineno": 97,
  "symbols_in_volume": [
   "libcst.CompFor"
  ],
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor.visit_Del": {
  "lineno": 120,
  "symbols_in_volume": [
   "libcst.Del"
  ],
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor.visit_For": {
  "lineno": 109,
  "symbols_in_volume": [
   "libcst.For"
  ],
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor.visit_List": {
  "lineno": 152,
  "symbols_in_volume": [
   "libcst.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor.visit_Name": {
  "lineno": 87,
  "symbols_in_volume": [
   "libcst.Name"
  ],
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor.visit_StarredElement": {
  "lineno": 155,
  "symbols_in_volume": [
   "libcst.StarredElement",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor.visit_Subscript": {
  "lineno": 134,
  "symbols_in_volume": [
   "libcst.Subscript",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst.metadata.expression_context_provider.ExpressionContextVisitor.visit_Tuple": {
  "lineno": 149,
  "symbols_in_volume": [
   "libcst.Tuple",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.full_repo_manager": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.TYPE_CHECKING"
  ],
  "type": "module"
 },
 "libcst.metadata.full_repo_manager.FullRepoManager": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.metadata.full_repo_manager.FullRepoManager.__init__": {
  "lineno": 19,
  "symbols_in_volume": [
   "pathlib.Path",
   "typing.Collection",
   "typing.Dict",
   "typing.List",
   "typing.Mapping"
  ],
  "type": "function"
 },
 "libcst.metadata.full_repo_manager.FullRepoManager.cache": {
  "lineno": 43,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.Mapping"
  ],
  "type": "function"
 },
 "libcst.metadata.full_repo_manager.FullRepoManager.get_cache_for_path": {
  "lineno": 71,
  "symbols_in_volume": [
   "typing.Mapping"
  ],
  "type": "function"
 },
 "libcst.metadata.full_repo_manager.FullRepoManager.get_metadata_wrapper_for_path": {
  "lineno": 95,
  "symbols_in_volume": [
   "libcst.metadata.wrapper.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.full_repo_manager.FullRepoManager.resolve_cache": {
  "lineno": 53,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.Mapping"
  ],
  "type": "function"
 },
 "libcst.metadata.parent_node_provider": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.metadata.parent_node_provider.ParentNodeProvider": {
  "lineno": 24,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.metadata.base_provider.BatchableMetadataProvider",
   "typing.Optional"
  ],
  "type": "class"
 },
 "libcst.metadata.parent_node_provider.ParentNodeProvider.visit_Module": {
  "lineno": 25,
  "symbols_in_volume": [
   "libcst.Module",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.parent_node_provider.ParentNodeVisitor": {
  "lineno": 13,
  "symbols_in_volume": [
   "libcst.CSTVisitor"
  ],
  "type": "class"
 },
 "libcst.metadata.parent_node_provider.ParentNodeVisitor.__init__": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.parent_node_provider.ParentNodeVisitor.on_leave": {
  "lineno": 18,
  "symbols_in_volume": [
   "libcst.CSTNode"
  ],
  "type": "function"
 },
 "libcst.metadata.position_provider": {
  "lineno": null,
  "symbols_in_volume": [
   "re.compile",
   "typing.Pattern"
  ],
  "type": "module"
 },
 "libcst.metadata.position_provider.PositionProvider": {
  "lineno": 120,
  "symbols_in_volume": [
   "libcst._position.CodeRange",
   "libcst.metadata.base_provider.BaseMetadataProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.position_provider.PositionProvider._gen_impl": {
  "lineno": 132,
  "symbols_in_volume": [
   "libcst._nodes.module.Module"
  ],
  "type": "function"
 },
 "libcst.metadata.position_provider.PositionProvidingCodegenState": {
  "lineno": 92,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots"
  ],
  "type": "class"
 },
 "libcst.metadata.position_provider.PositionProvidingCodegenState.record_syntactic_position": {
  "lineno": 95,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "libcst._nodes.base.CSTNode",
   "libcst._position.CodePosition",
   "libcst._position.CodeRange",
   "typing.Iterator",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.position_provider.WhitespaceInclusivePositionProvider": {
  "lineno": 75,
  "symbols_in_volume": [
   "libcst._position.CodeRange",
   "libcst.metadata.base_provider.BaseMetadataProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.position_provider.WhitespaceInclusivePositionProvider._gen_impl": {
  "lineno": 83,
  "symbols_in_volume": [
   "libcst._nodes.module.Module"
  ],
  "type": "function"
 },
 "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState": {
  "lineno": 23,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "dataclasses.field",
   "libcst._add_slots.add_slots",
   "libcst._nodes.internal.CodegenState",
   "libcst._position.CodePosition",
   "libcst._position.CodeRange",
   "libcst.metadata.base_provider.BaseMetadataProvider",
   "typing.List"
  ],
  "type": "class"
 },
 "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState._update_position": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState.add_indent_tokens": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState.add_token": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState.after_codegen": {
  "lineno": 63,
  "symbols_in_volume": [
   "libcst._position.CodePosition",
   "libcst._position.CodeRange"
  ],
  "type": "function"
 },
 "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState.before_codegen": {
  "lineno": 60,
  "symbols_in_volume": [
   "libcst._position.CodePosition"
  ],
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.metadata.reentrant_codegen.CodegenPartial": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.metadata.reentrant_codegen.CodegenPartial.__init__": {
  "lineno": 33,
  "symbols_in_volume": [
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen.CodegenPartial.get_modified_module_bytes": {
  "lineno": 91,
  "symbols_in_volume": [
   "libcst.BaseStatement"
  ],
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen.CodegenPartial.get_modified_module_code": {
  "lineno": 82,
  "symbols_in_volume": [
   "libcst.BaseStatement"
  ],
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen.CodegenPartial.get_modified_statement_code": {
  "lineno": 66,
  "symbols_in_volume": [
   "libcst.BaseStatement",
   "libcst._nodes.internal.CodegenState"
  ],
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen.CodegenPartial.get_original_module_bytes": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen.CodegenPartial.get_original_module_code": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen.CodegenPartial.get_original_statement_code": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen.ExperimentalReentrantCodegenProvider": {
  "lineno": 170,
  "symbols_in_volume": [
   "libcst.metadata.BaseMetadataProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.reentrant_codegen.ExperimentalReentrantCodegenProvider._gen_impl": {
  "lineno": 202,
  "symbols_in_volume": [
   "libcst.Module"
  ],
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen._ReentrantCodegenState": {
  "lineno": 101,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "dataclasses.field",
   "libcst._add_slots.add_slots",
   "libcst._nodes.internal.CodegenState",
   "libcst.metadata.BaseMetadataProvider",
   "typing.List",
   "typing.Optional"
  ],
  "type": "class"
 },
 "libcst.metadata.reentrant_codegen._ReentrantCodegenState.add_indent_tokens": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen._ReentrantCodegenState.add_token": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen._ReentrantCodegenState.after_codegen": {
  "lineno": 135,
  "symbols_in_volume": [
   "libcst.BaseStatement",
   "libcst.CSTNode"
  ],
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen._ReentrantCodegenState.before_codegen": {
  "lineno": 129,
  "symbols_in_volume": [
   "libcst.BaseStatement",
   "libcst.CSTNode"
  ],
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen._ReentrantCodegenState.decrease_indent": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen._ReentrantCodegenState.get_code": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen._ReentrantCodegenState.increase_indent": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.reentrant_codegen._ReentrantCodegenState.pop_trailing_newline": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.scope_provider": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.metadata.scope_provider.Access": {
  "lineno": 39,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst.Attribute",
   "libcst.Name",
   "libcst._add_slots.add_slots",
   "typing.Set",
   "typing.Union"
  ],
  "type": "class"
 },
 "libcst.metadata.scope_provider.Access.__hash__": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.scope_provider.Access.__init__": {
  "lineno": 70,
  "symbols_in_volume": [
   "libcst.Name"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.Access.record_assignment": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.scope_provider.Access.record_assignments": {
  "lineno": 87,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.Access.referents": {
  "lineno": 79,
  "symbols_in_volume": [
   "typing.Collection"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.Accesses": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.metadata.scope_provider.Accesses.__contains__": {
  "lineno": 185,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.Accesses.__getitem__": {
  "lineno": 180,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "typing.Collection",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.Accesses.__init__": {
  "lineno": 171,
  "symbols_in_volume": [
   "typing.Collection",
   "typing.Mapping"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.Accesses.__iter__": {
  "lineno": 174,
  "symbols_in_volume": [
   "typing.Iterator"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.Assignment": {
  "lineno": 122,
  "symbols_in_volume": [
   "libcst.CSTNode"
  ],
  "type": "class"
 },
 "libcst.metadata.scope_provider.Assignment.__init__": {
  "lineno": 129,
  "symbols_in_volume": [
   "libcst.CSTNode"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.Assignments": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.metadata.scope_provider.Assignments.__contains__": {
  "lineno": 163,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.Assignments.__getitem__": {
  "lineno": 158,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "typing.Collection",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.Assignments.__init__": {
  "lineno": 149,
  "symbols_in_volume": [
   "typing.Collection",
   "typing.Mapping"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.Assignments.__iter__": {
  "lineno": 152,
  "symbols_in_volume": [
   "typing.Iterator"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.BaseAssignment": {
  "lineno": 91,
  "symbols_in_volume": [
   "abc.ABC",
   "typing.Set"
  ],
  "type": "class"
 },
 "libcst.metadata.scope_provider.BaseAssignment.__hash__": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.scope_provider.BaseAssignment.__init__": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.scope_provider.BaseAssignment.record_access": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.scope_provider.BaseAssignment.record_accesses": {
  "lineno": 109,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.BaseAssignment.references": {
  "lineno": 112,
  "symbols_in_volume": [
   "typing.Collection"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.BuiltinAssignment": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.metadata.scope_provider.ClassScope": {
  "lineno": 554,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.metadata.scope_provider.ClassScope._contains_in_self_or_parent": {
  "lineno": 583,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ClassScope._getitem_from_self_or_parent": {
  "lineno": 576,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ClassScope._record_assignment_as_parent": {
  "lineno": 559,
  "symbols_in_volume": [
   "libcst.CSTNode"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ComprehensionScope": {
  "lineno": 591,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.metadata.scope_provider.FunctionScope": {
  "lineno": 545,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.metadata.scope_provider.GlobalScope": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.metadata.scope_provider.GlobalScope.__contains__": {
  "lineno": 479,
  "symbols_in_volume": [
   "builtins"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.GlobalScope.__getitem__": {
  "lineno": 484,
  "symbols_in_volume": [
   "builtins",
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.GlobalScope.__init__": {
  "lineno": 475,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.scope_provider.GlobalScope.record_global_overwrite": {
  "lineno": 492,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.scope_provider.GlobalScope.record_nonlocal_overwrite": {
  "lineno": 495,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.scope_provider.LocalScope": {
  "lineno": 499,
  "symbols_in_volume": [
   "abc.ABC",
   "libcst.CSTNode",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "class"
 },
 "libcst.metadata.scope_provider.LocalScope.__contains__": {
  "lineno": 528,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.scope_provider.LocalScope.__getitem__": {
  "lineno": 535,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.LocalScope.__init__": {
  "lineno": 508,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.LocalScope.record_assignment": {
  "lineno": 522,
  "symbols_in_volume": [
   "libcst.CSTNode"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.LocalScope.record_global_overwrite": {
  "lineno": 516,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.scope_provider.LocalScope.record_nonlocal_overwrite": {
  "lineno": 519,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.scope_provider.QualifiedName": {
  "lineno": 196,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "libcst._add_slots.add_slots"
  ],
  "type": "class"
 },
 "libcst.metadata.scope_provider.QualifiedNameProvider": {
  "lineno": 955,
  "symbols_in_volume": [
   "libcst.metadata.base_provider.BatchableMetadataProvider",
   "typing.Collection"
  ],
  "type": "class"
 },
 "libcst.metadata.scope_provider.QualifiedNameProvider.has_name": {
  "lineno": 996,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst._metadata_dependent.MetadataDependent",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.QualifiedNameProvider.visit_Module": {
  "lineno": 992,
  "symbols_in_volume": [
   "libcst.Module",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.QualifiedNameSource": {
  "lineno": 190,
  "symbols_in_volume": [
   "enum.Enum",
   "enum.auto"
  ],
  "type": "class"
 },
 "libcst.metadata.scope_provider.QualifiedNameVisitor": {
  "lineno": 941,
  "symbols_in_volume": [
   "libcst.CSTVisitor"
  ],
  "type": "class"
 },
 "libcst.metadata.scope_provider.QualifiedNameVisitor.__init__": {
  "lineno": 942,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.scope_provider.QualifiedNameVisitor.on_visit": {
  "lineno": 945,
  "symbols_in_volume": [
   "libcst.CSTNode"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.Scope": {
  "lineno": 290,
  "symbols_in_volume": [
   "abc.ABC",
   "typing.MutableMapping",
   "typing.Set"
  ],
  "type": "class"
 },
 "libcst.metadata.scope_provider.Scope.__contains__": {
  "lineno": 342,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.Scope.__getitem__": {
  "lineno": 347,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.Scope.__hash__": {
  "lineno": 387,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.scope_provider.Scope.__init__": {
  "lineno": 317,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.Scope._contains_in_self_or_parent": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.scope_provider.Scope._getitem_from_self_or_parent": {
  "lineno": 330,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.Scope._record_assignment_as_parent": {
  "lineno": 338,
  "symbols_in_volume": [
   "libcst.CSTNode"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.Scope.accesses": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.scope_provider.Scope.assignments": {
  "lineno": 459,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.scope_provider.Scope.get_qualified_names_for": {
  "lineno": 398,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Import",
   "libcst.ImportFrom",
   "libcst.helpers.get_full_name_for_node",
   "typing.Collection",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.Scope.record_access": {
  "lineno": 327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.scope_provider.Scope.record_assignment": {
  "lineno": 324,
  "symbols_in_volume": [
   "libcst.CSTNode"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.Scope.record_global_overwrite": {
  "lineno": 390,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.Scope.record_nonlocal_overwrite": {
  "lineno": 394,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeProvider": {
  "lineno": 921,
  "symbols_in_volume": [
   "libcst.metadata.base_provider.BatchableMetadataProvider",
   "libcst.metadata.expression_context_provider.ExpressionContextProvider",
   "typing.Optional"
  ],
  "type": "class"
 },
 "libcst.metadata.scope_provider.ScopeProvider.visit_Module": {
  "lineno": 935,
  "symbols_in_volume": [
   "libcst.Module",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor": {
  "lineno": 639,
  "symbols_in_volume": [
   "libcst.CSTVisitor"
  ],
  "type": "class"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.__init__": {
  "lineno": 641,
  "symbols_in_volume": [
   "libcst.Annotation",
   "libcst.Attribute",
   "libcst.Call",
   "typing.List",
   "typing.Optional",
   "typing.Set",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor._handle_string_annotation": {
  "lineno": 731,
  "symbols_in_volume": [
   "libcst.ConcatenatedString",
   "libcst.SimpleString",
   "libcst.parse_module",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor._new_scope": {
  "lineno": 648,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "libcst.CSTNode",
   "typing.Iterator",
   "typing.Optional",
   "typing.Type"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor._switch_scope": {
  "lineno": 659,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor._visit_comp_alike": {
  "lineno": 836,
  "symbols_in_volume": [
   "libcst.DictComp",
   "libcst.GeneratorExp",
   "libcst.ListComp",
   "libcst.SetComp",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor._visit_import_alike": {
  "lineno": 668,
  "symbols_in_volume": [
   "libcst.Import",
   "libcst.ImportFrom",
   "libcst.ImportStar",
   "libcst.Name",
   "libcst.ensure_type",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.infer_accesses": {
  "lineno": 890,
  "symbols_in_volume": [
   "collections.defaultdict",
   "libcst.Name",
   "libcst.ensure_type"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.leave_Annotation": {
  "lineno": 720,
  "symbols_in_volume": [
   "libcst.Annotation"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.leave_Call": {
  "lineno": 713,
  "symbols_in_volume": [
   "libcst.Call"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.on_leave": {
  "lineno": 916,
  "symbols_in_volume": [
   "libcst.CSTNode"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_Annotation": {
  "lineno": 717,
  "symbols_in_volume": [
   "libcst.Annotation",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_Arg": {
  "lineno": 792,
  "symbols_in_volume": [
   "libcst.Arg"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_Attribute": {
  "lineno": 692,
  "symbols_in_volume": [
   "libcst.Attribute",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_Call": {
  "lineno": 700,
  "symbols_in_volume": [
   "libcst.Call",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_ClassDef": {
  "lineno": 799,
  "symbols_in_volume": [
   "libcst.ClassDef",
   "libcst.helpers.get_full_name_for_node",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_ConcatenatedString": {
  "lineno": 727,
  "symbols_in_volume": [
   "libcst.ConcatenatedString",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_DictComp": {
  "lineno": 830,
  "symbols_in_volume": [
   "libcst.DictComp",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_FunctionDef": {
  "lineno": 760,
  "symbols_in_volume": [
   "libcst.FunctionDef",
   "libcst.helpers.get_full_name_for_node",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_GeneratorExp": {
  "lineno": 833,
  "symbols_in_volume": [
   "libcst.GeneratorExp",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_Global": {
  "lineno": 814,
  "symbols_in_volume": [
   "libcst.Global",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_Import": {
  "lineno": 686,
  "symbols_in_volume": [
   "libcst.Import",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_ImportFrom": {
  "lineno": 689,
  "symbols_in_volume": [
   "libcst.ImportFrom",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_Lambda": {
  "lineno": 776,
  "symbols_in_volume": [
   "libcst.Lambda",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_ListComp": {
  "lineno": 824,
  "symbols_in_volume": [
   "libcst.ListComp",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_Name": {
  "lineno": 749,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.metadata.expression_context_provider.ExpressionContext.DEL",
   "libcst.metadata.expression_context_provider.ExpressionContext.LOAD",
   "libcst.metadata.expression_context_provider.ExpressionContext.STORE",
   "libcst.metadata.expression_context_provider.ExpressionContextProvider",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_Nonlocal": {
  "lineno": 819,
  "symbols_in_volume": [
   "libcst.Nonlocal",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_Param": {
  "lineno": 782,
  "symbols_in_volume": [
   "libcst.Param",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_SetComp": {
  "lineno": 827,
  "symbols_in_volume": [
   "libcst.SetComp",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_SimpleString": {
  "lineno": 723,
  "symbols_in_volume": [
   "libcst.SimpleString",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider.ScopeVisitor.visit_Subscript": {
  "lineno": 740,
  "symbols_in_volume": [
   "libcst.Subscript",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider._NameUtil": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.metadata.scope_provider._NameUtil.find_qualified_name_for_import_alike": {
  "lineno": 223,
  "symbols_in_volume": [
   "libcst.Import",
   "libcst.ImportFrom",
   "libcst.ImportStar",
   "libcst.helpers.get_full_name_for_node",
   "typing.Set",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider._NameUtil.find_qualified_name_for_non_import": {
  "lineno": 265,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider._NameUtil.get_name_for": {
  "lineno": 208,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Call",
   "libcst.ClassDef",
   "libcst.FunctionDef",
   "libcst.Name",
   "libcst.Subscript",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.metadata.scope_provider._gen_dotted_names": {
  "lineno": 609,
  "symbols_in_volume": [
   "libcst.Attribute",
   "libcst.Call",
   "libcst.Name",
   "typing.Iterator",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.metadata.span_provider": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.metadata.span_provider.ByteSpanPositionProvider": {
  "lineno": 91,
  "symbols_in_volume": [
   "libcst.metadata.base_provider.BaseMetadataProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.span_provider.ByteSpanPositionProvider._gen_impl": {
  "lineno": 104,
  "symbols_in_volume": [
   "libcst.Module"
  ],
  "type": "function"
 },
 "libcst.metadata.span_provider.CodeSpan": {
  "lineno": 16,
  "symbols_in_volume": [
   "dataclasses.dataclass"
  ],
  "type": "class"
 },
 "libcst.metadata.span_provider.SpanProvidingCodegenState": {
  "lineno": 31,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "dataclasses.field",
   "libcst._nodes.internal.CodegenState",
   "libcst.metadata.base_provider.BaseMetadataProvider",
   "typing.Callable",
   "typing.List",
   "typing.Optional"
  ],
  "type": "class"
 },
 "libcst.metadata.span_provider.SpanProvidingCodegenState._update_position": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.span_provider.SpanProvidingCodegenState.add_indent_tokens": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.span_provider.SpanProvidingCodegenState.add_token": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.span_provider.SpanProvidingCodegenState.after_codegen": {
  "lineno": 54,
  "symbols_in_volume": [
   "libcst.CSTNode"
  ],
  "type": "function"
 },
 "libcst.metadata.span_provider.SpanProvidingCodegenState.before_codegen": {
  "lineno": 51,
  "symbols_in_volume": [
   "libcst.CSTNode"
  ],
  "type": "function"
 },
 "libcst.metadata.span_provider.SpanProvidingCodegenState.record_syntactic_position": {
  "lineno": 61,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "libcst.CSTNode",
   "typing.Iterator",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.span_provider.byte_length_in_utf8": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.metadata.tests.test_base_provider": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.metadata.tests.test_base_provider.BaseMetadataProviderTest": {
  "lineno": 19,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_base_provider.BaseMetadataProviderTest.test_batchable_provider": {
  "lineno": 48,
  "symbols_in_volume": [
   "libcst.SimpleStatementLine",
   "libcst.metadata.MetadataWrapper",
   "libcst.metadata.wrapper._gen_batchable",
   "libcst.parse_module",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_base_provider.BaseMetadataProviderTest.test_batchable_provider.SimpleProvider": {
  "lineno": 49,
  "symbols_in_volume": [
   "libcst.metadata.BatchableMetadataProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_base_provider.BaseMetadataProviderTest.test_batchable_provider.SimpleProvider.visit_Pass": {
  "lineno": 54,
  "symbols_in_volume": [
   "libcst.Pass"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_base_provider.BaseMetadataProviderTest.test_batchable_provider.SimpleProvider.visit_Return": {
  "lineno": 57,
  "symbols_in_volume": [
   "libcst.Return"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_base_provider.BaseMetadataProviderTest.test_visitor_provider": {
  "lineno": 20,
  "symbols_in_volume": [
   "libcst.SimpleStatementLine",
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_base_provider.BaseMetadataProviderTest.test_visitor_provider.SimpleProvider": {
  "lineno": 21,
  "symbols_in_volume": [
   "libcst.metadata.VisitorMetadataProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_base_provider.BaseMetadataProviderTest.test_visitor_provider.SimpleProvider.on_visit": {
  "lineno": 26,
  "symbols_in_volume": [
   "libcst.CSTNode"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.metadata.tests.test_expression_context_provider.DependentVisitor": {
  "lineno": 20,
  "symbols_in_volume": [
   "libcst._visitors.CSTVisitor",
   "libcst.metadata.ExpressionContextProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_expression_context_provider.DependentVisitor.__init__": {
  "lineno": 23,
  "symbols_in_volume": [
   "libcst.metadata.ExpressionContext",
   "libcst.testing.utils.UnitTest",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.DependentVisitor.visit_Attribute": {
  "lineno": 49,
  "symbols_in_volume": [
   "libcst.Attribute",
   "libcst.Module",
   "libcst.metadata.ExpressionContextProvider"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.DependentVisitor.visit_Call": {
  "lineno": 83,
  "symbols_in_volume": [
   "libcst.Call",
   "libcst.metadata.ExpressionContextProvider"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.DependentVisitor.visit_List": {
  "lineno": 76,
  "symbols_in_volume": [
   "libcst.List",
   "libcst.Module",
   "libcst.metadata.ExpressionContextProvider"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.DependentVisitor.visit_Name": {
  "lineno": 42,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.metadata.ExpressionContextProvider"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.DependentVisitor.visit_StarredElement": {
  "lineno": 62,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.StarredElement",
   "libcst.metadata.ExpressionContextProvider",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.DependentVisitor.visit_Subscript": {
  "lineno": 55,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.Subscript",
   "libcst.metadata.ExpressionContextProvider"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.DependentVisitor.visit_Tuple": {
  "lineno": 69,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.Tuple",
   "libcst.metadata.ExpressionContextProvider"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest": {
  "lineno": 88,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_annassign": {
  "lineno": 192,
  "symbols_in_volume": [
   "libcst.metadata.ExpressionContext.LOAD",
   "libcst.metadata.ExpressionContext.STORE",
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_assign_to_attribute": {
  "lineno": 107,
  "symbols_in_volume": [
   "libcst.metadata.ExpressionContext.LOAD",
   "libcst.metadata.ExpressionContext.STORE",
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_assign_with_subscript": {
  "lineno": 146,
  "symbols_in_volume": [
   "libcst.metadata.ExpressionContext.LOAD",
   "libcst.metadata.ExpressionContext.STORE",
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_augassign": {
  "lineno": 180,
  "symbols_in_volume": [
   "libcst.metadata.ExpressionContext.LOAD",
   "libcst.metadata.ExpressionContext.STORE",
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_del_simple": {
  "lineno": 218,
  "symbols_in_volume": [
   "libcst.metadata.ExpressionContext.DEL",
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_del_with_subscript": {
  "lineno": 224,
  "symbols_in_volume": [
   "libcst.metadata.ExpressionContext.DEL",
   "libcst.metadata.ExpressionContext.LOAD",
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_del_with_tuple": {
  "lineno": 237,
  "symbols_in_volume": [
   "libcst.metadata.ExpressionContext.DEL",
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_except_as": {
  "lineno": 353,
  "symbols_in_volume": [
   "libcst.metadata.ExpressionContext.LOAD",
   "libcst.metadata.ExpressionContext.STORE",
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_expressions_with_assign": {
  "lineno": 320,
  "symbols_in_volume": [
   "libcst.metadata.ExpressionContext.LOAD",
   "libcst.metadata.ExpressionContext.STORE",
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_for": {
  "lineno": 367,
  "symbols_in_volume": [
   "libcst.metadata.ExpressionContext.LOAD",
   "libcst.metadata.ExpressionContext.STORE",
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_invalid_type_for_context": {
  "lineno": 335,
  "symbols_in_volume": [
   "libcst.metadata.ExpressionContext.LOAD",
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_list_with_assign": {
  "lineno": 282,
  "symbols_in_volume": [
   "libcst.metadata.ExpressionContext.LOAD",
   "libcst.metadata.ExpressionContext.STORE",
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_nested_list_with_assign": {
  "lineno": 298,
  "symbols_in_volume": [
   "libcst.metadata.ExpressionContext.LOAD",
   "libcst.metadata.ExpressionContext.STORE",
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_nested_tuple_with_assign": {
  "lineno": 263,
  "symbols_in_volume": [
   "libcst.metadata.ExpressionContext.LOAD",
   "libcst.metadata.ExpressionContext.STORE",
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_simple_assign": {
  "lineno": 95,
  "symbols_in_volume": [
   "libcst.metadata.ExpressionContext.LOAD",
   "libcst.metadata.ExpressionContext.STORE",
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_simple_load": {
  "lineno": 89,
  "symbols_in_volume": [
   "libcst.metadata.ExpressionContext.LOAD",
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_starred_element_with_assign": {
  "lineno": 205,
  "symbols_in_volume": [
   "libcst.metadata.ExpressionContext.LOAD",
   "libcst.metadata.ExpressionContext.STORE",
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_tuple_with_assign": {
  "lineno": 250,
  "symbols_in_volume": [
   "libcst.metadata.ExpressionContext.LOAD",
   "libcst.metadata.ExpressionContext.STORE",
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_expression_context_provider.ExpressionContextProviderTest.test_with_as": {
  "lineno": 341,
  "symbols_in_volume": [
   "libcst.metadata.ExpressionContext.LOAD",
   "libcst.metadata.ExpressionContext.STORE",
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_full_repo_manager": {
  "lineno": null,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "module"
 },
 "libcst.metadata.tests.test_full_repo_manager.FullRepoManagerTest": {
  "lineno": 19,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_full_repo_manager.FullRepoManagerTest.test_get_full_repo_cache": {
  "lineno": 52,
  "symbols_in_volume": [
   "json.loads",
   "libcst.metadata.full_repo_manager.FullRepoManager",
   "libcst.metadata.type_inference_provider.TypeInferenceProvider",
   "pathlib.Path",
   "unittest.mock.Mock",
   "unittest.mock.patch.object"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_full_repo_manager.FullRepoManagerTest.test_get_metadata_wrapper_with_empty_cache": {
  "lineno": 20,
  "symbols_in_volume": [
   "libcst.metadata.full_repo_manager.FullRepoManager",
   "libcst.metadata.type_inference_provider.TypeInferenceProvider",
   "unittest.mock.Mock",
   "unittest.mock.patch.object"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_full_repo_manager.FullRepoManagerTest.test_get_metadata_wrapper_with_invalid_path": {
  "lineno": 39,
  "symbols_in_volume": [
   "libcst.metadata.full_repo_manager.FullRepoManager",
   "libcst.metadata.type_inference_provider.TypeInferenceProvider",
   "unittest.mock.Mock",
   "unittest.mock.patch.object"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_full_repo_manager.FullRepoManagerTest.test_get_metadata_wrapper_with_patched_cache": {
  "lineno": 28,
  "symbols_in_volume": [
   "json.loads",
   "libcst.metadata.full_repo_manager.FullRepoManager",
   "libcst.metadata.tests.test_type_inference_provider._test_simple_class_helper",
   "libcst.metadata.type_inference_provider.TypeInferenceProvider",
   "pathlib.Path",
   "unittest.mock.Mock",
   "unittest.mock.patch.object"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest": {
  "lineno": 20,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_batchable_provider_inherited_metadata": {
  "lineno": 234,
  "symbols_in_volume": [
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module",
   "unittest.mock.Mock"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_batchable_provider_inherited_metadata.ProviderA": {
  "lineno": 242,
  "symbols_in_volume": [
   "libcst.metadata.VisitorMetadataProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_batchable_provider_inherited_metadata.ProviderA.visit_Pass": {
  "lineno": 243,
  "symbols_in_volume": [
   "libcst.Pass"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_batchable_provider_inherited_metadata.ProviderB": {
  "lineno": 247,
  "symbols_in_volume": [
   "libcst.metadata.BatchableMetadataProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_batchable_provider_inherited_metadata.ProviderC": {
  "lineno": 250,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_batchable_provider_inherited_metadata.ProviderC.visit_Pass": {
  "lineno": 251,
  "symbols_in_volume": [
   "libcst.Pass"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_batchable_provider_inherited_metadata.VisitorA": {
  "lineno": 255,
  "symbols_in_volume": [
   "libcst._visitors.CSTTransformer"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_batched_provider": {
  "lineno": 61,
  "symbols_in_volume": [
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module",
   "unittest.mock.Mock"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_batched_provider.BatchedProviderA": {
  "lineno": 73,
  "symbols_in_volume": [
   "libcst.metadata.BatchableMetadataProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_batched_provider.BatchedProviderA.visit_Pass": {
  "lineno": 74,
  "symbols_in_volume": [
   "libcst.Pass"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_batched_provider.BatchedProviderB": {
  "lineno": 78,
  "symbols_in_volume": [
   "libcst.metadata.BatchableMetadataProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_batched_provider.BatchedProviderB.visit_Pass": {
  "lineno": 79,
  "symbols_in_volume": [
   "libcst.Pass"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_batched_provider.DependentVisitor": {
  "lineno": 83,
  "symbols_in_volume": [
   "libcst._visitors.CSTTransformer"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_batched_provider.DependentVisitor.visit_Pass": {
  "lineno": 86,
  "symbols_in_volume": [
   "libcst.Pass"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_circular_dependency": {
  "lineno": 333,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst._exceptions.MetadataException",
   "libcst.metadata.MetadataWrapper"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_circular_dependency.BadVisitor": {
  "lineno": 343,
  "symbols_in_volume": [
   "libcst._visitors.CSTTransformer"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_circular_dependency.ProviderA": {
  "lineno": 338,
  "symbols_in_volume": [
   "libcst.metadata.VisitorMetadataProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_inherited_metadata": {
  "lineno": 177,
  "symbols_in_volume": [
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module",
   "unittest.mock.Mock"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_inherited_metadata.SimpleProvider": {
  "lineno": 185,
  "symbols_in_volume": [
   "libcst.metadata.VisitorMetadataProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_inherited_metadata.SimpleProvider.visit_Pass": {
  "lineno": 186,
  "symbols_in_volume": [
   "libcst.Pass"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_inherited_metadata.VisitorA": {
  "lineno": 190,
  "symbols_in_volume": [
   "libcst._visitors.CSTTransformer"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_inherited_metadata.VisitorB": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_inherited_metadata.VisitorB.visit_Pass": {
  "lineno": 194,
  "symbols_in_volume": [
   "libcst.Pass"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_mixed_providers": {
  "lineno": 98,
  "symbols_in_volume": [
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module",
   "unittest.mock.Mock"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_mixed_providers.BatchedProviderA": {
  "lineno": 116,
  "symbols_in_volume": [
   "libcst.metadata.BatchableMetadataProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_mixed_providers.BatchedProviderA.visit_Pass": {
  "lineno": 119,
  "symbols_in_volume": [
   "libcst.Pass"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_mixed_providers.BatchedProviderB": {
  "lineno": 123,
  "symbols_in_volume": [
   "libcst.metadata.BatchableMetadataProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_mixed_providers.BatchedProviderB.visit_Pass": {
  "lineno": 126,
  "symbols_in_volume": [
   "libcst.Pass"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_mixed_providers.BatchedProviderC": {
  "lineno": 140,
  "symbols_in_volume": [
   "libcst.metadata.BatchableMetadataProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_mixed_providers.BatchedProviderC.visit_Pass": {
  "lineno": 143,
  "symbols_in_volume": [
   "libcst.Pass"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_mixed_providers.DependentProvider": {
  "lineno": 130,
  "symbols_in_volume": [
   "libcst.metadata.VisitorMetadataProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_mixed_providers.DependentProvider.on_visit": {
  "lineno": 133,
  "symbols_in_volume": [
   "libcst.CSTNode"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_mixed_providers.DependentVisitor": {
  "lineno": 147,
  "symbols_in_volume": [
   "libcst._visitors.CSTTransformer"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_mixed_providers.DependentVisitor.visit_Module": {
  "lineno": 155,
  "symbols_in_volume": [
   "libcst.Module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_mixed_providers.DependentVisitor.visit_Pass": {
  "lineno": 161,
  "symbols_in_volume": [
   "libcst.Pass"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_mixed_providers.SimpleProvider": {
  "lineno": 111,
  "symbols_in_volume": [
   "libcst.metadata.VisitorMetadataProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_mixed_providers.SimpleProvider.visit_Pass": {
  "lineno": 112,
  "symbols_in_volume": [
   "libcst.CSTNode"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_provider_inherited_metadata": {
  "lineno": 203,
  "symbols_in_volume": [
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module",
   "unittest.mock.Mock"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_provider_inherited_metadata.ProviderA": {
  "lineno": 211,
  "symbols_in_volume": [
   "libcst.metadata.VisitorMetadataProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_provider_inherited_metadata.ProviderA.visit_Pass": {
  "lineno": 212,
  "symbols_in_volume": [
   "libcst.Pass"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_provider_inherited_metadata.ProviderB": {
  "lineno": 216,
  "symbols_in_volume": [
   "libcst.metadata.VisitorMetadataProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_provider_inherited_metadata.ProviderC": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_provider_inherited_metadata.ProviderC.visit_Pass": {
  "lineno": 220,
  "symbols_in_volume": [
   "libcst.Pass"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_provider_inherited_metadata.Visitor": {
  "lineno": 224,
  "symbols_in_volume": [
   "libcst._visitors.CSTTransformer"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_self_metadata": {
  "lineno": 265,
  "symbols_in_volume": [
   "libcst.Module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_self_metadata.AVisitor": {
  "lineno": 282,
  "symbols_in_volume": [
   "libcst._visitors.CSTTransformer"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_self_metadata.ProviderA": {
  "lineno": 272,
  "symbols_in_volume": [
   "libcst.metadata.VisitorMetadataProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_self_metadata.ProviderA.on_leave": {
  "lineno": 277,
  "symbols_in_volume": [
   "libcst.CSTNode"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_self_metadata.ProviderA.on_visit": {
  "lineno": 273,
  "symbols_in_volume": [
   "libcst.CSTNode"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_undeclared_metadata": {
  "lineno": 308,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.metadata.MetadataWrapper"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_undeclared_metadata.AVisitor": {
  "lineno": 319,
  "symbols_in_volume": [
   "libcst._visitors.CSTTransformer"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_undeclared_metadata.AVisitor.on_visit": {
  "lineno": 322,
  "symbols_in_volume": [
   "libcst.CSTNode"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_undeclared_metadata.ProviderA": {
  "lineno": 313,
  "symbols_in_volume": [
   "libcst.metadata.VisitorMetadataProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_undeclared_metadata.ProviderB": {
  "lineno": 316,
  "symbols_in_volume": [
   "libcst.metadata.VisitorMetadataProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_unset_metadata": {
  "lineno": 287,
  "symbols_in_volume": [
   "libcst.Module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_unset_metadata.AVisitor": {
  "lineno": 295,
  "symbols_in_volume": [
   "libcst._visitors.CSTTransformer"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_unset_metadata.AVisitor.on_visit": {
  "lineno": 298,
  "symbols_in_volume": [
   "libcst.CSTNode"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_unset_metadata.ProviderA": {
  "lineno": 292,
  "symbols_in_volume": [
   "libcst.metadata.VisitorMetadataProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_visitor_provider": {
  "lineno": 21,
  "symbols_in_volume": [
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_visitor_provider.DependentProvider": {
  "lineno": 37,
  "symbols_in_volume": [
   "libcst.metadata.VisitorMetadataProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_visitor_provider.DependentProvider.on_visit": {
  "lineno": 40,
  "symbols_in_volume": [
   "libcst.CSTNode"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_visitor_provider.DependentVisitor": {
  "lineno": 44,
  "symbols_in_volume": [
   "libcst._visitors.CSTTransformer"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_visitor_provider.DependentVisitor.visit_Module": {
  "lineno": 48,
  "symbols_in_volume": [
   "libcst.Module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_visitor_provider.DependentVisitor.visit_Pass": {
  "lineno": 53,
  "symbols_in_volume": [
   "libcst.Pass"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_visitor_provider.SimpleProvider": {
  "lineno": 32,
  "symbols_in_volume": [
   "libcst.metadata.VisitorMetadataProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_provider.MetadataProviderTest.test_visitor_provider.SimpleProvider.on_visit": {
  "lineno": 33,
  "symbols_in_volume": [
   "libcst.CSTNode"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_wrapper": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.metadata.tests.test_metadata_wrapper.MetadataWrapperTest": {
  "lineno": 14,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_wrapper.MetadataWrapperTest.test_copies_tree": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_wrapper.MetadataWrapperTest.test_equality_by_identity": {
  "lineno": 26,
  "symbols_in_volume": [
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_wrapper.MetadataWrapperTest.test_hash_by_identity": {
  "lineno": 34,
  "symbols_in_volume": [
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_wrapper.MetadataWrapperTest.test_metadata_cache": {
  "lineno": 46,
  "symbols_in_volume": [
   "libcst.SimpleStatementLine",
   "libcst.ensure_type",
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_wrapper.MetadataWrapperTest.test_metadata_cache.DummyMetadataProvider": {
  "lineno": 47,
  "symbols_in_volume": [
   "libcst.metadata.BatchableMetadataProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_wrapper.MetadataWrapperTest.test_metadata_cache.SimpleCacheMetadataProvider": {
  "lineno": 57,
  "symbols_in_volume": [
   "libcst.metadata.BatchableMetadataProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_metadata_wrapper.MetadataWrapperTest.test_metadata_cache.SimpleCacheMetadataProvider.__init__": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_wrapper.MetadataWrapperTest.test_metadata_cache.SimpleCacheMetadataProvider.visit_Pass": {
  "lineno": 64,
  "symbols_in_volume": [
   "libcst.Pass",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_metadata_wrapper.MetadataWrapperTest.test_unsafe_skip_copy": {
  "lineno": 21,
  "symbols_in_volume": [
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_parent_node_provider": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.metadata.tests.test_parent_node_provider.DependentVisitor": {
  "lineno": 14,
  "symbols_in_volume": [
   "libcst.CSTVisitor",
   "libcst.metadata.ParentNodeProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_parent_node_provider.DependentVisitor.__init__": {
  "lineno": 17,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_parent_node_provider.DependentVisitor.on_visit": {
  "lineno": 20,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.metadata.ParentNodeProvider"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_parent_node_provider.ParentNodeProviderTest": {
  "lineno": 27,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_parent_node_provider.ParentNodeProviderTest.test_parent_node_provier": {
  "lineno": 28,
  "symbols_in_volume": [
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module",
   "libcst.testing.utils.data_provider",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_position_provider": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.metadata.tests.test_position_provider.PositionProviderTest": {
  "lineno": 32,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_position_provider.PositionProviderTest.test_batchable_provider": {
  "lineno": 72,
  "symbols_in_volume": [
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_position_provider.PositionProviderTest.test_batchable_provider.ABatchable": {
  "lineno": 75,
  "symbols_in_volume": [
   "libcst._batched_visitor.BatchableCSTVisitor",
   "libcst.metadata.PositionProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_position_provider.PositionProviderTest.test_batchable_provider.ABatchable.visit_Pass": {
  "lineno": 78,
  "symbols_in_volume": [
   "libcst.Pass",
   "libcst.metadata.CodeRange",
   "libcst.metadata.PositionProvider"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_position_provider.PositionProviderTest.test_equal_range": {
  "lineno": 52,
  "symbols_in_volume": [
   "libcst.metadata.CodeRange",
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_position_provider.PositionProviderTest.test_equal_range.EqualPositionVisitor": {
  "lineno": 56,
  "symbols_in_volume": [
   "libcst._visitors.CSTVisitor",
   "libcst.metadata.PositionProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_position_provider.PositionProviderTest.test_equal_range.EqualPositionVisitor.visit_Equal": {
  "lineno": 59,
  "symbols_in_volume": [
   "libcst.Equal",
   "libcst.metadata.PositionProvider"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_position_provider.PositionProviderTest.test_equal_range.EqualPositionVisitor.visit_NotEqual": {
  "lineno": 64,
  "symbols_in_volume": [
   "libcst.NotEqual",
   "libcst.metadata.PositionProvider"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_position_provider.PositionProviderTest.test_visitor_provider": {
  "lineno": 33,
  "symbols_in_volume": [
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_position_provider.PositionProviderTest.test_visitor_provider.DependentVisitor": {
  "lineno": 41,
  "symbols_in_volume": [
   "libcst._visitors.CSTVisitor",
   "libcst.metadata.PositionProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_position_provider.PositionProviderTest.test_visitor_provider.DependentVisitor.visit_Pass": {
  "lineno": 44,
  "symbols_in_volume": [
   "libcst.Pass",
   "libcst.metadata.CodeRange",
   "libcst.metadata.PositionProvider"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_position_provider.PositionProvidingCodegenStateTest": {
  "lineno": 87,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_position_provider.PositionProvidingCodegenStateTest.test_codegen_add_indent_tokens": {
  "lineno": 115,
  "symbols_in_volume": [
   "libcst.metadata.WhitespaceInclusivePositionProvider",
   "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_position_provider.PositionProvidingCodegenStateTest.test_codegen_add_newline": {
  "lineno": 108,
  "symbols_in_volume": [
   "libcst.metadata.WhitespaceInclusivePositionProvider",
   "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_position_provider.PositionProvidingCodegenStateTest.test_codegen_add_token": {
  "lineno": 94,
  "symbols_in_volume": [
   "libcst.metadata.WhitespaceInclusivePositionProvider",
   "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_position_provider.PositionProvidingCodegenStateTest.test_codegen_add_tokens": {
  "lineno": 101,
  "symbols_in_volume": [
   "libcst.metadata.WhitespaceInclusivePositionProvider",
   "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_position_provider.PositionProvidingCodegenStateTest.test_codegen_decrease_indent": {
  "lineno": 123,
  "symbols_in_volume": [
   "libcst.metadata.WhitespaceInclusivePositionProvider",
   "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_position_provider.PositionProvidingCodegenStateTest.test_codegen_initial_position": {
  "lineno": 88,
  "symbols_in_volume": [
   "libcst.metadata.WhitespaceInclusivePositionProvider",
   "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_position_provider.PositionProvidingCodegenStateTest.test_position": {
  "lineno": 153,
  "symbols_in_volume": [
   "libcst.Pass",
   "libcst.metadata.CodeRange",
   "libcst.metadata.PositionProvider",
   "libcst.metadata.position_provider.PositionProvidingCodegenState"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_position_provider.PositionProvidingCodegenStateTest.test_whitespace_inclusive_position": {
  "lineno": 134,
  "symbols_in_volume": [
   "libcst.Pass",
   "libcst.metadata.CodeRange",
   "libcst.metadata.WhitespaceInclusivePositionProvider",
   "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_position_provider.position": {
  "lineno": 26,
  "symbols_in_volume": [
   "libcst.metadata.position_provider.WhitespaceInclusivePositionProvidingCodegenState",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_qualified_name_provider": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.metadata.tests.test_qualified_name_provider.ScopeProviderTest": {
  "lineno": 28,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_qualified_name_provider.ScopeProviderTest.test_comprehension": {
  "lineno": 166,
  "symbols_in_volume": [
   "libcst.ClassDef",
   "libcst.Expr",
   "libcst.FunctionDef",
   "libcst.ListComp",
   "libcst.SimpleStatementLine",
   "libcst.ensure_type",
   "libcst.metadata.QualifiedName",
   "libcst.metadata.QualifiedNameSource.LOCAL"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_qualified_name_provider.ScopeProviderTest.test_has_name_helper": {
  "lineno": 222,
  "symbols_in_volume": [
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_qualified_name_provider.ScopeProviderTest.test_has_name_helper.TestVisitor": {
  "lineno": 223,
  "symbols_in_volume": [
   "libcst.CSTVisitor",
   "libcst.metadata.QualifiedNameProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_qualified_name_provider.ScopeProviderTest.test_has_name_helper.TestVisitor.__init__": {
  "lineno": 226,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_qualified_name_provider.ScopeProviderTest.test_has_name_helper.TestVisitor.visit_Call": {
  "lineno": 229,
  "symbols_in_volume": [
   "libcst.Call",
   "libcst.metadata.QualifiedName",
   "libcst.metadata.QualifiedNameProvider.has_name",
   "libcst.metadata.QualifiedNameSource.IMPORT",
   "libcst.metadata.QualifiedNameSource.LOCAL",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_qualified_name_provider.ScopeProviderTest.test_multiple_assignments": {
  "lineno": 145,
  "symbols_in_volume": [
   "libcst.Expr",
   "libcst.SimpleStatementLine",
   "libcst.ensure_type",
   "libcst.metadata.QualifiedName",
   "libcst.metadata.QualifiedNameSource.IMPORT"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_qualified_name_provider.ScopeProviderTest.test_name_in_attribute": {
  "lineno": 247,
  "symbols_in_volume": [
   "libcst.Attribute",
   "libcst.Expr",
   "libcst.SimpleStatementLine",
   "libcst.ensure_type",
   "libcst.metadata.QualifiedName",
   "libcst.metadata.QualifiedNameSource.LOCAL"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_qualified_name_provider.ScopeProviderTest.test_nested_qualified_names": {
  "lineno": 86,
  "symbols_in_volume": [
   "libcst.ClassDef",
   "libcst.Expr",
   "libcst.FunctionDef",
   "libcst.SimpleStatementLine",
   "libcst.ensure_type",
   "libcst.metadata.QualifiedName",
   "libcst.metadata.QualifiedNameSource.LOCAL"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_qualified_name_provider.ScopeProviderTest.test_repeated_values_in_qualified_name": {
  "lineno": 267,
  "symbols_in_volume": [
   "libcst.AnnAssign",
   "libcst.Annotation",
   "libcst.Attribute",
   "libcst.ClassDef",
   "libcst.IndentedBlock",
   "libcst.SimpleStatementLine",
   "libcst.ensure_type",
   "libcst.metadata.QualifiedName",
   "libcst.metadata.QualifiedNameSource.IMPORT"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_qualified_name_provider.ScopeProviderTest.test_simple_qualified_names": {
  "lineno": 29,
  "symbols_in_volume": [
   "libcst.Annotation",
   "libcst.Assign",
   "libcst.ClassDef",
   "libcst.Expr",
   "libcst.FunctionDef",
   "libcst.SimpleStatementLine",
   "libcst.ensure_type",
   "libcst.metadata.QualifiedName",
   "libcst.metadata.QualifiedNameSource.IMPORT",
   "libcst.metadata.QualifiedNameSource.LOCAL"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_qualified_name_provider.get_qualified_name_metadata_provider": {
  "lineno": 21,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Module",
   "libcst.metadata.MetadataWrapper",
   "libcst.metadata.QualifiedName",
   "libcst.metadata.QualifiedNameProvider",
   "libcst.parse_module",
   "textwrap.dedent",
   "typing.Collection",
   "typing.Mapping",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_reentrant_codegen": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.metadata.tests.test_reentrant_codegen.ExperimentalReentrantCodegenProviderTest": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_reentrant_codegen.ExperimentalReentrantCodegenProviderTest.test_byte_conversion": {
  "lineno": 96,
  "symbols_in_volume": [
   "libcst.PartialParserConfig",
   "libcst.metadata.ExperimentalReentrantCodegenProvider",
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module",
   "libcst.parse_statement"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_reentrant_codegen.ExperimentalReentrantCodegenProviderTest.test_provider": {
  "lineno": 16,
  "symbols_in_volume": [
   "libcst.BaseStatement",
   "libcst.CSTNode",
   "libcst.Module",
   "libcst.metadata.ExperimentalReentrantCodegenProvider",
   "libcst.metadata.MetadataWrapper",
   "libcst.parse_module",
   "libcst.parse_statement",
   "libcst.testing.utils.data_provider",
   "textwrap.dedent",
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.metadata.tests.test_scope_provider.DependentVisitor": {
  "lineno": 29,
  "symbols_in_volume": [
   "libcst.CSTVisitor",
   "libcst.metadata.scope_provider.ScopeProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest": {
  "lineno": 45,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_accesses": {
  "lineno": 55,
  "symbols_in_volume": [
   "libcst.Call",
   "libcst.Expr",
   "libcst.FunctionDef",
   "libcst.SimpleStatementLine",
   "libcst.ensure_type",
   "libcst.metadata.MetadataWrapper",
   "libcst.metadata.scope_provider.FunctionScope",
   "libcst.metadata.scope_provider.GlobalScope",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_annotation_access": {
  "lineno": 1013,
  "symbols_in_volume": [
   "libcst.ImportFrom",
   "libcst.SimpleStatementLine",
   "libcst.ensure_type",
   "libcst.metadata.scope_provider.Assignment"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_assignments_and_accesses": {
  "lineno": 917,
  "symbols_in_volume": [
   "libcst.Assign",
   "libcst.Expr",
   "libcst.FunctionDef",
   "libcst.IndentedBlock",
   "libcst.SimpleStatementLine",
   "libcst.Tuple",
   "libcst.ensure_type",
   "libcst.metadata.scope_provider.Assignment",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_attribute_of_function_call": {
  "lineno": 1217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_attribute_of_subscript_called": {
  "lineno": 1220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_builtins": {
  "lineno": 114,
  "symbols_in_volume": [
   "libcst.FunctionDef",
   "libcst.ensure_type",
   "libcst.metadata.scope_provider.FunctionScope",
   "libcst.metadata.scope_provider.GlobalScope",
   "libcst.testing.utils.data_provider"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_class_scope": {
  "lineno": 306,
  "symbols_in_volume": [
   "libcst.ClassDef",
   "libcst.FunctionDef",
   "libcst.ensure_type",
   "libcst.metadata.scope_provider.Assignment",
   "libcst.metadata.scope_provider.ClassScope",
   "libcst.metadata.scope_provider.FunctionScope",
   "libcst.metadata.scope_provider.GlobalScope",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_comprehension_scope": {
  "lineno": 343,
  "symbols_in_volume": [
   "libcst.DictComp",
   "libcst.Expr",
   "libcst.GeneratorExp",
   "libcst.ListComp",
   "libcst.SetComp",
   "libcst.SimpleStatementLine",
   "libcst.ensure_type",
   "libcst.metadata.scope_provider.ComprehensionScope",
   "libcst.metadata.scope_provider.GlobalScope"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_contains_is_read_only": {
  "lineno": 1193,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.metadata.scope_provider.ClassScope",
   "libcst.metadata.scope_provider.ComprehensionScope",
   "libcst.metadata.scope_provider.FunctionScope",
   "libcst.metadata.scope_provider.GlobalScope",
   "libcst.metadata.scope_provider.LocalScope"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_del_context_names": {
  "lineno": 1124,
  "symbols_in_volume": [
   "libcst.Assign",
   "libcst.AssignTarget",
   "libcst.Attribute",
   "libcst.Del",
   "libcst.SimpleStatementLine",
   "libcst.Subscript",
   "libcst.ensure_type",
   "libcst.metadata.scope_provider.Assignment",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_dotted_import_access": {
  "lineno": 175,
  "symbols_in_volume": [
   "libcst.Attribute",
   "libcst.Call",
   "libcst.Expr",
   "libcst.SimpleStatementLine",
   "libcst.ensure_type",
   "libcst.metadata.scope_provider.Assignment",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_dotted_import_with_call_access": {
  "lineno": 207,
  "symbols_in_volume": [
   "libcst.Attribute",
   "libcst.Call",
   "libcst.Expr",
   "libcst.SimpleStatementLine",
   "libcst.ensure_type",
   "libcst.metadata.scope_provider.Assignment",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_except_handler": {
  "lineno": 656,
  "symbols_in_volume": [
   "libcst.AsName",
   "libcst.Try",
   "libcst.ensure_type",
   "libcst.metadata.scope_provider.Assignment",
   "libcst.metadata.scope_provider.GlobalScope",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_func_param_scope": {
  "lineno": 548,
  "symbols_in_volume": [
   "libcst.Annotation",
   "libcst.BaseExpression",
   "libcst.FunctionDef",
   "libcst.Param",
   "libcst.ensure_type",
   "libcst.metadata.scope_provider.Assignment",
   "libcst.metadata.scope_provider.FunctionScope",
   "libcst.metadata.scope_provider.GlobalScope",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_function_scope": {
  "lineno": 283,
  "symbols_in_volume": [
   "libcst.FunctionDef",
   "libcst.ensure_type",
   "libcst.metadata.scope_provider.FunctionScope"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_gen_dotted_names": {
  "lineno": 1244,
  "symbols_in_volume": [
   "libcst.Attribute",
   "libcst.Call",
   "libcst.Name",
   "libcst.metadata.scope_provider._gen_dotted_names"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_get_qualified_names_for": {
  "lineno": 698,
  "symbols_in_volume": [
   "libcst.Annotation",
   "libcst.Assign",
   "libcst.ClassDef",
   "libcst.Expr",
   "libcst.FunctionDef",
   "libcst.Name",
   "libcst.SimpleStatementLine",
   "libcst.ensure_type",
   "libcst.metadata.scope_provider.FunctionScope",
   "libcst.metadata.scope_provider.GlobalScope",
   "libcst.metadata.scope_provider.QualifiedName",
   "libcst.metadata.scope_provider.QualifiedNameSource.BUILTIN",
   "libcst.metadata.scope_provider.QualifiedNameSource.IMPORT",
   "libcst.metadata.scope_provider.QualifiedNameSource.LOCAL"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_get_qualified_names_for_dotted_imports": {
  "lineno": 845,
  "symbols_in_volume": [
   "libcst.Attribute",
   "libcst.Call",
   "libcst.Expr",
   "libcst.Import",
   "libcst.SimpleStatementLine",
   "libcst.ensure_type",
   "libcst.metadata.scope_provider.QualifiedName",
   "libcst.metadata.scope_provider.QualifiedNameSource.IMPORT"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_get_qualified_names_for_is_read_only": {
  "lineno": 1229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_get_qualified_names_for_nested_cases": {
  "lineno": 781,
  "symbols_in_volume": [
   "libcst.ClassDef",
   "libcst.Expr",
   "libcst.FunctionDef",
   "libcst.SimpleStatementLine",
   "libcst.ensure_type",
   "libcst.metadata.scope_provider.ClassScope",
   "libcst.metadata.scope_provider.FunctionScope",
   "libcst.metadata.scope_provider.QualifiedName",
   "libcst.metadata.scope_provider.QualifiedNameSource.LOCAL"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_global_contains_is_read_only": {
  "lineno": 1185,
  "symbols_in_volume": [
   "libcst.metadata.scope_provider.GlobalScope"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_global_scope_overwrites": {
  "lineno": 447,
  "symbols_in_volume": [
   "libcst.ClassDef",
   "libcst.FunctionDef",
   "libcst.ensure_type",
   "libcst.metadata.scope_provider.ClassScope",
   "libcst.metadata.scope_provider.FunctionScope",
   "libcst.metadata.scope_provider.GlobalScope"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_import": {
  "lineno": 134,
  "symbols_in_volume": [
   "libcst.Import",
   "libcst.ImportStar",
   "libcst.SimpleStatementLine",
   "libcst.ensure_type",
   "libcst.metadata.scope_provider.Assignment",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_import_from": {
  "lineno": 240,
  "symbols_in_volume": [
   "libcst.ImportFrom",
   "libcst.ImportStar",
   "libcst.SimpleStatementLine",
   "libcst.ensure_type",
   "libcst.metadata.scope_provider.Assignment",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_keyword_arg_in_call": {
  "lineno": 1176,
  "symbols_in_volume": [
   "libcst.Expr",
   "libcst.SimpleStatementLine",
   "libcst.ensure_type",
   "libcst.metadata.scope_provider.GlobalScope"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_lambda_param_scope": {
  "lineno": 605,
  "symbols_in_volume": [
   "libcst.BaseExpression",
   "libcst.Expr",
   "libcst.Lambda",
   "libcst.Param",
   "libcst.SimpleStatementLine",
   "libcst.ensure_type",
   "libcst.metadata.scope_provider.Assignment",
   "libcst.metadata.scope_provider.FunctionScope",
   "libcst.metadata.scope_provider.GlobalScope",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_local_scope_shadowing_with_functions": {
  "lineno": 522,
  "symbols_in_volume": [
   "libcst.FunctionDef",
   "libcst.ensure_type",
   "libcst.metadata.scope_provider.Assignment",
   "libcst.metadata.scope_provider.FunctionScope",
   "libcst.metadata.scope_provider.GlobalScope",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_multiple_assignments": {
  "lineno": 887,
  "symbols_in_volume": [
   "libcst.Expr",
   "libcst.SimpleStatementLine",
   "libcst.ensure_type",
   "libcst.metadata.scope_provider.GlobalScope",
   "libcst.metadata.scope_provider.QualifiedName",
   "libcst.metadata.scope_provider.QualifiedNameSource.IMPORT"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_nested_comprehension_scope": {
  "lineno": 417,
  "symbols_in_volume": [
   "libcst.CompFor",
   "libcst.Expr",
   "libcst.ListComp",
   "libcst.SimpleStatementLine",
   "libcst.ensure_type",
   "libcst.metadata.scope_provider.ComprehensionScope",
   "libcst.metadata.scope_provider.GlobalScope"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_node_of_scopes": {
  "lineno": 1066,
  "symbols_in_volume": [
   "libcst.Assign",
   "libcst.ClassDef",
   "libcst.Expr",
   "libcst.FunctionDef",
   "libcst.SimpleStatementLine",
   "libcst.ensure_type",
   "libcst.metadata.scope_provider.ClassScope",
   "libcst.metadata.scope_provider.FunctionScope",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_nonlocal_scope_overwrites": {
  "lineno": 471,
  "symbols_in_volume": [
   "libcst.Assign",
   "libcst.ClassDef",
   "libcst.FunctionDef",
   "libcst.SimpleStatementLine",
   "libcst.ensure_type",
   "libcst.metadata.scope_provider.Assignment",
   "libcst.metadata.scope_provider.ClassScope",
   "libcst.metadata.scope_provider.FunctionScope",
   "libcst.metadata.scope_provider.GlobalScope",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_not_in_scope": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_self": {
  "lineno": 1225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_with_asname": {
  "lineno": 681,
  "symbols_in_volume": [
   "libcst.AsName",
   "libcst.With",
   "libcst.ensure_type",
   "libcst.metadata.scope_provider.Assignment",
   "libcst.metadata.scope_provider.GlobalScope",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.ScopeProviderTest.test_with_statement": {
  "lineno": 1091,
  "symbols_in_volume": [
   "libcst.Expr",
   "libcst.SimpleStatementLine",
   "libcst.With",
   "libcst.ensure_type",
   "libcst.metadata.scope_provider.Assignment",
   "libcst.metadata.scope_provider.QualifiedName",
   "libcst.metadata.scope_provider.QualifiedNameSource.IMPORT",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_scope_provider.get_scope_metadata_provider": {
  "lineno": 33,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.Module",
   "libcst.metadata.MetadataWrapper",
   "libcst.metadata.scope_provider.Scope",
   "libcst.metadata.scope_provider.ScopeProvider",
   "libcst.parse_module",
   "textwrap.dedent",
   "typing.Mapping",
   "typing.Tuple",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_span_provider": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.metadata.tests.test_span_provider.ByteSpanPositionProviderTest": {
  "lineno": 78,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_span_provider.ByteSpanPositionProviderTest.test_batchable_provider": {
  "lineno": 94,
  "symbols_in_volume": [
   "libcst.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_span_provider.ByteSpanPositionProviderTest.test_batchable_provider.SomeVisitor": {
  "lineno": 97,
  "symbols_in_volume": [
   "libcst.BatchableCSTVisitor",
   "libcst.metadata.span_provider.ByteSpanPositionProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_span_provider.ByteSpanPositionProviderTest.test_batchable_provider.SomeVisitor.visit_Pass": {
  "lineno": 100,
  "symbols_in_volume": [
   "libcst.Pass",
   "libcst.metadata.span_provider.ByteSpanPositionProvider",
   "libcst.metadata.span_provider.CodeSpan"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_span_provider.ByteSpanPositionProviderTest.test_visitor_provider": {
  "lineno": 79,
  "symbols_in_volume": [
   "libcst.MetadataWrapper",
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_span_provider.ByteSpanPositionProviderTest.test_visitor_provider.SomeVisitor": {
  "lineno": 82,
  "symbols_in_volume": [
   "libcst.CSTVisitor",
   "libcst.metadata.span_provider.ByteSpanPositionProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_span_provider.ByteSpanPositionProviderTest.test_visitor_provider.SomeVisitor.visit_Pass": {
  "lineno": 85,
  "symbols_in_volume": [
   "libcst.Pass",
   "libcst.metadata.span_provider.ByteSpanPositionProvider",
   "libcst.metadata.span_provider.CodeSpan"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_span_provider.SpanProvidingCodegenStateTest": {
  "lineno": 17,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_span_provider.SpanProvidingCodegenStateTest.test_add_indent_tokens": {
  "lineno": 47,
  "symbols_in_volume": [
   "libcst.metadata.span_provider.ByteSpanPositionProvider",
   "libcst.metadata.span_provider.SpanProvidingCodegenState",
   "libcst.metadata.span_provider.byte_length_in_utf8"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_span_provider.SpanProvidingCodegenStateTest.test_add_non_ascii_token": {
  "lineno": 37,
  "symbols_in_volume": [
   "libcst.metadata.span_provider.ByteSpanPositionProvider",
   "libcst.metadata.span_provider.SpanProvidingCodegenState",
   "libcst.metadata.span_provider.byte_length_in_utf8"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_span_provider.SpanProvidingCodegenStateTest.test_add_token": {
  "lineno": 27,
  "symbols_in_volume": [
   "libcst.metadata.span_provider.ByteSpanPositionProvider",
   "libcst.metadata.span_provider.SpanProvidingCodegenState",
   "libcst.metadata.span_provider.byte_length_in_utf8"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_span_provider.SpanProvidingCodegenStateTest.test_initial_position": {
  "lineno": 18,
  "symbols_in_volume": [
   "libcst.metadata.span_provider.ByteSpanPositionProvider",
   "libcst.metadata.span_provider.SpanProvidingCodegenState",
   "libcst.metadata.span_provider.byte_length_in_utf8"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_span_provider.SpanProvidingCodegenStateTest.test_span": {
  "lineno": 58,
  "symbols_in_volume": [
   "libcst.Pass",
   "libcst.metadata.span_provider.ByteSpanPositionProvider",
   "libcst.metadata.span_provider.SpanProvidingCodegenState",
   "libcst.metadata.span_provider.byte_length_in_utf8"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_type_inference_provider": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.metadata.tests.test_type_inference_provider.TypeInferenceProviderTest": {
  "lineno": 55,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.metadata.tests.test_type_inference_provider.TypeInferenceProviderTest.test_simple_class_types": {
  "lineno": 56,
  "symbols_in_volume": [
   "json.loads",
   "libcst.MetadataWrapper",
   "libcst.metadata.type_inference_provider.PyreData",
   "libcst.metadata.type_inference_provider.TypeInferenceProvider",
   "libcst.parse_module",
   "libcst.testing.utils.data_provider",
   "libcst.tests.test_pyre_integration.TEST_SUITE_PATH",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "libcst.metadata.tests.test_type_inference_provider._test_simple_class_helper": {
  "lineno": 17,
  "symbols_in_volume": [
   "libcst.AnnAssign",
   "libcst.Assign",
   "libcst.Attribute",
   "libcst.FunctionDef",
   "libcst.IndentedBlock",
   "libcst.MetadataWrapper",
   "libcst.SimpleStatementLine",
   "libcst.ensure_type",
   "libcst.metadata.type_inference_provider.TypeInferenceProvider",
   "libcst.testing.utils.UnitTest"
  ],
  "type": "function"
 },
 "libcst.metadata.type_inference_provider": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.metadata.type_inference_provider.InferredType": {
  "lineno": 30,
  "symbols_in_volume": [
   "mypy_extensions.TypedDict"
  ],
  "type": "class"
 },
 "libcst.metadata.type_inference_provider.Location": {
  "lineno": 24,
  "symbols_in_volume": [
   "mypy_extensions.TypedDict"
  ],
  "type": "class"
 },
 "libcst.metadata.type_inference_provider.Position": {
  "lineno": 19,
  "symbols_in_volume": [
   "mypy_extensions.TypedDict"
  ],
  "type": "class"
 },
 "libcst.metadata.type_inference_provider.PyreData": {
  "lineno": 35,
  "symbols_in_volume": [
   "mypy_extensions.TypedDict",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst.metadata.type_inference_provider.RawPyreData": {
  "lineno": 112,
  "symbols_in_volume": [
   "mypy_extensions.TypedDict",
   "typing.Sequence"
  ],
  "type": "class"
 },
 "libcst.metadata.type_inference_provider.TypeInferenceProvider": {
  "lineno": 39,
  "symbols_in_volume": [
   "libcst.metadata.base_provider.BatchableMetadataProvider",
   "libcst.metadata.position_provider.PositionProvider"
  ],
  "type": "class"
 },
 "libcst.metadata.type_inference_provider.TypeInferenceProvider.__init__": {
  "lineno": 74,
  "symbols_in_volume": [
   "libcst._position.CodePosition",
   "libcst._position.CodeRange",
   "typing.Dict"
  ],
  "type": "function"
 },
 "libcst.metadata.type_inference_provider.TypeInferenceProvider._parse_metadata": {
  "lineno": 89,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "libcst.metadata.position_provider.PositionProvider"
  ],
  "type": "function"
 },
 "libcst.metadata.type_inference_provider.TypeInferenceProvider.gen_cache": {
  "lineno": 55,
  "symbols_in_volume": [
   "json.loads",
   "pathlib.Path",
   "subprocess.TimeoutExpired",
   "typing.List",
   "typing.Mapping",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.type_inference_provider.TypeInferenceProvider.visit_Attribute": {
  "lineno": 97,
  "symbols_in_volume": [
   "libcst.Attribute",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.type_inference_provider.TypeInferenceProvider.visit_Call": {
  "lineno": 100,
  "symbols_in_volume": [
   "libcst.Call",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.type_inference_provider.TypeInferenceProvider.visit_Name": {
  "lineno": 94,
  "symbols_in_volume": [
   "libcst.Name",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.type_inference_provider._process_pyre_data": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.type_inference_provider._sort_by_position": {
  "lineno": 121,
  "symbols_in_volume": [
   "typing.Tuple"
  ],
  "type": "function"
 },
 "libcst.metadata.type_inference_provider.run_command": {
  "lineno": 104,
  "symbols_in_volume": [
   "subprocess.PIPE",
   "subprocess.Popen",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "libcst.metadata.wrapper": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.TYPE_CHECKING",
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "libcst.metadata.wrapper.MetadataWrapper": {
  "lineno": 111,
  "symbols_in_volume": [
   "typing.Mapping",
   "typing.MutableMapping"
  ],
  "type": "class"
 },
 "libcst.metadata.wrapper.MetadataWrapper.__init__": {
  "lineno": 131,
  "symbols_in_volume": [
   "typing.Mapping"
  ],
  "type": "function"
 },
 "libcst.metadata.wrapper.MetadataWrapper.__repr__": {
  "lineno": 153,
  "symbols_in_volume": [
   "textwrap.indent"
  ],
  "type": "function"
 },
 "libcst.metadata.wrapper.MetadataWrapper.module": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.wrapper.MetadataWrapper.resolve": {
  "lineno": 172,
  "symbols_in_volume": [
   "typing.Mapping",
   "typing.Type",
   "typing.cast"
  ],
  "type": "function"
 },
 "libcst.metadata.wrapper.MetadataWrapper.resolve_many": {
  "lineno": 186,
  "symbols_in_volume": [
   "typing.Collection",
   "typing.Mapping"
  ],
  "type": "function"
 },
 "libcst.metadata.wrapper.MetadataWrapper.visit": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.metadata.wrapper.MetadataWrapper.visit_batched": {
  "lineno": 209,
  "symbols_in_volume": [
   "contextlib.ExitStack",
   "libcst._batched_visitor.BatchableCSTVisitor",
   "libcst._batched_visitor.VisitorMethod",
   "libcst._batched_visitor.visit_batched",
   "typing.Iterable",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.metadata.wrapper._gather_providers": {
  "lineno": 57,
  "symbols_in_volume": [
   "typing.Collection",
   "typing.MutableSet"
  ],
  "type": "function"
 },
 "libcst.metadata.wrapper._gen_batchable": {
  "lineno": 42,
  "symbols_in_volume": [
   "libcst.metadata.base_provider.BatchableMetadataProvider",
   "types.MappingProxyType",
   "typing.Any",
   "typing.Iterable",
   "typing.Mapping"
  ],
  "type": "function"
 },
 "libcst.metadata.wrapper._resolve_impl": {
  "lineno": 70,
  "symbols_in_volume": [
   "libcst._exceptions.MetadataException",
   "libcst.metadata.base_provider.BatchableMetadataProvider",
   "typing.Collection"
  ],
  "type": "function"
 },
 "libcst.testing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.testing.utils": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.Iterable",
   "typing.Mapping",
   "typing.Sequence",
   "typing.TypeVar",
   "typing.Union"
  ],
  "type": "module"
 },
 "libcst.testing.utils.BaseTestMeta": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.testing.utils.BaseTestMeta.__new__": {
  "lineno": 168,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "libcst.testing.utils.UnitTest": {
  "lineno": 174,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "libcst.testing.utils.data_provider": {
  "lineno": 149,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst.testing.utils.data_provider.test_decorator": {
  "lineno": 158,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "libcst.testing.utils.none_throws": {
  "lineno": 35,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.testing.utils.populate_data_provider_tests": {
  "lineno": 60,
  "symbols_in_volume": [
   "re.fullmatch",
   "typing.Any",
   "typing.Callable",
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.testing.utils.populate_data_provider_tests.new_test": {
  "lineno": 81,
  "symbols_in_volume": [
   "functools.wraps",
   "typing.Callable",
   "typing.Iterable"
  ],
  "type": "function"
 },
 "libcst.testing.utils.try_get_provider_attr": {
  "lineno": 52,
  "symbols_in_volume": [
   "inspect.isfunction",
   "typing.Any",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.testing.utils.update_test_limit": {
  "lineno": 40,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst.testing.utils.validate_provider_tests": {
  "lineno": 107,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "libcst.testing.utils.validate_provider_tests.test_replacement": {
  "lineno": 123,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "libcst.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.tests.test_batched_visitor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.tests.test_batched_visitor.BatchedVisitorTest": {
  "lineno": 14,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.tests.test_batched_visitor.BatchedVisitorTest.test_all_visits": {
  "lineno": 39,
  "symbols_in_volume": [
   "libcst.SimpleStatementLine",
   "libcst.parse_module",
   "libcst.visit_batched",
   "typing.cast",
   "unittest.mock.Mock"
  ],
  "type": "function"
 },
 "libcst.tests.test_batched_visitor.BatchedVisitorTest.test_all_visits.Batchable": {
  "lineno": 42,
  "symbols_in_volume": [
   "libcst.BatchableCSTVisitor"
  ],
  "type": "class"
 },
 "libcst.tests.test_batched_visitor.BatchedVisitorTest.test_all_visits.Batchable.leave_Pass": {
  "lineno": 55,
  "symbols_in_volume": [
   "libcst.Pass"
  ],
  "type": "function"
 },
 "libcst.tests.test_batched_visitor.BatchedVisitorTest.test_all_visits.Batchable.leave_Pass_semicolon": {
  "lineno": 51,
  "symbols_in_volume": [
   "libcst.Pass"
  ],
  "type": "function"
 },
 "libcst.tests.test_batched_visitor.BatchedVisitorTest.test_all_visits.Batchable.visit_Pass": {
  "lineno": 43,
  "symbols_in_volume": [
   "libcst.Pass"
  ],
  "type": "function"
 },
 "libcst.tests.test_batched_visitor.BatchedVisitorTest.test_all_visits.Batchable.visit_Pass_semicolon": {
  "lineno": 47,
  "symbols_in_volume": [
   "libcst.Pass"
  ],
  "type": "function"
 },
 "libcst.tests.test_batched_visitor.BatchedVisitorTest.test_simple": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst.SimpleStatementLine",
   "libcst.parse_module",
   "libcst.visit_batched",
   "typing.cast",
   "unittest.mock.Mock"
  ],
  "type": "function"
 },
 "libcst.tests.test_batched_visitor.BatchedVisitorTest.test_simple.ABatchable": {
  "lineno": 18,
  "symbols_in_volume": [
   "libcst.BatchableCSTVisitor"
  ],
  "type": "class"
 },
 "libcst.tests.test_batched_visitor.BatchedVisitorTest.test_simple.ABatchable.visit_Pass": {
  "lineno": 19,
  "symbols_in_volume": [
   "libcst.Pass"
  ],
  "type": "function"
 },
 "libcst.tests.test_batched_visitor.BatchedVisitorTest.test_simple.BBatchable": {
  "lineno": 23,
  "symbols_in_volume": [
   "libcst.BatchableCSTVisitor"
  ],
  "type": "class"
 },
 "libcst.tests.test_batched_visitor.BatchedVisitorTest.test_simple.BBatchable.visit_Pass": {
  "lineno": 24,
  "symbols_in_volume": [
   "libcst.Pass"
  ],
  "type": "function"
 },
 "libcst.tests.test_deep_clone": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.tests.test_deep_clone.DeepCloneTest": {
  "lineno": 12,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.tests.test_deep_clone.DeepCloneTest.test_deep_clone": {
  "lineno": 13,
  "symbols_in_volume": [
   "libcst.parse_module",
   "libcst.testing.utils.data_provider",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst.tests.test_deep_clone.DeepCloneTest.test_deep_clone.NodeGatherVisitor": {
  "lineno": 31,
  "symbols_in_volume": [
   "libcst.CSTVisitor"
  ],
  "type": "class"
 },
 "libcst.tests.test_deep_clone.DeepCloneTest.test_deep_clone.NodeGatherVisitor.__init__": {
  "lineno": 32,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst.tests.test_deep_clone.DeepCloneTest.test_deep_clone.NodeGatherVisitor.on_visit": {
  "lineno": 35,
  "symbols_in_volume": [
   "libcst.CSTNode"
  ],
  "type": "function"
 },
 "libcst.tests.test_deep_clone.DeepCloneTest.test_deep_clone.NodeVerifyVisitor": {
  "lineno": 39,
  "symbols_in_volume": [
   "libcst.CSTVisitor"
  ],
  "type": "class"
 },
 "libcst.tests.test_deep_clone.DeepCloneTest.test_deep_clone.NodeVerifyVisitor.__init__": {
  "lineno": 40,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "libcst.tests.test_deep_clone.DeepCloneTest.test_deep_clone.NodeVerifyVisitor.on_visit": {
  "lineno": 43,
  "symbols_in_volume": [
   "libcst.CSTNode"
  ],
  "type": "function"
 },
 "libcst.tests.test_deep_replace": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.tests.test_deep_replace.DeepReplaceTest": {
  "lineno": 12,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.tests.test_deep_replace.DeepReplaceTest.test_deep_remove_complex": {
  "lineno": 80,
  "symbols_in_volume": [
   "libcst.FunctionDef",
   "libcst.IndentedBlock",
   "libcst.Module",
   "libcst.ensure_type",
   "libcst.parse_module",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst.tests.test_deep_replace.DeepReplaceTest.test_deep_replace_complex": {
  "lineno": 28,
  "symbols_in_volume": [
   "libcst.Break",
   "libcst.FunctionDef",
   "libcst.IndentedBlock",
   "libcst.Module",
   "libcst.Name",
   "libcst.Parameters",
   "libcst.SimpleStatementSuite",
   "libcst.ensure_type",
   "libcst.parse_module",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst.tests.test_deep_replace.DeepReplaceTest.test_deep_replace_identity": {
  "lineno": 62,
  "symbols_in_volume": [
   "libcst.Break",
   "libcst.EmptyLine",
   "libcst.Module",
   "libcst.SimpleStatementLine",
   "libcst.parse_module",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst.tests.test_deep_replace.DeepReplaceTest.test_deep_replace_simple": {
  "lineno": 13,
  "symbols_in_volume": [
   "libcst.Break",
   "libcst.Module",
   "libcst.SimpleStatementLine",
   "libcst.ensure_type",
   "libcst.parse_module",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst.tests.test_deep_replace.DeepReplaceTest.test_with_deep_changes_complex": {
  "lineno": 104,
  "symbols_in_volume": [
   "libcst.Module",
   "libcst.ensure_type",
   "libcst.parse_module",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst.tests.test_deep_replace.DeepReplaceTest.test_with_deep_changes_complex.NodeFinder": {
  "lineno": 118,
  "symbols_in_volume": [
   "libcst.CSTVisitor"
  ],
  "type": "class"
 },
 "libcst.tests.test_deep_replace.DeepReplaceTest.test_with_deep_changes_complex.NodeFinder.__init__": {
  "lineno": 122,
  "symbols_in_volume": [
   "libcst.CSTNode",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.tests.test_deep_replace.DeepReplaceTest.test_with_deep_changes_complex.NodeFinder.visit_SimpleString": {
  "lineno": 126,
  "symbols_in_volume": [
   "libcst.SimpleString"
  ],
  "type": "function"
 },
 "libcst.tests.test_exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.tests.test_exceptions.ExceptionsTest": {
  "lineno": 14,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.tests.test_exceptions.ExceptionsTest.test_parser_syntax_error_str": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst.ParserSyntaxError",
   "libcst.testing.utils.data_provider",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst.tests.test_exceptions.ExceptionsTest.test_pickle": {
  "lineno": 81,
  "symbols_in_volume": [
   "libcst.ParserSyntaxError",
   "pickle.dumps",
   "pickle.loads"
  ],
  "type": "function"
 },
 "libcst.tests.test_fuzz": {
  "lineno": null,
  "symbols_in_volume": [
   "datetime.timedelta",
   "hypothesis.HealthCheck.filter_too_much",
   "hypothesis.HealthCheck.too_slow",
   "hypothesis.Phase.generate",
   "hypothesis.Phase.shrink",
   "hypothesis.settings.get_profile",
   "hypothesis.settings.load_profile",
   "hypothesis.settings.register_profile",
   "unittest.main"
  ],
  "type": "module"
 },
 "libcst.tests.test_fuzz.FuzzTest": {
  "lineno": 48,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "libcst.tests.test_fuzz.FuzzTest.reject_invalid_code": {
  "lineno": 136,
  "symbols_in_volume": [
   "hypothesis.note",
   "hypothesis.reject",
   "libcst.parse_expression",
   "libcst.parse_module",
   "libcst.parse_statement"
  ],
  "type": "function"
 },
 "libcst.tests.test_fuzz.FuzzTest.reject_unsupported_code": {
  "lineno": 164,
  "symbols_in_volume": [
   "hypothesis.reject"
  ],
  "type": "function"
 },
 "libcst.tests.test_fuzz.FuzzTest.test_parsing_compilable_expression_strings": {
  "lineno": 78,
  "symbols_in_volume": [
   "hypothesis.given",
   "hypothesis.reject",
   "hypothesmith.from_grammar",
   "libcst.Module",
   "libcst.ParserSyntaxError",
   "libcst.parse_expression",
   "os.environ.get",
   "unittest.skipUnless"
  ],
  "type": "function"
 },
 "libcst.tests.test_fuzz.FuzzTest.test_parsing_compilable_module_strings": {
  "lineno": 51,
  "symbols_in_volume": [
   "hypothesis.given",
   "hypothesmith.from_grammar",
   "libcst.parse_module",
   "os.environ.get",
   "unittest.skipUnless"
  ],
  "type": "function"
 },
 "libcst.tests.test_fuzz.FuzzTest.test_parsing_compilable_statement_strings": {
  "lineno": 106,
  "symbols_in_volume": [
   "hypothesis.given",
   "hypothesmith.from_grammar",
   "libcst.Module",
   "libcst.parse_statement",
   "os.environ.get",
   "unittest.skipUnless"
  ],
  "type": "function"
 },
 "libcst.tests.test_fuzz.FuzzTest.verify_identical_asts": {
  "lineno": 127,
  "symbols_in_volume": [
   "ast.dump",
   "ast.parse"
  ],
  "type": "function"
 },
 "libcst.tests.test_pyre_integration": {
  "lineno": null,
  "symbols_in_volume": [
   "json.dumps",
   "json.loads",
   "libcst.metadata.type_inference_provider._process_pyre_data",
   "libcst.metadata.type_inference_provider.run_command",
   "pathlib.Path"
  ],
  "type": "module"
 },
 "libcst.tests.test_pyre_integration.PyreIntegrationTest": {
  "lineno": 95,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.tests.test_pyre_integration.PyreIntegrationTest.test_type_availability": {
  "lineno": 96,
  "symbols_in_volume": [
   "json.loads",
   "libcst.metadata.MetadataWrapper",
   "libcst.metadata.type_inference_provider.PyreData",
   "libcst.parse_module",
   "libcst.testing.utils.data_provider",
   "pathlib.Path",
   "typing.Dict",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "libcst.tests.test_pyre_integration.TypeVerificationVisitor": {
  "lineno": 24,
  "symbols_in_volume": [
   "libcst.CSTVisitor",
   "libcst.metadata.PositionProvider"
  ],
  "type": "class"
 },
 "libcst.tests.test_pyre_integration.TypeVerificationVisitor.__init__": {
  "lineno": 27,
  "symbols_in_volume": [
   "libcst.Annotation",
   "libcst.Attribute",
   "libcst.Import",
   "libcst.ImportFrom",
   "libcst.testing.utils.UnitTest",
   "typing.List",
   "typing.Mapping",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "libcst.tests.test_pyre_integration.TypeVerificationVisitor.leave_Annotation": {
  "lineno": 91,
  "symbols_in_volume": [
   "libcst.Annotation"
  ],
  "type": "function"
 },
 "libcst.tests.test_pyre_integration.TypeVerificationVisitor.leave_Attribute": {
  "lineno": 51,
  "symbols_in_volume": [
   "libcst.Attribute"
  ],
  "type": "function"
 },
 "libcst.tests.test_pyre_integration.TypeVerificationVisitor.leave_Import": {
  "lineno": 79,
  "symbols_in_volume": [
   "libcst.Import"
  ],
  "type": "function"
 },
 "libcst.tests.test_pyre_integration.TypeVerificationVisitor.leave_ImportFrom": {
  "lineno": 85,
  "symbols_in_volume": [
   "libcst.ImportFrom"
  ],
  "type": "function"
 },
 "libcst.tests.test_pyre_integration.TypeVerificationVisitor.visit_Annotation": {
  "lineno": 88,
  "symbols_in_volume": [
   "libcst.Annotation",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.tests.test_pyre_integration.TypeVerificationVisitor.visit_Attribute": {
  "lineno": 37,
  "symbols_in_volume": [
   "libcst.Attribute",
   "libcst.metadata.PositionProvider",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.tests.test_pyre_integration.TypeVerificationVisitor.visit_Import": {
  "lineno": 76,
  "symbols_in_volume": [
   "libcst.Import",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.tests.test_pyre_integration.TypeVerificationVisitor.visit_ImportFrom": {
  "lineno": 82,
  "symbols_in_volume": [
   "libcst.ImportFrom",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.tests.test_pyre_integration.TypeVerificationVisitor.visit_Name": {
  "lineno": 54,
  "symbols_in_volume": [
   "libcst.Name",
   "libcst.metadata.PositionProvider",
   "typing.Optional"
  ],
  "type": "function"
 },
 "libcst.tests.test_tabs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.tests.test_tabs.ExpandTabsTest": {
  "lineno": 10,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.tests.test_tabs.ExpandTabsTest.test_expand_tabs": {
  "lineno": 11,
  "symbols_in_volume": [
   "libcst._tabs.expand_tabs",
   "libcst.testing.utils.data_provider"
  ],
  "type": "function"
 },
 "libcst.tests.test_tool": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.tests.test_tool.PrettyPrintNodesTest": {
  "lineno": 13,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.tests.test_tool.PrettyPrintNodesTest.test_full_tree": {
  "lineno": 14,
  "symbols_in_volume": [
   "libcst.parse_module",
   "libcst.tool.dump",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst.tests.test_tool.PrettyPrintNodesTest.test_hidden_defaults": {
  "lineno": 267,
  "symbols_in_volume": [
   "libcst.parse_module",
   "libcst.tool.dump",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst.tests.test_tool.PrettyPrintNodesTest.test_hidden_defaults_and_syntax": {
  "lineno": 632,
  "symbols_in_volume": [
   "libcst.parse_module",
   "libcst.tool.dump",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst.tests.test_tool.PrettyPrintNodesTest.test_hidden_syntax": {
  "lineno": 408,
  "symbols_in_volume": [
   "libcst.parse_module",
   "libcst.tool.dump",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst.tests.test_tool.PrettyPrintNodesTest.test_hidden_whitespace": {
  "lineno": 178,
  "symbols_in_volume": [
   "libcst.parse_module",
   "libcst.tool.dump",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst.tests.test_tool.PrettyPrintNodesTest.test_hidden_whitespace_and_defaults": {
  "lineno": 346,
  "symbols_in_volume": [
   "libcst.parse_module",
   "libcst.tool.dump",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst.tests.test_tool.PrettyPrintNodesTest.test_hidden_whitespace_and_defaults_and_syntax": {
  "lineno": 702,
  "symbols_in_volume": [
   "libcst.parse_module",
   "libcst.tool.dump",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst.tests.test_tool.PrettyPrintNodesTest.test_hidden_whitespace_and_syntax": {
  "lineno": 554,
  "symbols_in_volume": [
   "libcst.parse_module",
   "libcst.tool.dump",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "libcst.tests.test_type_enforce": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.tests.test_type_enforce.MyExampleChildClass": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.tests.test_type_enforce.MyExampleClass": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.tests.test_type_enforce.MyExampleClassWithMetaclass": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.tests.test_type_enforce.MyExampleMetaclass": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.tests.test_type_enforce.NamedTupleSubclass": {
  "lineno": 51,
  "symbols_in_volume": [
   "typing.NamedTuple"
  ],
  "type": "class"
 },
 "libcst.tests.test_type_enforce.TypeEnforcementTest": {
  "lineno": 56,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.tests.test_type_enforce.TypeEnforcementTest.test_basic_fail": {
  "lineno": 139,
  "symbols_in_volume": [
   "libcst._type_enforce.is_value_of_type",
   "libcst.testing.utils.data_provider",
   "types.MappingProxyType",
   "typing.ClassVar",
   "typing.Dict",
   "typing.Iterable",
   "typing.List",
   "typing.MutableMapping",
   "typing.Optional",
   "typing.Set",
   "typing.Tuple",
   "typing.Type",
   "typing.Union",
   "typing_extensions.Literal"
  ],
  "type": "function"
 },
 "libcst.tests.test_type_enforce.TypeEnforcementTest.test_basic_pass": {
  "lineno": 57,
  "symbols_in_volume": [
   "libcst._type_enforce.is_value_of_type",
   "libcst.testing.utils.data_provider",
   "types.MappingProxyType",
   "typing.Any",
   "typing.ClassVar",
   "typing.Dict",
   "typing.Iterable",
   "typing.List",
   "typing.Mapping",
   "typing.Optional",
   "typing.Sequence",
   "typing.Set",
   "typing.Tuple",
   "typing.Union",
   "typing_extensions.Literal"
  ],
  "type": "function"
 },
 "libcst.tests.test_type_enforce.TypeEnforcementTest.test_not_implemented": {
  "lineno": 197,
  "symbols_in_volume": [
   "libcst._type_enforce.is_value_of_type",
   "typing.AsyncGenerator"
  ],
  "type": "function"
 },
 "libcst.tests.test_type_enforce.WeirdSubclassOfList": {
  "lineno": 39,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "class"
 },
 "libcst.tests.test_visitor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "libcst.tests.test_visitor.VisitorTest": {
  "lineno": 13,
  "symbols_in_volume": [
   "libcst.testing.utils.UnitTest"
  ],
  "type": "class"
 },
 "libcst.tests.test_visitor.VisitorTest.test_transformer": {
  "lineno": 55,
  "symbols_in_volume": [
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.tests.test_visitor.VisitorTest.test_transformer.SomeTransformer": {
  "lineno": 56,
  "symbols_in_volume": [
   "libcst.CSTTransformer"
  ],
  "type": "class"
 },
 "libcst.tests.test_visitor.VisitorTest.test_transformer.SomeTransformer.__init__": {
  "lineno": 57,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.tests.test_visitor.VisitorTest.test_transformer.SomeTransformer.leave_If": {
  "lineno": 63,
  "symbols_in_volume": [
   "libcst.If"
  ],
  "type": "function"
 },
 "libcst.tests.test_visitor.VisitorTest.test_transformer.SomeTransformer.leave_If_test": {
  "lineno": 70,
  "symbols_in_volume": [
   "libcst.If"
  ],
  "type": "function"
 },
 "libcst.tests.test_visitor.VisitorTest.test_transformer.SomeTransformer.leave_Name": {
  "lineno": 76,
  "symbols_in_volume": [
   "libcst.Name"
  ],
  "type": "function"
 },
 "libcst.tests.test_visitor.VisitorTest.test_transformer.SomeTransformer.visit_If": {
  "lineno": 60,
  "symbols_in_volume": [
   "libcst.If"
  ],
  "type": "function"
 },
 "libcst.tests.test_visitor.VisitorTest.test_transformer.SomeTransformer.visit_If_test": {
  "lineno": 67,
  "symbols_in_volume": [
   "libcst.If"
  ],
  "type": "function"
 },
 "libcst.tests.test_visitor.VisitorTest.test_transformer.SomeTransformer.visit_Name": {
  "lineno": 73,
  "symbols_in_volume": [
   "libcst.Name"
  ],
  "type": "function"
 },
 "libcst.tests.test_visitor.VisitorTest.test_visitor": {
  "lineno": 14,
  "symbols_in_volume": [
   "libcst.parse_module"
  ],
  "type": "function"
 },
 "libcst.tests.test_visitor.VisitorTest.test_visitor.SomeVisitor": {
  "lineno": 15,
  "symbols_in_volume": [
   "libcst.CSTVisitor"
  ],
  "type": "class"
 },
 "libcst.tests.test_visitor.VisitorTest.test_visitor.SomeVisitor.__init__": {
  "lineno": 16,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.tests.test_visitor.VisitorTest.test_visitor.SomeVisitor.leave_If": {
  "lineno": 22,
  "symbols_in_volume": [
   "libcst.If"
  ],
  "type": "function"
 },
 "libcst.tests.test_visitor.VisitorTest.test_visitor.SomeVisitor.leave_If_test": {
  "lineno": 28,
  "symbols_in_volume": [
   "libcst.If"
  ],
  "type": "function"
 },
 "libcst.tests.test_visitor.VisitorTest.test_visitor.SomeVisitor.leave_Name": {
  "lineno": 34,
  "symbols_in_volume": [
   "libcst.Name"
  ],
  "type": "function"
 },
 "libcst.tests.test_visitor.VisitorTest.test_visitor.SomeVisitor.visit_If": {
  "lineno": 19,
  "symbols_in_volume": [
   "libcst.If"
  ],
  "type": "function"
 },
 "libcst.tests.test_visitor.VisitorTest.test_visitor.SomeVisitor.visit_If_test": {
  "lineno": 25,
  "symbols_in_volume": [
   "libcst.If"
  ],
  "type": "function"
 },
 "libcst.tests.test_visitor.VisitorTest.test_visitor.SomeVisitor.visit_Name": {
  "lineno": 31,
  "symbols_in_volume": [
   "libcst.Name"
  ],
  "type": "function"
 },
 "libcst.tool": {
  "lineno": null,
  "symbols_in_volume": [
   "os.environ.get",
   "sys.argv",
   "sys.exit"
  ],
  "type": "module"
 },
 "libcst.tool._ListSerializer": {
  "lineno": 618,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.tool._ListSerializer.__init__": {
  "lineno": 619,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.tool._ListSerializer._serialize_impl": {
  "lineno": 623,
  "symbols_in_volume": [
   "os.linesep",
   "os.linesep.join"
  ],
  "type": "function"
 },
 "libcst.tool._SerializerBase": {
  "lineno": 598,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "libcst.tool._SerializerBase.__init__": {
  "lineno": 599,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.tool._SerializerBase._serialize_impl": {
  "lineno": 608,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "libcst.tool._SerializerBase.serialize": {
  "lineno": 602,
  "symbols_in_volume": [
   "os.linesep",
   "os.linesep.join",
   "textwrap.wrap"
  ],
  "type": "function"
 },
 "libcst.tool._StrSerializer": {
  "lineno": 613,
  "symbols_in_volume": [],
  "type": "class"
 },
 "libcst.tool._StrSerializer._serialize_impl": {
  "lineno": 614,
  "symbols_in_volume": [],
  "type": "function"
 },
 "libcst.tool._codemod_impl": {
  "lineno": 377,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "importlib.import_module",
   "libcst.codemod.CodemodCommand",
   "libcst.codemod.CodemodContext",
   "libcst.codemod.diff_code",
   "libcst.codemod.exec_transform_with_prettyprint",
   "libcst.codemod.gather_files",
   "libcst.codemod.parallel_exec_transform_with_prettyprint",
   "sys.stderr",
   "sys.stdin.read",
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.tool._default_config": {
  "lineno": 291,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "libcst.tool._find_and_load_config": {
  "lineno": 304,
  "symbols_in_volume": [
   "os.environ.get",
   "os.getcwd",
   "os.pardir",
   "os.path.abspath",
   "os.path.isfile",
   "os.path.join",
   "typing.Any",
   "typing.Dict",
   "yaml.safe_load"
  ],
  "type": "function"
 },
 "libcst.tool._initialize_impl": {
  "lineno": 634,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "os.path.abspath",
   "os.path.join",
   "typing.Dict",
   "typing.List",
   "yaml.safe_load"
  ],
  "type": "function"
 },
 "libcst.tool._list_impl": {
  "lineno": 727,
  "symbols_in_volume": [
   "abc.ABC",
   "argparse.ArgumentParser",
   "importlib.import_module",
   "inspect.getclasstree",
   "inspect.isabstract",
   "libcst.codemod.CodemodCommand",
   "os.path.abspath",
   "os.path.dirname",
   "sys.stderr",
   "typing.Dict",
   "typing.List",
   "typing.Type"
  ],
  "type": "function"
 },
 "libcst.tool._node_repr_recursive": {
  "lineno": 47,
  "symbols_in_volume": [
   "dataclasses.fields",
   "libcst.CSTNode",
   "libcst._nodes.deep_equals.deep_equals",
   "typing.List",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "libcst.tool._node_repr_recursive._get_default": {
  "lineno": 86,
  "symbols_in_volume": [
   "dataclasses.MISSING"
  ],
  "type": "function"
 },
 "libcst.tool._node_repr_recursive._is_syntax": {
  "lineno": 99,
  "symbols_in_volume": [
   "libcst.Module"
  ],
  "type": "function"
 },
 "libcst.tool._node_repr_recursive._is_whitespace": {
  "lineno": 66,
  "symbols_in_volume": [
   "libcst.IndentedBlock",
   "libcst.Module"
  ],
  "type": "function"
 },
 "libcst.tool._print_tree_impl": {
  "lineno": 224,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "libcst.PartialParserConfig",
   "libcst.parse_module",
   "sys.stdin.read",
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.tool._recursive_find": {
  "lineno": 696,
  "symbols_in_volume": [
   "importlib.import_module",
   "os.listdir",
   "os.path.isdir",
   "os.path.isfile",
   "os.path.join",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "libcst.tool.dump": {
  "lineno": 190,
  "symbols_in_volume": [
   "libcst.CSTNode"
  ],
  "type": "function"
 },
 "libcst.tool.main": {
  "lineno": 787,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "libcst.LIBCST_VERSION",
   "typing.Callable",
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "libcst.tool.main._invalid_command": {
  "lineno": 815,
  "symbols_in_volume": [
   "sys.stderr",
   "typing.List"
  ],
  "type": "function"
 }
}