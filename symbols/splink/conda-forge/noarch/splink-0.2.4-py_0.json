{
 "splink": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pyspark.sql.dataframe.DataFrame",
    "pyspark.sql.session.SparkSession"
   ]
  },
  "type": "module"
 },
 "splink.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "splink.DataFrame": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "splink.Params": {
  "data": {
   "shadows": "splink.params.Params"
  },
  "type": "import"
 },
 "splink.SparkSession": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "splink.Splink": {
  "data": {
   "lineno": 34
  },
  "type": "class"
 },
 "splink.Splink.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "dict",
    "pyspark.sql.dataframe.DataFrame",
    "pyspark.sql.session.SparkSession",
    "splink.break_lineage.default_break_lineage_blocked_comparisons",
    "splink.break_lineage.default_break_lineage_scored_comparisons",
    "splink.case_statements._check_jaro_registered",
    "splink.check_types.check_types",
    "splink.params.Params",
    "splink.settings.complete_settings_dict",
    "splink.validate.validate_settings",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "splink.Splink._check_args": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "isinstance",
    "pyspark.sql.dataframe.DataFrame"
   ]
  },
  "type": "function"
 },
 "splink.Splink._get_df_comparison": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "splink.blocking.block_using_rules"
   ]
  },
  "type": "function"
 },
 "splink.Splink._make_term_frequency_adjustments": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "pyspark.sql.dataframe.DataFrame",
    "splink.term_frequencies.make_adjustment_for_term_frequencies"
   ]
  },
  "type": "function"
 },
 "splink.Splink.get_scored_comparisons": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "splink.gammas.add_gammas",
    "splink.iterate.iterate"
   ]
  },
  "type": "function"
 },
 "splink.Splink.manually_apply_fellegi_sunter_weights": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "splink.expectation_step.run_expectation_step",
    "splink.gammas.add_gammas"
   ]
  },
  "type": "function"
 },
 "splink.Splink.save_model_as_json": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "splink._check_jaro_registered": {
  "data": {
   "shadows": "splink.case_statements._check_jaro_registered"
  },
  "type": "import"
 },
 "splink.add_gammas": {
  "data": {
   "shadows": "splink.gammas.add_gammas"
  },
  "type": "import"
 },
 "splink.block_using_rules": {
  "data": {
   "shadows": "splink.blocking.block_using_rules"
  },
  "type": "import"
 },
 "splink.blocking": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyspark.sql.dataframe.DataFrame",
    "pyspark.sql.session.SparkSession",
    "splink.blocking.logging"
   ]
  },
  "type": "module"
 },
 "splink.blocking.DataFrame": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "splink.blocking.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "splink.blocking.SparkSession": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "splink.blocking._get_columns_to_retain_blocking": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "list"
   ]
  },
  "type": "function"
 },
 "splink.blocking._sql_gen_and_not_previous_rules": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "splink.blocking._sql_gen_block_using_rules": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "list",
    "splink.blocking._sql_gen_and_not_previous_rules",
    "splink.blocking.sql_gen_comparison_columns",
    "str"
   ]
  },
  "type": "function"
 },
 "splink.blocking._sql_gen_cartesian_block": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "list",
    "splink.blocking.sql_gen_comparison_columns",
    "str"
   ]
  },
  "type": "function"
 },
 "splink.blocking._sql_gen_vertically_concatenate": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "splink.blocking._vertically_concatenate_datasets": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "_format_sql",
    "splink.blocking._get_columns_to_retain_blocking",
    "splink.blocking._sql_gen_vertically_concatenate",
    "splink.blocking.logger"
   ]
  },
  "type": "function"
 },
 "splink.blocking.block_using_rules": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "_format_sql",
    "cartesian_block",
    "dict",
    "len",
    "pyspark.sql.dataframe.DataFrame",
    "pyspark.sql.session.SparkSession",
    "splink.blocking._get_columns_to_retain_blocking",
    "splink.blocking._sql_gen_block_using_rules",
    "splink.blocking._vertically_concatenate_datasets",
    "splink.blocking.logger"
   ]
  },
  "type": "function"
 },
 "splink.blocking.cartesian_block": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "_format_sql",
    "dict",
    "pyspark.sql.dataframe.DataFrame",
    "pyspark.sql.session.SparkSession",
    "splink.blocking._get_columns_to_retain_blocking",
    "splink.blocking._sql_gen_cartesian_block",
    "splink.blocking._vertically_concatenate_datasets",
    "splink.blocking.logger"
   ]
  },
  "type": "function"
 },
 "splink.blocking.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "splink.blocking.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "splink.blocking.sql_gen_comparison_columns": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "list",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "splink.break_lineage": {
  "data": {},
  "type": "module"
 },
 "splink.break_lineage.DataFrame": {
  "data": {
   "shadows": "pyspark.sql.dataframe.DataFrame"
  },
  "type": "import"
 },
 "splink.break_lineage.cutLineage": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "pyspark.sql.dataframe.DataFrame"
   ]
  },
  "type": "function"
 },
 "splink.break_lineage.default_break_lineage_blocked_comparisons": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "splink.break_lineage.cutLineage"
   ]
  },
  "type": "function"
 },
 "splink.break_lineage.default_break_lineage_scored_comparisons": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "splink.break_lineage.cutLineage"
   ]
  },
  "type": "function"
 },
 "splink.case_statements": {
  "data": {},
  "type": "module"
 },
 "splink.case_statements._add_as_gamma_to_case_statement": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "splink.case_statements._check_jaro_registered": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "splink.case_statements.warnings"
   ]
  },
  "type": "function"
 },
 "splink.case_statements._check_no_obvious_problem_with_case_statement": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "splink.case_statements._sql_gen_abs_diff": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "splink.case_statements._sql_gen_get_or_list": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "splink.case_statements._sql_gen_max_of_two_cols": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "splink.case_statements.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "splink.case_statements.sql_gen_case_smnt_strict_equality_2": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "splink.case_statements._add_as_gamma_to_case_statement"
   ]
  },
  "type": "function"
 },
 "splink.case_statements.sql_gen_case_stmt_levenshtein_3": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "splink.case_statements._add_as_gamma_to_case_statement"
   ]
  },
  "type": "function"
 },
 "splink.case_statements.sql_gen_case_stmt_levenshtein_4": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "splink.case_statements._add_as_gamma_to_case_statement"
   ]
  },
  "type": "function"
 },
 "splink.case_statements.sql_gen_case_stmt_numeric_2": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "splink.case_statements._add_as_gamma_to_case_statement",
    "splink.case_statements._sql_gen_abs_diff"
   ]
  },
  "type": "function"
 },
 "splink.case_statements.sql_gen_case_stmt_numeric_abs_3": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "splink.case_statements._add_as_gamma_to_case_statement",
    "splink.case_statements._sql_gen_abs_diff"
   ]
  },
  "type": "function"
 },
 "splink.case_statements.sql_gen_case_stmt_numeric_abs_4": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "splink.case_statements._add_as_gamma_to_case_statement",
    "splink.case_statements._sql_gen_abs_diff"
   ]
  },
  "type": "function"
 },
 "splink.case_statements.sql_gen_case_stmt_numeric_perc_3": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "splink.case_statements._add_as_gamma_to_case_statement",
    "splink.case_statements._sql_gen_abs_diff",
    "splink.case_statements._sql_gen_max_of_two_cols"
   ]
  },
  "type": "function"
 },
 "splink.case_statements.sql_gen_case_stmt_numeric_perc_4": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "splink.case_statements._add_as_gamma_to_case_statement",
    "splink.case_statements._sql_gen_abs_diff",
    "splink.case_statements._sql_gen_max_of_two_cols"
   ]
  },
  "type": "function"
 },
 "splink.case_statements.sql_gen_gammas_case_stmt_jaro_2": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "splink.case_statements._add_as_gamma_to_case_statement"
   ]
  },
  "type": "function"
 },
 "splink.case_statements.sql_gen_gammas_case_stmt_jaro_3": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "splink.case_statements._add_as_gamma_to_case_statement"
   ]
  },
  "type": "function"
 },
 "splink.case_statements.sql_gen_gammas_case_stmt_jaro_4": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "splink.case_statements._add_as_gamma_to_case_statement"
   ]
  },
  "type": "function"
 },
 "splink.case_statements.sql_gen_gammas_name_inversion_4": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "list",
    "splink.case_statements._add_as_gamma_to_case_statement",
    "splink.case_statements._sql_gen_get_or_list",
    "str"
   ]
  },
  "type": "function"
 },
 "splink.case_statements.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "splink.chart_definitions": {
  "data": {},
  "type": "module"
 },
 "splink.chart_definitions.bayes_factor_chart_def": {
  "data": {
   "lineno": 167
  },
  "type": "constant"
 },
 "splink.chart_definitions.bayes_factor_history_chart_def": {
  "data": {
   "lineno": 241
  },
  "type": "constant"
 },
 "splink.chart_definitions.gamma_distribution_chart_def": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "splink.chart_definitions.lambda_iteration_chart_def": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "splink.chart_definitions.ll_iteration_chart_def": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "splink.chart_definitions.multi_chart_template": {
  "data": {
   "lineno": 211
  },
  "type": "constant"
 },
 "splink.chart_definitions.probability_distribution_chart": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "splink.check_types": {
  "data": {
   "shadows": "splink.check_types.check_types"
  },
  "type": "import"
 },
 "splink.check_types.DataFrame": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "splink.check_types.SparkSession": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "splink.check_types.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "splink.check_types.check_types": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "splink.check_types.check_types.wrapper": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "dict",
    "func",
    "functools.wraps",
    "isinstance",
    "str",
    "type",
    "typing.Union",
    "typing.get_type_hints",
    "zip"
   ]
  },
  "type": "function"
 },
 "splink.check_types.get_type_hints": {
  "data": {
   "shadows": "typing.get_type_hints"
  },
  "type": "import"
 },
 "splink.check_types.spark_exists": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "splink.check_types.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "splink.comparison_evaluation": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "splink.comparison_evaluation.logging"
   ]
  },
  "type": "module"
 },
 "splink.comparison_evaluation.get_largest_blocks": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "splink.comparison_evaluation.re"
   ]
  },
  "type": "function"
 },
 "splink.comparison_evaluation.logger": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "splink.comparison_evaluation.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "splink.comparison_evaluation.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "splink.complete_settings_dict": {
  "data": {
   "shadows": "splink.settings.complete_settings_dict"
  },
  "type": "import"
 },
 "splink.default_break_lineage_blocked_comparisons": {
  "data": {
   "shadows": "splink.break_lineage.default_break_lineage_blocked_comparisons"
  },
  "type": "import"
 },
 "splink.default_break_lineage_scored_comparisons": {
  "data": {
   "shadows": "splink.break_lineage.default_break_lineage_scored_comparisons"
  },
  "type": "import"
 },
 "splink.expectation_step": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyspark.sql.dataframe.DataFrame",
    "pyspark.sql.session.SparkSession",
    "splink.expectation_step.logging"
   ]
  },
  "type": "module"
 },
 "splink.expectation_step.DataFrame": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "splink.expectation_step.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "splink.expectation_step.SparkSession": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "splink.expectation_step._calculate_log_likelihood_df": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "_format_sql",
    "splink.expectation_step.logger"
   ]
  },
  "type": "function"
 },
 "splink.expectation_step._case_when_col_alias": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "splink.expectation_step._column_order_df_e_select_expr": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "_add_left_right",
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "splink.expectation_step._sql_gen_expected_match_prob": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "splink.expectation_step._column_order_df_e_select_expr"
   ]
  },
  "type": "function"
 },
 "splink.expectation_step._sql_gen_gamma_case_when": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "splink.expectation_step._case_when_col_alias"
   ]
  },
  "type": "function"
 },
 "splink.expectation_step._sql_gen_gamma_prob_columns": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "_add_left_right",
    "_case_when_col_alias",
    "_sql_gen_gamma_case_when",
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "splink.expectation_step.get_overall_log_likelihood": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "splink.expectation_step._calculate_log_likelihood_df"
   ]
  },
  "type": "function"
 },
 "splink.expectation_step.logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "splink.expectation_step.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "splink.expectation_step.run_expectation_step": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "_format_sql",
    "_sql_gen_expected_match_prob",
    "_sql_gen_gamma_prob_columns",
    "dict",
    "get_overall_log_likelihood",
    "pyspark.sql.dataframe.DataFrame",
    "pyspark.sql.session.SparkSession",
    "splink.expectation_step.logger"
   ]
  },
  "type": "function"
 },
 "splink.gammas": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyspark.sql.dataframe.DataFrame",
    "pyspark.sql.session.SparkSession",
    "splink.gammas.logging"
   ]
  },
  "type": "module"
 },
 "splink.gammas.DataFrame": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "splink.gammas.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "splink.gammas.SparkSession": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "splink.gammas._add_left_right": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "splink.gammas._get_select_expression_gammas": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "dict",
    "splink.gammas._add_left_right"
   ]
  },
  "type": "function"
 },
 "splink.gammas._sql_gen_add_gammas": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "dict",
    "splink.gammas._get_select_expression_gammas",
    "str"
   ]
  },
  "type": "function"
 },
 "splink.gammas.add_gammas": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "_format_sql",
    "complete_settings_dict",
    "dict",
    "pyspark.sql.dataframe.DataFrame",
    "pyspark.sql.session.SparkSession",
    "splink.gammas._sql_gen_add_gammas",
    "splink.gammas.logger",
    "str"
   ]
  },
  "type": "function"
 },
 "splink.gammas.logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "splink.gammas.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "splink.gammas.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "splink.gammas.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "splink.intuition": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "splink.intuition._get_bayes_factors": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "splink.intuition.alt": {
  "data": {
   "shadows": "altair"
  },
  "type": "import"
 },
 "splink.intuition.altair_installed": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "splink.intuition.bayes_factor_chart": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "altair.Chart.from_dict",
    "splink.intuition._get_bayes_factors",
    "splink.intuition.altair_installed"
   ]
  },
  "type": "function"
 },
 "splink.intuition.col_template": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "splink.intuition.end_template": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "splink.intuition.initial_template": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "splink.intuition.intuition_report": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "dict",
    "float",
    "splink.intuition.col_template",
    "splink.intuition.end_template",
    "splink.intuition.initial_template",
    "str"
   ]
  },
  "type": "function"
 },
 "splink.iterate": {
  "data": {
   "shadows": "splink.iterate.iterate"
  },
  "type": "import"
 },
 "splink.iterate.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "splink.iterate.DataFrame": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "splink.iterate.SparkSession": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "splink.iterate.iterate": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "bool",
    "dict",
    "pyspark.sql.dataframe.DataFrame",
    "pyspark.sql.session.SparkSession",
    "range",
    "run_expectation_step",
    "run_maximisation_step",
    "save_state_fn",
    "splink.iterate.logger",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "splink.iterate.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "splink.iterate.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "splink.load_from_json": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "pyspark.sql.dataframe.DataFrame",
    "pyspark.sql.session.SparkSession",
    "splink.Splink",
    "splink.params.load_params_from_json",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "splink.load_params_from_json": {
  "data": {
   "shadows": "splink.params.load_params_from_json"
  },
  "type": "import"
 },
 "splink.logging_utils": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "splink.logging_utils._format_sql": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "splink.logging_utils.sqlparse",
    "splink.logging_utils.sqlparse_exists",
    "textwrap.dedent"
   ]
  },
  "type": "function"
 },
 "splink.logging_utils.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "splink.logging_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "splink.logging_utils.sqlparse": {
  "data": {
   "shadows": "sqlparse"
  },
  "type": "import"
 },
 "splink.logging_utils.sqlparse_exists": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "splink.make_adjustment_for_term_frequencies": {
  "data": {
   "shadows": "splink.term_frequencies.make_adjustment_for_term_frequencies"
  },
  "type": "import"
 },
 "splink.maximisation_step": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyspark.sql.dataframe.DataFrame",
    "pyspark.sql.session.SparkSession",
    "splink.maximisation_step.logging"
   ]
  },
  "type": "module"
 },
 "splink.maximisation_step.DataFrame": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "splink.maximisation_step.SparkSession": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "splink.maximisation_step._get_new_lambda": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "_format_sql",
    "splink.maximisation_step._sql_gen_new_lambda",
    "splink.maximisation_step.logger"
   ]
  },
  "type": "function"
 },
 "splink.maximisation_step._get_new_pi_df": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "_format_sql",
    "splink.maximisation_step._sql_gen_pi_df",
    "splink.maximisation_step.logger"
   ]
  },
  "type": "function"
 },
 "splink.maximisation_step._sql_gen_intermediate_pi_aggregate": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "splink.maximisation_step._sql_gen_new_lambda": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "splink.maximisation_step._sql_gen_pi_df": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "splink.maximisation_step.logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "splink.maximisation_step.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "splink.maximisation_step.run_maximisation_step": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "_format_sql",
    "pyspark.sql.dataframe.DataFrame",
    "pyspark.sql.session.SparkSession",
    "splink.maximisation_step._get_new_lambda",
    "splink.maximisation_step._get_new_pi_df",
    "splink.maximisation_step._sql_gen_intermediate_pi_aggregate",
    "splink.maximisation_step.logger"
   ]
  },
  "type": "function"
 },
 "splink.params": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyspark.sql.session.SparkSession",
    "splink.params.logging"
   ]
  },
  "type": "module"
 },
 "splink.params.Params": {
  "data": {
   "lineno": 38
  },
  "type": "class"
 },
 "splink.params.Params.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "complete_settings_dict",
    "dict",
    "pyspark.sql.session.SparkSession"
   ]
  },
  "type": "function"
 },
 "splink.params.Params.__repr__": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "splink.params.Params._convert_params_dict_to_bayes_factor_data": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "splink.params.Params._convert_params_dict_to_bayes_factor_iteration_history": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "enumerate",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "splink.params.Params._convert_params_dict_to_dataframe": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "splink.params.Params._gamma_cols": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "splink.params.Params._generate_param_dict": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "splink.params.Params._iteration_history_df_gammas": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "splink.params.Params._iteration_history_df_lambdas": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "splink.params.Params._iteration_history_df_log_likelihood": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "splink.params.Params._populate_params": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "splink.params.Params._print_m_u_probs": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "field_value_to_probs",
    "print"
   ]
  },
  "type": "function"
 },
 "splink.params.Params._print_m_u_probs.field_value_to_probs": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "splink.params.Params._reset_param_values_to_none": {
  "data": {
   "lineno": 266
  },
  "type": "function"
 },
 "splink.params.Params._save_params_to_iteration_history": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "splink.params.copy"
   ]
  },
  "type": "function"
 },
 "splink.params.Params._set_pi_value": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "splink.params.Params._to_dict": {
  "data": {
   "lineno": 328
  },
  "type": "function"
 },
 "splink.params.Params._update_params": {
  "data": {
   "lineno": 317
  },
  "type": "function"
 },
 "splink.params.Params.all_charts_write_html_file": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "ValueError",
    "altair.VEGAEMBED_VERSION",
    "altair.VEGALITE_VERSION",
    "altair.VEGA_VERSION",
    "open",
    "splink.params.altair_installed",
    "splink.params.json",
    "splink.params.os"
   ]
  },
  "type": "function"
 },
 "splink.params.Params.bayes_factor_chart": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "altair.Chart.from_dict",
    "splink.params.altair_installed"
   ]
  },
  "type": "function"
 },
 "splink.params.Params.bayes_factor_history_charts": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "altair.Chart.from_dict",
    "splink.params.altair_installed",
    "splink.params.copy"
   ]
  },
  "type": "function"
 },
 "splink.params.Params.describe_gammas": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "splink.params.Params.gamma_distribution_chart": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "altair.Chart.from_dict",
    "splink.params.altair_installed"
   ]
  },
  "type": "function"
 },
 "splink.params.Params.get_settings_with_current_params": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "get_or_update_settings"
   ]
  },
  "type": "function"
 },
 "splink.params.Params.is_converged": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "_flatten_dict",
    "abs",
    "all",
    "splink.params.logger"
   ]
  },
  "type": "function"
 },
 "splink.params.Params.lambda_iteration_chart": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "altair.Chart.from_dict",
    "splink.params.altair_installed"
   ]
  },
  "type": "function"
 },
 "splink.params.Params.ll_iteration_chart": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "Exception",
    "altair.Chart.from_dict",
    "splink.params.altair_installed"
   ]
  },
  "type": "function"
 },
 "splink.params.Params.probability_distribution_chart": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "altair.Chart.from_dict",
    "splink.params.altair_installed"
   ]
  },
  "type": "function"
 },
 "splink.params.Params.save_params_to_json_file": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "ValueError",
    "open",
    "splink.params.json",
    "splink.params.os"
   ]
  },
  "type": "function"
 },
 "splink.params.SparkSession": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "splink.params._flatten_dict": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "splink.params.alt": {
  "data": {
   "shadows": "altair"
  },
  "type": "import"
 },
 "splink.params.altair_installed": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "splink.params.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "splink.params.get_or_update_settings": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "_get_default_value",
    "dict",
    "splink.params.Params",
    "splink.params.warnings"
   ]
  },
  "type": "function"
 },
 "splink.params.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "splink.params.load_params_from_dict": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "ValueError",
    "set",
    "splink.params.Params"
   ]
  },
  "type": "function"
 },
 "splink.params.load_params_from_json": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "load_params_from_dict",
    "open",
    "splink.params.json"
   ]
  },
  "type": "function"
 },
 "splink.params.logger": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "splink.params.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "splink.params.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "splink.params.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "splink.params.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "splink.run_expectation_step": {
  "data": {
   "shadows": "splink.expectation_step.run_expectation_step"
  },
  "type": "import"
 },
 "splink.settings": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pyspark.sql.dataframe.DataFrame",
    "pyspark.sql.session.SparkSession"
   ]
  },
  "type": "module"
 },
 "splink.settings.DataFrame": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "splink.settings.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "splink.settings.SparkSession": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "splink.settings._complete_case_expression": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "_add_as_gamma_to_case_statement",
    "_check_no_obvious_problem_with_case_statement",
    "case_fn",
    "splink.settings._get_default_case_statement_fn",
    "splink.settings._get_default_case_statements_functions"
   ]
  },
  "type": "function"
 },
 "splink.settings._complete_probabilities": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "len",
    "splink.settings._get_probabilities",
    "splink.settings._normalise_prob_list",
    "str"
   ]
  },
  "type": "function"
 },
 "splink.settings._get_columns_to_retain_df_e": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "splink.settings._get_default_case_statement_fn": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "splink.settings._get_default_case_statements_functions": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "_check_jaro_registered"
   ]
  },
  "type": "function"
 },
 "splink.settings._get_probabilities": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ValueError",
    "splink.settings._normalise_prob_list"
   ]
  },
  "type": "function"
 },
 "splink.settings._normalise_prob_list": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "list",
    "sum"
   ]
  },
  "type": "function"
 },
 "splink.settings.complete_settings_dict": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "_get_default_value",
    "dict",
    "enumerate",
    "len",
    "pyspark.sql.session.SparkSession",
    "splink.settings._complete_case_expression",
    "splink.settings._complete_probabilities",
    "splink.settings.warnings",
    "validate_settings"
   ]
  },
  "type": "function"
 },
 "splink.settings.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "splink.spark_exists": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "splink.term_frequencies": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyspark.sql.dataframe.DataFrame",
    "pyspark.sql.session.SparkSession",
    "splink.term_frequencies.logging"
   ]
  },
  "type": "module"
 },
 "splink.term_frequencies.DataFrame": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "splink.term_frequencies.SparkSession": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "splink.term_frequencies.logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "splink.term_frequencies.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "splink.term_frequencies.make_adjustment_for_term_frequencies": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "_format_sql",
    "bool",
    "dict",
    "len",
    "pyspark.sql.dataframe.DataFrame",
    "pyspark.sql.session.SparkSession",
    "splink.term_frequencies.logger",
    "splink.term_frequencies.sql_gen_add_adjumentments_to_df_e",
    "splink.term_frequencies.sql_gen_compute_final_group_membership_prob_from_adjustments",
    "splink.term_frequencies.sql_gen_generate_adjusted_lambda"
   ]
  },
  "type": "function"
 },
 "splink.term_frequencies.sql_gen_add_adjumentments_to_df_e": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "splink.term_frequencies.sql_gen_bayes_string": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "splink.term_frequencies.sql_gen_compute_final_group_membership_prob_from_adjustments": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "_column_order_df_e_select_expr",
    "splink.term_frequencies.sql_gen_bayes_string"
   ]
  },
  "type": "function"
 },
 "splink.term_frequencies.sql_gen_generate_adjusted_lambda": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "splink.term_frequencies.sql_gen_bayes_string"
   ]
  },
  "type": "function"
 },
 "splink.term_frequencies.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "splink.validate": {
  "data": {
   "symbols_in_volume": [
    "splink.validate._get_schema"
   ]
  },
  "type": "module"
 },
 "splink.validate.SCHEMA_CACHE": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "splink.validate.ValidationError": {
  "data": {
   "shadows": "jsonschema.ValidationError"
  },
  "type": "import"
 },
 "splink.validate._get_default_value": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "splink.validate._get_schema"
   ]
  },
  "type": "function"
 },
 "splink.validate._get_schema": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "__name__",
    "splink.validate.SCHEMA_CACHE",
    "splink.validate.copy",
    "splink.validate.json",
    "splink.validate.pkg_resources"
   ]
  },
  "type": "function"
 },
 "splink.validate.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "splink.validate.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "splink.validate.jsonschema_installed": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "splink.validate.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "splink.validate.validate": {
  "data": {
   "shadows": "jsonschema.validate"
  },
  "type": "import"
 },
 "splink.validate.validate_settings": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "jsonschema.ValidationError",
    "jsonschema.validate",
    "splink.validate._get_schema",
    "splink.validate.jsonschema_installed",
    "splink.validate.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "splink.validate.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "splink.validate_settings": {
  "data": {
   "shadows": "splink.validate.validate_settings"
  },
  "type": "import"
 }
}