{
 "service_identity": {
  "data": {},
  "type": "module"
 },
 "service_identity.__all__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "service_identity.__author__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "service_identity.__copyright__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "service_identity.__description__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "service_identity.__email__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "service_identity.__license__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "service_identity.__title__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "service_identity.__uri__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "service_identity.__version__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "service_identity._common": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "maketrans"
   ]
  },
  "type": "module"
 },
 "service_identity._common.DNSPattern": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "object",
    "service_identity._common.attr",
    "service_identity._common.re"
   ]
  },
  "type": "class"
 },
 "service_identity._common.DNSPattern.__init__": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "CertificateError",
    "TypeError",
    "bytes",
    "isinstance",
    "service_identity._common._is_ip_address",
    "service_identity._common._validate_pattern"
   ]
  },
  "type": "function"
 },
 "service_identity._common.DNS_ID": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "object",
    "service_identity._common.DNSPattern",
    "service_identity._common.attr",
    "service_identity._common.re"
   ]
  },
  "type": "class"
 },
 "service_identity._common.DNS_ID.__init__": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "ImportError",
    "TypeError",
    "ValueError",
    "any",
    "isinstance",
    "ord",
    "service_identity._common._is_ip_address",
    "service_identity._common.idna"
   ]
  },
  "type": "function"
 },
 "service_identity._common.DNS_ID.verify": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "isinstance",
    "service_identity._common._hostname_matches"
   ]
  },
  "type": "function"
 },
 "service_identity._common.IPAddressPattern": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "object",
    "service_identity._common.attr"
   ]
  },
  "type": "class"
 },
 "service_identity._common.IPAddressPattern.from_bytes": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "CertificateError",
    "ValueError",
    "classmethod",
    "cls",
    "service_identity._common.ipaddress"
   ]
  },
  "type": "function"
 },
 "service_identity._common.IPAddress_ID": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "object",
    "service_identity._common.IPAddressPattern",
    "service_identity._common.attr",
    "service_identity._common.ipaddress"
   ]
  },
  "type": "class"
 },
 "service_identity._common.IPAddress_ID.verify": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "service_identity._common.SRVPattern": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "object",
    "service_identity._common.attr"
   ]
  },
  "type": "class"
 },
 "service_identity._common.SRVPattern.__init__": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "CertificateError",
    "TypeError",
    "bytes",
    "isinstance",
    "service_identity._common.DNSPattern",
    "service_identity._common._is_ip_address"
   ]
  },
  "type": "function"
 },
 "service_identity._common.SRV_ID": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "object",
    "service_identity._common.SRVPattern",
    "service_identity._common.attr"
   ]
  },
  "type": "class"
 },
 "service_identity._common.SRV_ID.__init__": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "service_identity._common.DNS_ID",
    "service_identity._common._is_ip_address"
   ]
  },
  "type": "function"
 },
 "service_identity._common.SRV_ID.verify": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "service_identity._common.ServiceMatch": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object",
    "service_identity._common.attr"
   ]
  },
  "type": "class"
 },
 "service_identity._common.URIPattern": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "object",
    "service_identity._common.attr"
   ]
  },
  "type": "class"
 },
 "service_identity._common.URIPattern.__init__": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "CertificateError",
    "TypeError",
    "bytes",
    "isinstance",
    "service_identity._common.DNSPattern",
    "service_identity._common._is_ip_address"
   ]
  },
  "type": "function"
 },
 "service_identity._common.URI_ID": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "object",
    "service_identity._common.URIPattern",
    "service_identity._common.attr"
   ]
  },
  "type": "class"
 },
 "service_identity._common.URI_ID.__init__": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "service_identity._common.DNS_ID",
    "service_identity._common._is_ip_address"
   ]
  },
  "type": "function"
 },
 "service_identity._common.URI_ID.verify": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "service_identity._common._TRANS_TO_LOWER": {
  "data": {
   "lineno": 447
  },
  "type": "constant"
 },
 "service_identity._common._contains_instance_of": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "service_identity._common._find_matches": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "service_identity._common.ServiceMatch"
   ]
  },
  "type": "function"
 },
 "service_identity._common._hostname_matches": {
  "data": {
   "lineno": 388
  },
  "type": "function"
 },
 "service_identity._common._is_ip_address": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "UnicodeError",
    "ValueError",
    "bytes",
    "int",
    "isinstance",
    "service_identity._common.ipaddress"
   ]
  },
  "type": "function"
 },
 "service_identity._common._validate_pattern": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "CertificateError",
    "any",
    "len"
   ]
  },
  "type": "function"
 },
 "service_identity._common.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "service_identity._common.attr": {
  "data": {
   "shadows": "attr"
  },
  "type": "import"
 },
 "service_identity._common.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "service_identity._common.idna": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "service_identity._common.ipaddress": {
  "data": {
   "shadows": "ipaddress"
  },
  "type": "import"
 },
 "service_identity._common.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "service_identity._common.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "service_identity._common.verify_service_identity": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "VerificationError",
    "service_identity._common._contains_instance_of",
    "service_identity._common._find_matches"
   ]
  },
  "type": "function"
 },
 "service_identity._compat": {
  "data": {
   "symbols_in_volume": [
    "bytes.maketrans",
    "service_identity._compat.PY3",
    "service_identity._compat.string",
    "service_identity._compat.sys",
    "str"
   ]
  },
  "type": "module"
 },
 "service_identity._compat.PY3": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "service_identity._compat.maketrans": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "service_identity._compat.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "service_identity._compat.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "service_identity._compat.text_type": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "service_identity.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "service_identity.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "service_identity.exceptions": {
  "data": {},
  "type": "module"
 },
 "service_identity.exceptions.CertificateError": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "service_identity.exceptions.DNSMismatch": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "object",
    "service_identity.exceptions.attr"
   ]
  },
  "type": "class"
 },
 "service_identity.exceptions.IPAddressMismatch": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "object",
    "service_identity.exceptions.attr"
   ]
  },
  "type": "class"
 },
 "service_identity.exceptions.SRVMismatch": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "object",
    "service_identity.exceptions.attr"
   ]
  },
  "type": "class"
 },
 "service_identity.exceptions.SubjectAltNameWarning": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "DeprecationWarning"
   ]
  },
  "type": "class"
 },
 "service_identity.exceptions.URIMismatch": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "object",
    "service_identity.exceptions.attr"
   ]
  },
  "type": "class"
 },
 "service_identity.exceptions.VerificationError": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "Exception",
    "service_identity.exceptions.attr"
   ]
  },
  "type": "class"
 },
 "service_identity.exceptions.VerificationError.__str__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "service_identity.exceptions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "service_identity.exceptions.attr": {
  "data": {
   "shadows": "attr"
  },
  "type": "import"
 },
 "service_identity.exceptions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "service_identity.exceptions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "service_identity.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 }
}