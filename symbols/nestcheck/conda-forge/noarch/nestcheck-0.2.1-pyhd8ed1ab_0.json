{
 "nestcheck": {
  "data": {},
  "type": "module"
 },
 "nestcheck.__version__": {
  "data": {
   "shadows": "nestcheck._version.__version__"
  },
  "type": "import"
 },
 "nestcheck._version": {
  "data": {},
  "type": "module"
 },
 "nestcheck._version.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "nestcheck.data_processing": {
  "data": {},
  "type": "module"
 },
 "nestcheck.data_processing.batch_process_data": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "KeyError",
    "enumerate",
    "len",
    "print",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "nestcheck.data_processing.birth_inds_given_contours": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "TypeError",
    "UserWarning",
    "ValueError",
    "enumerate",
    "int",
    "nestcheck.data_processing.warnings",
    "numpy.all",
    "numpy.concatenate",
    "numpy.full",
    "numpy.isnan",
    "numpy.nan",
    "numpy.random.choice",
    "numpy.random.get_state",
    "numpy.random.seed",
    "numpy.random.set_state",
    "numpy.random.shuffle",
    "numpy.where",
    "sample_less_than_condition"
   ]
  },
  "type": "function"
 },
 "nestcheck.data_processing.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "nestcheck.data_processing.nestcheck.io_utils": {
  "data": {
   "shadows": "nestcheck.io_utils"
  },
  "type": "import"
 },
 "nestcheck.data_processing.nestcheck.ns_run_utils": {
  "data": {
   "shadows": "nestcheck.ns_run_utils"
  },
  "type": "import"
 },
 "nestcheck.data_processing.nestcheck.parallel_utils": {
  "data": {
   "shadows": "nestcheck.parallel_utils"
  },
  "type": "import"
 },
 "nestcheck.data_processing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nestcheck.data_processing.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nestcheck.data_processing.process_dynesty_run": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.all",
    "numpy.array_equal",
    "numpy.asarray",
    "numpy.full",
    "numpy.inf",
    "numpy.isnan",
    "numpy.nan",
    "numpy.unique",
    "numpy.where",
    "numpy.zeros",
    "range",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "nestcheck.data_processing.process_error_helper": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "process_func",
    "type"
   ]
  },
  "type": "function"
 },
 "nestcheck.data_processing.process_multinest_run": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "nestcheck.data_processing.os",
    "numpy.all",
    "numpy.inf",
    "numpy.loadtxt",
    "numpy.vstack",
    "process_samples_array"
   ]
  },
  "type": "function"
 },
 "nestcheck.data_processing.process_polychord_run": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "IOError",
    "IndexError",
    "NameError",
    "OSError",
    "TypeError",
    "UserWarning",
    "ValueError",
    "nestcheck.data_processing.os",
    "nestcheck.data_processing.warnings",
    "numpy.loadtxt",
    "process_polychord_stats",
    "process_samples_array",
    "type"
   ]
  },
  "type": "function"
 },
 "nestcheck.data_processing.process_polychord_stats": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "len",
    "nestcheck.data_processing.os",
    "nestcheck.data_processing.re",
    "numpy.nan",
    "open"
   ]
  },
  "type": "function"
 },
 "nestcheck.data_processing.process_samples_array": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "birth_inds_given_contours",
    "numpy.argsort",
    "numpy.array_equal",
    "numpy.asarray",
    "numpy.cumsum",
    "numpy.inf",
    "numpy.unique",
    "numpy.where",
    "numpy.zeros",
    "range",
    "threads_given_birth_inds"
   ]
  },
  "type": "function"
 },
 "nestcheck.data_processing.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "nestcheck.data_processing.sample_less_than_condition": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "enumerate",
    "min",
    "nestcheck.data_processing.copy",
    "numpy.delete",
    "numpy.random.choice",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nestcheck.data_processing.threads_given_birth_inds": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "nestcheck.data_processing.warnings",
    "numpy.all",
    "numpy.array_equal",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.full",
    "numpy.intersect1d",
    "numpy.isnan",
    "numpy.nan",
    "numpy.random.choice",
    "numpy.random.get_state",
    "numpy.random.seed",
    "numpy.random.set_state",
    "numpy.unique",
    "numpy.where",
    "range",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "nestcheck.data_processing.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nestcheck.diagnostics_tables": {
  "data": {},
  "type": "module"
 },
 "nestcheck.diagnostics_tables.bs_values_df": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "nestcheck.parallel_utils.parallel_apply",
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "nestcheck.diagnostics_tables.error_values_summary": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "nestcheck.pandas_functions.summary_df_from_multi",
    "pandas.concat",
    "set"
   ]
  },
  "type": "function"
 },
 "nestcheck.diagnostics_tables.estimator_values_df": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "nestcheck.parallel_utils.parallel_apply",
    "numpy.stack",
    "pandas.DataFrame",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "nestcheck.diagnostics_tables.nestcheck.error_analysis": {
  "data": {
   "shadows": "nestcheck.error_analysis"
  },
  "type": "import"
 },
 "nestcheck.diagnostics_tables.nestcheck.io_utils": {
  "data": {
   "shadows": "nestcheck.io_utils"
  },
  "type": "import"
 },
 "nestcheck.diagnostics_tables.nestcheck.ns_run_utils": {
  "data": {
   "shadows": "nestcheck.ns_run_utils"
  },
  "type": "import"
 },
 "nestcheck.diagnostics_tables.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nestcheck.diagnostics_tables.pairwise_dists_on_cols": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "nestcheck.diagnostics_tables.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "nestcheck.diagnostics_tables.pf": {
  "data": {
   "shadows": "nestcheck.pandas_functions"
  },
  "type": "import"
 },
 "nestcheck.diagnostics_tables.pu": {
  "data": {
   "shadows": "nestcheck.parallel_utils"
  },
  "type": "import"
 },
 "nestcheck.diagnostics_tables.run_list_error_summary": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "nestcheck.diagnostics_tables.error_values_summary",
    "nestcheck.diagnostics_tables.run_list_error_values"
   ]
  },
  "type": "function"
 },
 "nestcheck.diagnostics_tables.run_list_error_values": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "TypeError",
    "bs_values_df",
    "estimator_values_df",
    "len",
    "numpy.std",
    "pairwise_dists_on_cols",
    "pandas.IndexSlice",
    "pandas.concat",
    "str",
    "thread_values_df"
   ]
  },
  "type": "function"
 },
 "nestcheck.diagnostics_tables.thread_values_df": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "nestcheck.parallel_utils.parallel_apply",
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "nestcheck.dummy_data": {
  "data": {},
  "type": "module"
 },
 "nestcheck.dummy_data.get_dummy_dynamic_run": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "list",
    "nestcheck.dummy_data.get_dummy_run",
    "nestcheck.dummy_data.get_dummy_thread",
    "numpy.full",
    "numpy.inf",
    "numpy.random.choice"
   ]
  },
  "type": "function"
 },
 "nestcheck.dummy_data.get_dummy_run": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "nestcheck.dummy_data.get_dummy_thread",
    "numpy.full",
    "numpy.inf",
    "numpy.random.seed",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "nestcheck.dummy_data.get_dummy_thread": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "numpy.asarray",
    "numpy.full",
    "numpy.inf",
    "numpy.random.random",
    "numpy.random.seed",
    "numpy.sort",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nestcheck.dummy_data.nestcheck.ns_run_utils": {
  "data": {
   "shadows": "nestcheck.ns_run_utils"
  },
  "type": "import"
 },
 "nestcheck.dummy_data.nestcheck.write_polychord_output": {
  "data": {
   "shadows": "nestcheck.write_polychord_output"
  },
  "type": "import"
 },
 "nestcheck.dummy_data.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nestcheck.error_analysis": {
  "data": {},
  "type": "module"
 },
 "nestcheck.error_analysis.bootstrap_resample_run": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "KeyError",
    "UserWarning",
    "len",
    "nestcheck.error_analysis.warnings",
    "numpy.all",
    "numpy.append",
    "numpy.inf",
    "numpy.random.get_state",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.random.set_state"
   ]
  },
  "type": "function"
 },
 "nestcheck.error_analysis.implementation_std": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "numpy.abs",
    "numpy.random.get_state",
    "numpy.random.normal",
    "numpy.random.seed",
    "numpy.random.set_state",
    "numpy.sign",
    "numpy.sqrt",
    "numpy.std",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nestcheck.error_analysis.nestcheck.ns_run_utils": {
  "data": {
   "shadows": "nestcheck.ns_run_utils"
  },
  "type": "import"
 },
 "nestcheck.error_analysis.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nestcheck.error_analysis.pairwise_distances": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "enumerate",
    "pandas.DataFrame",
    "statistical_distances",
    "str"
   ]
  },
  "type": "function"
 },
 "nestcheck.error_analysis.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "nestcheck.error_analysis.run_bootstrap_values": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "len",
    "nestcheck.error_analysis.bootstrap_resample_run",
    "numpy.mean",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nestcheck.error_analysis.run_ci_bootstrap": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "enumerate",
    "nestcheck.error_analysis.run_bootstrap_values",
    "numpy.asarray",
    "numpy.interp",
    "numpy.sort",
    "range"
   ]
  },
  "type": "function"
 },
 "nestcheck.error_analysis.run_std_bootstrap": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "enumerate",
    "numpy.std",
    "numpy.zeros",
    "run_bootstrap_values"
   ]
  },
  "type": "function"
 },
 "nestcheck.error_analysis.run_std_simulate": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.std",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nestcheck.error_analysis.run_thread_values": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "len",
    "numpy.stack"
   ]
  },
  "type": "function"
 },
 "nestcheck.error_analysis.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nestcheck.error_analysis.statistical_distances": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "nestcheck.error_analysis.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nestcheck.estimators": {
  "data": {},
  "type": "module"
 },
 "nestcheck.estimators.count_samples": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "nestcheck.estimators.evidence": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "nestcheck.estimators.scipy",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "nestcheck.estimators.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "nestcheck.estimators.get_latex_name": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "isinstance",
    "nestcheck.estimators.functools",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "nestcheck.estimators.logz": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "nestcheck.estimators.scipy"
   ]
  },
  "type": "function"
 },
 "nestcheck.estimators.nestcheck.ns_run_utils": {
  "data": {
   "shadows": "nestcheck.ns_run_utils"
  },
  "type": "import"
 },
 "nestcheck.estimators.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nestcheck.estimators.param_cred": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "numpy.exp",
    "weighted_quantile"
   ]
  },
  "type": "function"
 },
 "nestcheck.estimators.param_mean": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "IndexError",
    "numpy.exp",
    "numpy.nan",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nestcheck.estimators.param_squared_mean": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nestcheck.estimators.r_cred": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.sqrt",
    "numpy.sum",
    "weighted_quantile"
   ]
  },
  "type": "function"
 },
 "nestcheck.estimators.r_mean": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nestcheck.estimators.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "nestcheck.estimators.weighted_quantile": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.cumsum",
    "numpy.interp",
    "numpy.sum",
    "str"
   ]
  },
  "type": "function"
 },
 "nestcheck.io_utils": {
  "data": {},
  "type": "module"
 },
 "nestcheck.io_utils.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "nestcheck.io_utils.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "nestcheck.io_utils.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "nestcheck.io_utils.pickle_load": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "nestcheck.io_utils.pickle",
    "nestcheck.io_utils.timing_decorator",
    "open"
   ]
  },
  "type": "function"
 },
 "nestcheck.io_utils.pickle_save": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "IOError",
    "MemoryError",
    "NameError",
    "PermissionError",
    "TypeError",
    "UserWarning",
    "nestcheck.io_utils.pickle",
    "nestcheck.io_utils.time",
    "nestcheck.io_utils.timing_decorator",
    "nestcheck.io_utils.warnings",
    "open",
    "print",
    "type"
   ]
  },
  "type": "function"
 },
 "nestcheck.io_utils.save_load_result": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "nestcheck.io_utils.save_load_result.wrapper": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "IOError",
    "OSError",
    "UserWarning",
    "func",
    "func.__name__",
    "nestcheck.io_utils.functools",
    "nestcheck.io_utils.warnings",
    "pickle_load",
    "pickle_save",
    "type"
   ]
  },
  "type": "function"
 },
 "nestcheck.io_utils.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "nestcheck.io_utils.timing_decorator": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "nestcheck.io_utils.timing_decorator.wrapper": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "func",
    "func.__name__",
    "nestcheck.io_utils.functools",
    "nestcheck.io_utils.time",
    "print"
   ]
  },
  "type": "function"
 },
 "nestcheck.io_utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nestcheck.ns_run_utils": {
  "data": {},
  "type": "module"
 },
 "nestcheck.ns_run_utils.array_given_run": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.diff",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nestcheck.ns_run_utils.check_ns_run": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "check_ns_run_logls",
    "check_ns_run_members",
    "check_ns_run_threads",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "nestcheck.ns_run_utils.check_ns_run_logls": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "UserWarning",
    "nestcheck.ns_run_utils.warnings",
    "numpy.argsort",
    "numpy.array_equal",
    "numpy.unique",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "nestcheck.ns_run_utils.check_ns_run_members": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "numpy.ndarray",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "nestcheck.ns_run_utils.check_ns_run_threads": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "int",
    "numpy.any",
    "numpy.array_equal",
    "numpy.asarray",
    "numpy.inf",
    "numpy.unique",
    "numpy.where",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "nestcheck.ns_run_utils.combine_ns_runs": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "check_ns_run",
    "enumerate",
    "len",
    "nestcheck.ns_run_utils.array_given_run",
    "nestcheck.ns_run_utils.copy",
    "nestcheck.ns_run_utils.dict_given_run_array",
    "numpy.argsort",
    "numpy.vstack",
    "sum"
   ]
  },
  "type": "function"
 },
 "nestcheck.ns_run_utils.combine_threads": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "AssertionError",
    "check_ns_run_threads",
    "len",
    "nestcheck.ns_run_utils.array_given_run",
    "nestcheck.ns_run_utils.dict_given_run_array",
    "numpy.abs",
    "numpy.argmin",
    "numpy.argsort",
    "numpy.inf",
    "numpy.random.choice",
    "numpy.random.get_state",
    "numpy.random.seed",
    "numpy.random.set_state",
    "numpy.vstack",
    "numpy.where",
    "str"
   ]
  },
  "type": "function"
 },
 "nestcheck.ns_run_utils.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "nestcheck.ns_run_utils.dict_given_run_array": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "UserWarning",
    "int",
    "nestcheck.ns_run_utils.warnings",
    "numpy.all",
    "numpy.array_equal",
    "numpy.cumsum",
    "numpy.isnan",
    "numpy.zeros",
    "str"
   ]
  },
  "type": "function"
 },
 "nestcheck.ns_run_utils.get_logw": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "IndexError",
    "get_logx",
    "log_subtract",
    "nestcheck.ns_run_utils.copy",
    "numpy.log",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nestcheck.ns_run_utils.get_logx": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "float",
    "numpy.cumsum",
    "numpy.log",
    "numpy.random.random",
    "str"
   ]
  },
  "type": "function"
 },
 "nestcheck.ns_run_utils.get_run_threads": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "enumerate",
    "nestcheck.ns_run_utils.array_given_run",
    "nestcheck.ns_run_utils.dict_given_run_array",
    "numpy.reshape",
    "numpy.unique",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "nestcheck.ns_run_utils.get_w_rel": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "nestcheck.ns_run_utils.get_logw",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "nestcheck.ns_run_utils.log_subtract": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "nestcheck.ns_run_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nestcheck.ns_run_utils.run_estimators": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "enumerate",
    "est",
    "get_logw",
    "len",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nestcheck.ns_run_utils.scipy.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "nestcheck.ns_run_utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nestcheck.pandas_functions": {
  "data": {},
  "type": "module"
 },
 "nestcheck.pandas_functions.array_ratio_std": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "nestcheck.pandas_functions.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "nestcheck.pandas_functions.efficiency_gain_df": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "get_eff_gain",
    "len",
    "nestcheck.pandas_functions.summary_df_from_list",
    "nestcheck.pandas_functions.warnings",
    "pandas.CategoricalIndex",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "nestcheck.pandas_functions.get_eff_gain": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "array_ratio_std"
   ]
  },
  "type": "function"
 },
 "nestcheck.pandas_functions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nestcheck.pandas_functions.paper_format_efficiency_gain_df": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "KeyError",
    "int",
    "len",
    "nestcheck.pandas_functions.copy",
    "numpy.nan",
    "numpy.rint",
    "pandas.IndexSlice",
    "str"
   ]
  },
  "type": "function"
 },
 "nestcheck.pandas_functions.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "nestcheck.pandas_functions.rmse_and_unc": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "nestcheck.pandas_functions.summary_df": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "TypeError",
    "numpy.sqrt",
    "pandas.Categorical",
    "pandas.CategoricalIndex",
    "pandas.DataFrame",
    "rmse_and_unc",
    "str"
   ]
  },
  "type": "function"
 },
 "nestcheck.pandas_functions.summary_df_from_array": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "summary_df"
   ]
  },
  "type": "function"
 },
 "nestcheck.pandas_functions.summary_df_from_list": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "len",
    "numpy.stack",
    "pandas.DataFrame",
    "summary_df"
   ]
  },
  "type": "function"
 },
 "nestcheck.pandas_functions.summary_df_from_multi": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "list",
    "nestcheck.pandas_functions.copy",
    "summary_df",
    "tuple"
   ]
  },
  "type": "function"
 },
 "nestcheck.pandas_functions.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nestcheck.parallel_utils": {
  "data": {},
  "type": "module"
 },
 "nestcheck.parallel_utils.concurrent.futures": {
  "data": {
   "shadows": "concurrent.futures"
  },
  "type": "import"
 },
 "nestcheck.parallel_utils.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "nestcheck.parallel_utils.parallel_apply": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "TypeError",
    "UserWarning",
    "func",
    "isinstance",
    "len",
    "nestcheck.parallel_utils.warnings",
    "progress",
    "select_tqdm",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "nestcheck.parallel_utils.parallel_map": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "TypeError",
    "UserWarning",
    "list",
    "map",
    "nestcheck.parallel_utils.functools",
    "nestcheck.parallel_utils.warnings"
   ]
  },
  "type": "function"
 },
 "nestcheck.parallel_utils.select_tqdm": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "AssertionError",
    "NameError",
    "get_ipython",
    "nestcheck.parallel_utils.tqdm",
    "progress"
   ]
  },
  "type": "function"
 },
 "nestcheck.parallel_utils.tqdm": {
  "data": {
   "shadows": "tqdm"
  },
  "type": "import"
 },
 "nestcheck.parallel_utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nestcheck.plots": {
  "data": {},
  "type": "module"
 },
 "nestcheck.plots.alternate_helper": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "func",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "nestcheck.plots.average_by_key": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "KeyError",
    "list",
    "numpy.concatenate",
    "numpy.mean",
    "print"
   ]
  },
  "type": "function"
 },
 "nestcheck.plots.bs_param_dists": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "matplotlib.pyplot.colorbar",
    "matplotlib.pyplot.subplots",
    "nestcheck.plots.matplotlib",
    "numpy.random.get_state",
    "numpy.random.seed",
    "numpy.random.set_state",
    "plot_bs_dists",
    "range",
    "reversed",
    "str"
   ]
  },
  "type": "function"
 },
 "nestcheck.plots.fgivenx": {
  "data": {
   "shadows": "fgivenx"
  },
  "type": "import"
 },
 "nestcheck.plots.fgivenx.plot": {
  "data": {
   "shadows": "fgivenx.plot"
  },
  "type": "import"
 },
 "nestcheck.plots.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "nestcheck.plots.kde_plot_df": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "dict",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "matplotlib.pyplot.subplots",
    "nestcheck.plots.matplotlib",
    "numpy.ceil",
    "numpy.linspace",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "nestcheck.plots.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "nestcheck.plots.mpl_toolkits.axes_grid1": {
  "data": {
   "shadows": "mpl_toolkits.axes_grid1"
  },
  "type": "import"
 },
 "nestcheck.plots.nestcheck.error_analysis": {
  "data": {
   "shadows": "nestcheck.error_analysis"
  },
  "type": "import"
 },
 "nestcheck.plots.nestcheck.ns_run_utils": {
  "data": {
   "shadows": "nestcheck.ns_run_utils"
  },
  "type": "import"
 },
 "nestcheck.plots.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nestcheck.plots.param_logx_diagram": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "f",
    "ftheta",
    "isinstance",
    "len",
    "list",
    "matplotlib.pyplot.colorbar",
    "matplotlib.pyplot.get_cmap",
    "matplotlib.pyplot.subplots",
    "nestcheck.plots.fgivenx",
    "nestcheck.plots.functools",
    "nestcheck.plots.matplotlib",
    "numpy.exp",
    "numpy.interp",
    "numpy.linspace",
    "numpy.ndenumerate",
    "numpy.random.get_state",
    "numpy.random.random",
    "numpy.random.seed",
    "numpy.random.set_state",
    "numpy.sum",
    "numpy.trapz",
    "numpy.where",
    "numpy.zeros",
    "plot_bs_dists",
    "range",
    "reversed",
    "str"
   ]
  },
  "type": "function"
 },
 "nestcheck.plots.plot_bs_dists": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "f",
    "ftheta",
    "len",
    "matplotlib.pyplot.get_cmap",
    "max",
    "nestcheck.plots.fgivenx",
    "nestcheck.plots.functools",
    "numpy.full",
    "numpy.linspace",
    "numpy.nan",
    "numpy.sum",
    "numpy.swapaxes",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "nestcheck.plots.plot_run_nlive": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "average_by_key",
    "enumerate",
    "len",
    "logl_given_logx",
    "logx_given_logl",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.rcParams.by_key",
    "numpy.asarray",
    "numpy.cumsum",
    "numpy.isfinite",
    "numpy.isnan",
    "numpy.linspace",
    "numpy.trapz",
    "numpy.where",
    "numpy.zeros",
    "rel_posterior_mass",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "nestcheck.plots.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "nestcheck.plots.rel_posterior_mass": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.exp",
    "numpy.trapz"
   ]
  },
  "type": "function"
 },
 "nestcheck.plots.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nestcheck.plots.weighted_1d_gaussian_kde": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log",
    "numpy.meshgrid",
    "numpy.newaxis",
    "numpy.nonzero",
    "numpy.pi",
    "numpy.power",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "nestcheck.write_polychord_output": {
  "data": {},
  "type": "module"
 },
 "nestcheck.write_polychord_output.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "nestcheck.write_polychord_output.e": {
  "data": {
   "shadows": "nestcheck.estimators"
  },
  "type": "import"
 },
 "nestcheck.write_polychord_output.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "nestcheck.write_polychord_output.nestcheck.error_analysis": {
  "data": {
   "shadows": "nestcheck.error_analysis"
  },
  "type": "import"
 },
 "nestcheck.write_polychord_output.nestcheck.ns_run_utils": {
  "data": {
   "shadows": "nestcheck.ns_run_utils"
  },
  "type": "import"
 },
 "nestcheck.write_polychord_output.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nestcheck.write_polychord_output.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nestcheck.write_polychord_output.run_dead_birth_array": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.inf",
    "numpy.vstack",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nestcheck.write_polychord_output.write_run_output": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "nestcheck.estimators.logz",
    "nestcheck.estimators.param_mean",
    "nestcheck.write_polychord_output.functools",
    "nestcheck.write_polychord_output.os",
    "numpy.random.random",
    "numpy.savetxt",
    "numpy.where",
    "numpy.zeros",
    "range",
    "run_dead_birth_array",
    "write_stats_file"
   ]
  },
  "type": "function"
 },
 "nestcheck.write_polychord_output.write_stats_file": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "list",
    "nestcheck.write_polychord_output.copy",
    "nestcheck.write_polychord_output.os",
    "open",
    "set",
    "str",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 }
}