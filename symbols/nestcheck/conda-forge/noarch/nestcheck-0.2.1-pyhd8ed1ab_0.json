{
 "nestcheck": {
  "data": {},
  "type": "module"
 },
 "nestcheck.__version__": {
  "data": {
   "shadows": "nestcheck._version.__version__"
  },
  "type": "import"
 },
 "nestcheck._version": {
  "data": {},
  "type": "module"
 },
 "nestcheck._version.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "nestcheck.diagnostics_tables": {
  "data": {},
  "type": "module"
 },
 "nestcheck.diagnostics_tables.bs_values_df": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "nestcheck.parallel_utils.parallel_apply",
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "nestcheck.diagnostics_tables.error_values_summary": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "nestcheck.pandas_functions.summary_df_from_multi",
    "pandas.concat",
    "set"
   ]
  },
  "type": "function"
 },
 "nestcheck.diagnostics_tables.estimator_values_df": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "nestcheck.parallel_utils.parallel_apply",
    "numpy.stack",
    "pandas.DataFrame",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "nestcheck.diagnostics_tables.nestcheck.error_analysis": {
  "data": {
   "shadows": "nestcheck.error_analysis"
  },
  "type": "import"
 },
 "nestcheck.diagnostics_tables.nestcheck.io_utils": {
  "data": {
   "shadows": "nestcheck.io_utils"
  },
  "type": "import"
 },
 "nestcheck.diagnostics_tables.nestcheck.ns_run_utils": {
  "data": {
   "shadows": "nestcheck.ns_run_utils"
  },
  "type": "import"
 },
 "nestcheck.diagnostics_tables.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nestcheck.diagnostics_tables.pairwise_dists_on_cols": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "nestcheck.diagnostics_tables.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "nestcheck.diagnostics_tables.pf": {
  "data": {
   "shadows": "nestcheck.pandas_functions"
  },
  "type": "import"
 },
 "nestcheck.diagnostics_tables.pu": {
  "data": {
   "shadows": "nestcheck.parallel_utils"
  },
  "type": "import"
 },
 "nestcheck.diagnostics_tables.run_list_error_summary": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "nestcheck.diagnostics_tables.error_values_summary",
    "nestcheck.diagnostics_tables.run_list_error_values"
   ]
  },
  "type": "function"
 },
 "nestcheck.diagnostics_tables.run_list_error_values": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "nestcheck.diagnostics_tables.bs_values_df",
    "nestcheck.diagnostics_tables.estimator_values_df",
    "nestcheck.diagnostics_tables.pairwise_dists_on_cols",
    "nestcheck.diagnostics_tables.thread_values_df",
    "numpy.std",
    "pandas.IndexSlice",
    "pandas.concat",
    "str"
   ]
  },
  "type": "function"
 },
 "nestcheck.diagnostics_tables.thread_values_df": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "nestcheck.parallel_utils.parallel_apply",
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "nestcheck.dummy_data": {
  "data": {},
  "type": "module"
 },
 "nestcheck.dummy_data.get_dummy_dynamic_run": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "list",
    "nestcheck.dummy_data.get_dummy_run",
    "nestcheck.dummy_data.get_dummy_thread",
    "numpy.full",
    "numpy.inf",
    "numpy.random.choice"
   ]
  },
  "type": "function"
 },
 "nestcheck.dummy_data.get_dummy_run": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "nestcheck.dummy_data.get_dummy_thread",
    "numpy.full",
    "numpy.inf",
    "numpy.random.seed",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "nestcheck.dummy_data.get_dummy_thread": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "numpy.asarray",
    "numpy.full",
    "numpy.inf",
    "numpy.random.random",
    "numpy.random.seed",
    "numpy.sort",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nestcheck.dummy_data.nestcheck.ns_run_utils": {
  "data": {
   "shadows": "nestcheck.ns_run_utils"
  },
  "type": "import"
 },
 "nestcheck.dummy_data.nestcheck.write_polychord_output": {
  "data": {
   "shadows": "nestcheck.write_polychord_output"
  },
  "type": "import"
 },
 "nestcheck.dummy_data.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nestcheck.error_analysis": {
  "data": {},
  "type": "module"
 },
 "nestcheck.error_analysis.bootstrap_resample_run": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "KeyError",
    "UserWarning",
    "len",
    "nestcheck.error_analysis.warnings",
    "numpy.all",
    "numpy.append",
    "numpy.inf",
    "numpy.random.get_state",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.random.set_state"
   ]
  },
  "type": "function"
 },
 "nestcheck.error_analysis.implementation_std": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "numpy.abs",
    "numpy.random.get_state",
    "numpy.random.normal",
    "numpy.random.seed",
    "numpy.random.set_state",
    "numpy.sign",
    "numpy.sqrt",
    "numpy.std",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nestcheck.error_analysis.nestcheck.ns_run_utils": {
  "data": {
   "shadows": "nestcheck.ns_run_utils"
  },
  "type": "import"
 },
 "nestcheck.error_analysis.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nestcheck.error_analysis.pairwise_distances": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "enumerate",
    "nestcheck.error_analysis.statistical_distances",
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "nestcheck.error_analysis.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "nestcheck.error_analysis.run_bootstrap_values": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "len",
    "nestcheck.error_analysis.bootstrap_resample_run",
    "numpy.mean",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nestcheck.error_analysis.run_ci_bootstrap": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "enumerate",
    "nestcheck.error_analysis.run_bootstrap_values",
    "numpy.asarray",
    "numpy.interp",
    "numpy.sort",
    "range"
   ]
  },
  "type": "function"
 },
 "nestcheck.error_analysis.run_std_bootstrap": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "enumerate",
    "nestcheck.error_analysis.run_bootstrap_values",
    "numpy.std",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nestcheck.error_analysis.run_std_simulate": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.std",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nestcheck.error_analysis.run_thread_values": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "len",
    "numpy.stack"
   ]
  },
  "type": "function"
 },
 "nestcheck.error_analysis.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "nestcheck.error_analysis.statistical_distances": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "nestcheck.error_analysis.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nestcheck.io_utils": {
  "data": {},
  "type": "module"
 },
 "nestcheck.io_utils.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "nestcheck.io_utils.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "nestcheck.io_utils.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "nestcheck.io_utils.pickle_load": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "nestcheck.io_utils.pickle",
    "nestcheck.io_utils.timing_decorator",
    "open"
   ]
  },
  "type": "function"
 },
 "nestcheck.io_utils.pickle_save": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "IOError",
    "MemoryError",
    "NameError",
    "PermissionError",
    "TypeError",
    "UserWarning",
    "nestcheck.io_utils.pickle",
    "nestcheck.io_utils.time",
    "nestcheck.io_utils.timing_decorator",
    "nestcheck.io_utils.warnings",
    "open",
    "print",
    "type"
   ]
  },
  "type": "function"
 },
 "nestcheck.io_utils.save_load_result": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "nestcheck.io_utils.save_load_result.wrapper": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "IOError",
    "OSError",
    "UserWarning",
    "func",
    "func.__name__",
    "nestcheck.io_utils.functools",
    "nestcheck.io_utils.pickle_load",
    "nestcheck.io_utils.pickle_save",
    "nestcheck.io_utils.warnings",
    "type"
   ]
  },
  "type": "function"
 },
 "nestcheck.io_utils.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "nestcheck.io_utils.timing_decorator": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "nestcheck.io_utils.timing_decorator.wrapper": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "func",
    "func.__name__",
    "nestcheck.io_utils.functools",
    "nestcheck.io_utils.time",
    "print"
   ]
  },
  "type": "function"
 },
 "nestcheck.io_utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nestcheck.parallel_utils": {
  "data": {},
  "type": "module"
 },
 "nestcheck.parallel_utils.concurrent.futures": {
  "data": {
   "shadows": "concurrent.futures"
  },
  "type": "import"
 },
 "nestcheck.parallel_utils.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "nestcheck.parallel_utils.parallel_apply": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "TypeError",
    "UserWarning",
    "func",
    "isinstance",
    "len",
    "nestcheck.parallel_utils.select_tqdm",
    "nestcheck.parallel_utils.warnings",
    "progress",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "nestcheck.parallel_utils.parallel_map": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "TypeError",
    "UserWarning",
    "list",
    "map",
    "nestcheck.parallel_utils.functools",
    "nestcheck.parallel_utils.warnings"
   ]
  },
  "type": "function"
 },
 "nestcheck.parallel_utils.select_tqdm": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "AssertionError",
    "NameError",
    "get_ipython",
    "nestcheck.parallel_utils.tqdm",
    "progress"
   ]
  },
  "type": "function"
 },
 "nestcheck.parallel_utils.tqdm": {
  "data": {
   "shadows": "tqdm"
  },
  "type": "import"
 },
 "nestcheck.parallel_utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nestcheck.write_polychord_output": {
  "data": {},
  "type": "module"
 },
 "nestcheck.write_polychord_output.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "nestcheck.write_polychord_output.e": {
  "data": {
   "shadows": "nestcheck.estimators"
  },
  "type": "import"
 },
 "nestcheck.write_polychord_output.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "nestcheck.write_polychord_output.nestcheck.error_analysis": {
  "data": {
   "shadows": "nestcheck.error_analysis"
  },
  "type": "import"
 },
 "nestcheck.write_polychord_output.nestcheck.ns_run_utils": {
  "data": {
   "shadows": "nestcheck.ns_run_utils"
  },
  "type": "import"
 },
 "nestcheck.write_polychord_output.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "nestcheck.write_polychord_output.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nestcheck.write_polychord_output.run_dead_birth_array": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.inf",
    "numpy.vstack",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "nestcheck.write_polychord_output.write_run_output": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "nestcheck.estimators.logz",
    "nestcheck.estimators.param_mean",
    "nestcheck.write_polychord_output.functools",
    "nestcheck.write_polychord_output.os",
    "nestcheck.write_polychord_output.run_dead_birth_array",
    "nestcheck.write_polychord_output.write_stats_file",
    "numpy.random.random",
    "numpy.savetxt",
    "numpy.where",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "nestcheck.write_polychord_output.write_stats_file": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "list",
    "nestcheck.write_polychord_output.copy",
    "nestcheck.write_polychord_output.os",
    "open",
    "set",
    "str",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 }
}