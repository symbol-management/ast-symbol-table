{
 "mbstrdecoder": {
  "data": {},
  "type": "module"
 },
 "mbstrdecoder.__version__": {
  "data": {
   "symbols_in_volume": [
    "mbstrdecoder.__version__.__author__"
   ]
  },
  "type": "module"
 },
 "mbstrdecoder.__version__.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "mbstrdecoder.__version__.__copyright__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "mbstrdecoder.__version__.__email__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "mbstrdecoder.__version__.__license__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "mbstrdecoder.__version__.__maintainer__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "mbstrdecoder.__version__.__version__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "mbstrdecoder._binary_ext_checker": {
  "data": {},
  "type": "module"
 },
 "mbstrdecoder._binary_ext_checker.binary_exts": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "mbstrdecoder._binary_ext_checker.is_binary_ext_path": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "bool",
    "mbstrdecoder._binary_ext_checker.binary_exts"
   ]
  },
  "type": "function"
 },
 "mbstrdecoder._binary_ext_checker.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mbstrdecoder._func": {
  "data": {},
  "type": "module"
 },
 "mbstrdecoder._func.EBADF": {
  "data": {
   "shadows": "errno.EBADF"
  },
  "type": "import"
 },
 "mbstrdecoder._func.ENOENT": {
  "data": {
   "shadows": "errno.ENOENT"
  },
  "type": "import"
 },
 "mbstrdecoder._func.ENOTDIR": {
  "data": {
   "shadows": "errno.ENOTDIR"
  },
  "type": "import"
 },
 "mbstrdecoder._func.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mbstrdecoder._func.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mbstrdecoder._func.UniversalDetector": {
  "data": {
   "shadows": "chardet.universaldetector.UniversalDetector"
  },
  "type": "import"
 },
 "mbstrdecoder._func.detect_file_encoding": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "OSError",
    "chardet.universaldetector.UniversalDetector",
    "is_binary_ext_path",
    "mbstrdecoder._func.is_fifo",
    "mbstrdecoder._func.os",
    "mbstrdecoder._func.to_codec_name",
    "open",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mbstrdecoder._func.is_fifo": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "OSError",
    "ValueError",
    "bool",
    "bytes",
    "errno.EBADF",
    "errno.ENOENT",
    "errno.ENOTDIR",
    "int",
    "mbstrdecoder._func.os",
    "mbstrdecoder._func.stat",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mbstrdecoder._func.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mbstrdecoder._func.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "mbstrdecoder._func.to_codec_name": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mbstrdecoder._mbstrdecoder": {
  "data": {},
  "type": "module"
 },
 "mbstrdecoder._mbstrdecoder.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mbstrdecoder._mbstrdecoder.MultiByteStrDecoder": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "mbstrdecoder._mbstrdecoder.b",
    "mbstrdecoder._mbstrdecoder.re"
   ]
  },
  "type": "class"
 },
 "mbstrdecoder._mbstrdecoder.MultiByteStrDecoder.__detect_encoding_helper": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "TypeError",
    "mbstrdecoder._mbstrdecoder.chardet",
    "staticmethod",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mbstrdecoder._mbstrdecoder.MultiByteStrDecoder.__get_codec_candidate_list": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "ValueError",
    "mbstrdecoder._mbstrdecoder.copy",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mbstrdecoder._mbstrdecoder.MultiByteStrDecoder.__get_encoded_str": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mbstrdecoder._mbstrdecoder.MultiByteStrDecoder.__init__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "list",
    "str",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "mbstrdecoder._mbstrdecoder.MultiByteStrDecoder.__is_buffer": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "memoryview"
   ]
  },
  "type": "function"
 },
 "mbstrdecoder._mbstrdecoder.MultiByteStrDecoder.__is_multibyte_utf7": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "bool",
    "len",
    "mbstrdecoder._mbstrdecoder.b"
   ]
  },
  "type": "function"
 },
 "mbstrdecoder._mbstrdecoder.MultiByteStrDecoder.__process_utf7": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "str"
   ]
  },
  "type": "function"
 },
 "mbstrdecoder._mbstrdecoder.MultiByteStrDecoder.__repr__": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mbstrdecoder._mbstrdecoder.MultiByteStrDecoder.__to_unicode": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "UnicodeDecodeError",
    "UnicodeEncodeError",
    "isinstance",
    "str",
    "to_codec_name",
    "type"
   ]
  },
  "type": "function"
 },
 "mbstrdecoder._mbstrdecoder.MultiByteStrDecoder.__validate_str": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "ValueError",
    "bytes",
    "isinstance",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "mbstrdecoder._mbstrdecoder.MultiByteStrDecoder.codec": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "mbstrdecoder._mbstrdecoder.MultiByteStrDecoder.unicode_str": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "mbstrdecoder._mbstrdecoder.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "mbstrdecoder._mbstrdecoder.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "mbstrdecoder._mbstrdecoder.b": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "bytes",
    "str"
   ]
  },
  "type": "function"
 },
 "mbstrdecoder._mbstrdecoder.chardet": {
  "data": {
   "shadows": "chardet"
  },
  "type": "import"
 },
 "mbstrdecoder._mbstrdecoder.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mbstrdecoder._mbstrdecoder.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 }
}