{
 "nose_parameterized": {
  "data": {
   "symbols_in_volume": [
    "nose_parameterized.os",
    "nose_parameterized.warnings"
   ]
  },
  "type": "module"
 },
 "nose_parameterized.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nose_parameterized.parameterized": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "bytes",
    "collections.OrderedDict",
    "collections.namedtuple",
    "dict",
    "list",
    "nose_parameterized.parameterized.PY3",
    "nose_parameterized.parameterized.new",
    "nose_parameterized.parameterized.sys",
    "str",
    "zip"
   ]
  },
  "type": "module"
 },
 "nose_parameterized.parameterized.InstanceType": {
  "data": {
   "shadows": "types.InstanceType"
  },
  "type": "import"
 },
 "nose_parameterized.parameterized.MaybeOrderedDict": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "nose_parameterized.parameterized.PY2": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "nose_parameterized.parameterized.PY3": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "nose_parameterized.parameterized.QuietOrderedDict": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "dict.__repr__",
    "dict.__str__"
   ]
  },
  "type": "class"
 },
 "nose_parameterized.parameterized.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "nose_parameterized.parameterized._param": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "nose_parameterized.parameterized.bytes_type": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "nose_parameterized.parameterized.default_doc_func": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "len",
    "nose_parameterized.parameterized.parameterized_argument_value_pairs",
    "nose_parameterized.parameterized.short_repr"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.parameterized.default_name_func": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "nose_parameterized.parameterized.string_types"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.parameterized.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "nose_parameterized.parameterized.lzip": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "nose_parameterized.parameterized.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "nose_parameterized.parameterized.new": {
  "data": {
   "shadows": "new"
  },
  "type": "import"
 },
 "nose_parameterized.parameterized.new_instancemethod": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "nose_parameterized.parameterized.param": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "nose_parameterized.parameterized._param"
   ]
  },
  "type": "class"
 },
 "nose_parameterized.parameterized.param.__new__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "nose_parameterized.parameterized._param"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.parameterized.param.__repr__": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "nose_parameterized.parameterized.param.explicit": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.parameterized.param.from_decorator": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "isinstance",
    "nose_parameterized.parameterized.param",
    "nose_parameterized.parameterized.string_types"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.parameterized.parameterized": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "nose_parameterized.parameterized.parameterized.__call__": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "nose_parameterized.parameterized.parameterized.__call__.wrapper": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.parameterized.parameterized.__init__": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "input",
    "nose_parameterized.parameterized.default_doc_func"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.parameterized.parameterized._terrible_magic_get_defining_classes": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "eval",
    "len",
    "nose_parameterized.parameterized.inspect"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.parameterized.parameterized.assert_not_in_testcase_subclass": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "Exception",
    "any",
    "cls",
    "issubclass",
    "unittest.TestCase"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.parameterized.parameterized.check_input_values": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "classmethod",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.parameterized.parameterized.expand": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "DeprecationWarning",
    "classmethod",
    "nose_parameterized.parameterized.default_doc_func",
    "nose_parameterized.parameterized.default_name_func",
    "nose_parameterized.parameterized.warnings"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.parameterized.parameterized.expand.parameterized_expand_wrapper": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "cls.input_as_callable",
    "cls.param_as_standalone_func",
    "doc_func",
    "enumerate",
    "input",
    "name_func",
    "nose_parameterized.parameterized.inspect",
    "nose_parameterized.parameterized.param"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.parameterized.parameterized.input_as_callable": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "callable",
    "classmethod",
    "cls.check_input_values",
    "input"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.parameterized.parameterized.make_bound_method": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "TypeError",
    "cls",
    "func",
    "func.__name__",
    "getattr",
    "issubclass",
    "nose_parameterized.parameterized.new_instancemethod",
    "setattr",
    "type",
    "types.InstanceType"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.parameterized.parameterized.param_as_nose_tuple": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "func",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.parameterized.parameterized.param_as_standalone_func": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "AttributeError",
    "classmethod",
    "func"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.parameterized.parameterized.param_as_standalone_func.standalone_func": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "func",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.parameterized.parameterized.to_safe_name": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "classmethod",
    "nose_parameterized.parameterized.re",
    "str"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.parameterized.parameterized.yield_nose_tuples": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "enumerate",
    "nose_parameterized.parameterized.param"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.parameterized.parameterized_argument_value_pairs": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "len",
    "nose_parameterized.parameterized.QuietOrderedDict",
    "nose_parameterized.parameterized.inspect",
    "nose_parameterized.parameterized.lzip",
    "set",
    "sorted",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.parameterized.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "nose_parameterized.parameterized.short_repr": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "isinstance",
    "len",
    "nose_parameterized.parameterized.bytes_type",
    "nose_parameterized.parameterized.text_type",
    "repr"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.parameterized.string_types": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "nose_parameterized.parameterized.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nose_parameterized.parameterized.text_type": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "nose_parameterized.parameterized.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "nose_parameterized.parameterized.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "nose_parameterized.test": {
  "data": {
   "symbols_in_volume": [
    "nose_parameterized.test.NOSE2",
    "nose_parameterized.test.UNITTEST",
    "nose_parameterized.test.detect_runner",
    "nose_parameterized.test.expect",
    "nose_parameterized.test.missing_tests",
    "nose_parameterized.test.runner",
    "param",
    "set"
   ]
  },
  "type": "module"
 },
 "nose_parameterized.test.NOSE2": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "nose_parameterized.test.SKIP_FLAGS": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "nose_parameterized.test.SkipTest": {
  "data": {
   "shadows": "nose.plugins.skip.SkipTest"
  },
  "type": "import"
 },
 "nose_parameterized.test.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "nose_parameterized.test.TestOldStyleClass": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "nose_parameterized.test.expect"
   ]
  },
  "type": "class"
 },
 "nose_parameterized.test.TestOldStyleClass.test_old_style_classes": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "nose_parameterized.test.missing_tests",
    "param",
    "parameterized.expand"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.test.TestParamerizedOnTestCase": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "nose_parameterized.test.expect",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "nose_parameterized.test.TestParamerizedOnTestCase.test_on_TestCase": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "nose_parameterized.test.missing_tests",
    "nose_parameterized.test.test_params",
    "parameterized.expand"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.test.TestParamerizedOnTestCase.test_on_TestCase2": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "nose_parameterized.test.custom_naming_func",
    "nose_parameterized.test.inspect",
    "nose_parameterized.test.missing_tests",
    "nose_parameterized.test.test_params",
    "parameterized.expand",
    "str"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.test.TestParameterized": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "nose_parameterized.test.expect",
    "object"
   ]
  },
  "type": "class"
 },
 "nose_parameterized.test.TestParameterized.test_instance_method": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "nose_parameterized.test.missing_tests",
    "nose_parameterized.test.test_params",
    "parameterized"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.test.TestParameterizedExpandDocstring": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "nose_parameterized.test.TestParameterizedExpandDocstring._assert_docstring": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.assert_equal",
    "nose_parameterized.test.inspect"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.test.TestParameterizedExpandDocstring.test_custom_doc_func": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "param",
    "parameterized.expand"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.test.TestParameterizedExpandDocstring.test_default_values_get_correct_value": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "param",
    "parameterized.expand"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.test.TestParameterizedExpandDocstring.test_empty_docstring": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "param",
    "parameterized.expand"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.test.TestParameterizedExpandDocstring.test_multiline_documentation": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "param",
    "parameterized.expand"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.test.TestParameterizedExpandDocstring.test_single_line_docstring": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "param",
    "parameterized.expand"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.test.TestParameterizedExpandDocstring.test_unicode_docstring": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "param",
    "parameterized.expand"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.test.TestParameterizedExpandDocstring.test_with_leading_newline": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "param",
    "parameterized.expand"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.test.UNITTEST": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "nose_parameterized.test.assert_contains": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.test.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "nose_parameterized.test.custom_naming_func": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "nose_parameterized.test.custom_naming_func.custom_naming_func": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "param.args",
    "str"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.test.detect_runner": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "nose_parameterized.test.inspect",
    "reversed"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.test.expect": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "any",
    "nose_parameterized.test.SKIP_FLAGS",
    "nose_parameterized.test.missing_tests"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.test.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "nose_parameterized.test.missing_tests": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "nose_parameterized.test.runner": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "nose_parameterized.test.tearDownModule": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "list",
    "nose.tools.assert_equal",
    "nose_parameterized.test.missing_tests",
    "sorted"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.test.test_helpful_error_on_non_iterable_input": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "nose_parameterized.test.assert_contains",
    "parameterized",
    "str"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.test.test_naked_function": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "nose_parameterized.test.missing_tests",
    "nose_parameterized.test.test_params",
    "parameterized"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.test.test_old_style_classes": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "AssertionError",
    "OldStyleClass",
    "TypeError",
    "list",
    "nose.plugins.skip.SkipTest",
    "nose_parameterized.test.assert_contains",
    "str"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.test.test_old_style_classes.OldStyleClass": {
  "data": {
   "lineno": 220
  },
  "type": "class"
 },
 "nose_parameterized.test.test_old_style_classes.OldStyleClass.parameterized_method": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "parameterized"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.test.test_parameterized_argument_value_pairs": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "eval",
    "nose.tools.assert_equal",
    "param",
    "parameterized",
    "parameterized_argument_value_pairs"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.test.test_params": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "nose_parameterized.test.test_short_repr": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "input",
    "nose.tools.assert_equal",
    "parameterized",
    "short_repr"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.test.test_warns_when_using_parameterized_with_TestCase": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "nose_parameterized.test.assert_contains",
    "str"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.test.test_warns_when_using_parameterized_with_TestCase.TestTestCaseWarnsOnBadUseOfParameterized": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "nose_parameterized.test.test_warns_when_using_parameterized_with_TestCase.TestTestCaseWarnsOnBadUseOfParameterized.test_in_subclass_of_TestCase": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "parameterized"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.test.test_with_docstring": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "parameterized"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.test.test_wrapped_iterable_input": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "iter",
    "nose_parameterized.test.missing_tests",
    "parameterized"
   ]
  },
  "type": "function"
 },
 "nose_parameterized.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 }
}