{
 "sonnet": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet._ensure_dependency_available_at_version": {
  "lineno": 43,
  "symbols_in_volume": [
   "importlib.import_module",
   "semantic_version.Spec",
   "semantic_version.Version"
  ],
  "type": "function"
 },
 "sonnet.examples": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.examples.brnn_ptb": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "numpy.exp",
   "tensorflow.app.run",
   "tensorflow.contrib.framework.nest",
   "tensorflow.flags.DEFINE_float",
   "tensorflow.flags.DEFINE_integer",
   "tensorflow.flags.DEFINE_string",
   "tensorflow.flags.FLAGS",
   "tensorflow.logging.INFO",
   "tensorflow.logging.set_verbosity"
  ],
  "type": "module"
 },
 "sonnet.examples.brnn_ptb.CustomScaleMixture": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.examples.brnn_ptb.CustomScaleMixture.__init__": {
  "lineno": 167,
  "symbols_in_volume": [
   "numpy.float32"
  ],
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.CustomScaleMixture.log_prob": {
  "lineno": 171,
  "symbols_in_volume": [
   "numpy.float32",
   "tensorflow.log",
   "tensorflow.reduce_logsumexp",
   "tensorflow.reduce_sum",
   "tensorflow.stack",
   "tensorflow_probability.distributions.Normal"
  ],
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.GlobalNormClippingOptimizer": {
  "lineno": 140,
  "symbols_in_volume": [
   "tensorflow.train.Optimizer"
  ],
  "type": "class"
 },
 "sonnet.examples.brnn_ptb.GlobalNormClippingOptimizer.__init__": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.GlobalNormClippingOptimizer.apply_gradients": {
  "lineno": 156,
  "symbols_in_volume": [
   "numpy.inf",
   "tensorflow.clip_by_global_norm"
  ],
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.GlobalNormClippingOptimizer.compute_gradients": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.PTB": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.examples.brnn_ptb.PTB.__call__": {
  "lineno": 124,
  "symbols_in_volume": [
   "sonnet.examples.ptb_reader.ptb_producer",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.PTB.__init__": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.PTB.num_batches": {
  "lineno": 131,
  "symbols_in_volume": [
   "numpy.prod"
  ],
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.PTB.to_string": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.PTB.to_string_tensor": {
  "lineno": 119,
  "symbols_in_volume": [
   "tensorflow.py_func",
   "tensorflow.string"
  ],
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.PTB.to_string_tensor.p_func": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.PTB.vocab_size": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.brnn_ptb._get_raw_data": {
  "lineno": 89,
  "symbols_in_volume": [
   "numpy.array",
   "sonnet.examples.ptb_reader.ptb_raw_data"
  ],
  "type": "function"
 },
 "sonnet.examples.brnn_ptb._run_session_with_no_hooks": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.build_logits": {
  "lineno": 333,
  "symbols_in_volume": [
   "sonnet.BatchApply",
   "tensorflow.assign",
   "tensorflow.control_dependencies",
   "tensorflow.get_local_variable",
   "tensorflow.group",
   "tensorflow.identity",
   "tensorflow.nn.dynamic_rnn",
   "tensorflow.zeros_like"
  ],
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.build_loss": {
  "lineno": 379,
  "symbols_in_volume": [
   "tensorflow.nn.sparse_softmax_cross_entropy_with_logits",
   "tensorflow.reduce_mean",
   "tensorflow.reduce_sum",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.build_modules": {
  "lineno": 289,
  "symbols_in_volume": [
   "sonnet.DeepRNN",
   "sonnet.Embed",
   "sonnet.LSTM",
   "sonnet.Linear",
   "sonnet.python.custom_getters.bayes_by_backprop.EstimatorModes.mean",
   "sonnet.python.custom_getters.bayes_by_backprop.EstimatorModes.sample",
   "sonnet.python.custom_getters.bayes_by_backprop.bayes_by_backprop_getter",
   "sonnet.python.custom_getters.bayes_by_backprop.stochastic_kl_builder",
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.custom_scale_mixture_prior_builder": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.lstm_posterior_builder": {
  "lineno": 207,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log",
   "numpy.sqrt",
   "numpy.square",
   "tensorflow.float32",
   "tensorflow.nn.softplus",
   "tensorflow.random_uniform",
   "tensorflow_probability.distributions.Normal",
   "tensorflow_probability.distributions.Normal.param_static_shapes"
  ],
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.main": {
  "lineno": 580,
  "symbols_in_volume": [
   "os.path.join",
   "tensorflow.Graph",
   "tensorflow.logging.info"
  ],
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.non_lstm_posterior_builder": {
  "lineno": 248,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log",
   "numpy.sqrt",
   "numpy.square",
   "tensorflow.float32",
   "tensorflow.nn.softplus",
   "tensorflow.random_uniform",
   "tensorflow_probability.distributions.Normal",
   "tensorflow_probability.distributions.Normal.param_static_shapes"
  ],
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.test": {
  "lineno": 544,
  "symbols_in_volume": [
   "numpy.exp",
   "tensorflow.GraphKeys.GLOBAL_STEP",
   "tensorflow.GraphKeys.GLOBAL_VARIABLES",
   "tensorflow.constant",
   "tensorflow.get_variable",
   "tensorflow.int32",
   "tensorflow.logging.info",
   "tensorflow.train.SingularMonitoredSession"
  ],
  "type": "function"
 },
 "sonnet.examples.brnn_ptb.train": {
  "lineno": 393,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "numpy.exp",
   "os.path.join",
   "sonnet.python.custom_getters.bayes_by_backprop.get_total_kl_cost",
   "tensorflow.GraphKeys.GLOBAL_STEP",
   "tensorflow.GraphKeys.GLOBAL_VARIABLES",
   "tensorflow.add",
   "tensorflow.argmax",
   "tensorflow.cast",
   "tensorflow.constant",
   "tensorflow.control_dependencies",
   "tensorflow.equal",
   "tensorflow.float32",
   "tensorflow.get_variable",
   "tensorflow.int32",
   "tensorflow.log",
   "tensorflow.logging.info",
   "tensorflow.nn.softmax",
   "tensorflow.reduce_mean",
   "tensorflow.subtract",
   "tensorflow.summary.FileWriterCache.get",
   "tensorflow.summary.Summary",
   "tensorflow.summary.scalar",
   "tensorflow.train.GradientDescentOptimizer",
   "tensorflow.train.MonitoredTrainingSession"
  ],
  "type": "function"
 },
 "sonnet.examples.brnn_ptb_test": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.flags.FLAGS",
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.examples.brnn_ptb_test.BrnnPtbTest": {
  "lineno": 53,
  "symbols_in_volume": [
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.examples.brnn_ptb_test.BrnnPtbTest.testScriptRunsWithFakeData": {
  "lineno": 55,
  "symbols_in_volume": [
   "os.path.join",
   "sonnet.examples.brnn_ptb.main",
   "tensorflow.gfile.GFile",
   "tensorflow.test.get_temp_dir"
  ],
  "type": "function"
 },
 "sonnet.examples.brnn_ptb_test._make_fake_corpus_with_vocab": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.brnn_ptb_test._make_random_vocab": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.brnn_ptb_test._make_random_word": {
  "lineno": 32,
  "symbols_in_volume": [
   "random.choice",
   "random.randint",
   "string.ascii_lowercase",
   "string.ascii_uppercase"
  ],
  "type": "function"
 },
 "sonnet.examples.brnn_ptb_test._make_sentence_with_vocab": {
  "lineno": 43,
  "symbols_in_volume": [
   "random.randint"
  ],
  "type": "function"
 },
 "sonnet.examples.dataset_mnist_cifar10": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.examples.dataset_mnist_cifar10.get_data": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.expand_dims",
   "numpy.float32",
   "numpy.int32",
   "tensorflow.data.Dataset.from_tensor_slices",
   "tensorflow.keras.datasets"
  ],
  "type": "function"
 },
 "sonnet.examples.dataset_nth_farthest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.examples.dataset_nth_farthest.NthFarthest": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.examples.dataset_nth_farthest.NthFarthest.__init__": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.dataset_nth_farthest.NthFarthest._get_batch_data": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy.concatenate",
   "six.moves.range"
  ],
  "type": "function"
 },
 "sonnet.examples.dataset_nth_farthest.NthFarthest._get_single_set": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.concatenate",
   "numpy.expand_dims",
   "numpy.float32",
   "numpy.identity",
   "numpy.random.permutation",
   "numpy.random.randint",
   "numpy.random.uniform",
   "numpy.zeros",
   "scipy.spatial.distance.pdist",
   "scipy.spatial.distance.squareform"
  ],
  "type": "function"
 },
 "sonnet.examples.dataset_nth_farthest.NthFarthest.get_batch": {
  "lineno": 122,
  "symbols_in_volume": [
   "tensorflow.float32",
   "tensorflow.py_func",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "sonnet.examples.dataset_shakespeare": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "tensorflow.flags.FLAGS"
  ],
  "type": "module"
 },
 "sonnet.examples.dataset_shakespeare.TinyShakespeareDataset": {
  "lineno": 93,
  "symbols_in_volume": [
   "sonnet.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.examples.dataset_shakespeare.TinyShakespeareDataset.__init__": {
  "lineno": 100,
  "symbols_in_volume": [
   "tensorflow.float32"
  ],
  "type": "function"
 },
 "sonnet.examples.dataset_shakespeare.TinyShakespeareDataset._build": {
  "lineno": 183,
  "symbols_in_volume": [
   "tensorflow.FIFOQueue",
   "tensorflow.int32",
   "tensorflow.py_func",
   "tensorflow.train.QueueRunner",
   "tensorflow.train.add_queue_runner"
  ],
  "type": "function"
 },
 "sonnet.examples.dataset_shakespeare.TinyShakespeareDataset._get_batch": {
  "lineno": 156,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.mod"
  ],
  "type": "function"
 },
 "sonnet.examples.dataset_shakespeare.TinyShakespeareDataset._one_hot": {
  "lineno": 153,
  "symbols_in_volume": [
   "tensorflow.one_hot"
  ],
  "type": "function"
 },
 "sonnet.examples.dataset_shakespeare.TinyShakespeareDataset._reset_head_indices": {
  "lineno": 149,
  "symbols_in_volume": [
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "sonnet.examples.dataset_shakespeare.TinyShakespeareDataset.cost": {
  "lineno": 196,
  "symbols_in_volume": [
   "tensorflow.nn.softmax_cross_entropy_with_logits",
   "tensorflow.reduce_sum",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "sonnet.examples.dataset_shakespeare.TinyShakespeareDataset.to_human_readable": {
  "lineno": 214,
  "symbols_in_volume": [
   "numpy.argmax"
  ],
  "type": "function"
 },
 "sonnet.examples.dataset_shakespeare.TinyShakespeareDataset.vocab_size": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.dataset_shakespeare.TokenDataSource": {
  "lineno": 37,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join",
   "os.path.realpath"
  ],
  "type": "class"
 },
 "sonnet.examples.dataset_shakespeare.TokenDataSource.__init__": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32"
  ],
  "type": "function"
 },
 "sonnet.examples.dataset_shakespeare.TokenDataSource.__init__.reading_function": {
  "lineno": 55,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.join"
  ],
  "type": "function"
 },
 "sonnet.examples.dataset_shakespeare.TokenDataSource.decode": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.dataset_shakespeare.TokenDataSource.tokenize": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.examples.learn_to_execute.AddOp": {
  "lineno": 336,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.AddOp.__init__": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.AddOp.eval": {
  "lineno": 342,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.AddOp.get_code": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.BaselineCurriculum": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.BaselineCurriculum.__init__": {
  "lineno": 174,
  "symbols_in_volume": [
   "tensorflow.logging.info"
  ],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.BaselineCurriculum.friendly_name": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.CodeOp": {
  "lineno": 280,
  "symbols_in_volume": [
   "abc.ABCMeta",
   "six.add_metaclass"
  ],
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.CodeOp.__init__": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.CodeOp.check_elems": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.CodeOp.eval": {
  "lineno": 325,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.CodeOp.get_code": {
  "lineno": 330,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.CodeOp.is_memory": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.CodeOp.num_operands": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.CombineCurriculum": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.CombineCurriculum.__init__": {
  "lineno": 244,
  "symbols_in_volume": [
   "tensorflow.logging.info"
  ],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.CombineCurriculum.fetch": {
  "lineno": 273,
  "symbols_in_volume": [
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.CombineCurriculum.friendly_name": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.CombineCurriculum.update": {
  "lineno": 255,
  "symbols_in_volume": [
   "tensorflow.logging.info"
  ],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.CopyOp": {
  "lineno": 477,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.CopyOp.__init__": {
  "lineno": 480,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.CopyOp.eval": {
  "lineno": 485,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.CopyOp.get_code": {
  "lineno": 496,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.DivideOp": {
  "lineno": 381,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.DivideOp.__init__": {
  "lineno": 384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.DivideOp.eval": {
  "lineno": 387,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.DivideOp.get_code": {
  "lineno": 391,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.DoubleCopyOp": {
  "lineno": 508,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.DoubleCopyOp.__init__": {
  "lineno": 511,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.DoubleCopyOp.eval": {
  "lineno": 516,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.DoubleCopyOp.get_code": {
  "lineno": 527,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.ForOp": {
  "lineno": 426,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.ForOp.__init__": {
  "lineno": 429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.ForOp.eval": {
  "lineno": 432,
  "symbols_in_volume": [
   "random.randint",
   "six.moves.range"
  ],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.ForOp.get_code": {
  "lineno": 440,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.IfOp": {
  "lineno": 396,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.IfOp.__init__": {
  "lineno": 399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.IfOp.eval": {
  "lineno": 403,
  "symbols_in_volume": [
   "random.randint"
  ],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.IfOp.get_code": {
  "lineno": 414,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LTECurriculum": {
  "lineno": 72,
  "symbols_in_volume": [
   "abc.ABCMeta",
   "six.add_metaclass"
  ],
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.LTECurriculum.__init__": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LTECurriculum._set_loss_window": {
  "lineno": 99,
  "symbols_in_volume": [
   "collections.deque"
  ],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LTECurriculum.current_level": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LTECurriculum.fetch": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LTECurriculum.friendly_name": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LTECurriculum.max_length": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LTECurriculum.max_nesting": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LTECurriculum.update": {
  "lineno": 110,
  "symbols_in_volume": [
   "numpy.mean"
  ],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecute": {
  "lineno": 994,
  "symbols_in_volume": [
   "tensorflow.TensorShape",
   "tensorflow.data.Dataset.from_generator",
   "tensorflow.float32",
   "tensorflow.int64"
  ],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState": {
  "lineno": 777,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState.__init__": {
  "lineno": 807,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState._np_one_hot": {
  "lineno": 886,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState.batch_size": {
  "lineno": 909,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState.curriculum": {
  "lineno": 913,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState.evaluate_curriculum": {
  "lineno": 896,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState.get_task_ops": {
  "lineno": 862,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState.level": {
  "lineno": 918,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState.make_batch": {
  "lineno": 932,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.int32",
   "numpy.ndarray",
   "numpy.reshape"
  ],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState.num_steps": {
  "lineno": 901,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState.num_steps_out": {
  "lineno": 905,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState.reset_data_source": {
  "lineno": 892,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState.seq_sizes_in": {
  "lineno": 922,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState.seq_sizes_out": {
  "lineno": 927,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState.to_human_readable": {
  "lineno": 959,
  "symbols_in_volume": [
   "numpy.argmax",
   "six.moves.range"
  ],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState.vocab_size": {
  "lineno": 882,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.LearnToExecuteState.vocabulary": {
  "lineno": 877,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.MixCurriculum": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.MixCurriculum.__init__": {
  "lineno": 224,
  "symbols_in_volume": [
   "tensorflow.logging.info"
  ],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.MixCurriculum.fetch": {
  "lineno": 234,
  "symbols_in_volume": [
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.MixCurriculum.friendly_name": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.Mode": {
  "lineno": 987,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.MultiplyOp": {
  "lineno": 366,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.MultiplyOp.__init__": {
  "lineno": 369,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.MultiplyOp.eval": {
  "lineno": 372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.MultiplyOp.get_code": {
  "lineno": 376,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.NaiveCurriculum": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.NaiveCurriculum.__init__": {
  "lineno": 191,
  "symbols_in_volume": [
   "tensorflow.logging.info"
  ],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.NaiveCurriculum.friendly_name": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.NaiveCurriculum.update": {
  "lineno": 202,
  "symbols_in_volume": [
   "tensorflow.logging.info"
  ],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.ReverseOp": {
  "lineno": 446,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.ReverseOp.__init__": {
  "lineno": 449,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.ReverseOp.eval": {
  "lineno": 454,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.ReverseOp.get_code": {
  "lineno": 465,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.SubtractOp": {
  "lineno": 351,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.SubtractOp.__init__": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.SubtractOp.eval": {
  "lineno": 357,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.SubtractOp.get_code": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.TaskGroups": {
  "lineno": 771,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.TaskType": {
  "lineno": 759,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.TokenDataSource": {
  "lineno": 612,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.examples.learn_to_execute.TokenDataSource.__init__": {
  "lineno": 619,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.TokenDataSource.decode_to_list": {
  "lineno": 753,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.TokenDataSource.decode_to_string": {
  "lineno": 749,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.TokenDataSource.generate_flat_data": {
  "lineno": 656,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "six.moves.range"
  ],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.TokenDataSource.tokenize": {
  "lineno": 701,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.TokenDataSource.vocabulary": {
  "lineno": 651,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.generate_code": {
  "lineno": 539,
  "symbols_in_volume": [
   "random.choice",
   "six.moves.range"
  ],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.generate_code.fetch": {
  "lineno": 562,
  "symbols_in_volume": [
   "six.moves.range"
  ],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.generate_code.fetch_one": {
  "lineno": 552,
  "symbols_in_volume": [
   "random.randint"
  ],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.get_end_token": {
  "lineno": 607,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.get_padding": {
  "lineno": 597,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.get_start_token": {
  "lineno": 602,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.learn_to_execute.get_tokens": {
  "lineno": 580,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.mnist_mlp": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.app.run",
   "tensorflow.flags.DEFINE_float",
   "tensorflow.flags.DEFINE_integer",
   "tensorflow.flags.FLAGS"
  ],
  "type": "module"
 },
 "sonnet.examples.mnist_mlp.main": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.mnist_mlp.train_and_eval": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.count_nonzero",
   "sonnet.BatchFlatten",
   "sonnet.examples.dataset_mnist_cifar10.get_data",
   "sonnet.nets.MLP",
   "tensorflow.logging.info",
   "tensorflow.nn.in_top_k",
   "tensorflow.nn.softmax",
   "tensorflow.nn.sparse_softmax_cross_entropy_with_logits",
   "tensorflow.reduce_mean",
   "tensorflow.train.GradientDescentOptimizer",
   "tensorflow.train.SingularMonitoredSession"
  ],
  "type": "function"
 },
 "sonnet.examples.module_with_build_args": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.app.run"
  ],
  "type": "module"
 },
 "sonnet.examples.module_with_build_args.custom_build": {
  "lineno": 41,
  "symbols_in_volume": [
   "sonnet.BatchFlatten",
   "sonnet.BatchNorm",
   "sonnet.Conv2D",
   "sonnet.Linear",
   "tensorflow.nn.dropout",
   "tensorflow.nn.relu"
  ],
  "type": "function"
 },
 "sonnet.examples.module_with_build_args.main": {
  "lineno": 55,
  "symbols_in_volume": [
   "sonnet.Module",
   "tensorflow.GraphKeys.UPDATE_OPS",
   "tensorflow.Session",
   "tensorflow.constant",
   "tensorflow.control_dependencies",
   "tensorflow.get_collection",
   "tensorflow.global_variables_initializer",
   "tensorflow.nn.l2_loss",
   "tensorflow.random_uniform",
   "tensorflow.train.GradientDescentOptimizer"
  ],
  "type": "function"
 },
 "sonnet.examples.ptb_reader": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.examples.ptb_reader._build_vocab": {
  "lineno": 38,
  "symbols_in_volume": [
   "collections.Counter"
  ],
  "type": "function"
 },
 "sonnet.examples.ptb_reader._file_to_word_ids": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.ptb_reader._read_words": {
  "lineno": 30,
  "symbols_in_volume": [
   "six.PY3",
   "tensorflow.gfile.GFile"
  ],
  "type": "function"
 },
 "sonnet.examples.ptb_reader.ptb_producer": {
  "lineno": 85,
  "symbols_in_volume": [
   "tensorflow.assert_positive",
   "tensorflow.control_dependencies",
   "tensorflow.convert_to_tensor",
   "tensorflow.identity",
   "tensorflow.int32",
   "tensorflow.name_scope",
   "tensorflow.reshape",
   "tensorflow.size",
   "tensorflow.strided_slice",
   "tensorflow.train.range_input_producer"
  ],
  "type": "function"
 },
 "sonnet.examples.ptb_reader.ptb_raw_data": {
  "lineno": 55,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "sonnet.examples.rmc_learn_to_execute": {
  "lineno": null,
  "symbols_in_volume": [
   "absl.flags.DEFINE_float",
   "absl.flags.DEFINE_integer",
   "absl.flags.DEFINE_string",
   "absl.flags.FLAGS",
   "tensorflow.app.run"
  ],
  "type": "module"
 },
 "sonnet.examples.rmc_learn_to_execute.SequenceModel": {
  "lineno": 55,
  "symbols_in_volume": [
   "sonnet.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.examples.rmc_learn_to_execute.SequenceModel.__init__": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.rmc_learn_to_execute.SequenceModel._build": {
  "lineno": 69,
  "symbols_in_volume": [
   "sonnet.BatchApply",
   "sonnet.Linear",
   "tensorflow.logging.info",
   "tensorflow.nn.dynamic_rnn",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.examples.rmc_learn_to_execute.build_and_train": {
  "lineno": 110,
  "symbols_in_volume": [
   "six.moves.range",
   "sonnet.RelationalMemory",
   "sonnet.examples.learn_to_execute.LearnToExecute",
   "sonnet.examples.learn_to_execute.Mode.TEST",
   "sonnet.nets.MLP",
   "tensorflow.Graph",
   "tensorflow.logging.info",
   "tensorflow.reduce_max",
   "tensorflow.train.AdamOptimizer",
   "tensorflow.train.SingularMonitoredSession",
   "tensorflow.train.exponential_decay",
   "tensorflow.train.get_or_create_global_step",
   "time.time"
  ],
  "type": "function"
 },
 "sonnet.examples.rmc_learn_to_execute.build_and_train.loss_fn": {
  "lineno": 152,
  "symbols_in_volume": [
   "tensorflow.argmax",
   "tensorflow.boolean_mask",
   "tensorflow.cast",
   "tensorflow.equal",
   "tensorflow.expand_dims",
   "tensorflow.float32",
   "tensorflow.int32",
   "tensorflow.less",
   "tensorflow.nn.softmax_cross_entropy_with_logits",
   "tensorflow.range",
   "tensorflow.reduce_all",
   "tensorflow.reduce_mean",
   "tensorflow.reduce_sum",
   "tensorflow.reshape",
   "tensorflow.squeeze",
   "tensorflow.tile",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "sonnet.examples.rmc_learn_to_execute.main": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.rmc_learn_to_execute_test": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.examples.rmc_learn_to_execute_test.RMCLearnTest": {
  "lineno": 27,
  "symbols_in_volume": [
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.examples.rmc_learn_to_execute_test.RMCLearnTest.setUp": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.rmc_learn_to_execute_test.RMCLearnTest.test_build_and_train": {
  "lineno": 56,
  "symbols_in_volume": [
   "sonnet.examples.rmc_learn_to_execute.build_and_train"
  ],
  "type": "function"
 },
 "sonnet.examples.rmc_learn_to_execute_test.RMCLearnTest.test_learn_to_execute_datset": {
  "lineno": 63,
  "symbols_in_volume": [
   "sonnet.examples.learn_to_execute.LearnToExecute"
  ],
  "type": "function"
 },
 "sonnet.examples.rmc_learn_to_execute_test.RMCLearnTest.test_object_sequence_model": {
  "lineno": 37,
  "symbols_in_volume": [
   "sonnet.RelationalMemory",
   "sonnet.examples.rmc_learn_to_execute.SequenceModel",
   "sonnet.nets.MLP",
   "tensorflow.ones",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.examples.rmc_nth_farthest": {
  "lineno": null,
  "symbols_in_volume": [
   "absl.flags.DEFINE_float",
   "absl.flags.DEFINE_integer",
   "absl.flags.DEFINE_string",
   "absl.flags.FLAGS",
   "tensorflow.app.run"
  ],
  "type": "module"
 },
 "sonnet.examples.rmc_nth_farthest.SequenceModel": {
  "lineno": 56,
  "symbols_in_volume": [
   "sonnet.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.examples.rmc_nth_farthest.SequenceModel.__init__": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.rmc_nth_farthest.SequenceModel._build": {
  "lineno": 70,
  "symbols_in_volume": [
   "sonnet.BatchFlatten",
   "sonnet.Linear",
   "tensorflow.nn.dynamic_rnn"
  ],
  "type": "function"
 },
 "sonnet.examples.rmc_nth_farthest.build_and_train": {
  "lineno": 93,
  "symbols_in_volume": [
   "six.moves.range",
   "sonnet.RelationalMemory",
   "sonnet.examples.dataset_nth_farthest.NthFarthest",
   "sonnet.nets.MLP",
   "tensorflow.Graph",
   "tensorflow.GraphKeys.GLOBAL_STEP",
   "tensorflow.GraphKeys.GLOBAL_VARIABLES",
   "tensorflow.cast",
   "tensorflow.get_variable",
   "tensorflow.int32",
   "tensorflow.int64",
   "tensorflow.logging.info",
   "tensorflow.reduce_max",
   "tensorflow.train.AdamOptimizer",
   "tensorflow.train.SingularMonitoredSession",
   "tensorflow.train.exponential_decay",
   "tensorflow.zeros_initializer",
   "time.time"
  ],
  "type": "function"
 },
 "sonnet.examples.rmc_nth_farthest.build_and_train.compute_accuracy": {
  "lineno": 137,
  "symbols_in_volume": [
   "tensorflow.argmax",
   "tensorflow.cast",
   "tensorflow.equal",
   "tensorflow.float32",
   "tensorflow.int64",
   "tensorflow.reduce_mean"
  ],
  "type": "function"
 },
 "sonnet.examples.rmc_nth_farthest.build_and_train.loss_fn": {
  "lineno": 144,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.int32",
   "tensorflow.nn.sparse_softmax_cross_entropy_with_logits",
   "tensorflow.reduce_mean"
  ],
  "type": "function"
 },
 "sonnet.examples.rmc_nth_farthest.main": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.rmc_nth_farthest_test": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.examples.rmc_nth_farthest_test.RMCNthFarthestTest": {
  "lineno": 27,
  "symbols_in_volume": [
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.examples.rmc_nth_farthest_test.RMCNthFarthestTest.setUp": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.rmc_nth_farthest_test.RMCNthFarthestTest.test_build_and_train": {
  "lineno": 49,
  "symbols_in_volume": [
   "sonnet.examples.rmc_nth_farthest.build_and_train"
  ],
  "type": "function"
 },
 "sonnet.examples.rmc_nth_farthest_test.RMCNthFarthestTest.test_nth_farthest_datset": {
  "lineno": 59,
  "symbols_in_volume": [
   "sonnet.examples.dataset_nth_farthest.NthFarthest"
  ],
  "type": "function"
 },
 "sonnet.examples.rmc_nth_farthest_test.RMCNthFarthestTest.test_object_sequence_model": {
  "lineno": 34,
  "symbols_in_volume": [
   "sonnet.RelationalMemory",
   "sonnet.examples.rmc_nth_farthest.SequenceModel",
   "sonnet.nets.MLP",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.examples.rnn_shakespeare": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.app.run",
   "tensorflow.flags.DEFINE_float",
   "tensorflow.flags.DEFINE_integer",
   "tensorflow.flags.DEFINE_string",
   "tensorflow.flags.FLAGS"
  ],
  "type": "module"
 },
 "sonnet.examples.rnn_shakespeare.TextModel": {
  "lineno": 226,
  "symbols_in_volume": [
   "sonnet.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.examples.rnn_shakespeare.TextModel.__init__": {
  "lineno": 229,
  "symbols_in_volume": [
   "sonnet.DeepRNN",
   "sonnet.LSTM",
   "sonnet.Linear",
   "sonnet.SkipConnectionCore",
   "tensorflow.TensorShape"
  ],
  "type": "function"
 },
 "sonnet.examples.rnn_shakespeare.TextModel._build": {
  "lineno": 280,
  "symbols_in_volume": [
   "sonnet.BatchApply",
   "tensorflow.contrib.rnn.static_rnn",
   "tensorflow.nn.dynamic_rnn",
   "tensorflow.nn.relu",
   "tensorflow.stack",
   "tensorflow.unstack"
  ],
  "type": "function"
 },
 "sonnet.examples.rnn_shakespeare.TextModel.generate_string": {
  "lineno": 322,
  "symbols_in_volume": [
   "sonnet.reuse_variables",
   "tensorflow.multinomial",
   "tensorflow.nn.relu",
   "tensorflow.one_hot",
   "tensorflow.squeeze",
   "tensorflow.stack"
  ],
  "type": "function"
 },
 "sonnet.examples.rnn_shakespeare._configure_saver": {
  "lineno": 55,
  "symbols_in_volume": [
   "tensorflow.train.CheckpointSaverHook",
   "tensorflow.train.Saver"
  ],
  "type": "function"
 },
 "sonnet.examples.rnn_shakespeare.build_graph": {
  "lineno": 64,
  "symbols_in_volume": [
   "sonnet.examples.dataset_shakespeare.TinyShakespeareDataset",
   "tensorflow.GraphKeys.GLOBAL_STEP",
   "tensorflow.GraphKeys.GLOBAL_VARIABLES",
   "tensorflow.clip_by_global_norm",
   "tensorflow.constant_initializer",
   "tensorflow.float32",
   "tensorflow.get_variable",
   "tensorflow.gradients",
   "tensorflow.int64",
   "tensorflow.train.AdamOptimizer",
   "tensorflow.trainable_variables",
   "tensorflow.zeros_initializer"
  ],
  "type": "function"
 },
 "sonnet.examples.rnn_shakespeare.main": {
  "lineno": 357,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.examples.rnn_shakespeare.train": {
  "lineno": 171,
  "symbols_in_volume": [
   "tensorflow.logging.info",
   "tensorflow.train.SingularMonitoredSession"
  ],
  "type": "function"
 },
 "sonnet.examples.rnn_shakespeare_test": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.examples.rnn_shakespeare_test.TinyShakespeareTest": {
  "lineno": 28,
  "symbols_in_volume": [
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.examples.rnn_shakespeare_test.TinyShakespeareTest.testRun": {
  "lineno": 30,
  "symbols_in_volume": [
   "sonnet.examples.rnn_shakespeare.train"
  ],
  "type": "function"
 },
 "sonnet.protos": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.protos.module_pb2": {
  "lineno": null,
  "symbols_in_volume": [
   "google.protobuf.descriptor.Descriptor",
   "google.protobuf.descriptor.FieldDescriptor",
   "google.protobuf.descriptor.FileDescriptor",
   "google.protobuf.descriptor.OneofDescriptor",
   "google.protobuf.message.Message",
   "google.protobuf.reflection.GeneratedProtocolMessageType",
   "google.protobuf.symbol_database.Default",
   "sys.version_info"
  ],
  "type": "module"
 },
 "sonnet.python": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.python.custom_getters": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.python.custom_getters.bayes_by_backprop": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "tensorflow.bfloat16",
   "tensorflow.float16",
   "tensorflow.float32",
   "tensorflow.float64",
   "tensorflow.nn.softplus",
   "tensorflow_probability.distributions.FULLY_REPARAMETERIZED"
  ],
  "type": "module"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.EstimatorModes": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.custom_getters.bayes_by_backprop._WeakRegistry": {
  "lineno": 101,
  "symbols_in_volume": [
   "weakref.WeakKeyDictionary"
  ],
  "type": "class"
 },
 "sonnet.python.custom_getters.bayes_by_backprop._WeakRegistry.__getitem__": {
  "lineno": 103,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "weakref.WeakKeyDictionary.__getitem__"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop._produce_posterior_estimate": {
  "lineno": 455,
  "symbols_in_volume": [
   "tensorflow.case",
   "tensorflow.constant",
   "tensorflow.equal"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop._produce_posterior_estimate.default_case_branch_raising_error": {
  "lineno": 489,
  "symbols_in_volume": [
   "tensorflow.Assert",
   "tensorflow.constant",
   "tensorflow.control_dependencies"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.adaptive_gaussian_prior_builder": {
  "lineno": 218,
  "symbols_in_volume": [
   "tensorflow.nn.softplus",
   "tensorflow_probability.distributions.Normal"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.analytic_kl_builder": {
  "lineno": 257,
  "symbols_in_volume": [
   "tensorflow.reduce_sum",
   "tensorflow_probability.distributions.kl_divergence"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.bayes_by_backprop_getter": {
  "lineno": 263,
  "symbols_in_volume": [
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.bayes_by_backprop_getter.custom_getter": {
  "lineno": 366,
  "symbols_in_volume": [
   "tensorflow.control_dependencies",
   "tensorflow.get_default_graph",
   "tensorflow.get_variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.bayes_by_backprop_getter.custom_getter.construct_subgraph": {
  "lineno": 391,
  "symbols_in_volume": [
   "collections.Sequence"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.diagonal_gaussian_posterior_builder": {
  "lineno": 148,
  "symbols_in_volume": [
   "tensorflow.nn.softplus",
   "tensorflow_probability.distributions.Normal",
   "tensorflow_probability.distributions.Normal.param_static_shapes"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.fixed_gaussian_prior_builder": {
  "lineno": 188,
  "symbols_in_volume": [
   "tensorflow.constant",
   "tensorflow_probability.distributions.Normal"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.get_total_kl_cost": {
  "lineno": 508,
  "symbols_in_volume": [
   "tensorflow.add_n",
   "tensorflow.constant",
   "tensorflow.logging.warning"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.get_variable_metadata": {
  "lineno": 530,
  "symbols_in_volume": [
   "tensorflow.get_default_graph"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.inverse_softplus": {
  "lineno": 114,
  "symbols_in_volume": [
   "math.exp",
   "math.log"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.scale_variable_initializer": {
  "lineno": 129,
  "symbols_in_volume": [
   "tensorflow.constant_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop.stochastic_kl_builder": {
  "lineno": 250,
  "symbols_in_volume": [
   "tensorflow.reduce_sum",
   "tensorflow.subtract"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest": {
  "lineno": 75,
  "symbols_in_volume": [
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.testFreshNoisePerConnection": {
  "lineno": 386,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "sonnet.Linear",
   "tensorflow.global_variables_initializer",
   "tensorflow.ones",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.testFreshNoisePerConnection.create_custom_getter": {
  "lineno": 388,
  "symbols_in_volume": [
   "sonnet.python.custom_getters.bayes_by_backprop.EstimatorModes.sample",
   "sonnet.python.custom_getters.bayes_by_backprop.bayes_by_backprop_getter",
   "sonnet.python.custom_getters.bayes_by_backprop.diagonal_gaussian_posterior_builder",
   "sonnet.python.custom_getters.bayes_by_backprop.fixed_gaussian_prior_builder",
   "sonnet.python.custom_getters.bayes_by_backprop.stochastic_kl_builder",
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.testLastSampleMode": {
  "lineno": 265,
  "symbols_in_volume": [
   "numpy.random.normal",
   "sonnet.Linear",
   "sonnet.python.custom_getters.bayes_by_backprop.EstimatorModes.last_sample",
   "sonnet.python.custom_getters.bayes_by_backprop.EstimatorModes.sample",
   "sonnet.python.custom_getters.bayes_by_backprop.adaptive_gaussian_prior_builder",
   "sonnet.python.custom_getters.bayes_by_backprop.bayes_by_backprop_getter",
   "sonnet.python.custom_getters.bayes_by_backprop.stochastic_kl_builder",
   "tensorflow.assign",
   "tensorflow.constant",
   "tensorflow.constant_initializer",
   "tensorflow.float32",
   "tensorflow.get_variable",
   "tensorflow.global_variables_initializer",
   "tensorflow.placeholder",
   "tensorflow.string",
   "tensorflow.trainable_variables",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.testLastSampleMode.CustomNormal": {
  "lineno": 268,
  "symbols_in_volume": [
   "tensorflow_probability.distributions.Normal"
  ],
  "type": "class"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.testLastSampleMode.CustomNormal.__init__": {
  "lineno": 271,
  "symbols_in_volume": [
   "tensorflow.get_variable",
   "tensorflow.random_normal_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.testLastSampleMode.CustomNormal.last_sample": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.testLastSampleMode.CustomNormal.sample": {
  "lineno": 280,
  "symbols_in_volume": [
   "tensorflow.random_normal"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.testRecurrentNetSamplesWeightsOnce": {
  "lineno": 332,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "sonnet.python.custom_getters.bayes_by_backprop.EstimatorModes.sample",
   "sonnet.python.custom_getters.bayes_by_backprop.bayes_by_backprop_getter",
   "sonnet.python.custom_getters.bayes_by_backprop.diagonal_gaussian_posterior_builder",
   "sonnet.python.custom_getters.bayes_by_backprop.fixed_gaussian_prior_builder",
   "sonnet.python.custom_getters.bayes_by_backprop.stochastic_kl_builder",
   "tensorflow.constant",
   "tensorflow.global_variables_initializer",
   "tensorflow.nn.dynamic_rnn",
   "tensorflow.ones",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.testRecurrentNetSamplesWeightsOnce.NoStateLSTM": {
  "lineno": 350,
  "symbols_in_volume": [
   "sonnet.LSTM"
  ],
  "type": "class"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.testRecurrentNetSamplesWeightsOnce.NoStateLSTM._build": {
  "lineno": 353,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.testWeightsResampledWithKeepControlDeps": {
  "lineno": 431,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "sonnet.python.custom_getters.bayes_by_backprop.EstimatorModes.sample",
   "sonnet.python.custom_getters.bayes_by_backprop.bayes_by_backprop_getter",
   "sonnet.python.custom_getters.bayes_by_backprop.diagonal_gaussian_posterior_builder",
   "sonnet.python.custom_getters.bayes_by_backprop.fixed_gaussian_prior_builder",
   "sonnet.python.custom_getters.bayes_by_backprop.stochastic_kl_builder",
   "tensorflow.constant",
   "tensorflow.global_variables_initializer",
   "tensorflow.nn.dynamic_rnn",
   "tensorflow.ones",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.testWeightsResampledWithKeepControlDeps.NoStateLSTM": {
  "lineno": 452,
  "symbols_in_volume": [
   "sonnet.LSTM"
  ],
  "type": "class"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.testWeightsResampledWithKeepControlDeps.NoStateLSTM._build": {
  "lineno": 455,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.test_mean_mode_is_deterministic_and_correct": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.zeros",
   "sonnet.python.custom_getters.bayes_by_backprop.EstimatorModes.mean",
   "sonnet.python.custom_getters.bayes_by_backprop.bayes_by_backprop_getter",
   "sonnet.python.custom_getters.bayes_by_backprop.fixed_gaussian_prior_builder",
   "sonnet.python.custom_getters.bayes_by_backprop.get_variable_metadata",
   "tensorflow.constant",
   "tensorflow.float32",
   "tensorflow.get_variable",
   "tensorflow.global_variables_initializer",
   "tensorflow.group",
   "tensorflow.local_variables_initializer",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.test_sample_mode_is_stochastic_and_can_be_switched": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.sqrt",
   "numpy.square",
   "numpy.sum",
   "numpy.zeros",
   "sonnet.python.custom_getters.bayes_by_backprop.EstimatorModes.mean",
   "sonnet.python.custom_getters.bayes_by_backprop.EstimatorModes.sample",
   "sonnet.python.custom_getters.bayes_by_backprop.bayes_by_backprop_getter",
   "sonnet.python.custom_getters.bayes_by_backprop.fixed_gaussian_prior_builder",
   "sonnet.python.custom_getters.bayes_by_backprop.get_variable_metadata",
   "tensorflow.assign",
   "tensorflow.constant",
   "tensorflow.constant_initializer",
   "tensorflow.float32",
   "tensorflow.get_variable",
   "tensorflow.global_variables_initializer",
   "tensorflow.group",
   "tensorflow.local_variables_initializer",
   "tensorflow.string",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.BBBTest.test_variable_sharing": {
  "lineno": 182,
  "symbols_in_volume": [
   "numpy.random.normal",
   "six.moves.xrange",
   "sonnet.nets.MLP",
   "sonnet.python.custom_getters.bayes_by_backprop.EstimatorModes.mean",
   "sonnet.python.custom_getters.bayes_by_backprop.EstimatorModes.sample",
   "sonnet.python.custom_getters.bayes_by_backprop.bayes_by_backprop_getter",
   "sonnet.python.custom_getters.bayes_by_backprop.diagonal_gaussian_posterior_builder",
   "sonnet.python.custom_getters.bayes_by_backprop.fixed_gaussian_prior_builder",
   "sonnet.python.custom_getters.bayes_by_backprop.get_total_kl_cost",
   "sonnet.python.custom_getters.bayes_by_backprop.stochastic_kl_builder",
   "tensorflow.assign",
   "tensorflow.constant",
   "tensorflow.constant_initializer",
   "tensorflow.float32",
   "tensorflow.get_variable",
   "tensorflow.get_variable_scope",
   "tensorflow.global_variables_initializer",
   "tensorflow.placeholder",
   "tensorflow.reduce_mean",
   "tensorflow.reduce_sum",
   "tensorflow.square",
   "tensorflow.string",
   "tensorflow.train.GradientDescentOptimizer",
   "tensorflow.trainable_variables"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.softplus": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.test_diag_gaussian_builder_builder": {
  "lineno": 34,
  "symbols_in_volume": [
   "tensorflow_probability.distributions.Normal"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.test_diag_gaussian_builder_builder.diagonal_gaussian_posterior_builder": {
  "lineno": 38,
  "symbols_in_volume": [
   "tensorflow.constant_initializer",
   "tensorflow.nn.softplus"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.bayes_by_backprop_test.uniform_builder": {
  "lineno": 63,
  "symbols_in_volume": [
   "tensorflow_probability.distributions.Uniform",
   "tensorflow_probability.distributions.Uniform.param_static_shapes"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.context": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.python.custom_getters.context.Context": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.custom_getters.context.Context.__call__": {
  "lineno": 65,
  "symbols_in_volume": [
   "tensorflow.logging.info"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.context.Context.__enter__": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.custom_getters.context.Context.__exit__": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.custom_getters.context.Context.__init__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.custom_getters.context_test": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.custom_getters.context_test.ContextTest": {
  "lineno": 34,
  "symbols_in_volume": [
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.custom_getters.context_test.ContextTest.testContextCallsCustomGetterOnlyWhenInScope": {
  "lineno": 36,
  "symbols_in_volume": [
   "sonnet.Linear",
   "sonnet.custom_getters.Context",
   "tensorflow.float32",
   "tensorflow.placeholder",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.context_test.ContextTest.testNestedContextCallsCustomGetterOnlyWhenInScope": {
  "lineno": 51,
  "symbols_in_volume": [
   "sonnet.Linear",
   "sonnet.custom_getters.Context",
   "tensorflow.float32",
   "tensorflow.placeholder",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.context_test.ContextTest.testTwoContextsOperateIndependently": {
  "lineno": 68,
  "symbols_in_volume": [
   "sonnet.Linear",
   "sonnet.custom_getters.Context",
   "tensorflow.float32",
   "tensorflow.placeholder",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.context_test._suffix_getter": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.custom_getters.non_trainable": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.python.custom_getters.non_trainable.non_trainable": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.custom_getters.non_trainable_test": {
  "lineno": null,
  "symbols_in_volume": [
   "sonnet.VALID",
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.custom_getters.non_trainable_test.NonTrainableTest": {
  "lineno": 41,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.custom_getters.non_trainable_test.NonTrainableTest.testComplex": {
  "lineno": 65,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.custom_getters.non_trainable",
   "sonnet.nets.ConvNet2D",
   "sonnet.nets.MLP",
   "tensorflow.float32",
   "tensorflow.global_variables",
   "tensorflow.placeholder",
   "tensorflow.trainable_variables",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.non_trainable_test.NonTrainableTest.testNest": {
  "lineno": 53,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.custom_getters.non_trainable",
   "tensorflow.float32",
   "tensorflow.get_variable",
   "tensorflow.global_variables",
   "tensorflow.trainable_variables",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.non_trainable_test.NonTrainableTest.testUsage": {
  "lineno": 43,
  "symbols_in_volume": [
   "sonnet.Linear",
   "sonnet.custom_getters.non_trainable",
   "tensorflow.float32",
   "tensorflow.global_variables",
   "tensorflow.placeholder",
   "tensorflow.trainable_variables",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.non_trainable_test._identity_getter": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.custom_getters.override_args": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.python.custom_getters.override_args.override_args": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.custom_getters.override_args.override_args.custom_getter": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.custom_getters.override_args.override_default_args": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.custom_getters.override_args.override_default_args.custom_getter": {
  "lineno": 72,
  "symbols_in_volume": [
   "six.iteritems"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.override_args_test": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.custom_getters.override_args_test.OverrideArgsTest": {
  "lineno": 31,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.custom_getters.override_args_test.OverrideArgsTest.testExplicitArgNotOverridden": {
  "lineno": 111,
  "symbols_in_volume": [
   "sonnet.custom_getters.override_default_args",
   "tensorflow.GraphKeys.GLOBAL_VARIABLES",
   "tensorflow.GraphKeys.LOCAL_VARIABLES",
   "tensorflow.get_variable",
   "tensorflow.global_variables",
   "tensorflow.local_variables",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.override_args_test.OverrideArgsTest.testExplicitArgOverridden": {
  "lineno": 99,
  "symbols_in_volume": [
   "sonnet.custom_getters.override_args",
   "tensorflow.GraphKeys.GLOBAL_VARIABLES",
   "tensorflow.GraphKeys.LOCAL_VARIABLES",
   "tensorflow.get_variable",
   "tensorflow.global_variables",
   "tensorflow.local_variables",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.override_args_test.OverrideArgsTest.testNestedWithin": {
  "lineno": 57,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.Linear",
   "sonnet.custom_getters.override_args",
   "sonnet.custom_getters.override_default_args",
   "tensorflow.GraphKeys.LOCAL_VARIABLES",
   "tensorflow.float32",
   "tensorflow.global_variables",
   "tensorflow.local_variables",
   "tensorflow.placeholder",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.override_args_test.OverrideArgsTest.testUsage": {
  "lineno": 33,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.Linear",
   "sonnet.custom_getters.override_args",
   "sonnet.custom_getters.override_default_args",
   "tensorflow.GraphKeys.LOCAL_VARIABLES",
   "tensorflow.float32",
   "tensorflow.global_variables",
   "tensorflow.local_variables",
   "tensorflow.placeholder",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.override_args_test.OverrideArgsTest.testWithNested": {
  "lineno": 78,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.Linear",
   "sonnet.custom_getters.override_args",
   "sonnet.custom_getters.override_default_args",
   "tensorflow.GraphKeys.LOCAL_VARIABLES",
   "tensorflow.float32",
   "tensorflow.global_variables",
   "tensorflow.local_variables",
   "tensorflow.placeholder",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.override_args_test._suffix_custom_getter": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.custom_getters.restore_initializer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.python.custom_getters.restore_initializer.restore_initializer": {
  "lineno": 26,
  "symbols_in_volume": [
   "tensorflow.GraphKeys.GLOBAL_VARIABLES"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.restore_initializer.restore_initializer._restore_initializer": {
  "lineno": 44,
  "symbols_in_volume": [
   "sonnet.restore_initializer",
   "tensorflow.GraphKeys.GLOBAL_VARIABLES",
   "tensorflow.GraphKeys.TRAINABLE_VARIABLES",
   "tensorflow.logging.info"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.restore_initializer_test": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.custom_getters.restore_initializer_test.RestoreInitializerTest": {
  "lineno": 29,
  "symbols_in_volume": [
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.custom_getters.restore_initializer_test.RestoreInitializerTest._save_test_checkpoint": {
  "lineno": 31,
  "symbols_in_volume": [
   "os.path.join",
   "sonnet.Linear",
   "tensorflow.Graph",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.placeholder",
   "tensorflow.test.get_temp_dir",
   "tensorflow.train.Saver"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.restore_initializer_test.RestoreInitializerTest.testCollections": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.allclose",
   "sonnet.Linear",
   "sonnet.custom_getters.restore_initializer",
   "tensorflow.Graph",
   "tensorflow.add_to_collection",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.placeholder",
   "tensorflow.train.latest_checkpoint",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.restore_initializer_test.RestoreInitializerTest.testNameFn": {
  "lineno": 77,
  "symbols_in_volume": [
   "sonnet.Linear",
   "sonnet.custom_getters.restore_initializer",
   "tensorflow.Graph",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.placeholder",
   "tensorflow.train.latest_checkpoint",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.restore_initializer_test.RestoreInitializerTest.testNameFn.name_fn": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.custom_getters.restore_initializer_test.RestoreInitializerTest.testSimpleUsage": {
  "lineno": 54,
  "symbols_in_volume": [
   "sonnet.Linear",
   "sonnet.custom_getters.restore_initializer",
   "tensorflow.Graph",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.placeholder",
   "tensorflow.train.latest_checkpoint",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.stop_gradient": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.python.custom_getters.stop_gradient.stop_gradient": {
  "lineno": 24,
  "symbols_in_volume": [
   "tensorflow.stop_gradient"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.stop_gradient_test": {
  "lineno": null,
  "symbols_in_volume": [
   "sonnet.VALID",
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.custom_getters.stop_gradient_test.StopGradientTest": {
  "lineno": 41,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.custom_getters.stop_gradient_test.StopGradientTest.testComplex": {
  "lineno": 78,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.custom_getters.stop_gradient",
   "sonnet.nets.ConvNet2D",
   "sonnet.nets.MLP",
   "tensorflow.float32",
   "tensorflow.global_variables",
   "tensorflow.gradients",
   "tensorflow.placeholder",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.stop_gradient_test.StopGradientTest.testNest": {
  "lineno": 65,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.custom_getters.stop_gradient",
   "tensorflow.float32",
   "tensorflow.get_variable",
   "tensorflow.global_variables",
   "tensorflow.gradients",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.stop_gradient_test.StopGradientTest.testUsage": {
  "lineno": 43,
  "symbols_in_volume": [
   "sonnet.Linear",
   "sonnet.custom_getters.stop_gradient",
   "tensorflow.float32",
   "tensorflow.gradients",
   "tensorflow.placeholder",
   "tensorflow.trainable_variables",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.custom_getters.stop_gradient_test._identity_getter": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.python.modules.attention": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "sonnet.python.modules.attention.AttentiveRead": {
  "lineno": 37,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.attention.AttentiveRead.__init__": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.attention.AttentiveRead._build": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.finfo",
   "numpy.float32",
   "sonnet.python.modules.base.IncompatibleShapeError",
   "sonnet.python.modules.base.UnderspecifiedError",
   "sonnet.python.modules.basic.BatchApply",
   "tensorflow.assert_equal",
   "tensorflow.assert_positive",
   "tensorflow.cast",
   "tensorflow.concat",
   "tensorflow.control_dependencies",
   "tensorflow.expand_dims",
   "tensorflow.float32",
   "tensorflow.int32",
   "tensorflow.logical_not",
   "tensorflow.minimum",
   "tensorflow.nn.softmax",
   "tensorflow.reduce_sum",
   "tensorflow.reshape",
   "tensorflow.shape",
   "tensorflow.squeeze",
   "tensorflow.tile"
  ],
  "type": "function"
 },
 "sonnet.python.modules.attention_test": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest": {
  "lineno": 60,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest.setUp": {
  "lineno": 62,
  "symbols_in_volume": [
   "sonnet.AttentiveRead",
   "tensorflow.bool",
   "tensorflow.cast",
   "tensorflow.convert_to_tensor",
   "tensorflow.float32",
   "tensorflow.range",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest.testAttentionLogitsModuleShape": {
  "lineno": 174,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.AttentiveRead",
   "sonnet.IncompatibleShapeError"
  ],
  "type": "function"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest.testAttentionWeightLogitsShape": {
  "lineno": 233,
  "symbols_in_volume": [
   "tensorflow.float32"
  ],
  "type": "function"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest.testComputation": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest.testInvalidBatchSize": {
  "lineno": 198,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.zeros",
   "tensorflow.errors.InvalidArgumentError",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest.testMemoryMask": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest.testMemoryMaskShape": {
  "lineno": 167,
  "symbols_in_volume": [
   "sonnet.IncompatibleShapeError",
   "tensorflow.bool",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest.testMemoryMaskWithNonuniformLogits": {
  "lineno": 110,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.exp",
   "numpy.matmul",
   "numpy.newaxis",
   "numpy.random.randn",
   "numpy.sum",
   "numpy.zeros",
   "sonnet.AttentiveRead",
   "tensorflow.constant",
   "tensorflow.float32"
  ],
  "type": "function"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest.testMemoryShape": {
  "lineno": 153,
  "symbols_in_volume": [
   "sonnet.IncompatibleShapeError",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest.testNoMemorySlotsLeft": {
  "lineno": 181,
  "symbols_in_volume": [
   "tensorflow.bool",
   "tensorflow.convert_to_tensor",
   "tensorflow.errors.InvalidArgumentError"
  ],
  "type": "function"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest.testQueryShape": {
  "lineno": 160,
  "symbols_in_volume": [
   "sonnet.IncompatibleShapeError",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest.testShape": {
  "lineno": 83,
  "symbols_in_volume": [
   "tensorflow.float32"
  ],
  "type": "function"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest.testUndefinedWordSizes": {
  "lineno": 141,
  "symbols_in_volume": [
   "sonnet.UnderspecifiedError",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest.testWeightsIsSoftmaxOfLogits": {
  "lineno": 240,
  "symbols_in_volume": [
   "tensorflow.nn.softmax"
  ],
  "type": "function"
 },
 "sonnet.python.modules.attention_test.AttentiveReadTest.testWorksWithCommonModules": {
  "lineno": 212,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.AttentiveRead",
   "sonnet.Linear",
   "sonnet.nets.MLP",
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.attention_test.ConstantZero": {
  "lineno": 28,
  "symbols_in_volume": [
   "sonnet.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.attention_test.ConstantZero.__init__": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.attention_test.ConstantZero._build": {
  "lineno": 42,
  "symbols_in_volume": [
   "tensorflow.shape",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base": {
  "lineno": null,
  "symbols_in_volume": [
   "threading.local"
  ],
  "type": "module"
 },
 "sonnet.python.modules.base.AbstractModule": {
  "lineno": 104,
  "symbols_in_volume": [
   "abc.ABCMeta",
   "six.add_metaclass"
  ],
  "type": "class"
 },
 "sonnet.python.modules.base.AbstractModule.__call__": {
  "lineno": 395,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.__getstate__": {
  "lineno": 697,
  "symbols_in_volume": [
   "sonnet.python.modules.base_errors.NotSupportedError"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.__init__": {
  "lineno": 124,
  "symbols_in_volume": [
   "collections.Mapping",
   "six.string_types",
   "sonnet.python.modules.util.custom_getter_router",
   "sonnet.python.modules.util.to_snake_case",
   "tensorflow.make_template",
   "types.MethodType"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.__init__.__call__": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.__init__.copy_signature": {
  "lineno": 187,
  "symbols_in_volume": [
   "wrapt.decorator"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule._add_connected_subgraph": {
  "lineno": 354,
  "symbols_in_volume": [
   "inspect.getcallargs",
   "sonnet.python.modules.base_info.ConnectedSubGraph"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule._build": {
  "lineno": 292,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule._build_wrapper": {
  "lineno": 212,
  "symbols_in_volume": [
   "tensorflow.name_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule._call": {
  "lineno": 398,
  "symbols_in_volume": [
   "tensorflow.executing_eagerly"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule._capture_variables": {
  "lineno": 306,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "contextlib2.ExitStack",
   "sonnet.python.modules.util.notify_about_new_variables"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule._check_init_called": {
  "lineno": 238,
  "symbols_in_volume": [
   "sonnet.python.modules.base_errors.NotInitializedError"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule._check_same_graph": {
  "lineno": 262,
  "symbols_in_volume": [
   "sonnet.python.modules.base_errors.DifferentGraphError",
   "tensorflow.executing_eagerly",
   "tensorflow.get_default_graph",
   "tensorflow.init_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule._ensure_is_connected": {
  "lineno": 516,
  "symbols_in_volume": [
   "sonnet.python.modules.base_errors.NotConnectedError"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule._enter_variable_scope": {
  "lineno": 533,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule._maybe_log": {
  "lineno": 703,
  "symbols_in_volume": [
   "tensorflow.logging.info"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule._set_module_info": {
  "lineno": 251,
  "symbols_in_volume": [
   "sonnet.python.modules.base_info.ModuleInfo",
   "sonnet.python.modules.base_info.SONNET_COLLECTION_NAME"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.connected_subgraphs": {
  "lineno": 477,
  "symbols_in_volume": [
   "sonnet.python.modules.base_errors.NotSupportedError",
   "tensorflow.executing_eagerly"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.defun": {
  "lineno": 389,
  "symbols_in_volume": [
   "tensorflow.contrib.eager.defun"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.defun_wrapped": {
  "lineno": 384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.get_all_variables": {
  "lineno": 675,
  "symbols_in_volume": [
   "sonnet.python.modules.util.sort_by_name",
   "tensorflow.GraphKeys.TRAINABLE_VARIABLES",
   "tensorflow.get_collection"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.get_possible_initializer_keys": {
  "lineno": 501,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.get_variables": {
  "lineno": 638,
  "symbols_in_volume": [
   "sonnet.python.modules.base_errors.NotSupportedError",
   "sonnet.python.modules.util.get_variables_in_scope",
   "tensorflow.GraphKeys.TRAINABLE_VARIABLES",
   "tensorflow.executing_eagerly"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.graph": {
  "lineno": 472,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.is_connected": {
  "lineno": 467,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.last_connected_subgraph": {
  "lineno": 485,
  "symbols_in_volume": [
   "sonnet.python.modules.base_errors.NotSupportedError",
   "tensorflow.executing_eagerly"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.module_name": {
  "lineno": 462,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.name_scopes": {
  "lineno": 428,
  "symbols_in_volume": [
   "sonnet.python.modules.base_errors.NotSupportedError",
   "tensorflow.executing_eagerly"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.non_trainable_variables": {
  "lineno": 620,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.scope_name": {
  "lineno": 457,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.trainable_variables": {
  "lineno": 602,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.variable_scope": {
  "lineno": 436,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base.AbstractModule.variables": {
  "lineno": 583,
  "symbols_in_volume": [
   "sonnet.python.modules.util.sort_by_name"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base.Module": {
  "lineno": 759,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.base.Module.__init__": {
  "lineno": 762,
  "symbols_in_volume": [
   "sonnet.python.modules.util.name_for_callable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base.Module._build": {
  "lineno": 829,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base.Transposable": {
  "lineno": 713,
  "symbols_in_volume": [
   "abc.ABCMeta",
   "six.add_metaclass"
  ],
  "type": "class"
 },
 "sonnet.python.modules.base.Transposable.input_shape": {
  "lineno": 754,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base.Transposable.transpose": {
  "lineno": 742,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base._get_or_create_stack": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base.observe_connections": {
  "lineno": 72,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_errors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.python.modules.base_errors.DifferentGraphError": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.base_errors.Error": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.base_errors.IncompatibleShapeError": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.base_errors.ModuleInfoError": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.base_errors.NotConnectedError": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.base_errors.NotInitializedError": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.base_errors.NotSupportedError": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.base_errors.ParentNotBuiltError": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.base_errors.UnderspecifiedError": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.base_info": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "collections.namedtuple",
   "sonnet.protos.module_pb2.SonnetModule",
   "tensorflow.SparseTensor",
   "tensorflow.logging",
   "tensorflow.python.framework.ops.register_proto_function"
  ],
  "type": "module"
 },
 "sonnet.python.modules.base_info._UnserializableObject": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.base_info._from_proto_sparse_tensor": {
  "lineno": 119,
  "symbols_in_volume": [
   "sonnet.python.modules.base_errors.ModuleInfoError",
   "tensorflow.SparseTensor"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_info._graph_element_to_path": {
  "lineno": 66,
  "symbols_in_volume": [
   "tensorflow.Tensor"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_info._is_iterable": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base_info._is_namedtuple": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base_info._module_info_from_proto": {
  "lineno": 310,
  "symbols_in_volume": [
   "tensorflow.get_default_graph"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_info._module_info_from_proto.prepend_name_scope": {
  "lineno": 325,
  "symbols_in_volume": [
   "tensorflow.python.framework.ops.prepend_name_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_info._module_info_from_proto.process_leafs": {
  "lineno": 327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base_info._module_info_from_proto_safe": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base_info._module_info_to_proto": {
  "lineno": 226,
  "symbols_in_volume": [
   "sonnet.protos.module_pb2.SonnetModule"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_info._module_info_to_proto.process_leafs": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base_info._module_info_to_proto.strip_name_scope": {
  "lineno": 236,
  "symbols_in_volume": [
   "tensorflow.python.framework.ops.strip_name_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_info._nested_from_proto": {
  "lineno": 259,
  "symbols_in_volume": [
   "collections.namedtuple",
   "six.iteritems",
   "sonnet.protos.module_pb2.NestedData",
   "sonnet.python.modules.base_errors.ModuleInfoError"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_info._nested_to_proto": {
  "lineno": 160,
  "symbols_in_volume": [
   "six.iteritems",
   "sonnet.protos.module_pb2.NestedData",
   "sonnet.python.modules.base_errors.ModuleInfoError"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_info._path_to_graph_element": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base_info._to_proto_sparse_tensor": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base_info_test": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "tensorflow.contrib.framework.nest",
   "tensorflow.logging",
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.modules.base_info_test.DumbModule": {
  "lineno": 43,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.base_info_test.DumbModule.__init__": {
  "lineno": 46,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule.__init__"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.DumbModule._build": {
  "lineno": 50,
  "symbols_in_volume": [
   "tensorflow.SparseTensor",
   "tensorflow.identity"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest": {
  "lineno": 70,
  "symbols_in_volume": [
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testIsIterable": {
  "lineno": 78,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "sonnet.python.modules.base_info._is_iterable",
   "tensorflow.SparseTensor",
   "tensorflow.float32",
   "tensorflow.int64",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testIsIterable.generator": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testIsNamedTuple": {
  "lineno": 72,
  "symbols_in_volume": [
   "sonnet.python.modules.base_info._is_namedtuple"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_dict": {
  "lineno": 238,
  "symbols_in_volume": [
   "tensorflow.float32",
   "tensorflow.placeholder",
   "tensorflow.reset_default_graph"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_dict.check": {
  "lineno": 245,
  "symbols_in_volume": [
   "sonnet.python.modules.base_info.SONNET_COLLECTION_NAME",
   "tensorflow.get_default_graph"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_multiple_modules": {
  "lineno": 101,
  "symbols_in_volume": [
   "sonnet.python.modules.basic.Linear",
   "tensorflow.float32",
   "tensorflow.name_scope",
   "tensorflow.placeholder",
   "tensorflow.reset_default_graph"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_multiple_modules.check": {
  "lineno": 112,
  "symbols_in_volume": [
   "sonnet.python.modules.base_info.SONNET_COLLECTION_NAME",
   "tensorflow.get_default_graph"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_multiple_subgraph": {
  "lineno": 146,
  "symbols_in_volume": [
   "tensorflow.float32",
   "tensorflow.name_scope",
   "tensorflow.placeholder",
   "tensorflow.reset_default_graph"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_multiple_subgraph.check": {
  "lineno": 154,
  "symbols_in_volume": [
   "sonnet.python.modules.base_info.SONNET_COLLECTION_NAME",
   "tensorflow.get_default_graph"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_namedtuple": {
  "lineno": 220,
  "symbols_in_volume": [
   "tensorflow.float32",
   "tensorflow.placeholder",
   "tensorflow.reset_default_graph"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_namedtuple.check": {
  "lineno": 227,
  "symbols_in_volume": [
   "sonnet.python.modules.base_info.SONNET_COLLECTION_NAME",
   "sonnet.python.modules.base_info._is_namedtuple",
   "tensorflow.get_default_graph"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_not_a_tensor": {
  "lineno": 255,
  "symbols_in_volume": [
   "sonnet.python.modules.base_info._UnserializableObject",
   "tensorflow.reset_default_graph"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_not_a_tensor.check": {
  "lineno": 260,
  "symbols_in_volume": [
   "sonnet.python.modules.base_info.SONNET_COLLECTION_NAME",
   "tensorflow.get_default_graph"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_recursion": {
  "lineno": 270,
  "symbols_in_volume": [
   "sonnet.python.modules.base_info._UnserializableObject",
   "tensorflow.float32",
   "tensorflow.placeholder",
   "tensorflow.reset_default_graph"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_recursion.check": {
  "lineno": 278,
  "symbols_in_volume": [
   "sonnet.python.modules.base_info.SONNET_COLLECTION_NAME",
   "tensorflow.Tensor",
   "tensorflow.get_default_graph"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_sparsetensor": {
  "lineno": 183,
  "symbols_in_volume": [
   "tensorflow.SparseTensor",
   "tensorflow.float32",
   "tensorflow.int64",
   "tensorflow.placeholder",
   "tensorflow.reset_default_graph"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_sparsetensor.check": {
  "lineno": 192,
  "symbols_in_volume": [
   "sonnet.python.modules.base_info.SONNET_COLLECTION_NAME",
   "tensorflow.SparseTensor",
   "tensorflow.get_default_graph"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_tensor": {
  "lineno": 167,
  "symbols_in_volume": [
   "tensorflow.float32",
   "tensorflow.placeholder",
   "tensorflow.reset_default_graph"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_tensor.check": {
  "lineno": 173,
  "symbols_in_volume": [
   "sonnet.python.modules.base_info.SONNET_COLLECTION_NAME",
   "tensorflow.Tensor",
   "tensorflow.get_default_graph"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_tuple": {
  "lineno": 203,
  "symbols_in_volume": [
   "tensorflow.float32",
   "tensorflow.placeholder",
   "tensorflow.reset_default_graph"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.ModuleInfoTest.testModuleInfo_tuple.check": {
  "lineno": 210,
  "symbols_in_volume": [
   "sonnet.python.modules.base_info.SONNET_COLLECTION_NAME",
   "tensorflow.get_default_graph"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_info_test.NotATensor": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.base_info_test._copy_default_graph": {
  "lineno": 61,
  "symbols_in_volume": [
   "tensorflow.reset_default_graph",
   "tensorflow.train.export_meta_graph",
   "tensorflow.train.import_meta_graph"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.contrib.eager",
   "tensorflow.logging",
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest": {
  "lineno": 135,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testCallSignatureAndDocstring": {
  "lineno": 533,
  "symbols_in_volume": [
   "inspect.getargspec"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testCustomGetter": {
  "lineno": 286,
  "symbols_in_volume": [
   "tensorflow.float32",
   "tensorflow.ones",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testCustomGetter.custom_getter": {
  "lineno": 289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testCustomGetterNested": {
  "lineno": 329,
  "symbols_in_volume": [
   "tensorflow.float32",
   "tensorflow.ones",
   "tensorflow.trainable_variables",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testCustomGetterNested.custom_getter": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testGetAllLocalVariables": {
  "lineno": 451,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "tensorflow.GraphKeys.LOCAL_VARIABLES",
   "tensorflow.all_variables",
   "tensorflow.float32",
   "tensorflow.local_variables",
   "tensorflow.ones",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testGetAllLocalVariables.local_custom_getter": {
  "lineno": 455,
  "symbols_in_volume": [
   "tensorflow.GraphKeys.LOCAL_VARIABLES"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testGetAllTrainableVariables": {
  "lineno": 369,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.python.modules.base.NotConnectedError",
   "tensorflow.GraphKeys.LOCAL_VARIABLES",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testGetAllVariablesWithConditionalConstruction": {
  "lineno": 493,
  "symbols_in_volume": [
   "sonnet.python.modules.base.NotConnectedError",
   "tensorflow.cond",
   "tensorflow.constant",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testInitInvalidTypeArgs": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testInitNoArgs": {
  "lineno": 268,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testInitNoNamedArgs": {
  "lineno": 258,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testInitNoSuper": {
  "lineno": 273,
  "symbols_in_volume": [
   "sonnet.python.modules.base.NotInitializedError",
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testInitializerKeys": {
  "lineno": 137,
  "symbols_in_volume": [
   "six.PY2"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testMultipleGraphs": {
  "lineno": 154,
  "symbols_in_volume": [
   "sonnet.python.modules.base.DifferentGraphError",
   "tensorflow.Graph",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testNameScopeRecording": {
  "lineno": 168,
  "symbols_in_volume": [
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.name_scope",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testNameScopeRecordingNotSupportedEager": {
  "lineno": 189,
  "symbols_in_volume": [
   "sonnet.python.modules.base.NotSupportedError",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testPicklingNotSupported": {
  "lineno": 279,
  "symbols_in_volume": [
   "pickle.dumps",
   "sonnet.python.modules.base.NotSupportedError"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testSubgraphsNotRecordedEager": {
  "lineno": 233,
  "symbols_in_volume": [
   "sonnet.python.modules.base.NotSupportedError",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.name_scope",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testSubgraphsRecording": {
  "lineno": 199,
  "symbols_in_volume": [
   "sonnet.python.modules.base.NotConnectedError",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.name_scope",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.AbstractModuleTest.testVariablesFromNestedModule": {
  "lineno": 517,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.ComplexModule": {
  "lineno": 98,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.base_test.ComplexModule.__init__": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base_test.ComplexModule._build": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base_test.ConnectionObserverTest": {
  "lineno": 647,
  "symbols_in_volume": [
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.base_test.ConnectionObserverTest._connection_observer": {
  "lineno": 649,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base_test.ConnectionObserverTest.setUp": {
  "lineno": 652,
  "symbols_in_volume": [
   "tensorflow.float32",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.ConnectionObserverTest.testObservesComplexModule": {
  "lineno": 678,
  "symbols_in_volume": [
   "sonnet.python.modules.base.observe_connections"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.ConnectionObserverTest.testObservesSimpleModule": {
  "lineno": 667,
  "symbols_in_volume": [
   "sonnet.python.modules.base.observe_connections"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.ConnectionObserverTest.testObservesWrappedFunction": {
  "lineno": 656,
  "symbols_in_volume": [
   "sonnet.python.modules.base.Module",
   "sonnet.python.modules.base.observe_connections",
   "tensorflow.nn.relu"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.DefunTest": {
  "lineno": 708,
  "symbols_in_volume": [
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.base_test.DefunTest.testCallWithDefun": {
  "lineno": 717,
  "symbols_in_volume": [
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.DefunTest.testCallWithDefunTracingTwice": {
  "lineno": 724,
  "symbols_in_volume": [
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.DefunTest.testDefunWrappedProperty": {
  "lineno": 710,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base_test.DefunTest.testGetVariablesDisabledWhenUsingDefun": {
  "lineno": 741,
  "symbols_in_volume": [
   "sonnet.python.modules.base_errors.NotSupportedError",
   "tensorflow.executing_eagerly",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.IdentityModule": {
  "lineno": 56,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.base_test.IdentityModule._build": {
  "lineno": 59,
  "symbols_in_volume": [
   "tensorflow.identity"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.MatMulModule": {
  "lineno": 697,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.base_test.MatMulModule._build": {
  "lineno": 701,
  "symbols_in_volume": [
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.ModuleTest": {
  "lineno": 548,
  "symbols_in_volume": [
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.base_test.ModuleTest.testCustomGetter": {
  "lineno": 573,
  "symbols_in_volume": [
   "functools.partial",
   "sonnet.python.modules.base.Module",
   "tensorflow.float32",
   "tensorflow.ones",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.ModuleTest.testCustomGetter.custom_getter": {
  "lineno": 581,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base_test.ModuleTest.testCustomGetter.simple_module_build": {
  "lineno": 574,
  "symbols_in_volume": [
   "tensorflow.float32",
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.ModuleTest.testFunctionType": {
  "lineno": 550,
  "symbols_in_volume": [
   "sonnet.python.modules.base.Module"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.ModuleTest.testGetVariablesDifferentGraphScope": {
  "lineno": 623,
  "symbols_in_volume": [
   "numpy.random.rand",
   "tensorflow.Graph",
   "tensorflow.constant",
   "tensorflow.float32"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.ModuleTest.testGraphProperty": {
  "lineno": 632,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.ones",
   "numpy.zeros",
   "tensorflow.Graph",
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.ModuleTest.testSharing": {
  "lineno": 556,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.random.rand",
   "sonnet.python.modules.base.Module",
   "tensorflow.constant",
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.ModuleWithClassKeys": {
  "lineno": 38,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.base_test.ModuleWithCustomInitializerKeys": {
  "lineno": 48,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.base_test.ModuleWithCustomInitializerKeys.get_possible_initializer_keys": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base_test.ModuleWithNoInitializerKeys": {
  "lineno": 43,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.base_test.ModuleWithSubmodules": {
  "lineno": 115,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.base_test.ModuleWithSubmodules.__init__": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base_test.ModuleWithSubmodules._build": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base_test.NoInitIdentityModule": {
  "lineno": 63,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.base_test.NoInitIdentityModule._build": {
  "lineno": 66,
  "symbols_in_volume": [
   "tensorflow.identity"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.NoSuperInitIdentityModule": {
  "lineno": 70,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.base_test.NoSuperInitIdentityModule.__init__": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.base_test.NoSuperInitIdentityModule._build": {
  "lineno": 76,
  "symbols_in_volume": [
   "tensorflow.identity"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.SimpleModule": {
  "lineno": 80,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.base_test.SimpleModule.__init__": {
  "lineno": 83,
  "symbols_in_volume": [
   "tensorflow.float32",
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test.SimpleModule._build": {
  "lineno": 91,
  "symbols_in_volume": [
   "tensorflow.float32",
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.base_test._make_model_with_params": {
  "lineno": 541,
  "symbols_in_volume": [
   "tensorflow.get_variable",
   "tensorflow.matmul"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.contrib.framework.nest"
  ],
  "type": "module"
 },
 "sonnet.python.modules.basic.AddBias": {
  "lineno": 505,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule",
   "sonnet.python.modules.base.Transposable"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic.AddBias.__init__": {
  "lineno": 510,
  "symbols_in_volume": [
   "sonnet.python.modules.util.check_initializers",
   "sonnet.python.modules.util.check_partitioners",
   "sonnet.python.modules.util.check_regularizers"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic.AddBias._build": {
  "lineno": 603,
  "symbols_in_volume": [
   "sonnet.python.modules.base.IncompatibleShapeError",
   "sonnet.python.modules.base.ParentNotBuiltError",
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic.AddBias.b": {
  "lineno": 674,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic.AddBias.input_shape": {
  "lineno": 689,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic.AddBias.transpose": {
  "lineno": 696,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic.BatchApply": {
  "lineno": 1016,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic.BatchApply.__init__": {
  "lineno": 1036,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic.BatchApply._build": {
  "lineno": 1063,
  "symbols_in_volume": [
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic.BatchApply._build._split_to_original_leading_dims": {
  "lineno": 1091,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic.BatchFlatten": {
  "lineno": 877,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.basic.BatchFlatten.__init__": {
  "lineno": 880,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic.BatchReshape": {
  "lineno": 716,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule",
   "sonnet.python.modules.base.Transposable"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic.BatchReshape.__init__": {
  "lineno": 719,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic.BatchReshape._build": {
  "lineno": 779,
  "symbols_in_volume": [
   "numbers.Integral",
   "numpy.prod",
   "tensorflow.concat",
   "tensorflow.reshape",
   "tensorflow.shape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic.BatchReshape._infer_shape": {
  "lineno": 759,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.prod"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic.BatchReshape.input_shape": {
  "lineno": 862,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic.BatchReshape.transpose": {
  "lineno": 868,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic.ConcatLinear": {
  "lineno": 373,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic.ConcatLinear.__init__": {
  "lineno": 393,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic.ConcatLinear._build": {
  "lineno": 436,
  "symbols_in_volume": [
   "tensorflow.add_n"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic.FlattenTrailingDimensions": {
  "lineno": 901,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.basic.FlattenTrailingDimensions.__init__": {
  "lineno": 904,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic.Linear": {
  "lineno": 134,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule",
   "sonnet.python.modules.base.Transposable"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic.Linear.__init__": {
  "lineno": 137,
  "symbols_in_volume": [
   "sonnet.python.modules.util.check_initializers",
   "sonnet.python.modules.util.check_partitioners",
   "sonnet.python.modules.util.check_regularizers"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic.Linear._build": {
  "lineno": 197,
  "symbols_in_volume": [
   "sonnet.python.modules.base.IncompatibleShapeError",
   "tensorflow.get_variable",
   "tensorflow.matmul"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic.Linear.b": {
  "lineno": 281,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic.Linear.clone": {
  "lineno": 326,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic.Linear.get_possible_initializer_keys": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic.Linear.has_bias": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic.Linear.initializers": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic.Linear.input_shape": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic.Linear.output_size": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic.Linear.partitioners": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic.Linear.regularizers": {
  "lineno": 321,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic.Linear.transpose": {
  "lineno": 353,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic.Linear.w": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic.MergeDims": {
  "lineno": 1274,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic.MergeDims.__init__": {
  "lineno": 1296,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic.MergeDims._build": {
  "lineno": 1354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic.MergeDims._merge": {
  "lineno": 1315,
  "symbols_in_volume": [
   "numpy.prod",
   "tensorflow.concat",
   "tensorflow.reduce_prod",
   "tensorflow.reshape",
   "tensorflow.shape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic.SelectInput": {
  "lineno": 1375,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic.SelectInput.__init__": {
  "lineno": 1413,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic.SelectInput._build": {
  "lineno": 1447,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic.SelectInput._check_type": {
  "lineno": 1429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic.SelectInput._select": {
  "lineno": 1436,
  "symbols_in_volume": [
   "tensorflow.identity"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic.SliceByDim": {
  "lineno": 1103,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic.SliceByDim.__init__": {
  "lineno": 1136,
  "symbols_in_volume": [
   "numpy.unique"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic.SliceByDim._build": {
  "lineno": 1167,
  "symbols_in_volume": [
   "numpy.max",
   "tensorflow.slice"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic.TileByDim": {
  "lineno": 1200,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic.TileByDim.__init__": {
  "lineno": 1230,
  "symbols_in_volume": [
   "numpy.unique"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic.TileByDim._build": {
  "lineno": 1252,
  "symbols_in_volume": [
   "tensorflow.tile"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic.TrainableVariable": {
  "lineno": 932,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic.TrainableVariable.__init__": {
  "lineno": 937,
  "symbols_in_volume": [
   "sonnet.python.modules.util.check_initializers",
   "sonnet.python.modules.util.check_partitioners",
   "sonnet.python.modules.util.check_regularizers",
   "tensorflow.float32"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic.TrainableVariable._build": {
  "lineno": 983,
  "symbols_in_volume": [
   "math.sqrt",
   "numpy.prod",
   "tensorflow.get_variable",
   "tensorflow.truncated_normal_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic.TrainableVariable.w": {
  "lineno": 1001,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic.calculate_bias_shape": {
  "lineno": 464,
  "symbols_in_volume": [
   "six.moves.xrange"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic.create_bias_initializer": {
  "lineno": 129,
  "symbols_in_volume": [
   "tensorflow.float32",
   "tensorflow.zeros_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic.create_linear_initializer": {
  "lineno": 123,
  "symbols_in_volume": [
   "math.sqrt",
   "tensorflow.float32",
   "tensorflow.truncated_normal_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic.merge_leading_dims": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.prod",
   "tensorflow.concat",
   "tensorflow.convert_to_tensor",
   "tensorflow.reduce_prod",
   "tensorflow.reshape",
   "tensorflow.shape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic.split_leading_dim": {
  "lineno": 92,
  "symbols_in_volume": [
   "tensorflow.concat",
   "tensorflow.reshape",
   "tensorflow.shape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.contrib.framework.nest"
  ],
  "type": "module"
 },
 "sonnet.python.modules.basic_rnn.BidirectionalRNN": {
  "lineno": 548,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic_rnn.BidirectionalRNN.__init__": {
  "lineno": 560,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.BidirectionalRNN.__init__._is_recurrent": {
  "lineno": 574,
  "symbols_in_volume": [
   "sonnet.python.modules.rnn_core.RNNCore"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.BidirectionalRNN._build": {
  "lineno": 583,
  "symbols_in_volume": [
   "six.moves.range",
   "tensorflow.name_scope",
   "tensorflow.stack"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.BidirectionalRNN.initial_state": {
  "lineno": 651,
  "symbols_in_volume": [
   "tensorflow.float32"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.BidirectionalRNN.output_size": {
  "lineno": 693,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.BidirectionalRNN.state_size": {
  "lineno": 688,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.DeepRNN": {
  "lineno": 180,
  "symbols_in_volume": [
   "sonnet.python.modules.rnn_core.RNNCore"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic_rnn.DeepRNN.__init__": {
  "lineno": 246,
  "symbols_in_volume": [
   "collections.Iterable",
   "sonnet.python.modules.rnn_core.RNNCore",
   "tensorflow.logging.WARN",
   "tensorflow.logging.log_first_n"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.DeepRNN._build": {
  "lineno": 311,
  "symbols_in_volume": [
   "tensorflow.concat"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.DeepRNN._check_cores_output_sizes": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.DeepRNN.initial_state": {
  "lineno": 372,
  "symbols_in_volume": [
   "tensorflow.float32",
   "tensorflow.name_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.DeepRNN.output_size": {
  "lineno": 436,
  "symbols_in_volume": [
   "tensorflow.TensorShape",
   "tensorflow.logging.warning"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.DeepRNN.state_size": {
  "lineno": 428,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.ModelRNN": {
  "lineno": 489,
  "symbols_in_volume": [
   "sonnet.python.modules.rnn_core.RNNCore"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic_rnn.ModelRNN.__init__": {
  "lineno": 492,
  "symbols_in_volume": [
   "sonnet.python.modules.rnn_core.RNNCore"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.ModelRNN._build": {
  "lineno": 517,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.ModelRNN.output_size": {
  "lineno": 543,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.ModelRNN.state_size": {
  "lineno": 539,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.VanillaRNN": {
  "lineno": 64,
  "symbols_in_volume": [
   "sonnet.python.modules.rnn_core.RNNCore"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic_rnn.VanillaRNN.__init__": {
  "lineno": 71,
  "symbols_in_volume": [
   "sonnet.python.modules.util.check_initializers",
   "sonnet.python.modules.util.check_partitioners",
   "sonnet.python.modules.util.check_regularizers",
   "tensorflow.tanh"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.VanillaRNN._build": {
  "lineno": 110,
  "symbols_in_volume": [
   "sonnet.python.modules.basic.Linear"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.VanillaRNN.hidden_to_hidden_linear": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.VanillaRNN.hidden_to_hidden_variables": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.VanillaRNN.in_to_hidden_linear": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.VanillaRNN.in_to_hidden_variables": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.VanillaRNN.output_size": {
  "lineno": 175,
  "symbols_in_volume": [
   "tensorflow.TensorShape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn.VanillaRNN.state_size": {
  "lineno": 171,
  "symbols_in_volume": [
   "tensorflow.TensorShape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn._get_flat_core_sizes": {
  "lineno": 39,
  "symbols_in_volume": [
   "tensorflow.TensorShape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn._get_shape_without_batch_dimension": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn._get_shape_without_batch_dimension._strip_batch_and_convert_to_shape": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.modules.basic_rnn_test.BidirectionalRNNTest": {
  "lineno": 727,
  "symbols_in_volume": [
   "collections.namedtuple",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic_rnn_test.BidirectionalRNNTest.ToyRNN": {
  "lineno": 731,
  "symbols_in_volume": [
   "sonnet.RNNCore"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic_rnn_test.BidirectionalRNNTest.ToyRNN.__init__": {
  "lineno": 734,
  "symbols_in_volume": [
   "sonnet.LSTM"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.BidirectionalRNNTest.ToyRNN._build": {
  "lineno": 740,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.BidirectionalRNNTest.ToyRNN.initial_state": {
  "lineno": 745,
  "symbols_in_volume": [
   "tensorflow.float32"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.BidirectionalRNNTest.ToyRNN.output_size": {
  "lineno": 754,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.BidirectionalRNNTest.ToyRNN.state_size": {
  "lineno": 750,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.BidirectionalRNNTest.setUp": {
  "lineno": 759,
  "symbols_in_volume": [
   "sonnet.LSTM"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.BidirectionalRNNTest.testShape": {
  "lineno": 770,
  "symbols_in_volume": [
   "sonnet.BidirectionalRNN",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest": {
  "lineno": 241,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.testComputation": {
  "lineno": 414,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "numpy.random.randn",
   "sonnet.DeepRNN",
   "sonnet.VanillaRNN",
   "tensorflow.concat",
   "tensorflow.constant",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.testFinalCoreHasNoSizeWarning": {
  "lineno": 650,
  "symbols_in_volume": [
   "mock.patch.object",
   "sonnet.DeepRNN",
   "sonnet.LSTM",
   "sonnet.Linear",
   "tensorflow.logging",
   "tensorflow.nn.relu"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.testIncompatibleOptions": {
  "lineno": 336,
  "symbols_in_volume": [
   "sonnet.DeepRNN",
   "sonnet.Linear",
   "sonnet.VanillaRNN",
   "tensorflow.contrib.rnn.BasicLSTMCell"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.testInitialState": {
  "lineno": 495,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.DeepRNN",
   "sonnet.Linear",
   "sonnet.VanillaRNN",
   "tensorflow.constant_initializer",
   "tensorflow.global_variables_initializer",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.testInitialStateInModule": {
  "lineno": 542,
  "symbols_in_volume": [
   "sonnet.Module",
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.testInitialStateInModule.module_build": {
  "lineno": 546,
  "symbols_in_volume": [
   "sonnet.DeepRNN",
   "sonnet.LSTM",
   "tensorflow.float32"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.testInitialStateNames": {
  "lineno": 569,
  "symbols_in_volume": [
   "sonnet.DeepRNN",
   "sonnet.LSTM",
   "tensorflow.executing_eagerly"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.testMLPFinalCore": {
  "lineno": 628,
  "symbols_in_volume": [
   "numpy.random.randn",
   "sonnet.DeepRNN",
   "sonnet.LSTM",
   "sonnet.nets.MLP",
   "tensorflow.TensorShape",
   "tensorflow.constant",
   "tensorflow.float32",
   "tensorflow.nn.dynamic_rnn"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.testMultiDimShape": {
  "lineno": 300,
  "symbols_in_volume": [
   "sonnet.DeepRNN",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.testMultiDimShape._create_lstm": {
  "lineno": 314,
  "symbols_in_volume": [
   "sonnet.Conv2DLSTM"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.testNoSizeButAlreadyConnected": {
  "lineno": 663,
  "symbols_in_volume": [
   "mock.patch.object",
   "sonnet.DeepRNN",
   "sonnet.LSTM",
   "sonnet.Linear",
   "tensorflow.TensorShape",
   "tensorflow.logging",
   "tensorflow.nn.relu",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.testNonRecurrentOnly": {
  "lineno": 468,
  "symbols_in_volume": [
   "numpy.random.randn",
   "sonnet.DeepRNN",
   "sonnet.Linear",
   "tensorflow.constant",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.testShape": {
  "lineno": 243,
  "symbols_in_volume": [
   "numpy.ndarray",
   "sonnet.DeepRNN",
   "sonnet.VanillaRNN",
   "tensorflow.TensorShape",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.testSkipConnectionOptions": {
  "lineno": 603,
  "symbols_in_volume": [
   "numpy.random.normal",
   "six.moves.xrange",
   "sonnet.DeepRNN",
   "sonnet.LSTM",
   "tensorflow.constant",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.nn.dynamic_rnn"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.testVariables": {
  "lineno": 381,
  "symbols_in_volume": [
   "itertools.chain.from_iterable",
   "sonnet.DeepRNN",
   "sonnet.Error",
   "sonnet.VanillaRNN",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.DeepRNNTest.test_non_recurrent_mappings": {
  "lineno": 354,
  "symbols_in_volume": [
   "sonnet.DeepRNN",
   "sonnet.LSTM",
   "sonnet.Linear",
   "tensorflow.global_variables_initializer",
   "tensorflow.nn.dynamic_rnn",
   "tensorflow.random_normal",
   "tensorflow.tanh"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.ModelRNNTest": {
  "lineno": 681,
  "symbols_in_volume": [
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic_rnn_test.ModelRNNTest.setUp": {
  "lineno": 683,
  "symbols_in_volume": [
   "sonnet.Module",
   "tensorflow.TensorShape",
   "tensorflow.identity"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.ModelRNNTest.testBadArguments": {
  "lineno": 719,
  "symbols_in_volume": [
   "numpy.array",
   "sonnet.ModelRNN",
   "tensorflow.identity"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.ModelRNNTest.testComputation": {
  "lineno": 704,
  "symbols_in_volume": [
   "numpy.random.randn",
   "sonnet.ModelRNN",
   "tensorflow.convert_to_tensor",
   "tensorflow.global_variables_initializer",
   "tensorflow.random_normal"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.ModelRNNTest.testShape": {
  "lineno": 689,
  "symbols_in_volume": [
   "sonnet.ModelRNN",
   "tensorflow.TensorShape",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.VanillaRNNTest": {
  "lineno": 36,
  "symbols_in_volume": [
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic_rnn_test.VanillaRNNTest.setUp": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.VanillaRNNTest.testComputation": {
  "lineno": 89,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.random.randn",
   "numpy.tanh",
   "sonnet.VanillaRNN",
   "tensorflow.convert_to_tensor",
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.VanillaRNNTest.testInitializers": {
  "lineno": 116,
  "symbols_in_volume": [
   "numpy.ones",
   "sonnet.VanillaRNN",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.ones",
   "tensorflow.ones_initializer",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.VanillaRNNTest.testPartitioners": {
  "lineno": 158,
  "symbols_in_volume": [
   "sonnet.VanillaRNN",
   "tensorflow.executing_eagerly",
   "tensorflow.fixed_size_partitioner",
   "tensorflow.float32",
   "tensorflow.ones",
   "tensorflow.python.ops.variables.PartitionedVariable",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.VanillaRNNTest.testRegularizers": {
  "lineno": 205,
  "symbols_in_volume": [
   "sonnet.VanillaRNN",
   "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
   "tensorflow.float32",
   "tensorflow.get_collection",
   "tensorflow.nn.l2_loss",
   "tensorflow.ones",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.VanillaRNNTest.testShape": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.ndarray",
   "sonnet.VanillaRNN",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_rnn_test.VanillaRNNTest.testVariables": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.ndarray",
   "sonnet.Error",
   "sonnet.VanillaRNN",
   "tensorflow.convert_to_tensor",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.modules.basic_test.AddBiasTest": {
  "lineno": 517,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic_test.AddBiasTest.setUp": {
  "lineno": 533,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.AddBiasTest.testComputation": {
  "lineno": 581,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.array",
   "numpy.random.randn",
   "numpy.random.seed",
   "sonnet.AddBias",
   "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
   "tensorflow.constant",
   "tensorflow.contrib.layers.l2_regularizer",
   "tensorflow.executing_eagerly",
   "tensorflow.float16",
   "tensorflow.float32",
   "tensorflow.float64",
   "tensorflow.get_collection",
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.AddBiasTest.testInvalidInitializationParameters": {
  "lineno": 670,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.AddBias",
   "tensorflow.truncated_normal_initializer",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.AddBiasTest.testInvalidPartitionerParameters": {
  "lineno": 684,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.AddBias",
   "tensorflow.fixed_size_partitioner",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.AddBiasTest.testInvalidRegularizationParameters": {
  "lineno": 697,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.AddBias",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.AddBiasTest.testName": {
  "lineno": 547,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.AddBias",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.AddBiasTest.testPartitioners": {
  "lineno": 730,
  "symbols_in_volume": [
   "sonnet.AddBias",
   "tensorflow.executing_eagerly",
   "tensorflow.python.ops.variables.PartitionedVariable",
   "tensorflow.variable_axis_size_partitioner",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.AddBiasTest.testShape": {
  "lineno": 539,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.AddBias",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.AddBiasTest.testSharing": {
  "lineno": 621,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.random.seed",
   "sonnet.AddBias",
   "tensorflow.constant",
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.AddBiasTest.testTranspose": {
  "lineno": 709,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.AddBias",
   "sonnet.ParentNotBuiltError",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.AddBiasTest.testUniquifying": {
  "lineno": 638,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.AddBias",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.AddBiasTest.testVariables": {
  "lineno": 555,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.ndarray",
   "sonnet.AddBias",
   "sonnet.NotConnectedError",
   "tensorflow.convert_to_tensor",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest": {
  "lineno": 1303,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testComputation": {
  "lineno": 1333,
  "symbols_in_volume": [
   "numpy.random.seed",
   "sonnet.BatchApply",
   "sonnet.Linear",
   "tensorflow.global_variables_initializer",
   "tensorflow.random_uniform",
   "tensorflow.reshape",
   "tensorflow.tanh"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testDifferentOutputStructure": {
  "lineno": 1384,
  "symbols_in_volume": [
   "numpy.random.randn",
   "sonnet.BatchApply",
   "sonnet.Module",
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testDifferentOutputStructure.build": {
  "lineno": 1389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testHandlesReturnedNone": {
  "lineno": 1484,
  "symbols_in_volume": [
   "sonnet.BatchApply",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testHandlesReturnedNone.fn": {
  "lineno": 1485,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testInferShape": {
  "lineno": 1312,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.BatchApply",
   "sonnet.Linear",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.ones",
   "tensorflow.placeholder",
   "tensorflow.tanh"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testInputExampleIndex": {
  "lineno": 1435,
  "symbols_in_volume": [
   "sonnet.BatchApply",
   "sonnet.Module",
   "tensorflow.errors.InvalidArgumentError",
   "tensorflow.executing_eagerly",
   "tensorflow.random_normal"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testInputExampleIndex.build": {
  "lineno": 1439,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testKWArgs": {
  "lineno": 1472,
  "symbols_in_volume": [
   "numpy.random.randn",
   "sonnet.BatchApply",
   "tensorflow.matmul"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testMultipleArgs": {
  "lineno": 1460,
  "symbols_in_volume": [
   "numpy.random.randn",
   "sonnet.BatchApply",
   "tensorflow.matmul"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testName": {
  "lineno": 1305,
  "symbols_in_volume": [
   "sonnet.BatchApply",
   "sonnet.Linear",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testNested": {
  "lineno": 1401,
  "symbols_in_volume": [
   "collections.namedtuple",
   "numpy.zeros",
   "sonnet.BatchApply",
   "sonnet.nest.assert_same_structure",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testNested.SizeChecker": {
  "lineno": 1410,
  "symbols_in_volume": [
   "sonnet.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testNested.SizeChecker.__init__": {
  "lineno": 1413,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testNested.SizeChecker._build": {
  "lineno": 1417,
  "symbols_in_volume": [
   "sonnet.nest.assert_same_structure"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testNonTensor": {
  "lineno": 1510,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.BatchApply",
   "sonnet.Module",
   "sonnet.python.ops.nest.flatten_iterable",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testNonTensor._build": {
  "lineno": 1523,
  "symbols_in_volume": [
   "sonnet.BatchNorm",
   "sonnet.Linear"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testOverTwoDims": {
  "lineno": 1371,
  "symbols_in_volume": [
   "sonnet.BatchApply",
   "sonnet.Linear",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testSomeInputsAreNone": {
  "lineno": 1491,
  "symbols_in_volume": [
   "numpy.random.randn",
   "sonnet.BatchApply",
   "tensorflow.matmul"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testSomeInputsAreNone.build": {
  "lineno": 1496,
  "symbols_in_volume": [
   "tensorflow.matmul"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchApplyTest.testVariables": {
  "lineno": 1357,
  "symbols_in_volume": [
   "sonnet.BatchApply",
   "sonnet.Linear",
   "tensorflow.float32",
   "tensorflow.ones",
   "tensorflow.tanh"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchFlattenTest": {
  "lineno": 1191,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic_test.BatchFlattenTest.testFlatten": {
  "lineno": 1200,
  "symbols_in_volume": [
   "numpy.prod",
   "sonnet.BatchFlatten",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchFlattenTest.testFlattenWithZeroDim": {
  "lineno": 1228,
  "symbols_in_volume": [
   "sonnet.BatchFlatten",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchFlattenTest.testName": {
  "lineno": 1193,
  "symbols_in_volume": [
   "sonnet.BatchFlatten",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchFlattenTest.testPreserveDimsError": {
  "lineno": 1219,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.BatchFlatten",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchFlattenTest.testPreserveDimsOk": {
  "lineno": 1209,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "numpy.prod",
   "sonnet.BatchFlatten",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest": {
  "lineno": 909,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testAddDimensions": {
  "lineno": 978,
  "symbols_in_volume": [
   "sonnet.BatchReshape",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testBadUnknownNonPreservedDimensions": {
  "lineno": 1010,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.BatchReshape",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testBuildDimError": {
  "lineno": 1077,
  "symbols_in_volume": [
   "sonnet.BatchReshape",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testBuildUnknown": {
  "lineno": 1083,
  "symbols_in_volume": [
   "sonnet.BatchReshape",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testCallable": {
  "lineno": 961,
  "symbols_in_volume": [
   "sonnet.BatchReshape",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testFlatten": {
  "lineno": 1030,
  "symbols_in_volume": [
   "numpy.prod",
   "sonnet.BatchReshape",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testInferShape": {
  "lineno": 968,
  "symbols_in_volume": [
   "sonnet.BatchReshape",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testInvalidPreserveDimsError": {
  "lineno": 1073,
  "symbols_in_volume": [
   "sonnet.BatchReshape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testInvalidReshapeParameters": {
  "lineno": 928,
  "symbols_in_volume": [
   "sonnet.BatchReshape",
   "tensorflow.float32",
   "tensorflow.ones",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testName": {
  "lineno": 911,
  "symbols_in_volume": [
   "sonnet.BatchReshape",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testNoReshapeNeeded": {
  "lineno": 992,
  "symbols_in_volume": [
   "sonnet.BatchReshape",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.ones",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testPreserve": {
  "lineno": 1093,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.BatchReshape",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.ones",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testReshape": {
  "lineno": 918,
  "symbols_in_volume": [
   "numpy.prod",
   "sonnet.BatchReshape",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testRun": {
  "lineno": 1117,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.float32",
   "numpy.random.RandomState",
   "numpy.zeros",
   "sonnet.BatchReshape",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testTranspose": {
  "lineno": 1053,
  "symbols_in_volume": [
   "sonnet.BatchReshape",
   "tensorflow.random_uniform"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.BatchReshapeTest.testUnknown": {
  "lineno": 1040,
  "symbols_in_volume": [
   "numpy.prod",
   "sonnet.BatchReshape",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.ConcatLinearTest": {
  "lineno": 49,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic_test.ConcatLinearTest.setUp": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.ConcatLinearTest.testName": {
  "lineno": 69,
  "symbols_in_volume": [
   "sonnet.ConcatLinear",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.ConcatLinearTest.testShape": {
  "lineno": 59,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.ConcatLinear",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.FlattenTrailingDimensionsTest": {
  "lineno": 1235,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic_test.FlattenTrailingDimensionsTest.testBuildDimError": {
  "lineno": 1248,
  "symbols_in_volume": [
   "sonnet.FlattenTrailingDimensions",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.FlattenTrailingDimensionsTest.testBuildUnknown": {
  "lineno": 1254,
  "symbols_in_volume": [
   "sonnet.FlattenTrailingDimensions",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.FlattenTrailingDimensionsTest.testFlatten": {
  "lineno": 1263,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.prod",
   "six.moves.xrange",
   "sonnet.FlattenTrailingDimensions",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.ones",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.FlattenTrailingDimensionsTest.testInvalidFlattenFromError": {
  "lineno": 1244,
  "symbols_in_volume": [
   "sonnet.FlattenTrailingDimensions"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.FlattenTrailingDimensionsTest.testName": {
  "lineno": 1237,
  "symbols_in_volume": [
   "sonnet.FlattenTrailingDimensions",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.FlattenTrailingDimensionsTest.testTranspose": {
  "lineno": 1282,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.FlattenTrailingDimensions",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.ones",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest": {
  "lineno": 78,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic_test.LinearTest.setUp": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testClone": {
  "lineno": 349,
  "symbols_in_volume": [
   "sonnet.Linear",
   "tensorflow.GraphKeys.TRAINABLE_VARIABLES",
   "tensorflow.get_collection",
   "tensorflow.trainable_variables",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testComputation": {
  "lineno": 170,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.dot",
   "numpy.random.randn",
   "numpy.random.seed",
   "sonnet.Linear",
   "tensorflow.constant",
   "tensorflow.float16",
   "tensorflow.float32",
   "tensorflow.float64",
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testCustomGetter": {
  "lineno": 147,
  "symbols_in_volume": [
   "sonnet.Linear",
   "tensorflow.float32",
   "tensorflow.global_variables",
   "tensorflow.ones",
   "tensorflow.trainable_variables"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testCustomGetter.custom_getter": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testFloatDataTypeConsistent": {
  "lineno": 485,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.Linear",
   "tensorflow.bfloat16",
   "tensorflow.float16",
   "tensorflow.float32",
   "tensorflow.float64",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testGradientColocation": {
  "lineno": 420,
  "symbols_in_volume": [
   "numpy.ones",
   "sonnet.Linear",
   "tensorflow.contrib.nn.deprecated_flipped_sparse_softmax_cross_entropy_with_logits",
   "tensorflow.device",
   "tensorflow.errors.InvalidArgumentError",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.logging.warn",
   "tensorflow.ones",
   "tensorflow.python.client.device_lib.list_local_devices",
   "tensorflow.reduce_mean",
   "tensorflow.to_int64",
   "tensorflow.train.GradientDescentOptimizer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testIntegerDataTypeConsistentWithCustomWeightInitializer": {
  "lineno": 505,
  "symbols_in_volume": [
   "sonnet.Linear",
   "tensorflow.int32",
   "tensorflow.ones",
   "tensorflow.zeros_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testIntegerDataTypeFailsWithDefaultInitializers": {
  "lineno": 498,
  "symbols_in_volume": [
   "sonnet.Linear",
   "tensorflow.int32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testInvalidInitializationParameters": {
  "lineno": 302,
  "symbols_in_volume": [
   "sonnet.Linear",
   "tensorflow.truncated_normal_initializer",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testInvalidPartitionerParameters": {
  "lineno": 313,
  "symbols_in_volume": [
   "sonnet.Linear",
   "tensorflow.fixed_size_partitioner",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testInvalidRegularizationParameters": {
  "lineno": 324,
  "symbols_in_volume": [
   "sonnet.Linear",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testIsConnected": {
  "lineno": 274,
  "symbols_in_volume": [
   "sonnet.IncompatibleShapeError",
   "sonnet.Linear",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testName": {
  "lineno": 98,
  "symbols_in_volume": [
   "sonnet.Linear",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testPartitioners": {
  "lineno": 471,
  "symbols_in_volume": [
   "sonnet.Linear",
   "tensorflow.executing_eagerly",
   "tensorflow.python.ops.variables.PartitionedVariable",
   "tensorflow.variable_axis_size_partitioner",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testRegularizersInRegularizationLosses": {
  "lineno": 335,
  "symbols_in_volume": [
   "sonnet.Linear",
   "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.contrib.layers.l2_regularizer",
   "tensorflow.executing_eagerly",
   "tensorflow.get_collection",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testShape": {
  "lineno": 88,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.Linear",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testSharing": {
  "lineno": 213,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.float32",
   "numpy.random.randn",
   "numpy.random.seed",
   "sonnet.Linear",
   "tensorflow.constant",
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testTranspose": {
  "lineno": 377,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.Linear",
   "sonnet.NotConnectedError",
   "tensorflow.float32",
   "tensorflow.ones",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testUniquifying": {
  "lineno": 239,
  "symbols_in_volume": [
   "sonnet.Linear",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testUnknownInputSize": {
  "lineno": 288,
  "symbols_in_volume": [
   "sonnet.IncompatibleShapeError",
   "sonnet.Linear",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.LinearTest.testVariables": {
  "lineno": 105,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.ndarray",
   "sonnet.Linear",
   "sonnet.NotConnectedError",
   "tensorflow.convert_to_tensor",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.MergeDimsTest": {
  "lineno": 1715,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic_test.MergeDimsTest.testComputation": {
  "lineno": 1778,
  "symbols_in_volume": [
   "sonnet.MergeDims",
   "tensorflow.random_uniform",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.MergeDimsTest.testInferShape": {
  "lineno": 1724,
  "symbols_in_volume": [
   "sonnet.MergeDims",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.MergeDimsTest.testInferShape_negStart": {
  "lineno": 1734,
  "symbols_in_volume": [
   "sonnet.MergeDims",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.MergeDimsTest.testInvalidDimsParameters": {
  "lineno": 1793,
  "symbols_in_volume": [
   "sonnet.MergeDims"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.MergeDimsTest.testInvalidTensorRank": {
  "lineno": 1801,
  "symbols_in_volume": [
   "sonnet.MergeDims",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.MergeDimsTest.testName": {
  "lineno": 1717,
  "symbols_in_volume": [
   "sonnet.MergeDims",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.MergeDimsTest.testNestedInput": {
  "lineno": 1813,
  "symbols_in_volume": [
   "collections.namedtuple",
   "numpy.prod",
   "sonnet.MergeDims",
   "sonnet.python.ops.nest.assert_same_structure",
   "sonnet.python.ops.nest.flatten",
   "tensorflow.random_uniform"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.MergeDimsTest.testWithUndefinedAndZeroDim": {
  "lineno": 1764,
  "symbols_in_volume": [
   "numpy.zeros",
   "sonnet.MergeDims",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.MergeDimsTest.testWithUndefinedDims": {
  "lineno": 1744,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "numpy.zeros",
   "sonnet.MergeDims",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.MergeLeadingDimsTest": {
  "lineno": 1149,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic_test.MergeLeadingDimsTest.testExceptionUnknownRank": {
  "lineno": 1165,
  "symbols_in_volume": [
   "sonnet.python.modules.basic.merge_leading_dims",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.MergeLeadingDimsTest.testPartialShape": {
  "lineno": 1177,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.python.modules.basic.merge_leading_dims",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.MergeLeadingDimsTest.testScalarInput": {
  "lineno": 1152,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.python.modules.basic.merge_leading_dims"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.SelectInputTest": {
  "lineno": 1850,
  "symbols_in_volume": [
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic_test.SelectInputTest.testBasicSelect": {
  "lineno": 1859,
  "symbols_in_volume": [
   "sonnet.SelectInput",
   "tensorflow.identity",
   "tensorflow.random_uniform"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.SelectInputTest.testInvalidIdxType": {
  "lineno": 1925,
  "symbols_in_volume": [
   "sonnet.SelectInput"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.SelectInputTest.testInvalidIdxValue": {
  "lineno": 1912,
  "symbols_in_volume": [
   "sonnet.SelectInput",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.SelectInputTest.testName": {
  "lineno": 1852,
  "symbols_in_volume": [
   "sonnet.SelectInput",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.SelectInputTest.testNestedListSelect": {
  "lineno": 1891,
  "symbols_in_volume": [
   "sonnet.SelectInput",
   "tensorflow.identity",
   "tensorflow.random_uniform"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.SelectInputTest.testTupleSelect": {
  "lineno": 1873,
  "symbols_in_volume": [
   "sonnet.SelectInput",
   "tensorflow.identity",
   "tensorflow.random_uniform"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.SliceByDimTest": {
  "lineno": 1544,
  "symbols_in_volume": [
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic_test.SliceByDimTest.testComparison": {
  "lineno": 1565,
  "symbols_in_volume": [
   "sonnet.SliceByDim",
   "tensorflow.random_uniform",
   "tensorflow.slice"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.SliceByDimTest.testComputation": {
  "lineno": 1583,
  "symbols_in_volume": [
   "sonnet.SliceByDim",
   "tensorflow.constant",
   "tensorflow.int32"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.SliceByDimTest.testInferShape": {
  "lineno": 1554,
  "symbols_in_volume": [
   "sonnet.SliceByDim",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.SliceByDimTest.testInvalidSliceParameters": {
  "lineno": 1609,
  "symbols_in_volume": [
   "sonnet.SliceByDim"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.SliceByDimTest.testInvalidTensorRank": {
  "lineno": 1626,
  "symbols_in_volume": [
   "numpy.max",
   "sonnet.SliceByDim",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.SliceByDimTest.testName": {
  "lineno": 1546,
  "symbols_in_volume": [
   "sonnet.SliceByDim",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.SliceByDimTest.testNegativeDim": {
  "lineno": 1596,
  "symbols_in_volume": [
   "sonnet.SliceByDim",
   "tensorflow.constant",
   "tensorflow.int32"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.SliceByDimTest.testUniqueDimensions": {
  "lineno": 1639,
  "symbols_in_volume": [
   "sonnet.SliceByDim"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TileByDimTest": {
  "lineno": 1650,
  "symbols_in_volume": [
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic_test.TileByDimTest.testComparison": {
  "lineno": 1669,
  "symbols_in_volume": [
   "sonnet.TileByDim",
   "tensorflow.random_uniform",
   "tensorflow.tile"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TileByDimTest.testComputation": {
  "lineno": 1685,
  "symbols_in_volume": [
   "sonnet.TileByDim",
   "tensorflow.constant",
   "tensorflow.int32"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TileByDimTest.testInferShape": {
  "lineno": 1659,
  "symbols_in_volume": [
   "sonnet.TileByDim",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TileByDimTest.testInvalidTileParameters": {
  "lineno": 1697,
  "symbols_in_volume": [
   "sonnet.TileByDim"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TileByDimTest.testName": {
  "lineno": 1652,
  "symbols_in_volume": [
   "sonnet.TileByDim",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TileByDimTest.testUniqueDimensions": {
  "lineno": 1705,
  "symbols_in_volume": [
   "sonnet.TileByDim"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TrainableVariableTest": {
  "lineno": 744,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.basic_test.TrainableVariableTest.testCallBeforeInstantiation": {
  "lineno": 812,
  "symbols_in_volume": [
   "sonnet.NotConnectedError",
   "sonnet.TrainableVariable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TrainableVariableTest.testCustomGetter": {
  "lineno": 876,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.TrainableVariable",
   "tensorflow.constant",
   "tensorflow.executing_eagerly",
   "tensorflow.gradients"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TrainableVariableTest.testCustomGetter.maybe_stop_gradients_custom_getter": {
  "lineno": 883,
  "symbols_in_volume": [
   "tensorflow.stop_gradient"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TrainableVariableTest.testInitialization": {
  "lineno": 753,
  "symbols_in_volume": [
   "sonnet.TrainableVariable",
   "tensorflow.float32",
   "tensorflow.zeros_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TrainableVariableTest.testInvalidInitializationParameters": {
  "lineno": 791,
  "symbols_in_volume": [
   "sonnet.TrainableVariable",
   "tensorflow.truncated_normal_initializer",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TrainableVariableTest.testInvalidPartitionerParameters": {
  "lineno": 824,
  "symbols_in_volume": [
   "sonnet.TrainableVariable",
   "tensorflow.fixed_size_partitioner",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TrainableVariableTest.testInvalidRegularizationParameters": {
  "lineno": 836,
  "symbols_in_volume": [
   "sonnet.TrainableVariable",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TrainableVariableTest.testName": {
  "lineno": 746,
  "symbols_in_volume": [
   "sonnet.TrainableVariable",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TrainableVariableTest.testPartitioners": {
  "lineno": 863,
  "symbols_in_volume": [
   "sonnet.TrainableVariable",
   "tensorflow.executing_eagerly",
   "tensorflow.python.ops.variables.PartitionedVariable",
   "tensorflow.variable_axis_size_partitioner"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TrainableVariableTest.testRegularizersInRegularizationLosses": {
  "lineno": 849,
  "symbols_in_volume": [
   "sonnet.TrainableVariable",
   "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.executing_eagerly",
   "tensorflow.get_collection"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test.TrainableVariableTest.testVariableInitialization": {
  "lineno": 766,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.random.randn",
   "numpy.random.seed",
   "sonnet.TrainableVariable",
   "tensorflow.constant",
   "tensorflow.float16",
   "tensorflow.float32",
   "tensorflow.float64",
   "tensorflow.global_variables_initializer",
   "tensorflow.matmul"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test._test_initializer": {
  "lineno": 38,
  "symbols_in_volume": [
   "tensorflow.float32"
  ],
  "type": "function"
 },
 "sonnet.python.modules.basic_test._test_initializer._initializer": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.random.randn",
   "tensorflow.python.ops.init_ops._assert_float_dtype"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.python.modules.batch_norm.BatchNorm": {
  "lineno": 55,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.batch_norm.BatchNorm.__init__": {
  "lineno": 138,
  "symbols_in_volume": [
   "sonnet.python.modules.util.check_initializers",
   "sonnet.python.modules.util.check_partitioners",
   "sonnet.python.modules.util.check_regularizers"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm._batch_norm_op": {
  "lineno": 400,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.nn.batch_normalization"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm._build": {
  "lineno": 480,
  "symbols_in_volume": [
   "sonnet.python.modules.base.IncompatibleShapeError",
   "sonnet.python.modules.base.NotSupportedError",
   "tensorflow.add_to_collection",
   "tensorflow.bfloat16",
   "tensorflow.control_dependencies",
   "tensorflow.float16",
   "tensorflow.float32",
   "tensorflow.identity"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm._build_scale_offset": {
  "lineno": 444,
  "symbols_in_volume": [
   "tensorflow.float16",
   "tensorflow.float32",
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm._build_statistics": {
  "lineno": 205,
  "symbols_in_volume": [
   "tensorflow.GraphKeys.GLOBAL_VARIABLES",
   "tensorflow.GraphKeys.MOVING_AVERAGE_VARIABLES",
   "tensorflow.get_variable",
   "tensorflow.python.layers.utils.smart_cond"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm._build_statistics.build_batch_stats": {
  "lineno": 245,
  "symbols_in_volume": [
   "tensorflow.nn.moments"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm._build_statistics.build_moving_stats": {
  "lineno": 252,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.identity"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm._build_update_ops": {
  "lineno": 276,
  "symbols_in_volume": [
   "tensorflow.python.layers.utils.constant_value",
   "tensorflow.python.layers.utils.smart_cond"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm._build_update_ops.build_no_ops": {
  "lineno": 309,
  "symbols_in_volume": [
   "tensorflow.no_op"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm._build_update_ops.build_update_ops": {
  "lineno": 290,
  "symbols_in_volume": [
   "tensorflow.python.training.moving_averages.assign_moving_average"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm._fused_batch_norm_op": {
  "lineno": 361,
  "symbols_in_volume": [
   "tensorflow.convert_to_tensor",
   "tensorflow.python.layers.utils.smart_cond",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm._fused_batch_norm_op.moving_average_fused_batch_norm": {
  "lineno": 387,
  "symbols_in_volume": [
   "tensorflow.nn.fused_batch_norm"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm._fused_batch_norm_op.use_batch_stats_fused_batch_norm": {
  "lineno": 383,
  "symbols_in_volume": [
   "tensorflow.nn.fused_batch_norm"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm._infer_fused_data_format": {
  "lineno": 325,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm.beta": {
  "lineno": 581,
  "symbols_in_volume": [
   "sonnet.python.modules.base.Error"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm.gamma": {
  "lineno": 591,
  "symbols_in_volume": [
   "sonnet.python.modules.base.Error"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm.initializers": {
  "lineno": 559,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm.moving_mean": {
  "lineno": 571,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm.moving_variance": {
  "lineno": 576,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm.partitioners": {
  "lineno": 563,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.BatchNorm.regularizers": {
  "lineno": 567,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.create_beta_initializer": {
  "lineno": 35,
  "symbols_in_volume": [
   "tensorflow.zeros_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.create_gamma_initializer": {
  "lineno": 40,
  "symbols_in_volume": [
   "tensorflow.ones_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.create_mean_initializer": {
  "lineno": 45,
  "symbols_in_volume": [
   "tensorflow.zeros_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm.create_variance_initializer": {
  "lineno": 50,
  "symbols_in_volume": [
   "tensorflow.ones_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest": {
  "lineno": 31,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest._get_inputs": {
  "lineno": 138,
  "symbols_in_volume": [
   "numpy.array",
   "tensorflow.constant",
   "tensorflow.float32"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.test16Bit": {
  "lineno": 123,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.BatchNorm",
   "tensorflow.bfloat16",
   "tensorflow.float16",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testCheckStatsDouble": {
  "lineno": 170,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.ones",
   "numpy.reshape",
   "numpy.zeros",
   "sonnet.BatchNorm",
   "tensorflow.GraphKeys.UPDATE_OPS",
   "tensorflow.float16",
   "tensorflow.float32",
   "tensorflow.float64",
   "tensorflow.get_collection",
   "tensorflow.global_variables_initializer",
   "tensorflow.name_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testCheckStatsInGraph": {
  "lineno": 278,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.ones",
   "numpy.reshape",
   "numpy.sqrt",
   "numpy.zeros",
   "sonnet.BatchNorm",
   "tensorflow.GraphKeys.UPDATE_OPS",
   "tensorflow.bool",
   "tensorflow.control_dependencies",
   "tensorflow.get_collection",
   "tensorflow.global_variables_initializer",
   "tensorflow.identity",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testCheckStatsPython": {
  "lineno": 237,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.reshape",
   "numpy.sqrt",
   "numpy.zeros",
   "sonnet.BatchNorm",
   "tensorflow.GraphKeys.UPDATE_OPS",
   "tensorflow.control_dependencies",
   "tensorflow.get_collection",
   "tensorflow.global_variables_initializer",
   "tensorflow.identity"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testConstruct": {
  "lineno": 33,
  "symbols_in_volume": [
   "sonnet.BatchNorm",
   "sonnet.Error",
   "tensorflow.bool",
   "tensorflow.constant",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testDataType": {
  "lineno": 108,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.BatchNorm",
   "tensorflow.float32",
   "tensorflow.float64",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testFusedBatchNorm": {
  "lineno": 545,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.random.random",
   "sonnet.BatchNorm",
   "tensorflow.bool",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testFusedBatchNormFloat16": {
  "lineno": 602,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.random.random",
   "sonnet.BatchNorm",
   "tensorflow.float16",
   "tensorflow.global_variables_initializer",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testInitializers": {
  "lineno": 454,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.ones",
   "sonnet.BatchNorm",
   "tensorflow.constant_initializer",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testInvalidInitializerParameters": {
  "lineno": 427,
  "symbols_in_volume": [
   "sonnet.BatchNorm",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testInvalidPartitionerParameters": {
  "lineno": 436,
  "symbols_in_volume": [
   "sonnet.BatchNorm",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testInvalidRegularizationParameters": {
  "lineno": 445,
  "symbols_in_volume": [
   "sonnet.BatchNorm",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testPartitioners": {
  "lineno": 520,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.BatchNorm",
   "tensorflow.fixed_size_partitioner",
   "tensorflow.float32",
   "tensorflow.placeholder",
   "tensorflow.python.ops.variables.PartitionedVariable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testReductionIndices": {
  "lineno": 71,
  "symbols_in_volume": [
   "sonnet.BatchNorm",
   "sonnet.IncompatibleShapeError",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testRegularizersInRegularizationLosses": {
  "lineno": 490,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.BatchNorm",
   "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.contrib.layers.l2_regularizer",
   "tensorflow.float32",
   "tensorflow.get_collection",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testSharing": {
  "lineno": 354,
  "symbols_in_volume": [
   "sonnet.BatchNorm",
   "tensorflow.GraphKeys.GLOBAL_VARIABLES",
   "tensorflow.GraphKeys.UPDATE_OPS",
   "tensorflow.float32",
   "tensorflow.get_collection",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testUpdateImproveStatistics": {
  "lineno": 145,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.max",
   "numpy.zeros",
   "sonnet.BatchNorm",
   "tensorflow.GraphKeys.UPDATE_OPS",
   "tensorflow.get_collection",
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testUpdatesInsideCond": {
  "lineno": 371,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.zeros",
   "sonnet.BatchNorm",
   "tensorflow.GraphKeys.UPDATE_OPS",
   "tensorflow.bool",
   "tensorflow.cond",
   "tensorflow.get_collection",
   "tensorflow.global_variables_initializer",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_test.BatchNormTest.testVariableBatchSize": {
  "lineno": 402,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.sqrt",
   "sonnet.BatchNorm",
   "tensorflow.GraphKeys.UPDATE_OPS",
   "tensorflow.float32",
   "tensorflow.get_collection",
   "tensorflow.global_variables_initializer",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2": {
  "lineno": 60,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule",
   "sonnet.python.modules.conv.SUPPORTED_1D_DATA_FORMATS",
   "sonnet.python.modules.conv.SUPPORTED_2D_DATA_FORMATS",
   "sonnet.python.modules.conv.SUPPORTED_3D_DATA_FORMATS"
  ],
  "type": "class"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2.__init__": {
  "lineno": 148,
  "symbols_in_volume": [
   "sonnet.python.modules.util.check_initializers",
   "sonnet.python.modules.util.check_partitioners",
   "sonnet.python.modules.util.check_regularizers"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2._batch_norm_op": {
  "lineno": 406,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.nn.batch_normalization",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2._build": {
  "lineno": 496,
  "symbols_in_volume": [
   "sonnet.python.modules.base.IncompatibleShapeError",
   "sonnet.python.modules.base.NotSupportedError",
   "tensorflow.add_to_collection",
   "tensorflow.bfloat16",
   "tensorflow.control_dependencies",
   "tensorflow.float16",
   "tensorflow.float32",
   "tensorflow.identity"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2._build_scale_offset": {
  "lineno": 460,
  "symbols_in_volume": [
   "tensorflow.float16",
   "tensorflow.float32",
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2._build_statistics": {
  "lineno": 217,
  "symbols_in_volume": [
   "tensorflow.GraphKeys.GLOBAL_VARIABLES",
   "tensorflow.GraphKeys.MOVING_AVERAGE_VARIABLES",
   "tensorflow.get_variable",
   "tensorflow.python.layers.utils.smart_cond"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2._build_statistics.build_batch_stats": {
  "lineno": 256,
  "symbols_in_volume": [
   "tensorflow.nn.moments"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2._build_statistics.build_moving_stats": {
  "lineno": 263,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.identity"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2._build_update_ops": {
  "lineno": 287,
  "symbols_in_volume": [
   "tensorflow.python.layers.utils.constant_value",
   "tensorflow.python.layers.utils.smart_cond"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2._build_update_ops.build_no_ops": {
  "lineno": 320,
  "symbols_in_volume": [
   "tensorflow.no_op"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2._build_update_ops.build_update_ops": {
  "lineno": 301,
  "symbols_in_volume": [
   "tensorflow.python.training.moving_averages.assign_moving_average",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2._fused_batch_norm_op": {
  "lineno": 336,
  "symbols_in_volume": [
   "numpy.int32",
   "numpy.prod",
   "tensorflow.convert_to_tensor",
   "tensorflow.python.layers.utils.smart_cond",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2._fused_batch_norm_op.moving_average_fused_batch_norm": {
  "lineno": 388,
  "symbols_in_volume": [
   "tensorflow.nn.fused_batch_norm"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2._fused_batch_norm_op.use_batch_stats_fused_batch_norm": {
  "lineno": 380,
  "symbols_in_volume": [
   "tensorflow.nn.fused_batch_norm"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2.beta": {
  "lineno": 607,
  "symbols_in_volume": [
   "sonnet.python.modules.base.Error",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2.gamma": {
  "lineno": 617,
  "symbols_in_volume": [
   "sonnet.python.modules.base.Error",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2.initializers": {
  "lineno": 585,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2.moving_mean": {
  "lineno": 597,
  "symbols_in_volume": [
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2.moving_variance": {
  "lineno": 602,
  "symbols_in_volume": [
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2.partitioners": {
  "lineno": 589,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.BatchNormV2.regularizers": {
  "lineno": 593,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.create_beta_initializer": {
  "lineno": 40,
  "symbols_in_volume": [
   "tensorflow.zeros_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.create_gamma_initializer": {
  "lineno": 45,
  "symbols_in_volume": [
   "tensorflow.ones_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.create_mean_initializer": {
  "lineno": 50,
  "symbols_in_volume": [
   "tensorflow.zeros_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2.create_variance_initializer": {
  "lineno": 55,
  "symbols_in_volume": [
   "tensorflow.ones_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test": {
  "lineno": 31,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test._get_inputs": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.array",
   "tensorflow.constant",
   "tensorflow.float32"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.test16Bit": {
  "lineno": 124,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.BatchNormV2",
   "tensorflow.bfloat16",
   "tensorflow.float16",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testCheckStatsDouble": {
  "lineno": 175,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.ones",
   "numpy.reshape",
   "numpy.zeros",
   "sonnet.BatchNormV2",
   "tensorflow.GraphKeys.UPDATE_OPS",
   "tensorflow.float16",
   "tensorflow.float32",
   "tensorflow.get_collection",
   "tensorflow.global_variables_initializer",
   "tensorflow.name_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testCheckStatsInGraph": {
  "lineno": 292,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.ones",
   "numpy.reshape",
   "numpy.sqrt",
   "numpy.zeros",
   "sonnet.BatchNormV2",
   "tensorflow.GraphKeys.UPDATE_OPS",
   "tensorflow.bool",
   "tensorflow.control_dependencies",
   "tensorflow.get_collection",
   "tensorflow.global_variables_initializer",
   "tensorflow.identity",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testCheckStatsPython": {
  "lineno": 246,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.reshape",
   "numpy.sqrt",
   "numpy.zeros",
   "sonnet.BatchNormV2",
   "tensorflow.GraphKeys.UPDATE_OPS",
   "tensorflow.control_dependencies",
   "tensorflow.get_collection",
   "tensorflow.global_variables_initializer",
   "tensorflow.identity"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testCheckpointCompatibility": {
  "lineno": 649,
  "symbols_in_volume": [
   "os.path.join",
   "sonnet.BatchNormV2",
   "sonnet.get_saver",
   "tensorflow.errors.InvalidArgumentError",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testConstruct": {
  "lineno": 33,
  "symbols_in_volume": [
   "sonnet.BatchNormV2",
   "sonnet.Error",
   "tensorflow.bool",
   "tensorflow.constant",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testDataFormats": {
  "lineno": 71,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.BatchNormV2",
   "sonnet.IncompatibleShapeError",
   "tensorflow.placeholder_with_default",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testDataType": {
  "lineno": 110,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.BatchNormV2",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testFusedBatchNormFloat16": {
  "lineno": 621,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.random.random",
   "sonnet.BatchNormV2",
   "tensorflow.float16",
   "tensorflow.global_variables_initializer",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testFusedBatchNormV2": {
  "lineno": 575,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.random.random",
   "sonnet.BatchNormV2",
   "tensorflow.bool",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testInitializers": {
  "lineno": 475,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.ones",
   "sonnet.BatchNormV2",
   "tensorflow.constant_initializer",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testInvalidInitializerParameters": {
  "lineno": 448,
  "symbols_in_volume": [
   "sonnet.BatchNormV2",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testInvalidPartitionerParameters": {
  "lineno": 457,
  "symbols_in_volume": [
   "sonnet.BatchNormV2",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testInvalidRegularizationParameters": {
  "lineno": 466,
  "symbols_in_volume": [
   "sonnet.BatchNormV2",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testPartitioners": {
  "lineno": 547,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.BatchNormV2",
   "tensorflow.fixed_size_partitioner",
   "tensorflow.float32",
   "tensorflow.global_variables",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testRegularizersInRegularizationLosses": {
  "lineno": 514,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.BatchNormV2",
   "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.contrib.layers.l2_regularizer",
   "tensorflow.float32",
   "tensorflow.get_collection",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testSharing": {
  "lineno": 369,
  "symbols_in_volume": [
   "sonnet.BatchNormV2",
   "tensorflow.GraphKeys.GLOBAL_VARIABLES",
   "tensorflow.GraphKeys.UPDATE_OPS",
   "tensorflow.float32",
   "tensorflow.get_collection",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testUpdateImproveStatistics": {
  "lineno": 146,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.max",
   "numpy.zeros",
   "sonnet.BatchNormV2",
   "tensorflow.GraphKeys.UPDATE_OPS",
   "tensorflow.get_collection",
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testUpdatesInsideCond": {
  "lineno": 389,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.zeros",
   "sonnet.BatchNormV2",
   "tensorflow.GraphKeys.UPDATE_OPS",
   "tensorflow.bool",
   "tensorflow.cond",
   "tensorflow.get_collection",
   "tensorflow.global_variables_initializer",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.batch_norm_v2_test.BatchNormV2Test.testVariableBatchSize": {
  "lineno": 422,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.sqrt",
   "sonnet.BatchNormV2",
   "tensorflow.GraphKeys.UPDATE_OPS",
   "tensorflow.float32",
   "tensorflow.get_collection",
   "tensorflow.global_variables_initializer",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.block_matrix": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.python.modules.block_matrix.BlockDiagonalMatrix": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.block_matrix.BlockDiagonalMatrix.__init__": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.block_matrix.BlockTriangularMatrix": {
  "lineno": 27,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.block_matrix.BlockTriangularMatrix.__init__": {
  "lineno": 50,
  "symbols_in_volume": [
   "six.moves.xrange"
  ],
  "type": "function"
 },
 "sonnet.python.modules.block_matrix.BlockTriangularMatrix._build": {
  "lineno": 116,
  "symbols_in_volume": [
   "six.moves.xrange",
   "tensorflow.concat",
   "tensorflow.pad",
   "tensorflow.reshape",
   "tensorflow.shape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.block_matrix.BlockTriangularMatrix._content_blocks": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.block_matrix.BlockTriangularMatrix._left_zero_blocks": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.block_matrix.BlockTriangularMatrix._right_zero_blocks": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.block_matrix.BlockTriangularMatrix.block_shape": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.block_matrix.BlockTriangularMatrix.block_size": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.block_matrix.BlockTriangularMatrix.input_size": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.block_matrix.BlockTriangularMatrix.num_blocks": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.block_matrix.BlockTriangularMatrix.output_shape": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.block_matrix_test": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.modules.block_matrix_test.BlockDiagonalMatrixTest": {
  "lineno": 153,
  "symbols_in_volume": [
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.block_matrix_test.BlockDiagonalMatrixTest.test_default": {
  "lineno": 155,
  "symbols_in_volume": [
   "numpy.array",
   "sonnet.python.modules.block_matrix.BlockDiagonalMatrix"
  ],
  "type": "function"
 },
 "sonnet.python.modules.block_matrix_test.BlockDiagonalMatrixTest.test_properties": {
  "lineno": 175,
  "symbols_in_volume": [
   "sonnet.python.modules.block_matrix.BlockDiagonalMatrix"
  ],
  "type": "function"
 },
 "sonnet.python.modules.block_matrix_test.BlockTriangularMatrixTest": {
  "lineno": 33,
  "symbols_in_volume": [
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.block_matrix_test.BlockTriangularMatrixTest._check_output_size": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.block_matrix_test.BlockTriangularMatrixTest.test_batch": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.array",
   "sonnet.python.modules.block_matrix.BlockTriangularMatrix"
  ],
  "type": "function"
 },
 "sonnet.python.modules.block_matrix_test.BlockTriangularMatrixTest.test_lower": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.array",
   "sonnet.python.modules.block_matrix.BlockTriangularMatrix"
  ],
  "type": "function"
 },
 "sonnet.python.modules.block_matrix_test.BlockTriangularMatrixTest.test_lower_no_diagonal": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.array",
   "sonnet.python.modules.block_matrix.BlockTriangularMatrix"
  ],
  "type": "function"
 },
 "sonnet.python.modules.block_matrix_test.BlockTriangularMatrixTest.test_upper": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.array",
   "sonnet.python.modules.block_matrix.BlockTriangularMatrix"
  ],
  "type": "function"
 },
 "sonnet.python.modules.block_matrix_test.BlockTriangularMatrixTest.test_upper_no_diagonal": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.array",
   "sonnet.python.modules.block_matrix.BlockTriangularMatrix"
  ],
  "type": "function"
 },
 "sonnet.python.modules.block_matrix_test.create_input": {
  "lineno": 28,
  "symbols_in_volume": [
   "tensorflow.range",
   "tensorflow.reshape",
   "tensorflow.to_float"
  ],
  "type": "function"
 },
 "sonnet.python.modules.clip_gradient": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.python.modules.clip_gradient._clip_gradient_op": {
  "lineno": 25,
  "symbols_in_volume": [
   "tensorflow.python.framework.function.Defun"
  ],
  "type": "function"
 },
 "sonnet.python.modules.clip_gradient._clip_gradient_op.clip_gradient_backward": {
  "lineno": 44,
  "symbols_in_volume": [
   "tensorflow.clip_by_value"
  ],
  "type": "function"
 },
 "sonnet.python.modules.clip_gradient._clip_gradient_op.clip_gradient_forward": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.clip_gradient.clip_gradient": {
  "lineno": 62,
  "symbols_in_volume": [
   "tensorflow.convert_to_tensor",
   "tensorflow.name_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.clip_gradient_test": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.modules.clip_gradient_test.ClipGradientTest": {
  "lineno": 29,
  "symbols_in_volume": [
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.clip_gradient_test.ClipGradientTest.testOpClip": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.array",
   "sonnet.clip_gradient",
   "tensorflow.float32",
   "tensorflow.gradients",
   "tensorflow.placeholder",
   "tensorflow.reduce_sum"
  ],
  "type": "function"
 },
 "sonnet.python.modules.clip_gradient_test.ClipGradientTest.testOpClipDifferentClipValues": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.array",
   "sonnet.clip_gradient",
   "tensorflow.float32",
   "tensorflow.gradients",
   "tensorflow.placeholder",
   "tensorflow.reduce_sum"
  ],
  "type": "function"
 },
 "sonnet.python.modules.clip_gradient_test.ClipGradientTest.testOpClipDifferentDtypes": {
  "lineno": 73,
  "symbols_in_volume": [
   "sonnet.clip_gradient",
   "tensorflow.float16",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.clip_gradient_test.ClipGradientTest.testShape": {
  "lineno": 81,
  "symbols_in_volume": [
   "sonnet.clip_gradient",
   "tensorflow.float32",
   "tensorflow.gradients",
   "tensorflow.placeholder",
   "tensorflow.reduce_sum"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.python.modules.conv.CausalConv1D": {
  "lineno": 1548,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.conv.CausalConv1D.__init__": {
  "lineno": 1560,
  "symbols_in_volume": [
   "sonnet.python.modules.util.deprecation_warning"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv.Conv1D": {
  "lineno": 1280,
  "symbols_in_volume": [
   "sonnet.python.modules.base.Transposable"
  ],
  "type": "class"
 },
 "sonnet.python.modules.conv.Conv1D.__init__": {
  "lineno": 1286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv.Conv1D.transpose": {
  "lineno": 1387,
  "symbols_in_volume": [
   "sonnet.python.modules.base.NotSupportedError"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv.Conv1D.transpose.output_shape": {
  "lineno": 1409,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv.Conv1DTranspose": {
  "lineno": 1431,
  "symbols_in_volume": [
   "sonnet.python.modules.base.Transposable"
  ],
  "type": "class"
 },
 "sonnet.python.modules.conv.Conv1DTranspose.__init__": {
  "lineno": 1439,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv.Conv1DTranspose.transpose": {
  "lineno": 1517,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv.Conv2D": {
  "lineno": 1652,
  "symbols_in_volume": [
   "sonnet.python.modules.base.Transposable"
  ],
  "type": "class"
 },
 "sonnet.python.modules.conv.Conv2D.__init__": {
  "lineno": 1658,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv.Conv2D.transpose": {
  "lineno": 1760,
  "symbols_in_volume": [
   "sonnet.python.modules.base.NotSupportedError"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv.Conv2D.transpose.output_shape": {
  "lineno": 1785,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv.Conv2DTranspose": {
  "lineno": 1805,
  "symbols_in_volume": [
   "sonnet.python.modules.base.Transposable"
  ],
  "type": "class"
 },
 "sonnet.python.modules.conv.Conv2DTranspose.__init__": {
  "lineno": 1812,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv.Conv2DTranspose.transpose": {
  "lineno": 1892,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv.Conv3D": {
  "lineno": 1923,
  "symbols_in_volume": [
   "sonnet.python.modules.base.Transposable"
  ],
  "type": "class"
 },
 "sonnet.python.modules.conv.Conv3D.__init__": {
  "lineno": 1929,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv.Conv3D.transpose": {
  "lineno": 2028,
  "symbols_in_volume": [
   "sonnet.python.modules.base.NotSupportedError"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv.Conv3D.transpose.output_shape": {
  "lineno": 2050,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv.Conv3DTranspose": {
  "lineno": 2072,
  "symbols_in_volume": [
   "sonnet.python.modules.base.Transposable"
  ],
  "type": "class"
 },
 "sonnet.python.modules.conv.Conv3DTranspose.__init__": {
  "lineno": 2079,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv.Conv3DTranspose.transpose": {
  "lineno": 2159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv.DepthwiseConv2D": {
  "lineno": 2317,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.conv.DepthwiseConv2D.__init__": {
  "lineno": 2324,
  "symbols_in_volume": [
   "numbers.Integral",
   "tensorflow.Dimension"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv.DepthwiseConv2D._apply_conv": {
  "lineno": 2469,
  "symbols_in_volume": [
   "tensorflow.nn.depthwise_conv2d"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv.DepthwiseConv2D._construct_w": {
  "lineno": 2436,
  "symbols_in_volume": [
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv.DepthwiseConv2D.channel_multiplier": {
  "lineno": 2487,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv.InPlaneConv2D": {
  "lineno": 2182,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.conv.InPlaneConv2D.__init__": {
  "lineno": 2190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv.InPlaneConv2D._apply_conv": {
  "lineno": 2297,
  "symbols_in_volume": [
   "tensorflow.nn.depthwise_conv2d",
   "tensorflow.tile"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv.InPlaneConv2D._construct_w": {
  "lineno": 2270,
  "symbols_in_volume": [
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv.SeparableConv1D": {
  "lineno": 2720,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.conv.SeparableConv1D.__init__": {
  "lineno": 2727,
  "symbols_in_volume": [
   "numbers.Integral",
   "tensorflow.Dimension"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv.SeparableConv1D._apply_conv": {
  "lineno": 2905,
  "symbols_in_volume": [
   "tensorflow.expand_dims",
   "tensorflow.nn.separable_conv2d",
   "tensorflow.squeeze"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv.SeparableConv1D._construct_w": {
  "lineno": 2857,
  "symbols_in_volume": [
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv.SeparableConv1D.channel_multiplier": {
  "lineno": 2942,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv.SeparableConv1D.get_possible_initializer_keys": {
  "lineno": 2853,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv.SeparableConv1D.w_dw": {
  "lineno": 2947,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv.SeparableConv1D.w_pw": {
  "lineno": 2953,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv.SeparableConv2D": {
  "lineno": 2493,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.conv.SeparableConv2D.__init__": {
  "lineno": 2500,
  "symbols_in_volume": [
   "numbers.Integral",
   "tensorflow.Dimension"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv.SeparableConv2D._apply_conv": {
  "lineno": 2679,
  "symbols_in_volume": [
   "tensorflow.nn.separable_conv2d"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv.SeparableConv2D._construct_w": {
  "lineno": 2631,
  "symbols_in_volume": [
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv.SeparableConv2D.channel_multiplier": {
  "lineno": 2702,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv.SeparableConv2D.get_possible_initializer_keys": {
  "lineno": 2627,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv.SeparableConv2D.w_dw": {
  "lineno": 2707,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv.SeparableConv2D.w_pw": {
  "lineno": 2713,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND": {
  "lineno": 372,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.conv._ConvND.__init__": {
  "lineno": 379,
  "symbols_in_volume": [
   "collections.Iterable",
   "numpy.ndarray",
   "sonnet.python.modules.base.IncompatibleShapeError",
   "sonnet.python.modules.base.NotSupportedError",
   "sonnet.python.modules.util.check_initializers",
   "sonnet.python.modules.util.check_partitioners",
   "sonnet.python.modules.util.check_regularizers",
   "tensorflow.Tensor",
   "tensorflow.bfloat16.is_compatible_with",
   "tensorflow.convert_to_tensor",
   "tensorflow.float16.is_compatible_with",
   "tensorflow.float32.is_compatible_with",
   "tensorflow.float64.is_compatible_with"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND._apply_conv": {
  "lineno": 628,
  "symbols_in_volume": [
   "tensorflow.nn.convolution"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND._apply_mask": {
  "lineno": 673,
  "symbols_in_volume": [
   "sonnet.python.modules.base.IncompatibleShapeError",
   "tensorflow.expand_dims"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND._build": {
  "lineno": 520,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND._construct_w": {
  "lineno": 645,
  "symbols_in_volume": [
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND._pad_input": {
  "lineno": 572,
  "symbols_in_volume": [
   "tensorflow.pad"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND._pad_input.pad_amount": {
  "lineno": 604,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.b": {
  "lineno": 777,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.clone": {
  "lineno": 839,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.conv_op_padding": {
  "lineno": 766,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.data_format": {
  "lineno": 820,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.get_possible_initializer_keys": {
  "lineno": 516,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.has_bias": {
  "lineno": 795,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.initializers": {
  "lineno": 800,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.input_channels": {
  "lineno": 832,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.input_shape": {
  "lineno": 826,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.kernel_shape": {
  "lineno": 721,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.mask": {
  "lineno": 815,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.output_channels": {
  "lineno": 712,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.padding": {
  "lineno": 738,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.paddings": {
  "lineno": 761,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.partitioners": {
  "lineno": 805,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.rate": {
  "lineno": 733,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.regularizers": {
  "lineno": 810,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.stride": {
  "lineno": 726,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvND.w": {
  "lineno": 771,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose": {
  "lineno": 867,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.__init__": {
  "lineno": 874,
  "symbols_in_volume": [
   "collections.Iterable",
   "sonnet.python.modules.base.IncompatibleShapeError",
   "sonnet.python.modules.base.NotSupportedError",
   "sonnet.python.modules.util.check_initializers",
   "sonnet.python.modules.util.check_partitioners",
   "sonnet.python.modules.util.check_regularizers"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose._build": {
  "lineno": 994,
  "symbols_in_volume": [
   "sonnet.python.modules.base.IncompatibleShapeError",
   "tensorflow.expand_dims",
   "tensorflow.nn.conv2d_transpose",
   "tensorflow.nn.conv3d_transpose",
   "tensorflow.squeeze"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose._build._default_transpose_size_wrapper": {
  "lineno": 1029,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose._construct_w": {
  "lineno": 1095,
  "symbols_in_volume": [
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose._infer_all_output_dims": {
  "lineno": 1128,
  "symbols_in_volume": [
   "tensorflow.concat",
   "tensorflow.expand_dims",
   "tensorflow.shape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose._recover_shape_information": {
  "lineno": 1159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.b": {
  "lineno": 1229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.conv_op_padding": {
  "lineno": 1218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.get_possible_initializer_keys": {
  "lineno": 990,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.has_bias": {
  "lineno": 1247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.initializers": {
  "lineno": 1252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.input_channels": {
  "lineno": 1273,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.input_shape": {
  "lineno": 1267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.kernel_shape": {
  "lineno": 1194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.output_channels": {
  "lineno": 1185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.output_shape": {
  "lineno": 1204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.padding": {
  "lineno": 1213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.partitioners": {
  "lineno": 1257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.regularizers": {
  "lineno": 1262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.stride": {
  "lineno": 1199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._ConvNDTranspose.w": {
  "lineno": 1223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._apply_bias": {
  "lineno": 325,
  "symbols_in_volume": [
   "tensorflow.get_variable",
   "tensorflow.nn.bias_add",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv._default_transpose_size": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._fill_and_one_pad_stride": {
  "lineno": 236,
  "symbols_in_volume": [
   "collections.Iterable",
   "numbers.Integral",
   "sonnet.python.modules.base.IncompatibleShapeError"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv._fill_and_verify_padding": {
  "lineno": 176,
  "symbols_in_volume": [
   "numbers.Integral",
   "six.string_types"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv._fill_and_verify_parameter_shape": {
  "lineno": 148,
  "symbols_in_volume": [
   "sonnet.python.modules.base.IncompatibleShapeError"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv._fill_shape": {
  "lineno": 110,
  "symbols_in_volume": [
   "numbers.Integral",
   "tensorflow.Dimension"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv._find_channel_index": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._padding_to_conv_op_padding": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._verify_conv_op_supported_padding": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv._verify_inputs": {
  "lineno": 256,
  "symbols_in_volume": [
   "sonnet.python.modules.base.IncompatibleShapeError",
   "sonnet.python.modules.base.UnderspecifiedError",
   "tensorflow.bfloat16.is_compatible_with",
   "tensorflow.float16.is_compatible_with",
   "tensorflow.float32.is_compatible_with"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv.create_bias_initializer": {
  "lineno": 301,
  "symbols_in_volume": [
   "tensorflow.float32",
   "tensorflow.zeros_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv.create_weight_initializer": {
  "lineno": 295,
  "symbols_in_volume": [
   "math.sqrt",
   "numpy.prod",
   "tensorflow.float32",
   "tensorflow.truncated_normal_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.modules.conv_gpu_test.CausalConv1DTestDataFormats": {
  "lineno": 138,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.conv_gpu_test.CausalConv1DTestDataFormats.checkEquality": {
  "lineno": 149,
  "symbols_in_volume": [
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.CausalConv1DTestDataFormats.setUp": {
  "lineno": 143,
  "symbols_in_volume": [
   "tensorflow.python.platform.test.is_gpu_available"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.CausalConv1DTestDataFormats.testCausalConv1DDataFormats": {
  "lineno": 154,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "functools.partial",
   "numpy.float32",
   "numpy.random.random",
   "sonnet.CausalConv1D",
   "tensorflow.constant",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.CausalConv1DTestDataFormats.testCausalConv1DDataFormatsBatchNorm": {
  "lineno": 182,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.float32",
   "numpy.random.random",
   "tensorflow.constant",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.CausalConv1DTestDataFormats.testCausalConv1DDataFormatsBatchNorm.func": {
  "lineno": 186,
  "symbols_in_volume": [
   "functools.partial",
   "sonnet.BatchNorm",
   "sonnet.CausalConv1D",
   "sonnet.Sequential"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv1DTestDataFormats": {
  "lineno": 60,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.conv_gpu_test.Conv1DTestDataFormats.checkEquality": {
  "lineno": 71,
  "symbols_in_volume": [
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv1DTestDataFormats.setUp": {
  "lineno": 65,
  "symbols_in_volume": [
   "tensorflow.python.platform.test.is_gpu_available"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv1DTestDataFormats.testConv1DDataFormats": {
  "lineno": 76,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "functools.partial",
   "numpy.float32",
   "numpy.random.random",
   "sonnet.Conv1D",
   "tensorflow.constant",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv1DTestDataFormats.testConv1DDataFormatsBatchNorm": {
  "lineno": 104,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.float32",
   "numpy.random.random",
   "tensorflow.constant",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv1DTestDataFormats.testConv1DDataFormatsBatchNorm.func": {
  "lineno": 108,
  "symbols_in_volume": [
   "functools.partial",
   "sonnet.BatchNorm",
   "sonnet.Conv1D",
   "sonnet.Sequential"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv1DTransposeTestDataFormats": {
  "lineno": 376,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.conv_gpu_test.Conv1DTransposeTestDataFormats.checkEquality": {
  "lineno": 387,
  "symbols_in_volume": [
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv1DTransposeTestDataFormats.setUp": {
  "lineno": 381,
  "symbols_in_volume": [
   "tensorflow.python.platform.test.is_gpu_available"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv1DTransposeTestDataFormats.testConv1DTransposeDataFormats": {
  "lineno": 392,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "functools.partial",
   "numpy.ceil",
   "numpy.float32",
   "numpy.random.random",
   "sonnet.Conv1DTranspose",
   "tensorflow.constant",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv1DTransposeTestDataFormats.testConv1DTransposeDataFormatsBatchNorm": {
  "lineno": 425,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.float32",
   "numpy.random.random",
   "tensorflow.constant",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv1DTransposeTestDataFormats.testConv1DTransposeDataFormatsBatchNorm.func": {
  "lineno": 429,
  "symbols_in_volume": [
   "functools.partial",
   "sonnet.BatchNorm",
   "sonnet.Conv1DTranspose",
   "sonnet.Sequential"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv2DTestDataFormats": {
  "lineno": 216,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.conv_gpu_test.Conv2DTestDataFormats.checkEquality": {
  "lineno": 227,
  "symbols_in_volume": [
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv2DTestDataFormats.setUp": {
  "lineno": 221,
  "symbols_in_volume": [
   "tensorflow.python.platform.test.is_gpu_available"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv2DTestDataFormats.testConv2DDataFormats": {
  "lineno": 232,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "functools.partial",
   "numpy.float32",
   "numpy.random.random",
   "sonnet.Conv2D",
   "tensorflow.constant",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv2DTestDataFormats.testConv2DDataFormatsBatchNorm": {
  "lineno": 261,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.float32",
   "numpy.random.random",
   "tensorflow.constant",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv2DTestDataFormats.testConv2DDataFormatsBatchNorm.func": {
  "lineno": 265,
  "symbols_in_volume": [
   "functools.partial",
   "sonnet.BatchNorm",
   "sonnet.Conv2D",
   "sonnet.Sequential"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv2DTransposeTestDataFormats": {
  "lineno": 460,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.conv_gpu_test.Conv2DTransposeTestDataFormats.checkEquality": {
  "lineno": 471,
  "symbols_in_volume": [
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv2DTransposeTestDataFormats.setUp": {
  "lineno": 465,
  "symbols_in_volume": [
   "tensorflow.python.platform.test.is_gpu_available"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv2DTransposeTestDataFormats.testConv2DTransposeDataFormats": {
  "lineno": 476,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "functools.partial",
   "numpy.ceil",
   "numpy.float32",
   "numpy.random.random",
   "sonnet.Conv2DTranspose",
   "tensorflow.constant",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv2DTransposeTestDataFormats.testConv2DTransposeDataFormatsBatchNorm": {
  "lineno": 512,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.float32",
   "numpy.random.random",
   "tensorflow.constant",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv2DTransposeTestDataFormats.testConv2DTransposeDataFormatsBatchNorm.func": {
  "lineno": 516,
  "symbols_in_volume": [
   "functools.partial",
   "sonnet.BatchNorm",
   "sonnet.Conv2DTranspose",
   "sonnet.Sequential"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv3DTestDataFormats": {
  "lineno": 296,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.conv_gpu_test.Conv3DTestDataFormats.checkEquality": {
  "lineno": 307,
  "symbols_in_volume": [
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv3DTestDataFormats.setUp": {
  "lineno": 301,
  "symbols_in_volume": [
   "tensorflow.python.platform.test.is_gpu_available"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv3DTestDataFormats.testConv3DDataFormats": {
  "lineno": 312,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "functools.partial",
   "numpy.float32",
   "numpy.random.random",
   "sonnet.Conv3D",
   "tensorflow.constant",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv3DTestDataFormats.testConv3DDataFormatsBatchNorm": {
  "lineno": 341,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.float32",
   "numpy.random.random",
   "tensorflow.constant",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv3DTestDataFormats.testConv3DDataFormatsBatchNorm.func": {
  "lineno": 345,
  "symbols_in_volume": [
   "functools.partial",
   "sonnet.BatchNorm",
   "sonnet.Conv3D",
   "sonnet.Sequential"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv3DTransposeTestDataFormats": {
  "lineno": 549,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.conv_gpu_test.Conv3DTransposeTestDataFormats.checkEquality": {
  "lineno": 560,
  "symbols_in_volume": [
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv3DTransposeTestDataFormats.setUp": {
  "lineno": 554,
  "symbols_in_volume": [
   "tensorflow.python.platform.test.is_gpu_available"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv3DTransposeTestDataFormats.testConv3DTransposeDataFormats": {
  "lineno": 565,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "functools.partial",
   "numpy.ceil",
   "numpy.float32",
   "numpy.random.random",
   "sonnet.Conv3DTranspose",
   "tensorflow.constant",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv3DTransposeTestDataFormats.testConv3DTransposeDataFormatsBatchNorm": {
  "lineno": 603,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.float32",
   "numpy.random.random",
   "tensorflow.constant",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.Conv3DTransposeTestDataFormats.testConv3DTransposeDataFormatsBatchNorm.func": {
  "lineno": 607,
  "symbols_in_volume": [
   "functools.partial",
   "sonnet.BatchNorm",
   "sonnet.Conv3DTranspose",
   "sonnet.Sequential"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.create_custom_field_getter": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.create_custom_field_getter.custom_getter": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv_gpu_test.create_initializers": {
  "lineno": 45,
  "symbols_in_volume": [
   "tensorflow.constant_initializer",
   "tensorflow.truncated_normal_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test": {
  "lineno": null,
  "symbols_in_volume": [
   "sonnet.CAUSAL",
   "sonnet.FULL",
   "sonnet.REVERSE_CAUSAL",
   "sonnet.SAME",
   "sonnet.VALID",
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.modules.conv_test.CausalConv1DTest": {
  "lineno": 2136,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.conv_test.CausalConv1DTest.testClone": {
  "lineno": 2257,
  "symbols_in_volume": [
   "sonnet.CausalConv1D",
   "tensorflow.GraphKeys.TRAINABLE_VARIABLES",
   "tensorflow.float32",
   "tensorflow.get_collection",
   "tensorflow.placeholder",
   "tensorflow.trainable_variables"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.CausalConv1DTest.testComputation": {
  "lineno": 2138,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.array",
   "numpy.float32",
   "numpy.ones",
   "numpy.reshape",
   "sonnet.CausalConv1D",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.CausalConv1DTest.testComputationDilated": {
  "lineno": 2190,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.array",
   "numpy.float32",
   "numpy.ones",
   "numpy.reshape",
   "sonnet.CausalConv1D",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.CausalConv1DTest.testComputationStrided": {
  "lineno": 2164,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.array",
   "numpy.float32",
   "numpy.ones",
   "numpy.reshape",
   "sonnet.CausalConv1D",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.CausalConv1DTest.testDataFormatNotSupported": {
  "lineno": 2292,
  "symbols_in_volume": [
   "sonnet.CausalConv1D",
   "sonnet.python.modules.conv.SUPPORTED_1D_DATA_FORMATS",
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.CausalConv1DTest.testSharing": {
  "lineno": 2217,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.float32",
   "numpy.random.randn",
   "sonnet.CausalConv1D",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest": {
  "lineno": 1313,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testClone": {
  "lineno": 1739,
  "symbols_in_volume": [
   "sonnet.Conv1D",
   "tensorflow.GraphKeys.TRAINABLE_VARIABLES",
   "tensorflow.float32",
   "tensorflow.get_collection",
   "tensorflow.placeholder",
   "tensorflow.trainable_variables"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testComputation": {
  "lineno": 1569,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "itertools.product",
   "numpy.asarray",
   "numpy.float32",
   "numpy.ones",
   "sonnet.CAUSAL",
   "sonnet.Conv1D",
   "sonnet.FULL",
   "sonnet.REVERSE_CAUSAL",
   "sonnet.SAME",
   "sonnet.VALID",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testDataFormatNotSupported": {
  "lineno": 1774,
  "symbols_in_volume": [
   "sonnet.Conv1D",
   "sonnet.python.modules.conv.SUPPORTED_1D_DATA_FORMATS",
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testInitializerMutation": {
  "lineno": 1532,
  "symbols_in_volume": [
   "sonnet.Conv1D",
   "tensorflow.constant_initializer",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testInitializers": {
  "lineno": 1490,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.float32",
   "numpy.full",
   "random.random",
   "sonnet.Conv1D",
   "sonnet.SAME",
   "tensorflow.float32",
   "tensorflow.ones",
   "tensorflow.placeholder",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testInputTypeError": {
  "lineno": 1470,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.ones",
   "sonnet.Conv1D",
   "sonnet.VALID",
   "tensorflow.constant",
   "tensorflow.float64",
   "tensorflow.uint32"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testKernelShape": {
  "lineno": 1405,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.Conv1D",
   "sonnet.IncompatibleShapeError"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testMask1D": {
  "lineno": 1638,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.ones",
   "numpy.reshape",
   "sonnet.Conv1D",
   "sonnet.VALID",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testMask2D": {
  "lineno": 1655,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.ones",
   "numpy.reshape",
   "sonnet.Conv1D",
   "sonnet.VALID",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testMask3D": {
  "lineno": 1672,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.ones",
   "numpy.reshape",
   "sonnet.Conv1D",
   "sonnet.VALID",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testMaskErrorIfIncorrectDtype": {
  "lineno": 1728,
  "symbols_in_volume": [
   "sonnet.Conv1D",
   "tensorflow.constant",
   "tensorflow.int32"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testMaskErrorIncompatibleRank1": {
  "lineno": 1689,
  "symbols_in_volume": [
   "numpy.ones",
   "sonnet.Conv1D",
   "sonnet.Error",
   "tensorflow.constant",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testMaskErrorIncompatibleRank2": {
  "lineno": 1702,
  "symbols_in_volume": [
   "numpy.ones",
   "sonnet.Conv1D",
   "sonnet.Error",
   "tensorflow.constant",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testMaskErrorIncompatibleRank3": {
  "lineno": 1715,
  "symbols_in_volume": [
   "numpy.ones",
   "sonnet.Conv1D",
   "sonnet.Error",
   "tensorflow.constant",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testRateAndStrideError": {
  "lineno": 1460,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.Conv1D",
   "sonnet.NotSupportedError"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testRateError": {
  "lineno": 1439,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.Conv1D",
   "sonnet.IncompatibleShapeError"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testRegularizersInRegularizationLosses": {
  "lineno": 1549,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.Conv1D",
   "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.float32",
   "tensorflow.get_collection",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testShapes": {
  "lineno": 1315,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "itertools.product",
   "random.randint",
   "sonnet.Conv1D",
   "sonnet.python.modules.conv.ALLOWED_PADDINGS",
   "sonnet.python.modules.conv.DATA_FORMAT_NWC",
   "sonnet.python.modules.conv.SUPPORTED_1D_DATA_FORMATS",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testShapesNotKnown": {
  "lineno": 1368,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.zeros",
   "sonnet.Conv1D",
   "sonnet.SAME",
   "tensorflow.float32",
   "tensorflow.placeholder",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testSharing": {
  "lineno": 1601,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.float32",
   "numpy.random.randn",
   "sonnet.Conv1D",
   "sonnet.SAME",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTest.testStrideError": {
  "lineno": 1420,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.Conv1D",
   "sonnet.IncompatibleShapeError"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTransposeTest": {
  "lineno": 1785,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "sonnet.SAME",
   "sonnet.VALID",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.conv_test.Conv1DTransposeTest.testInitializerMutation": {
  "lineno": 2117,
  "symbols_in_volume": [
   "sonnet.Conv1DTranspose",
   "tensorflow.Dimension",
   "tensorflow.constant_initializer",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTransposeTest.testInputTypeError": {
  "lineno": 1960,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "numpy.ones",
   "sonnet.Conv1DTranspose",
   "tensorflow.constant",
   "tensorflow.float64",
   "tensorflow.uint32"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTransposeTest.testKernelShape": {
  "lineno": 1886,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.Conv1DTranspose",
   "sonnet.IncompatibleShapeError"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTransposeTest.testKernelsNotSpecified": {
  "lineno": 1811,
  "symbols_in_volume": [
   "sonnet.Conv1DTranspose"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTransposeTest.testMissingBatchSize": {
  "lineno": 1816,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "numpy.zeros",
   "sonnet.Conv1DTranspose",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTransposeTest.testShapesSame": {
  "lineno": 1846,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.Conv1DTranspose",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTransposeTest.testSharing": {
  "lineno": 1983,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "numpy.float32",
   "numpy.random.randn",
   "sonnet.Conv1DTranspose",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTransposeTest.testStrideError": {
  "lineno": 1924,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.Conv1DTranspose",
   "sonnet.IncompatibleShapeError"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTransposeTest.testTransposeNCW": {
  "lineno": 2070,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "numpy.float32",
   "numpy.random.randn",
   "sonnet.Conv1DTranspose",
   "sonnet.NotConnectedError",
   "sonnet.python.modules.conv.DATA_FORMAT_NCW",
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv1DTransposeTest.testTransposeNWC": {
  "lineno": 2023,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "numpy.float32",
   "numpy.random.randn",
   "sonnet.Conv1DTranspose",
   "sonnet.NotConnectedError",
   "sonnet.python.modules.conv.DATA_FORMAT_NWC",
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest": {
  "lineno": 419,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testAtrousConvSame": {
  "lineno": 825,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.array",
   "numpy.float32",
   "numpy.ones",
   "numpy.reshape",
   "sonnet.Conv2D",
   "sonnet.SAME",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testAtrousConvValid": {
  "lineno": 802,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.float32",
   "numpy.ones",
   "numpy.reshape",
   "sonnet.Conv2D",
   "sonnet.VALID",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testClone": {
  "lineno": 855,
  "symbols_in_volume": [
   "sonnet.Conv2D",
   "tensorflow.GraphKeys.TRAINABLE_VARIABLES",
   "tensorflow.float32",
   "tensorflow.get_collection",
   "tensorflow.placeholder",
   "tensorflow.trainable_variables"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testComputation": {
  "lineno": 702,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "itertools.product",
   "numpy.asarray",
   "numpy.float32",
   "numpy.ones",
   "sonnet.CAUSAL",
   "sonnet.Conv2D",
   "sonnet.FULL",
   "sonnet.REVERSE_CAUSAL",
   "sonnet.SAME",
   "sonnet.VALID",
   "tensorflow.constant",
   "tensorflow.squeeze",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testDataFormatNotSupported": {
  "lineno": 1055,
  "symbols_in_volume": [
   "sonnet.Conv2D",
   "sonnet.python.modules.conv.SUPPORTED_2D_DATA_FORMATS",
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testInitializerMutation": {
  "lineno": 664,
  "symbols_in_volume": [
   "sonnet.Conv2D",
   "tensorflow.constant_initializer",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testInitializers": {
  "lineno": 628,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.float32",
   "numpy.full",
   "random.random",
   "sonnet.Conv2D",
   "tensorflow.float32",
   "tensorflow.ones",
   "tensorflow.placeholder",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testInputTypeError": {
  "lineno": 608,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.ones",
   "sonnet.Conv2D",
   "sonnet.SAME",
   "tensorflow.constant",
   "tensorflow.float64",
   "tensorflow.uint32"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testKernelShape": {
  "lineno": 535,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.Conv2D",
   "sonnet.IncompatibleShapeError"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testMask1D": {
  "lineno": 914,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.ones",
   "sonnet.Conv2D",
   "sonnet.VALID",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testMask2D": {
  "lineno": 931,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.reshape",
   "sonnet.Conv2D",
   "sonnet.VALID",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testMask3D": {
  "lineno": 954,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.ones",
   "sonnet.Conv2D",
   "sonnet.VALID",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testMask4D": {
  "lineno": 971,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.ones",
   "numpy.reshape",
   "sonnet.Conv2D",
   "sonnet.VALID",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testMaskErrorIfIncorrectDtype": {
  "lineno": 1044,
  "symbols_in_volume": [
   "sonnet.Conv2D",
   "tensorflow.constant",
   "tensorflow.int32"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testMaskErrorIncompatibleRank1": {
  "lineno": 992,
  "symbols_in_volume": [
   "numpy.ones",
   "sonnet.Conv2D",
   "sonnet.Error",
   "tensorflow.constant",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testMaskErrorIncompatibleRank2": {
  "lineno": 1005,
  "symbols_in_volume": [
   "numpy.ones",
   "sonnet.Conv2D",
   "sonnet.Error",
   "tensorflow.constant",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testMaskErrorIncompatibleRank3": {
  "lineno": 1018,
  "symbols_in_volume": [
   "numpy.ones",
   "sonnet.Conv2D",
   "sonnet.Error",
   "tensorflow.constant",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testMaskErrorIncompatibleRank4": {
  "lineno": 1031,
  "symbols_in_volume": [
   "numpy.ones",
   "sonnet.Conv2D",
   "sonnet.Error",
   "tensorflow.constant",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testRateAndStrideError": {
  "lineno": 595,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.Conv2D",
   "sonnet.NotSupportedError"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testRateError": {
  "lineno": 574,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.Conv2D",
   "sonnet.IncompatibleShapeError"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testRegularizersInRegularizationLosses": {
  "lineno": 681,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.Conv2D",
   "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.float32",
   "tensorflow.get_collection",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testShapes": {
  "lineno": 421,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "itertools.product",
   "random.randint",
   "sonnet.Conv2D",
   "sonnet.python.modules.conv.ALLOWED_PADDINGS",
   "sonnet.python.modules.conv.DATA_FORMAT_NHWC",
   "sonnet.python.modules.conv.SUPPORTED_2D_DATA_FORMATS",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testShapesNotKnown": {
  "lineno": 476,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.zeros",
   "sonnet.Conv2D",
   "sonnet.SAME",
   "tensorflow.float32",
   "tensorflow.placeholder",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testShapesNotKnownAtrous": {
  "lineno": 513,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.Conv2D",
   "sonnet.SAME",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testSharing": {
  "lineno": 765,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.float32",
   "numpy.random.randn",
   "sonnet.Conv2D",
   "sonnet.SAME",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testStrideError": {
  "lineno": 552,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.Conv2D",
   "sonnet.IncompatibleShapeError"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTest.testTransposition": {
  "lineno": 890,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.Conv2D",
   "sonnet.NotConnectedError",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTransposeTest": {
  "lineno": 1067,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.conv_test.Conv2DTransposeTest.setUp": {
  "lineno": 1069,
  "symbols_in_volume": [
   "sonnet.SAME"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTransposeTest.testInitializerMutation": {
  "lineno": 1188,
  "symbols_in_volume": [
   "sonnet.Conv2DTranspose",
   "tensorflow.constant_initializer",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTransposeTest.testKernelsNotSpecified": {
  "lineno": 1094,
  "symbols_in_volume": [
   "sonnet.Conv2DTranspose"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTransposeTest.testOutputShapeConsistency": {
  "lineno": 1099,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.Conv2DTranspose",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTransposeTest.testOutputShapeInteger": {
  "lineno": 1136,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.Conv2DTranspose",
   "sonnet.SAME",
   "tensorflow.Dimension",
   "tensorflow.errors.InvalidArgumentError",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTransposeTest.testTransposeNCHW": {
  "lineno": 1259,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.float32",
   "numpy.random.randn",
   "sonnet.Conv2DTranspose",
   "sonnet.NotConnectedError",
   "sonnet.VALID",
   "sonnet.python.modules.conv.DATA_FORMAT_NCHW",
   "tensorflow.TensorShape",
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTransposeTest.testTransposeNHWC": {
  "lineno": 1206,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.float32",
   "numpy.random.randn",
   "sonnet.Conv2DTranspose",
   "sonnet.NotConnectedError",
   "sonnet.VALID",
   "sonnet.python.modules.conv.DATA_FORMAT_NHWC",
   "tensorflow.TensorShape",
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv2DTransposeTest.testTransposition": {
  "lineno": 1163,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.Conv2DTranspose",
   "sonnet.NotConnectedError",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest": {
  "lineno": 3528,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testBiasInitializerIsZeroByDefault": {
  "lineno": 3741,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.zeros",
   "sonnet.Conv3D",
   "tensorflow.float32",
   "tensorflow.placeholder",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testClone": {
  "lineno": 4043,
  "symbols_in_volume": [
   "sonnet.Conv3D",
   "tensorflow.GraphKeys.TRAINABLE_VARIABLES",
   "tensorflow.float32",
   "tensorflow.get_collection",
   "tensorflow.placeholder",
   "tensorflow.trainable_variables"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testComputationSame": {
  "lineno": 3779,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.asarray",
   "numpy.float32",
   "numpy.ones",
   "numpy.reshape",
   "sonnet.Conv3D",
   "sonnet.SAME",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testComputationValid": {
  "lineno": 3817,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.asarray",
   "numpy.float32",
   "numpy.ones",
   "numpy.reshape",
   "sonnet.Conv3D",
   "sonnet.VALID",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testDataFormatNotSupported": {
  "lineno": 4078,
  "symbols_in_volume": [
   "sonnet.Conv3D",
   "sonnet.python.modules.conv.SUPPORTED_3D_DATA_FORMATS",
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testInitializerMutation": {
  "lineno": 3724,
  "symbols_in_volume": [
   "sonnet.Conv3D",
   "tensorflow.constant_initializer",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testInitializers": {
  "lineno": 3689,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.float32",
   "numpy.full",
   "random.random",
   "sonnet.Conv3D",
   "tensorflow.float32",
   "tensorflow.ones",
   "tensorflow.placeholder",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testInputTypeError": {
  "lineno": 3672,
  "symbols_in_volume": [
   "numpy.ones",
   "sonnet.Conv3D",
   "sonnet.SAME",
   "tensorflow.constant",
   "tensorflow.constant_initializer",
   "tensorflow.float64",
   "tensorflow.uint32"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testKernelShape": {
  "lineno": 3611,
  "symbols_in_volume": [
   "sonnet.Conv3D",
   "sonnet.Error"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testMask1D": {
  "lineno": 3882,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.ones",
   "sonnet.Conv3D",
   "sonnet.VALID",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testMask2D": {
  "lineno": 3899,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.ones",
   "sonnet.Conv3D",
   "sonnet.VALID",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testMask3D": {
  "lineno": 3916,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.ones",
   "sonnet.Conv3D",
   "sonnet.VALID",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testMask4D": {
  "lineno": 3933,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.ones",
   "sonnet.Conv3D",
   "sonnet.VALID",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testMask5D": {
  "lineno": 3950,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.ones",
   "sonnet.Conv3D",
   "sonnet.VALID",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testMaskErrorIfIncorrectDtype": {
  "lineno": 4032,
  "symbols_in_volume": [
   "sonnet.Conv3D",
   "tensorflow.constant",
   "tensorflow.int32"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testMaskErrorIncompatibleRank1": {
  "lineno": 3967,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.ones",
   "sonnet.Conv3D",
   "sonnet.Error",
   "tensorflow.constant",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testMaskErrorIncompatibleRank2": {
  "lineno": 3980,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.ones",
   "sonnet.Conv3D",
   "sonnet.Error",
   "tensorflow.constant",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testMaskErrorIncompatibleRank3": {
  "lineno": 3993,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.ones",
   "sonnet.Conv3D",
   "sonnet.Error",
   "tensorflow.constant",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testMaskErrorIncompatibleRank4": {
  "lineno": 4006,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.ones",
   "sonnet.Conv3D",
   "sonnet.Error",
   "tensorflow.constant",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testMaskErrorIncompatibleRank5": {
  "lineno": 4019,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.ones",
   "sonnet.Conv3D",
   "sonnet.Error",
   "tensorflow.constant",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testRateAndStrideError": {
  "lineno": 3659,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.Conv3D",
   "sonnet.NotSupportedError"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testRateError": {
  "lineno": 3638,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.Conv3D",
   "sonnet.IncompatibleShapeError"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testRegularizersInRegularizationLosses": {
  "lineno": 3758,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.Conv3D",
   "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.float32",
   "tensorflow.get_collection",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testShapesSame": {
  "lineno": 3530,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "random.randint",
   "sonnet.Conv3D",
   "sonnet.SAME",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testShapesWithUnknownInputShape": {
  "lineno": 3573,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.zeros",
   "sonnet.Conv3D",
   "sonnet.SAME",
   "tensorflow.float32",
   "tensorflow.placeholder",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testSharing": {
  "lineno": 3845,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.float32",
   "numpy.random.randn",
   "sonnet.Conv3D",
   "sonnet.SAME",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTest.testStrideError": {
  "lineno": 3621,
  "symbols_in_volume": [
   "sonnet.Conv3D",
   "sonnet.Error"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTransposeTest": {
  "lineno": 4089,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.conv_test.Conv3DTransposeTest.setUp": {
  "lineno": 4091,
  "symbols_in_volume": [
   "sonnet.SAME"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTransposeTest.testBiasInitializerIsZeroByDefault": {
  "lineno": 4211,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.zeros",
   "sonnet.Conv3DTranspose",
   "tensorflow.float32",
   "tensorflow.placeholder",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTransposeTest.testKernelsNotSpecified": {
  "lineno": 4124,
  "symbols_in_volume": [
   "sonnet.Conv3DTranspose"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTransposeTest.testOutputShapeConsistency": {
  "lineno": 4128,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.Conv3DTranspose",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTransposeTest.testOutputShapeInference": {
  "lineno": 4192,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.Conv3DTranspose",
   "sonnet.SAME",
   "tensorflow.float32",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTransposeTest.testOutputShapeInteger": {
  "lineno": 4165,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.Conv3DTranspose",
   "sonnet.SAME",
   "tensorflow.errors.InvalidArgumentError",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTransposeTest.testTransposeNCDHW": {
  "lineno": 4299,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.float32",
   "numpy.random.randn",
   "sonnet.Conv3DTranspose",
   "sonnet.NotConnectedError",
   "sonnet.python.modules.conv.DATA_FORMAT_NCDHW",
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTransposeTest.testTransposeNDHWC": {
  "lineno": 4253,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.float32",
   "numpy.random.randn",
   "sonnet.Conv3DTranspose",
   "sonnet.NotConnectedError",
   "sonnet.python.modules.conv.DATA_FORMAT_NDHWC",
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.Conv3DTransposeTest.testTransposition": {
  "lineno": 4228,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.Conv3DTranspose",
   "sonnet.NotConnectedError",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DefaultTransposeSizeTest": {
  "lineno": 96,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "sonnet.SAME",
   "sonnet.VALID",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.conv_test.DefaultTransposeSizeTest.testConnectTwice": {
  "lineno": 143,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.Conv1DTranspose",
   "sonnet.Conv2DTranspose",
   "sonnet.Conv3DTranspose",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DefaultTransposeSizeTest.testFunction": {
  "lineno": 112,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.python.modules.conv._default_transpose_size"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DefaultTransposeSizeTest.testModules": {
  "lineno": 122,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.Conv1DTranspose",
   "sonnet.Conv2DTranspose",
   "sonnet.Conv3DTranspose",
   "tensorflow.float32",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DepthwiseConv2DTest": {
  "lineno": 2360,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.conv_test.DepthwiseConv2DTest.setUp": {
  "lineno": 2362,
  "symbols_in_volume": [
   "random.randint"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DepthwiseConv2DTest.testComputationSame": {
  "lineno": 2564,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.array",
   "numpy.float32",
   "numpy.ones",
   "numpy.reshape",
   "sonnet.DepthwiseConv2D",
   "sonnet.SAME",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DepthwiseConv2DTest.testComputationValid": {
  "lineno": 2592,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.array",
   "numpy.float32",
   "numpy.ones",
   "numpy.reshape",
   "sonnet.DepthwiseConv2D",
   "sonnet.VALID",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DepthwiseConv2DTest.testComputationValidMultiChannel": {
  "lineno": 2618,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.array",
   "numpy.float32",
   "numpy.ones",
   "numpy.reshape",
   "sonnet.DepthwiseConv2D",
   "sonnet.VALID",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DepthwiseConv2DTest.testInitializerMutation": {
  "lineno": 2548,
  "symbols_in_volume": [
   "sonnet.DepthwiseConv2D",
   "tensorflow.constant_initializer",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DepthwiseConv2DTest.testInitializers": {
  "lineno": 2490,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.float32",
   "numpy.full",
   "numpy.random.randn",
   "random.random",
   "sonnet.DepthwiseConv2D",
   "tensorflow.float32",
   "tensorflow.ones",
   "tensorflow.placeholder",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DepthwiseConv2DTest.testInputTypeError": {
  "lineno": 2471,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.ones",
   "sonnet.DepthwiseConv2D",
   "sonnet.SAME",
   "tensorflow.constant",
   "tensorflow.float64",
   "tensorflow.uint32"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DepthwiseConv2DTest.testKernelShape": {
  "lineno": 2434,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.DepthwiseConv2D",
   "sonnet.IncompatibleShapeError"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DepthwiseConv2DTest.testRegularizersInRegularizationLosses": {
  "lineno": 2527,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.DepthwiseConv2D",
   "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.float32",
   "tensorflow.get_collection",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DepthwiseConv2DTest.testShapesNotKnown": {
  "lineno": 2411,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.zeros",
   "sonnet.DepthwiseConv2D",
   "sonnet.SAME",
   "tensorflow.float32",
   "tensorflow.placeholder",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DepthwiseConv2DTest.testShapesSame": {
  "lineno": 2382,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.DepthwiseConv2D",
   "sonnet.SAME",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DepthwiseConv2DTest.testSharing": {
  "lineno": 2643,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.float32",
   "numpy.random.randn",
   "sonnet.DepthwiseConv2D",
   "sonnet.SAME",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.DepthwiseConv2DTest.testStrideError": {
  "lineno": 2448,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.DepthwiseConv2D",
   "sonnet.IncompatibleShapeError"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.FillListTest": {
  "lineno": 67,
  "symbols_in_volume": [
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.conv_test.FillListTest.test": {
  "lineno": 69,
  "symbols_in_volume": [
   "random.randint",
   "sonnet.python.modules.conv._fill_shape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.InPlaneConv2DTest": {
  "lineno": 2304,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.conv_test.InPlaneConv2DTest.testInitializerMutation": {
  "lineno": 2348,
  "symbols_in_volume": [
   "sonnet.InPlaneConv2D",
   "tensorflow.constant_initializer",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.InPlaneConv2DTest.testSameNumberOfOutputAndInputChannels": {
  "lineno": 2306,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "random.randint",
   "sonnet.InPlaneConv2D",
   "sonnet.NotConnectedError",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.InPlaneConv2DTest.testSharing": {
  "lineno": 2326,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.float32",
   "numpy.random.randn",
   "sonnet.InPlaneConv2D",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest": {
  "lineno": 3105,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest.setUp": {
  "lineno": 3107,
  "symbols_in_volume": [
   "random.randint"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest.testComputationSame": {
  "lineno": 3344,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.array",
   "numpy.float32",
   "numpy.ones",
   "sonnet.SAME",
   "sonnet.SeparableConv1D",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest.testComputationSameNon1Rate": {
  "lineno": 3372,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.array",
   "numpy.float32",
   "numpy.ones",
   "sonnet.SAME",
   "sonnet.SeparableConv1D",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest.testComputationValid": {
  "lineno": 3405,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.array",
   "numpy.float32",
   "numpy.ones",
   "sonnet.SeparableConv1D",
   "sonnet.VALID",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest.testComputationValidChannelMultiplier": {
  "lineno": 3459,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.float32",
   "numpy.ones",
   "sonnet.SeparableConv1D",
   "sonnet.VALID",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest.testComputationValidMultiChannel": {
  "lineno": 3432,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.array",
   "numpy.float32",
   "numpy.ones",
   "sonnet.SeparableConv1D",
   "sonnet.VALID",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest.testInitializerMutation": {
  "lineno": 3304,
  "symbols_in_volume": [
   "sonnet.SeparableConv1D",
   "tensorflow.constant_initializer",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest.testInitializers": {
  "lineno": 3260,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.float32",
   "numpy.full",
   "numpy.random.randn",
   "random.random",
   "sonnet.SeparableConv1D",
   "tensorflow.float32",
   "tensorflow.ones",
   "tensorflow.placeholder",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest.testInputTypeError": {
  "lineno": 3240,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.ones",
   "sonnet.SAME",
   "sonnet.SeparableConv1D",
   "tensorflow.constant",
   "tensorflow.float64",
   "tensorflow.uint32"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest.testKernelShape": {
  "lineno": 3185,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.IncompatibleShapeError",
   "sonnet.SeparableConv1D"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest.testRegularizersInRegularizationLosses": {
  "lineno": 3321,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.SeparableConv1D",
   "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.float32",
   "tensorflow.get_collection",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest.testShapesNotKnown": {
  "lineno": 3161,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.zeros",
   "sonnet.SAME",
   "sonnet.SeparableConv1D",
   "tensorflow.float32",
   "tensorflow.placeholder",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest.testShapesSame": {
  "lineno": 3128,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.SAME",
   "sonnet.SeparableConv1D",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest.testSharing": {
  "lineno": 3495,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.float32",
   "numpy.random.randn",
   "sonnet.SeparableConv1D",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv1DTest.testStrideError": {
  "lineno": 3210,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.IncompatibleShapeError",
   "sonnet.SeparableConv1D"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest": {
  "lineno": 2673,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest.setUp": {
  "lineno": 2675,
  "symbols_in_volume": [
   "random.randint"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest.testComputationSame": {
  "lineno": 2913,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.array",
   "numpy.float32",
   "numpy.ones",
   "numpy.reshape",
   "sonnet.SAME",
   "sonnet.SeparableConv2D",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest.testComputationSameNon1Rate": {
  "lineno": 2945,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.array",
   "numpy.float32",
   "numpy.ones",
   "numpy.reshape",
   "sonnet.SAME",
   "sonnet.SeparableConv2D",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest.testComputationValid": {
  "lineno": 2978,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.array",
   "numpy.float32",
   "numpy.ones",
   "numpy.reshape",
   "sonnet.SeparableConv2D",
   "sonnet.VALID",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest.testComputationValidChannelMultiplier": {
  "lineno": 3034,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.float32",
   "numpy.ones",
   "numpy.reshape",
   "sonnet.SeparableConv2D",
   "sonnet.VALID",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest.testComputationValidMultiChannel": {
  "lineno": 3007,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.array",
   "numpy.float32",
   "numpy.ones",
   "numpy.reshape",
   "sonnet.SeparableConv2D",
   "sonnet.VALID",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest.testInitializerMutation": {
  "lineno": 2873,
  "symbols_in_volume": [
   "sonnet.SeparableConv2D",
   "tensorflow.constant_initializer",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest.testInitializers": {
  "lineno": 2829,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.float32",
   "numpy.full",
   "numpy.random.randn",
   "random.random",
   "sonnet.SeparableConv2D",
   "tensorflow.float32",
   "tensorflow.ones",
   "tensorflow.placeholder",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest.testInputTypeError": {
  "lineno": 2809,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.ones",
   "sonnet.SAME",
   "sonnet.SeparableConv2D",
   "tensorflow.constant",
   "tensorflow.float64",
   "tensorflow.uint32"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest.testKernelShape": {
  "lineno": 2755,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.IncompatibleShapeError",
   "sonnet.SeparableConv2D"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest.testRegularizersInRegularizationLosses": {
  "lineno": 2890,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.SeparableConv2D",
   "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.float32",
   "tensorflow.get_collection",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest.testShapesNotKnown": {
  "lineno": 2731,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.zeros",
   "sonnet.SAME",
   "sonnet.SeparableConv2D",
   "tensorflow.float32",
   "tensorflow.placeholder",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest.testShapesSame": {
  "lineno": 2698,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.SAME",
   "sonnet.SeparableConv2D",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest.testSharing": {
  "lineno": 3072,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.float32",
   "numpy.random.randn",
   "sonnet.SeparableConv2D",
   "tensorflow.constant",
   "tensorflow.variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SeparableConv2DTest.testStrideError": {
  "lineno": 2779,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.IncompatibleShapeError",
   "sonnet.SeparableConv2D"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SharedConvTest": {
  "lineno": 183,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "numpy.float64",
   "numpy.zeros",
   "sonnet.CAUSAL",
   "sonnet.Conv1D",
   "sonnet.Conv1DTranspose",
   "sonnet.Conv2D",
   "sonnet.Conv2DTranspose",
   "sonnet.Conv3D",
   "sonnet.Conv3DTranspose",
   "sonnet.DepthwiseConv2D",
   "sonnet.FULL",
   "sonnet.InPlaneConv2D",
   "sonnet.SAME",
   "sonnet.SeparableConv1D",
   "sonnet.SeparableConv2D",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.conv_test.SharedConvTest.testCustomGetter": {
  "lineno": 370,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.NotSupportedError",
   "tensorflow.Tensor",
   "tensorflow.float32",
   "tensorflow.gradients",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SharedConvTest.testCustomGetter.stop_gradient": {
  "lineno": 374,
  "symbols_in_volume": [
   "tensorflow.stop_gradient"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SharedConvTest.testFlattenedError": {
  "lineno": 357,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "itertools.product",
   "sonnet.BatchFlatten",
   "sonnet.IncompatibleShapeError",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SharedConvTest.testMissingChannelsError": {
  "lineno": 334,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "itertools.product",
   "sonnet.IncompatibleShapeError",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SharedConvTest.testNonDefinedChannelsDimension": {
  "lineno": 346,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "itertools.product",
   "sonnet.UnderspecifiedError",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SharedConvTest.testPartitioners": {
  "lineno": 257,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.NotSupportedError",
   "tensorflow.python.ops.variables.PartitionedVariable",
   "tensorflow.variable_axis_size_partitioner",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.SharedConvTest.testVariables": {
  "lineno": 284,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "itertools.product",
   "numpy.random.rand",
   "sonnet.NotConnectedError",
   "tensorflow.GraphKeys.GLOBAL_VARIABLES",
   "tensorflow.float16",
   "tensorflow.float32",
   "tensorflow.get_collection",
   "tensorflow.global_variables_initializer",
   "tensorflow.placeholder",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.create_constant_initializers": {
  "lineno": 35,
  "symbols_in_volume": [
   "tensorflow.constant_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.create_regularizers": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.create_separable_constant_initializers": {
  "lineno": 43,
  "symbols_in_volume": [
   "tensorflow.constant_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.conv_test.create_separable_regularizers": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.embed": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.python.modules.embed.Embed": {
  "lineno": 47,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.embed.Embed.__init__": {
  "lineno": 53,
  "symbols_in_volume": [
   "sonnet.python.modules.util.check_initializers",
   "sonnet.python.modules.util.check_partitioners",
   "sonnet.python.modules.util.check_regularizers",
   "tensorflow.convert_to_tensor",
   "tensorflow.float32"
  ],
  "type": "function"
 },
 "sonnet.python.modules.embed.Embed._build": {
  "lineno": 139,
  "symbols_in_volume": [
   "sonnet.python.modules.util.convert_gradient_to_tensor",
   "tensorflow.float32",
   "tensorflow.get_variable",
   "tensorflow.initializers.random_normal",
   "tensorflow.nn.embedding_lookup"
  ],
  "type": "function"
 },
 "sonnet.python.modules.embed.Embed.embed_dim": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.embed.Embed.embeddings": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.embed.Embed.vocab_size": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.embed._embedding_dim": {
  "lineno": 30,
  "symbols_in_volume": [
   "math.sqrt"
  ],
  "type": "function"
 },
 "sonnet.python.modules.embed_test": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.modules.embed_test.EmbedTest": {
  "lineno": 32,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.embed_test.EmbedTest.setUp": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.asarray",
   "sonnet.Embed"
  ],
  "type": "function"
 },
 "sonnet.python.modules.embed_test.EmbedTest.testComputation": {
  "lineno": 54,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.reshape",
   "sonnet.Embed",
   "tensorflow.constant_initializer",
   "tensorflow.convert_to_tensor",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.embed_test.EmbedTest.testDefaultVocabSize": {
  "lineno": 103,
  "symbols_in_volume": [
   "sonnet.Embed"
  ],
  "type": "function"
 },
 "sonnet.python.modules.embed_test.EmbedTest.testExistingVocab": {
  "lineno": 179,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32",
   "sonnet.Embed",
   "tensorflow.constant",
   "tensorflow.global_variables_initializer",
   "tensorflow.int32"
  ],
  "type": "function"
 },
 "sonnet.python.modules.embed_test.EmbedTest.testInitializers": {
  "lineno": 110,
  "symbols_in_volume": [
   "numpy.zeros_like",
   "sonnet.Embed",
   "tensorflow.convert_to_tensor",
   "tensorflow.global_variables_initializer",
   "tensorflow.zeros_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.embed_test.EmbedTest.testInvalidRegularizationParameters": {
  "lineno": 144,
  "symbols_in_volume": [
   "sonnet.Embed",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.embed_test.EmbedTest.testNegativeIds": {
  "lineno": 92,
  "symbols_in_volume": [
   "tensorflow.convert_to_tensor",
   "tensorflow.errors.InvalidArgumentError",
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.embed_test.EmbedTest.testOutputType": {
  "lineno": 46,
  "symbols_in_volume": [
   "tensorflow.convert_to_tensor",
   "tensorflow.float32"
  ],
  "type": "function"
 },
 "sonnet.python.modules.embed_test.EmbedTest.testPartitioners": {
  "lineno": 126,
  "symbols_in_volume": [
   "sonnet.Embed",
   "tensorflow.convert_to_tensor",
   "tensorflow.global_variables_initializer",
   "tensorflow.python.ops.variables.PartitionedVariable",
   "tensorflow.variable_axis_size_partitioner"
  ],
  "type": "function"
 },
 "sonnet.python.modules.embed_test.EmbedTest.testProperties": {
  "lineno": 169,
  "symbols_in_volume": [
   "sonnet.NotConnectedError",
   "tensorflow.Variable",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "sonnet.python.modules.embed_test.EmbedTest.testRegularizersInRegularizationLosses": {
  "lineno": 158,
  "symbols_in_volume": [
   "sonnet.Embed",
   "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.convert_to_tensor",
   "tensorflow.get_collection"
  ],
  "type": "function"
 },
 "sonnet.python.modules.embed_test.EmbedTest.testVocabTooSmall": {
  "lineno": 80,
  "symbols_in_volume": [
   "tensorflow.convert_to_tensor",
   "tensorflow.errors.InvalidArgumentError",
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM": {
  "lineno": 543,
  "symbols_in_volume": [
   "sonnet.python.modules.rnn_core.RNNCore"
  ],
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.CoreWithExtraBuildArgs": {
  "lineno": 1171,
  "symbols_in_volume": [
   "sonnet.python.modules.rnn_core.RNNCore"
  ],
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.CoreWithExtraBuildArgs.__init__": {
  "lineno": 1178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.CoreWithExtraBuildArgs._build": {
  "lineno": 1192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.CoreWithExtraBuildArgs.output_size": {
  "lineno": 1200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.CoreWithExtraBuildArgs.state_size": {
  "lineno": 1195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.IndexedStatsBatchNorm": {
  "lineno": 1112,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.IndexedStatsBatchNorm.__init__": {
  "lineno": 1133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.IndexedStatsBatchNorm._build": {
  "lineno": 1144,
  "symbols_in_volume": [
   "six.moves.xrange",
   "tensorflow.case",
   "tensorflow.equal"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.IndexedStatsBatchNorm._build.create_batch_norm": {
  "lineno": 1158,
  "symbols_in_volume": [
   "sonnet.python.modules.batch_norm.BatchNorm"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.__init__": {
  "lineno": 630,
  "symbols_in_volume": [
   "sonnet.python.modules.util.check_initializers"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM._build": {
  "lineno": 816,
  "symbols_in_volume": [
   "tensorflow.clip_by_value",
   "tensorflow.concat",
   "tensorflow.matmul",
   "tensorflow.sigmoid",
   "tensorflow.split",
   "tensorflow.tanh"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM._create_batch_norm_variables": {
  "lineno": 922,
  "symbols_in_volume": [
   "tensorflow.constant_initializer",
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM._create_gate_variables": {
  "lineno": 961,
  "symbols_in_volume": [
   "sonnet.python.modules.basic.create_linear_initializer",
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM._create_peephole_variables": {
  "lineno": 1004,
  "symbols_in_volume": [
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.get_possible_initializer_keys": {
  "lineno": 769,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.initial_state": {
  "lineno": 1028,
  "symbols_in_volume": [
   "sonnet.python.modules.rnn_core.trainable_initial_state",
   "tensorflow.TensorShape",
   "tensorflow.constant",
   "tensorflow.float32",
   "tensorflow.int32",
   "tensorflow.name_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.output_size": {
  "lineno": 1087,
  "symbols_in_volume": [
   "tensorflow.TensorShape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.state_size": {
  "lineno": 1076,
  "symbols_in_volume": [
   "tensorflow.TensorShape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.use_batch_norm_c": {
  "lineno": 1107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.use_batch_norm_h": {
  "lineno": 1097,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.use_batch_norm_x": {
  "lineno": 1102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.use_peepholes": {
  "lineno": 1092,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.BatchNormLSTM.with_batch_norm_control": {
  "lineno": 742,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.Conv1DLSTM": {
  "lineno": 1402,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn.Conv1DLSTM.__init__": {
  "lineno": 1409,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.Conv1DLSTM.get_possible_initializer_keys": {
  "lineno": 1405,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.Conv2DLSTM": {
  "lineno": 1414,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn.Conv2DLSTM.__init__": {
  "lineno": 1422,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.Conv2DLSTM.get_possible_initializer_keys": {
  "lineno": 1418,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ConvLSTM": {
  "lineno": 1206,
  "symbols_in_volume": [
   "sonnet.python.modules.rnn_core.RNNCore"
  ],
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn.ConvLSTM.__init__": {
  "lineno": 1225,
  "symbols_in_volume": [
   "sonnet.python.modules.conv.SAME",
   "sonnet.python.modules.util.deprecation_warning",
   "tensorflow.logging.warning"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ConvLSTM._build": {
  "lineno": 1364,
  "symbols_in_volume": [
   "sonnet.python.modules.basic.BatchFlatten",
   "sonnet.python.modules.basic.BatchReshape",
   "sonnet.python.modules.layer_norm.LayerNorm",
   "tensorflow.sigmoid",
   "tensorflow.split",
   "tensorflow.tanh"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ConvLSTM._get_conv_class": {
  "lineno": 1214,
  "symbols_in_volume": [
   "sonnet.python.modules.conv.Conv1D",
   "sonnet.python.modules.conv.Conv2D",
   "sonnet.python.modules.conv.Conv3D"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ConvLSTM._new_convolution": {
  "lineno": 1321,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ConvLSTM._new_convolution.clean_dict": {
  "lineno": 1329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ConvLSTM.convolutions": {
  "lineno": 1347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ConvLSTM.get_possible_initializer_keys": {
  "lineno": 1209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ConvLSTM.output_size": {
  "lineno": 1358,
  "symbols_in_volume": [
   "tensorflow.TensorShape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ConvLSTM.state_size": {
  "lineno": 1351,
  "symbols_in_volume": [
   "tensorflow.TensorShape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ConvLSTM.use_layer_norm": {
  "lineno": 1396,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.GRU": {
  "lineno": 1427,
  "symbols_in_volume": [
   "sonnet.python.modules.rnn_core.RNNCore"
  ],
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn.GRU.__init__": {
  "lineno": 1449,
  "symbols_in_volume": [
   "sonnet.python.modules.util.check_initializers",
   "sonnet.python.modules.util.check_partitioners",
   "sonnet.python.modules.util.check_regularizers"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.GRU._build": {
  "lineno": 1509,
  "symbols_in_volume": [
   "tensorflow.get_variable",
   "tensorflow.matmul",
   "tensorflow.sigmoid",
   "tensorflow.tanh"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.GRU.get_possible_initializer_keys": {
  "lineno": 1488,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.GRU.output_size": {
  "lineno": 1589,
  "symbols_in_volume": [
   "tensorflow.TensorShape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.GRU.state_size": {
  "lineno": 1585,
  "symbols_in_volume": [
   "tensorflow.TensorShape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.HighwayCore": {
  "lineno": 1594,
  "symbols_in_volume": [
   "sonnet.python.modules.rnn_core.RNNCore"
  ],
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn.HighwayCore.__init__": {
  "lineno": 1612,
  "symbols_in_volume": [
   "sonnet.python.modules.util.check_initializers",
   "sonnet.python.modules.util.check_partitioners",
   "sonnet.python.modules.util.check_regularizers"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.HighwayCore._build": {
  "lineno": 1688,
  "symbols_in_volume": [
   "six.moves.xrange",
   "tensorflow.matmul",
   "tensorflow.sigmoid",
   "tensorflow.tanh"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.HighwayCore._build._get_variable": {
  "lineno": 1710,
  "symbols_in_volume": [
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.HighwayCore.get_possible_initializer_keys": {
  "lineno": 1660,
  "symbols_in_volume": [
   "six.moves.xrange"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.HighwayCore.output_size": {
  "lineno": 1743,
  "symbols_in_volume": [
   "tensorflow.TensorShape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.HighwayCore.state_size": {
  "lineno": 1739,
  "symbols_in_volume": [
   "tensorflow.TensorShape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.LSTM": {
  "lineno": 58,
  "symbols_in_volume": [
   "sonnet.python.modules.rnn_core.RNNCore"
  ],
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn.LSTM.__init__": {
  "lineno": 99,
  "symbols_in_volume": [
   "sonnet.python.modules.util.check_initializers"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.LSTM._build": {
  "lineno": 209,
  "symbols_in_volume": [
   "sonnet.python.modules.layer_norm.LayerNorm",
   "tensorflow.clip_by_value",
   "tensorflow.concat",
   "tensorflow.matmul",
   "tensorflow.sigmoid",
   "tensorflow.split",
   "tensorflow.tanh"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.LSTM._create_gate_variables": {
  "lineno": 278,
  "symbols_in_volume": [
   "sonnet.python.modules.basic.create_linear_initializer",
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.LSTM._create_peephole_variables": {
  "lineno": 312,
  "symbols_in_volume": [
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.LSTM.get_possible_initializer_keys": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.LSTM.output_size": {
  "lineno": 342,
  "symbols_in_volume": [
   "tensorflow.TensorShape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.LSTM.state_size": {
  "lineno": 336,
  "symbols_in_volume": [
   "tensorflow.TensorShape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.LSTM.use_layer_norm": {
  "lineno": 352,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.LSTM.use_peepholes": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.LSTMBlockCell": {
  "lineno": 1771,
  "symbols_in_volume": [
   "sonnet.python.modules.rnn_core.RNNCellWrapper"
  ],
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn.LSTMBlockCell.__init__": {
  "lineno": 1774,
  "symbols_in_volume": [
   "sonnet.python.modules.rnn_core.with_doc",
   "tensorflow.contrib.rnn.LSTMBlockCell",
   "tensorflow.contrib.rnn.LSTMBlockCell.__init__"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.RecurrentDropoutWrapper": {
  "lineno": 358,
  "symbols_in_volume": [
   "sonnet.python.modules.rnn_core.RNNCore"
  ],
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn.RecurrentDropoutWrapper.__init__": {
  "lineno": 361,
  "symbols_in_volume": [
   "tensorflow.contrib.framework.nest.map_structure"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.RecurrentDropoutWrapper.__init__.set_dropout_state_size": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.RecurrentDropoutWrapper._build": {
  "lineno": 392,
  "symbols_in_volume": [
   "tensorflow.contrib.framework.nest.map_structure"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.RecurrentDropoutWrapper.initial_state": {
  "lineno": 404,
  "symbols_in_volume": [
   "tensorflow.contrib.framework.nest.map_structure",
   "tensorflow.float32"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.RecurrentDropoutWrapper.initial_state.set_dropout_mask": {
  "lineno": 414,
  "symbols_in_volume": [
   "tensorflow.nn.dropout",
   "tensorflow.ones_like"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.RecurrentDropoutWrapper.output_size": {
  "lineno": 428,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.RecurrentDropoutWrapper.state_size": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ZoneoutWrapper": {
  "lineno": 451,
  "symbols_in_volume": [
   "sonnet.python.modules.rnn_core.RNNCore"
  ],
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn.ZoneoutWrapper.__init__": {
  "lineno": 459,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ZoneoutWrapper._build": {
  "lineno": 480,
  "symbols_in_volume": [
   "tensorflow.contrib.framework.nest.map_structure"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ZoneoutWrapper._build.apply_zoneout": {
  "lineno": 483,
  "symbols_in_volume": [
   "tensorflow.nn.dropout"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ZoneoutWrapper.initial_state": {
  "lineno": 501,
  "symbols_in_volume": [
   "tensorflow.float32"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ZoneoutWrapper.output_size": {
  "lineno": 514,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.ZoneoutWrapper.state_size": {
  "lineno": 510,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.highway_core_with_recurrent_dropout": {
  "lineno": 1748,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.lstm_with_recurrent_dropout": {
  "lineno": 433,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn.lstm_with_zoneout": {
  "lineno": 519,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.modules.gated_rnn_test.ConvLSTMTest": {
  "lineno": 802,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn_test.ConvLSTMTest.testDilatedConv": {
  "lineno": 1018,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.Conv1DLSTM",
   "sonnet.Conv2DLSTM",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.random_normal",
   "tensorflow.train.GradientDescentOptimizer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.ConvLSTMTest.testDilatedConv.loss_fn": {
  "lineno": 1056,
  "symbols_in_volume": [
   "tensorflow.float32",
   "tensorflow.nn.dynamic_rnn",
   "tensorflow.reduce_mean",
   "tensorflow.square"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.ConvLSTMTest.testInitializers": {
  "lineno": 835,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "numpy.float32",
   "numpy.full",
   "sonnet.Conv1DLSTM",
   "sonnet.Conv2DLSTM",
   "sonnet.Conv2DLSTM.get_possible_initializer_keys",
   "tensorflow.constant_initializer",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.ConvLSTMTest.testLayerNorm": {
  "lineno": 1108,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.Conv1DLSTM",
   "sonnet.Conv2DLSTM",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.random_normal",
   "tensorflow.train.GradientDescentOptimizer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.ConvLSTMTest.testLayerNorm.loss_fn": {
  "lineno": 1134,
  "symbols_in_volume": [
   "tensorflow.float32",
   "tensorflow.nn.dynamic_rnn",
   "tensorflow.reduce_mean",
   "tensorflow.square"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.ConvLSTMTest.testLayerNormVariables": {
  "lineno": 1071,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.Conv1DLSTM",
   "sonnet.Conv2DLSTM",
   "tensorflow.float32",
   "tensorflow.nn.dynamic_rnn",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.ConvLSTMTest.testPartitioners": {
  "lineno": 887,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.Conv1DLSTM",
   "sonnet.Conv2DLSTM",
   "sonnet.Conv2DLSTM.get_possible_initializer_keys",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.ones",
   "tensorflow.python.ops.variables.PartitionedVariable",
   "tensorflow.variable_axis_size_partitioner"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.ConvLSTMTest.testRegularizers": {
  "lineno": 936,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.Conv1DLSTM",
   "sonnet.Conv2DLSTM",
   "sonnet.Conv2DLSTM.get_possible_initializer_keys",
   "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
   "tensorflow.float32",
   "tensorflow.get_collection",
   "tensorflow.nn.l2_loss",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.ConvLSTMTest.testShape": {
  "lineno": 804,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "numpy.ndarray",
   "sonnet.Conv1DLSTM",
   "sonnet.Conv2DLSTM",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.ConvLSTMTest.testTraining": {
  "lineno": 979,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.Conv1DLSTM",
   "sonnet.Conv2DLSTM",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.random_normal",
   "tensorflow.train.GradientDescentOptimizer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.ConvLSTMTest.testTraining.loss_fn": {
  "lineno": 1003,
  "symbols_in_volume": [
   "tensorflow.float32",
   "tensorflow.nn.dynamic_rnn",
   "tensorflow.reduce_mean",
   "tensorflow.square"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.GRUTest": {
  "lineno": 1151,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn_test.GRUTest.testComputation": {
  "lineno": 1192,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.random.randn",
   "numpy.tanh",
   "sonnet.GRU",
   "tensorflow.constant",
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.GRUTest.testComputation.sigmoid": {
  "lineno": 1194,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.GRUTest.testInitializers": {
  "lineno": 1231,
  "symbols_in_volume": [
   "numpy.ones",
   "sonnet.GRU",
   "sonnet.GRU.POSSIBLE_INITIALIZER_KEYS",
   "tensorflow.constant_initializer",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.GRUTest.testPartitioners": {
  "lineno": 1255,
  "symbols_in_volume": [
   "sonnet.GRU",
   "sonnet.GRU.POSSIBLE_INITIALIZER_KEYS",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.ones",
   "tensorflow.python.ops.variables.PartitionedVariable",
   "tensorflow.variable_axis_size_partitioner"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.GRUTest.testRegularizers": {
  "lineno": 1278,
  "symbols_in_volume": [
   "sonnet.GRU",
   "sonnet.GRU.POSSIBLE_INITIALIZER_KEYS",
   "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
   "tensorflow.float32",
   "tensorflow.get_collection",
   "tensorflow.nn.l2_loss",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.GRUTest.testShape": {
  "lineno": 1153,
  "symbols_in_volume": [
   "numpy.ndarray",
   "sonnet.GRU",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.GRUTest.testVariables": {
  "lineno": 1164,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "numpy.ndarray",
   "sonnet.Error",
   "sonnet.GRU",
   "tensorflow.convert_to_tensor",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.HighwayCoreTest": {
  "lineno": 1300,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn_test.HighwayCoreTest.testComputation": {
  "lineno": 1352,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "numpy.dot",
   "numpy.random.randn",
   "numpy.tanh",
   "sonnet.HighwayCore",
   "sonnet.highway_core_with_recurrent_dropout",
   "tensorflow.constant",
   "tensorflow.float64",
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.HighwayCoreTest.testComputation.sigmoid": {
  "lineno": 1356,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.HighwayCoreTest.testShape": {
  "lineno": 1302,
  "symbols_in_volume": [
   "numpy.ndarray",
   "sonnet.HighwayCore",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.HighwayCoreTest.testVariables": {
  "lineno": 1313,
  "symbols_in_volume": [
   "numpy.ndarray",
   "six.moves.xrange",
   "sonnet.Error",
   "sonnet.HighwayCore",
   "tensorflow.convert_to_tensor",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMBlockCellTest": {
  "lineno": 1403,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMBlockCellTest.testShape": {
  "lineno": 1405,
  "symbols_in_volume": [
   "numpy.ndarray",
   "sonnet.LSTMBlockCell",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMBlockCellTest.testVariables": {
  "lineno": 1423,
  "symbols_in_volume": [
   "numpy.ndarray",
   "sonnet.Error",
   "sonnet.LSTMBlockCell",
   "tensorflow.convert_to_tensor",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest": {
  "lineno": 81,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testBatchNormBuildFlag": {
  "lineno": 412,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.BatchNormLSTM",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testBatchNormInitializersCheck": {
  "lineno": 436,
  "symbols_in_volume": [
   "sonnet.BatchNormLSTM",
   "sonnet.BatchNormLSTM.BETA_C",
   "sonnet.BatchNormLSTM.GAMMA_C",
   "sonnet.BatchNormLSTM.GAMMA_H",
   "sonnet.BatchNormLSTM.GAMMA_X",
   "tensorflow.constant_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testBatchNormVariables": {
  "lineno": 688,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "tensorflow.float32",
   "tensorflow.nn.dynamic_rnn",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testCellClipping": {
  "lineno": 666,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.random.rand",
   "sonnet.LSTM",
   "tensorflow.constant",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testCheckMaxUniqueStats": {
  "lineno": 735,
  "symbols_in_volume": [
   "sonnet.BatchNormLSTM"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testComputation": {
  "lineno": 123,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.concatenate",
   "numpy.dot",
   "numpy.exp",
   "numpy.float32",
   "numpy.hsplit",
   "numpy.matmul",
   "numpy.random.randn",
   "numpy.tanh",
   "sonnet.LSTM",
   "sonnet.LSTM.B_GATES",
   "sonnet.LSTM.W_GATES",
   "sonnet.LSTM.W_H_PROJECTION",
   "tensorflow.constant",
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testHiddenClipping": {
  "lineno": 643,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.random.rand",
   "sonnet.LSTM",
   "tensorflow.constant",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testInitialStateNames": {
  "lineno": 787,
  "symbols_in_volume": [
   "sonnet.LSTM",
   "tensorflow.executing_eagerly"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testInitializers": {
  "lineno": 229,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "itertools.product",
   "numpy.ones",
   "tensorflow.constant_initializer",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testLayerNormVariables": {
  "lineno": 629,
  "symbols_in_volume": [
   "sonnet.LSTM",
   "tensorflow.float32",
   "tensorflow.nn.dynamic_rnn",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testPartitioners": {
  "lineno": 455,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "itertools.product",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.ones",
   "tensorflow.python.ops.variables.PartitionedVariable",
   "tensorflow.variable_axis_size_partitioner"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testPeephole": {
  "lineno": 168,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.dot",
   "numpy.exp",
   "numpy.float32",
   "numpy.hsplit",
   "numpy.ndarray",
   "numpy.random.randn",
   "numpy.tanh",
   "sonnet.LSTM",
   "sonnet.LSTM.B_GATES",
   "sonnet.LSTM.W_F_DIAG",
   "sonnet.LSTM.W_GATES",
   "sonnet.LSTM.W_I_DIAG",
   "sonnet.LSTM.W_O_DIAG",
   "tensorflow.constant",
   "tensorflow.convert_to_tensor",
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testPeepholeInitializersCheck": {
  "lineno": 268,
  "symbols_in_volume": [
   "sonnet.LSTM",
   "sonnet.LSTM.W_F_DIAG",
   "sonnet.LSTM.W_I_DIAG",
   "sonnet.LSTM.W_O_DIAG",
   "tensorflow.constant_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testRecurrentDropout": {
  "lineno": 278,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "numpy.float32",
   "numpy.max",
   "numpy.random.rand",
   "numpy.stack",
   "numpy.sum",
   "sonnet.lstm_with_recurrent_dropout",
   "tensorflow.constant",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.nn.dynamic_rnn"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testRegularizers": {
  "lineno": 492,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "itertools.product",
   "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
   "tensorflow.float32",
   "tensorflow.get_collection",
   "tensorflow.nn.l2_loss",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testSameInStaticAndDynamic": {
  "lineno": 598,
  "symbols_in_volume": [
   "sonnet.LSTM",
   "tensorflow.contrib.rnn.static_rnn",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.nn.dynamic_rnn",
   "tensorflow.ones",
   "tensorflow.stack",
   "tensorflow.unstack"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testSameInStaticAndDynamicWithBatchNorm": {
  "lineno": 531,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.BatchNormLSTM",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.ones",
   "tensorflow.unstack"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testSameInStaticAndDynamicWithBatchNorm.connect": {
  "lineno": 563,
  "symbols_in_volume": [
   "tensorflow.contrib.rnn.static_rnn",
   "tensorflow.float32",
   "tensorflow.nn.dynamic_rnn",
   "tensorflow.stack"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testShape": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.ndarray",
   "sonnet.LSTM",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testSideBySide": {
  "lineno": 776,
  "symbols_in_volume": [
   "sonnet.LSTM"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testTraining": {
  "lineno": 742,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "numpy.random.rand",
   "sonnet.BatchNormLSTM",
   "tensorflow.constant",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.train.GradientDescentOptimizer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testTraining.loss_fn": {
  "lineno": 758,
  "symbols_in_volume": [
   "numpy.random.rand",
   "tensorflow.float32",
   "tensorflow.nn.dynamic_rnn",
   "tensorflow.reduce_mean",
   "tensorflow.square"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testVariables": {
  "lineno": 98,
  "symbols_in_volume": [
   "numpy.ndarray",
   "sonnet.Error",
   "sonnet.LSTM",
   "sonnet.LSTM.B_GATES",
   "sonnet.LSTM.W_GATES",
   "tensorflow.convert_to_tensor",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test.LSTMTest.testZoneout": {
  "lineno": 341,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "numpy.abs",
   "numpy.float32",
   "numpy.max",
   "numpy.random.rand",
   "numpy.stack",
   "numpy.sum",
   "sonnet.LSTMState",
   "sonnet.lstm_with_zoneout",
   "tensorflow.constant",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.nn.dynamic_rnn"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test._construct_lstm": {
  "lineno": 56,
  "symbols_in_volume": [
   "sonnet.BatchNormLSTM",
   "sonnet.LSTM"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test._get_lstm_variable_names": {
  "lineno": 37,
  "symbols_in_volume": [
   "sonnet.BatchNormLSTM"
  ],
  "type": "function"
 },
 "sonnet.python.modules.gated_rnn_test._get_possible_initializer_keys": {
  "lineno": 71,
  "symbols_in_volume": [
   "sonnet.BatchNormLSTM.get_possible_initializer_keys",
   "sonnet.LSTM.get_possible_initializer_keys"
  ],
  "type": "function"
 },
 "sonnet.python.modules.layer_norm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.python.modules.layer_norm.LayerNorm": {
  "lineno": 37,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.layer_norm.LayerNorm.__init__": {
  "lineno": 60,
  "symbols_in_volume": [
   "collections.Iterable",
   "sonnet.python.modules.util.check_initializers",
   "sonnet.python.modules.util.check_partitioners",
   "sonnet.python.modules.util.check_regularizers"
  ],
  "type": "function"
 },
 "sonnet.python.modules.layer_norm.LayerNorm._build": {
  "lineno": 115,
  "symbols_in_volume": [
   "sonnet.python.modules.base.NotSupportedError",
   "tensorflow.bfloat16",
   "tensorflow.cast",
   "tensorflow.float16",
   "tensorflow.float32",
   "tensorflow.get_variable",
   "tensorflow.nn.batch_normalization",
   "tensorflow.nn.moments"
  ],
  "type": "function"
 },
 "sonnet.python.modules.layer_norm.LayerNorm.beta": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.layer_norm.LayerNorm.gamma": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.layer_norm.LayerNorm.initializers": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.layer_norm.LayerNorm.partitioners": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.layer_norm.LayerNorm.regularizers": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.layer_norm.create_beta_initializer": {
  "lineno": 204,
  "symbols_in_volume": [
   "tensorflow.zeros_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.layer_norm.create_gamma_initializer": {
  "lineno": 209,
  "symbols_in_volume": [
   "tensorflow.ones_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.layer_norm_test": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.modules.layer_norm_test.LayerNormTest": {
  "lineno": 66,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.layer_norm_test.LayerNormTest.testAxesDefault": {
  "lineno": 188,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "numpy.ones_like",
   "numpy.random.rand",
   "numpy.zeros_like",
   "sonnet.LayerNorm",
   "tensorflow.constant",
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.layer_norm_test.LayerNormTest.testDataType": {
  "lineno": 68,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.LayerNorm",
   "tensorflow.bfloat16",
   "tensorflow.float16",
   "tensorflow.float32",
   "tensorflow.float64",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.layer_norm_test.LayerNormTest.testInitializers": {
  "lineno": 140,
  "symbols_in_volume": [
   "numpy.ones",
   "sonnet.LayerNorm",
   "tensorflow.constant_initializer",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.layer_norm_test.LayerNormTest.testInvalidAxes": {
  "lineno": 220,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.LayerNorm"
  ],
  "type": "function"
 },
 "sonnet.python.modules.layer_norm_test.LayerNormTest.testInvalidInitializerParameters": {
  "lineno": 113,
  "symbols_in_volume": [
   "sonnet.LayerNorm",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.layer_norm_test.LayerNormTest.testInvalidPartitionerParameters": {
  "lineno": 122,
  "symbols_in_volume": [
   "sonnet.LayerNorm",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.layer_norm_test.LayerNormTest.testInvalidRegularizationParameters": {
  "lineno": 131,
  "symbols_in_volume": [
   "sonnet.LayerNorm",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.layer_norm_test.LayerNormTest.testNormalization": {
  "lineno": 85,
  "symbols_in_volume": [
   "sonnet.LayerNorm",
   "tensorflow.constant",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.layer_norm_test.LayerNormTest.testPartitioners": {
  "lineno": 174,
  "symbols_in_volume": [
   "sonnet.LayerNorm",
   "tensorflow.fixed_size_partitioner",
   "tensorflow.float32",
   "tensorflow.placeholder",
   "tensorflow.python.ops.variables.PartitionedVariable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.layer_norm_test.LayerNormTest.testRegularizersInRegularizationLosses": {
  "lineno": 159,
  "symbols_in_volume": [
   "sonnet.LayerNorm",
   "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.contrib.layers.l2_regularizer",
   "tensorflow.float32",
   "tensorflow.get_collection",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.layer_norm_test.LayerNormTest.testScaleAndOffset": {
  "lineno": 230,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.LayerNorm",
   "tensorflow.random_uniform"
  ],
  "type": "function"
 },
 "sonnet.python.modules.layer_norm_test.LayerNormTest.testSharing": {
  "lineno": 100,
  "symbols_in_volume": [
   "sonnet.LayerNorm",
   "tensorflow.GraphKeys.GLOBAL_VARIABLES",
   "tensorflow.float32",
   "tensorflow.get_collection",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.layer_norm_test._get_layer_norm_stats": {
  "lineno": 34,
  "symbols_in_volume": [
   "functools.reduce",
   "numpy.mean",
   "numpy.reshape",
   "numpy.std",
   "numpy.transpose",
   "operator.mul"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.python.modules.nets.alexnet": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.python.modules.nets.alexnet.AlexNet": {
  "lineno": 45,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.nets.alexnet.AlexNet.__init__": {
  "lineno": 59,
  "symbols_in_volume": [
   "sonnet.python.modules.base.Error",
   "sonnet.python.modules.util.check_initializers",
   "sonnet.python.modules.util.check_partitioners",
   "sonnet.python.modules.util.check_regularizers",
   "tensorflow.logging.warn"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet.AlexNet._build": {
  "lineno": 181,
  "symbols_in_volume": [
   "sonnet.python.modules.base.IncompatibleShapeError",
   "sonnet.python.modules.basic.BatchFlatten",
   "sonnet.python.modules.basic.Linear",
   "sonnet.python.modules.batch_norm.BatchNorm",
   "sonnet.python.modules.conv.Conv2D",
   "sonnet.python.modules.conv.VALID",
   "tensorflow.assert_equal",
   "tensorflow.control_dependencies",
   "tensorflow.equal",
   "tensorflow.identity",
   "tensorflow.logical_or",
   "tensorflow.nn.dropout",
   "tensorflow.nn.max_pool",
   "tensorflow.nn.relu"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet.AlexNet._calc_min_size": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet.AlexNet.conv_modules": {
  "lineno": 317,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet.AlexNet.initializers": {
  "lineno": 293,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet.AlexNet.linear_modules": {
  "lineno": 328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet.AlexNet.min_input_size": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet.AlexNet.partitioners": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet.AlexNet.regularizers": {
  "lineno": 301,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet.AlexNetFull": {
  "lineno": 340,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.nets.alexnet.AlexNetFull.__init__": {
  "lineno": 343,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet.AlexNetMini": {
  "lineno": 392,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.nets.alexnet.AlexNetMini.__init__": {
  "lineno": 395,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest": {
  "lineno": 34,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testBatchNorm": {
  "lineno": 59,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.nets.AlexNet",
   "sonnet.nets.AlexNet.FULL",
   "tensorflow.constant",
   "tensorflow.float32",
   "tensorflow.global_variables",
   "tensorflow.global_variables_initializer",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testBatchNormConfig": {
  "lineno": 102,
  "symbols_in_volume": [
   "sonnet.nets.AlexNetFull",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testCalcMinSize": {
  "lineno": 36,
  "symbols_in_volume": [
   "sonnet.nets.AlexNetMini"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testCustomGetterUsed": {
  "lineno": 257,
  "symbols_in_volume": [
   "numpy.zeros_like",
   "sonnet.nets.AlexNetFull",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testCustomGetterUsed.set_to_const": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testErrorHandling": {
  "lineno": 244,
  "symbols_in_volume": [
   "sonnet.Error",
   "sonnet.nets.AlexNet"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testGetLinearModules": {
  "lineno": 249,
  "symbols_in_volume": [
   "sonnet.nets.AlexNetFull",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testInitializers": {
  "lineno": 203,
  "symbols_in_volume": [
   "numpy.ones",
   "sonnet.nets.AlexNetFull",
   "tensorflow.constant_initializer",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testInputTooSmall": {
  "lineno": 132,
  "symbols_in_volume": [
   "sonnet.IncompatibleShapeError",
   "sonnet.nets.AlexNetFull",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testInvalidInitializationParameters": {
  "lineno": 166,
  "symbols_in_volume": [
   "sonnet.nets.AlexNetMini",
   "tensorflow.truncated_normal_initializer",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testInvalidRegularizationParameters": {
  "lineno": 177,
  "symbols_in_volume": [
   "sonnet.nets.AlexNetMini",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testModes": {
  "lineno": 45,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "functools.partial",
   "sonnet.nets.AlexNet",
   "sonnet.nets.AlexNet.FULL",
   "sonnet.nets.AlexNet.MINI",
   "sonnet.nets.AlexNetFull",
   "sonnet.nets.AlexNetMini",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testNoDropoutInTesting": {
  "lineno": 117,
  "symbols_in_volume": [
   "sonnet.nets.AlexNetFull",
   "tensorflow.errors.InvalidArgumentError",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testPartitioners": {
  "lineno": 220,
  "symbols_in_volume": [
   "sonnet.nets.AlexNetMini",
   "tensorflow.executing_eagerly",
   "tensorflow.fixed_size_partitioner",
   "tensorflow.float32",
   "tensorflow.placeholder",
   "tensorflow.python.ops.variables.PartitionedVariable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testRegularizersInRegularizationLosses": {
  "lineno": 187,
  "symbols_in_volume": [
   "sonnet.nets.AlexNetMini",
   "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.contrib.layers.l2_regularizer",
   "tensorflow.float32",
   "tensorflow.get_collection",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.alexnet_test.AlexNetTest.testSharing": {
  "lineno": 148,
  "symbols_in_volume": [
   "sonnet.nets.AlexNetMini",
   "tensorflow.GraphKeys.GLOBAL_VARIABLES",
   "tensorflow.float32",
   "tensorflow.get_collection",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D": {
  "lineno": 46,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule",
   "sonnet.python.modules.base.Transposable"
  ],
  "type": "class"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.__init__": {
  "lineno": 51,
  "symbols_in_volume": [
   "collections.Iterable",
   "sonnet.python.modules.util.check_initializers",
   "sonnet.python.modules.util.check_partitioners",
   "sonnet.python.modules.util.check_regularizers",
   "sonnet.python.modules.util.deprecation_warning",
   "tensorflow.nn.relu"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D._build": {
  "lineno": 311,
  "symbols_in_volume": [
   "sonnet.python.modules.batch_norm.BatchNorm",
   "sonnet.python.modules.batch_norm_v2.BatchNormV2",
   "sonnet.python.modules.util.remove_unsupported_kwargs",
   "tensorflow.logging.warning"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D._check_and_assign_normalization_members": {
  "lineno": 252,
  "symbols_in_volume": [
   "six.string_types",
   "sonnet.python.modules.util.parse_string_to_constructor"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D._instantiate_layers": {
  "lineno": 288,
  "symbols_in_volume": [
   "six.moves.xrange",
   "sonnet.python.modules.conv.Conv2D"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D._parse_normalization_kwargs": {
  "lineno": 264,
  "symbols_in_volume": [
   "sonnet.python.modules.batch_norm.BatchNorm",
   "sonnet.python.modules.util.deprecation_warning"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D._transpose": {
  "lineno": 445,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.activate_final": {
  "lineno": 434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.activation": {
  "lineno": 430,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.batch_norm_config": {
  "lineno": 411,
  "symbols_in_volume": [
   "sonnet.python.modules.util.deprecation_warning"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.initializers": {
  "lineno": 368,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.input_shape": {
  "lineno": 439,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.kernel_shapes": {
  "lineno": 392,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.layers": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.normalization_ctor": {
  "lineno": 418,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.normalization_kwargs": {
  "lineno": 422,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.normalize_final": {
  "lineno": 426,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.output_channels": {
  "lineno": 396,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.paddings": {
  "lineno": 384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.partitioners": {
  "lineno": 372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.rates": {
  "lineno": 388,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.regularizers": {
  "lineno": 376,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.strides": {
  "lineno": 380,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.transpose": {
  "lineno": 588,
  "symbols_in_volume": [
   "functools.partial",
   "tensorflow.logging.warning"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.use_batch_norm": {
  "lineno": 404,
  "symbols_in_volume": [
   "sonnet.python.modules.batch_norm.BatchNorm",
   "sonnet.python.modules.util.deprecation_warning"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2D.use_bias": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2DTranspose": {
  "lineno": 715,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2DTranspose.__init__": {
  "lineno": 718,
  "symbols_in_volume": [
   "collections.Iterable",
   "tensorflow.nn.relu"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2DTranspose._instantiate_layers": {
  "lineno": 855,
  "symbols_in_volume": [
   "six.moves.xrange",
   "sonnet.python.modules.conv.Conv2DTranspose"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2DTranspose.output_shapes": {
  "lineno": 875,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet.ConvNet2DTranspose.transpose": {
  "lineno": 880,
  "symbols_in_volume": [
   "functools.partial",
   "sonnet.python.modules.batch_norm.BatchNorm",
   "tensorflow.logging.warning"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet._replicate_elements": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTest": {
  "lineno": 594,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTest.setUp": {
  "lineno": 596,
  "symbols_in_volume": [
   "sonnet.SAME"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTest.testAlwaysProvideIsTraining": {
  "lineno": 846,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.BatchNorm",
   "sonnet.LayerNorm",
   "sonnet.nets.ConvNet2D",
   "tensorflow.random_uniform"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTest.testConstructor": {
  "lineno": 604,
  "symbols_in_volume": [
   "sonnet.nets.ConvNet2D",
   "sonnet.python.modules.conv._fill_shape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTest.testCustomGetter": {
  "lineno": 801,
  "symbols_in_volume": [
   "sonnet.custom_getters.Context",
   "sonnet.custom_getters.stop_gradient",
   "sonnet.nets.ConvNet2D",
   "tensorflow.GradientTape",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.gradients",
   "tensorflow.random_normal",
   "tensorflow.trainable_variables"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTest.testCustomGetterTranspose": {
  "lineno": 668,
  "symbols_in_volume": [
   "sonnet.custom_getters.stop_gradient",
   "sonnet.nets.ConvNet2D",
   "tensorflow.GradientTape",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.gradients",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTest.testIncorrectRatesLength": {
  "lineno": 835,
  "symbols_in_volume": [
   "sonnet.nets.ConvNet2D"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTest.testNoCustomGetterTranspose": {
  "lineno": 695,
  "symbols_in_volume": [
   "sonnet.custom_getters.stop_gradient",
   "sonnet.nets.ConvNet2D",
   "tensorflow.GradientTape",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.gradients",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTest.testPartitioners": {
  "lineno": 776,
  "symbols_in_volume": [
   "sonnet.nets.ConvNet2D",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.placeholder",
   "tensorflow.python.ops.variables.PartitionedVariable",
   "tensorflow.variable_axis_size_partitioner"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTest.testTranspose": {
  "lineno": 625,
  "symbols_in_volume": [
   "sonnet.Error",
   "sonnet.nets.ConvNet2D",
   "tensorflow.float32",
   "tensorflow.random_normal",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTest.testVariableMap": {
  "lineno": 737,
  "symbols_in_volume": [
   "sonnet.nets.ConvNet2D",
   "tensorflow.float32",
   "tensorflow.random_normal"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTransposeTest": {
  "lineno": 871,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTransposeTest.setUp": {
  "lineno": 873,
  "symbols_in_volume": [
   "sonnet.SAME"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTransposeTest.testAlwaysProvideIsTraining": {
  "lineno": 999,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.BatchNorm",
   "sonnet.LayerNorm",
   "sonnet.nets.ConvNet2DTranspose",
   "tensorflow.random_uniform"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTransposeTest.testConstructor": {
  "lineno": 881,
  "symbols_in_volume": [
   "sonnet.nets.ConvNet2DTranspose",
   "sonnet.python.modules.conv._fill_shape",
   "tensorflow.truncated_normal_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTransposeTest.testCustomGetter": {
  "lineno": 1023,
  "symbols_in_volume": [
   "sonnet.custom_getters.Context",
   "sonnet.custom_getters.stop_gradient",
   "sonnet.nets.ConvNet2DTranspose",
   "tensorflow.GradientTape",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.gradients",
   "tensorflow.random_normal",
   "tensorflow.trainable_variables"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTransposeTest.testCustomGetterTranspose": {
  "lineno": 1058,
  "symbols_in_volume": [
   "sonnet.custom_getters.stop_gradient",
   "sonnet.nets.ConvNet2DTranspose",
   "tensorflow.GradientTape",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.gradients",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTransposeTest.testNoCustomGetterTranspose": {
  "lineno": 1086,
  "symbols_in_volume": [
   "sonnet.custom_getters.stop_gradient",
   "sonnet.nets.ConvNet2DTranspose",
   "tensorflow.GradientTape",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.gradients",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTransposeTest.testPartitioners": {
  "lineno": 974,
  "symbols_in_volume": [
   "sonnet.nets.ConvNet2DTranspose",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.placeholder",
   "tensorflow.python.ops.variables.PartitionedVariable",
   "tensorflow.variable_axis_size_partitioner"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.ConvNet2DTransposeTest.testTranspose": {
  "lineno": 937,
  "symbols_in_volume": [
   "sonnet.Error",
   "sonnet.nets.ConvNet2DTranspose",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.random_normal"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.DefunTest": {
  "lineno": 1130,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.nets.convnet_test.DefunTest.testDefun": {
  "lineno": 1132,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "functools.partial",
   "sonnet.SAME",
   "sonnet.nets.ConvNet2D",
   "sonnet.nets.ConvNet2DTranspose",
   "tensorflow.contrib.eager.defun",
   "tensorflow.random_normal"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest": {
  "lineno": 37,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest.setUp": {
  "lineno": 39,
  "symbols_in_volume": [
   "sonnet.SAME"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest.testActivateFinal": {
  "lineno": 368,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "functools.partial",
   "sonnet.nets.ConvNet2D",
   "sonnet.nets.ConvNet2DTranspose",
   "tensorflow.float32",
   "tensorflow.random_normal"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest.testBatchNorm": {
  "lineno": 234,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "functools.partial",
   "sonnet.nets.ConvNet2D",
   "sonnet.nets.ConvNet2DTranspose",
   "tensorflow.constant",
   "tensorflow.float32",
   "tensorflow.global_variables",
   "tensorflow.random_normal"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest.testBatchNormBuildFlag": {
  "lineno": 215,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "functools.partial",
   "sonnet.nets.ConvNet2D",
   "sonnet.nets.ConvNet2DTranspose",
   "tensorflow.float32",
   "tensorflow.random_normal"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest.testBatchNormConfig": {
  "lineno": 271,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "functools.partial",
   "sonnet.nets.ConvNet2D",
   "sonnet.nets.ConvNet2DTranspose",
   "tensorflow.float32",
   "tensorflow.random_normal"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest.testConstructor": {
  "lineno": 62,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "functools.partial",
   "sonnet.SAME",
   "sonnet.nets.ConvNet2D",
   "sonnet.nets.ConvNet2DTranspose",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.truncated_normal_initializer",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest.testDataFormat": {
  "lineno": 481,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "functools.partial",
   "sonnet.nets.ConvNet2D",
   "sonnet.nets.ConvNet2DTranspose",
   "tensorflow.errors.InvalidArgumentError",
   "tensorflow.errors.UnimplementedError",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.random_normal"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest.testName": {
  "lineno": 47,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "functools.partial",
   "sonnet.nets.ConvNet2D",
   "sonnet.nets.ConvNet2DTranspose",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest.testNoBias": {
  "lineno": 294,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "functools.partial",
   "sonnet.nets.ConvNet2D",
   "sonnet.nets.ConvNet2DTranspose",
   "tensorflow.float32",
   "tensorflow.random_normal"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest.testNoBiasIterable": {
  "lineno": 312,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "functools.partial",
   "sonnet.nets.ConvNet2D",
   "sonnet.nets.ConvNet2DTranspose"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest.testNormalizationBadConfig": {
  "lineno": 574,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "functools.partial",
   "sonnet.LayerNorm",
   "sonnet.nets.ConvNet2D",
   "sonnet.nets.ConvNet2DTranspose"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest.testNormalizations": {
  "lineno": 524,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "functools.partial",
   "numpy.mean",
   "numpy.ones_like",
   "numpy.reshape",
   "numpy.std",
   "numpy.zeros_like",
   "sonnet.LayerNorm",
   "sonnet.nets.ConvNet2D",
   "sonnet.nets.ConvNet2DTranspose",
   "tensorflow.executing_eagerly",
   "tensorflow.random_uniform",
   "tensorflow.train.SingularMonitoredSession"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest.testRegularizersInRegularizationLosses": {
  "lineno": 334,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "functools.partial",
   "sonnet.nets.ConvNet2D",
   "sonnet.nets.ConvNet2DTranspose",
   "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.contrib.layers.l2_regularizer",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.get_collection",
   "tensorflow.random_normal"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest.testTransposeDefaultParameter": {
  "lineno": 408,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "functools.partial",
   "itertools.product",
   "sonnet.SAME",
   "sonnet.VALID",
   "sonnet.nets.ConvNet2D",
   "sonnet.nets.ConvNet2DTranspose"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.convnet_test.SharedConvNets2DTest.testTransposePassThroughParameter": {
  "lineno": 442,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "collections.Iterable",
   "collections.Mapping",
   "functools.partial",
   "itertools.product",
   "sonnet.BatchNorm",
   "sonnet.SAME",
   "sonnet.VALID",
   "sonnet.nets.ConvNet2D",
   "sonnet.nets.ConvNet2DTranspose",
   "tensorflow.nn.tanh"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.python.modules.nets.dilation.Dilation": {
  "lineno": 197,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.nets.dilation.Dilation.__init__": {
  "lineno": 227,
  "symbols_in_volume": [
   "sonnet.python.modules.util.check_initializers",
   "sonnet.python.modules.util.check_regularizers"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation.Dilation._build": {
  "lineno": 257,
  "symbols_in_volume": [
   "sonnet.python.modules.base.IncompatibleShapeError",
   "sonnet.python.modules.sequential.Sequential",
   "tensorflow.zeros_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation.Dilation._dilated_conv_layer": {
  "lineno": 321,
  "symbols_in_volume": [
   "sonnet.python.modules.conv.Conv2D",
   "sonnet.python.modules.sequential.Sequential",
   "tensorflow.nn.relu"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation.Dilation.conv_modules": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation._range_along_dimension": {
  "lineno": 32,
  "symbols_in_volume": [
   "tensorflow.range",
   "tensorflow.reshape",
   "tensorflow.tile"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation.identity_kernel_initializer": {
  "lineno": 74,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.equal",
   "tensorflow.float32",
   "tensorflow.logical_and"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation.noisy_identity_kernel_initializer": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation.noisy_identity_kernel_initializer._noisy_identity_kernel_initializer": {
  "lineno": 140,
  "symbols_in_volume": [
   "tensorflow.equal",
   "tensorflow.float32",
   "tensorflow.floordiv",
   "tensorflow.logical_and",
   "tensorflow.ones",
   "tensorflow.truncated_normal",
   "tensorflow.where"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation_test": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.modules.nets.dilation_test.DilationTest": {
  "lineno": 95,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.nets.dilation_test.DilationTest.setUpWithNumOutputClasses": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.float32",
   "numpy.random.RandomState",
   "sonnet.nets.Dilation"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation_test.DilationTest.testBasicComputation": {
  "lineno": 132,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "tensorflow.convert_to_tensor",
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation_test.DilationTest.testInvalidModelSize": {
  "lineno": 166,
  "symbols_in_volume": [
   "sonnet.nets.Dilation",
   "sonnet.nets.noisy_identity_kernel_initializer",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation_test.DilationTest.testInvalidRegularizationParameters": {
  "lineno": 192,
  "symbols_in_volume": [
   "sonnet.nets.Dilation",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation_test.DilationTest.testInvalidShape": {
  "lineno": 160,
  "symbols_in_volume": [
   "sonnet.IncompatibleShapeError",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation_test.DilationTest.testLargeComputation": {
  "lineno": 142,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "numpy.sum",
   "sonnet.nets.Dilation",
   "tensorflow.convert_to_tensor",
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation_test.DilationTest.testRegularizersInRegularizationLosses": {
  "lineno": 205,
  "symbols_in_volume": [
   "sonnet.nets.Dilation",
   "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.contrib.layers.l2_regularizer",
   "tensorflow.convert_to_tensor",
   "tensorflow.executing_eagerly",
   "tensorflow.get_collection"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation_test.DilationTest.testShapeInference": {
  "lineno": 125,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation_test.DilationTest.testUtilities": {
  "lineno": 224,
  "symbols_in_volume": [
   "sonnet.python.modules.nets.dilation._range_along_dimension"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation_test.DilationTest.test_properties": {
  "lineno": 185,
  "symbols_in_volume": [
   "sonnet.NotConnectedError",
   "tensorflow.convert_to_tensor"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation_test.IdentityKernelInitializerTest": {
  "lineno": 32,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.nets.dilation_test.IdentityKernelInitializerTest.testComputation": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.nditer",
   "sonnet.nets.identity_kernel_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation_test.IdentityKernelInitializerTest.testInvalidShapes": {
  "lineno": 35,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.nets.identity_kernel_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation_test.NoisyIdentityKernelInitializerTest": {
  "lineno": 61,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.nets.dilation_test.NoisyIdentityKernelInitializerTest.testComputation": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.nditer",
   "sonnet.nets.noisy_identity_kernel_initializer",
   "tensorflow.reduce_sum",
   "tensorflow.set_random_seed"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.dilation_test.NoisyIdentityKernelInitializerTest.testInvalidShapes": {
  "lineno": 64,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.nets.noisy_identity_kernel_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.python.modules.nets.mlp.MLP": {
  "lineno": 32,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule",
   "sonnet.python.modules.base.Transposable"
  ],
  "type": "class"
 },
 "sonnet.python.modules.nets.mlp.MLP.__init__": {
  "lineno": 35,
  "symbols_in_volume": [
   "collections.Iterable",
   "sonnet.python.modules.util.check_initializers",
   "sonnet.python.modules.util.check_partitioners",
   "sonnet.python.modules.util.check_regularizers",
   "tensorflow.nn.relu"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP._build": {
  "lineno": 145,
  "symbols_in_volume": [
   "six.moves.xrange",
   "tensorflow.constant",
   "tensorflow.nn.dropout",
   "tensorflow.python.layers.utils.smart_cond"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP._instantiate_layers": {
  "lineno": 112,
  "symbols_in_volume": [
   "six.moves.xrange",
   "sonnet.python.modules.basic.Linear"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP.activate_final": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP.activation": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP.clone": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP.get_possible_initializer_keys": {
  "lineno": 141,
  "symbols_in_volume": [
   "sonnet.python.modules.basic.Linear.get_possible_initializer_keys"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP.initializers": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP.input_shape": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP.layers": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP.output_size": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP.output_sizes": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP.partitioners": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP.regularizers": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP.transpose": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP.use_bias": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp.MLP.use_dropout": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp_test": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest": {
  "lineno": 29,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest.setUp": {
  "lineno": 31,
  "symbols_in_volume": [
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.fixed_size_partitioner",
   "tensorflow.truncated_normal_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest.testActivateBiasFlags": {
  "lineno": 126,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.nets.MLP",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.random_normal"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest.testClone": {
  "lineno": 204,
  "symbols_in_volume": [
   "sonnet.nets.MLP",
   "tensorflow.float32",
   "tensorflow.random_normal",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest.testConstructor": {
  "lineno": 56,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.nets.MLP",
   "tensorflow.truncated_normal_initializer",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest.testCustomGettersUsed": {
  "lineno": 338,
  "symbols_in_volume": [
   "numpy.zeros_like",
   "sonnet.nets.MLP",
   "tensorflow.global_variables_initializer",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest.testCustomGettersUsed.get_pi": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest.testDefun": {
  "lineno": 354,
  "symbols_in_volume": [
   "sonnet.nets.MLP",
   "tensorflow.contrib.eager.defun",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest.testDropout": {
  "lineno": 373,
  "symbols_in_volume": [
   "sonnet.nets.MLP",
   "tensorflow.executing_eagerly",
   "tensorflow.get_default_graph",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest.testDropoutOff": {
  "lineno": 360,
  "symbols_in_volume": [
   "sonnet.nets.MLP",
   "tensorflow.executing_eagerly",
   "tensorflow.get_default_graph",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest.testDropoutTensor": {
  "lineno": 385,
  "symbols_in_volume": [
   "sonnet.nets.MLP",
   "tensorflow.bool",
   "tensorflow.convert_to_tensor",
   "tensorflow.executing_eagerly",
   "tensorflow.get_default_graph",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest.testName": {
  "lineno": 48,
  "symbols_in_volume": [
   "sonnet.nets.MLP",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest.testRegularizersInRegularizationLosses": {
  "lineno": 172,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.nets.MLP",
   "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.contrib.layers.l2_regularizer",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.get_collection",
   "tensorflow.random_normal"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest.testShape": {
  "lineno": 162,
  "symbols_in_volume": [
   "sonnet.nets.MLP",
   "tensorflow.float32",
   "tensorflow.random_normal"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest.testTranspose": {
  "lineno": 230,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.Error",
   "sonnet.nets.MLP",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.random_normal",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.mlp_test.MLPTest.testVariableMap": {
  "lineno": 306,
  "symbols_in_volume": [
   "sonnet.nets.MLP",
   "tensorflow.float32",
   "tensorflow.random_normal"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.vqvae": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.python.modules.nets.vqvae.VectorQuantizer": {
  "lineno": 29,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.nets.vqvae.VectorQuantizer.__init__": {
  "lineno": 54,
  "symbols_in_volume": [
   "tensorflow.get_variable",
   "tensorflow.uniform_unit_scaling_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.vqvae.VectorQuantizer._build": {
  "lineno": 66,
  "symbols_in_volume": [
   "tensorflow.Assert",
   "tensorflow.argmax",
   "tensorflow.control_dependencies",
   "tensorflow.equal",
   "tensorflow.exp",
   "tensorflow.log",
   "tensorflow.matmul",
   "tensorflow.one_hot",
   "tensorflow.reduce_mean",
   "tensorflow.reduce_sum",
   "tensorflow.reshape",
   "tensorflow.shape",
   "tensorflow.stop_gradient"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.vqvae.VectorQuantizer.embeddings": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.vqvae.VectorQuantizer.quantize": {
  "lineno": 118,
  "symbols_in_volume": [
   "tensorflow.control_dependencies",
   "tensorflow.nn.embedding_lookup",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.vqvae.VectorQuantizerEMA": {
  "lineno": 124,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.nets.vqvae.VectorQuantizerEMA.__init__": {
  "lineno": 158,
  "symbols_in_volume": [
   "tensorflow.constant_initializer",
   "tensorflow.get_variable",
   "tensorflow.random_normal_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.vqvae.VectorQuantizerEMA._build": {
  "lineno": 181,
  "symbols_in_volume": [
   "tensorflow.Assert",
   "tensorflow.argmax",
   "tensorflow.assign",
   "tensorflow.control_dependencies",
   "tensorflow.equal",
   "tensorflow.exp",
   "tensorflow.log",
   "tensorflow.matmul",
   "tensorflow.one_hot",
   "tensorflow.python.training.moving_averages.assign_moving_average",
   "tensorflow.reduce_mean",
   "tensorflow.reduce_sum",
   "tensorflow.reshape",
   "tensorflow.shape",
   "tensorflow.stop_gradient"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.vqvae.VectorQuantizerEMA.embeddings": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.nets.vqvae.VectorQuantizerEMA.quantize": {
  "lineno": 258,
  "symbols_in_volume": [
   "tensorflow.control_dependencies",
   "tensorflow.nn.embedding_lookup",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.vqvae_test": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.modules.nets.vqvae_test.VqvaeTest": {
  "lineno": 28,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.nets.vqvae_test.VqvaeTest.testConstruct": {
  "lineno": 30,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "numpy.argmax",
   "numpy.dot",
   "numpy.float32",
   "numpy.random.randn",
   "sonnet.nets.VectorQuantizer",
   "sonnet.nets.VectorQuantizerEMA",
   "tensorflow.constant",
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.vqvae_test.VqvaeTest.testEmaUpdating": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.random.randn",
   "sonnet.nets.VectorQuantizerEMA",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.vqvae_test.VqvaeTest.testNoneBatch": {
  "lineno": 83,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.nets.VectorQuantizer",
   "sonnet.nets.VectorQuantizerEMA",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.nets.vqvae_test.VqvaeTest.testShapeChecking": {
  "lineno": 68,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "numpy.float32",
   "numpy.random.randn",
   "sonnet.nets.VectorQuantizer",
   "sonnet.nets.VectorQuantizerEMA",
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.python.modules.pondering_rnn.ACTCore": {
  "lineno": 54,
  "symbols_in_volume": [
   "sonnet.python.modules.rnn_core.RNNCore"
  ],
  "type": "class"
 },
 "sonnet.python.modules.pondering_rnn.ACTCore.__init__": {
  "lineno": 73,
  "symbols_in_volume": [
   "tensorflow.TensorShape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn.ACTCore._body": {
  "lineno": 138,
  "symbols_in_volume": [
   "tensorflow.constant",
   "tensorflow.equal",
   "tensorflow.greater_equal",
   "tensorflow.logical_or",
   "tensorflow.sigmoid",
   "tensorflow.where"
  ],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn.ACTCore._build": {
  "lineno": 166,
  "symbols_in_volume": [
   "functools.partial",
   "sonnet.python.modules.basic.Linear",
   "tensorflow.concat",
   "tensorflow.ones",
   "tensorflow.while_loop",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn.ACTCore._cond": {
  "lineno": 132,
  "symbols_in_volume": [
   "tensorflow.reduce_any"
  ],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn.ACTCore.batch_size": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn.ACTCore.dtype": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn.ACTCore.initial_state": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn.ACTCore.output_size": {
  "lineno": 113,
  "symbols_in_volume": [
   "tensorflow.TensorShape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn.ACTCore.state_size": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn._nested_add": {
  "lineno": 33,
  "symbols_in_volume": [
   "sonnet.python.ops.nest.map"
  ],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn._nested_unary_mul": {
  "lineno": 38,
  "symbols_in_volume": [
   "sonnet.python.ops.nest.map"
  ],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn._nested_unary_mul.mul_with_broadcast": {
  "lineno": 40,
  "symbols_in_volume": [
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn._nested_zeros_like": {
  "lineno": 50,
  "symbols_in_volume": [
   "sonnet.python.ops.nest.map",
   "tensorflow.zeros_like"
  ],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array",
   "tensorflow.contrib.framework.nest",
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.modules.pondering_rnn_test.ACTCoreTest": {
  "lineno": 77,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.pondering_rnn_test.ACTCoreTest._testACT": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.floor",
   "sonnet.python.modules.pondering_rnn.ACTCore",
   "tensorflow.global_variables_initializer",
   "tensorflow.nn.dynamic_rnn",
   "tensorflow.random_uniform"
  ],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.ACTCoreTest._test_nested": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.equal"
  ],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.ACTCoreTest.testACTLSTM": {
  "lineno": 143,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.python.modules.gated_rnn.LSTM"
  ],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.ACTCoreTest.testACTLSTM.get_hidden_state": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.ACTCoreTest.testACTVanilla": {
  "lineno": 156,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.python.modules.basic_rnn.VanillaRNN"
  ],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.ACTCoreTest.testACTVanilla.get_state": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.ACTCoreTest.testNestedAdd": {
  "lineno": 87,
  "symbols_in_volume": [
   "sonnet.python.modules.pondering_rnn._nested_add"
  ],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.ACTCoreTest.testNestedUnaryMul": {
  "lineno": 94,
  "symbols_in_volume": [
   "sonnet.python.modules.pondering_rnn._nested_unary_mul",
   "tensorflow.constant",
   "tensorflow.float32"
  ],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.ACTCoreTest.testNestedUnaryMul_multiDim": {
  "lineno": 102,
  "symbols_in_volume": [
   "sonnet.python.modules.pondering_rnn._nested_unary_mul",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.ACTCoreTest.testNestedZerosLike": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.array",
   "sonnet.python.modules.pondering_rnn._nested_zeros_like"
  ],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.ACTCoreTest.testOutput2D": {
  "lineno": 176,
  "symbols_in_volume": [
   "sonnet.python.modules.pondering_rnn.ACTCore"
  ],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.ACTCoreTest.testOutputTuple": {
  "lineno": 170,
  "symbols_in_volume": [
   "sonnet.python.modules.pondering_rnn.ACTCore"
  ],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.Output2DCore": {
  "lineno": 61,
  "symbols_in_volume": [
   "sonnet.python.modules.rnn_core.RNNCore"
  ],
  "type": "class"
 },
 "sonnet.python.modules.pondering_rnn_test.Output2DCore._build": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.Output2DCore.output_size": {
  "lineno": 64,
  "symbols_in_volume": [
   "tensorflow.TensorShape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.Output2DCore.state_size": {
  "lineno": 68,
  "symbols_in_volume": [
   "tensorflow.TensorShape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.OutputTupleCore": {
  "lineno": 46,
  "symbols_in_volume": [
   "sonnet.python.modules.rnn_core.RNNCore"
  ],
  "type": "class"
 },
 "sonnet.python.modules.pondering_rnn_test.OutputTupleCore._build": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.OutputTupleCore.output_size": {
  "lineno": 49,
  "symbols_in_volume": [
   "tensorflow.TensorShape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test.OutputTupleCore.state_size": {
  "lineno": 53,
  "symbols_in_volume": [
   "tensorflow.TensorShape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.pondering_rnn_test._build_nested_tensor": {
  "lineno": 39,
  "symbols_in_volume": [
   "tensorflow.constant",
   "tensorflow.float32"
  ],
  "type": "function"
 },
 "sonnet.python.modules.relational_memory": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.python.modules.relational_memory.RelationalMemory": {
  "lineno": 33,
  "symbols_in_volume": [
   "sonnet.python.modules.rnn_core.RNNCore"
  ],
  "type": "class"
 },
 "sonnet.python.modules.relational_memory.RelationalMemory.__init__": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.relational_memory.RelationalMemory._attend_over_memory": {
  "lineno": 212,
  "symbols_in_volume": [
   "sonnet.python.modules.basic.BatchApply",
   "sonnet.python.modules.layer_norm.LayerNorm",
   "sonnet.python.modules.nets.mlp.MLP"
  ],
  "type": "function"
 },
 "sonnet.python.modules.relational_memory.RelationalMemory._build": {
  "lineno": 236,
  "symbols_in_volume": [
   "sonnet.python.modules.basic.BatchApply",
   "sonnet.python.modules.basic.BatchFlatten",
   "sonnet.python.modules.basic.Linear",
   "tensorflow.concat",
   "tensorflow.expand_dims",
   "tensorflow.tanh"
  ],
  "type": "function"
 },
 "sonnet.python.modules.relational_memory.RelationalMemory._calculate_gate_size": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.relational_memory.RelationalMemory._create_gates": {
  "lineno": 184,
  "symbols_in_volume": [
   "sonnet.python.modules.basic.BatchApply",
   "sonnet.python.modules.basic.BatchFlatten",
   "sonnet.python.modules.basic.Linear",
   "tensorflow.expand_dims",
   "tensorflow.sigmoid",
   "tensorflow.split",
   "tensorflow.tanh"
  ],
  "type": "function"
 },
 "sonnet.python.modules.relational_memory.RelationalMemory._multihead_attention": {
  "lineno": 120,
  "symbols_in_volume": [
   "sonnet.python.modules.basic.BatchApply",
   "sonnet.python.modules.basic.BatchFlatten",
   "sonnet.python.modules.basic.BatchReshape",
   "sonnet.python.modules.basic.Linear",
   "sonnet.python.modules.layer_norm.LayerNorm",
   "tensorflow.matmul",
   "tensorflow.nn.softmax",
   "tensorflow.split",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "sonnet.python.modules.relational_memory.RelationalMemory.forget_gate": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.relational_memory.RelationalMemory.initial_state": {
  "lineno": 92,
  "symbols_in_volume": [
   "tensorflow.concat",
   "tensorflow.eye",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.relational_memory.RelationalMemory.input_gate": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.relational_memory.RelationalMemory.output_size": {
  "lineno": 167,
  "symbols_in_volume": [
   "tensorflow.TensorShape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.relational_memory.RelationalMemory.state_size": {
  "lineno": 163,
  "symbols_in_volume": [
   "tensorflow.TensorShape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.relational_memory_test": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.modules.relational_memory_test.RelationalMemoryTest": {
  "lineno": 29,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.relational_memory_test.RelationalMemoryTest.testBadInputs": {
  "lineno": 96,
  "symbols_in_volume": [
   "sonnet.python.modules.relational_memory.RelationalMemory"
  ],
  "type": "function"
 },
 "sonnet.python.modules.relational_memory_test.RelationalMemoryTest.testDifferingKeyHeadSizes": {
  "lineno": 187,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.any",
   "numpy.not_equal",
   "numpy.ones",
   "sonnet.python.modules.relational_memory.RelationalMemory",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.relational_memory_test.RelationalMemoryTest.testGateShapes": {
  "lineno": 114,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "sonnet.python.modules.relational_memory.RelationalMemory",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.relational_memory_test.RelationalMemoryTest.testInputErasureWorking": {
  "lineno": 161,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.ones",
   "sonnet.python.modules.relational_memory.RelationalMemory",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.relational_memory_test.RelationalMemoryTest.testMemoryUpdating": {
  "lineno": 138,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.not_equal",
   "numpy.zeros",
   "sonnet.python.modules.relational_memory.RelationalMemory",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.relational_memory_test.RelationalMemoryTest.testOutputStateShapes": {
  "lineno": 42,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.zeros",
   "sonnet.python.modules.relational_memory.RelationalMemory",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.relational_memory_test.RelationalMemoryTest.testRecurrence": {
  "lineno": 70,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "numpy.zeros",
   "sonnet.python.modules.relational_memory.RelationalMemory",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.relational_memory_test.RelationalMemoryTest.testStateSizeOutputSize": {
  "lineno": 31,
  "symbols_in_volume": [
   "sonnet.python.modules.relational_memory.RelationalMemory"
  ],
  "type": "function"
 },
 "sonnet.python.modules.residual": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.contrib.framework.nest"
  ],
  "type": "module"
 },
 "sonnet.python.modules.residual.Residual": {
  "lineno": 29,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.residual.Residual.__init__": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.residual.Residual._build": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.residual.ResidualCore": {
  "lineno": 47,
  "symbols_in_volume": [
   "sonnet.python.modules.rnn_core.RNNCore"
  ],
  "type": "class"
 },
 "sonnet.python.modules.residual.ResidualCore.__init__": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.residual.ResidualCore._build": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.residual.ResidualCore.initial_state": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.residual.ResidualCore.output_size": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.residual.ResidualCore.state_size": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.residual.ResidualCore.zero_state": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.residual.SkipConnectionCore": {
  "lineno": 78,
  "symbols_in_volume": [
   "sonnet.python.modules.rnn_core.RNNCore"
  ],
  "type": "class"
 },
 "sonnet.python.modules.residual.SkipConnectionCore.__init__": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.residual.SkipConnectionCore._build": {
  "lineno": 98,
  "symbols_in_volume": [
   "tensorflow.concat"
  ],
  "type": "function"
 },
 "sonnet.python.modules.residual.SkipConnectionCore.initial_state": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.residual.SkipConnectionCore.output_size": {
  "lineno": 108,
  "symbols_in_volume": [
   "tensorflow.TensorShape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.residual.SkipConnectionCore.state_size": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.residual.SkipConnectionCore.zero_state": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.residual_test": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.modules.residual_test.HeterogeneousStateCore": {
  "lineno": 27,
  "symbols_in_volume": [
   "sonnet.RNNCore"
  ],
  "type": "class"
 },
 "sonnet.python.modules.residual_test.HeterogeneousStateCore.__init__": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.residual_test.HeterogeneousStateCore._build": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.residual_test.HeterogeneousStateCore.initial_state": {
  "lineno": 47,
  "symbols_in_volume": [
   "tensorflow.float32",
   "tensorflow.int32",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.residual_test.HeterogeneousStateCore.output_size": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.residual_test.HeterogeneousStateCore.state_size": {
  "lineno": 42,
  "symbols_in_volume": [
   "tensorflow.TensorShape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.residual_test.ResidualCoreTest": {
  "lineno": 91,
  "symbols_in_volume": [
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.residual_test.ResidualCoreTest.setUp": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.residual_test.ResidualCoreTest.testComputation": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.random.randn",
   "numpy.tanh",
   "sonnet.ResidualCore",
   "sonnet.VanillaRNN",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.residual_test.ResidualCoreTest.testHeterogeneousState": {
  "lineno": 143,
  "symbols_in_volume": [
   "sonnet.ResidualCore"
  ],
  "type": "function"
 },
 "sonnet.python.modules.residual_test.ResidualCoreTest.testShape": {
  "lineno": 98,
  "symbols_in_volume": [
   "numpy.ndarray",
   "sonnet.ResidualCore",
   "sonnet.VanillaRNN",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.residual_test.ResidualTest": {
  "lineno": 52,
  "symbols_in_volume": [
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.residual_test.ResidualTest.setUp": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.residual_test.ResidualTest.testComputation": {
  "lineno": 68,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.random.randn",
   "sonnet.Linear",
   "sonnet.Residual",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.residual_test.ResidualTest.testShape": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.ndarray",
   "sonnet.Linear",
   "sonnet.Residual",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.residual_test.SkipConnectionCoreTest": {
  "lineno": 162,
  "symbols_in_volume": [
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.residual_test.SkipConnectionCoreTest.setUp": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.residual_test.SkipConnectionCoreTest.testComputation": {
  "lineno": 203,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.dot",
   "numpy.random.randn",
   "numpy.tanh",
   "sonnet.SkipConnectionCore",
   "sonnet.VanillaRNN",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.residual_test.SkipConnectionCoreTest.testHeterogeneousState": {
  "lineno": 235,
  "symbols_in_volume": [
   "sonnet.SkipConnectionCore"
  ],
  "type": "function"
 },
 "sonnet.python.modules.residual_test.SkipConnectionCoreTest.testOutputSize": {
  "lineno": 170,
  "symbols_in_volume": [
   "sonnet.SkipConnectionCore",
   "sonnet.VanillaRNN",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.residual_test.SkipConnectionCoreTest.testShape": {
  "lineno": 189,
  "symbols_in_volume": [
   "numpy.ndarray",
   "sonnet.SkipConnectionCore",
   "sonnet.VanillaRNN",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.rnn_core": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.contrib.framework.nest"
  ],
  "type": "module"
 },
 "sonnet.python.modules.rnn_core.RNNCellWrapper": {
  "lineno": 352,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.rnn_core.RNNCellWrapper.__init__": {
  "lineno": 355,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.rnn_core.RNNCellWrapper._build": {
  "lineno": 373,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.rnn_core.RNNCellWrapper.output_size": {
  "lineno": 376,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.rnn_core.RNNCellWrapper.state_size": {
  "lineno": 380,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.rnn_core.RNNCore": {
  "lineno": 170,
  "symbols_in_volume": [
   "abc.ABCMeta",
   "six.add_metaclass",
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.rnn_core.RNNCore._initial_state_scope": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.rnn_core.RNNCore.initial_state": {
  "lineno": 203,
  "symbols_in_volume": [
   "tensorflow.float32",
   "tensorflow.name_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.rnn_core.RNNCore.output_size": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.rnn_core.RNNCore.state_size": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.rnn_core.RNNCore.zero_state": {
  "lineno": 259,
  "symbols_in_volume": [
   "tensorflow.name_scope",
   "tensorflow.python.ops.rnn_cell_impl._zero_state_tensors"
  ],
  "type": "function"
 },
 "sonnet.python.modules.rnn_core.TrainableInitialState": {
  "lineno": 280,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.rnn_core.TrainableInitialState.__init__": {
  "lineno": 298,
  "symbols_in_volume": [
   "warnings.simplefilter",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sonnet.python.modules.rnn_core.TrainableInitialState._build": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.rnn_core._single_learnable_state": {
  "lineno": 44,
  "symbols_in_volume": [
   "tensorflow.assert_equal",
   "tensorflow.constant",
   "tensorflow.control_dependencies",
   "tensorflow.get_variable",
   "tensorflow.reshape",
   "tensorflow.tile",
   "tensorflow.unstack"
  ],
  "type": "function"
 },
 "sonnet.python.modules.rnn_core.trainable_initial_state": {
  "lineno": 92,
  "symbols_in_volume": [
   "six.moves.xrange",
   "sonnet.python.modules.basic.TrainableVariable",
   "tensorflow.TensorShape",
   "tensorflow.tile",
   "tensorflow.zeros_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.rnn_core.with_doc": {
  "lineno": 385,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.rnn_core.with_doc.decorator": {
  "lineno": 399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.rnn_core.with_doc.decorator.wrapping_fn": {
  "lineno": 402,
  "symbols_in_volume": [
   "wrapt.decorator"
  ],
  "type": "function"
 },
 "sonnet.python.modules.rnn_core_test": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.contrib.framework.nest",
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.modules.rnn_core_test.RNNCoreTest": {
  "lineno": 39,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "mock.patch.multiple",
   "sonnet.RNNCore",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.rnn_core_test.RNNCoreTest.testInitialStateTuple": {
  "lineno": 43,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "numpy.empty",
   "numpy.tile",
   "sonnet.RNNCore",
   "sonnet.RNNCore.state_size",
   "tensorflow.constant_initializer",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.rnn_core_test.RNNCoreTest.testRegularizers": {
  "lineno": 90,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.RNNCore",
   "sonnet.RNNCore.state_size",
   "tensorflow.GraphKeys.REGULARIZATION_LOSSES",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.executing_eagerly",
   "tensorflow.float32",
   "tensorflow.get_collection"
  ],
  "type": "function"
 },
 "sonnet.python.modules.rnn_core_test.TrainableInitialState": {
  "lineno": 123,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.rnn_core_test.TrainableInitialState.testBadArguments": {
  "lineno": 176,
  "symbols_in_volume": [
   "sonnet.TrainableInitialState",
   "tensorflow.errors.InvalidArgumentError",
   "tensorflow.global_variables_initializer",
   "tensorflow.random_normal"
  ],
  "type": "function"
 },
 "sonnet.python.modules.rnn_core_test.TrainableInitialState.testInitialStateComputation": {
  "lineno": 125,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "numpy.ones_like",
   "sonnet.TrainableInitialState",
   "tensorflow.assign",
   "tensorflow.fill",
   "tensorflow.global_variables_initializer",
   "tensorflow.ones_like",
   "tensorflow.trainable_variables"
  ],
  "type": "function"
 },
 "sonnet.python.modules.scale_gradient": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.contrib.eager"
  ],
  "type": "module"
 },
 "sonnet.python.modules.scale_gradient._scale_gradient_op": {
  "lineno": 27,
  "symbols_in_volume": [
   "tensorflow.python.framework.function.Defun"
  ],
  "type": "function"
 },
 "sonnet.python.modules.scale_gradient._scale_gradient_op.scale_gradient_backward": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.scale_gradient._scale_gradient_op.scale_gradient_forward": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.scale_gradient.scale_gradient": {
  "lineno": 64,
  "symbols_in_volume": [
   "tensorflow.convert_to_tensor",
   "tensorflow.executing_eagerly",
   "tensorflow.identity",
   "tensorflow.name_scope",
   "tensorflow.stop_gradient"
  ],
  "type": "function"
 },
 "sonnet.python.modules.scale_gradient_test": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.contrib.eager",
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.modules.scale_gradient_test.ScaleGradientTest": {
  "lineno": 32,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.scale_gradient_test.ScaleGradientTest.testOpScale": {
  "lineno": 34,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "itertools.product",
   "sonnet.scale_gradient",
   "tensorflow.float32",
   "tensorflow.gradients",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.scale_gradient_test.ScaleGradientTest.testOpScaleDifferentDtypes": {
  "lineno": 83,
  "symbols_in_volume": [
   "sonnet.scale_gradient",
   "tensorflow.float16",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.scale_gradient_test.ScaleGradientTest.testShape": {
  "lineno": 77,
  "symbols_in_volume": [
   "sonnet.scale_gradient",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.scale_gradient_test.ScaleGradientTest.testTwoOps": {
  "lineno": 58,
  "symbols_in_volume": [
   "sonnet.scale_gradient",
   "tensorflow.float32",
   "tensorflow.gradients",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.sequential": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.python.modules.sequential.Sequential": {
  "lineno": 30,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.sequential.Sequential.__init__": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.sequential.Sequential._build": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.sequential.Sequential.get_variables": {
  "lineno": 113,
  "symbols_in_volume": [
   "tensorflow.logging.warning"
  ],
  "type": "function"
 },
 "sonnet.python.modules.sequential.Sequential.layers": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.sequential_test": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.modules.sequential_test.SequentialTest": {
  "lineno": 29,
  "symbols_in_volume": [
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.sequential_test.SequentialTest.testConstruct": {
  "lineno": 31,
  "symbols_in_volume": [
   "sonnet.Linear",
   "sonnet.Sequential",
   "tensorflow.float32",
   "tensorflow.nn.relu",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.sequential_test.SequentialTest.testConstructError": {
  "lineno": 45,
  "symbols_in_volume": [
   "sonnet.Linear",
   "sonnet.Sequential"
  ],
  "type": "function"
 },
 "sonnet.python.modules.sequential_test.SequentialTest.testCopiesModules": {
  "lineno": 73,
  "symbols_in_volume": [
   "sonnet.Linear",
   "sonnet.Sequential",
   "tensorflow.float32",
   "tensorflow.placeholder",
   "tensorflow.tanh"
  ],
  "type": "function"
 },
 "sonnet.python.modules.sequential_test.SequentialTest.testNameScopeRecording": {
  "lineno": 89,
  "symbols_in_volume": [
   "sonnet.Linear",
   "sonnet.Sequential",
   "tensorflow.float32",
   "tensorflow.name_scope",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.sequential_test.SequentialTest.testNoLayers": {
  "lineno": 109,
  "symbols_in_volume": [
   "collections.Sequence",
   "sonnet.Sequential",
   "tensorflow.constant",
   "tensorflow.identity"
  ],
  "type": "function"
 },
 "sonnet.python.modules.sequential_test.SequentialTest.testNoneFails": {
  "lineno": 84,
  "symbols_in_volume": [
   "sonnet.Sequential"
  ],
  "type": "function"
 },
 "sonnet.python.modules.sequential_test.SequentialTest.testTupleInput": {
  "lineno": 57,
  "symbols_in_volume": [
   "six.PY3",
   "sonnet.Sequential"
  ],
  "type": "function"
 },
 "sonnet.python.modules.sequential_test.SequentialTest.testTupleInput.module1": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.sequential_test.SequentialTest.testTupleInput.module2": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.sequential_test.SequentialTest.testVariableProperties": {
  "lineno": 127,
  "symbols_in_volume": [
   "sonnet.Linear",
   "sonnet.Sequential",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.sequential_test.SequentialTest.testWarning": {
  "lineno": 98,
  "symbols_in_volume": [
   "mock.patch.object",
   "sonnet.Linear",
   "sonnet.Sequential",
   "tensorflow.float32",
   "tensorflow.logging",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.python.modules.spatial_transformer.AffineGridWarper": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.spatial_transformer.AffineGridWarper.__init__": {
  "lineno": 159,
  "symbols_in_volume": [
   "sonnet.python.modules.base.Error"
  ],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineGridWarper._build": {
  "lineno": 274,
  "symbols_in_volume": [
   "numpy.prod",
   "six.moves.xrange",
   "sonnet.python.modules.base.Error",
   "sonnet.python.modules.basic.BatchReshape",
   "tensorflow.concat",
   "tensorflow.constant",
   "tensorflow.expand_dims",
   "tensorflow.matmul",
   "tensorflow.ones_like",
   "tensorflow.shape",
   "tensorflow.tile"
  ],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineGridWarper._build.get_input_slice": {
  "lineno": 300,
  "symbols_in_volume": [
   "sonnet.python.modules.basic.SliceByDim"
  ],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineGridWarper._create_features": {
  "lineno": 214,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineGridWarper.constraints": {
  "lineno": 357,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineGridWarper.inverse": {
  "lineno": 361,
  "symbols_in_volume": [
   "sonnet.python.modules.base.Module",
   "tensorflow.errors.UnimplementedError"
  ],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineGridWarper.inverse._affine_grid_warper_inverse": {
  "lineno": 384,
  "symbols_in_volume": [
   "itertools.chain.from_iterable",
   "sonnet.python.modules.basic.BatchFlatten",
   "sonnet.python.modules.basic.BatchReshape",
   "tensorflow.concat",
   "tensorflow.convert_to_tensor",
   "tensorflow.expand_dims",
   "tensorflow.matmul",
   "tensorflow.shape"
  ],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineGridWarper.inverse._affine_grid_warper_inverse.get_variable": {
  "lineno": 421,
  "symbols_in_volume": [
   "tensorflow.constant",
   "tensorflow.fill"
  ],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints": {
  "lineno": 461,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.__and__": {
  "lineno": 534,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.__getitem__": {
  "lineno": 522,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.__init__": {
  "lineno": 468,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints._calc_mask": {
  "lineno": 495,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints._calc_num_free_params": {
  "lineno": 502,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints._combine": {
  "lineno": 526,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.combine_with": {
  "lineno": 538,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.constraints": {
  "lineno": 514,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.mask": {
  "lineno": 510,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.no_constraints": {
  "lineno": 549,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.no_shear_2d": {
  "lineno": 586,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.no_shear_3d": {
  "lineno": 590,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.num_dim": {
  "lineno": 518,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.num_free_params": {
  "lineno": 506,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.scale_2d": {
  "lineno": 567,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.scale_3d": {
  "lineno": 573,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.shear_2d": {
  "lineno": 580,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.translation_2d": {
  "lineno": 554,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.AffineWarpConstraints.translation_3d": {
  "lineno": 560,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.GridWarper": {
  "lineno": 32,
  "symbols_in_volume": [
   "sonnet.python.modules.base.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.spatial_transformer.GridWarper.__init__": {
  "lineno": 43,
  "symbols_in_volume": [
   "sonnet.python.modules.base.Error"
  ],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.GridWarper._create_features": {
  "lineno": 81,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.GridWarper.n_coeff": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.GridWarper.output_shape": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.GridWarper.psi": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer.GridWarper.source_shape": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer._create_affine_features": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.linspace",
   "numpy.meshgrid",
   "numpy.ones_like",
   "numpy.zeros_like",
   "six.moves.xrange"
  ],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer_test": {
  "lineno": null,
  "symbols_in_volume": [
   "sonnet.AffineWarpConstraints.no_constraints",
   "sonnet.AffineWarpConstraints.no_shear_2d",
   "sonnet.AffineWarpConstraints.no_shear_3d",
   "sonnet.AffineWarpConstraints.scale_2d",
   "sonnet.AffineWarpConstraints.scale_3d",
   "sonnet.AffineWarpConstraints.shear_2d",
   "sonnet.AffineWarpConstraints.translation_2d",
   "sonnet.AffineWarpConstraints.translation_3d",
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.modules.spatial_transformer_test.AffineGridWarperTest": {
  "lineno": 41,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.spatial_transformer_test.AffineGridWarperTest.testIdentity": {
  "lineno": 155,
  "symbols_in_volume": [
   "numpy.array",
   "sonnet.AffineGridWarper",
   "sonnet.AffineWarpConstraints.no_constraints",
   "tensorflow.float64",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer_test.AffineGridWarperTest.testInvSameAsNumPyRef": {
  "lineno": 171,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.random.rand",
   "sonnet.AffineGridWarper",
   "sonnet.AffineWarpConstraints",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer_test.AffineGridWarperTest.testInvSameAsNumPyRef.chain": {
  "lineno": 177,
  "symbols_in_volume": [
   "itertools.chain"
  ],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer_test.AffineGridWarperTest.testInvSameAsNumPyRef.predict": {
  "lineno": 180,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.concatenate",
   "numpy.dot",
   "numpy.float32",
   "numpy.linalg.inv",
   "numpy.linspace",
   "numpy.meshgrid",
   "numpy.ones_like",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer_test.AffineGridWarperTest.testSameAsNumPyReference": {
  "lineno": 94,
  "symbols_in_volume": [
   "absl.testing.parameterized.named_parameters",
   "numpy.random.rand",
   "sonnet.AffineGridWarper",
   "sonnet.AffineWarpConstraints",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer_test.AffineGridWarperTest.testSameAsNumPyReference.chain": {
  "lineno": 110,
  "symbols_in_volume": [
   "itertools.chain"
  ],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer_test.AffineGridWarperTest.testSameAsNumPyReference.predict": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.concatenate",
   "numpy.dot",
   "numpy.float32",
   "numpy.linspace",
   "numpy.meshgrid",
   "numpy.ones_like",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer_test.AffineGridWarperTest.testShapeInferenceAndChecks": {
  "lineno": 43,
  "symbols_in_volume": [
   "sonnet.AffineGridWarper",
   "sonnet.Error",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer_test.AffineWarpConstraintsTest": {
  "lineno": 229,
  "symbols_in_volume": [
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.spatial_transformer_test.AffineWarpConstraintsTest.assertConstraintsEqual": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer_test.AffineWarpConstraintsTest.testConstraintsOperations": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.spatial_transformer_test.AffineWarpConstraintsTest.testCreateMasks": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.python.modules.util._assert_is_dictlike": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util._check_nested_callables": {
  "lineno": 107,
  "symbols_in_volume": [
   "six.iteritems"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util._format_device": {
  "lineno": 509,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util._format_table": {
  "lineno": 461,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util._get_sliced_variables": {
  "lineno": 279,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util._get_vars_to_collections": {
  "lineno": 491,
  "symbols_in_volume": [
   "collections.defaultdict",
   "tensorflow.GraphKeys.GLOBAL_VARIABLES",
   "tensorflow.Variable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util._is_scope_prefix": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util._num_bytes_to_human_readable": {
  "lineno": 583,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util._recursive_getattr": {
  "lineno": 975,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util.check_initializers": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util.check_partitioners": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util.check_regularizers": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util.convert_gradient_to_tensor": {
  "lineno": 912,
  "symbols_in_volume": [
   "tensorflow.convert_to_tensor",
   "tensorflow.python.framework.function.Defun"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util.count_variables_by_type": {
  "lineno": 630,
  "symbols_in_volume": [
   "tensorflow.global_variables",
   "tensorflow.local_variables",
   "tensorflow.logging.warning",
   "tensorflow.string"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util.custom_getter_router": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util.custom_getter_router._custom_getter": {
  "lineno": 335,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util.deprecation_warning": {
  "lineno": 969,
  "symbols_in_volume": [
   "tensorflow.logging.WARN",
   "tensorflow.logging.log_first_n"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util.format_variable_map": {
  "lineno": 550,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util.format_variables": {
  "lineno": 534,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util.get_normalized_variable_map": {
  "lineno": 371,
  "symbols_in_volume": [
   "tensorflow.GraphKeys.GLOBAL_VARIABLES"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util.get_saver": {
  "lineno": 428,
  "symbols_in_volume": [
   "collections",
   "tensorflow.GraphKeys.GLOBAL_VARIABLES",
   "tensorflow.train.Saver"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util.get_variable_scope_name": {
  "lineno": 38,
  "symbols_in_volume": [
   "six.string_types",
   "tensorflow.VariableScope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util.get_variables_in_module": {
  "lineno": 84,
  "symbols_in_volume": [
   "tensorflow.GraphKeys.TRAINABLE_VARIABLES"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util.get_variables_in_scope": {
  "lineno": 61,
  "symbols_in_volume": [
   "re.escape",
   "tensorflow.GraphKeys.TRAINABLE_VARIABLES",
   "tensorflow.get_collection"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util.has_variable_scope": {
  "lineno": 456,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util.log_variables": {
  "lineno": 565,
  "symbols_in_volume": [
   "tensorflow.global_variables",
   "tensorflow.local_variables",
   "tensorflow.logging.info"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util.name_for_callable": {
  "lineno": 881,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util.notify_about_new_variables": {
  "lineno": 940,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "tensorflow.variable_creator_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util.notify_about_new_variables._tracking_creator": {
  "lineno": 960,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util.parse_string_to_constructor": {
  "lineno": 984,
  "symbols_in_volume": [
   "importlib.import_module"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util.remove_unsupported_kwargs": {
  "lineno": 1102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util.reuse_variables": {
  "lineno": 660,
  "symbols_in_volume": [
   "inspect.getargspec",
   "weakref.WeakKeyDictionary"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util.reuse_variables.call_method": {
  "lineno": 745,
  "symbols_in_volume": [
   "tensorflow.executing_eagerly",
   "tensorflow.get_default_graph",
   "tensorflow.init_scope",
   "tensorflow.name_scope",
   "tensorflow.python.ops.variable_scope",
   "tensorflow.python.ops.variable_scope._pure_variable_scope",
   "tensorflow.python.ops.variable_scope.name",
   "wrapt.decorator"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util.reuse_variables.call_method.default_context_manager": {
  "lineno": 821,
  "symbols_in_volume": [
   "tensorflow.python.ops.variable_scope",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util.reuse_variables.eager_test": {
  "lineno": 730,
  "symbols_in_volume": [
   "tensorflow.executing_eagerly",
   "wrapt.decorator"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util.sort_by_name": {
  "lineno": 935,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util.summarize_variables": {
  "lineno": 595,
  "symbols_in_volume": [
   "tensorflow.logging.info"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util.supports_kwargs": {
  "lineno": 1039,
  "symbols_in_volume": [
   "inspect.getargspec",
   "inspect.isfunction",
   "inspect.ismethod",
   "six.string_types"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util.to_snake_case": {
  "lineno": 897,
  "symbols_in_volume": [
   "re.match",
   "re.sub"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util.variable_map_items": {
  "lineno": 471,
  "symbols_in_volume": [
   "six.iteritems"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.modules.util_test.NameFunctionTest": {
  "lineno": 1050,
  "symbols_in_volume": [
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.util_test.NameFunctionTest.assertName": {
  "lineno": 1100,
  "symbols_in_volume": [
   "sonnet.python.modules.util.name_for_callable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.NameFunctionTest.testNameForCallable_Function": {
  "lineno": 1072,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util_test.NameFunctionTest.testNameForCallable_Function.test": {
  "lineno": 1074,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util_test.NameFunctionTest.testNameForCallable_Instance": {
  "lineno": 1091,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util_test.NameFunctionTest.testNameForCallable_Instance.Test": {
  "lineno": 1093,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.util_test.NameFunctionTest.testNameForCallable_Instance.Test.__call__": {
  "lineno": 1095,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util_test.NameFunctionTest.testNameForCallable_Lambda": {
  "lineno": 1079,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util_test.NameFunctionTest.testNameForCallable_Partial": {
  "lineno": 1083,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.NameFunctionTest.testNameForCallable_Partial.test": {
  "lineno": 1085,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util_test.NameFunctionTest.testToSnakeCase": {
  "lineno": 1052,
  "symbols_in_volume": [
   "sonnet.python.modules.util.to_snake_case"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest": {
  "lineno": 633,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.InheritedVariableContainer": {
  "lineno": 648,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.InheritedVariableContainer.not_inherited_method_with_reuse": {
  "lineno": 650,
  "symbols_in_volume": [
   "sonnet.python.modules.util.reuse_variables",
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.ModuleReuse": {
  "lineno": 654,
  "symbols_in_volume": [
   "sonnet.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.ModuleReuse.__init__": {
  "lineno": 656,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.ModuleReuse._build": {
  "lineno": 668,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.ModuleReuse.a": {
  "lineno": 660,
  "symbols_in_volume": [
   "sonnet.python.modules.util.reuse_variables",
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.ModuleReuse.add_b": {
  "lineno": 664,
  "symbols_in_volume": [
   "sonnet.python.modules.util.reuse_variables",
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.VariableContainer": {
  "lineno": 635,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.VariableContainer.__init__": {
  "lineno": 637,
  "symbols_in_volume": [
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.VariableContainer.method_with_reuse": {
  "lineno": 641,
  "symbols_in_volume": [
   "sonnet.python.modules.util.reuse_variables",
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.VariableContainer.method_without_reuse": {
  "lineno": 645,
  "symbols_in_volume": [
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_container_not_supported_in_eager": {
  "lineno": 998,
  "symbols_in_volume": [
   "tensorflow.contrib.eager.run_test_in_graph_and_eager_modes",
   "tensorflow.executing_eagerly"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_defun": {
  "lineno": 1033,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "tensorflow.contrib.eager.defun",
   "tensorflow.global_variables_initializer",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_get_all_variables": {
  "lineno": 671,
  "symbols_in_volume": [
   "numpy.random.seed",
   "sonnet.Sequential",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_multiple_graphs": {
  "lineno": 829,
  "symbols_in_volume": [
   "tensorflow.Graph"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_multiple_objects_per_variable_scope": {
  "lineno": 727,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_name_scopes": {
  "lineno": 853,
  "symbols_in_volume": [
   "tensorflow.name_scope",
   "tensorflow.ones",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_name_scopes.VariableContainerWithOps": {
  "lineno": 855,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_name_scopes.VariableContainerWithOps.add_a": {
  "lineno": 862,
  "symbols_in_volume": [
   "sonnet.python.modules.util.reuse_variables"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_name_scopes.VariableContainerWithOps.add_b": {
  "lineno": 857,
  "symbols_in_volume": [
   "sonnet.python.modules.util.reuse_variables",
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_name_scopes.VariableContainerWithOps.nested_add": {
  "lineno": 866,
  "symbols_in_volume": [
   "sonnet.python.modules.util.reuse_variables",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_name_scopes.get_tensor_names_from_default_graph": {
  "lineno": 870,
  "symbols_in_volume": [
   "tensorflow.get_default_graph"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_reuse_abstract_module": {
  "lineno": 759,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "numpy.random.rand",
   "numpy.random.seed",
   "tensorflow.float32",
   "tensorflow.global_variables_initializer",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_reuse_inherited_method": {
  "lineno": 737,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_reuse_method": {
  "lineno": 709,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_reuse_vars_subgraph_recording": {
  "lineno": 987,
  "symbols_in_volume": [
   "tensorflow.executing_eagerly"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_variable_reuse_defun": {
  "lineno": 1008,
  "symbols_in_volume": [
   "tensorflow.contrib.eager.defun",
   "tensorflow.contrib.eager.run_test_in_graph_and_eager_modes",
   "tensorflow.executing_eagerly"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_variable_reuse_defun.AssigningModule": {
  "lineno": 1013,
  "symbols_in_volume": [
   "sonnet.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_variable_reuse_defun.AssigningModule.assign_a": {
  "lineno": 1016,
  "symbols_in_volume": [
   "sonnet.python.modules.util.reuse_variables",
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_variable_scope_call_order": {
  "lineno": 801,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_variable_scope_call_order.TestModule": {
  "lineno": 803,
  "symbols_in_volume": [
   "sonnet.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_variable_scope_call_order.TestModule.__init__": {
  "lineno": 805,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_variable_scope_call_order.TestModule._build": {
  "lineno": 812,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_variable_scope_call_order.TestModule.a": {
  "lineno": 808,
  "symbols_in_volume": [
   "sonnet.python.modules.util.reuse_variables"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.ReuseVarsTest.test_variable_scope_call_order.TestModule.variable_scope": {
  "lineno": 815,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util_test.TestNotifyAboutVariables": {
  "lineno": 1106,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.util_test.TestNotifyAboutVariables.assertVariableType": {
  "lineno": 1114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util_test.TestNotifyAboutVariables.testGetVariable": {
  "lineno": 1123,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.python.modules.util.notify_about_new_variables",
   "tensorflow.executing_eagerly",
   "tensorflow.get_variable",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.TestNotifyAboutVariables.testNoVariables": {
  "lineno": 1108,
  "symbols_in_volume": [
   "sonnet.python.modules.util.notify_about_new_variables"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.TestNotifyAboutVariables.testVariableCreatingCustomGetter": {
  "lineno": 1135,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "contextlib2.ExitStack",
   "itertools.product",
   "sonnet.python.modules.util.notify_about_new_variables",
   "tensorflow.executing_eagerly",
   "tensorflow.get_variable",
   "tensorflow.python.ops.variable_scope.variable_creator_scope",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.TestNotifyAboutVariables.testVariableCreatingCustomGetter.my_custom_getter": {
  "lineno": 1149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest": {
  "lineno": 50,
  "symbols_in_volume": [
   "absl.testing.parameterized.TestCase",
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.modules.util_test.UtilTest._create_conv": {
  "lineno": 210,
  "symbols_in_volume": [
   "sonnet.Conv2D",
   "tensorflow.ones",
   "tensorflow.variable_axis_size_partitioner"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testCheckInitializers": {
  "lineno": 280,
  "symbols_in_volume": [
   "sonnet.check_initializers",
   "tensorflow.truncated_normal_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testCheckPartitioners": {
  "lineno": 313,
  "symbols_in_volume": [
   "sonnet.check_partitioners",
   "tensorflow.variable_axis_size_partitioner"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testCheckRegularizers": {
  "lineno": 344,
  "symbols_in_volume": [
   "sonnet.check_regularizers",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.contrib.layers.l2_regularizer"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testCollectionGetSaver": {
  "lineno": 254,
  "symbols_in_volume": [
   "sonnet.BatchNorm",
   "sonnet.Linear",
   "sonnet.get_saver",
   "tensorflow.GraphKeys.TRAINABLE_VARIABLES",
   "tensorflow.float32",
   "tensorflow.placeholder",
   "tensorflow.train.Saver",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testCollectionGetVariableInScope": {
  "lineno": 246,
  "symbols_in_volume": [
   "sonnet.get_variables_in_scope",
   "tensorflow.get_variable",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testCountVariablesByType": {
  "lineno": 490,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.count_variables_by_type",
   "tensorflow.float16",
   "tensorflow.float32",
   "tensorflow.float64",
   "tensorflow.get_variable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testFormatVariableMap": {
  "lineno": 416,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.format_variable_map",
   "tensorflow.device",
   "tensorflow.get_local_variable",
   "tensorflow.get_variable",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testFormatVariables": {
  "lineno": 403,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.format_variables",
   "tensorflow.device",
   "tensorflow.get_local_variable",
   "tensorflow.get_variable",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testGetNormalizedVariableMapModule": {
  "lineno": 142,
  "symbols_in_volume": [
   "sonnet.Conv2D",
   "sonnet.get_normalized_variable_map",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testGetNormalizedVariableMapScope": {
  "lineno": 89,
  "symbols_in_volume": [
   "sonnet.get_normalized_variable_map",
   "tensorflow.get_variable",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testGetNormalizedVariableMapScopeContext": {
  "lineno": 102,
  "symbols_in_volume": [
   "sonnet.get_normalized_variable_map",
   "tensorflow.get_variable",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testGetNormalizedVariableMapWithPartitionedVariable": {
  "lineno": 155,
  "symbols_in_volume": [
   "sonnet.Conv2D",
   "sonnet.get_normalized_variable_map",
   "tensorflow.ones",
   "tensorflow.variable_axis_size_partitioner"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testGetSaverModule": {
  "lineno": 201,
  "symbols_in_volume": [
   "sonnet.Conv2D",
   "sonnet.get_saver",
   "tensorflow.float32",
   "tensorflow.placeholder",
   "tensorflow.train.Saver"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testGetSaverPartitioned": {
  "lineno": 221,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "os.path.join",
   "sonnet.get_saver",
   "tempfile.mkdtemp",
   "tensorflow.global_variables_initializer",
   "tensorflow.identity"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testGetSaverScope": {
  "lineno": 192,
  "symbols_in_volume": [
   "sonnet.get_saver",
   "tensorflow.get_variable",
   "tensorflow.train.Saver",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testHasVariableScope": {
  "lineno": 396,
  "symbols_in_volume": [
   "sonnet.Linear",
   "sonnet.has_variable_scope",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testInvalidDicts": {
  "lineno": 377,
  "symbols_in_volume": [
   "sonnet.GRU",
   "sonnet.LSTM",
   "sonnet.VanillaRNN",
   "tensorflow.contrib.layers.l1_regularizer",
   "tensorflow.fixed_size_partitioner",
   "tensorflow.float32",
   "tensorflow.truncated_normal_initializer",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testIsScopePrefix": {
  "lineno": 80,
  "symbols_in_volume": [
   "sonnet.python.modules.util._is_scope_prefix"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testLogVariables": {
  "lineno": 430,
  "symbols_in_volume": [
   "sonnet.log_variables",
   "tensorflow.device",
   "tensorflow.get_default_graph",
   "tensorflow.get_local_variable",
   "tensorflow.get_variable",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testLogVariables_with_arg": {
  "lineno": 439,
  "symbols_in_volume": [
   "sonnet.log_variables",
   "tensorflow.device",
   "tensorflow.get_default_graph",
   "tensorflow.get_local_variable",
   "tensorflow.get_variable",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testModuleSupportsKwargs": {
  "lineno": 525,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.BatchNorm",
   "sonnet.LayerNorm",
   "sonnet.Linear",
   "sonnet.python.modules.util.NOT_SUPPORTED",
   "sonnet.python.modules.util.SUPPORTED",
   "sonnet.supports_kwargs"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testModuleSupportsKwargsMaybe": {
  "lineno": 588,
  "symbols_in_volume": [
   "sonnet.python.modules.util.MAYBE_SUPPORTED",
   "sonnet.python.modules.util.NOT_SUPPORTED",
   "sonnet.python.modules.util.SUPPORTED",
   "sonnet.supports_kwargs"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testModuleSupportsKwargsMaybe.bar": {
  "lineno": 596,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testModuleSupportsKwargsMaybe.foo": {
  "lineno": 589,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testModuleSupportsKwargsReuseVariables": {
  "lineno": 537,
  "symbols_in_volume": [
   "sonnet.python.modules.util.NOT_SUPPORTED",
   "sonnet.python.modules.util.SUPPORTED",
   "sonnet.supports_kwargs"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testModuleSupportsKwargsReuseVariables.ChildModule": {
  "lineno": 566,
  "symbols_in_volume": [],
  "type": "class"
 },
 "sonnet.python.modules.util_test.UtilTest.testModuleSupportsKwargsReuseVariables.ChildModule.a": {
  "lineno": 569,
  "symbols_in_volume": [
   "sonnet.reuse_variables"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testModuleSupportsKwargsReuseVariables.ChildModule.c": {
  "lineno": 573,
  "symbols_in_volume": [
   "sonnet.reuse_variables"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testModuleSupportsKwargsReuseVariables.ParentModule": {
  "lineno": 542,
  "symbols_in_volume": [
   "sonnet.AbstractModule"
  ],
  "type": "class"
 },
 "sonnet.python.modules.util_test.UtilTest.testModuleSupportsKwargsReuseVariables.ParentModule._build": {
  "lineno": 544,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testModuleSupportsKwargsReuseVariables.ParentModule.a": {
  "lineno": 547,
  "symbols_in_volume": [
   "sonnet.reuse_variables"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testModuleSupportsKwargsReuseVariables.ParentModule.b": {
  "lineno": 551,
  "symbols_in_volume": [
   "sonnet.reuse_variables"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testNumBytesToHumanReadable": {
  "lineno": 448,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.python.modules.util._num_bytes_to_human_readable"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testParseStringToConstructor": {
  "lineno": 506,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.LayerNorm",
   "sonnet.nets.ConvNet2D",
   "sonnet.parse_string_to_constructor"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testParseStringToConstructorErrors": {
  "lineno": 517,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.parse_string_to_constructor"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testQueryInModule": {
  "lineno": 52,
  "symbols_in_volume": [
   "sonnet.Error",
   "sonnet.Linear",
   "sonnet.get_variables_in_module",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testRemoveUnsupportedKwargs": {
  "lineno": 603,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "sonnet.BatchNorm",
   "sonnet.Linear",
   "sonnet.nets.MLP",
   "sonnet.remove_unsupported_kwargs"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testRemoveUnsupportedKwargsWithMaybe": {
  "lineno": 616,
  "symbols_in_volume": [
   "sonnet.remove_unsupported_kwargs"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testRemoveUnsupportedKwargsWithMaybe.bar": {
  "lineno": 624,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testRemoveUnsupportedKwargsWithMaybe.foo": {
  "lineno": 617,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testScopeQuery": {
  "lineno": 65,
  "symbols_in_volume": [
   "sonnet.get_variables_in_scope",
   "tensorflow.get_variable",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testSummarizeVariables": {
  "lineno": 463,
  "symbols_in_volume": [
   "absl.testing.parameterized.parameters",
   "mock.patch.object",
   "sonnet.summarize_variables",
   "tensorflow.float32",
   "tensorflow.get_variable",
   "tensorflow.int16",
   "tensorflow.int64",
   "tensorflow.logging"
  ],
  "type": "function"
 },
 "sonnet.python.modules.util_test.UtilTest.testVariableMapItems": {
  "lineno": 175,
  "symbols_in_volume": [
   "sonnet.Conv2D",
   "sonnet.get_normalized_variable_map",
   "sonnet.variable_map_items",
   "tensorflow.ones",
   "tensorflow.variable_axis_size_partitioner"
  ],
  "type": "function"
 },
 "sonnet.python.ops": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.python.ops.initializers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sonnet.python.ops.initializers._Restore": {
  "lineno": 30,
  "symbols_in_volume": [
   "tensorflow.python.ops.init_ops.Initializer"
  ],
  "type": "class"
 },
 "sonnet.python.ops.initializers._Restore.__call__": {
  "lineno": 69,
  "symbols_in_volume": [
   "tensorflow.get_variable_scope",
   "tensorflow.python.ops.io_ops.restore_v2"
  ],
  "type": "function"
 },
 "sonnet.python.ops.initializers._Restore.__init__": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.ops.initializers._Restore._partition_spec": {
  "lineno": 58,
  "symbols_in_volume": [
   "tensorflow.Variable.SaveSliceInfo"
  ],
  "type": "function"
 },
 "sonnet.python.ops.initializers_test": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.ops.initializers_test.RestoreInitializerTest": {
  "lineno": 49,
  "symbols_in_volume": [
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.ops.initializers_test.RestoreInitializerTest.testFromDifferentScope": {
  "lineno": 156,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.linalg.norm",
   "re.sub",
   "sonnet.python.modules.conv.VALID",
   "sonnet.python.modules.nets.convnet.ConvNet2D",
   "sonnet.python.ops.initializers.restore_initializer",
   "tensorflow.constant",
   "tensorflow.get_default_graph",
   "tensorflow.global_variables_initializer",
   "tensorflow.nn.relu",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.ops.initializers_test.RestoreInitializerTest.testMoreMultipleRestore": {
  "lineno": 129,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "sonnet.python.modules.conv.VALID",
   "sonnet.python.modules.nets.convnet.ConvNet2D",
   "sonnet.python.ops.initializers.restore_initializer",
   "tensorflow.constant",
   "tensorflow.get_default_graph",
   "tensorflow.global_variables_initializer",
   "tensorflow.nn.relu",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.ops.initializers_test.RestoreInitializerTest.testMultipleRestore": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "sonnet.python.modules.conv.Conv2D",
   "sonnet.python.modules.conv.VALID",
   "sonnet.python.ops.initializers.restore_initializer",
   "tensorflow.Graph",
   "tensorflow.constant",
   "tensorflow.get_default_graph",
   "tensorflow.global_variables_initializer",
   "tensorflow.nn.relu",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.ops.initializers_test.RestoreInitializerTest.testPartitionedVariable": {
  "lineno": 184,
  "symbols_in_volume": [
   "os.path.join",
   "sonnet.python.ops.initializers.restore_initializer",
   "tensorflow.Graph",
   "tensorflow.bool",
   "tensorflow.device",
   "tensorflow.fixed_size_partitioner",
   "tensorflow.get_variable",
   "tensorflow.global_variables_initializer",
   "tensorflow.train.Saver"
  ],
  "type": "function"
 },
 "sonnet.python.ops.initializers_test.RestoreInitializerTest.testPartitionedVariable.initializer1": {
  "lineno": 191,
  "symbols_in_volume": [
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "sonnet.python.ops.initializers_test.RestoreInitializerTest.testScopeRestore": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "sonnet.python.modules.conv.Conv2D",
   "sonnet.python.modules.conv.VALID",
   "sonnet.python.ops.initializers.restore_initializer",
   "tensorflow.constant",
   "tensorflow.get_default_graph",
   "tensorflow.global_variables_initializer"
  ],
  "type": "function"
 },
 "sonnet.python.ops.initializers_test.RestoreInitializerTest.testSimpleRestore": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "sonnet.python.ops.initializers.restore_initializer",
   "tensorflow.get_variable",
   "tensorflow.global_variables_initializer",
   "tensorflow.variable_scope"
  ],
  "type": "function"
 },
 "sonnet.python.ops.initializers_test.RestoreInitializerTest.testTopLevelVariable": {
  "lineno": 224,
  "symbols_in_volume": [
   "os.path.join",
   "sonnet.python.ops.initializers.restore_initializer",
   "tensorflow.Graph",
   "tensorflow.constant_initializer",
   "tensorflow.get_variable",
   "tensorflow.global_variables_initializer",
   "tensorflow.train.Saver"
  ],
  "type": "function"
 },
 "sonnet.python.ops.initializers_test._checkpoint": {
  "lineno": 36,
  "symbols_in_volume": [
   "os.environ",
   "os.path.join"
  ],
  "type": "function"
 },
 "sonnet.python.ops.nest": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.contrib.framework.nest"
  ],
  "type": "module"
 },
 "sonnet.python.ops.nest.pack_iterable_as": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.ops.nest.with_deprecation_warning": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sonnet.python.ops.nest.with_deprecation_warning.new_fn": {
  "lineno": 35,
  "symbols_in_volume": [
   "tensorflow.logging.warning"
  ],
  "type": "function"
 },
 "sonnet.python.ops.nest_test": {
  "lineno": null,
  "symbols_in_volume": [
   "six.PY3",
   "tensorflow.test.main"
  ],
  "type": "module"
 },
 "sonnet.python.ops.nest_test.NestTest": {
  "lineno": 34,
  "symbols_in_volume": [
   "tensorflow.test.TestCase"
  ],
  "type": "class"
 },
 "sonnet.python.ops.nest_test.NestTest.testEmptySequences": {
  "lineno": 99,
  "symbols_in_volume": [
   "collections.namedtuple",
   "sonnet.python.ops.nest.map"
  ],
  "type": "function"
 },
 "sonnet.python.ops.nest_test.NestTest.testFlattenAndPackIterable": {
  "lineno": 110,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "collections.namedtuple",
   "sonnet.python.ops.nest.flatten_iterable",
   "sonnet.python.ops.nest.pack_iterable_as"
  ],
  "type": "function"
 },
 "sonnet.python.ops.nest_test.NestTest.testFlattenIterable_numpyIsNotFlattened": {
  "lineno": 151,
  "symbols_in_volume": [
   "numpy.array",
   "sonnet.python.ops.nest.flatten_iterable"
  ],
  "type": "function"
 },
 "sonnet.python.ops.nest_test.NestTest.testFlattenIterable_stringIsNotFlattened": {
  "lineno": 156,
  "symbols_in_volume": [
   "sonnet.python.ops.nest.flatten_iterable"
  ],
  "type": "function"
 },
 "sonnet.python.ops.nest_test.NestTest.testFlatternIterable_scalarStructure": {
  "lineno": 161,
  "symbols_in_volume": [
   "sonnet.python.ops.nest.flatten_iterable",
   "sonnet.python.ops.nest.pack_iterable_as"
  ],
  "type": "function"
 },
 "sonnet.python.ops.nest_test.NestTest.testMapOverTwoTuples": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.zeros",
   "sonnet.python.ops.nest.assert_same_structure",
   "sonnet.python.ops.nest.map",
   "tensorflow.float32",
   "tensorflow.placeholder"
  ],
  "type": "function"
 },
 "sonnet.python.ops.nest_test.NestTest.testMapSingleCollection": {
  "lineno": 45,
  "symbols_in_volume": [
   "collections.namedtuple",
   "sonnet.python.ops.nest.assert_same_structure",
   "sonnet.python.ops.nest.map"
  ],
  "type": "function"
 },
 "sonnet.python.ops.nest_test.NestTest.testMultiNest": {
  "lineno": 88,
  "symbols_in_volume": [
   "sonnet.python.ops.nest.map"
  ],
  "type": "function"
 },
 "sonnet.python.ops.nest_test.NestTest.testNoSequences": {
  "lineno": 94,
  "symbols_in_volume": [
   "sonnet.python.ops.nest.map"
  ],
  "type": "function"
 },
 "sonnet.python.ops.nest_test.NestTest.testPackIterableAs_notIterableError": {
  "lineno": 168,
  "symbols_in_volume": [
   "sonnet.python.ops.nest.pack_iterable_as"
  ],
  "type": "function"
 },
 "sonnet.python.ops.nest_test.NestTest.testPackIterableAs_scalarStructureError": {
  "lineno": 173,
  "symbols_in_volume": [
   "sonnet.python.ops.nest.pack_iterable_as"
  ],
  "type": "function"
 },
 "sonnet.python.ops.nest_test.NestTest.testPackIterableAs_wrongLengthsError": {
  "lineno": 178,
  "symbols_in_volume": [
   "sonnet.python.ops.nest.pack_iterable_as"
  ],
  "type": "function"
 },
 "sonnet.python.ops.nest_test.NestTest.testStringRepeat": {
  "lineno": 36,
  "symbols_in_volume": [
   "collections.namedtuple",
   "sonnet.python.ops.nest.map"
  ],
  "type": "function"
 },
 "sonnet.python.ops.nest_test.NestTest.testStructureMustBeSame": {
  "lineno": 81,
  "symbols_in_volume": [
   "sonnet.python.ops.nest.map"
  ],
  "type": "function"
 },
 "sonnet.util.migrate_checkpoint": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.app.flags.DEFINE_boolean",
   "tensorflow.app.flags.DEFINE_string",
   "tensorflow.app.flags.FLAGS",
   "tensorflow.app.run"
  ],
  "type": "module"
 },
 "sonnet.util.migrate_checkpoint._build_migrated_variables": {
  "lineno": 33,
  "symbols_in_volume": [
   "tensorflow.Variable"
  ],
  "type": "function"
 },
 "sonnet.util.migrate_checkpoint.main": {
  "lineno": 69,
  "symbols_in_volume": [
   "tensorflow.Graph",
   "tensorflow.Session",
   "tensorflow.global_variables_initializer",
   "tensorflow.train.NewCheckpointReader",
   "tensorflow.train.Saver"
  ],
  "type": "function"
 },
 "sonnet.util.migrate_checkpoint.remove_colon_zero": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 }
}